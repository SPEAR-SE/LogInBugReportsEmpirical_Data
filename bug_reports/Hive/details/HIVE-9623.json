{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12773546","self":"https://issues.apache.org/jira/rest/api/2/issue/12773546","key":"HIVE-9623","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310843","id":"12310843","key":"HIVE","name":"Hive","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310843&avatarId=11935","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310843&avatarId=11935","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310843&avatarId=11935","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310843&avatarId=11935"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12329345","id":"12329345","description":"Hive 1.2.0","name":"1.2.0","archived":false,"released":true,"releaseDate":"2015-05-18"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2015-02-28T03:28:39.011+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Mon May 18 19:53:48 UTC 2015","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_4502999295_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2015-04-02T22:10:57.070+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-9623/watchers","watchCount":5,"isWatching":false},"created":"2015-02-09T19:20:57.913+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12326450","id":"12326450","description":"released","name":"0.14.0","archived":false,"released":true,"releaseDate":"2014-11-12"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hagleitn","name":"hagleitn","key":"hagleitn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hagleitn&avatarId=16035","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hagleitn&avatarId=16035","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hagleitn&avatarId=16035","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hagleitn&avatarId=16035"},"displayName":"Gunther Hagleitner","active":true,"timeZone":"America/Los_Angeles"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2015-05-18T19:53:48.539+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312586","id":"12312586","name":"Query Processor","description":"Tracks issues dealing with query processing."}],"timeoriginalestimate":null,"description":"Running TPC-DS Q75 against a non-partitioned schema fails with \n{code}\nCaused by: org.apache.hadoop.hive.ql.metadata.HiveException: Unexpected exception: null\n\tat org.apache.hadoop.hive.ql.exec.MapJoinOperator.processOp(MapJoinOperator.java:314)\n\tat org.apache.hadoop.hive.ql.exec.Operator.forward(Operator.java:815)\n\tat org.apache.hadoop.hive.ql.exec.CommonJoinOperator.internalForward(CommonJoinOperator.java:638)\n\tat org.apache.hadoop.hive.ql.exec.CommonJoinOperator.createForwardJoinObject(CommonJoinOperator.java:433)\n\tat org.apache.hadoop.hive.ql.exec.CommonJoinOperator.genObject(CommonJoinOperator.java:525)\n\tat org.apache.hadoop.hive.ql.exec.CommonJoinOperator.genObject(CommonJoinOperator.java:522)\n\tat org.apache.hadoop.hive.ql.exec.CommonJoinOperator.genJoinObject(CommonJoinOperator.java:451)\n\tat org.apache.hadoop.hive.ql.exec.CommonJoinOperator.checkAndGenObject(CommonJoinOperator.java:752)\n\tat org.apache.hadoop.hive.ql.exec.CommonMergeJoinOperator.joinObject(CommonMergeJoinOperator.java:248)\n\tat org.apache.hadoop.hive.ql.exec.CommonMergeJoinOperator.joinOneGroup(CommonMergeJoinOperator.java:213)\n\tat org.apache.hadoop.hive.ql.exec.CommonMergeJoinOperator.processOp(CommonMergeJoinOperator.java:196)\n\tat org.apache.hadoop.hive.ql.exec.tez.ReduceRecordSource$GroupIterator.next(ReduceRecordSource.java:328)\n\t... 16 more\nCaused by: java.lang.NullPointerException\n\tat org.apache.hadoop.hive.ql.exec.MapJoinOperator.processOp(MapJoinOperator.java:253)\n\t... 27 more\n{code}\n\nThis line maps to hashMapRowGetters = new ReusableGetAdaptor[mapJoinTables.length] in the code snippet below\n{code}\n     alias = (byte) tag;\n      if (hashMapRowGetters == null) {\n        hashMapRowGetters = new ReusableGetAdaptor[mapJoinTables.length];\n        MapJoinKey refKey = getRefKey(alias);\n        for (byte pos = 0; pos < order.length; pos++) {\n          if (pos != alias) {\n            hashMapRowGetters[pos] = mapJoinTables[pos].createGetter(refKey);\n          }\n        }\n      }\n{code}\n\nQuery \n{code}\n\nWITH all_sales AS (\n SELECT d_year\n       ,i_brand_id\n       ,i_class_id\n       ,i_category_id\n       ,i_manufact_id\n       ,SUM(sales_cnt) AS sales_cnt\n       ,SUM(sales_amt) AS sales_amt\n FROM (SELECT d_year\n             ,i_brand_id\n             ,i_class_id\n             ,i_category_id\n             ,i_manufact_id\n             ,cs_quantity - COALESCE(cr_return_quantity,0) AS sales_cnt\n             ,cs_ext_sales_price - COALESCE(cr_return_amount,0.0) AS sales_amt\n       FROM catalog_sales JOIN item ON i_item_sk=cs_item_sk\n                          JOIN date_dim ON d_date_sk=cs_sold_date_sk\n                          LEFT JOIN catalog_returns ON (cs_order_number=cr_order_number \n                                                    AND cs_item_sk=cr_item_sk)\n       WHERE i_category='Sports'\n       UNION ALL\n       SELECT d_year\n             ,i_brand_id\n             ,i_class_id\n             ,i_category_id\n             ,i_manufact_id\n             ,ss_quantity - COALESCE(sr_return_quantity,0) AS sales_cnt\n             ,ss_ext_sales_price - COALESCE(sr_return_amt,0.0) AS sales_amt\n       FROM store_sales JOIN item ON i_item_sk=ss_item_sk\n                        JOIN date_dim ON d_date_sk=ss_sold_date_sk\n                        LEFT JOIN store_returns ON (ss_ticket_number=sr_ticket_number \n                                                AND ss_item_sk=sr_item_sk)\n       WHERE i_category='Sports'\n       UNION ALL\n       SELECT d_year\n             ,i_brand_id\n             ,i_class_id\n             ,i_category_id\n             ,i_manufact_id\n             ,ws_quantity - COALESCE(wr_return_quantity,0) AS sales_cnt\n             ,ws_ext_sales_price - COALESCE(wr_return_amt,0.0) AS sales_amt\n       FROM web_sales JOIN item ON i_item_sk=ws_item_sk\n                      JOIN date_dim ON d_date_sk=ws_sold_date_sk\n                      LEFT JOIN web_returns ON (ws_order_number=wr_order_number \n                                            AND ws_item_sk=wr_item_sk)\n       WHERE i_category='Sports') sales_detail\n GROUP BY d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id)\n SELECT  prev_yr.d_year AS prev_year\n                          ,curr_yr.d_year AS year\n                          ,curr_yr.i_brand_id\n                          ,curr_yr.i_class_id\n                          ,curr_yr.i_category_id\n                          ,curr_yr.i_manufact_id\n                          ,prev_yr.sales_cnt AS prev_yr_cnt\n                          ,curr_yr.sales_cnt AS curr_yr_cnt\n                          ,curr_yr.sales_cnt-prev_yr.sales_cnt AS sales_cnt_diff\n                          ,curr_yr.sales_amt-prev_yr.sales_amt AS sales_amt_diff\n FROM all_sales curr_yr, all_sales prev_yr\n WHERE curr_yr.i_brand_id=prev_yr.i_brand_id\n   AND curr_yr.i_class_id=prev_yr.i_class_id\n   AND curr_yr.i_category_id=prev_yr.i_category_id\n   AND curr_yr.i_manufact_id=prev_yr.i_manufact_id\n   AND curr_yr.d_year=2002\n   AND prev_yr.d_year=2002-1\n   AND CAST(curr_yr.sales_cnt AS DECIMAL(17,2))/CAST(prev_yr.sales_cnt AS DECIMAL(17,2))<0.9\n ORDER BY sales_cnt_diff\n limit 100\n{code}\n\nexplain \n{code}\nSTAGE DEPENDENCIES:\n  Stage-1 is a root stage\n  Stage-0 depends on stages: Stage-1\n\nSTAGE PLANS:\n  Stage: Stage-1\n    Tez\n      Edges:\n        Map 1 <- Map 6 (BROADCAST_EDGE)\n        Map 14 <- Map 16 (BROADCAST_EDGE)\n        Map 18 <- Reducer 15 (BROADCAST_EDGE), Union 3 (CONTAINS)\n        Map 19 <- Map 23 (BROADCAST_EDGE)\n        Map 26 <- Map 28 (BROADCAST_EDGE)\n        Map 31 <- Map 33 (BROADCAST_EDGE)\n        Map 35 <- Reducer 32 (BROADCAST_EDGE), Union 21 (CONTAINS)\n        Map 9 <- Map 11 (BROADCAST_EDGE)\n        Reducer 10 <- Map 12 (SIMPLE_EDGE), Map 13 (BROADCAST_EDGE), Map 9 (SIMPLE_EDGE), Union 3 (CONTAINS)\n        Reducer 15 <- Map 14 (SIMPLE_EDGE), Map 17 (SIMPLE_EDGE)\n        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE), Map 8 (BROADCAST_EDGE), Union 3 (CONTAINS)\n        Reducer 20 <- Map 19 (SIMPLE_EDGE), Map 24 (SIMPLE_EDGE), Map 25 (BROADCAST_EDGE), Union 21 (CONTAINS)\n        Reducer 22 <- Union 21 (SIMPLE_EDGE)\n        Reducer 27 <- Map 26 (SIMPLE_EDGE), Map 29 (SIMPLE_EDGE), Map 30 (BROADCAST_EDGE), Union 21 (CONTAINS)\n        Reducer 32 <- Map 31 (SIMPLE_EDGE), Map 34 (SIMPLE_EDGE)\n        Reducer 4 <- Reducer 22 (BROADCAST_EDGE), Union 3 (SIMPLE_EDGE)\n        Reducer 5 <- Reducer 4 (SIMPLE_EDGE)\n      DagName: mmokhtar_20150207174141_8f167b31-c893-4c6e-86d6-855d20744d92:1\n      Vertices:\n        Map 1 \n            Map Operator Tree:\n                TableScan\n                  alias: catalog_sales\n                  filterExpr: (cs_sold_date_sk is not null and cs_item_sk is not null) (type: boolean)\n                  Statistics: Num rows: 817736652 Data size: 16354733056 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: (cs_sold_date_sk is not null and cs_item_sk is not null) (type: boolean)\n                    Statistics: Num rows: 817736652 Data size: 16348976724 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: cs_sold_date_sk (type: int), cs_item_sk (type: int), cs_order_number (type: int), cs_quantity (type: int), cs_ext_sales_price (type: float)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4\n                      Statistics: Num rows: 817736652 Data size: 16348976724 Basic stats: COMPLETE Column stats: COMPLETE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col0 (type: int)\n                          1 _col0 (type: int)\n                        outputColumnNames: _col1, _col2, _col3, _col4, _col6\n                        input vertices:\n                          1 Map 6\n                        Statistics: Num rows: 148779579 Data size: 2380473264 Basic stats: COMPLETE Column stats: COMPLETE\n                        Reduce Output Operator\n                          key expressions: _col2 (type: int), _col1 (type: int)\n                          sort order: ++\n                          Map-reduce partition columns: _col2 (type: int), _col1 (type: int)\n                          Statistics: Num rows: 148779579 Data size: 2380473264 Basic stats: COMPLETE Column stats: COMPLETE\n                          value expressions: _col3 (type: int), _col4 (type: float), _col6 (type: int)\n            Execution mode: vectorized\n        Map 11 \n            Map Operator Tree:\n                TableScan\n                  alias: date_dim\n                  filterExpr: ((d_year = 2002) and d_date_sk is not null) (type: boolean)\n                  Statistics: Num rows: 45363 Data size: 362905 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ((d_year = 2002) and d_date_sk is not null) (type: boolean)\n                    Statistics: Num rows: 405 Data size: 3240 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: d_date_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 405 Data size: 1620 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 405 Data size: 1620 Basic stats: COMPLETE Column stats: COMPLETE\n                        value expressions: 2002 (type: int)\n            Execution mode: vectorized\n        Map 12 \n            Map Operator Tree:\n                TableScan\n                  alias: store_returns\n                  filterExpr: sr_item_sk is not null (type: boolean)\n                  Statistics: Num rows: 167243952 Data size: 2675903232 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: sr_item_sk is not null (type: boolean)\n                    Statistics: Num rows: 167243952 Data size: 2667828428 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: sr_item_sk (type: int), sr_ticket_number (type: int), sr_return_quantity (type: int), sr_return_amt (type: float)\n                      outputColumnNames: _col0, _col1, _col2, _col3\n                      Statistics: Num rows: 167243952 Data size: 2667828428 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col1 (type: int), _col0 (type: int)\n                        sort order: ++\n                        Map-reduce partition columns: _col1 (type: int), _col0 (type: int)\n                        Statistics: Num rows: 167243952 Data size: 2667828428 Basic stats: COMPLETE Column stats: COMPLETE\n                        value expressions: _col2 (type: int), _col3 (type: float)\n            Execution mode: vectorized\n        Map 13 \n            Map Operator Tree:\n                TableScan\n                  alias: item\n                  filterExpr: ((((((i_category = 'Sports') and i_item_sk is not null) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                  Statistics: Num rows: 118835 Data size: 3089722 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ((((((i_category = 'Sports') and i_item_sk is not null) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                    Statistics: Num rows: 11836 Data size: 1301772 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: i_item_sk (type: int), i_brand_id (type: int), i_class_id (type: int), i_category_id (type: int), i_manufact_id (type: int)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col5\n                      Statistics: Num rows: 11836 Data size: 236532 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 11836 Data size: 236532 Basic stats: COMPLETE Column stats: COMPLETE\n                        value expressions: _col1 (type: int), _col2 (type: int), _col3 (type: int), _col5 (type: int)\n            Execution mode: vectorized\n        Map 14 \n            Map Operator Tree:\n                TableScan\n                  alias: web_sales\n                  filterExpr: (ws_sold_date_sk is not null and ws_item_sk is not null) (type: boolean)\n                  Statistics: Num rows: 447759411 Data size: 8955188224 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: (ws_sold_date_sk is not null and ws_item_sk is not null) (type: boolean)\n                    Statistics: Num rows: 447759411 Data size: 8955044072 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: ws_sold_date_sk (type: int), ws_item_sk (type: int), ws_order_number (type: int), ws_quantity (type: int), ws_ext_sales_price (type: float)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4\n                      Statistics: Num rows: 447759411 Data size: 8955044072 Basic stats: COMPLETE Column stats: COMPLETE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col0 (type: int)\n                          1 _col0 (type: int)\n                        outputColumnNames: _col1, _col2, _col3, _col4, _col6\n                        input vertices:\n                          1 Map 16\n                        Statistics: Num rows: 81465661 Data size: 1303450576 Basic stats: COMPLETE Column stats: COMPLETE\n                        Reduce Output Operator\n                          key expressions: _col2 (type: int), _col1 (type: int)\n                          sort order: ++\n                          Map-reduce partition columns: _col2 (type: int), _col1 (type: int)\n                          Statistics: Num rows: 81465661 Data size: 1303450576 Basic stats: COMPLETE Column stats: COMPLETE\n                          value expressions: _col3 (type: int), _col4 (type: float), _col6 (type: int)\n            Execution mode: vectorized\n        Map 16 \n            Map Operator Tree:\n                TableScan\n                  alias: date_dim\n                  filterExpr: ((d_year = 2002) and d_date_sk is not null) (type: boolean)\n                  Statistics: Num rows: 45363 Data size: 362905 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ((d_year = 2002) and d_date_sk is not null) (type: boolean)\n                    Statistics: Num rows: 405 Data size: 3240 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: d_date_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 405 Data size: 1620 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 405 Data size: 1620 Basic stats: COMPLETE Column stats: COMPLETE\n                        value expressions: 2002 (type: int)\n            Execution mode: vectorized\n        Map 17 \n            Map Operator Tree:\n                TableScan\n                  alias: web_returns\n                  filterExpr: wr_item_sk is not null (type: boolean)\n                  Statistics: Num rows: 50457044 Data size: 807312704 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: wr_item_sk is not null (type: boolean)\n                    Statistics: Num rows: 50457044 Data size: 804725540 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: wr_item_sk (type: int), wr_order_number (type: int), wr_return_quantity (type: int), wr_return_amt (type: float)\n                      outputColumnNames: _col0, _col1, _col2, _col3\n                      Statistics: Num rows: 50457044 Data size: 804725540 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col1 (type: int), _col0 (type: int)\n                        sort order: ++\n                        Map-reduce partition columns: _col1 (type: int), _col0 (type: int)\n                        Statistics: Num rows: 50457044 Data size: 804725540 Basic stats: COMPLETE Column stats: COMPLETE\n                        value expressions: _col2 (type: int), _col3 (type: float)\n            Execution mode: vectorized\n        Map 18 \n            Map Operator Tree:\n                TableScan\n                  alias: item\n                  filterExpr: ((((((i_category = 'Sports') and i_item_sk is not null) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                  Filter Operator\n                    predicate: ((((((i_category = 'Sports') and i_item_sk is not null) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                    Select Operator\n                      expressions: i_item_sk (type: int), i_brand_id (type: int), i_class_id (type: int), i_category_id (type: int), i_manufact_id (type: int)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col5\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col1 (type: int)\n                          1 _col0 (type: int)\n                        outputColumnNames: _col3, _col4, _col6, _col9, _col10, _col12, _col13, _col14, _col16\n                        input vertices:\n                          0 Reducer 15\n                        Select Operator\n                          expressions: _col6 (type: int), _col12 (type: int), _col13 (type: int), _col14 (type: int), _col16 (type: int), (_col3 - COALESCE(_col9,0)) (type: int), (UDFToDouble(_col4) - COALESCE(_col10,0.0)) (type: double)\n                          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                          Group By Operator\n                            aggregations: sum(_col5), sum(_col6)\n                            keys: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                            mode: hash\n                            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                            Reduce Output Operator\n                              key expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                              sort order: +++++\n                              Map-reduce partition columns: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                              value expressions: _col5 (type: bigint), _col6 (type: double)\n            Execution mode: vectorized\n        Map 19 \n            Map Operator Tree:\n                TableScan\n                  alias: catalog_sales\n                  filterExpr: (cs_sold_date_sk is not null and cs_item_sk is not null) (type: boolean)\n                  Statistics: Num rows: 817736652 Data size: 16354733056 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: (cs_sold_date_sk is not null and cs_item_sk is not null) (type: boolean)\n                    Statistics: Num rows: 817736652 Data size: 16348976724 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: cs_sold_date_sk (type: int), cs_item_sk (type: int), cs_order_number (type: int), cs_quantity (type: int), cs_ext_sales_price (type: float)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4\n                      Statistics: Num rows: 817736652 Data size: 16348976724 Basic stats: COMPLETE Column stats: COMPLETE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col0 (type: int)\n                          1 _col0 (type: int)\n                        outputColumnNames: _col1, _col2, _col3, _col4, _col6\n                        input vertices:\n                          1 Map 23\n                        Statistics: Num rows: 148779579 Data size: 2380473264 Basic stats: COMPLETE Column stats: COMPLETE\n                        Reduce Output Operator\n                          key expressions: _col2 (type: int), _col1 (type: int)\n                          sort order: ++\n                          Map-reduce partition columns: _col2 (type: int), _col1 (type: int)\n                          Statistics: Num rows: 148779579 Data size: 2380473264 Basic stats: COMPLETE Column stats: COMPLETE\n                          value expressions: _col3 (type: int), _col4 (type: float), _col6 (type: int)\n            Execution mode: vectorized\n        Map 23 \n            Map Operator Tree:\n                TableScan\n                  alias: date_dim\n                  filterExpr: ((d_year = 2001) and d_date_sk is not null) (type: boolean)\n                  Statistics: Num rows: 45363 Data size: 362905 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ((d_year = 2001) and d_date_sk is not null) (type: boolean)\n                    Statistics: Num rows: 405 Data size: 3240 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: d_date_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 405 Data size: 1620 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 405 Data size: 1620 Basic stats: COMPLETE Column stats: COMPLETE\n                        value expressions: 2001 (type: int)\n            Execution mode: vectorized\n        Map 24 \n            Map Operator Tree:\n                TableScan\n                  alias: catalog_returns\n                  filterExpr: cr_item_sk is not null (type: boolean)\n                  Statistics: Num rows: 108409176 Data size: 1734546816 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: cr_item_sk is not null (type: boolean)\n                    Statistics: Num rows: 108409176 Data size: 1729935996 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: cr_item_sk (type: int), cr_order_number (type: int), cr_return_quantity (type: int), cr_return_amount (type: float)\n                      outputColumnNames: _col0, _col1, _col2, _col3\n                      Statistics: Num rows: 108409176 Data size: 1729935996 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col1 (type: int), _col0 (type: int)\n                        sort order: ++\n                        Map-reduce partition columns: _col1 (type: int), _col0 (type: int)\n                        Statistics: Num rows: 108409176 Data size: 1729935996 Basic stats: COMPLETE Column stats: COMPLETE\n                        value expressions: _col2 (type: int), _col3 (type: float)\n            Execution mode: vectorized\n        Map 25 \n            Map Operator Tree:\n                TableScan\n                  alias: item\n                  filterExpr: ((((((i_category = 'Sports') and i_item_sk is not null) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                  Statistics: Num rows: 118835 Data size: 3089722 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ((((((i_category = 'Sports') and i_item_sk is not null) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                    Statistics: Num rows: 11836 Data size: 1301772 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: i_item_sk (type: int), i_brand_id (type: int), i_class_id (type: int), i_category_id (type: int), i_manufact_id (type: int)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col5\n                      Statistics: Num rows: 11836 Data size: 236532 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 11836 Data size: 236532 Basic stats: COMPLETE Column stats: COMPLETE\n                        value expressions: _col1 (type: int), _col2 (type: int), _col3 (type: int), _col5 (type: int)\n            Execution mode: vectorized\n        Map 26 \n            Map Operator Tree:\n                TableScan\n                  alias: store_sales\n                  filterExpr: (ss_sold_date_sk is not null and ss_item_sk is not null) (type: boolean)\n                  Statistics: Num rows: 1174353612 Data size: 23487072256 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: (ss_sold_date_sk is not null and ss_item_sk is not null) (type: boolean)\n                    Statistics: Num rows: 1174353612 Data size: 23383406888 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: ss_sold_date_sk (type: int), ss_item_sk (type: int), ss_ticket_number (type: int), ss_quantity (type: int), ss_ext_sales_price (type: float)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4\n                      Statistics: Num rows: 1174353612 Data size: 23383406888 Basic stats: COMPLETE Column stats: COMPLETE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col0 (type: int)\n                          1 _col0 (type: int)\n                        outputColumnNames: _col1, _col2, _col3, _col4, _col6\n                        input vertices:\n                          1 Map 28\n                        Statistics: Num rows: 213662719 Data size: 3418603504 Basic stats: COMPLETE Column stats: COMPLETE\n                        Reduce Output Operator\n                          key expressions: _col2 (type: int), _col1 (type: int)\n                          sort order: ++\n                          Map-reduce partition columns: _col2 (type: int), _col1 (type: int)\n                          Statistics: Num rows: 213662719 Data size: 3418603504 Basic stats: COMPLETE Column stats: COMPLETE\n                          value expressions: _col3 (type: int), _col4 (type: float), _col6 (type: int)\n            Execution mode: vectorized\n        Map 28 \n            Map Operator Tree:\n                TableScan\n                  alias: date_dim\n                  filterExpr: ((d_year = 2001) and d_date_sk is not null) (type: boolean)\n                  Statistics: Num rows: 45363 Data size: 362905 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ((d_year = 2001) and d_date_sk is not null) (type: boolean)\n                    Statistics: Num rows: 405 Data size: 3240 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: d_date_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 405 Data size: 1620 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 405 Data size: 1620 Basic stats: COMPLETE Column stats: COMPLETE\n                        value expressions: 2001 (type: int)\n            Execution mode: vectorized\n        Map 29 \n            Map Operator Tree:\n                TableScan\n                  alias: store_returns\n                  filterExpr: sr_item_sk is not null (type: boolean)\n                  Statistics: Num rows: 167243952 Data size: 2675903232 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: sr_item_sk is not null (type: boolean)\n                    Statistics: Num rows: 167243952 Data size: 2667828428 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: sr_item_sk (type: int), sr_ticket_number (type: int), sr_return_quantity (type: int), sr_return_amt (type: float)\n                      outputColumnNames: _col0, _col1, _col2, _col3\n                      Statistics: Num rows: 167243952 Data size: 2667828428 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col1 (type: int), _col0 (type: int)\n                        sort order: ++\n                        Map-reduce partition columns: _col1 (type: int), _col0 (type: int)\n                        Statistics: Num rows: 167243952 Data size: 2667828428 Basic stats: COMPLETE Column stats: COMPLETE\n                        value expressions: _col2 (type: int), _col3 (type: float)\n            Execution mode: vectorized\n        Map 30 \n            Map Operator Tree:\n                TableScan\n                  alias: item\n                  filterExpr: ((((((i_category = 'Sports') and i_item_sk is not null) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                  Statistics: Num rows: 118835 Data size: 3089722 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ((((((i_category = 'Sports') and i_item_sk is not null) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                    Statistics: Num rows: 11836 Data size: 1301772 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: i_item_sk (type: int), i_brand_id (type: int), i_class_id (type: int), i_category_id (type: int), i_manufact_id (type: int)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col5\n                      Statistics: Num rows: 11836 Data size: 236532 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 11836 Data size: 236532 Basic stats: COMPLETE Column stats: COMPLETE\n                        value expressions: _col1 (type: int), _col2 (type: int), _col3 (type: int), _col5 (type: int)\n            Execution mode: vectorized\n        Map 31 \n            Map Operator Tree:\n                TableScan\n                  alias: web_sales\n                  filterExpr: (ws_sold_date_sk is not null and ws_item_sk is not null) (type: boolean)\n                  Statistics: Num rows: 447759411 Data size: 8955188224 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: (ws_sold_date_sk is not null and ws_item_sk is not null) (type: boolean)\n                    Statistics: Num rows: 447759411 Data size: 8955044072 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: ws_sold_date_sk (type: int), ws_item_sk (type: int), ws_order_number (type: int), ws_quantity (type: int), ws_ext_sales_price (type: float)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4\n                      Statistics: Num rows: 447759411 Data size: 8955044072 Basic stats: COMPLETE Column stats: COMPLETE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col0 (type: int)\n                          1 _col0 (type: int)\n                        outputColumnNames: _col1, _col2, _col3, _col4, _col6\n                        input vertices:\n                          1 Map 33\n                        Statistics: Num rows: 81465661 Data size: 1303450576 Basic stats: COMPLETE Column stats: COMPLETE\n                        Reduce Output Operator\n                          key expressions: _col2 (type: int), _col1 (type: int)\n                          sort order: ++\n                          Map-reduce partition columns: _col2 (type: int), _col1 (type: int)\n                          Statistics: Num rows: 81465661 Data size: 1303450576 Basic stats: COMPLETE Column stats: COMPLETE\n                          value expressions: _col3 (type: int), _col4 (type: float), _col6 (type: int)\n            Execution mode: vectorized\n        Map 33 \n            Map Operator Tree:\n                TableScan\n                  alias: date_dim\n                  filterExpr: ((d_year = 2001) and d_date_sk is not null) (type: boolean)\n                  Statistics: Num rows: 45363 Data size: 362905 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ((d_year = 2001) and d_date_sk is not null) (type: boolean)\n                    Statistics: Num rows: 405 Data size: 3240 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: d_date_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 405 Data size: 1620 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 405 Data size: 1620 Basic stats: COMPLETE Column stats: COMPLETE\n                        value expressions: 2001 (type: int)\n            Execution mode: vectorized\n        Map 34 \n            Map Operator Tree:\n                TableScan\n                  alias: web_returns\n                  filterExpr: wr_item_sk is not null (type: boolean)\n                  Statistics: Num rows: 50457044 Data size: 807312704 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: wr_item_sk is not null (type: boolean)\n                    Statistics: Num rows: 50457044 Data size: 804725540 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: wr_item_sk (type: int), wr_order_number (type: int), wr_return_quantity (type: int), wr_return_amt (type: float)\n                      outputColumnNames: _col0, _col1, _col2, _col3\n                      Statistics: Num rows: 50457044 Data size: 804725540 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col1 (type: int), _col0 (type: int)\n                        sort order: ++\n                        Map-reduce partition columns: _col1 (type: int), _col0 (type: int)\n                        Statistics: Num rows: 50457044 Data size: 804725540 Basic stats: COMPLETE Column stats: COMPLETE\n                        value expressions: _col2 (type: int), _col3 (type: float)\n            Execution mode: vectorized\n        Map 35 \n            Map Operator Tree:\n                TableScan\n                  alias: item\n                  filterExpr: ((((((i_category = 'Sports') and i_item_sk is not null) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                  Filter Operator\n                    predicate: ((((((i_category = 'Sports') and i_item_sk is not null) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                    Select Operator\n                      expressions: i_item_sk (type: int), i_brand_id (type: int), i_class_id (type: int), i_category_id (type: int), i_manufact_id (type: int)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col5\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col1 (type: int)\n                          1 _col0 (type: int)\n                        outputColumnNames: _col3, _col4, _col6, _col9, _col10, _col12, _col13, _col14, _col16\n                        input vertices:\n                          0 Reducer 32\n                        Select Operator\n                          expressions: _col6 (type: int), _col12 (type: int), _col13 (type: int), _col14 (type: int), _col16 (type: int), (_col3 - COALESCE(_col9,0)) (type: int), (UDFToDouble(_col4) - COALESCE(_col10,0.0)) (type: double)\n                          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                          Group By Operator\n                            aggregations: sum(_col5), sum(_col6)\n                            keys: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                            mode: hash\n                            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                            Reduce Output Operator\n                              key expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                              sort order: +++++\n                              Map-reduce partition columns: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                              value expressions: _col5 (type: bigint), _col6 (type: double)\n            Execution mode: vectorized\n        Map 6 \n            Map Operator Tree:\n                TableScan\n                  alias: date_dim\n                  filterExpr: ((d_year = 2002) and d_date_sk is not null) (type: boolean)\n                  Statistics: Num rows: 45363 Data size: 362905 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ((d_year = 2002) and d_date_sk is not null) (type: boolean)\n                    Statistics: Num rows: 405 Data size: 3240 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: d_date_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 405 Data size: 1620 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 405 Data size: 1620 Basic stats: COMPLETE Column stats: COMPLETE\n                        value expressions: 2002 (type: int)\n            Execution mode: vectorized\n        Map 7 \n            Map Operator Tree:\n                TableScan\n                  alias: catalog_returns\n                  filterExpr: cr_item_sk is not null (type: boolean)\n                  Statistics: Num rows: 108409176 Data size: 1734546816 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: cr_item_sk is not null (type: boolean)\n                    Statistics: Num rows: 108409176 Data size: 1729935996 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: cr_item_sk (type: int), cr_order_number (type: int), cr_return_quantity (type: int), cr_return_amount (type: float)\n                      outputColumnNames: _col0, _col1, _col2, _col3\n                      Statistics: Num rows: 108409176 Data size: 1729935996 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col1 (type: int), _col0 (type: int)\n                        sort order: ++\n                        Map-reduce partition columns: _col1 (type: int), _col0 (type: int)\n                        Statistics: Num rows: 108409176 Data size: 1729935996 Basic stats: COMPLETE Column stats: COMPLETE\n                        value expressions: _col2 (type: int), _col3 (type: float)\n            Execution mode: vectorized\n        Map 8 \n            Map Operator Tree:\n                TableScan\n                  alias: item\n                  filterExpr: ((((((i_category = 'Sports') and i_item_sk is not null) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                  Statistics: Num rows: 118835 Data size: 3089722 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ((((((i_category = 'Sports') and i_item_sk is not null) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                    Statistics: Num rows: 11836 Data size: 1301772 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: i_item_sk (type: int), i_brand_id (type: int), i_class_id (type: int), i_category_id (type: int), i_manufact_id (type: int)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col5\n                      Statistics: Num rows: 11836 Data size: 236532 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 11836 Data size: 236532 Basic stats: COMPLETE Column stats: COMPLETE\n                        value expressions: _col1 (type: int), _col2 (type: int), _col3 (type: int), _col5 (type: int)\n            Execution mode: vectorized\n        Map 9 \n            Map Operator Tree:\n                TableScan\n                  alias: store_sales\n                  filterExpr: (ss_sold_date_sk is not null and ss_item_sk is not null) (type: boolean)\n                  Statistics: Num rows: 1174353612 Data size: 23487072256 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: (ss_sold_date_sk is not null and ss_item_sk is not null) (type: boolean)\n                    Statistics: Num rows: 1174353612 Data size: 23383406888 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: ss_sold_date_sk (type: int), ss_item_sk (type: int), ss_ticket_number (type: int), ss_quantity (type: int), ss_ext_sales_price (type: float)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4\n                      Statistics: Num rows: 1174353612 Data size: 23383406888 Basic stats: COMPLETE Column stats: COMPLETE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col0 (type: int)\n                          1 _col0 (type: int)\n                        outputColumnNames: _col1, _col2, _col3, _col4, _col6\n                        input vertices:\n                          1 Map 11\n                        Statistics: Num rows: 213662719 Data size: 3418603504 Basic stats: COMPLETE Column stats: COMPLETE\n                        Reduce Output Operator\n                          key expressions: _col2 (type: int), _col1 (type: int)\n                          sort order: ++\n                          Map-reduce partition columns: _col2 (type: int), _col1 (type: int)\n                          Statistics: Num rows: 213662719 Data size: 3418603504 Basic stats: COMPLETE Column stats: COMPLETE\n                          value expressions: _col3 (type: int), _col4 (type: float), _col6 (type: int)\n            Execution mode: vectorized\n        Reducer 10 \n            Reduce Operator Tree:\n              Merge Join Operator\n                condition map:\n                     Left Outer Join0 to 1\n                keys:\n                  0 _col2 (type: int), _col1 (type: int)\n                  1 _col1 (type: int), _col0 (type: int)\n                outputColumnNames: _col1, _col3, _col4, _col6, _col9, _col10\n                Map Join Operator\n                  condition map:\n                       Inner Join 0 to 1\n                  keys:\n                    0 _col1 (type: int)\n                    1 _col0 (type: int)\n                  outputColumnNames: _col3, _col4, _col6, _col9, _col10, _col12, _col13, _col14, _col16\n                  input vertices:\n                    1 Map 13\n                  Select Operator\n                    expressions: _col6 (type: int), _col12 (type: int), _col13 (type: int), _col14 (type: int), _col16 (type: int), (_col3 - COALESCE(_col9,0)) (type: int), (UDFToDouble(_col4) - COALESCE(_col10,0.0)) (type: double)\n                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                    Group By Operator\n                      aggregations: sum(_col5), sum(_col6)\n                      keys: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                      mode: hash\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                        sort order: +++++\n                        Map-reduce partition columns: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                        value expressions: _col5 (type: bigint), _col6 (type: double)\n        Reducer 15 \n            Reduce Operator Tree:\n              Merge Join Operator\n                condition map:\n                     Left Outer Join0 to 1\n                keys:\n                  0 _col2 (type: int), _col1 (type: int)\n                  1 _col1 (type: int), _col0 (type: int)\n                outputColumnNames: _col1, _col3, _col4, _col6, _col9, _col10\n                Statistics: Num rows: 8204 Data size: 164080 Basic stats: COMPLETE Column stats: COMPLETE\n                Reduce Output Operator\n                  key expressions: _col1 (type: int)\n                  sort order: +\n                  Map-reduce partition columns: _col1 (type: int)\n                  Statistics: Num rows: 8204 Data size: 164080 Basic stats: COMPLETE Column stats: COMPLETE\n                  value expressions: _col3 (type: int), _col4 (type: float), _col6 (type: int), _col9 (type: int), _col10 (type: float)\n        Reducer 2 \n            Reduce Operator Tree:\n              Merge Join Operator\n                condition map:\n                     Left Outer Join0 to 1\n                keys:\n                  0 _col2 (type: int), _col1 (type: int)\n                  1 _col1 (type: int), _col0 (type: int)\n                outputColumnNames: _col1, _col3, _col4, _col6, _col9, _col10\n                Map Join Operator\n                  condition map:\n                       Inner Join 0 to 1\n                  keys:\n                    0 _col1 (type: int)\n                    1 _col0 (type: int)\n                  outputColumnNames: _col3, _col4, _col6, _col9, _col10, _col12, _col13, _col14, _col16\n                  input vertices:\n                    1 Map 8\n                  Select Operator\n                    expressions: _col6 (type: int), _col12 (type: int), _col13 (type: int), _col14 (type: int), _col16 (type: int), (_col3 - COALESCE(_col9,0)) (type: int), (UDFToDouble(_col4) - COALESCE(_col10,0.0)) (type: double)\n                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                    Group By Operator\n                      aggregations: sum(_col5), sum(_col6)\n                      keys: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                      mode: hash\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                        sort order: +++++\n                        Map-reduce partition columns: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                        value expressions: _col5 (type: bigint), _col6 (type: double)\n        Reducer 20 \n            Reduce Operator Tree:\n              Merge Join Operator\n                condition map:\n                     Left Outer Join0 to 1\n                keys:\n                  0 _col2 (type: int), _col1 (type: int)\n                  1 _col1 (type: int), _col0 (type: int)\n                outputColumnNames: _col1, _col3, _col4, _col6, _col9, _col10\n                Map Join Operator\n                  condition map:\n                       Inner Join 0 to 1\n                  keys:\n                    0 _col1 (type: int)\n                    1 _col0 (type: int)\n                  outputColumnNames: _col3, _col4, _col6, _col9, _col10, _col12, _col13, _col14, _col16\n                  input vertices:\n                    1 Map 25\n                  Select Operator\n                    expressions: _col6 (type: int), _col12 (type: int), _col13 (type: int), _col14 (type: int), _col16 (type: int), (_col3 - COALESCE(_col9,0)) (type: int), (UDFToDouble(_col4) - COALESCE(_col10,0.0)) (type: double)\n                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                    Group By Operator\n                      aggregations: sum(_col5), sum(_col6)\n                      keys: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                      mode: hash\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                        sort order: +++++\n                        Map-reduce partition columns: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                        value expressions: _col5 (type: bigint), _col6 (type: double)\n        Reducer 22 \n            Reduce Operator Tree:\n              Group By Operator\n                aggregations: sum(VALUE._col0), sum(VALUE._col1)\n                keys: KEY._col0 (type: int), KEY._col1 (type: int), KEY._col2 (type: int), KEY._col3 (type: int), KEY._col4 (type: int)\n                mode: mergepartial\n                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE\n                Reduce Output Operator\n                  key expressions: _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                  sort order: ++++\n                  Map-reduce partition columns: _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                  Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE\n                  value expressions: _col0 (type: int), _col5 (type: bigint), _col6 (type: double)\n        Reducer 27 \n            Reduce Operator Tree:\n              Merge Join Operator\n                condition map:\n                     Left Outer Join0 to 1\n                keys:\n                  0 _col2 (type: int), _col1 (type: int)\n                  1 _col1 (type: int), _col0 (type: int)\n                outputColumnNames: _col1, _col3, _col4, _col6, _col9, _col10\n                Map Join Operator\n                  condition map:\n                       Inner Join 0 to 1\n                  keys:\n                    0 _col1 (type: int)\n                    1 _col0 (type: int)\n                  outputColumnNames: _col3, _col4, _col6, _col9, _col10, _col12, _col13, _col14, _col16\n                  input vertices:\n                    1 Map 30\n                  Select Operator\n                    expressions: _col6 (type: int), _col12 (type: int), _col13 (type: int), _col14 (type: int), _col16 (type: int), (_col3 - COALESCE(_col9,0)) (type: int), (UDFToDouble(_col4) - COALESCE(_col10,0.0)) (type: double)\n                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                    Group By Operator\n                      aggregations: sum(_col5), sum(_col6)\n                      keys: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                      mode: hash\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                        sort order: +++++\n                        Map-reduce partition columns: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                        value expressions: _col5 (type: bigint), _col6 (type: double)\n        Reducer 32 \n            Reduce Operator Tree:\n              Merge Join Operator\n                condition map:\n                     Left Outer Join0 to 1\n                keys:\n                  0 _col2 (type: int), _col1 (type: int)\n                  1 _col1 (type: int), _col0 (type: int)\n                outputColumnNames: _col1, _col3, _col4, _col6, _col9, _col10\n                Statistics: Num rows: 8204 Data size: 164080 Basic stats: COMPLETE Column stats: COMPLETE\n                Reduce Output Operator\n                  key expressions: _col1 (type: int)\n                  sort order: +\n                  Map-reduce partition columns: _col1 (type: int)\n                  Statistics: Num rows: 8204 Data size: 164080 Basic stats: COMPLETE Column stats: COMPLETE\n                  value expressions: _col3 (type: int), _col4 (type: float), _col6 (type: int), _col9 (type: int), _col10 (type: float)\n        Reducer 4 \n            Reduce Operator Tree:\n              Group By Operator\n                aggregations: sum(VALUE._col0), sum(VALUE._col1)\n                keys: KEY._col0 (type: int), KEY._col1 (type: int), KEY._col2 (type: int), KEY._col3 (type: int), KEY._col4 (type: int)\n                mode: mergepartial\n                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                Statistics: Num rows: 1 Data size: 16 Basic stats: COMPLETE Column stats: COMPLETE\n                Map Join Operator\n                  condition map:\n                       Inner Join 0 to 1\n                  keys:\n                    0 _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                    1 _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col12, _col13\n                  input vertices:\n                    1 Reducer 22\n                  Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ((CAST( _col5 AS decimal(17,2)) / CAST( _col12 AS decimal(17,2))) < CAST( 0.9 AS decimal(37,20))) (type: boolean)\n                    Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: COMPLETE\n                    Select Operator\n                      expressions: _col7 (type: int), _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int), _col12 (type: bigint), _col5 (type: bigint), (_col5 - _col12) (type: bigint), (_col6 - _col13) (type: double)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9\n                      Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col8 (type: bigint)\n                        sort order: +\n                        Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: COMPLETE\n                        TopN Hash Memory Usage: 0.04\n                        value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int), _col5 (type: int), _col6 (type: bigint), _col7 (type: bigint), _col9 (type: double)\n        Reducer 5 \n            Reduce Operator Tree:\n              Select Operator\n                expressions: VALUE._col0 (type: int), VALUE._col1 (type: int), VALUE._col2 (type: int), VALUE._col3 (type: int), VALUE._col4 (type: int), VALUE._col5 (type: int), VALUE._col6 (type: bigint), VALUE._col7 (type: bigint), KEY.reducesinkkey0 (type: bigint), VALUE._col8 (type: double)\n                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9\n                Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: COMPLETE\n                Limit\n                  Number of rows: 100\n                  Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: COMPLETE\n                  File Output Operator\n                    compressed: false\n                    Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: COMPLETE\n                    table:\n                        input format: org.apache.hadoop.mapred.TextInputFormat\n                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\n                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe\n        Union 21 \n            Vertex: Union 21\n        Union 3 \n            Vertex: Union 3\n\n  Stage: Stage-0\n    Fetch Operator\n      limit: 100\n      Processor Tree:\n        ListSink\n\nTime taken: 12.351 seconds, Fetched: 821 row(s)\n\n{code}","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"NullPointerException in MapJoinOperator.processOp(MapJoinOperator.java:253) for TPC-DS Q75 against un-partitioned schema","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12773546/comment/14341290","id":"14341290","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sgaint","name":"sgaint","key":"sgaint","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"mwu","active":true,"timeZone":"Etc/UTC"},"body":"I got same NPE error when executing HQL as below, however if I disable 'tez' execution engine, the error is gone. Not sure whether it is related with 'tez' engine.\n\nset hive.execution.engine=tez;\n\nINSERT OVERWRITE TABLE temp_cust_trade_flows\nSELECT t.*, m.mcht_name FROM (\n\tSELECT /*+ MAPJOIN(card2custs) */ a.pos_flow_no AS flow_no,        \n\t\t\t'0' AS flow_type,\n\t\t\tb.cust_no,\n\t\t\ta.merch_id,\n\t\t\tb.card_id,\n\t\t\tb.card_type,\n\t\t\ta.tran_time,\n\t\t\ta.trans_type as tran_type,\n\t\t\ta.trans_amount as tran_amount\n\tFROM temp_pos_trade_flows a left join card2custs b ON (a.card_id = b.card_id)\n\tUNION ALL\n\tSELECT /*+ MAPJOIN(card2custs) */ a.flow_no,\n\t\t   '1' AS flow_type,\n\t\t   a.cust_no,\n\t\t   b.merc_no AS merch_id,     \n\t\t   a.acct_no AS card_id,\n\t\t   a.acct_type AS card_type,\n\t\t   concat(a.flat_trad_date, a.flat_trad_time) AS tran_time,\n\t\t   '1021' AS tran_type,\n\t\t   a.amt1 AS tran_amount\n\tFROM temp_online_trade_flows a left join temp_online_trade_flow_details b on(a.flow_no = b.flow_no)\n\tWHERE a.trad_sts = '00'\n) t left join merchant_infos m on(t.merch_id = m.mcht_no);","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sgaint","name":"sgaint","key":"sgaint","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"mwu","active":true,"timeZone":"Etc/UTC"},"created":"2015-02-28T03:28:39.011+0000","updated":"2015-02-28T03:28:39.011+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12773546/comment/14393543","id":"14393543","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hagleitn","name":"hagleitn","key":"hagleitn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hagleitn&avatarId=16035","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hagleitn&avatarId=16035","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hagleitn&avatarId=16035","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hagleitn&avatarId=16035"},"displayName":"Gunther Hagleitner","active":true,"timeZone":"America/Los_Angeles"},"body":"[~mmokhtar] does this still happen on trunk?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hagleitn","name":"hagleitn","key":"hagleitn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hagleitn&avatarId=16035","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hagleitn&avatarId=16035","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hagleitn&avatarId=16035","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hagleitn&avatarId=16035"},"displayName":"Gunther Hagleitner","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-04-02T22:00:09.596+0000","updated":"2015-04-02T22:00:09.596+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12773546/comment/14393567","id":"14393567","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"body":"[~hagleitn]\nQuery runs fine.\nResolved.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-04-02T22:11:16.478+0000","updated":"2015-04-02T22:11:16.478+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12773546/comment/14548934","id":"14548934","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sushanth","name":"sushanth","key":"sushanth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=sushanth&avatarId=26812","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sushanth&avatarId=26812","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sushanth&avatarId=26812","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sushanth&avatarId=26812"},"displayName":"Sushanth Sowmyan","active":true,"timeZone":"America/Los_Angeles"},"body":"This issue has been fixed and released as part of the 1.2.0 release. If you find an issue which seems to be related to this one, please create a new jira and link this one with new jira.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sushanth","name":"sushanth","key":"sushanth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=sushanth&avatarId=26812","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sushanth&avatarId=26812","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sushanth&avatarId=26812","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sushanth&avatarId=26812"},"displayName":"Sushanth Sowmyan","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-05-18T19:53:48.481+0000","updated":"2015-05-18T19:53:48.481+0000"}],"maxResults":4,"total":4,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-9623/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i25dpj:"}}