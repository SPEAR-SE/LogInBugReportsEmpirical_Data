{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12464329","self":"https://issues.apache.org/jira/rest/api/2/issue/12464329","key":"HIVE-1342","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310843","id":"12310843","key":"HIVE","name":"Hive","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310843&avatarId=11935","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310843&avatarId=11935","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310843&avatarId=11935","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310843&avatarId=11935"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12316178","id":"12316178","description":"released","name":"0.8.0","archived":false,"released":true,"releaseDate":"2011-12-16"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2010-06-24T16:15:29.979+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Wed Aug 31 23:46:24 UTC 2011","customfield_12310420":"35820","customfield_12312320":null,"customfield_12310222":"10002_*:*_3_*:*_795217357_*|*_1_*:*_4_*:*_40385501093_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2011-08-31T23:46:24.865+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-1342/watchers","watchCount":1,"isWatching":false},"created":"2010-05-12T08:41:06.467+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.svg","name":"Critical","id":"2"},"labels":[],"customfield_12312333":null,"customfield_12310230":"ppd","customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"8.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12314524","id":"12314524","description":"released","name":"0.6.0","archived":false,"released":true,"releaseDate":"2010-10-29"}],"issuelinks":[{"id":"12342161","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12342161","type":{"id":"10032","name":"Blocker","inward":"is blocked by","outward":"blocks","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10032"},"outwardIssue":{"id":"12498567","key":"HIVE-1989","self":"https://issues.apache.org/jira/rest/api/2/issue/12498567","fields":{"summary":"recognize transitivity of predicates on join keys","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype","name":"Improvement","subtask":false,"avatarId":21140}}}},{"id":"12342252","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12342252","type":{"id":"12310010","name":"Incorporates","inward":"is part of","outward":"incorporates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310010"},"outwardIssue":{"id":"12519059","key":"HIVE-2382","self":"https://issues.apache.org/jira/rest/api/2/issue/12519059","fields":{"summary":"Invalid predicate pushdown from incorrect column expression map for select operator generated by GROUP BY operation","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.svg","name":"Critical","id":"2"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}},{"id":"12342253","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12342253","type":{"id":"12310010","name":"Incorporates","inward":"is part of","outward":"incorporates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310010"},"outwardIssue":{"id":"12519060","key":"HIVE-2383","self":"https://issues.apache.org/jira/rest/api/2/issue/12519060","fields":{"summary":"Incorrect alias filtering for predicate pushdown","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.svg","name":"Critical","id":"2"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=charleschen","name":"charleschen","key":"charleschen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Charles Chen","active":true,"timeZone":"America/Los_Angeles"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-12-16T23:57:06.328+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312586","id":"12312586","name":"Query Processor","description":"Tracks issues dealing with query processing."}],"timeoriginalestimate":null,"description":"Query is over-optimized by PPD when sub-queries have the same alias name, see the query:\n\n-------------------------------\ncreate table if not exists dm_fact_buyer_prd_info_d (\n\t\tcategory_id string\n\t\t,gmv_trade_num  int\n\t\t,user_id    int\n\t\t)\nPARTITIONED BY (ds int);\n\nset hive.optimize.ppd=true;\nset hive.map.aggr=true;\n\nexplain select category_id1,category_id2,assoc_idx\nfrom (\n\t\tselect \n\t\t\tcategory_id1\n\t\t\t, category_id2\n\t\t\t, count(distinct user_id) as assoc_idx\n\t\tfrom (\n\t\t\tselect \n\t\t\t\tt1.category_id as category_id1\n\t\t\t\t, t2.category_id as category_id2\n\t\t\t\t, t1.user_id\n\t\t\tfrom (\n\t\t\t\tselect category_id, user_id\n\t\t\t\tfrom dm_fact_buyer_prd_info_d\n\t\t\t\tgroup by category_id, user_id ) t1\n\t\t\tjoin (\n\t\t\t\tselect category_id, user_id\n\t\t\t\tfrom dm_fact_buyer_prd_info_d\n\t\t\t\tgroup by category_id, user_id ) t2 on t1.user_id=t2.user_id \n\t\t\t) t1\n\t\t\tgroup by category_id1, category_id2 ) t_o\n\t\t\twhere category_id1 <> category_id2\n\t\t\tand assoc_idx > 2;\n\n-----------------------------\nThe query above will fail when execute, throwing exception: \"can not cast UDFOpNotEqual(Text, IntWritable) to UDFOpNotEqual(Text, Text)\". \n\nI explained the query and the execute plan looks really wired ( only Stage-1, see the highlighted predicate):\n\n-------------------------------\nStage: Stage-1\n    Map Reduce\n      Alias -> Map Operator Tree:\n        t_o:t1:t1:dm_fact_buyer_prd_info_d \n          TableScan\n            alias: dm_fact_buyer_prd_info_d\n            Filter Operator\n              predicate:\n                  expr: *(category_id <> user_id)*\n                  type: boolean\n              Select Operator\n                expressions:\n                      expr: category_id\n                      type: string\n                      expr: user_id\n                      type: bigint\n                outputColumnNames: category_id, user_id\n                Group By Operator\n                  keys:\n                        expr: category_id\n                        type: string\n                        expr: user_id\n                        type: bigint\n                  mode: hash\n                  outputColumnNames: _col0, _col1\n                  Reduce Output Operator\n                    key expressions:\n                          expr: _col0\n                          type: string\n                          expr: _col1\n                          type: bigint\n                    sort order: ++\n                    Map-reduce partition columns:\n                          expr: _col0\n                          type: string\n                          expr: _col1\n                          type: bigint\n                    tag: -1\n      Reduce Operator Tree:\n        Group By Operator\n          keys:\n                expr: KEY._col0\n                type: string\n                expr: KEY._col1\n                type: bigint\n          mode: mergepartial\n          outputColumnNames: _col0, _col1\n          Select Operator\n            expressions:\n                  expr: _col0\n                  type: string\n                  expr: _col1\n                  type: bigint\n            outputColumnNames: _col0, _col1\n            File Output Operator\n              compressed: true\n              GlobalTableId: 0\n              table:\n                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat\n                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat\n ----------------------------------\n\nIf disabling predicate push down (set hive.optimize.ppd=true), the error is gone; I tried disabling map side aggregate, the error is gone,too. \n\n*Changing the alias of subquery 't1' (either the inner one or the join result), the bug disappears, too.*\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12444281","id":"12444281","filename":"cmd.hql","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tedxu","name":"tedxu","key":"tedxu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Xu","active":true,"timeZone":"Asia/Shanghai"},"created":"2010-05-12T08:47:41.254+0000","size":857,"mimeType":"application/octet-stream","content":"https://issues.apache.org/jira/secure/attachment/12444281/cmd.hql"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12444282","id":"12444282","filename":"explain","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tedxu","name":"tedxu","key":"tedxu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Xu","active":true,"timeZone":"Asia/Shanghai"},"created":"2010-05-12T08:47:41.322+0000","size":10781,"mimeType":"application/octet-stream","content":"https://issues.apache.org/jira/secure/attachment/12444282/explain"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12489788","id":"12489788","filename":"HIVE-1342v1.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=charleschen","name":"charleschen","key":"charleschen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Charles Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2011-08-09T00:53:05.207+0000","size":15819,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12489788/HIVE-1342v1.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12490224","id":"12490224","filename":"HIVE-1342v2.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=charleschen","name":"charleschen","key":"charleschen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Charles Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2011-08-12T06:15:10.622+0000","size":14890,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12490224/HIVE-1342v2.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12490225","id":"12490225","filename":"HIVE-1342v3.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=charleschen","name":"charleschen","key":"charleschen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Charles Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2011-08-12T06:36:52.220+0000","size":14942,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12490225/HIVE-1342v3.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12490481","id":"12490481","filename":"HIVE-1342v4.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=charleschen","name":"charleschen","key":"charleschen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Charles Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2011-08-15T22:31:23.103+0000","size":31147,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12490481/HIVE-1342v4.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12447675","id":"12447675","filename":"ppd_same_alias_1.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tedxu","name":"tedxu","key":"tedxu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Xu","active":true,"timeZone":"Asia/Shanghai"},"created":"2010-06-22T08:33:59.427+0000","size":14051,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12447675/ppd_same_alias_1.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12448276","id":"12448276","filename":"ppd_same_alias_2.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tedxu","name":"tedxu","key":"tedxu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Xu","active":true,"timeZone":"Asia/Shanghai"},"created":"2010-06-29T05:55:05.528+0000","size":17491,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12448276/ppd_same_alias_2.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"123023","customfield_12312823":null,"summary":"Predicate push down get error result when sub-queries have the same alias name ","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tedxu","name":"tedxu","key":"tedxu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Xu","active":true,"timeZone":"Asia/Shanghai"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tedxu","name":"tedxu","key":"tedxu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Xu","active":true,"timeZone":"Asia/Shanghai"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12464329/comment/12881128","id":"12881128","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tedxu","name":"tedxu","key":"tedxu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Xu","active":true,"timeZone":"Asia/Shanghai"},"body":"I think PPD is unnecessarily resolving table aliases when encountered CommonJoinOperator. \nI attached a patch fixing it. Please have a review.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tedxu","name":"tedxu","key":"tedxu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Xu","active":true,"timeZone":"Asia/Shanghai"},"created":"2010-06-22T08:34:00.101+0000","updated":"2010-06-22T08:34:00.101+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12464329/comment/12882203","id":"12882203","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=he+yongqiang","name":"he yongqiang","key":"he yongqiang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"He Yongqiang","active":true,"timeZone":"Etc/UTC"},"body":"It maybe better if we throw an error message when we see duplicate alias name.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=he+yongqiang","name":"he yongqiang","key":"he yongqiang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"He Yongqiang","active":true,"timeZone":"Etc/UTC"},"created":"2010-06-24T16:15:29.979+0000","updated":"2010-06-24T16:15:29.979+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12464329/comment/12882236","id":"12882236","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"body":"Commentary on duplicate aliases in HIVE-1395.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"created":"2010-06-24T17:36:16.197+0000","updated":"2010-06-24T17:36:16.197+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12464329/comment/12883356","id":"12883356","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"body":"Hi Ted,\n\nI don't think this patch is general enough.  To really fix the problem, it will be necessary to dig into it deeper and find out where we are currently using unscoped aliases (e.g. t2) where we should instead be using scoped aliases (e.g. t_o:t1:t2:dm_fact_buyer_prd_info_d).  I suspect that if you get to the root of the problem, the fix will take care of HIVE-1395 too.\n\nAlso, when submitting a patch, please run diff from the hive trunk directory (not from a subdirectory such as ql).\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"created":"2010-06-28T23:52:32.339+0000","updated":"2010-06-28T23:52:32.339+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12464329/comment/12883421","id":"12883421","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tedxu","name":"tedxu","key":"tedxu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Xu","active":true,"timeZone":"Asia/Shanghai"},"body":"Hi John,\n\nThank you for reviewing the patch. I updated the patch to solve HIVE-1395.\n\nI dig into the code and find that the same alias in different subqueries can be ambiguous only if PPD is parsing CommonJoinOperator, so I just add some special case in PPD for CommonJoinOperator.\n\nAs you mentioned above, adding namespace to RowResolver or OpParseContext can also fix it, but I think we better keep their implementation simple.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tedxu","name":"tedxu","key":"tedxu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Xu","active":true,"timeZone":"Asia/Shanghai"},"created":"2010-06-29T05:55:05.599+0000","updated":"2010-06-29T05:55:05.599+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12464329/comment/12884796","id":"12884796","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"body":"Hmmm....I looked into this one some more.  Let me summarize what I found.\n\nOn trunk as it is today (without this patch), predicate pushdown does not (in general) get optimized when we have a nested select with a join.  For example:\n\n{noformat}\nexplain\nSELECT * FROM (\n    SELECT a.foo as foo1, b.foo as foo2, a.bar\n    FROM pokes a LEFT OUTER JOIN pokes2 b\n    ON a.foo=b.foo) z\nWHERE bar=3;\n\n...\n\nSTAGE PLANS:\n  Stage: Stage-1\n    Map Reduce\n      Alias -> Map Operator Tree:\n        z:a \n          TableScan\n            alias: a\n            Reduce Output Operator\n              key expressions:\n                    expr: foo\n                    type: int\n              sort order: +\n              Map-reduce partition columns:\n                    expr: foo\n                    type: int\n              tag: 0\n              value expressions:\n                    expr: foo\n                    type: int\n                    expr: bar\n                    type: string\n        z:b \n          TableScan\n            alias: b\n            Reduce Output Operator\n              key expressions:\n                    expr: foo\n                    type: int\n              sort order: +\n              Map-reduce partition columns:\n                    expr: foo\n                    type: int\n              tag: 1\n              value expressions:\n                    expr: foo\n                    type: int\n      Reduce Operator Tree:\n        Join Operator\n          condition map:\n               Left Outer Join0 to 1\n          condition expressions:\n            0 {VALUE._col0} {VALUE._col1}\n            1 {VALUE._col0}\n          handleSkewJoin: false\n          outputColumnNames: _col0, _col1, _col2\n          Select Operator\n            expressions:\n                  expr: _col0\n                  type: int\n                  expr: _col2\n                  type: int\n                  expr: _col1\n                  type: string\n            outputColumnNames: _col0, _col1, _col2\n            Filter Operator\n              predicate:\n                  expr: (_col2 = 3)\n                  type: boolean\n              Select Operator\n                expressions:\n                      expr: _col0\n                      type: int\n                      expr: _col1\n                      type: int\n                      expr: _col2\n                      type: string\n                outputColumnNames: _col0, _col1, _col2\n                File Output Operator\n                  compressed: false\n                  GlobalTableId: 0\n                  table:\n                      input format: org.apache.hadoop.mapred.TextInputFormat\n                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\n\n  Stage: Stage-0\n    Fetch Operator\n      limit: -1\n\n{noformat}\n\nHowever, it does kick in (sometimes correctly, sometimes incorrectly) in the special case where aliases are reused.  For example, it happens to work correctly for a query like this:\n\n{noformat}\nexplain\nSELECT * FROM (\n    SELECT a.foo as foo1, b.foo as foo2, a.bar\n    FROM pokes a LEFT OUTER JOIN pokes2 b\n    ON a.foo=b.foo) a\nWHERE a.bar=3;\n{noformat}\n\nBut in cases like the original ones in the bug reports, it gets applied incorrectly.\n\nTed's patch attempts to limit the damage by uniformly preventing the optimization from applying for the pattern of nested select over join (regardless of whether aliases have been reused).\n\nIf this is the best we can do for 0.6, then we'll have to live with that and then open another issue for correcting the real problem so that we can get full optimization (particularly for views).\n\nI don't think it's a question of keeping the implementation simple; the patch as is does not fix the optimization, it just disables it.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-02T20:16:27.906+0000","updated":"2010-07-02T20:16:27.906+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12464329/comment/12885101","id":"12885101","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tedxu","name":"tedxu","key":"tedxu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Xu","active":true,"timeZone":"Asia/Shanghai"},"body":"The patch is not simply disables PPD, when encountered the special case (nested select over join) . It prevents replicated table resolve.\n\nI tried the query above and it seems fine with the patch, that is, the predicate can be pushed into the subquery. The explain result is shown below:\n\n{code}\nSTAGE PLANS:\n\n  Stage: Stage-1\n    Map Reduce\n\n      Alias -> Map Operator Tree:\n\n        z:a \n\n          TableScan\n\n            alias: a\n\n            Reduce Output Operator\n\n              key expressions:\n\n                    expr: foo\n\n                    type: string\n\n              sort order: +\n\n              Map-reduce partition columns:\n\n                    expr: foo\n\n                    type: string\n\n              tag: 0\n\n              value expressions:\n\n                    expr: foo\n\n                    type: string\n\n                    expr: bar\n\n                    type: string\n\n        z:b \n\n          TableScan\n\n            alias: b\n\n            Filter Operator\n\n              predicate:\n\n                  expr: (UDFToDouble(foo) = UDFToDouble(3))\n\n                  type: boolean\n\n              Reduce Output Operator\n\n                key expressions:\n\n                      expr: foo\n\n                      type: string\n\n                sort order: +\n\n                Map-reduce partition columns:\n\n                      expr: foo\n\n                      type: string\n\n                tag: 1\n\n                value expressions:\n\n                      expr: foo\n\n                      type: string\n\n      Reduce Operator Tree:\n\n        Join Operator\n\n          condition map:\n\n               Left Outer Join0 to 1\n\n          condition expressions:\n\n            0 {VALUE._col0} {VALUE._col1}\n\n            1 {VALUE._col0}\n\n          outputColumnNames: _col0, _col1, _col2\n\n          Select Operator\n\n            expressions:\n\n                  expr: _col0\n\n                  type: string\n\n                  expr: _col2\n\n                  type: string\n\n                  expr: _col1\n\n                  type: string\n\n            outputColumnNames: _col0, _col1, _col2\n\n            Filter Operator\n\n              predicate:\n\n                  expr: (UDFToDouble(_col2) = UDFToDouble(3))\n\n                  type: boolean\n\n              Select Operator\n\n                expressions:\n\n                      expr: _col0\n\n                      type: string\n\n                      expr: _col1\n\n                      type: string\n\n                      expr: _col2\n\n                      type: string\n\n                outputColumnNames: _col0, _col1, _col2\n\n                File Output Operator\n\n                  compressed: false\n\n                  GlobalTableId: 0\n\n                  table:\n\n                      input format: org.apache.hadoop.mapred.TextInputFormat\n\n                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\n\n\n\n  Stage: Stage-0\n    Fetch Operator\n\n      limit: -1\n{code}\n\nI think the reason why trunk version cannot push predicate into the subquery is that it did a replicated table resolve therefore can't find any table suitable for that predicate, not disabling PPD purposely.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tedxu","name":"tedxu","key":"tedxu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Xu","active":true,"timeZone":"Asia/Shanghai"},"created":"2010-07-05T04:08:44.735+0000","updated":"2010-07-05T04:08:44.735+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12464329/comment/12910336","id":"12910336","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"body":"Finallly got back to this one.  Let me provide some specific examples to better explain what I wrote.\n\nFirst, latest trunk without any patch.\n\n{noformat}\n-- Q1.trunk:  Without a nested select, the plan is correct for this query.\n-- (we're not allowed to push filter down into null-generating side of outer join)\nhive> explain\n    > SELECT a.foo as foo1, b.foo as foo2, b.bar\n    > FROM pokes a LEFT OUTER JOIN pokes2 b\n    > ON a.foo=b.foo\n    > WHERE b.bar=3;\nOK\nABSTRACT SYNTAX TREE:\n  (TOK_QUERY (TOK_FROM (TOK_LEFTOUTERJOIN (TOK_TABREF pokes a) (TOK_TABREF pokes2 b) (= (. (TOK_TABLE_OR_COL a) foo) (. (TOK_TABLE_OR_COL b) foo)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) foo) foo1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) foo) foo2) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) bar))) (TOK_WHERE (= (. (TOK_TABLE_OR_COL b) bar) 3))))\n\nSTAGE DEPENDENCIES:\n  Stage-1 is a root stage\n  Stage-0 is a root stage\n\nSTAGE PLANS:\n  Stage: Stage-1\n    Map Reduce\n      Alias -> Map Operator Tree:\n        a \n          TableScan\n            alias: a\n            Reduce Output Operator\n              key expressions:\n                    expr: foo\n                    type: int\n              sort order: +\n              Map-reduce partition columns:\n                    expr: foo\n                    type: int\n              tag: 0\n              value expressions:\n                    expr: foo\n                    type: int\n        b \n          TableScan\n            alias: b\n            Reduce Output Operator\n              key expressions:\n                    expr: foo\n                    type: int\n              sort order: +\n              Map-reduce partition columns:\n                    expr: foo\n                    type: int\n              tag: 1\n              value expressions:\n                    expr: foo\n                    type: int\n                    expr: bar\n                    type: string\n      Reduce Operator Tree:\n        Join Operator\n          condition map:\n               Left Outer Join0 to 1\n          condition expressions:\n            0 {VALUE._col0}\n            1 {VALUE._col0} {VALUE._col1}\n          handleSkewJoin: false\n          outputColumnNames: _col0, _col4, _col5\n          Filter Operator\n            predicate:\n                expr: (_col5 = 3)\n                type: boolean\n            Select Operator\n              expressions:\n                    expr: _col0\n                    type: int\n                    expr: _col4\n                    type: int\n                    expr: _col5\n                    type: string\n              outputColumnNames: _col0, _col1, _col2\n              File Output Operator\n                compressed: false\n                GlobalTableId: 0\n                table:\n                    input format: org.apache.hadoop.mapred.TextInputFormat\n                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\n\n  Stage: Stage-0\n    Fetch Operator\n      limit: -1\n\n-- Q2.trunk:  For this equivalent query written using a nested select, the plan is incorrect.\n-- (filter got pushed down when it shouldn't; note that in the wrapping select, a.bar should resolve to b.bar in the nested select)\nhive> explain\n    > SELECT * FROM\n    >     (SELECT a.foo as foo1, b.foo as foo2, b.bar\n    >     FROM pokes a LEFT OUTER JOIN pokes2 b\n    >     ON a.foo=b.foo) a\n    > WHERE a.bar=3;\nOK\nABSTRACT SYNTAX TREE:\n  (TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_LEFTOUTERJOIN (TOK_TABREF pokes a) (TOK_TABREF pokes2 b) (= (. (TOK_TABLE_OR_COL a) foo) (. (TOK_TABLE_OR_COL b) foo)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) foo) foo1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) foo) foo2) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) bar))))) a)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)) (TOK_WHERE (= (. (TOK_TABLE_OR_COL a) bar) 3))))\n\nSTAGE DEPENDENCIES:\n  Stage-1 is a root stage\n  Stage-0 is a root stage\n\nSTAGE PLANS:\n  Stage: Stage-1\n    Map Reduce\n      Alias -> Map Operator Tree:\n        a:a \n          TableScan\n            alias: a\n            Reduce Output Operator\n              key expressions:\n                    expr: foo\n                    type: int\n              sort order: +\n              Map-reduce partition columns:\n                    expr: foo\n                    type: int\n              tag: 0\n              value expressions:\n                    expr: foo\n                    type: int\n        a:b \n          TableScan\n            alias: b\n            Filter Operator\n              predicate:\n                  expr: (bar = 3)\n                  type: boolean\n              Reduce Output Operator\n                key expressions:\n                      expr: foo\n                      type: int\n                sort order: +\n                Map-reduce partition columns:\n                      expr: foo\n                      type: int\n                tag: 1\n                value expressions:\n                      expr: foo\n                      type: int\n                      expr: bar\n                      type: string\n      Reduce Operator Tree:\n        Join Operator\n          condition map:\n               Left Outer Join0 to 1\n          condition expressions:\n            0 {VALUE._col0}\n            1 {VALUE._col0} {VALUE._col1}\n          handleSkewJoin: false\n          outputColumnNames: _col0, _col4, _col5\n          Select Operator\n            expressions:\n                  expr: _col0\n                  type: int\n                  expr: _col4\n                  type: int\n                  expr: _col5\n                  type: string\n            outputColumnNames: _col0, _col1, _col2\n            Filter Operator\n              predicate:\n                  expr: (_col2 = 3)\n                  type: boolean\n              Select Operator\n                expressions:\n                      expr: _col0\n                      type: int\n                      expr: _col1\n                      type: int\n                      expr: _col2\n                      type: string\n                outputColumnNames: _col0, _col1, _col2\n                File Output Operator\n                  compressed: false\n                  GlobalTableId: 0\n                  table:\n                      input format: org.apache.hadoop.mapred.TextInputFormat\n                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\n\n  Stage: Stage-0\n    Fetch Operator\n      limit: -1\n\n-- Q3.trunk:  However, for this semantically different case, the plan is correct.\n-- (we're allowed to push the filter down for an inner join)\nhive> \n    > explain\n    > SELECT * FROM\n    >     (SELECT a.foo as foo1, b.foo as foo2, a.bar\n    >     FROM pokes a JOIN pokes2 b\n    >     ON a.foo=b.foo) a\n    > WHERE a.bar=3;\nOK\nABSTRACT SYNTAX TREE:\n  (TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_JOIN (TOK_TABREF pokes a) (TOK_TABREF pokes2 b) (= (. (TOK_TABLE_OR_COL a) foo) (. (TOK_TABLE_OR_COL b) foo)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) foo) foo1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) foo) foo2) (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) bar))))) a)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)) (TOK_WHERE (= (. (TOK_TABLE_OR_COL a) bar) 3))))\n\nSTAGE DEPENDENCIES:\n  Stage-1 is a root stage\n  Stage-0 is a root stage\n\nSTAGE PLANS:\n  Stage: Stage-1\n    Map Reduce\n      Alias -> Map Operator Tree:\n        a:a \n          TableScan\n            alias: a\n            Filter Operator\n              predicate:\n                  expr: (bar = 3)\n                  type: boolean\n              Reduce Output Operator\n                key expressions:\n                      expr: foo\n                      type: int\n                sort order: +\n                Map-reduce partition columns:\n                      expr: foo\n                      type: int\n                tag: 0\n                value expressions:\n                      expr: foo\n                      type: int\n                      expr: bar\n                      type: string\n        a:b \n          TableScan\n            alias: b\n            Reduce Output Operator\n              key expressions:\n                    expr: foo\n                    type: int\n              sort order: +\n              Map-reduce partition columns:\n                    expr: foo\n                    type: int\n              tag: 1\n              value expressions:\n                    expr: foo\n                    type: int\n      Reduce Operator Tree:\n        Join Operator\n          condition map:\n               Inner Join 0 to 1\n          condition expressions:\n            0 {VALUE._col0} {VALUE._col1}\n            1 {VALUE._col0}\n          handleSkewJoin: false\n          outputColumnNames: _col0, _col1, _col4\n          Select Operator\n            expressions:\n                  expr: _col0\n                  type: int\n                  expr: _col4\n                  type: int\n                  expr: _col1\n                  type: string\n            outputColumnNames: _col0, _col1, _col2\n            Filter Operator\n              predicate:\n                  expr: (_col2 = 3)\n                  type: boolean\n              Select Operator\n                expressions:\n                      expr: _col0\n                      type: int\n                      expr: _col1\n                      type: int\n                      expr: _col2\n                      type: string\n                outputColumnNames: _col0, _col1, _col2\n                File Output Operator\n                  compressed: false\n                  GlobalTableId: 0\n                  table:\n                      input format: org.apache.hadoop.mapred.TextInputFormat\n                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\n\n  Stage: Stage-0\n    Fetch Operator\n      limit: -1\n{noformat}\n\nNow, repeating Q1/Q2/Q3 with the patch:\n\n{noformat}\n\n-- Q1.patch:  this plan is good\n-- (same result as Q1.trunk, as expected)\nhive> explain\n    > SELECT a.foo as foo1, b.foo as foo2, b.bar\n    > FROM pokes a LEFT OUTER JOIN pokes2 b\n    > ON a.foo=b.foo\n    > WHERE b.bar=3;\nOK\nABSTRACT SYNTAX TREE:\n  (TOK_QUERY (TOK_FROM (TOK_LEFTOUTERJOIN (TOK_TABREF pokes a) (TOK_TABREF pokes2 b) (= (. (TOK_TABLE_OR_COL a) foo) (. (TOK_TABLE_OR_COL b) foo)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) foo) foo1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) foo) foo2) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) bar))) (TOK_WHERE (= (. (TOK_TABLE_OR_COL b) bar) 3))))\n\nSTAGE DEPENDENCIES:\n  Stage-1 is a root stage\n  Stage-0 is a root stage\n\nSTAGE PLANS:\n  Stage: Stage-1\n    Map Reduce\n      Alias -> Map Operator Tree:\n        a \n          TableScan\n            alias: a\n            Reduce Output Operator\n              key expressions:\n                    expr: foo\n                    type: int\n              sort order: +\n              Map-reduce partition columns:\n                    expr: foo\n                    type: int\n              tag: 0\n              value expressions:\n                    expr: foo\n                    type: int\n        b \n          TableScan\n            alias: b\n            Reduce Output Operator\n              key expressions:\n                    expr: foo\n                    type: int\n              sort order: +\n              Map-reduce partition columns:\n                    expr: foo\n                    type: int\n              tag: 1\n              value expressions:\n                    expr: foo\n                    type: int\n                    expr: bar\n                    type: string\n      Reduce Operator Tree:\n        Join Operator\n          condition map:\n               Left Outer Join0 to 1\n          condition expressions:\n            0 {VALUE._col0}\n            1 {VALUE._col0} {VALUE._col1}\n          handleSkewJoin: false\n          outputColumnNames: _col0, _col4, _col5\n          Filter Operator\n            predicate:\n                expr: (_col5 = 3)\n                type: boolean\n            Select Operator\n              expressions:\n                    expr: _col0\n                    type: int\n                    expr: _col4\n                    type: int\n                    expr: _col5\n                    type: string\n              outputColumnNames: _col0, _col1, _col2\n              File Output Operator\n                compressed: false\n                GlobalTableId: 0\n                table:\n                    input format: org.apache.hadoop.mapred.TextInputFormat\n                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\n\n  Stage: Stage-0\n    Fetch Operator\n      limit: -1\n\n-- Q2.patch:  this time, the plan is good (no pushdown)\n-- (the patch fixes the bug exhibited on trunk)\nhive> explain\n    > SELECT * FROM\n    >     (SELECT a.foo as foo1, b.foo as foo2, b.bar\n    >     FROM pokes a LEFT OUTER JOIN pokes2 b\n    >     ON a.foo=b.foo) a\n    > WHERE a.bar=3;\nOK\nABSTRACT SYNTAX TREE:\n  (TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_LEFTOUTERJOIN (TOK_TABREF pokes a) (TOK_TABREF pokes2 b) (= (. (TOK_TABLE_OR_COL a) foo) (. (TOK_TABLE_OR_COL b) foo)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) foo) foo1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) foo) foo2) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) bar))))) a)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)) (TOK_WHERE (= (. (TOK_TABLE_OR_COL a) bar) 3))))\n\nSTAGE DEPENDENCIES:\n  Stage-1 is a root stage\n  Stage-0 is a root stage\n\nSTAGE PLANS:\n  Stage: Stage-1\n    Map Reduce\n      Alias -> Map Operator Tree:\n        a:a \n          TableScan\n            alias: a\n            Reduce Output Operator\n              key expressions:\n                    expr: foo\n                    type: int\n              sort order: +\n              Map-reduce partition columns:\n                    expr: foo\n                    type: int\n              tag: 0\n              value expressions:\n                    expr: foo\n                    type: int\n        a:b \n          TableScan\n            alias: b\n            Reduce Output Operator\n              key expressions:\n                    expr: foo\n                    type: int\n              sort order: +\n              Map-reduce partition columns:\n                    expr: foo\n                    type: int\n              tag: 1\n              value expressions:\n                    expr: foo\n                    type: int\n                    expr: bar\n                    type: string\n      Reduce Operator Tree:\n        Join Operator\n          condition map:\n               Left Outer Join0 to 1\n          condition expressions:\n            0 {VALUE._col0}\n            1 {VALUE._col0} {VALUE._col1}\n          handleSkewJoin: false\n          outputColumnNames: _col0, _col4, _col5\n          Select Operator\n            expressions:\n                  expr: _col0\n                  type: int\n                  expr: _col4\n                  type: int\n                  expr: _col5\n                  type: string\n            outputColumnNames: _col0, _col1, _col2\n            Filter Operator\n              predicate:\n                  expr: (_col2 = 3)\n                  type: boolean\n              Select Operator\n                expressions:\n                      expr: _col0\n                      type: int\n                      expr: _col1\n                      type: int\n                      expr: _col2\n                      type: string\n                outputColumnNames: _col0, _col1, _col2\n                File Output Operator\n                  compressed: false\n                  GlobalTableId: 0\n                  table:\n                      input format: org.apache.hadoop.mapred.TextInputFormat\n                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\n\n  Stage: Stage-0\n    Fetch Operator\n      limit: -1\n\n-- Q3.patch:  whoops, now the plan is valid but suboptimal since the filter pushdown did not happen\n-- (whereas it did with trunk)\nhive> explain\n    > SELECT * FROM\n    >     (SELECT a.foo as foo1, b.foo as foo2, a.bar\n    >     FROM pokes a JOIN pokes2 b\n    >     ON a.foo=b.foo) a\n    > WHERE a.bar=3;\nOK\nABSTRACT SYNTAX TREE:\n  (TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_JOIN (TOK_TABREF pokes a) (TOK_TABREF pokes2 b) (= (. (TOK_TABLE_OR_COL a) foo) (. (TOK_TABLE_OR_COL b) foo)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) foo) foo1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) foo) foo2) (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) bar))))) a)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)) (TOK_WHERE (= (. (TOK_TABLE_OR_COL a) bar) 3))))\n\nSTAGE DEPENDENCIES:\n  Stage-1 is a root stage\n  Stage-0 is a root stage\n\nSTAGE PLANS:\n  Stage: Stage-1\n    Map Reduce\n      Alias -> Map Operator Tree:\n        a:a \n          TableScan\n            alias: a\n            Reduce Output Operator\n              key expressions:\n                    expr: foo\n                    type: int\n              sort order: +\n              Map-reduce partition columns:\n                    expr: foo\n                    type: int\n              tag: 0\n              value expressions:\n                    expr: foo\n                    type: int\n                    expr: bar\n                    type: string\n        a:b \n          TableScan\n            alias: b\n            Reduce Output Operator\n              key expressions:\n                    expr: foo\n                    type: int\n              sort order: +\n              Map-reduce partition columns:\n                    expr: foo\n                    type: int\n              tag: 1\n              value expressions:\n                    expr: foo\n                    type: int\n      Reduce Operator Tree:\n        Join Operator\n          condition map:\n               Inner Join 0 to 1\n          condition expressions:\n            0 {VALUE._col0} {VALUE._col1}\n            1 {VALUE._col0}\n          handleSkewJoin: false\n          outputColumnNames: _col0, _col1, _col4\n          Select Operator\n            expressions:\n                  expr: _col0\n                  type: int\n                  expr: _col4\n                  type: int\n                  expr: _col1\n                  type: string\n            outputColumnNames: _col0, _col1, _col2\n            Filter Operator\n              predicate:\n                  expr: (_col2 = 3)\n                  type: boolean\n              Select Operator\n                expressions:\n                      expr: _col0\n                      type: int\n                      expr: _col1\n                      type: int\n                      expr: _col2\n                      type: string\n                outputColumnNames: _col0, _col1, _col2\n                File Output Operator\n                  compressed: false\n                  GlobalTableId: 0\n                  table:\n                      input format: org.apache.hadoop.mapred.TextInputFormat\n                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\n\n  Stage: Stage-0\n    Fetch Operator\n      limit: -1\n{noformat}\n\nSo, we need a patch which takes care of Q2 while not causing a plan optimality regression for Q3.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"created":"2010-09-16T21:47:57.701+0000","updated":"2010-09-16T21:47:57.701+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12464329/comment/12910339","id":"12910339","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"body":"For easy copy/paste into CLI, here are the three queries by themselves.\n\n{noformat}\n-- Q1\nexplain\nSELECT a.foo as foo1, b.foo as foo2, b.bar\nFROM pokes a LEFT OUTER JOIN pokes2 b\nON a.foo=b.foo\nWHERE b.bar=3;\n\n-- Q2\nexplain\nSELECT * FROM\n    (SELECT a.foo as foo1, b.foo as foo2, b.bar\n    FROM pokes a LEFT OUTER JOIN pokes2 b\n    ON a.foo=b.foo) a\nWHERE a.bar=3;\n\n-- Q3\nexplain\nSELECT * FROM\n    (SELECT a.foo as foo1, b.foo as foo2, a.bar\n    FROM pokes a JOIN pokes2 b\n    ON a.foo=b.foo) a\nWHERE a.bar=3;\n{noformat}\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"created":"2010-09-16T21:49:28.754+0000","updated":"2010-09-16T21:49:28.754+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12464329/comment/13081346","id":"13081346","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jiraposter%40reviews.apache.org","name":"jiraposter@reviews.apache.org","key":"jiraposter@reviews.apache.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"jiraposter@reviews.apache.org","active":true,"timeZone":"Etc/UTC"},"body":"\n-----------------------------------------------------------\nThis is an automatically generated e-mail. To reply, visit:\nhttps://reviews.apache.org/r/1329/\n-----------------------------------------------------------\n\nReview request for hive.\n\n\nSummary\n-------\n\nhttps://issues.apache.org/jira/browse/HIVE-1342\n\n\nThis addresses bug HIVE-1342.\n    https://issues.apache.org/jira/browse/HIVE-1342\n\n\nDiffs\n-----\n\n  http://svn.apache.org/repos/asf/hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/ppd/OpProcFactory.java 1155166 \n  http://svn.apache.org/repos/asf/hive/trunk/ql/src/test/queries/clientpositive/ppd_repeated_alias.q PRE-CREATION \n  http://svn.apache.org/repos/asf/hive/trunk/ql/src/test/results/clientpositive/ppd_repeated_alias.q.out PRE-CREATION \n\nDiff: https://reviews.apache.org/r/1329/diff\n\n\nTesting\n-------\n\n\nThanks,\n\nCharles\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jiraposter%40reviews.apache.org","name":"jiraposter@reviews.apache.org","key":"jiraposter@reviews.apache.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"jiraposter@reviews.apache.org","active":true,"timeZone":"Etc/UTC"},"created":"2011-08-09T00:54:26.910+0000","updated":"2011-08-09T00:54:26.910+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12464329/comment/13081789","id":"13081789","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jiraposter%40reviews.apache.org","name":"jiraposter@reviews.apache.org","key":"jiraposter@reviews.apache.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"jiraposter@reviews.apache.org","active":true,"timeZone":"Etc/UTC"},"body":"\n-----------------------------------------------------------\nThis is an automatically generated e-mail. To reply, visit:\nhttps://reviews.apache.org/r/1329/\n-----------------------------------------------------------\n\n(Updated 2011-08-09 17:42:48.808459)\n\n\nReview request for hive.\n\n\nChanges\n-------\n\nUnit tests passed\n\n\nSummary\n-------\n\nhttps://issues.apache.org/jira/browse/HIVE-1342\n\n\nThis addresses bug HIVE-1342.\n    https://issues.apache.org/jira/browse/HIVE-1342\n\n\nDiffs\n-----\n\n  http://svn.apache.org/repos/asf/hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/ppd/OpProcFactory.java 1155166 \n  http://svn.apache.org/repos/asf/hive/trunk/ql/src/test/queries/clientpositive/ppd_repeated_alias.q PRE-CREATION \n  http://svn.apache.org/repos/asf/hive/trunk/ql/src/test/results/clientpositive/ppd_repeated_alias.q.out PRE-CREATION \n\nDiff: https://reviews.apache.org/r/1329/diff\n\n\nTesting (updated)\n-------\n\nUnit tests passed\n\n\nThanks,\n\nCharles\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jiraposter%40reviews.apache.org","name":"jiraposter@reviews.apache.org","key":"jiraposter@reviews.apache.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"jiraposter@reviews.apache.org","active":true,"timeZone":"Etc/UTC"},"created":"2011-08-09T17:43:29.305+0000","updated":"2011-08-09T17:43:29.305+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12464329/comment/13083964","id":"13083964","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jiraposter%40reviews.apache.org","name":"jiraposter@reviews.apache.org","key":"jiraposter@reviews.apache.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"jiraposter@reviews.apache.org","active":true,"timeZone":"Etc/UTC"},"body":"\n-----------------------------------------------------------\nThis is an automatically generated e-mail. To reply, visit:\nhttps://reviews.apache.org/r/1329/\n-----------------------------------------------------------\n\n(Updated 2011-08-12 06:14:21.523742)\n\n\nReview request for hive.\n\n\nChanges\n-------\n\nFixed incorrectly pushed predicates\n\n\nSummary\n-------\n\nhttps://issues.apache.org/jira/browse/HIVE-1342\n\n\nThis addresses bug HIVE-1342.\n    https://issues.apache.org/jira/browse/HIVE-1342\n\n\nDiffs (updated)\n-----\n\n  http://svn.apache.org/repos/asf/hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/ppd/OpProcFactory.java 1156940 \n  http://svn.apache.org/repos/asf/hive/trunk/ql/src/test/queries/clientpositive/ppd_repeated_alias.q PRE-CREATION \n  http://svn.apache.org/repos/asf/hive/trunk/ql/src/test/results/clientpositive/ppd_repeated_alias.q.out PRE-CREATION \n\nDiff: https://reviews.apache.org/r/1329/diff\n\n\nTesting\n-------\n\nUnit tests passed\n\n\nThanks,\n\nCharles\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jiraposter%40reviews.apache.org","name":"jiraposter@reviews.apache.org","key":"jiraposter@reviews.apache.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"jiraposter@reviews.apache.org","active":true,"timeZone":"Etc/UTC"},"created":"2011-08-12T06:14:27.251+0000","updated":"2011-08-12T06:14:27.251+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12464329/comment/13083977","id":"13083977","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jiraposter%40reviews.apache.org","name":"jiraposter@reviews.apache.org","key":"jiraposter@reviews.apache.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"jiraposter@reviews.apache.org","active":true,"timeZone":"Etc/UTC"},"body":"\n-----------------------------------------------------------\nThis is an automatically generated e-mail. To reply, visit:\nhttps://reviews.apache.org/r/1329/\n-----------------------------------------------------------\n\n(Updated 2011-08-12 06:35:45.599414)\n\n\nReview request for hive.\n\n\nChanges\n-------\n\nFix null pointer when there are no pruning filters\n\n\nSummary\n-------\n\nhttps://issues.apache.org/jira/browse/HIVE-1342\n\n\nThis addresses bug HIVE-1342.\n    https://issues.apache.org/jira/browse/HIVE-1342\n\n\nDiffs (updated)\n-----\n\n  http://svn.apache.org/repos/asf/hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/ppd/OpProcFactory.java 1156940 \n  http://svn.apache.org/repos/asf/hive/trunk/ql/src/test/queries/clientpositive/ppd_repeated_alias.q PRE-CREATION \n  http://svn.apache.org/repos/asf/hive/trunk/ql/src/test/results/clientpositive/ppd_repeated_alias.q.out PRE-CREATION \n\nDiff: https://reviews.apache.org/r/1329/diff\n\n\nTesting\n-------\n\nUnit tests passed\n\n\nThanks,\n\nCharles\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jiraposter%40reviews.apache.org","name":"jiraposter@reviews.apache.org","key":"jiraposter@reviews.apache.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"jiraposter@reviews.apache.org","active":true,"timeZone":"Etc/UTC"},"created":"2011-08-12T06:36:26.952+0000","updated":"2011-08-12T06:36:26.952+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12464329/comment/13085393","id":"13085393","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=charleschen","name":"charleschen","key":"charleschen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Charles Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"It turns out that in addition to the incorrect behavior of the PPD optimization with multiple aliases in John's testcases, the semantic analyzer populated the column expression map of a select operator incorrectly when processing the group by operation, which resulted in the PPD getting confused and switching the columns. (see HIVE-1342v4.patch)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=charleschen","name":"charleschen","key":"charleschen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Charles Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2011-08-15T22:31:12.140+0000","updated":"2011-08-15T22:31:12.140+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12464329/comment/13085394","id":"13085394","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jiraposter%40reviews.apache.org","name":"jiraposter@reviews.apache.org","key":"jiraposter@reviews.apache.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"jiraposter@reviews.apache.org","active":true,"timeZone":"Etc/UTC"},"body":"\n-----------------------------------------------------------\nThis is an automatically generated e-mail. To reply, visit:\nhttps://reviews.apache.org/r/1329/\n-----------------------------------------------------------\n\n(Updated 2011-08-15 22:31:14.344074)\n\n\nReview request for hive.\n\n\nChanges\n-------\n\nFixed incorrect colexprmap when processing group by\n\n\nSummary\n-------\n\nhttps://issues.apache.org/jira/browse/HIVE-1342\n\n\nThis addresses bug HIVE-1342.\n    https://issues.apache.org/jira/browse/HIVE-1342\n\n\nDiffs (updated)\n-----\n\n  http://svn.apache.org/repos/asf/hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java 1157999 \n  http://svn.apache.org/repos/asf/hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/ppd/OpProcFactory.java 1157999 \n  http://svn.apache.org/repos/asf/hive/trunk/ql/src/test/queries/clientpositive/ppd_repeated_alias1.q PRE-CREATION \n  http://svn.apache.org/repos/asf/hive/trunk/ql/src/test/queries/clientpositive/ppd_repeated_alias2.q PRE-CREATION \n  http://svn.apache.org/repos/asf/hive/trunk/ql/src/test/results/clientpositive/ppd_repeated_alias1.q.out PRE-CREATION \n  http://svn.apache.org/repos/asf/hive/trunk/ql/src/test/results/clientpositive/ppd_repeated_alias2.q.out PRE-CREATION \n\nDiff: https://reviews.apache.org/r/1329/diff\n\n\nTesting\n-------\n\nUnit tests passed\n\n\nThanks,\n\nCharles\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jiraposter%40reviews.apache.org","name":"jiraposter@reviews.apache.org","key":"jiraposter@reviews.apache.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"jiraposter@reviews.apache.org","active":true,"timeZone":"Etc/UTC"},"created":"2011-08-15T22:31:27.587+0000","updated":"2011-08-15T22:31:27.587+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12464329/comment/13086069","id":"13086069","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=charleschen","name":"charleschen","key":"charleschen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Charles Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"Split into HIVE-2382 and HIVE-2383","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=charleschen","name":"charleschen","key":"charleschen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Charles Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2011-08-17T00:56:40.430+0000","updated":"2011-08-17T00:56:40.430+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12464329/comment/13095000","id":"13095000","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"body":"Fixed by committing sub-issues (not the patches attached to this issue).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"created":"2011-08-31T23:46:24.873+0000","updated":"2011-08-31T23:46:24.873+0000"}],"maxResults":17,"total":17,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-1342/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0lenb:"}}