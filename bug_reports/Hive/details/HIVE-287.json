{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12414689","self":"https://issues.apache.org/jira/rest/api/2/issue/12414689","key":"HIVE-287","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310843","id":"12310843","key":"HIVE","name":"Hive","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310843&avatarId=11935","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310843&avatarId=11935","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310843&avatarId=11935","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310843&avatarId=11935"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12314524","id":"12314524","description":"released","name":"0.6.0","archived":false,"released":true,"releaseDate":"2010-10-29"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2009-03-11T02:10:26.488+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Wed Jul 28 03:23:03 UTC 2010","customfield_12310420":"73644","customfield_12312320":null,"customfield_12310222":"10002_*:*_4_*:*_3379591822_*|*_1_*:*_4_*:*_41051209012_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2010-07-12T01:24:40.937+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-287/watchers","watchCount":7,"isWatching":false},"created":"2009-02-12T19:31:20.103+0000","customfield_12310192":"This change deprecates the GenericUDAFResolver interface in favor of the new GenericUDAFResolver2.","customfield_12310191":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10343","value":"Reviewed","id":"10343"}],"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"8.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12314524","id":"12314524","description":"released","name":"0.6.0","archived":false,"released":true,"releaseDate":"2010-10-29"}],"issuelinks":[{"id":"12332926","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12332926","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12469017","key":"HIVE-1459","self":"https://issues.apache.org/jira/rest/api/2/issue/12469017","fields":{"summary":"wildcards in UDF/UDAF should expand to all columns (rather than no columns)","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-12-17T00:03:51.676+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312586","id":"12312586","name":"Query Processor","description":"Tracks issues dealing with query processing."}],"timeoriginalestimate":null,"description":"The following query does not work:\n\n\nselect count(distinct col1, col2) from Tbl","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12445090","id":"12445090","filename":"HIVE-287-1.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"created":"2010-05-20T18:13:09.104+0000","size":34988,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12445090/HIVE-287-1.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12445524","id":"12445524","filename":"HIVE-287-2.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"created":"2010-05-26T03:50:39.635+0000","size":36797,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12445524/HIVE-287-2.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12447240","id":"12447240","filename":"HIVE-287-3.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"created":"2010-06-16T17:17:28.756+0000","size":35074,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12447240/HIVE-287-3.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12447653","id":"12447653","filename":"HIVE-287-4.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"created":"2010-06-22T02:18:43.814+0000","size":41664,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12447653/HIVE-287-4.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12448843","id":"12448843","filename":"HIVE-287-5-branch-0.6.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"created":"2010-07-07T01:21:34.775+0000","size":54110,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12448843/HIVE-287-5-branch-0.6.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12448842","id":"12448842","filename":"HIVE-287-5-trunk.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"created":"2010-07-07T01:21:34.691+0000","size":54370,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12448842/HIVE-287-5-trunk.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12449137","id":"12449137","filename":"HIVE-287-6-branch-0.6.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"created":"2010-07-09T23:52:50.236+0000","size":56418,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12449137/HIVE-287-6-branch-0.6.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12449136","id":"12449136","filename":"HIVE-287-6-trunk.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"created":"2010-07-09T23:52:50.149+0000","size":56678,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12449136/HIVE-287-6-trunk.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"122102","customfield_12312823":null,"summary":"support count(*) and count distinct on multiple columns","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=namit","name":"namit","key":"namit","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Namit Jain","active":true,"timeZone":"Asia/Kolkata"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=namit","name":"namit","key":"namit","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Namit Jain","active":true,"timeZone":"Asia/Kolkata"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12680731","id":"12680731","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rsm","name":"rsm","key":"rsm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Raghotham Murthy","active":true,"timeZone":"America/Los_Angeles"},"body":"results in a compiler error:\n\nFAILED: Error in semantic analysis: line 2:7 Function Argument Type Mismatch count: Looking for UDAF Evaluator\"count\" with parameters [class java.lang.String, class java.lang.String]\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rsm","name":"rsm","key":"rsm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Raghotham Murthy","active":true,"timeZone":"America/Los_Angeles"},"created":"2009-03-11T02:10:26.488+0000","updated":"2009-03-11T02:10:26.488+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12720500","id":"12720500","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=psalami","name":"psalami","key":"psalami","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Patrick Salami","active":true,"timeZone":"Etc/UTC"},"body":"confirmed: happened to me as well; anyone have any workarounds?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=psalami","name":"psalami","key":"psalami","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Patrick Salami","active":true,"timeZone":"Etc/UTC"},"created":"2009-06-17T05:16:14.449+0000","updated":"2009-06-17T05:16:14.449+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12720511","id":"12720511","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=namit","name":"namit","key":"namit","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Namit Jain","active":true,"timeZone":"Asia/Kolkata"},"body":"can you try:\n\nselect count(1) from (select col1, col2, count(1) from tbl group by col1, col2);","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=namit","name":"namit","key":"namit","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Namit Jain","active":true,"timeZone":"Asia/Kolkata"},"created":"2009-06-17T06:01:04.505+0000","updated":"2009-06-17T06:01:04.505+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12720900","id":"12720900","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=psalami","name":"psalami","key":"psalami","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Patrick Salami","active":true,"timeZone":"Etc/UTC"},"body":"Thanks for the reply! However, I get a parse error when I try this query:\n\nhive> select count(1) from (select product_url, name, count(1) from\nraw_product group by product_url, name);\nFAILED: Parse Error: line 0:-1 mismatched input '<EOF>' expecting\nIdentifier in group by expression\n\nhere is my schema:\nhive> describe raw_product;\nOK\nid      int\nmerchant_product_id     int\nnetwork_id      int\nnetwork_merchant_id     int\nname    string\nbrand   string\ncategory_name   string\nsku     string\nproduct_url     string\n[...]\n\nThanks!\n\n--Patrick\n\n\n\n\n\n-- \n___________________________________\nPatrick Salami | Senior Software Engineer\nExtrabux, Inc | http://www.extrabux.com\npatrick@extrabux.com | (858) 449-2241\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=psalami","name":"psalami","key":"psalami","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Patrick Salami","active":true,"timeZone":"Etc/UTC"},"created":"2009-06-17T21:13:08.704+0000","updated":"2009-06-17T21:13:08.704+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12720917","id":"12720917","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=namit","name":"namit","key":"namit","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Namit Jain","active":true,"timeZone":"Asia/Kolkata"},"body":"\nYou need to use an alias for the sub-query\n\nselect count(1) from (select product_url, name, count(1) from raw_product group by product_url, name)x","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=namit","name":"namit","key":"namit","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Namit Jain","active":true,"timeZone":"Asia/Kolkata"},"created":"2009-06-17T21:45:11.082+0000","updated":"2009-06-17T21:45:11.082+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12869710","id":"12869710","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"body":"*Summary*\nThis patch fixes the {{count()}} aggregate function to be consistent with SQL. Specifically:\n* Provides support for {{SELECT count(*) FROM table}} queries, where it returns the total number of rows of the table.\n* Also extended the support for {{count()}} to include multiple expression list. {{count(DISTINCT expr1, exp2,...)}} returns the number of non-NULL and different valued rows from the evaluated expressions.\n\n*Details*\n* Modified HiveQL grammar to allow function invocation with a single * in place of parameter list.\n* Propagated the presence of * as parameter or specification of {{DISTINCT}} keyword in the UDF resolver framework so that it can be used by UDFs that behave differently when these are applicable.\n* Modified the {{count()}} UDAF to support the same semantics of handling NULL values as regular SQL.\n* Added test case to specifically exercise the newly introduced semantics of the count UDAF.\n\n*Testing*\nRan all tests. Noted only two failures (input20.q, input33.q) which were found to be failing on the local trunk image as well.\n\nIf and when this patch is committed to the trunk, I will go ahead and update the Hive Wiki with details and examples regarding the use of {{count()}} UDAF in various forms.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"created":"2010-05-20T18:29:02.498+0000","updated":"2010-05-20T18:29:02.498+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12870789","id":"12870789","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=namit","name":"namit","key":"namit","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Namit Jain","active":true,"timeZone":"Asia/Kolkata"},"body":"Overall looks good, some minor comments:\n\n1. This should be independent of COUNT - so, all basically all aggregation functions should be supported with DISTINCT.\n    For eg: select avg(distinct c1,c2) from T\n\n and so on.\n\n2. It would be a good idea to maintain some compatibility for the existing interface - so, can we add another method to UDAFResolver, which\n    has the new API - and a common class which invokes the default implementation, that would be better.\n\n3. Follows from 1 - more tests are needed","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=namit","name":"namit","key":"namit","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Namit Jain","active":true,"timeZone":"Asia/Kolkata"},"created":"2010-05-24T19:05:44.102+0000","updated":"2010-05-24T19:05:44.102+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12870860","id":"12870860","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks for taking a look at this patch Namit. I have some questions and clarifcations regarding your feedback:\n\nbq. 1. This should be independent of COUNT - so, all basically all aggregation functions should be supported with DISTINCT.\nFor eg: select avg(distinct c1,c2) from T\n\nNot sure how this relates to the change I made. Even before making this change, the DISTINCT qualifier was allowed for any function invocation. Can you elaborate what you mean by this? Specifically, which part of the patch needs to be changed in order to accomodate this request.\n\nbq. 2. It would be a good idea to maintain some compatibility for the existing interface - so, can we add another method to UDAFResolver, which has the new API - and a common class which invokes the default implementation, that would be better.\n\nHere is what I understand your suggestion as: Add a new method to GenericUDAFResolver interface maintaining the old method. Create an abstract base class that implements the new interface method and invokes the old method by dropping isDistinct/isAllColumn arguments. Extend the current resolvers to override this method. Will this address your concern? If not, can you provide a concrete example.\n\nbq. 3. Follows from 1 - more tests are needed\n\nAre you suggesting more tests for array_contains UDF or to add more tests for other UDFs? Please clarify with examples if possible.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"created":"2010-05-24T21:46:11.593+0000","updated":"2010-05-24T21:46:11.593+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12871310","id":"12871310","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=namit","name":"namit","key":"namit","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Namit Jain","active":true,"timeZone":"Asia/Kolkata"},"body":"\nI am sorry about 1 and 3 - you can ignore those.\n\n\n\n2. It would be a good idea to maintain some compatibility for the existing interface - so, can we add another method to UDAFResolver, which has the new API - and a common class which invokes the default implementation, that would be better.\n\nHere is what I understand your suggestion as: Add a new method to GenericUDAFResolver interface maintaining the old method. Create an abstract base class that implements the new interface method and invokes the old method by dropping isDistinct/isAllColumn arguments. Extend the current resolvers to override this method. Will this address your concern? If not, can you provide a concrete example.\n\n\n-- yes\n\n\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=namit","name":"namit","key":"namit","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Namit Jain","active":true,"timeZone":"Asia/Kolkata"},"created":"2010-05-25T19:27:51.614+0000","updated":"2010-05-25T19:27:51.614+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12871494","id":"12871494","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"body":"Modified the implementation as per review feedback - Introduced an abstract base class and reverted the resolvers to extend that instead of directly implementing the new functionality.\n\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"created":"2010-05-26T03:53:04.572+0000","updated":"2010-05-26T03:53:04.572+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12879147","id":"12879147","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=namit","name":"namit","key":"namit","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Namit Jain","active":true,"timeZone":"Asia/Kolkata"},"body":"Arvind, I am sorry about the delay in getting back to this.\nCan you regenerate the patch - it is not applying cleanly. \nI will look at it right away","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=namit","name":"namit","key":"namit","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Namit Jain","active":true,"timeZone":"Asia/Kolkata"},"created":"2010-06-15T22:23:29.060+0000","updated":"2010-06-15T22:23:29.060+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12879395","id":"12879395","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"body":"Submitting the regenerated patch with lastest trunk image. Patch file is HIVE-287-3.patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"created":"2010-06-16T17:18:22.239+0000","updated":"2010-06-16T17:18:22.239+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12879929","id":"12879929","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"body":"Sorry to chime in late on this one, but I have one big question on this one:  can we instead do it in a way which does not break the UDAF interface?\n\nThe existing patch adds a new method to the GenericUDAFResolver interface, meaning all existing plugin implementations outside of the Hive codebase will fail to compile (due to the fact that we did not already have the insulating abstract base class available).  We already have some of these within Facebook.\n\nLet's analyze the two new parameters one by one.\n\nisDistinct:  this doesn't actually modify the choice of evaluator implementation at all, since the actual duplicate elimination takes place upstream of the UDAF invocation.  So instead of adding this parameter, can we instead add a new method supportsDistinct() on GenericUDAFEvaluator?  Then call this after instantiating the new evaluator in order to carry out the additional validation.\n\nisAllColumns:  COUNT(*) is probably the only function which is ever even going to care about this one.  Couldn't we just use an empty array of TypeInfo to indicate all columns?\n\nIndependent of the above, I think adding the insulating abstract base should still be done now to make future transitions smoother when interface-breaking is absolutely required.  So keep that part of the patch.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"created":"2010-06-17T20:58:00.078+0000","updated":"2010-06-17T20:58:00.078+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12879983","id":"12879983","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"body":"@John: Thanks for reviewing this change. I have some follow-up comments and suggestions:\n\nbq. isDistinct: this doesn't actually modify the choice of evaluator implementation at all, since the actual duplicate elimination takes place upstream of the UDAF invocation. So instead of adding this parameter, can we instead add a new method supportsDistinct() on GenericUDAFEvaluator? \n\nWhile the evaluation may be happening upstream, I was concerned that it does not exclude the cases where this information is relevant to the function invocation itself. For example, the implementation of {{count}} requires that if there is a valid argument list, it must be qualified with {{DISTINCT}}.\n\nbq. isAllColumns: COUNT is probably the only function which is ever even going to care about this one. Couldn't we just use an empty array of TypeInfo to indicate all columns?\n\nI had a similar idea, but after some consideration opted for a simpler design. I felt that overloading arguments to indicate special cases might lead to confusion and eventual problem when a use-case emerges that invalidates this assumption. \n\nI do agree with your point that it will be good to stay compatible if possible. One way to do it would be as follows:\n\n# Revert the {{GenericUDAFResolver}} to its previous state but make the interface deprecated in favor of the abstract base class.\n# Push the newly introduced method into {{AbstractGenericUDAFResolver}} implementation.\n# Modify {{FunctionRegistry.getGenericUDAFEvaluator()}} method to test the resolver instance to be type compatible with {{AbstractGenericUDAFResolver}} and if so, invoke the new method. Otherwise revert to the old mechanism.\n\nWhat do you think about this approach?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"created":"2010-06-17T22:32:49.470+0000","updated":"2010-06-17T22:32:49.470+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12879994","id":"12879994","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"body":"For DISTINCT:   we can check the function invocation itself (during semantic analysis) by calling supportsDistinct() immediately after instantiating the GenericUDAFEvaluator in SemanticAnalyzer.  This allows strict validation to be performed.  Or make the method name checkDistinct and allow the UDAF to throw the exception itself.  But I agree that in this case it would be cleaner to extend the interface, so I'm fine if we go ahead with that in a non-breaking fashion.\n\nFor COUNT(*):  if you think about it, COUNT(*) really means \"ignore all columns\" not \"count all columns\".  So I think an empty array actually makes a lot of sense here. Can you think of a case where UDAF(*) even makes sense, where UDAF != COUNT?  If you don't have access to any per-row data, what can you do other than count it?  I'd say we should actually disallow * for anything but COUNT, per the SQL standard.\n\nI like your approach to keeping compatibility via instanceof, so if the decision ends up being to add the extra parameters, then we should definitely use that approach.  However, extension points should always be interfaces (not abstract classes) to allow for stuff like dynamic proxies.  So we would need to add a new interface GenericUDAFResolver2 (extends GenericUDAFResolver) with the new method, and make AbstractGenericUDAFResolver implement both.\n\nInterface evolution is never pretty, but there is an interface design pattern which avoids this particular problem.  Imagine if originally we had defined a GenericUDAFResolverInput class inside of Hive itself, with a method getParameters() returning TypeInfo [].  HIve would instantiate this and pass an input object into getEvaluator, and the evaluator would call input.getParameters().  This would have allowed us to add a boolean isDistinct() method to GenericUDAFResolverInput without breaking anything (source or binary) and without needing to add a new interface; old plugins would not know about isDistinct() so they wouldn't call it, and new ones could.\n\nI would argue that if we're going to go to the trouble of adding GenericUDAFResolver2, then we should build the pattern above into it as well in case we need further evolution later on.\n\np.s. I'm really glad you're working on this one...every few days I try a count(*) against Hive accidentally and then kick myself.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"created":"2010-06-17T23:14:10.495+0000","updated":"2010-06-17T23:14:10.495+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12880000","id":"12880000","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"body":"@John: I agree with your assessment above. Regarding the count(*), my earlier comment was not to imply that there exists a UDAF today, but that it might exist in the future. More importantly though, using an empty parameter list as an indicator for * would blur the distinction between UDAF(*) vs UDAF() invocation. This is one way of many perhaps where parameter overloading could lead to confusion and hard to understand code. \n\nI think introducing {{GenericUDAFResolver2}} interface is a great idea. I also like the idea of using a call back for decoupling the invocation from parameter list but am concerned that this could lead to perhaps redundant method call and object creation. I am not sure if that would add to any significant performance penalty in the long run or not. \n\nI would love to know what the opinion of others interested in this issue is regarding this route. If all agree that adding a new interface with callback for parameter discovery is acceptable, I can start working on that patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"created":"2010-06-17T23:30:56.543+0000","updated":"2010-06-17T23:30:56.543+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12880325","id":"12880325","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"body":"The object creation and method call here are negligible since this is in the semantic analyzer context (not an execution codepath).\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"created":"2010-06-18T21:10:11.487+0000","updated":"2010-06-18T21:10:11.487+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12881018","id":"12881018","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"body":"applies cleanly on trunk and branch-0.6","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"created":"2010-06-22T02:18:43.909+0000","updated":"2010-06-22T02:18:43.909+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12881020","id":"12881020","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"body":"@John: Can you please take a look at the updated patch? Let me know if you have any feedback for further tweaking this change as necessary.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"created":"2010-06-22T02:21:02.193+0000","updated":"2010-06-22T02:21:02.193+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12882792","id":"12882792","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"body":"Sorry, my commit for HIVE-1387 just introduced a new conflict, so one more rebase is required.\n\nI still don't think that we should allow anything other than COUNT(*) in the parser.  SUM(*) should be disallowed, as should COUNT(DISTINCT *), as should MY_UDF(*).  They are non-standard, and I think they would just cause confusion since COUNT(*) ignores the column values rather than doing anything with them.  Together with preventing these, add negative tests to verify that they are rejected.\n\nGiven that, we can get rid of the isAllColumns info.\n\nAlso, can you add an EXPLAIN for the COUNT(*) query in the test?\n\nAfter that, I think we'll be good to go.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"created":"2010-06-26T01:00:06.207+0000","updated":"2010-06-26T01:00:06.207+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12884125","id":"12884125","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"body":"@John - are you suggesting that the grammar be updated to restrict single star argument with the specific function {{COUNT}}? If not in the grammar where else do you think these restrictions should be coded.\n\nIn either case, what other subsystems you think will be impacted by this change and what do you suggest should be the downstream changes to accomodate this?\n\np.s. I ask these questions to best utilize both our time and reduce the number of back/froths to the extent possible. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"created":"2010-07-01T01:36:25.344+0000","updated":"2010-07-01T01:36:25.344+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12884134","id":"12884134","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"body":"Yes, if you can do get it to work in the grammar itself (via a choice in the existing \"function\" rule), that would be best.  If it it's not possible to do it there for some reason, then semantic analyzer.\n\nCould you explain what you mean regarding impact?  Since Hive doesn't support COUNT(*) before your patch, the only impact is on the rest of your patch, right?\n\nBTW, here's the relevant BNF from my copy of the SQL:2003 standard (ISO/IEC 9075-2:2003 part 2 section 10.9), omitting some SQL/OLAP stuff such as <filter clause>:\n\n{noformat}\n<aggregate function > ::=\nCOUNT <left paren> <asterisk> <right paren>\n| <general set function>\n\n<general set function> ::=\n<set function type> <left paren> [ <set quantifier> ] <value expression> <right paren>\n\n<set function type> ::=\nAVG |\nMAX |\nMIN |\nSUM |\n...\n\n<set quantifier> ::= DISTINCT | ALL\n{noformat}\n\nAs you can see, they make a special case for COUNT to allow for star there alone, and they don't allow COUNT(DISTINCT *).\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-01T02:06:15.208+0000","updated":"2010-07-01T02:07:35.673+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12884580","id":"12884580","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks for the explanation John. The SQL BNF that you pointed out is the normative SQL specification. I do not think any SQL implementations use this grammar though. The parallel is that of an interface and its implementation. While the interface can be short and precise, the implementations may choose to delegate interface methods to other implementation specific methods. Similarly, most databases deal with their own SQL grammar that is compliant with the SQL standard at specific levels.\n\nMore to the point in Hive - my key concern is that by modifying the grammar to make an exception for {{COUNT}}, we will be introducing a brittle coupling between the the parser and semantic analyzer. Right now the count aggregate function is treated like any other function and is thus part of the general framework. By making this change, we will be modifying it to be specifically associated from with the grammar directives. \n\nThis is the current function definition in Hive QL grammar (*A*):\n\n{noformat}\n-->[ functionName ]-->[ LPAREN ]--+-->[ KW_DISTINCT ]--+--+--+-->[ expression ]--+--+-->[ RPAREN ]-->\n                                  |                    |  |  |                   |  |\n                                  +----------->--------+  |  +------[ COMMA ]<---+  |\n                                                          |                         |\n                                                          +------------->-----------+\n{noformat}\n\nThe patch that I have supplied already on this Jira modifies this definition as follows (*B*):\n\n{noformat}\n\n-->[ functionName ]-->[ LPAREN ]--+------------------------>[ STAR ]----------------------+-->[ RPAREN ]-->\n                                  |                                                       |\n                                  +--+-->[ KW_DISTINCT ]--+--+--+-->[ expression ]--+--+--+\n                                     |                    |  |  |                   |  |\n                                     +----------->--------+  |  +------[ COMMA ]<---+  |\n                                                             |                         |\n                                                             +------------->-----------+\n{noformat}\n\nIf I were to modify the grammar to make an exception for {{COUNT}} it will likely be changed to something like this (*C*):\n\n{noformat}\n\n--+---------------------------------->[ KW_COUNT ]-->[ LPAREN ]-->[ STAR ]-->[ RPAREN ]----------------+-->\n  |                                                                                                    |\n  +-->[ functionName ]-->[ LPAREN ]--+--+-->[ KW_DISTINCT ]--+--+-->[ expression ]--+--+-->[ RPAREN ]--+\n                                     |  |                    |  |                   |  |\n                                     |  +----------->--------+  +----[ COMMA ]<-----+  |\n                                     |                                                 |\n                                     +------------------------->-----------------------+\n\n{noformat}\n\nConsider the *C* approach closely: The production that matches a {{COUNT}} invocation can be directly matched via the top branch using {{KW_COUNT}} token, or it could follow the branch below where {{functionName}} could match {{COUNT}}. On the semantic analyzer side, it makes the matching logic more complex and less intuitive since now the {{COUNT}} can be invoked via two branch conditions. For example - there would be one invocation that would directly delegate to the {{COUNT}} aggregate function, whereas another that will use the current resolver mechanism to invoke it.\n\nInstead, the approach *B* keeps the grammar consistent with the regular function invocation. It does not favor any one function over the other and simply establishes matching rules for function production. That way, the call is then delegated to the semantic analyzer which in turn matches the appropriate handling function based on the name and parameter type using the generic resolver mechanism without regard to what function is being invoked. \n\nThe changes supplied in the current patch also allow individual function handlers to decide if they would like to support the {{functionName(STAR)}} syntax. Since you feel strongly about not supporting this syntax by default for any function, I can perhaps modify the {{AbstractGenericUDAFResolver}} class to raise an exception if invoked with this syntax. That way, only the functions that choose to overwrite that behavior will be able to support it. Also as you can see in the syntax diagram for (B), there is no production that will match things like {{functionName(DISTINCT STAR)}} or {{functionName(STAR, EXPR)}} etc.\n\nThat said, I am open to going either way. I just wanted to put my point across so that you could consider it and make an informed decision. Let me know what you think.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"created":"2010-07-02T07:26:36.608+0000","updated":"2010-07-02T07:26:36.608+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12884699","id":"12884699","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=athusoo","name":"athusoo","key":"athusoo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashish Thusoo","active":true,"timeZone":"Etc/UTC"},"body":"@John\n\nAnother disadvantage for doing C that I can think of is the fact that count would become a keyword and then any column names would have to be quoted. Not a big deal but just something that would be a side effect of going with C.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=athusoo","name":"athusoo","key":"athusoo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashish Thusoo","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-02T14:38:46.200+0000","updated":"2010-07-02T14:38:46.200+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12884770","id":"12884770","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"body":"A couple of DBMS's I just tried actually do use something equivalent to that grammar snippet I quoted.\n\n{noformat}\nmysql> select sum(*) from TBLS;\nERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '*) from TBLS' at line 1\n{noformat}\n\n{noformat}\n0: jdbc:luciddb:> select sum(*) from sys_root.dba_tables;  \nError: At line 1, column 12: Unknown identifier '*' (state=,code=0)\n{noformat}\n\nBut I'm fine with leaving the grammar as B and doing the check inside of SemanticAnalyzer instead as long as your negative tests demonstrate that the diagnostics are good if a user tries something like sum(*).\n\nHowever, for this part:\n\"Since you feel strongly about not supporting this syntax by default for any function, I can perhaps modify the AbstractGenericUDAFResolver class to raise an exception if invoked with this syntax. That way, only the functions that choose to overwrite that behavior will be able to support it.\"\n\nIt's not just a matter of not supporting it by default.  I don't think we should support it at all, so let's prevent inside of SemanticAnalyzer and then not expose it at the resolver level at all.  If in early days, the SQL people had just done the smart thing and made the \"count all\" expression COUNT() instead of COUNT(*), we wouldn't even be having this discussion.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-02T18:34:49.078+0000","updated":"2010-07-02T18:34:49.078+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12884776","id":"12884776","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"body":"@Ashish:  given where we are currently, the keyword concern is valid.\n\nBut, I think we might be doing our users a disservice in the long run letting them use standard SQL reserved keywords as unquoted identifiers.  This just causes interoperability confusion since most other systems don't support this, and it makes data portability harder.\n\n(I'm not proposing any immediate action on this, just pointing it out.)\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-02T18:47:54.791+0000","updated":"2010-07-02T18:47:54.791+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12885764","id":"12885764","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"body":"Uploaded patch for trunk and branch-0.6. Ran all the tests on trunk and did spot testing on branch-0.6.\n\n*Changes from Previous patch:*\n* Modified the implementation of {{AbstractGenericUDAFResolver}} to raise an exception when invoked with the {{UDAF(STAR)}} syntax.\n* Added negative test cases to assert that the current UDAFs present in the code other than {{COUNT}} do not accept the {{UDAF(STAR)}} syntax.\n* Added {{EXPLAIN}} directives for the queries run in {{udf_count.q}} test file.\n\nWill attempt to post the patch on review board as well.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"created":"2010-07-07T01:27:06.301+0000","updated":"2010-07-07T01:27:06.301+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12885766","id":"12885766","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"body":"Review board review posted:\n\nhttp://review.hbase.org/r/275/\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"created":"2010-07-07T01:31:12.391+0000","updated":"2010-07-07T01:31:12.391+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12885788","id":"12885788","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hbasereviewboard","name":"hbasereviewboard","key":"hbasereviewboard","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"HBase Review Board","active":true,"timeZone":"Etc/UTC"},"body":"Message from: \"Carl Steinbach\" <carl@cloudera.com>\n\n-----------------------------------------------------------\nThis is an automatically generated e-mail. To reply, visit:\nhttp://review.hbase.org/r/275/\n-----------------------------------------------------------\n\n(Updated 2010-07-06 19:24:53.267440)\n\n\nReview request for Hive Developers and John Sichi.\n\n\nChanges\n-------\n\nUpdated 'Bugs' field in review request.\n\n\nSummary\n-------\n\nThis is the patch revision 5 for HIVE-287. Please see the Jira comments for full description.\n\n\nThis addresses bug HIVE-287.\n    http://issues.apache.org/jira/browse/HIVE-287\n\n\nDiffs\n-----\n\n  ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionRegistry.java 4109103 \n  ql/src/java/org/apache/hadoop/hive/ql/parse/Hive.g 7e6e63e \n  ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java 252b89d \n  ql/src/java/org/apache/hadoop/hive/ql/udf/generic/AbstractGenericUDAFResolver.java PRE-CREATION \n  ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFAverage.java 0ef4734 \n  ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFBridge.java 916eb33 \n  ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFCount.java 0054664 \n  ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFHistogramNumeric.java 8d22ef1 \n  ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFMax.java 6785687 \n  ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFMin.java 051f3a1 \n  ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFParameterInfo.java PRE-CREATION \n  ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFResolver.java 9888b52 \n  ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFResolver2.java PRE-CREATION \n  ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFSum.java ce97afd \n  ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFVariance.java 26dc84c \n  ql/src/java/org/apache/hadoop/hive/ql/udf/generic/SimpleGenericUDAFParameterInfo.java PRE-CREATION \n  ql/src/test/queries/clientnegative/invalid_avg_syntax.q PRE-CREATION \n  ql/src/test/queries/clientnegative/invalid_max_syntax.q PRE-CREATION \n  ql/src/test/queries/clientnegative/invalid_min_syntax.q PRE-CREATION \n  ql/src/test/queries/clientnegative/invalid_std_syntax.q PRE-CREATION \n  ql/src/test/queries/clientnegative/invalid_stddev_samp_syntax.q PRE-CREATION \n  ql/src/test/queries/clientnegative/invalid_sum_syntax.q PRE-CREATION \n  ql/src/test/queries/clientnegative/invalid_var_samp_syntax.q PRE-CREATION \n  ql/src/test/queries/clientnegative/invalid_variance_syntax.q PRE-CREATION \n  ql/src/test/queries/clientpositive/udf_count.q 2d1510f \n  ql/src/test/results/clientnegative/invalid_avg_syntax.q.out PRE-CREATION \n  ql/src/test/results/clientnegative/invalid_max_syntax.q.out PRE-CREATION \n  ql/src/test/results/clientnegative/invalid_min_syntax.q.out PRE-CREATION \n  ql/src/test/results/clientnegative/invalid_std_syntax.q.out PRE-CREATION \n  ql/src/test/results/clientnegative/invalid_stddev_samp_syntax.q.out PRE-CREATION \n  ql/src/test/results/clientnegative/invalid_sum_syntax.q.out PRE-CREATION \n  ql/src/test/results/clientnegative/invalid_var_samp_syntax.q.out PRE-CREATION \n  ql/src/test/results/clientnegative/invalid_variance_syntax.q.out PRE-CREATION \n  ql/src/test/results/clientpositive/udf_count.q.out 2adffd8 \n\nDiff: http://review.hbase.org/r/275/diff\n\n\nTesting\n-------\n\nRan all tests on trunk. \n\n\nThanks,\n\nArvind\n\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hbasereviewboard","name":"hbasereviewboard","key":"hbasereviewboard","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"HBase Review Board","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-07T02:27:32.140+0000","updated":"2010-07-07T02:27:32.140+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12886183","id":"12886183","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zshao","name":"zshao","key":"zshao","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zshao&avatarId=14358","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zshao&avatarId=14358","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zshao&avatarId=14358","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zshao&avatarId=14358"},"displayName":"Zheng Shao","active":true,"timeZone":"America/Los_Angeles"},"body":"Hi Arvind, sorry for coming late for the party. I have 2 questions on the new UDAF2 interface:\n\n1. Why do we put the DISTINCT in the information? DISTINCT is currently done by the framework, instead of individual UDAF.\nThis is good because the logic of removing duplicates are common for all UDAFs.  We do support SUM(DISTINCT val).\n\n2. Why do we special-case \"*\"? It seems to me that \"*\" is just a short-cut.  Hive already supports regex-based multi-column specification, so that we can say `abc.*` for all columns with name starting with abc. The compiler should just expand * and give all the columns to the UDAF.\n\nSince COUNT(*) is a special-case in the SQL standard (COUNT(*) is different from COUNT(col) even if the table has a single column col), I think we should just special-case that and replace that with count(1) at some place.\n\nWhat do you think?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zshao","name":"zshao","key":"zshao","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zshao&avatarId=14358","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zshao&avatarId=14358","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zshao&avatarId=14358","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zshao&avatarId=14358"},"displayName":"Zheng Shao","active":true,"timeZone":"America/Los_Angeles"},"created":"2010-07-08T01:43:14.324+0000","updated":"2010-07-08T01:43:14.324+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12886339","id":"12886339","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"body":"@Zheng: Welcome to the party.\n\nbq. Why do we put the DISTINCT in the information? DISTINCT is currently done by the framework, instead of individual UDAF. This is good because the logic of removing duplicates are common for all UDAFs. We do support SUM(DISTINCT val).\n\nProviding the information in the parameter specification is not the same as enforcing its interpretation. This is provided primarily to ensure that UDAFs that rely on this information can make appropriate decisions. For example, we wanted to disallow the invocation {{COUNT( EXPR1, EXPR2 ...)}} in favor of {{COUNT(*DISTINCT* EXPR1, EXPR2 ...)}}. Without this information, the count UDAF will not be able to enforce the later syntax.\n\nbq. Why do we special-case \"\"? It seems to me that \"\" is just a short-cut. Hive already supports regex-based multi-column specification, so that we can say `abc.*` for all columns with name starting with abc. The compiler should just expand * and give all the columns to the UDAF.\n\nIf you wish to use \\* as a regular expression, you would have to quote it as a string - {{COUNT('\\*')}}. This is different from the invocation as specified in SQL which treats \\* as a terminal symbol. So if it is OK to deviate from the standard representation, the user can easily use the quoted string representation to achieve the effect similar to {{COUNT(col1, col2 ..)}}. The semantics of this should be more like {{COUNT(DISTINCT EXPR1, EXPR2 ...)}} as opposed to {{COUNT(\\*)}}.\n\nbq. Since COUNT(\\*) is a special-case in the SQL standard (COUNT(\\*) is different from COUNT(col) even if the table has a single column col), I think we should just special-case that and replace that with count(1) at some place.\n\nAre you suggesting that we allow the grammar to express {{COUNT(\\*)}} syntax, but in the lexical analysis stage turn it into a {{COUNT(1)}}? I can see how that may work - but personally I am not a fan of such an approach. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"created":"2010-07-08T15:02:16.465+0000","updated":"2010-07-08T15:02:16.465+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12886428","id":"12886428","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"body":"Regarding DISTINCT:  I agree with Arvind; this information should be provided to the UDAF so that it can reject invocations that don't make sense.  Once this validation is passed, the distinct elimination is still implemented generically inside of Hive (upstream of the UDAF).\n\nRegarding F(*):  let's discriminate three cases.\n\nCOUNT(*):  this really means COUNT(), not COUNT(x,y,z).  This is a very important distinction to make from an optimizer perspective, because we want to be able to push down projection to avoid I/O and other processing for columns whose values we will never look at.\n\nSUM(*) and similar ones:  these we should disallow.\n\nMY_UDAF(*), or MY_UDAF(t.*):  this is similar to Pradeep's case that came up recently on the mailing list, and it needs to expand to MY_UDAF(x,y,z), not MY_UDAF().  I think the patch is currently doing MY_UDAF(), which isn't what he wants.\n\nMy recommendation is that we commit Arvind's patch as is, then create a followup JIRA issue to do what Pradeep is looking for (the expansion of * in the semantic analyzer) for both UDF and UDAF, but with a special case for COUNT. UDAF authors will be able to decide whether or not to reject the star syntax, since in the common case of a UDAF expecting a limited number of parameters, the star won't make sense.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-08T19:45:29.915+0000","updated":"2010-07-08T19:45:29.915+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12886769","id":"12886769","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"body":"I vote for a meeting to hash this out face-to-face. I am willing to modify the patch provided we all are in agreement as to how it should be changed. It will be much better use of everyone's time to avoid the numerous deltas to the patch before settling in on the final solution. Please let me know what you think.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"created":"2010-07-09T17:03:04.721+0000","updated":"2010-07-09T17:03:04.721+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12886780","id":"12886780","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"body":"I'll see if I can clear it up with Zheng today, and if so, we can just commit as is; otherwise let's meet.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-09T17:18:31.084+0000","updated":"2010-07-09T17:18:31.084+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12886794","id":"12886794","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zshao","name":"zshao","key":"zshao","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zshao&avatarId=14358","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zshao&avatarId=14358","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zshao&avatarId=14358","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zshao&avatarId=14358"},"displayName":"Zheng Shao","active":true,"timeZone":"America/Los_Angeles"},"body":"The plan looks good to me.\n\nJust one comment: I think we should change the comment/class name for GenericUDAFResolver2.  Let's explicitly say GenericUDAFResolver2 is for UDAFs that want to have control over whether DISTINCT or * should be treated differently. For normal UDAFs, they should still inherite from GenericUDAFResolver.\n\nDoes that sound OK?\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zshao","name":"zshao","key":"zshao","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zshao&avatarId=14358","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zshao&avatarId=14358","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zshao&avatarId=14358","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zshao&avatarId=14358"},"displayName":"Zheng Shao","active":true,"timeZone":"America/Los_Angeles"},"created":"2010-07-09T17:46:53.059+0000","updated":"2010-07-09T17:46:53.059+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12886804","id":"12886804","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"body":"I think keeping two different interfaces for UDAFs will lead to confusion in the long run. Thats why the current patch deprecates the old interface in favor of the new one. But if all agree that it is a good idea, then I will go with that.\n\nAlso - can you suggest an alternate name for the new interface?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"created":"2010-07-09T18:01:59.625+0000","updated":"2010-07-09T18:01:59.625+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12886882","id":"12886882","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zshao","name":"zshao","key":"zshao","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zshao&avatarId=14358","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zshao&avatarId=14358","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zshao&avatarId=14358","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zshao&avatarId=14358"},"displayName":"Zheng Shao","active":true,"timeZone":"America/Los_Angeles"},"body":"Talked with John offline also.\n\nI agree that we can use the new interface going forward. Can you do these also in this patch:\n1. Change the comments for the 2 new fields.  It's easy for UDAF writers to assume that the UDAF itself needs to handle whether it's distinct or whether it's all columns.\n2. Deprecate the old interface, and move all existing GenericUDAF to inherit from the new one.\n\n{code}\n+  /**\n+   * @return true if the UDAF invocation was qualified with <tt>DISTINCT</tt>\n+   * keyword, false otherwise.\n+   */\n+  boolean isDistinct();\n+\n+  /**\n+   * @return true if the UDAF invocation was done with a wildcard instead of\n+   * explicit parameter list.\n+   */\n+  boolean isAllColumns();\n{code}\n\nAfter this patch is in, here is a list of follow-ups. Can you open JIRA for these:\n\n1. Let UDAF and UDF support * and regex-based column specification\n2. Special-case COUNT(*) because that does not require reading any columns, while MY_UDAF(*) needs all columns.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zshao","name":"zshao","key":"zshao","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zshao&avatarId=14358","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zshao&avatarId=14358","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zshao&avatarId=14358","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zshao&avatarId=14358"},"displayName":"Zheng Shao","active":true,"timeZone":"America/Los_Angeles"},"created":"2010-07-09T21:05:36.671+0000","updated":"2010-07-09T21:05:36.671+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12886950","id":"12886950","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. 1. Change the comments for the 2 new fields. It's easy for UDAF writers to assume that the UDAF itself needs to handle whether it's distinct or whether it's all columns.\n\nI updated the javadocs in various places to make this clear.\n\nbq. 2. Deprecate the old interface, and move all existing GenericUDAF to inherit from the new one.\n\nNo changes necessary for this - the previously submitted patch also did it. All existing generic UDAFs now extend from the abstract class that implements the new interface. If you see any problems with that let me know.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"created":"2010-07-09T23:58:31.856+0000","updated":"2010-07-09T23:58:31.856+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12886977","id":"12886977","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hbasereviewboard","name":"hbasereviewboard","key":"hbasereviewboard","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"HBase Review Board","active":true,"timeZone":"Etc/UTC"},"body":"Message from: \"John Sichi\" <jsichi@facebook.com>\n\n-----------------------------------------------------------\nThis is an automatically generated e-mail. To reply, visit:\nhttp://review.hbase.org/r/290/\n-----------------------------------------------------------\n\nReview request for Hive Developers.\n\n\nSummary\n-------\n\n(hopefully) final review by JVS\n\n\nThis addresses bug HIVE-287.\n    http://issues.apache.org/jira/browse/HIVE-287\n\n\nDiffs\n-----\n\n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionRegistry.java 961987 \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/parse/Hive.g 961987 \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java 961987 \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/AbstractGenericUDAFResolver.java PRE-CREATION \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFAverage.java 961987 \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFBridge.java 961987 \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFCount.java 961987 \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFHistogramNumeric.java 961987 \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFMax.java 961987 \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFMin.java 961987 \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFParameterInfo.java PRE-CREATION \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFResolver.java 961987 \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFResolver2.java PRE-CREATION \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFSum.java 961987 \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFVariance.java 961987 \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/SimpleGenericUDAFParameterInfo.java PRE-CREATION \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/test/queries/clientnegative/invalid_avg_syntax.q PRE-CREATION \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/test/queries/clientnegative/invalid_max_syntax.q PRE-CREATION \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/test/queries/clientnegative/invalid_min_syntax.q PRE-CREATION \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/test/queries/clientnegative/invalid_std_syntax.q PRE-CREATION \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/test/queries/clientnegative/invalid_stddev_samp_syntax.q PRE-CREATION \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/test/queries/clientnegative/invalid_sum_syntax.q PRE-CREATION \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/test/queries/clientnegative/invalid_var_samp_syntax.q PRE-CREATION \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/test/queries/clientnegative/invalid_variance_syntax.q PRE-CREATION \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/test/queries/clientpositive/udf_count.q 961987 \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/test/results/clientnegative/invalid_avg_syntax.q.out PRE-CREATION \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/test/results/clientnegative/invalid_max_syntax.q.out PRE-CREATION \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/test/results/clientnegative/invalid_min_syntax.q.out PRE-CREATION \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/test/results/clientnegative/invalid_std_syntax.q.out PRE-CREATION \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/test/results/clientnegative/invalid_stddev_samp_syntax.q.out PRE-CREATION \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/test/results/clientnegative/invalid_sum_syntax.q.out PRE-CREATION \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/test/results/clientnegative/invalid_var_samp_syntax.q.out PRE-CREATION \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/test/results/clientnegative/invalid_variance_syntax.q.out PRE-CREATION \n  http://svn.apache.org/repos/asf/hadoop/hive/trunk/ql/src/test/results/clientpositive/udf_count.q.out 961987 \n\nDiff: http://review.hbase.org/r/290/diff\n\n\nTesting\n-------\n\n\nThanks,\n\nJohn\n\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hbasereviewboard","name":"hbasereviewboard","key":"hbasereviewboard","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"HBase Review Board","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-10T01:48:23.361+0000","updated":"2010-07-10T01:48:23.361+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12886980","id":"12886980","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"body":"+1.  Will commit if tests pass.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-10T02:08:53.028+0000","updated":"2010-07-10T02:08:53.028+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12887257","id":"12887257","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"body":"Committed to trunk and 0.6.  Thanks Arvind!\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-12T01:24:40.598+0000","updated":"2010-07-12T01:24:40.598+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12887258","id":"12887258","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"body":"Arvind, could you update relevant documentation in wiki?\n\nBesides the SQL reference, Mayank Lahiri is working on some documentation for writing new UDAF's, so the resolver interface can probably go there: \n\nhttp://wiki.apache.org/hadoop/Hive/GenericUDAFCaseStudy\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-12T01:29:25.893+0000","updated":"2010-07-12T01:29:25.893+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12887261","id":"12887261","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"body":"Followup created in HIVE-1459.  Arvind, this is a good one to work on next.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-12T01:53:40.036+0000","updated":"2010-07-12T01:53:40.036+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12888106","id":"12888106","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"body":"@John: I updated the UDAF documentation on the wiki at http://wiki.apache.org/hadoop/Hive/LanguageManual/UDF and also added a short blurb regarding the various interface changes on the UDAF tutorial page http://wiki.apache.org/hadoop/Hive/GenericUDAFCaseStudy#Writing_the_source. Please let me know if there are other places that need to be updated as well.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"created":"2010-07-13T23:30:44.737+0000","updated":"2010-07-13T23:30:44.737+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12888737","id":"12888737","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"body":"Searching for \"count\" in wiki, I think examples in these pages should change to count(*):\n\nhttp://wiki.apache.org/hadoop/Hive/LanguageManual/GroupBy\nhttp://wiki.apache.org/hadoop/Hive/GettingStarted\nhttp://wiki.apache.org/hadoop/Hive/Tutorial\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jvs","name":"jvs","key":"jvs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Sichi","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-15T08:16:07.137+0000","updated":"2010-07-15T08:16:07.137+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12891889","id":"12891889","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"body":"Updated the wiki in the all the above places.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aprabhakar","name":"aprabhakar","key":"aprabhakar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arvind Prabhakar","active":true,"timeZone":"America/Los_Angeles"},"created":"2010-07-24T00:38:20.411+0000","updated":"2010-07-24T00:38:20.411+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12893044","id":"12893044","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hammer","name":"hammer","key":"hammer","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jeff Hammerbacher","active":true,"timeZone":"Etc/UTC"},"body":"We ran into some users who were using older versions of Hive (including the version of Hive distributed with CDH3b2) and were confused by the COUNT(*) in the documentation. I've tried to change the wiki but it does not appear to be saving my changes. If someone gets the chance, I'd love to see a disclaimer like \"Note that for versions of Hive which don't include [[https://issues.apache.org/jira/browse/HIVE-287|HIVE-287]], you'll need to use COUNT(1) in place of COUNT(*).\" added to the wiki pages that reference COUNT(*).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hammer","name":"hammer","key":"hammer","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jeff Hammerbacher","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-28T03:21:05.460+0000","updated":"2010-07-28T03:21:05.460+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12414689/comment/12893045","id":"12893045","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hammer","name":"hammer","key":"hammer","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jeff Hammerbacher","active":true,"timeZone":"Etc/UTC"},"body":"Okay I spoke too soon. Turns out the Apache wiki just takes about 5 minutes to save an edit; the disclaimers are there now.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hammer","name":"hammer","key":"hammer","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jeff Hammerbacher","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-28T03:23:03.342+0000","updated":"2010-07-28T03:23:03.342+0000"}],"maxResults":48,"total":48,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-287/votes","votes":1,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0l8yn:"}}