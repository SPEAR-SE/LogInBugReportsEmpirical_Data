{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13133433","self":"https://issues.apache.org/jira/rest/api/2/issue/13133433","key":"HIVE-18524","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310843","id":"12310843","key":"HIVE","name":"Hive","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310843&avatarId=11935","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310843&avatarId=11935","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310843&avatarId=11935","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310843&avatarId=11935"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12340268","id":"12340268","name":"3.0.0","archived":false,"released":true,"releaseDate":"2018-05-21"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2018-01-26T10:17:48.617+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Tue May 22 23:15:33 UTC 2018","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_79310665_*|*_3_*:*_1_*:*_42016_*|*_5_*:*_1_*:*_0_*|*_10002_*:*_2_*:*_309625733","customfield_12312321":null,"resolutiondate":"2018-01-29T05:17:12.810+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-18524/watchers","watchCount":3,"isWatching":false},"created":"2018-01-24T17:14:14.427+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.svg","name":"Critical","id":"2"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"2.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12340268","id":"12340268","name":"3.0.0","archived":false,"released":true,"releaseDate":"2018-05-21"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2018-05-22T23:15:33.309+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12325007","id":"12325007","name":"Hive"}],"timeoriginalestimate":null,"description":"{noformat}\r\ninsert overwrite table insert_10_1\r\n    select cast(gpa as float),\r\n           age,\r\n           IF(age>40,cast('2011-01-01 01:01:01' as timestamp),NULL),\r\n           IF(LENGTH(name)>10,cast(name as binary),NULL)\r\n    from studentnull10k\r\n\r\nvectorizationSchemaColumns: [0:name:string, 1:age:int, 2:gpa:double]\r\n\r\nExprNodeDescs:\r\n    UDFToFloat(gpa) (type: float),\r\n    age (type: int),\r\n    if((age > 40), 2011-01-01 01:01:01.0, null) (type: timestamp),\r\n    if((length(name) > 10), CAST( name AS BINARY), null) (type: binary)\r\n\r\nselectExpressions:\r\n    VectorUDFAdaptor(if((age > 40), 2011-01-01 01:01:01.0, null))\r\n        (children: LongColGreaterLongScalar(col 1:int, val 40) -> 4:boolean) -> 5:timestamp,\r\n    VectorUDFAdaptor(if((length(name) > 10), CAST( name AS BINARY), null))\r\n        (children: LongColGreaterLongScalar(col 4:int, val 10)(children: StringLength(col 0:string) -> 4:int) -> 6:boolean,\r\n        VectorUDFAdaptor(CAST( name AS BINARY)) -> 7:binary) -> 8:binary\r\n{noformat}\r\n\r\n*// Notice there is no vector expression shown for the last IF stmt.*  It has been magically embedded inside the VectorUDFAdaptor object...\r\n\r\nExecution results in this call stack.\r\n{nocode}\r\nCaused by: java.lang.NullPointerException\r\n\tat java.util.Arrays.copyOfRange(Arrays.java:3521)\r\n\tat org.apache.hadoop.hive.ql.exec.vector.expressions.VectorExpressionWriterFactory$9.writeValue(VectorExpressionWriterFactory.java:1101)\r\n\tat org.apache.hadoop.hive.ql.exec.vector.expressions.VectorExpressionWriterFactory$VectorExpressionWriterBytes.writeValue(VectorExpressionWriterFactory.java:343)\r\n\tat org.apache.hadoop.hive.ql.exec.vector.udf.VectorUDFArgDesc.getDeferredJavaObject(VectorUDFArgDesc.java:123)\r\n\tat org.apache.hadoop.hive.ql.exec.vector.udf.VectorUDFAdaptor.setResult(VectorUDFAdaptor.java:211)\r\n\tat org.apache.hadoop.hive.ql.exec.vector.udf.VectorUDFAdaptor.evaluate(VectorUDFAdaptor.java:177)\r\n\tat org.apache.hadoop.hive.ql.exec.vector.VectorSelectOperator.process(VectorSelectOperator.java:145)\r\n\t... 22 more\r\n{nocode}\r\n\r\nChange is due to:\r\nHIVE-17139: Conditional expressions optimization: skip the expression evaluation if the condition is not satisfied for vectorization engine. (Jia Ke, reviewed by Ferdinand Xu)\r\n\r\nEmbedding a raw vector expression outside of VectorizationContext is quite non-standard and evidently buggy.\r\n\r\n[~Ferd] [~Ke Jia] I am inclined to revert this change.  Comments?  CC: [~ashutoshc] [~hagleitn]","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12907759","id":"12907759","filename":"HIVE-18524.01.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"created":"2018-01-25T20:20:20.977+0000","size":85206,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12907759/HIVE-18524.01.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12908019","id":"12908019","filename":"HIVE-18524.02.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"created":"2018-01-27T14:13:41.629+0000","size":93730,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12908019/HIVE-18524.02.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Vectorization: Execution failure related to non-standard embedding of IfExprConditionalFilter inside VectorUDFAdaptor (Revert HIVE-17139)","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133433/comment/16337924","id":"16337924","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"body":"In particular, we are having difficulty managing vector scratch columns in VectorizationContext and invoking vector expressions outside of that class seems problematic.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"created":"2018-01-24T17:25:42.861+0000","updated":"2018-01-24T17:25:42.861+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133433/comment/16338012","id":"16338012","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"body":"FYI [~teddy.choi] [~gopalv]","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"created":"2018-01-24T18:15:07.013+0000","updated":"2018-01-24T18:15:07.013+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133433/comment/16340871","id":"16340871","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Jk_Self","name":"Jk_Self","key":"jk_self","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ke Jia","active":true,"timeZone":"Etc/UTC"},"body":"[~mmccline], Thanks for your findings.\r\n\r\nif((length(name) > 10), CAST( name AS BINARY), null) (type: binary)\r\n\r\nHere we set “((length(name)) >10)” as conditional expr1,”CAST(name) AS BINARY” as else expr2.\r\n *  HIVE-17139 calculate the conditional expr1 firstly and then calculate the satisfied else expr2 and skip non-satisfied expr2. Here the else expr2 is the BytesColumnVector and the initial value of the vector array is null. So if we skip the expr2, the final value of vector is still null.\r\n * For VectorUDFAdaptor class, it gets the expression result of batch in row mode in setResult method. For the skipped expr2, the value of vector is null. So the VectorUDFAdaptor #setResult method causes the NPE.\r\n * [~mmccline] If the genericUDF is GenericUDFIf, whether we should only get the satisfied expression value in setResult method to avoid the unnecessary operation. I will upload the patch later. Thanks.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Jk_Self","name":"Jk_Self","key":"jk_self","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ke Jia","active":true,"timeZone":"Etc/UTC"},"created":"2018-01-26T10:17:48.617+0000","updated":"2018-01-26T10:17:48.617+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133433/comment/16340948","id":"16340948","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Jk_Self","name":"Jk_Self","key":"jk_self","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ke Jia","active":true,"timeZone":"Etc/UTC"},"body":"[~mmccline] Here is my update in VectorUDFAdaptor#setResult method, which only get the satisfied value of else expression and skip the non-satisfied expression if the genericUDF is GenericUDFIF. And the qtest in my local env is passed. Please help me review. Thanks.\r\n{code:java}\r\nif ((GenericUDFIf.class.getName()).equals(genericUDF.getUdfName()) && cf != null) {\r\ndeferredChildren[0] = argDescs[0].getDeferredJavaObject(i, b, 0, writers);\r\ntry{\r\nObject condition = deferredChildren[0].get();\r\nif ( condition != null && ((BooleanObjectInspector) childrenOIs[0]).get(condition)){\r\ndeferredChildren[1] = argDescs[1].getDeferredJavaObject(i, b, 1, writers);\r\n} else {\r\ndeferredChildren[2] = argDescs[2].getDeferredJavaObject(i, b, 2, writers);\r\n}\r\n} catch (HiveException e){\r\ne.printStackTrace();\r\n}\r\n} else {\r\n// get arguments\r\nfor (int j = 0; j < argDescs.length; j++) {\r\ndeferredChildren[j] = argDescs[j].getDeferredJavaObject(i, b, j, writers);\r\n}\r\n}\r\n{code}\r\n ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Jk_Self","name":"Jk_Self","key":"jk_self","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ke Jia","active":true,"timeZone":"Etc/UTC"},"created":"2018-01-26T11:40:29.077+0000","updated":"2018-01-26T11:40:29.077+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133433/comment/16341031","id":"16341031","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"body":"Given how many of our big queries are failing I'd like to revert now and then go back to the drawing board so I can spend some time reviewing at what you are up to with the whole change and make sure we add more comprehensive Java unit tests and Q file tests.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"created":"2018-01-26T13:15:19.003+0000","updated":"2018-01-26T13:15:19.003+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133433/comment/16341934","id":"16341934","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiveqa","name":"hiveqa","key":"hiveqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hiveqa&avatarId=17060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hiveqa&avatarId=17060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hiveqa&avatarId=17060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hiveqa&avatarId=17060"},"displayName":"Hive QA","active":true,"timeZone":"America/Chicago"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Findbugs executables are not available. {color} |\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  1s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n|| || || || {color:brown} master Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  1m 33s{color} | {color:blue} Maven dependency ordering for branch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  5m 51s{color} | {color:green} master passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  6m 37s{color} | {color:green} master passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  2m 39s{color} | {color:green} master passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  6m 59s{color} | {color:green} master passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 22s{color} | {color:blue} Maven dependency ordering for patch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  6m 58s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  5m 50s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  5m 50s{color} | {color:green} the patch passed {color} |\r\n| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red}  0m 39s{color} | {color:red} ql: The patch generated 4 new + 39 unchanged - 10 fixed = 43 total (was 49) {color} |\r\n| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red}  1m 42s{color} | {color:red} root: The patch generated 4 new + 39 unchanged - 10 fixed = 43 total (was 49) {color} |\r\n| {color:red}-1{color} | {color:red} whitespace {color} | {color:red}  0m  0s{color} | {color:red} The patch 2 line(s) with tabs. {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  6m  7s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:red}-1{color} | {color:red} asflicense {color} | {color:red}  0m 11s{color} | {color:red} The patch generated 6 ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black} 45m 56s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Optional Tests |  asflicense  javac  javadoc  findbugs  checkstyle  compile  |\r\n| uname | Linux hiveptest-server-upstream 3.16.0-4-amd64 #1 SMP Debian 3.16.36-1+deb8u1 (2016-09-03) x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /data/hiveptest/working/yetus/dev-support/hive-personality.sh |\r\n| git revision | master / 905d84e |\r\n| Default Java | 1.8.0_111 |\r\n| checkstyle | http://104.198.109.242/logs//PreCommit-HIVE-Build-8860/yetus/diff-checkstyle-ql.txt |\r\n| checkstyle | http://104.198.109.242/logs//PreCommit-HIVE-Build-8860/yetus/diff-checkstyle-root.txt |\r\n| whitespace | http://104.198.109.242/logs//PreCommit-HIVE-Build-8860/yetus/whitespace-tabs.txt |\r\n| asflicense | http://104.198.109.242/logs//PreCommit-HIVE-Build-8860/yetus/patch-asflicense-problems.txt |\r\n| modules | C: ql . itests U: . |\r\n| Console output | http://104.198.109.242/logs//PreCommit-HIVE-Build-8860/yetus.txt |\r\n| Powered by | Apache Yetus    http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiveqa","name":"hiveqa","key":"hiveqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hiveqa&avatarId=17060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hiveqa&avatarId=17060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hiveqa&avatarId=17060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hiveqa&avatarId=17060"},"displayName":"Hive QA","active":true,"timeZone":"America/Chicago"},"created":"2018-01-27T03:49:28.217+0000","updated":"2018-01-27T03:49:28.217+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133433/comment/16341939","id":"16341939","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiveqa","name":"hiveqa","key":"hiveqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hiveqa&avatarId=17060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hiveqa&avatarId=17060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hiveqa&avatarId=17060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hiveqa&avatarId=17060"},"displayName":"Hive QA","active":true,"timeZone":"America/Chicago"},"body":"\n\nHere are the results of testing the latest attachment:\nhttps://issues.apache.org/jira/secure/attachment/12907759/HIVE-18524.01.patch\n\n{color:green}SUCCESS:{color} +1 due to 2 test(s) being added or modified.\n\n{color:red}ERROR:{color} -1 due to 28 failed/errored test(s), 11810 tests executed\n*Failed tests:*\n{noformat}\norg.apache.hadoop.hive.cli.TestAccumuloCliDriver.testCliDriver[accumulo_queries] (batchId=240)\norg.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[auto_sortmerge_join_2] (batchId=49)\norg.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[mapjoin_hook] (batchId=13)\norg.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[ppd_join5] (batchId=36)\norg.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[row__id] (batchId=78)\norg.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[vector_udf_adaptor_1] (batchId=89)\norg.apache.hadoop.hive.cli.TestEncryptedHDFSCliDriver.testCliDriver[encryption_move_tbl] (batchId=175)\norg.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver[llap_smb] (batchId=152)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=162)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[bucket_map_join_tez1] (batchId=172)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[insert_values_orig_table_use_metadata] (batchId=167)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[llap_acid] (batchId=171)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[llap_acid_fast] (batchId=161)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[resourceplan] (batchId=164)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[sysdb] (batchId=161)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[vectorization_input_format_excludes] (batchId=163)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[ppd_join5] (batchId=122)\norg.apache.hadoop.hive.cli.TestSparkPerfCliDriver.testCliDriver[query39] (batchId=250)\norg.apache.hadoop.hive.cli.TestTezPerfCliDriver.testCliDriver[query64] (batchId=248)\norg.apache.hadoop.hive.cli.control.TestDanglingQOuts.checkDanglingQOut (batchId=221)\norg.apache.hadoop.hive.metastore.TestReplChangeManager.testRecycleNonPartTable (batchId=223)\norg.apache.hadoop.hive.ql.exec.TestOperators.testNoConditionalTaskSizeForLlap (batchId=282)\norg.apache.hadoop.hive.ql.exec.vector.expressions.TestVectorConditionalExpressions.testDoubleColumnColumnIfExpr (batchId=283)\norg.apache.hadoop.hive.ql.io.TestDruidRecordWriter.testWrite (batchId=256)\norg.apache.hive.beeline.cli.TestHiveCli.testNoErrorDB (batchId=188)\norg.apache.hive.jdbc.TestSSL.testConnectionMismatch (batchId=234)\norg.apache.hive.jdbc.TestSSL.testConnectionWrongCertCN (batchId=234)\norg.apache.hive.jdbc.TestSSL.testMetastoreConnectionWrongCertCN (batchId=234)\n{noformat}\n\nTest results: https://builds.apache.org/job/PreCommit-HIVE-Build/8860/testReport\nConsole output: https://builds.apache.org/job/PreCommit-HIVE-Build/8860/console\nTest logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-8860/\n\nMessages:\n{noformat}\nExecuting org.apache.hive.ptest.execution.TestCheckPhase\nExecuting org.apache.hive.ptest.execution.PrepPhase\nExecuting org.apache.hive.ptest.execution.YetusPhase\nExecuting org.apache.hive.ptest.execution.ExecutionPhase\nExecuting org.apache.hive.ptest.execution.ReportingPhase\nTests exited with: TestsFailedException: 28 tests failed\n{noformat}\n\nThis message is automatically generated.\n\nATTACHMENT ID: 12907759 - PreCommit-HIVE-Build","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiveqa","name":"hiveqa","key":"hiveqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hiveqa&avatarId=17060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hiveqa&avatarId=17060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hiveqa&avatarId=17060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hiveqa&avatarId=17060"},"displayName":"Hive QA","active":true,"timeZone":"America/Chicago"},"created":"2018-01-27T04:13:44.199+0000","updated":"2018-01-27T04:13:44.199+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133433/comment/16341994","id":"16341994","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"body":"Failures for\r\n\r\ntestCliDriver's vector_udf_adaptor_1 and\r\n\r\norg.apache.hadoop.hive.ql.exec.vector.expressions.TestVectorConditionalExpressions.testDoubleColumnColumnIfExpr seems related","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"created":"2018-01-27T06:26:31.752+0000","updated":"2018-01-27T06:26:31.752+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133433/comment/16342044","id":"16342044","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiveqa","name":"hiveqa","key":"hiveqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hiveqa&avatarId=17060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hiveqa&avatarId=17060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hiveqa&avatarId=17060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hiveqa&avatarId=17060"},"displayName":"Hive QA","active":true,"timeZone":"America/Chicago"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Findbugs executables are not available. {color} |\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n|| || || || {color:brown} master Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  1m 35s{color} | {color:blue} Maven dependency ordering for branch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  5m 39s{color} | {color:green} master passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  5m 30s{color} | {color:green} master passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  2m 22s{color} | {color:green} master passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  6m 14s{color} | {color:green} master passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 21s{color} | {color:blue} Maven dependency ordering for patch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  6m 42s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  5m 42s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  5m 42s{color} | {color:green} the patch passed {color} |\r\n| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red}  0m 36s{color} | {color:red} ql: The patch generated 4 new + 39 unchanged - 10 fixed = 43 total (was 49) {color} |\r\n| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red}  1m 44s{color} | {color:red} root: The patch generated 4 new + 39 unchanged - 10 fixed = 43 total (was 49) {color} |\r\n| {color:red}-1{color} | {color:red} whitespace {color} | {color:red}  0m  0s{color} | {color:red} The patch 2 line(s) with tabs. {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  6m 24s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:red}-1{color} | {color:red} asflicense {color} | {color:red}  0m 11s{color} | {color:red} The patch generated 6 ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black} 43m 25s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Optional Tests |  asflicense  javac  javadoc  findbugs  checkstyle  compile  |\r\n| uname | Linux hiveptest-server-upstream 3.16.0-4-amd64 #1 SMP Debian 3.16.36-1+deb8u1 (2016-09-03) x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /data/hiveptest/working/yetus/dev-support/hive-personality.sh |\r\n| git revision | master / 905d84e |\r\n| Default Java | 1.8.0_111 |\r\n| checkstyle | http://104.198.109.242/logs//PreCommit-HIVE-Build-8865/yetus/diff-checkstyle-ql.txt |\r\n| checkstyle | http://104.198.109.242/logs//PreCommit-HIVE-Build-8865/yetus/diff-checkstyle-root.txt |\r\n| whitespace | http://104.198.109.242/logs//PreCommit-HIVE-Build-8865/yetus/whitespace-tabs.txt |\r\n| asflicense | http://104.198.109.242/logs//PreCommit-HIVE-Build-8865/yetus/patch-asflicense-problems.txt |\r\n| modules | C: ql . itests U: . |\r\n| Console output | http://104.198.109.242/logs//PreCommit-HIVE-Build-8865/yetus.txt |\r\n| Powered by | Apache Yetus    http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiveqa","name":"hiveqa","key":"hiveqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hiveqa&avatarId=17060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hiveqa&avatarId=17060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hiveqa&avatarId=17060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hiveqa&avatarId=17060"},"displayName":"Hive QA","active":true,"timeZone":"America/Chicago"},"created":"2018-01-27T08:54:17.585+0000","updated":"2018-01-27T08:54:17.585+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133433/comment/16342052","id":"16342052","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiveqa","name":"hiveqa","key":"hiveqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hiveqa&avatarId=17060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hiveqa&avatarId=17060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hiveqa&avatarId=17060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hiveqa&avatarId=17060"},"displayName":"Hive QA","active":true,"timeZone":"America/Chicago"},"body":"\n\nHere are the results of testing the latest attachment:\nhttps://issues.apache.org/jira/secure/attachment/12907759/HIVE-18524.01.patch\n\n{color:green}SUCCESS:{color} +1 due to 2 test(s) being added or modified.\n\n{color:red}ERROR:{color} -1 due to 25 failed/errored test(s), 11824 tests executed\n*Failed tests:*\n{noformat}\nTestMiniLlapCliDriver - did not produce a TEST-*.xml file (likely timed out) (batchId=148)\n\t[mapreduce2.q,orc_llap_counters1.q,bucket6.q,insert_into1.q,empty_dir_in_table.q,orc_merge1.q,parquet_types_vectorization.q,orc_merge_diff_fs.q,llap_stats.q,llapdecider.q,load_hdfs_file_with_space_in_the_name.q,llap_nullscan.q,orc_ppd_basic.q,rcfile_merge4.q,orc_merge3.q]\norg.apache.hadoop.hive.cli.TestAccumuloCliDriver.testCliDriver[accumulo_queries] (batchId=240)\norg.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[mapjoin_hook] (batchId=13)\norg.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[ppd_join5] (batchId=36)\norg.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[row__id] (batchId=78)\norg.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[vector_udf_adaptor_1] (batchId=89)\norg.apache.hadoop.hive.cli.TestEncryptedHDFSCliDriver.testCliDriver[encryption_move_tbl] (batchId=175)\norg.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver[llap_smb] (batchId=152)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[bucket_map_join_tez1] (batchId=172)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[insert_values_orig_table_use_metadata] (batchId=167)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[llap_acid] (batchId=171)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[llap_acid_fast] (batchId=161)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[resourceplan] (batchId=164)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[sysdb] (batchId=161)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[vectorization_input_format_excludes] (batchId=163)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[ppd_join5] (batchId=122)\norg.apache.hadoop.hive.cli.control.TestDanglingQOuts.checkDanglingQOut (batchId=221)\norg.apache.hadoop.hive.ql.exec.TestOperators.testNoConditionalTaskSizeForLlap (batchId=282)\norg.apache.hadoop.hive.ql.exec.vector.expressions.TestVectorConditionalExpressions.testDoubleColumnColumnIfExpr (batchId=283)\norg.apache.hadoop.hive.ql.io.TestDruidRecordWriter.testWrite (batchId=256)\norg.apache.hadoop.hive.ql.parse.TestUpdateDeleteSemanticAnalyzer.testUpdateAllNonPartitionedWhere (batchId=275)\norg.apache.hive.beeline.cli.TestHiveCli.testNoErrorDB (batchId=188)\norg.apache.hive.jdbc.TestSSL.testConnectionMismatch (batchId=234)\norg.apache.hive.jdbc.TestSSL.testConnectionWrongCertCN (batchId=234)\norg.apache.hive.jdbc.TestSSL.testMetastoreConnectionWrongCertCN (batchId=234)\n{noformat}\n\nTest results: https://builds.apache.org/job/PreCommit-HIVE-Build/8865/testReport\nConsole output: https://builds.apache.org/job/PreCommit-HIVE-Build/8865/console\nTest logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-8865/\n\nMessages:\n{noformat}\nExecuting org.apache.hive.ptest.execution.TestCheckPhase\nExecuting org.apache.hive.ptest.execution.PrepPhase\nExecuting org.apache.hive.ptest.execution.YetusPhase\nExecuting org.apache.hive.ptest.execution.ExecutionPhase\nExecuting org.apache.hive.ptest.execution.ReportingPhase\nTests exited with: TestsFailedException: 25 tests failed\n{noformat}\n\nThis message is automatically generated.\n\nATTACHMENT ID: 12907759 - PreCommit-HIVE-Build","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiveqa","name":"hiveqa","key":"hiveqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hiveqa&avatarId=17060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hiveqa&avatarId=17060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hiveqa&avatarId=17060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hiveqa&avatarId=17060"},"displayName":"Hive QA","active":true,"timeZone":"America/Chicago"},"created":"2018-01-27T09:22:23.897+0000","updated":"2018-01-27T09:22:23.897+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133433/comment/16342601","id":"16342601","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiveqa","name":"hiveqa","key":"hiveqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hiveqa&avatarId=17060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hiveqa&avatarId=17060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hiveqa&avatarId=17060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hiveqa&avatarId=17060"},"displayName":"Hive QA","active":true,"timeZone":"America/Chicago"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Findbugs executables are not available. {color} |\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n|| || || || {color:brown} master Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  1m 27s{color} | {color:blue} Maven dependency ordering for branch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  5m 29s{color} | {color:green} master passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  5m 16s{color} | {color:green} master passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  2m 10s{color} | {color:green} master passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  5m 52s{color} | {color:green} master passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 17s{color} | {color:blue} Maven dependency ordering for patch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  6m 29s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  5m 20s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  5m 20s{color} | {color:green} the patch passed {color} |\r\n| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red}  0m 35s{color} | {color:red} ql: The patch generated 4 new + 39 unchanged - 10 fixed = 43 total (was 49) {color} |\r\n| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red}  1m 33s{color} | {color:red} root: The patch generated 4 new + 39 unchanged - 10 fixed = 43 total (was 49) {color} |\r\n| {color:red}-1{color} | {color:red} whitespace {color} | {color:red}  0m  0s{color} | {color:red} The patch 2 line(s) with tabs. {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  6m 22s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:red}-1{color} | {color:red} asflicense {color} | {color:red}  0m 12s{color} | {color:red} The patch generated 6 ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black} 41m 22s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Optional Tests |  asflicense  javac  javadoc  findbugs  checkstyle  compile  |\r\n| uname | Linux hiveptest-server-upstream 3.16.0-4-amd64 #1 SMP Debian 3.16.36-1+deb8u1 (2016-09-03) x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /data/hiveptest/working/yetus/dev-support/hive-personality.sh |\r\n| git revision | master / 68e7a34 |\r\n| Default Java | 1.8.0_111 |\r\n| checkstyle | http://104.198.109.242/logs//PreCommit-HIVE-Build-8893/yetus/diff-checkstyle-ql.txt |\r\n| checkstyle | http://104.198.109.242/logs//PreCommit-HIVE-Build-8893/yetus/diff-checkstyle-root.txt |\r\n| whitespace | http://104.198.109.242/logs//PreCommit-HIVE-Build-8893/yetus/whitespace-tabs.txt |\r\n| asflicense | http://104.198.109.242/logs//PreCommit-HIVE-Build-8893/yetus/patch-asflicense-problems.txt |\r\n| modules | C: ql . itests U: . |\r\n| Console output | http://104.198.109.242/logs//PreCommit-HIVE-Build-8893/yetus.txt |\r\n| Powered by | Apache Yetus    http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiveqa","name":"hiveqa","key":"hiveqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hiveqa&avatarId=17060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hiveqa&avatarId=17060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hiveqa&avatarId=17060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hiveqa&avatarId=17060"},"displayName":"Hive QA","active":true,"timeZone":"America/Chicago"},"created":"2018-01-28T15:19:55.118+0000","updated":"2018-01-28T15:19:55.118+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133433/comment/16342615","id":"16342615","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiveqa","name":"hiveqa","key":"hiveqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hiveqa&avatarId=17060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hiveqa&avatarId=17060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hiveqa&avatarId=17060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hiveqa&avatarId=17060"},"displayName":"Hive QA","active":true,"timeZone":"America/Chicago"},"body":"\n\nHere are the results of testing the latest attachment:\nhttps://issues.apache.org/jira/secure/attachment/12908019/HIVE-18524.02.patch\n\n{color:green}SUCCESS:{color} +1 due to 2 test(s) being added or modified.\n\n{color:red}ERROR:{color} -1 due to 22 failed/errored test(s), 12631 tests executed\n*Failed tests:*\n{noformat}\norg.apache.hadoop.hive.cli.TestAccumuloCliDriver.testCliDriver[accumulo_queries] (batchId=240)\norg.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[ppd_join5] (batchId=36)\norg.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[row__id] (batchId=78)\norg.apache.hadoop.hive.cli.TestEncryptedHDFSCliDriver.testCliDriver[encryption_move_tbl] (batchId=175)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[bucket_map_join_tez1] (batchId=172)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[insert_values_orig_table_use_metadata] (batchId=167)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[llap_acid] (batchId=171)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[llap_acid_fast] (batchId=161)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[mergejoin] (batchId=166)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[resourceplan] (batchId=164)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[sysdb] (batchId=161)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[vectorization_input_format_excludes] (batchId=163)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[ppd_join5] (batchId=122)\norg.apache.hadoop.hive.cli.control.TestDanglingQOuts.checkDanglingQOut (batchId=221)\norg.apache.hadoop.hive.metastore.client.TestListPartitions.testListPartitionsByValuesNoTblName[Embedded] (batchId=207)\norg.apache.hadoop.hive.metastore.client.TestTablesGetExists.testGetAllTablesCaseInsensitive[Embedded] (batchId=207)\norg.apache.hadoop.hive.ql.exec.TestOperators.testNoConditionalTaskSizeForLlap (batchId=282)\norg.apache.hadoop.hive.ql.io.TestDruidRecordWriter.testWrite (batchId=256)\norg.apache.hive.beeline.cli.TestHiveCli.testNoErrorDB (batchId=188)\norg.apache.hive.jdbc.TestSSL.testConnectionMismatch (batchId=234)\norg.apache.hive.jdbc.TestSSL.testConnectionWrongCertCN (batchId=234)\norg.apache.hive.jdbc.TestSSL.testMetastoreConnectionWrongCertCN (batchId=234)\n{noformat}\n\nTest results: https://builds.apache.org/job/PreCommit-HIVE-Build/8893/testReport\nConsole output: https://builds.apache.org/job/PreCommit-HIVE-Build/8893/console\nTest logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-8893/\n\nMessages:\n{noformat}\nExecuting org.apache.hive.ptest.execution.TestCheckPhase\nExecuting org.apache.hive.ptest.execution.PrepPhase\nExecuting org.apache.hive.ptest.execution.YetusPhase\nExecuting org.apache.hive.ptest.execution.ExecutionPhase\nExecuting org.apache.hive.ptest.execution.ReportingPhase\nTests exited with: TestsFailedException: 22 tests failed\n{noformat}\n\nThis message is automatically generated.\n\nATTACHMENT ID: 12908019 - PreCommit-HIVE-Build","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiveqa","name":"hiveqa","key":"hiveqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hiveqa&avatarId=17060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hiveqa&avatarId=17060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hiveqa&avatarId=17060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hiveqa&avatarId=17060"},"displayName":"Hive QA","active":true,"timeZone":"America/Chicago"},"created":"2018-01-28T15:47:58.597+0000","updated":"2018-01-28T15:47:58.597+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133433/comment/16342617","id":"16342617","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"body":"1 day test failures are unrelated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"created":"2018-01-28T15:52:19.038+0000","updated":"2018-01-28T15:52:19.038+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133433/comment/16342906","id":"16342906","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"body":"Committed to master.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"created":"2018-01-29T05:17:01.556+0000","updated":"2018-01-29T05:17:01.556+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133433/comment/16372478","id":"16372478","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Jk_Self","name":"Jk_Self","key":"jk_self","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ke Jia","active":true,"timeZone":"Etc/UTC"},"body":"[~mmccline]: Can you help to review HIVE-17139? Thanks for your help!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Jk_Self","name":"Jk_Self","key":"jk_self","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ke Jia","active":true,"timeZone":"Etc/UTC"},"created":"2018-02-22T06:43:18.013+0000","updated":"2018-02-22T06:43:18.013+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133433/comment/16374456","id":"16374456","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"body":"# Before we add any more vectorization features like this one I'd like to see a better testing framework.  HIVE-18622 was a huge fix to many vector expressions that were handling NULLs incorrectly.  In particular, IfExprColumnNull and IfExprNullColumn had bugs.  By better framework, I like to see all the different UDFs generated with expressions for both row- and vector- and have data will NULLs generated and driven through those expressions and the results compared.  I think a framework like this would have found the bug that resulted in the revert.  And, also would have found many of the problems fixed by HIVE-18622.\r\n # Vector expressions need to be created in the VectorizationContext class and not as a special case in VectorUDFAdaptor.  VectorizationContext instantiates vector expressions so they have proper TypeInfo and can be displayed with EXPLAIN VECTORIZATION.\r\n # What I don't understand is why an IF expr with computed THEN and/or ELSE values isn't just another vector expression.  I may be missing something.  I certainly see it is more sophisticated in that you want to avoid executing any THEN expressions whose IF expr row value is false and similarly avoid executing any ELSE expressions whose IF expr is true.\r\n # Usually, rather than add special cases to existing vector expressions we use GenVectorCode to generate with templates new class variations.  We try to avoid complicated base classes that have lots of decision logic.  That was my impression when I read the code a while ago.  I could be wrong but even though it may seem redudant we generally have vectorization code variation just focus on the specific variation they are executing.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"created":"2018-02-23T15:01:06.388+0000","updated":"2018-02-23T15:01:06.388+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133433/comment/16374965","id":"16374965","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"body":"Currently, we have:\r\n\r\nvector.expressions:\r\n{noformat}\r\nIfExprColumnNull\r\nIfExprNullColumn\r\nIfExprNullNull\r\n{noformat}\r\n\r\nvector.expressions.gen classes for Long/Double:\r\n{noformat}\r\nIfExprLongColumnDoubleScalar\r\nIfExprLongColumnLongColumn\r\nIfExprLongColumnLongScalar\r\nIfExprLongScalarDoubleColumn\r\nIfExprLongScalarDoubleScalar\r\nIfExprLongScalarLongColumn\r\nIfExprLongScalarLongScalar\r\nIfExprDoubleColumnDoubleColumn\r\nIfExprDoubleColumnDoubleScalar\r\nIfExprDoubleColumnLongScalar\r\nIfExprDoubleScalarDoubleColumn\r\nIfExprDoubleScalarDoubleScalar\r\nIfExprDoubleScalarLongColumn\r\nIfExprDoubleScalarLongScalar\r\n{noformat}\r\n(there are others for StringGroup, Timestamp, IntervalDayTime, etc)\r\n\r\nWherever there is a Column is the existing classes, we could generate additional Expr classes, too. E.g.\r\n{noformat}\r\nIfExprLongExprDoubleScalar\r\nIfExprLongExprLongExpr\r\nIfExprLongExprLongScalar\r\nIfExprLongScalarDoubleExpr\r\nIfExprLongScalarLongExpr\r\nIfExprLongScalarLongScalar\r\nIfExprDoubleExprDoubleExpr\r\nIfExprDoubleExprDoubleScalar\r\nIfExprDoubleExprLongScalar\r\nIfExprDoubleScalarDoubleExpr\r\nIfExprDoubleScalarLongExpr\r\n{noformat}\r\n\r\nAnd, for IfExprColumnNull, etc, we could add:\r\n{noformat}\r\nIfExprExprNull\r\nIfExprNullExpr\r\n{noformat}\r\n(if we were keen on performance, we could even generate the type specific versions for the Null classes...)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"created":"2018-02-23T21:04:49.897+0000","updated":"2018-02-23T21:12:29.109+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133433/comment/16375309","id":"16375309","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Jk_Self","name":"Jk_Self","key":"jk_self","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ke Jia","active":true,"timeZone":"Etc/UTC"},"body":"[~mmccline]：\r\n\r\nHIVE-17139 mainly optimize vector- and row- expression.\r\n\r\nFor the vector- expression (for example IfExprDoubleColumnDoubleColumn.java),\r\n\r\nIf(expr1, expr2, expr3), When eveluate the children expression (expr1,expr2 and expr3), Firstly, we compute the expr1 and the result stored in batch.cols[arg1Column], where if the expr1 is true, the value of batch.cols[arg1Column] is 1, or is 0. Then we compute the expr2 if the batch.cols[arg1Column] is 1, or compute the expr3.  After we eveluate the children expression, the value of If expression is compute based on the result of expr1, if the expr1 is 1, the value is expr2, or the value is expr3. I think it will not be NPE like HIVE-18524. If I have wrong understanding, please tell me, thanks.\r\n\r\nFor the row- expression (for example VectorUDFAdaptor.java):\r\n\r\nWe eveluate the children expression same as the vector- expression above. After eveluated the children expression, the current implementation in VectorUDFAdaptor gets the i-th row batch.cols[arg1Column][i], batch.cols[arg2Column][i], batch.cols[arg3Column][i] and then wrap the result with GenericUDF.DeferredObject passing to GenericUDFIf.java . And eveluate the final value of If expression in GenericUDFIf.java base on the passed GenericUDF.DeferredObject. The exception of HIVE-18524 is in the wrapping result with GenericUDF.DeferredObject phase. For example, the value of If expression is BytesColumnVector, in the i-th row, if the expr1 is 1, we will skip compute expr3 during eveluating the children expression phase. So the batch.cols[arg3Column][i] is null. And it will throws NPE. And our solution is only wrap the satisfied value and skip the not-satisfied value. For example, if the batch.cols[arg1Column][i] is 1, we only wrap the batch.cols[arg2Column][i] and not wrap the batch.cols[arg3Column][i].\r\n\r\n And this optimization can gain 17% improvement in Q06 on TPCx-BB and +40% improvement in the complexity String operation. I think this optimization is necessary.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Jk_Self","name":"Jk_Self","key":"jk_self","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ke Jia","active":true,"timeZone":"Etc/UTC"},"created":"2018-02-24T05:20:26.527+0000","updated":"2018-02-24T05:20:26.527+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133433/comment/16375323","id":"16375323","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Jk_Self","name":"Jk_Self","key":"jk_self","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ke Jia","active":true,"timeZone":"Etc/UTC"},"body":"[~mmccline]：\r\n\r\n{quote}Before we add any more vectorization features like this one I'd like to see a better testing framework.  HIVE-18622 was a huge fix to many vector expressions that were handling NULLs incorrectly.  In particular, IfExprColumnNull and IfExprNullColumn had bugs.  By better framework, I like to see all the different UDFs generated with expressions for both row- and vector- and have data will NULLs generated and driven through those expressions and the results compared.  I think a framework like this would have found the bug that resulted in the revert.  And, also would have found many of the problems fixed by HIVE-18622.\r\n\r\n{quote}Now, we have passed all the origin qtest and the new added qtest I can think of . If you have comprehensive test cases, Please tell me, thanks.\r\n\r\n{quote}Vector expressions need to be created in the VectorizationContext class and not as a special case in VectorUDFAdaptor.  VectorizationContext instantiates vector expressions so they have proper TypeInfo and can be displayed with EXPLAIN VECTORIZATION.\r\n\r\n{quote} I will try to move the creation of Vector expression code in VectorUDFAdaptor to VectorizationContext .\r\n\r\n{quote}What I don't understand is why an IF expr with computed THEN and/or ELSE values isn't just another vector expression.  I may be missing something.  I certainly see it is more sophisticated in that you want to avoid executing any THEN expressions whose IF expr row value is false and similarly avoid executing any ELSE expressions whose IF expr is true.\r\n\r\n{quote}Case When Else expression is translated to If expression in HIVE-16731. If I have wrong understanding your question, Please tell me, thanks.\r\n\r\n{quote}Usually, rather than add special cases to existing vector expressions we use GenVectorCode to generate with templates new class variations.  We try to avoid complicated base classes that have lots of decision logic.  That was my impression when I read the code a while ago.  I could be wrong but even though it may seem redudant we generally have vectorization code variation just focus on the specific variation they are executing.\r\n\r\n{quote}The special case only focus on the row- expression (VectorUDFAdaptor.java) to solve the GenericUDFIf case and for the vector- expression, I think it can apply to all the generally case. If I have wrong understanding, Please tell me.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Jk_Self","name":"Jk_Self","key":"jk_self","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ke Jia","active":true,"timeZone":"Etc/UTC"},"created":"2018-02-24T05:42:18.414+0000","updated":"2018-02-24T05:42:18.414+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133433/comment/16375355","id":"16375355","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Jk_Self","name":"Jk_Self","key":"jk_self","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ke Jia","active":true,"timeZone":"Etc/UTC"},"body":"[~mmccline]：\r\n\r\nI have moved the creation of Vector expression code in VectorUDFAdaptor to VectorizationContext . The RB link is [https://reviews.apache.org/r/61019/diff/11#index_header.] If any questions, Please tell me, Thanks!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Jk_Self","name":"Jk_Self","key":"jk_self","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ke Jia","active":true,"timeZone":"Etc/UTC"},"created":"2018-02-24T06:41:46.638+0000","updated":"2018-02-24T06:41:46.638+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133433/comment/16375431","id":"16375431","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"body":"1) I want to see the IF expr support for THEN/ELSE expressions general not just for a special case for VectorUDFAdaptor children.\r\n\r\n2) Ok, so the test framework is on me.  I'm still concerned about quality here.  Historically our vectorization testing has been too minimal.\r\n\r\n3) I don't want to see IfExprColumnNull and IfExprNullColumn and other classes made subclasses of IfExprConditionalFilter and made more complicated.  I'd rather see new classes IfExprExprExpr and perhaps IfExprExprNull and IfExprNullExpr each of which can be read straight through.\r\n\r\n4) Why are any changes to VectorUDFAdaptor necessary at all? ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"created":"2018-02-24T09:06:44.701+0000","updated":"2018-02-24T09:06:44.701+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133433/comment/16376347","id":"16376347","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Jk_Self","name":"Jk_Self","key":"jk_self","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ke Jia","active":true,"timeZone":"Etc/UTC"},"body":"[~mmccline]:\r\n\r\n{quote}I want to see the IF expr support for THEN/ELSE expressions general not just for a special case for VectorUDFAdaptor children.\r\n\r\n{quote}\r\n\r\nI think the IF expr support for THEN/ELSE expressions has two cases:row mode and vector mode. Here, the specicial case for VectorUDFAdaptor is to handle the row mode. And For the vector mode is handled in the IfExprXX classes.\r\n\r\n{quote}Ok, so the test framework is on me.  I'm still concerned about quality here.  Historically our vectorization testing has been too minimal.\r\n\r\n{quote}\r\n\r\nThanks for your help.\r\n\r\n{quote}I don't want to see IfExprColumnNull and IfExprNullColumn and other classes made subclasses of IfExprConditionalFilter and made more complicated.  I'd rather see new classes IfExprExprExpr and perhaps IfExprExprNull and IfExprNullExpr each of which can be read straight through.\r\n\r\n{quote}\r\n\r\nI will add three new classes  IfExprExprExpr , IfExprExprNull and IfExprNullExpr to handle different case later.\r\n\r\n{quote}Why are any changes to VectorUDFAdaptor necessary at all?\r\n\r\n{quote}\r\n\r\nThe change in VectorUDFApaptor is to handle If expression in row mode. In hive, some row mode expression(deciminal operation) does not support vector mode. And if the IF expression contain decimal operation, hive will make vectorized operator by VectorUDFAdaptor.\r\n\r\nIf any questions, Please tell me. Thanks for your help.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Jk_Self","name":"Jk_Self","key":"jk_self","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ke Jia","active":true,"timeZone":"Etc/UTC"},"created":"2018-02-26T02:54:32.403+0000","updated":"2018-02-26T02:54:32.403+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133433/comment/16376524","id":"16376524","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Jk_Self","name":"Jk_Self","key":"jk_self","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ke Jia","active":true,"timeZone":"Etc/UTC"},"body":"[~mmccline]:\r\n\r\nI have add new classes IfExprExprExprFilter , IfExprExprNullFilter and IfExprNullExprFilter to handle different If expression case. The review link is [https://reviews.apache.org/r/61019/diff/12#index_header.]  If any questions, Please tell me, Thanks!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Jk_Self","name":"Jk_Self","key":"jk_self","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ke Jia","active":true,"timeZone":"Etc/UTC"},"created":"2018-02-26T08:45:12.208+0000","updated":"2018-02-26T08:45:12.208+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133433/comment/16376866","id":"16376866","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"body":"-1.  I'm at a total loss to understand why it is necessary to inject this IF vector expression inside the VectorUDFAdaptor class.\r\n\r\nI'm going to come up with an alternative design for IF statements that have expressions in the THEN or ELSE that have a vector expression that doesn't use the VectorUDFAdaptor.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"created":"2018-02-26T13:33:32.374+0000","updated":"2018-02-26T13:33:32.374+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133433/comment/16378198","id":"16378198","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Jk_Self","name":"Jk_Self","key":"jk_self","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ke Jia","active":true,"timeZone":"Etc/UTC"},"body":"[~mmccline]:\r\n\r\nFor the row mode expression, whether can we not optimize the if expression in VectorUDFAdaptor or not currently? \r\n\r\nFor the vector mode expression, I may have some wrong understanding about your suggestion before. After discuss with [~Ferd] offline, I think your suggestion make sense. But I have one question about  the current vector expression design. According to my understanding, the vector expression mainly has two cases: containing Null and not containing Null. For the containing NULL, the vector expression can be IfExprColumnNull, IfExprNullColumn and IfExprNullNull. For the not containing Null, the vector expression has two cases: generated classes by GenVectorCode(Long/Double) and not generated class(String/IntervalDayTime/TimeStamp). Here, why the String/IntervalDayTime/TimeStamp type classes is not generated by GenVectorCode?  And what is the difference between the Long/Double and String/IntervalDayTime/TimeStamp? If you have some ideas, Please tell me. Thanks.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Jk_Self","name":"Jk_Self","key":"jk_self","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ke Jia","active":true,"timeZone":"Etc/UTC"},"created":"2018-02-27T08:12:23.095+0000","updated":"2018-02-27T08:12:23.095+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133433/comment/16485333","id":"16485333","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"body":"This jira is resolved and released with Hive 3.0 If you find an issue with it, please create a new jira.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-05-22T23:15:33.301+0000","updated":"2018-05-22T23:15:33.301+0000"}],"maxResults":26,"total":26,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-18524/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i3pban:"}}