{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12827145","self":"https://issues.apache.org/jira/rest/api/2/issue/12827145","key":"HIVE-10609","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310843","id":"12310843","key":"HIVE","name":"Hive","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310843&avatarId=11935","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310843&avatarId=11935","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310843&avatarId=11935","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310843&avatarId=11935"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12332154","id":"12332154","description":"","name":"1.3.0","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12332641","id":"12332641","description":"Hive 2.0.0","name":"2.0.0","archived":false,"released":true,"releaseDate":"2016-02-15"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2015-05-06T05:42:32.359+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Mon May 18 19:53:59 UTC 2015","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"3_*:*_1_*:*_139437_*|*_10002_*:*_2_*:*_149550039_*|*_1_*:*_1_*:*_433329806_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2015-05-11T23:00:55.212+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-10609/watchers","watchCount":5,"isWatching":false},"created":"2015-05-05T05:03:56.003+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"2.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12329345","id":"12329345","description":"Hive 1.2.0","name":"1.2.0","archived":false,"released":true,"releaseDate":"2015-05-18"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2015-06-05T21:50:18.799+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12321300","id":"12321300","name":"Vectorization","description":"Vectorized query execution"}],"timeoriginalestimate":null,"description":"TPC-DS Q64 fails with ClassCastException.\nQuery\n{code}\n\n\nselect cs1.product_name ,cs1.store_name ,cs1.store_zip ,cs1.b_street_number ,cs1.b_streen_name ,cs1.b_city\n     ,cs1.b_zip ,cs1.c_street_number ,cs1.c_street_name ,cs1.c_city ,cs1.c_zip ,cs1.syear ,cs1.cnt\n     ,cs1.s1 ,cs1.s2 ,cs1.s3\n     ,cs2.s1 ,cs2.s2 ,cs2.s3 ,cs2.syear ,cs2.cnt\nfrom\n(select i_product_name as product_name ,i_item_sk as item_sk ,s_store_name as store_name\n     ,s_zip as store_zip ,ad1.ca_street_number as b_street_number ,ad1.ca_street_name as b_streen_name\n     ,ad1.ca_city as b_city ,ad1.ca_zip as b_zip ,ad2.ca_street_number as c_street_number\n     ,ad2.ca_street_name as c_street_name ,ad2.ca_city as c_city ,ad2.ca_zip as c_zip\n     ,d1.d_year as syear ,d2.d_year as fsyear ,d3.d_year as s2year ,count(*) as cnt\n     ,sum(ss_wholesale_cost) as s1 ,sum(ss_list_price) as s2 ,sum(ss_coupon_amt) as s3\n  FROM   store_sales\n        JOIN store_returns ON store_sales.ss_item_sk = store_returns.sr_item_sk and store_sales.ss_ticket_number = store_returns.sr_ticket_number\n        JOIN customer ON store_sales.ss_customer_sk = customer.c_customer_sk\n        JOIN date_dim d1 ON store_sales.ss_sold_date_sk = d1.d_date_sk\n        JOIN date_dim d2 ON customer.c_first_sales_date_sk = d2.d_date_sk \n        JOIN date_dim d3 ON customer.c_first_shipto_date_sk = d3.d_date_sk\n        JOIN store ON store_sales.ss_store_sk = store.s_store_sk\n        JOIN customer_demographics cd1 ON store_sales.ss_cdemo_sk= cd1.cd_demo_sk\n        JOIN customer_demographics cd2 ON customer.c_current_cdemo_sk = cd2.cd_demo_sk\n        JOIN promotion ON store_sales.ss_promo_sk = promotion.p_promo_sk\n        JOIN household_demographics hd1 ON store_sales.ss_hdemo_sk = hd1.hd_demo_sk\n        JOIN household_demographics hd2 ON customer.c_current_hdemo_sk = hd2.hd_demo_sk\n        JOIN customer_address ad1 ON store_sales.ss_addr_sk = ad1.ca_address_sk\n        JOIN customer_address ad2 ON customer.c_current_addr_sk = ad2.ca_address_sk\n        JOIN income_band ib1 ON hd1.hd_income_band_sk = ib1.ib_income_band_sk\n        JOIN income_band ib2 ON hd2.hd_income_band_sk = ib2.ib_income_band_sk\n        JOIN item ON store_sales.ss_item_sk = item.i_item_sk\n        JOIN\n (select cs_item_sk\n        ,sum(cs_ext_list_price) as sale,sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit) as refund\n  from catalog_sales JOIN catalog_returns\n  ON catalog_sales.cs_item_sk = catalog_returns.cr_item_sk\n    and catalog_sales.cs_order_number = catalog_returns.cr_order_number\n  group by cs_item_sk\n  having sum(cs_ext_list_price)>2*sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit)) cs_ui\nON store_sales.ss_item_sk = cs_ui.cs_item_sk\n  WHERE  \n         cd1.cd_marital_status <> cd2.cd_marital_status and\n         i_color in ('maroon','burnished','dim','steel','navajo','chocolate') and\n         i_current_price between 35 and 35 + 10 and\n         i_current_price between 35 + 1 and 35 + 15\ngroup by i_product_name ,i_item_sk ,s_store_name ,s_zip ,ad1.ca_street_number\n       ,ad1.ca_street_name ,ad1.ca_city ,ad1.ca_zip ,ad2.ca_street_number\n       ,ad2.ca_street_name ,ad2.ca_city ,ad2.ca_zip ,d1.d_year ,d2.d_year ,d3.d_year\n) cs1\nJOIN\n(select i_product_name as product_name ,i_item_sk as item_sk ,s_store_name as store_name\n     ,s_zip as store_zip ,ad1.ca_street_number as b_street_number ,ad1.ca_street_name as b_streen_name\n     ,ad1.ca_city as b_city ,ad1.ca_zip as b_zip ,ad2.ca_street_number as c_street_number\n     ,ad2.ca_street_name as c_street_name ,ad2.ca_city as c_city ,ad2.ca_zip as c_zip\n     ,d1.d_year as syear ,d2.d_year as fsyear ,d3.d_year as s2year ,count(*) as cnt\n     ,sum(ss_wholesale_cost) as s1 ,sum(ss_list_price) as s2 ,sum(ss_coupon_amt) as s3\n  FROM   store_sales\n        JOIN store_returns ON store_sales.ss_item_sk = store_returns.sr_item_sk and store_sales.ss_ticket_number = store_returns.sr_ticket_number\n        JOIN customer ON store_sales.ss_customer_sk = customer.c_customer_sk\n        JOIN date_dim d1 ON store_sales.ss_sold_date_sk = d1.d_date_sk\n        JOIN date_dim d2 ON customer.c_first_sales_date_sk = d2.d_date_sk \n        JOIN date_dim d3 ON customer.c_first_shipto_date_sk = d3.d_date_sk\n        JOIN store ON store_sales.ss_store_sk = store.s_store_sk\n        JOIN customer_demographics cd1 ON store_sales.ss_cdemo_sk= cd1.cd_demo_sk\n        JOIN customer_demographics cd2 ON customer.c_current_cdemo_sk = cd2.cd_demo_sk\n        JOIN promotion ON store_sales.ss_promo_sk = promotion.p_promo_sk\n        JOIN household_demographics hd1 ON store_sales.ss_hdemo_sk = hd1.hd_demo_sk\n        JOIN household_demographics hd2 ON customer.c_current_hdemo_sk = hd2.hd_demo_sk\n        JOIN customer_address ad1 ON store_sales.ss_addr_sk = ad1.ca_address_sk\n        JOIN customer_address ad2 ON customer.c_current_addr_sk = ad2.ca_address_sk\n        JOIN income_band ib1 ON hd1.hd_income_band_sk = ib1.ib_income_band_sk\n        JOIN income_band ib2 ON hd2.hd_income_band_sk = ib2.ib_income_band_sk\n        JOIN item ON store_sales.ss_item_sk = item.i_item_sk\n        JOIN\n (select cs_item_sk\n        ,sum(cs_ext_list_price) as sale,sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit) as refund\n  from catalog_sales JOIN catalog_returns\n  ON catalog_sales.cs_item_sk = catalog_returns.cr_item_sk\n    and catalog_sales.cs_order_number = catalog_returns.cr_order_number\n  group by cs_item_sk\n  having sum(cs_ext_list_price)>2*sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit)) cs_ui\nON store_sales.ss_item_sk = cs_ui.cs_item_sk\n  WHERE  \n         cd1.cd_marital_status <> cd2.cd_marital_status and\n         i_color in ('maroon','burnished','dim','steel','navajo','chocolate') and\n         i_current_price between 35 and 35 + 10 and\n         i_current_price between 35 + 1 and 35 + 15\ngroup by i_product_name ,i_item_sk ,s_store_name ,s_zip ,ad1.ca_street_number\n       ,ad1.ca_street_name ,ad1.ca_city ,ad1.ca_zip ,ad2.ca_street_number\n       ,ad2.ca_street_name ,ad2.ca_city ,ad2.ca_zip ,d1.d_year ,d2.d_year ,d3.d_year\n) cs2\nON cs1.item_sk=cs2.item_sk\nwhere \n     cs1.syear = 2000 and\n     cs2.syear = 2000 + 1 and\n     cs2.cnt <= cs1.cnt and\n     cs1.store_name = cs2.store_name and\n     cs1.store_zip = cs2.store_zip\norder by cs1.product_name ,cs1.store_name ,cs2.cnt\n{code}\n\nException \n{code}\n], TaskAttempt 3 failed, info=[Error: Failure while running task:java.lang.RuntimeException: java.lang.RuntimeException: org.apache.hadoop.hive.ql.metadata.HiveException: Hive Runtime Error while processing row \n\tat org.apache.hadoop.hive.ql.exec.tez.TezProcessor.initializeAndRunProcessor(TezProcessor.java:171)\n\tat org.apache.hadoop.hive.ql.exec.tez.TezProcessor.run(TezProcessor.java:137)\n\tat org.apache.tez.runtime.LogicalIOProcessorRuntimeTask.run(LogicalIOProcessorRuntimeTask.java:337)\n\tat org.apache.tez.runtime.task.TezTaskRunner$TaskRunnerCallable$1.run(TezTaskRunner.java:179)\n\tat org.apache.tez.runtime.task.TezTaskRunner$TaskRunnerCallable$1.run(TezTaskRunner.java:171)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat javax.security.auth.Subject.doAs(Subject.java:415)\n\tat org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1628)\n\tat org.apache.tez.runtime.task.TezTaskRunner$TaskRunnerCallable.callInternal(TezTaskRunner.java:171)\n\tat org.apache.tez.runtime.task.TezTaskRunner$TaskRunnerCallable.callInternal(TezTaskRunner.java:167)\n\tat org.apache.tez.common.CallableWithNdc.call(CallableWithNdc.java:36)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:262)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.RuntimeException: org.apache.hadoop.hive.ql.metadata.HiveException: Hive Runtime Error while processing row \n\tat org.apache.hadoop.hive.ql.exec.tez.MapRecordSource.processRow(MapRecordSource.java:91)\n\tat org.apache.hadoop.hive.ql.exec.tez.MapRecordSource.pushRecord(MapRecordSource.java:68)\n\tat org.apache.hadoop.hive.ql.exec.tez.MapRecordProcessor.run(MapRecordProcessor.java:290)\n\tat org.apache.hadoop.hive.ql.exec.tez.TezProcessor.initializeAndRunProcessor(TezProcessor.java:148)\n\t... 14 more\nCaused by: org.apache.hadoop.hive.ql.metadata.HiveException: Hive Runtime Error while processing row \n\tat org.apache.hadoop.hive.ql.exec.vector.VectorMapOperator.process(VectorMapOperator.java:52)\n\tat org.apache.hadoop.hive.ql.exec.tez.MapRecordSource.processRow(MapRecordSource.java:83)\n\t... 17 more\nCaused by: org.apache.hadoop.hive.ql.metadata.HiveException: Unexpected exception: org.apache.hadoop.hive.ql.exec.vector.BytesColumnVector cannot be cast to org.apache.hadoop.hive.ql.exec.vector.DoubleColumnVector\n\tat org.apache.hadoop.hive.ql.exec.MapJoinOperator.process(MapJoinOperator.java:426)\n\tat org.apache.hadoop.hive.ql.exec.vector.VectorMapJoinOperator.process(VectorMapJoinOperator.java:290)\n\tat org.apache.hadoop.hive.ql.exec.Operator.forward(Operator.java:837)\n\tat org.apache.hadoop.hive.ql.exec.vector.VectorSelectOperator.process(VectorSelectOperator.java:138)\n\tat org.apache.hadoop.hive.ql.exec.Operator.forward(Operator.java:837)\n\tat org.apache.hadoop.hive.ql.exec.vector.VectorFilterOperator.process(VectorFilterOperator.java:114)\n\tat org.apache.hadoop.hive.ql.exec.Operator.forward(Operator.java:837)\n\tat org.apache.hadoop.hive.ql.exec.TableScanOperator.process(TableScanOperator.java:97)\n\tat org.apache.hadoop.hive.ql.exec.MapOperator$MapOpCtx.forward(MapOperator.java:162)\n\tat org.apache.hadoop.hive.ql.exec.vector.VectorMapOperator.process(VectorMapOperator.java:45)\n\t... 18 more\nCaused by: java.lang.ClassCastException: org.apache.hadoop.hive.ql.exec.vector.BytesColumnVector cannot be cast to org.apache.hadoop.hive.ql.exec.vector.DoubleColumnVector\n\tat org.apache.hadoop.hive.ql.exec.vector.expressions.VectorExpressionWriterFactory$VectorExpressionWriterDouble.writeValue(VectorExpressionWriterFactory.java:225)\n\tat org.apache.hadoop.hive.ql.exec.vector.VectorMapJoinOperator.getRowObject(VectorMapJoinOperator.java:352)\n\tat org.apache.hadoop.hive.ql.exec.vector.VectorMapJoinOperator.spillBigTableRow(VectorMapJoinOperator.java:309)\n\tat org.apache.hadoop.hive.ql.exec.MapJoinOperator.process(MapJoinOperator.java:404)\n\t... 27 more\n]], Vertex failed as one or more tasks failed. failedTasks:1, Vertex vertex_1426707664723_4575_1_34 [Map 40] killed/failed due to:null]Vertex killed, vertexName=Reducer 6, vertexId=vertex_1426707664723_4575_1_42, diagnostics=[Vertex received Kill while in RUNNING state., Vertex killed as other vertex failed. failedTasks:0, Vertex vertex_1426707664723_4575_1_42 [Reducer 6] killed/failed due to:null]Vertex killed, vertexName=Reducer 27, vertexId=vertex_1426707664723_4575_1_36, diagnostics=[Vertex received Kill while in RUNNING state., Vertex killed as other vertex failed. failedTasks:0, Vertex vertex_1426707664723_4575_1_36 [Reducer 27] killed/failed due to:null]Vertex killed, vertexName=Reducer 5, vertexId=vertex_1426707664723_4575_1_41, diagnostics=[Vertex received Kill while in RUNNING state., Vertex killed as other vertex failed. failedTasks:0, Vertex vertex_1426707664723_4575_1_41 [Reducer 5] killed/failed due to:null]Vertex killed, vertexName=Map 26, vertexId=vertex_1426707664723_4575_1_35, diagnostics=[Vertex received Kill while in RUNNING state., Vertex killed as other vertex failed. failedTasks:0, Vertex vertex_1426707664723_4575_1_35 [Map 26] killed/failed due to:null]Vertex killed, vertexName=Map 19, vertexId=vertex_1426707664723_4575_1_39, diagnostics=[Vertex received Kill while in RUNNING state., Vertex killed as other vertex failed. failedTasks:0, Vertex vertex_1426707664723_4575_1_39 [Map 19] killed/failed due to:null]Vertex killed, vertexName=Map 4, vertexId=vertex_1426707664723_4575_1_40, diagnostics=[Vertex received Kill while in RUNNING state., Vertex killed as other vertex failed. failedTasks:0, Vertex vertex_1426707664723_4575_1_40 [Map 4] killed/failed due to:null]DAG failed due to vertex failure. failedVertices:1 killedVertices:6\n{code}\n\nPlan \n{code}\n\nSTAGE PLANS:\n  Stage: Stage-1\n    Tez\n      Edges:\n        Map 1 <- Map 2 (BROADCAST_EDGE)\n        Map 10 <- Map 11 (BROADCAST_EDGE), Map 12 (BROADCAST_EDGE), Map 13 (BROADCAST_EDGE), Map 18 (BROADCAST_EDGE)\n        Map 14 <- Map 15 (BROADCAST_EDGE)\n        Map 15 <- Map 16 (BROADCAST_EDGE), Map 17 (BROADCAST_EDGE)\n        Map 18 <- Map 14 (BROADCAST_EDGE)\n        Map 19 <- Map 10 (BROADCAST_EDGE), Map 7 (BROADCAST_EDGE), Map 9 (BROADCAST_EDGE), Reducer 21 (BROADCAST_EDGE)\n        Map 20 <- Map 22 (BROADCAST_EDGE)\n        Map 23 <- Map 24 (BROADCAST_EDGE)\n        Map 26 <- Map 23 (BROADCAST_EDGE), Map 25 (BROADCAST_EDGE), Map 40 (BROADCAST_EDGE)\n        Map 28 <- Map 29 (BROADCAST_EDGE)\n        Map 31 <- Map 32 (BROADCAST_EDGE), Map 33 (BROADCAST_EDGE), Map 34 (BROADCAST_EDGE), Map 39 (BROADCAST_EDGE)\n        Map 35 <- Map 36 (BROADCAST_EDGE)\n        Map 36 <- Map 37 (BROADCAST_EDGE), Map 38 (BROADCAST_EDGE)\n        Map 39 <- Map 35 (BROADCAST_EDGE)\n        Map 4 <- Map 1 (BROADCAST_EDGE), Map 19 (BROADCAST_EDGE), Map 3 (BROADCAST_EDGE)\n        Map 40 <- Map 28 (BROADCAST_EDGE), Map 30 (BROADCAST_EDGE), Map 31 (BROADCAST_EDGE), Reducer 42 (BROADCAST_EDGE)\n        Map 41 <- Map 43 (BROADCAST_EDGE)\n        Map 7 <- Map 8 (BROADCAST_EDGE)\n        Reducer 21 <- Map 20 (SIMPLE_EDGE)\n        Reducer 27 <- Map 26 (SIMPLE_EDGE)\n        Reducer 42 <- Map 41 (SIMPLE_EDGE)\n        Reducer 5 <- Map 4 (SIMPLE_EDGE), Reducer 27 (BROADCAST_EDGE)\n        Reducer 6 <- Reducer 5 (SIMPLE_EDGE)\n      DagName: jenkins_20150503192312_dad6086a-e3ca-4519-aab9-d1179786ba1d:1\n      Vertices:\n        Map 1 \n            Map Operator Tree:\n                TableScan\n                  alias: hd1\n                  filterExpr: (hd_income_band_sk is not null and hd_demo_sk is not null) (type: boolean)\n                  Statistics: Num rows: 7200 Data size: 770400 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: (hd_income_band_sk is not null and hd_demo_sk is not null) (type: boolean)\n                    Statistics: Num rows: 7200 Data size: 57600 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: hd_demo_sk (type: int), hd_income_band_sk (type: int)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 7200 Data size: 57600 Basic stats: COMPLETE Column stats: COMPLETE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col1 (type: int)\n                          1 _col0 (type: int)\n                        outputColumnNames: _col0\n                        input vertices:\n                          1 Map 2\n                        Statistics: Num rows: 7200 Data size: 28800 Basic stats: COMPLETE Column stats: COMPLETE\n                        HybridGraceHashJoin: true\n                        Reduce Output Operator\n                          key expressions: _col0 (type: int)\n                          sort order: +\n                          Map-reduce partition columns: _col0 (type: int)\n                          Statistics: Num rows: 7200 Data size: 28800 Basic stats: COMPLETE Column stats: COMPLETE\n            Execution mode: vectorized\n        Map 10 \n            Map Operator Tree:\n                TableScan\n                  alias: cd1\n                  filterExpr: cd_demo_sk is not null (type: boolean)\n                  Statistics: Num rows: 1920800 Data size: 718379200 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: cd_demo_sk is not null (type: boolean)\n                    Statistics: Num rows: 1920800 Data size: 170951200 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: cd_demo_sk (type: int), cd_marital_status (type: string)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 1920800 Data size: 170951200 Basic stats: COMPLETE Column stats: COMPLETE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col0 (type: int)\n                          1 _col1 (type: int)\n                        outputColumnNames: _col1, _col2, _col4, _col5, _col6, _col7\n                        input vertices:\n                          1 Map 11\n                        Statistics: Num rows: 1387730 Data size: 145711650 Basic stats: COMPLETE Column stats: COMPLETE\n                        HybridGraceHashJoin: true\n                        Map Join Operator\n                          condition map:\n                               Inner Join 0 to 1\n                          keys:\n                            0 _col7 (type: int)\n                            1 _col0 (type: int)\n                          outputColumnNames: _col1, _col2, _col4, _col5, _col6, _col9\n                          input vertices:\n                            1 Map 12\n                          Statistics: Num rows: 1387730 Data size: 145711650 Basic stats: COMPLETE Column stats: COMPLETE\n                          HybridGraceHashJoin: true\n                          Map Join Operator\n                            condition map:\n                                 Inner Join 0 to 1\n                            keys:\n                              0 _col6 (type: int)\n                              1 _col0 (type: int)\n                            outputColumnNames: _col1, _col2, _col4, _col5, _col9, _col11\n                            input vertices:\n                              1 Map 13\n                            Statistics: Num rows: 1387730 Data size: 145711650 Basic stats: COMPLETE Column stats: COMPLETE\n                            HybridGraceHashJoin: true\n                            Map Join Operator\n                              condition map:\n                                   Inner Join 0 to 1\n                              keys:\n                                0 _col2 (type: int)\n                                1 _col4 (type: int)\n                              outputColumnNames: _col1, _col4, _col5, _col9, _col11, _col13, _col15, _col18, _col19, _col21, _col23, _col24, _col25, _col29, _col31, _col32\n                              input vertices:\n                                1 Map 18\n                              Statistics: Num rows: 68 Data size: 26860 Basic stats: COMPLETE Column stats: COMPLETE\n                              HybridGraceHashJoin: true\n                              Filter Operator\n                                predicate: (_col13 <> _col1) (type: boolean)\n                                Statistics: Num rows: 68 Data size: 26860 Basic stats: COMPLETE Column stats: COMPLETE\n                                Select Operator\n                                  expressions: _col15 (type: int), _col24 (type: float), _col25 (type: float), _col4 (type: int), _col5 (type: int), _col29 (type: int), _col9 (type: int), _col11 (type: int), _col31 (type: string), _col32 (type: string), _col18 (type: int), _col19 (type: int), _col21 (type: int), _col23 (type: float)\n                                  outputColumnNames: _col1, _col10, _col11, _col16, _col17, _col21, _col23, _col25, _col27, _col28, _col4, _col5, _col7, _col9\n                                  Statistics: Num rows: 68 Data size: 15300 Basic stats: COMPLETE Column stats: COMPLETE\n                                  Reduce Output Operator\n                                    key expressions: _col1 (type: int)\n                                    sort order: +\n                                    Map-reduce partition columns: _col1 (type: int)\n                                    Statistics: Num rows: 68 Data size: 15300 Basic stats: COMPLETE Column stats: COMPLETE\n                                    value expressions: _col4 (type: int), _col5 (type: int), _col7 (type: int), _col9 (type: float), _col10 (type: float), _col11 (type: float), _col16 (type: int), _col17 (type: int), _col21 (type: int), _col23 (type: int), _col25 (type: int), _col27 (type: string), _col28 (type: string)\n            Execution mode: vectorized\n        Map 11 \n            Map Operator Tree:\n                TableScan\n                  alias: customer\n                  filterExpr: (((((c_current_cdemo_sk is not null and c_first_sales_date_sk is not null) and c_first_shipto_date_sk is not null) and c_customer_sk is not null) and c_current_hdemo_sk is not null) and c_current_addr_sk is not null) (type: boolean)\n                  Statistics: Num rows: 1600000 Data size: 1241633212 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: (((((c_current_cdemo_sk is not null and c_first_sales_date_sk is not null) and c_first_shipto_date_sk is not null) and c_customer_sk is not null) and c_current_hdemo_sk is not null) and c_current_addr_sk is not null) (type: boolean)\n                    Statistics: Num rows: 1387730 Data size: 32529324 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: c_customer_sk (type: int), c_current_cdemo_sk (type: int), c_current_hdemo_sk (type: int), c_current_addr_sk (type: int), c_first_shipto_date_sk (type: int), c_first_sales_date_sk (type: int)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5\n                      Statistics: Num rows: 1387730 Data size: 32529324 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col1 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col1 (type: int)\n                        Statistics: Num rows: 1387730 Data size: 32529324 Basic stats: COMPLETE Column stats: COMPLETE\n                        value expressions: _col0 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int), _col5 (type: int)\n            Execution mode: vectorized\n        Map 12 \n            Map Operator Tree:\n                TableScan\n                  alias: d1\n                  filterExpr: d_date_sk is not null (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: d_date_sk is not null (type: boolean)\n                    Statistics: Num rows: 73049 Data size: 584392 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: d_date_sk (type: int), d_year (type: int)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 73049 Data size: 584392 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 73049 Data size: 584392 Basic stats: COMPLETE Column stats: COMPLETE\n                        value expressions: _col1 (type: int)\n            Execution mode: vectorized\n        Map 13 \n            Map Operator Tree:\n                TableScan\n                  alias: d1\n                  filterExpr: d_date_sk is not null (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: d_date_sk is not null (type: boolean)\n                    Statistics: Num rows: 73049 Data size: 584392 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: d_date_sk (type: int), d_year (type: int)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 73049 Data size: 584392 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 73049 Data size: 584392 Basic stats: COMPLETE Column stats: COMPLETE\n                        value expressions: _col1 (type: int)\n            Execution mode: vectorized\n        Map 14 \n            Map Operator Tree:\n                TableScan\n                  alias: cd1\n                  filterExpr: cd_demo_sk is not null (type: boolean)\n                  Statistics: Num rows: 1920800 Data size: 718379200 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: cd_demo_sk is not null (type: boolean)\n                    Statistics: Num rows: 1920800 Data size: 170951200 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: cd_demo_sk (type: int), cd_marital_status (type: string)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 1920800 Data size: 170951200 Basic stats: COMPLETE Column stats: COMPLETE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col0 (type: int)\n                          1 _col3 (type: int)\n                        outputColumnNames: _col1, _col3, _col4, _col6, _col7, _col8, _col9, _col11, _col12, _col13, _col17\n                        input vertices:\n                          1 Map 15\n                        Statistics: Num rows: 78 Data size: 9750 Basic stats: COMPLETE Column stats: COMPLETE\n                        HybridGraceHashJoin: true\n                        Reduce Output Operator\n                          key expressions: _col8 (type: int)\n                          sort order: +\n                          Map-reduce partition columns: _col8 (type: int)\n                          Statistics: Num rows: 78 Data size: 9750 Basic stats: COMPLETE Column stats: COMPLETE\n                          value expressions: _col1 (type: string), _col3 (type: int), _col4 (type: int), _col6 (type: int), _col7 (type: int), _col9 (type: int), _col11 (type: float), _col12 (type: float), _col13 (type: float), _col17 (type: int)\n            Execution mode: vectorized\n        Map 15 \n            Map Operator Tree:\n                TableScan\n                  alias: store_sales\n                  filterExpr: ((((((((ss_item_sk is not null and ss_ticket_number is not null) and ss_sold_date_sk is not null) and ss_cdemo_sk is not null) and ss_store_sk is not null) and ss_customer_sk is not null) and ss_promo_sk is not null) and ss_addr_sk is not null) and ss_hdemo_sk is not null) (type: boolean)\n                  Statistics: Num rows: 550076554 Data size: 101277521188 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ((((((((ss_item_sk is not null and ss_ticket_number is not null) and ss_sold_date_sk is not null) and ss_cdemo_sk is not null) and ss_store_sk is not null) and ss_customer_sk is not null) and ss_promo_sk is not null) and ss_addr_sk is not null) and ss_hdemo_sk is not null) (type: boolean)\n                    Statistics: Num rows: 476766968 Data size: 22480476572 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: ss_sold_date_sk (type: int), ss_item_sk (type: int), ss_customer_sk (type: int), ss_cdemo_sk (type: int), ss_hdemo_sk (type: int), ss_addr_sk (type: int), ss_store_sk (type: int), ss_promo_sk (type: int), ss_ticket_number (type: int), ss_wholesale_cost (type: float), ss_list_price (type: float), ss_coupon_amt (type: float)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11\n                      Statistics: Num rows: 476766968 Data size: 22480476572 Basic stats: COMPLETE Column stats: COMPLETE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col1 (type: int), _col8 (type: int)\n                          1 _col0 (type: int), _col1 (type: int)\n                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col9, _col10, _col11\n                        input vertices:\n                          1 Map 16\n                        Statistics: Num rows: 8686 Data size: 382184 Basic stats: COMPLETE Column stats: COMPLETE\n                        HybridGraceHashJoin: true\n                        Map Join Operator\n                          condition map:\n                               Inner Join 0 to 1\n                          keys:\n                            0 _col0 (type: int)\n                            1 _col0 (type: int)\n                          outputColumnNames: _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col9, _col10, _col11\n                          input vertices:\n                            1 Map 17\n                          Statistics: Num rows: 78 Data size: 3120 Basic stats: COMPLETE Column stats: COMPLETE\n                          HybridGraceHashJoin: true\n                          Select Operator\n                            expressions: _col1 (type: int), _col10 (type: float), _col11 (type: float), 2000 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int), _col5 (type: int), _col6 (type: int), _col7 (type: int), _col9 (type: float)\n                            outputColumnNames: _col1, _col10, _col11, _col15, _col2, _col3, _col4, _col5, _col6, _col7, _col9\n                            Statistics: Num rows: 78 Data size: 3432 Basic stats: COMPLETE Column stats: COMPLETE\n                            Reduce Output Operator\n                              key expressions: _col3 (type: int)\n                              sort order: +\n                              Map-reduce partition columns: _col3 (type: int)\n                              Statistics: Num rows: 78 Data size: 3432 Basic stats: COMPLETE Column stats: COMPLETE\n                              value expressions: _col1 (type: int), _col2 (type: int), _col4 (type: int), _col5 (type: int), _col6 (type: int), _col7 (type: int), _col9 (type: float), _col10 (type: float), _col11 (type: float), _col15 (type: int)\n            Execution mode: vectorized\n        Map 16 \n            Map Operator Tree:\n                TableScan\n                  alias: store_returns\n                  filterExpr: (sr_item_sk is not null and sr_ticket_number is not null) (type: boolean)\n                  Statistics: Num rows: 55578005 Data size: 9601960106 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: (sr_item_sk is not null and sr_ticket_number is not null) (type: boolean)\n                    Statistics: Num rows: 55578005 Data size: 444624040 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: sr_item_sk (type: int), sr_ticket_number (type: int)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 55578005 Data size: 444624040 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int), _col1 (type: int)\n                        sort order: ++\n                        Map-reduce partition columns: _col0 (type: int), _col1 (type: int)\n                        Statistics: Num rows: 55578005 Data size: 444624040 Basic stats: COMPLETE Column stats: COMPLETE\n            Execution mode: vectorized\n        Map 17 \n            Map Operator Tree:\n                TableScan\n                  alias: d1\n                  filterExpr: ((d_year = 2000) and d_date_sk is not null) (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ((d_year = 2000) and d_date_sk is not null) (type: boolean)\n                    Statistics: Num rows: 652 Data size: 5216 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: d_date_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 652 Data size: 2608 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 652 Data size: 2608 Basic stats: COMPLETE Column stats: COMPLETE\n            Execution mode: vectorized\n        Map 18 \n            Map Operator Tree:\n                TableScan\n                  alias: store\n                  filterExpr: ((s_store_sk is not null and s_store_name is not null) and s_zip is not null) (type: boolean)\n                  Statistics: Num rows: 212 Data size: 405680 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ((s_store_sk is not null and s_store_name is not null) and s_zip is not null) (type: boolean)\n                    Statistics: Num rows: 212 Data size: 38372 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: s_store_sk (type: int), s_store_name (type: string), s_zip (type: string)\n                      outputColumnNames: _col0, _col1, _col2\n                      Statistics: Num rows: 212 Data size: 38372 Basic stats: COMPLETE Column stats: COMPLETE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col8 (type: int)\n                          1 _col0 (type: int)\n                        outputColumnNames: _col1, _col3, _col4, _col6, _col7, _col9, _col11, _col12, _col13, _col17, _col19, _col20\n                        input vertices:\n                          0 Map 14\n                        Statistics: Num rows: 78 Data size: 23244 Basic stats: COMPLETE Column stats: COMPLETE\n                        HybridGraceHashJoin: true\n                        Select Operator\n                          expressions: _col1 (type: string), _col11 (type: float), _col12 (type: float), _col13 (type: float), _col17 (type: int), _col19 (type: string), _col20 (type: string), _col3 (type: int), _col4 (type: int), _col6 (type: int), _col7 (type: int), _col9 (type: int)\n                          outputColumnNames: _col1, _col11, _col12, _col13, _col17, _col19, _col20, _col3, _col4, _col6, _col7, _col9\n                          Statistics: Num rows: 78 Data size: 23244 Basic stats: COMPLETE Column stats: COMPLETE\n                          Reduce Output Operator\n                            key expressions: _col4 (type: int)\n                            sort order: +\n                            Map-reduce partition columns: _col4 (type: int)\n                            Statistics: Num rows: 78 Data size: 23244 Basic stats: COMPLETE Column stats: COMPLETE\n                            value expressions: _col1 (type: string), _col3 (type: int), _col6 (type: int), _col7 (type: int), _col9 (type: int), _col11 (type: float), _col12 (type: float), _col13 (type: float), _col17 (type: int), _col19 (type: string), _col20 (type: string)\n            Execution mode: vectorized\n        Map 19 \n            Map Operator Tree:\n                TableScan\n                  alias: item\n                  filterExpr: ((((i_color) IN ('maroon', 'burnished', 'dim', 'steel', 'navajo', 'chocolate') and i_current_price BETWEEN 35 AND 45) and i_current_price BETWEEN 36 AND 50) and i_item_sk is not null) (type: boolean)\n                  Statistics: Num rows: 48000 Data size: 68732712 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ((((i_color) IN ('maroon', 'burnished', 'dim', 'steel', 'navajo', 'chocolate') and i_current_price BETWEEN 35 AND 45) and i_current_price BETWEEN 36 AND 50) and i_item_sk is not null) (type: boolean)\n                    Statistics: Num rows: 6000 Data size: 1199936 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: i_item_sk (type: int), i_product_name (type: string)\n                      outputColumnNames: _col0, _col3\n                      Statistics: Num rows: 6000 Data size: 642000 Basic stats: COMPLETE Column stats: COMPLETE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                             Inner Join 0 to 2\n                        keys:\n                          0 _col1 (type: int)\n                          1 _col0 (type: int)\n                          2 _col0 (type: int)\n                        outputColumnNames: _col4, _col5, _col7, _col9, _col10, _col11, _col16, _col17, _col21, _col23, _col25, _col27, _col28, _col33, _col36\n                        input vertices:\n                          0 Map 10\n                          2 Reducer 21\n                        Statistics: Num rows: 13200 Data size: 1412400 Basic stats: COMPLETE Column stats: NONE\n                        HybridGraceHashJoin: true\n                        Select Operator\n                          expressions: _col10 (type: float), _col11 (type: float), _col16 (type: int), _col17 (type: int), _col21 (type: int), _col23 (type: int), _col25 (type: int), _col27 (type: string), _col28 (type: string), _col33 (type: int), _col36 (type: string), _col4 (type: int), _col5 (type: int), _col7 (type: int), _col9 (type: float)\n                          outputColumnNames: _col10, _col11, _col16, _col17, _col21, _col23, _col25, _col27, _col28, _col33, _col36, _col4, _col5, _col7, _col9\n                          Statistics: Num rows: 13200 Data size: 1412400 Basic stats: COMPLETE Column stats: NONE\n                          Map Join Operator\n                            condition map:\n                                 Inner Join 0 to 1\n                            keys:\n                              0 _col0 (type: int)\n                              1 _col7 (type: int)\n                            outputColumnNames: _col5, _col6, _col10, _col11, _col12, _col17, _col18, _col22, _col24, _col26, _col28, _col29, _col34, _col37\n                            input vertices:\n                              0 Map 9\n                            Statistics: Num rows: 14520 Data size: 1553640 Basic stats: COMPLETE Column stats: NONE\n                            HybridGraceHashJoin: true\n                            Select Operator\n                              expressions: _col10 (type: float), _col11 (type: float), _col12 (type: float), _col17 (type: int), _col18 (type: int), _col22 (type: int), _col24 (type: int), _col26 (type: int), _col28 (type: string), _col29 (type: string), _col34 (type: int), _col37 (type: string), _col5 (type: int), _col6 (type: int)\n                              outputColumnNames: _col10, _col11, _col12, _col17, _col18, _col22, _col24, _col26, _col28, _col29, _col34, _col37, _col5, _col6\n                              Statistics: Num rows: 14520 Data size: 1553640 Basic stats: COMPLETE Column stats: NONE\n                              Map Join Operator\n                                condition map:\n                                     Inner Join 0 to 1\n                                keys:\n                                  0 _col0 (type: int)\n                                  1 _col17 (type: int)\n                                outputColumnNames: _col8, _col9, _col13, _col14, _col15, _col21, _col25, _col27, _col29, _col31, _col32, _col37, _col40\n                                input vertices:\n                                  0 Map 7\n                                Statistics: Num rows: 15972 Data size: 1709004 Basic stats: COMPLETE Column stats: NONE\n                                HybridGraceHashJoin: true\n                                Select Operator\n                                  expressions: _col13 (type: float), _col14 (type: float), _col15 (type: float), _col21 (type: int), _col25 (type: int), _col27 (type: int), _col29 (type: int), _col31 (type: string), _col32 (type: string), _col37 (type: int), _col40 (type: string), _col8 (type: int), _col9 (type: int)\n                                  outputColumnNames: _col13, _col14, _col15, _col21, _col25, _col27, _col29, _col31, _col32, _col37, _col40, _col8, _col9\n                                  Statistics: Num rows: 15972 Data size: 1709004 Basic stats: COMPLETE Column stats: NONE\n                                  Reduce Output Operator\n                                    key expressions: _col9 (type: int)\n                                    sort order: +\n                                    Map-reduce partition columns: _col9 (type: int)\n                                    Statistics: Num rows: 15972 Data size: 1709004 Basic stats: COMPLETE Column stats: NONE\n                                    value expressions: _col8 (type: int), _col13 (type: float), _col14 (type: float), _col15 (type: float), _col21 (type: int), _col25 (type: int), _col27 (type: int), _col29 (type: int), _col31 (type: string), _col32 (type: string), _col37 (type: int), _col40 (type: string)\n            Execution mode: vectorized\n        Map 2 \n            Map Operator Tree:\n                TableScan\n                  alias: ib1\n                  filterExpr: ib_income_band_sk is not null (type: boolean)\n                  Statistics: Num rows: 20 Data size: 240 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ib_income_band_sk is not null (type: boolean)\n                    Statistics: Num rows: 20 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: ib_income_band_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 20 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 20 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE\n            Execution mode: vectorized\n        Map 20 \n            Map Operator Tree:\n                TableScan\n                  alias: catalog_sales\n                  filterExpr: (cs_item_sk is not null and cs_order_number is not null) (type: boolean)\n                  Statistics: Num rows: 286549727 Data size: 65825832570 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: (cs_item_sk is not null and cs_order_number is not null) (type: boolean)\n                    Statistics: Num rows: 286549727 Data size: 3435718732 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: cs_item_sk (type: int), cs_order_number (type: int), cs_ext_list_price (type: float)\n                      outputColumnNames: _col0, _col1, _col2\n                      Statistics: Num rows: 286549727 Data size: 3435718732 Basic stats: COMPLETE Column stats: COMPLETE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col0 (type: int), _col1 (type: int)\n                          1 _col0 (type: int), _col1 (type: int)\n                        outputColumnNames: _col0, _col2, _col5, _col6, _col7\n                        input vertices:\n                          1 Map 22\n                        Statistics: Num rows: 2911 Data size: 58220 Basic stats: COMPLETE Column stats: COMPLETE\n                        HybridGraceHashJoin: true\n                        Select Operator\n                          expressions: _col0 (type: int), _col2 (type: float), ((_col5 + _col6) + _col7) (type: float)\n                          outputColumnNames: _col0, _col1, _col2\n                          Statistics: Num rows: 2911 Data size: 58220 Basic stats: COMPLETE Column stats: COMPLETE\n                          Group By Operator\n                            aggregations: sum(_col1), sum(_col2)\n                            keys: _col0 (type: int)\n                            mode: hash\n                            outputColumnNames: _col0, _col1, _col2\n                            Statistics: Num rows: 1 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE\n                            Reduce Output Operator\n                              key expressions: _col0 (type: int)\n                              sort order: +\n                              Map-reduce partition columns: _col0 (type: int)\n                              Statistics: Num rows: 1 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE\n                              value expressions: _col1 (type: double), _col2 (type: double)\n            Execution mode: vectorized\n        Map 22 \n            Map Operator Tree:\n                TableScan\n                  alias: catalog_returns\n                  filterExpr: (cr_item_sk is not null and cr_order_number is not null) (type: boolean)\n                  Statistics: Num rows: 28798881 Data size: 5764329494 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: (cr_item_sk is not null and cr_order_number is not null) (type: boolean)\n                    Statistics: Num rows: 28798881 Data size: 569059536 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: cr_item_sk (type: int), cr_order_number (type: int), cr_refunded_cash (type: float), cr_reversed_charge (type: float), cr_store_credit (type: float)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4\n                      Statistics: Num rows: 28798881 Data size: 569059536 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int), _col1 (type: int)\n                        sort order: ++\n                        Map-reduce partition columns: _col0 (type: int), _col1 (type: int)\n                        Statistics: Num rows: 28798881 Data size: 569059536 Basic stats: COMPLETE Column stats: COMPLETE\n                        value expressions: _col2 (type: float), _col3 (type: float), _col4 (type: float)\n            Execution mode: vectorized\n        Map 23 \n            Map Operator Tree:\n                TableScan\n                  alias: hd1\n                  filterExpr: (hd_income_band_sk is not null and hd_demo_sk is not null) (type: boolean)\n                  Statistics: Num rows: 7200 Data size: 770400 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: (hd_income_band_sk is not null and hd_demo_sk is not null) (type: boolean)\n                    Statistics: Num rows: 7200 Data size: 57600 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: hd_demo_sk (type: int), hd_income_band_sk (type: int)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 7200 Data size: 57600 Basic stats: COMPLETE Column stats: COMPLETE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col1 (type: int)\n                          1 _col0 (type: int)\n                        outputColumnNames: _col0\n                        input vertices:\n                          1 Map 24\n                        Statistics: Num rows: 7200 Data size: 28800 Basic stats: COMPLETE Column stats: COMPLETE\n                        HybridGraceHashJoin: true\n                        Reduce Output Operator\n                          key expressions: _col0 (type: int)\n                          sort order: +\n                          Map-reduce partition columns: _col0 (type: int)\n                          Statistics: Num rows: 7200 Data size: 28800 Basic stats: COMPLETE Column stats: COMPLETE\n            Execution mode: vectorized\n        Map 24 \n            Map Operator Tree:\n                TableScan\n                  alias: ib1\n                  filterExpr: ib_income_band_sk is not null (type: boolean)\n                  Statistics: Num rows: 20 Data size: 240 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ib_income_band_sk is not null (type: boolean)\n                    Statistics: Num rows: 20 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: ib_income_band_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 20 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 20 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE\n            Execution mode: vectorized\n        Map 25 \n            Map Operator Tree:\n                TableScan\n                  alias: ad1\n                  filterExpr: ca_address_sk is not null (type: boolean)\n                  Statistics: Num rows: 800000 Data size: 811903688 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ca_address_sk is not null (type: boolean)\n                    Statistics: Num rows: 800000 Data size: 292000000 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: ca_address_sk (type: int), ca_street_number (type: string), ca_street_name (type: string), ca_city (type: string), ca_zip (type: string)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4\n                      Statistics: Num rows: 800000 Data size: 292000000 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 800000 Data size: 292000000 Basic stats: COMPLETE Column stats: COMPLETE\n                        value expressions: _col1 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: string)\n            Execution mode: vectorized\n        Map 26 \n            Map Operator Tree:\n                TableScan\n                  alias: ad1\n                  filterExpr: ca_address_sk is not null (type: boolean)\n                  Statistics: Num rows: 800000 Data size: 811903688 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ca_address_sk is not null (type: boolean)\n                    Statistics: Num rows: 800000 Data size: 292000000 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: ca_address_sk (type: int), ca_street_number (type: string), ca_street_name (type: string), ca_city (type: string), ca_zip (type: string)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4\n                      Statistics: Num rows: 800000 Data size: 292000000 Basic stats: COMPLETE Column stats: COMPLETE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col0 (type: int)\n                          1 _col9 (type: int)\n                        outputColumnNames: _col1, _col2, _col3, _col4, _col13, _col18, _col19, _col20, _col26, _col30, _col32, _col34, _col36, _col37, _col42, _col45\n                        input vertices:\n                          1 Map 40\n                        Statistics: Num rows: 880000 Data size: 321200006 Basic stats: COMPLETE Column stats: NONE\n                        HybridGraceHashJoin: true\n                        Select Operator\n                          expressions: _col1 (type: string), _col13 (type: int), _col18 (type: float), _col19 (type: float), _col2 (type: string), _col20 (type: float), _col26 (type: int), _col3 (type: string), _col30 (type: int), _col32 (type: int), _col34 (type: int), _col36 (type: string), _col37 (type: string), _col4 (type: string), _col42 (type: int), _col45 (type: string)\n                          outputColumnNames: _col1, _col13, _col18, _col19, _col2, _col20, _col26, _col3, _col30, _col32, _col34, _col36, _col37, _col4, _col42, _col45\n                          Statistics: Num rows: 880000 Data size: 321200006 Basic stats: COMPLETE Column stats: NONE\n                          Map Join Operator\n                            condition map:\n                                 Inner Join 0 to 1\n                            keys:\n                              0 _col0 (type: int)\n                              1 _col26 (type: int)\n                            outputColumnNames: _col1, _col2, _col3, _col4, _col6, _col7, _col8, _col9, _col18, _col23, _col24, _col25, _col35, _col37, _col39, _col41, _col42, _col47, _col50\n                            input vertices:\n                              0 Map 25\n                            Statistics: Num rows: 968000 Data size: 353320014 Basic stats: COMPLETE Column stats: NONE\n                            HybridGraceHashJoin: true\n                            Select Operator\n                              expressions: _col1 (type: string), _col18 (type: int), _col2 (type: string), _col23 (type: float), _col24 (type: float), _col25 (type: float), _col3 (type: string), _col35 (type: int), _col37 (type: int), _col39 (type: int), _col4 (type: string), _col41 (type: string), _col42 (type: string), _col47 (type: int), _col50 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string)\n                              outputColumnNames: _col1, _col18, _col2, _col23, _col24, _col25, _col3, _col35, _col37, _col39, _col4, _col41, _col42, _col47, _col50, _col6, _col7, _col8, _col9\n                              Statistics: Num rows: 968000 Data size: 353320014 Basic stats: COMPLETE Column stats: NONE\n                              Map Join Operator\n                                condition map:\n                                     Inner Join 0 to 1\n                                keys:\n                                  0 _col0 (type: int)\n                                  1 _col18 (type: int)\n                                outputColumnNames: _col4, _col5, _col6, _col7, _col9, _col10, _col11, _col12, _col26, _col27, _col28, _col38, _col40, _col42, _col44, _col45, _col50, _col53\n                                input vertices:\n                                  0 Map 23\n                                Statistics: Num rows: 1064800 Data size: 388652023 Basic stats: COMPLETE Column stats: NONE\n                                HybridGraceHashJoin: true\n                                Select Operator\n                                  expressions: _col53 (type: string), _col50 (type: int), _col44 (type: string), _col45 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col38 (type: int), _col40 (type: int), _col42 (type: int), _col26 (type: float), _col27 (type: float), _col28 (type: float)\n                                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17\n                                  Statistics: Num rows: 1064800 Data size: 388652023 Basic stats: COMPLETE Column stats: NONE\n                                  Group By Operator\n                                    aggregations: count(), sum(_col15), sum(_col16), sum(_col17)\n                                    keys: _col0 (type: string), _col1 (type: int), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: int), _col13 (type: int), _col14 (type: int)\n                                    mode: hash\n                                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18\n                                    Statistics: Num rows: 1064800 Data size: 388652023 Basic stats: COMPLETE Column stats: NONE\n                                    Reduce Output Operator\n                                      key expressions: _col0 (type: string), _col1 (type: int), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: int), _col13 (type: int), _col14 (type: int)\n                                      sort order: +++++++++++++++\n                                      Map-reduce partition columns: _col0 (type: string), _col1 (type: int), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: int), _col13 (type: int), _col14 (type: int)\n                                      Statistics: Num rows: 1064800 Data size: 388652023 Basic stats: COMPLETE Column stats: NONE\n                                      value expressions: _col15 (type: bigint), _col16 (type: double), _col17 (type: double), _col18 (type: double)\n            Execution mode: vectorized\n        Map 28 \n            Map Operator Tree:\n                TableScan\n                  alias: hd1\n                  filterExpr: (hd_income_band_sk is not null and hd_demo_sk is not null) (type: boolean)\n                  Statistics: Num rows: 7200 Data size: 770400 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: (hd_income_band_sk is not null and hd_demo_sk is not null) (type: boolean)\n                    Statistics: Num rows: 7200 Data size: 57600 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: hd_demo_sk (type: int), hd_income_band_sk (type: int)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 7200 Data size: 57600 Basic stats: COMPLETE Column stats: COMPLETE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col1 (type: int)\n                          1 _col0 (type: int)\n                        outputColumnNames: _col0\n                        input vertices:\n                          1 Map 29\n                        Statistics: Num rows: 7200 Data size: 28800 Basic stats: COMPLETE Column stats: COMPLETE\n                        HybridGraceHashJoin: true\n                        Reduce Output Operator\n                          key expressions: _col0 (type: int)\n                          sort order: +\n                          Map-reduce partition columns: _col0 (type: int)\n                          Statistics: Num rows: 7200 Data size: 28800 Basic stats: COMPLETE Column stats: COMPLETE\n            Execution mode: vectorized\n        Map 29 \n            Map Operator Tree:\n                TableScan\n                  alias: ib1\n                  filterExpr: ib_income_band_sk is not null (type: boolean)\n                  Statistics: Num rows: 20 Data size: 240 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ib_income_band_sk is not null (type: boolean)\n                    Statistics: Num rows: 20 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: ib_income_band_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 20 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 20 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE\n            Execution mode: vectorized\n        Map 3 \n            Map Operator Tree:\n                TableScan\n                  alias: ad1\n                  filterExpr: ca_address_sk is not null (type: boolean)\n                  Statistics: Num rows: 800000 Data size: 811903688 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ca_address_sk is not null (type: boolean)\n                    Statistics: Num rows: 800000 Data size: 292000000 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: ca_address_sk (type: int), ca_street_number (type: string), ca_street_name (type: string), ca_city (type: string), ca_zip (type: string)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4\n                      Statistics: Num rows: 800000 Data size: 292000000 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 800000 Data size: 292000000 Basic stats: COMPLETE Column stats: COMPLETE\n                        value expressions: _col1 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: string)\n            Execution mode: vectorized\n        Map 30 \n            Map Operator Tree:\n                TableScan\n                  alias: promotion\n                  filterExpr: p_promo_sk is not null (type: boolean)\n                  Statistics: Num rows: 450 Data size: 530848 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: p_promo_sk is not null (type: boolean)\n                    Statistics: Num rows: 450 Data size: 1800 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: p_promo_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 450 Data size: 1800 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 450 Data size: 1800 Basic stats: COMPLETE Column stats: COMPLETE\n            Execution mode: vectorized\n        Map 31 \n            Map Operator Tree:\n                TableScan\n                  alias: cd1\n                  filterExpr: cd_demo_sk is not null (type: boolean)\n                  Statistics: Num rows: 1920800 Data size: 718379200 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: cd_demo_sk is not null (type: boolean)\n                    Statistics: Num rows: 1920800 Data size: 170951200 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: cd_demo_sk (type: int), cd_marital_status (type: string)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 1920800 Data size: 170951200 Basic stats: COMPLETE Column stats: COMPLETE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col0 (type: int)\n                          1 _col1 (type: int)\n                        outputColumnNames: _col1, _col2, _col4, _col5, _col6, _col7\n                        input vertices:\n                          1 Map 32\n                        Statistics: Num rows: 1387730 Data size: 145711650 Basic stats: COMPLETE Column stats: COMPLETE\n                        HybridGraceHashJoin: true\n                        Map Join Operator\n                          condition map:\n                               Inner Join 0 to 1\n                          keys:\n                            0 _col7 (type: int)\n                            1 _col0 (type: int)\n                          outputColumnNames: _col1, _col2, _col4, _col5, _col6, _col9\n                          input vertices:\n                            1 Map 33\n                          Statistics: Num rows: 1387730 Data size: 145711650 Basic stats: COMPLETE Column stats: COMPLETE\n                          HybridGraceHashJoin: true\n                          Map Join Operator\n                            condition map:\n                                 Inner Join 0 to 1\n                            keys:\n                              0 _col6 (type: int)\n                              1 _col0 (type: int)\n                            outputColumnNames: _col1, _col2, _col4, _col5, _col9, _col11\n                            input vertices:\n                              1 Map 34\n                            Statistics: Num rows: 1387730 Data size: 145711650 Basic stats: COMPLETE Column stats: COMPLETE\n                            HybridGraceHashJoin: true\n                            Map Join Operator\n                              condition map:\n                                   Inner Join 0 to 1\n                              keys:\n                                0 _col2 (type: int)\n                                1 _col4 (type: int)\n                              outputColumnNames: _col1, _col4, _col5, _col9, _col11, _col13, _col15, _col18, _col19, _col21, _col23, _col24, _col25, _col29, _col31, _col32\n                              input vertices:\n                                1 Map 39\n                              Statistics: Num rows: 68 Data size: 26860 Basic stats: COMPLETE Column stats: COMPLETE\n                              HybridGraceHashJoin: true\n                              Filter Operator\n                                predicate: (_col13 <> _col1) (type: boolean)\n                                Statistics: Num rows: 68 Data size: 26860 Basic stats: COMPLETE Column stats: COMPLETE\n                                Select Operator\n                                  expressions: _col15 (type: int), _col24 (type: float), _col25 (type: float), _col4 (type: int), _col5 (type: int), _col29 (type: int), _col9 (type: int), _col11 (type: int), _col31 (type: string), _col32 (type: string), _col18 (type: int), _col19 (type: int), _col21 (type: int), _col23 (type: float)\n                                  outputColumnNames: _col1, _col10, _col11, _col16, _col17, _col21, _col23, _col25, _col27, _col28, _col4, _col5, _col7, _col9\n                                  Statistics: Num rows: 68 Data size: 15300 Basic stats: COMPLETE Column stats: COMPLETE\n                                  Reduce Output Operator\n                                    key expressions: _col1 (type: int)\n                                    sort order: +\n                                    Map-reduce partition columns: _col1 (type: int)\n                                    Statistics: Num rows: 68 Data size: 15300 Basic stats: COMPLETE Column stats: COMPLETE\n                                    value expressions: _col4 (type: int), _col5 (type: int), _col7 (type: int), _col9 (type: float), _col10 (type: float), _col11 (type: float), _col16 (type: int), _col17 (type: int), _col21 (type: int), _col23 (type: int), _col25 (type: int), _col27 (type: string), _col28 (type: string)\n            Execution mode: vectorized\n        Map 32 \n            Map Operator Tree:\n                TableScan\n                  alias: customer\n                  filterExpr: (((((c_current_cdemo_sk is not null and c_first_sales_date_sk is not null) and c_first_shipto_date_sk is not null) and c_customer_sk is not null) and c_current_hdemo_sk is not null) and c_current_addr_sk is not null) (type: boolean)\n                  Statistics: Num rows: 1600000 Data size: 1241633212 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: (((((c_current_cdemo_sk is not null and c_first_sales_date_sk is not null) and c_first_shipto_date_sk is not null) and c_customer_sk is not null) and c_current_hdemo_sk is not null) and c_current_addr_sk is not null) (type: boolean)\n                    Statistics: Num rows: 1387730 Data size: 32529324 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: c_customer_sk (type: int), c_current_cdemo_sk (type: int), c_current_hdemo_sk (type: int), c_current_addr_sk (type: int), c_first_shipto_date_sk (type: int), c_first_sales_date_sk (type: int)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5\n                      Statistics: Num rows: 1387730 Data size: 32529324 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col1 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col1 (type: int)\n                        Statistics: Num rows: 1387730 Data size: 32529324 Basic stats: COMPLETE Column stats: COMPLETE\n                        value expressions: _col0 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int), _col5 (type: int)\n            Execution mode: vectorized\n        Map 33 \n            Map Operator Tree:\n                TableScan\n                  alias: d1\n                  filterExpr: d_date_sk is not null (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: d_date_sk is not null (type: boolean)\n                    Statistics: Num rows: 73049 Data size: 584392 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: d_date_sk (type: int), d_year (type: int)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 73049 Data size: 584392 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 73049 Data size: 584392 Basic stats: COMPLETE Column stats: COMPLETE\n                        value expressions: _col1 (type: int)\n            Execution mode: vectorized\n        Map 34 \n            Map Operator Tree:\n                TableScan\n                  alias: d1\n                  filterExpr: d_date_sk is not null (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: d_date_sk is not null (type: boolean)\n                    Statistics: Num rows: 73049 Data size: 584392 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: d_date_sk (type: int), d_year (type: int)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 73049 Data size: 584392 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 73049 Data size: 584392 Basic stats: COMPLETE Column stats: COMPLETE\n                        value expressions: _col1 (type: int)\n            Execution mode: vectorized\n        Map 35 \n            Map Operator Tree:\n                TableScan\n                  alias: cd1\n                  filterExpr: cd_demo_sk is not null (type: boolean)\n                  Statistics: Num rows: 1920800 Data size: 718379200 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: cd_demo_sk is not null (type: boolean)\n                    Statistics: Num rows: 1920800 Data size: 170951200 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: cd_demo_sk (type: int), cd_marital_status (type: string)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 1920800 Data size: 170951200 Basic stats: COMPLETE Column stats: COMPLETE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col0 (type: int)\n                          1 _col3 (type: int)\n                        outputColumnNames: _col1, _col3, _col4, _col6, _col7, _col8, _col9, _col11, _col12, _col13, _col17\n                        input vertices:\n                          1 Map 36\n                        Statistics: Num rows: 78 Data size: 9750 Basic stats: COMPLETE Column stats: COMPLETE\n                        HybridGraceHashJoin: true\n                        Reduce Output Operator\n                          key expressions: _col8 (type: int)\n                          sort order: +\n                          Map-reduce partition columns: _col8 (type: int)\n                          Statistics: Num rows: 78 Data size: 9750 Basic stats: COMPLETE Column stats: COMPLETE\n                          value expressions: _col1 (type: string), _col3 (type: int), _col4 (type: int), _col6 (type: int), _col7 (type: int), _col9 (type: int), _col11 (type: float), _col12 (type: float), _col13 (type: float), _col17 (type: int)\n            Execution mode: vectorized\n        Map 36 \n            Map Operator Tree:\n                TableScan\n                  alias: store_sales\n                  filterExpr: ((((((((ss_item_sk is not null and ss_ticket_number is not null) and ss_sold_date_sk is not null) and ss_cdemo_sk is not null) and ss_store_sk is not null) and ss_customer_sk is not null) and ss_promo_sk is not null) and ss_addr_sk is not null) and ss_hdemo_sk is not null) (type: boolean)\n                  Statistics: Num rows: 550076554 Data size: 101277521188 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ((((((((ss_item_sk is not null and ss_ticket_number is not null) and ss_sold_date_sk is not null) and ss_cdemo_sk is not null) and ss_store_sk is not null) and ss_customer_sk is not null) and ss_promo_sk is not null) and ss_addr_sk is not null) and ss_hdemo_sk is not null) (type: boolean)\n                    Statistics: Num rows: 476766968 Data size: 22480476572 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: ss_sold_date_sk (type: int), ss_item_sk (type: int), ss_customer_sk (type: int), ss_cdemo_sk (type: int), ss_hdemo_sk (type: int), ss_addr_sk (type: int), ss_store_sk (type: int), ss_promo_sk (type: int), ss_ticket_number (type: int), ss_wholesale_cost (type: float), ss_list_price (type: float), ss_coupon_amt (type: float)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11\n                      Statistics: Num rows: 476766968 Data size: 22480476572 Basic stats: COMPLETE Column stats: COMPLETE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col1 (type: int), _col8 (type: int)\n                          1 _col0 (type: int), _col1 (type: int)\n                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col9, _col10, _col11\n                        input vertices:\n                          1 Map 37\n                        Statistics: Num rows: 8686 Data size: 382184 Basic stats: COMPLETE Column stats: COMPLETE\n                        HybridGraceHashJoin: true\n                        Map Join Operator\n                          condition map:\n                               Inner Join 0 to 1\n                          keys:\n                            0 _col0 (type: int)\n                            1 _col0 (type: int)\n                          outputColumnNames: _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col9, _col10, _col11\n                          input vertices:\n                            1 Map 38\n                          Statistics: Num rows: 78 Data size: 3120 Basic stats: COMPLETE Column stats: COMPLETE\n                          HybridGraceHashJoin: true\n                          Select Operator\n                            expressions: _col1 (type: int), _col10 (type: float), _col11 (type: float), 2001 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int), _col5 (type: int), _col6 (type: int), _col7 (type: int), _col9 (type: float)\n                            outputColumnNames: _col1, _col10, _col11, _col15, _col2, _col3, _col4, _col5, _col6, _col7, _col9\n                            Statistics: Num rows: 78 Data size: 3432 Basic stats: COMPLETE Column stats: COMPLETE\n                            Reduce Output Operator\n                              key expressions: _col3 (type: int)\n                              sort order: +\n                              Map-reduce partition columns: _col3 (type: int)\n                              Statistics: Num rows: 78 Data size: 3432 Basic stats: COMPLETE Column stats: COMPLETE\n                              value expressions: _col1 (type: int), _col2 (type: int), _col4 (type: int), _col5 (type: int), _col6 (type: int), _col7 (type: int), _col9 (type: float), _col10 (type: float), _col11 (type: float), _col15 (type: int)\n            Execution mode: vectorized\n        Map 37 \n            Map Operator Tree:\n                TableScan\n                  alias: store_returns\n                  filterExpr: (sr_item_sk is not null and sr_ticket_number is not null) (type: boolean)\n                  Statistics: Num rows: 55578005 Data size: 9601960106 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: (sr_item_sk is not null and sr_ticket_number is not null) (type: boolean)\n                    Statistics: Num rows: 55578005 Data size: 444624040 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: sr_item_sk (type: int), sr_ticket_number (type: int)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 55578005 Data size: 444624040 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int), _col1 (type: int)\n                        sort order: ++\n                        Map-reduce partition columns: _col0 (type: int), _col1 (type: int)\n                        Statistics: Num rows: 55578005 Data size: 444624040 Basic stats: COMPLETE Column stats: COMPLETE\n            Execution mode: vectorized\n        Map 38 \n            Map Operator Tree:\n                TableScan\n                  alias: d1\n                  filterExpr: ((d_year = 2001) and d_date_sk is not null) (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ((d_year = 2001) and d_date_sk is not null) (type: boolean)\n                    Statistics: Num rows: 652 Data size: 5216 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: d_date_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 652 Data size: 2608 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 652 Data size: 2608 Basic stats: COMPLETE Column stats: COMPLETE\n            Execution mode: vectorized\n        Map 39 \n            Map Operator Tree:\n                TableScan\n                  alias: store\n                  filterExpr: ((s_store_sk is not null and s_store_name is not null) and s_zip is not null) (type: boolean)\n                  Statistics: Num rows: 212 Data size: 405680 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ((s_store_sk is not null and s_store_name is not null) and s_zip is not null) (type: boolean)\n                    Statistics: Num rows: 212 Data size: 38372 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: s_store_sk (type: int), s_store_name (type: string), s_zip (type: string)\n                      outputColumnNames: _col0, _col1, _col2\n                      Statistics: Num rows: 212 Data size: 38372 Basic stats: COMPLETE Column stats: COMPLETE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col8 (type: int)\n                          1 _col0 (type: int)\n                        outputColumnNames: _col1, _col3, _col4, _col6, _col7, _col9, _col11, _col12, _col13, _col17, _col19, _col20\n                        input vertices:\n                          0 Map 35\n                        Statistics: Num rows: 78 Data size: 23244 Basic stats: COMPLETE Column stats: COMPLETE\n                        HybridGraceHashJoin: true\n                        Select Operator\n                          expressions: _col1 (type: string), _col11 (type: float), _col12 (type: float), _col13 (type: float), _col17 (type: int), _col19 (type: string), _col20 (type: string), _col3 (type: int), _col4 (type: int), _col6 (type: int), _col7 (type: int), _col9 (type: int)\n                          outputColumnNames: _col1, _col11, _col12, _col13, _col17, _col19, _col20, _col3, _col4, _col6, _col7, _col9\n                          Statistics: Num rows: 78 Data size: 23244 Basic stats: COMPLETE Column stats: COMPLETE\n                          Reduce Output Operator\n                            key expressions: _col4 (type: int)\n                            sort order: +\n                            Map-reduce partition columns: _col4 (type: int)\n                            Statistics: Num rows: 78 Data size: 23244 Basic stats: COMPLETE Column stats: COMPLETE\n                            value expressions: _col1 (type: string), _col3 (type: int), _col6 (type: int), _col7 (type: int), _col9 (type: int), _col11 (type: float), _col12 (type: float), _col13 (type: float), _col17 (type: int), _col19 (type: string), _col20 (type: string)\n            Execution mode: vectorized\n        Map 4 \n            Map Operator Tree:\n                TableScan\n                  alias: ad1\n                  filterExpr: ca_address_sk is not null (type: boolean)\n                  Statistics: Num rows: 800000 Data size: 811903688 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ca_address_sk is not null (type: boolean)\n                    Statistics: Num rows: 800000 Data size: 292000000 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: ca_address_sk (type: int), ca_street_number (type: string), ca_street_name (type: string), ca_city (type: string), ca_zip (type: string)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4\n                      Statistics: Num rows: 800000 Data size: 292000000 Basic stats: COMPLETE Column stats: COMPLETE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col0 (type: int)\n                          1 _col9 (type: int)\n                        outputColumnNames: _col1, _col2, _col3, _col4, _col13, _col18, _col19, _col20, _col26, _col30, _col32, _col34, _col36, _col37, _col42, _col45\n                        input vertices:\n                          1 Map 19\n                        Statistics: Num rows: 880000 Data size: 321200006 Basic stats: COMPLETE Column stats: NONE\n                        HybridGraceHashJoin: true\n                        Select Operator\n                          expressions: _col1 (type: string), _col13 (type: int), _col18 (type: float), _col19 (type: float), _col2 (type: string), _col20 (type: float), _col26 (type: int), _col3 (type: string), _col30 (type: int), _col32 (type: int), _col34 (type: int), _col36 (type: string), _col37 (type: string), _col4 (type: string), _col42 (type: int), _col45 (type: string)\n                          outputColumnNames: _col1, _col13, _col18, _col19, _col2, _col20, _col26, _col3, _col30, _col32, _col34, _col36, _col37, _col4, _col42, _col45\n                          Statistics: Num rows: 880000 Data size: 321200006 Basic stats: COMPLETE Column stats: NONE\n                          Map Join Operator\n                            condition map:\n                                 Inner Join 0 to 1\n                            keys:\n                              0 _col0 (type: int)\n                              1 _col26 (type: int)\n                            outputColumnNames: _col1, _col2, _col3, _col4, _col6, _col7, _col8, _col9, _col18, _col23, _col24, _col25, _col35, _col37, _col39, _col41, _col42, _col47, _col50\n                            input vertices:\n                              0 Map 3\n                            Statistics: Num rows: 968000 Data size: 353320014 Basic stats: COMPLETE Column stats: NONE\n                            HybridGraceHashJoin: true\n                            Select Operator\n                              expressions: _col1 (type: string), _col18 (type: int), _col2 (type: string), _col23 (type: float), _col24 (type: float), _col25 (type: float), _col3 (type: string), _col35 (type: int), _col37 (type: int), _col39 (type: int), _col4 (type: string), _col41 (type: string), _col42 (type: string), _col47 (type: int), _col50 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string)\n                              outputColumnNames: _col1, _col18, _col2, _col23, _col24, _col25, _col3, _col35, _col37, _col39, _col4, _col41, _col42, _col47, _col50, _col6, _col7, _col8, _col9\n                              Statistics: Num rows: 968000 Data size: 353320014 Basic stats: COMPLETE Column stats: NONE\n                              Map Join Operator\n                                condition map:\n                                     Inner Join 0 to 1\n                                keys:\n                                  0 _col0 (type: int)\n                                  1 _col18 (type: int)\n                                outputColumnNames: _col4, _col5, _col6, _col7, _col9, _col10, _col11, _col12, _col26, _col27, _col28, _col38, _col40, _col42, _col44, _col45, _col50, _col53\n                                input vertices:\n                                  0 Map 1\n                                Statistics: Num rows: 1064800 Data size: 388652023 Basic stats: COMPLETE Column stats: NONE\n                                HybridGraceHashJoin: true\n                                Select Operator\n                                  expressions: _col53 (type: string), _col50 (type: int), _col44 (type: string), _col45 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col38 (type: int), _col40 (type: int), _col42 (type: int), _col26 (type: float), _col27 (type: float), _col28 (type: float)\n                                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17\n                                  Statistics: Num rows: 1064800 Data size: 388652023 Basic stats: COMPLETE Column stats: NONE\n                                  Group By Operator\n                                    aggregations: count(), sum(_col15), sum(_col16), sum(_col17)\n                                    keys: _col0 (type: string), _col1 (type: int), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: int), _col13 (type: int), _col14 (type: int)\n                                    mode: hash\n                                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18\n                                    Statistics: Num rows: 1064800 Data size: 388652023 Basic stats: COMPLETE Column stats: NONE\n                                    Reduce Output Operator\n                                      key expressions: _col0 (type: string), _col1 (type: int), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: int), _col13 (type: int), _col14 (type: int)\n                                      sort order: +++++++++++++++\n                                      Map-reduce partition columns: _col0 (type: string), _col1 (type: int), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: int), _col13 (type: int), _col14 (type: int)\n                                      Statistics: Num rows: 1064800 Data size: 388652023 Basic stats: COMPLETE Column stats: NONE\n                                      value expressions: _col15 (type: bigint), _col16 (type: double), _col17 (type: double), _col18 (type: double)\n            Execution mode: vectorized\n        Map 40 \n            Map Operator Tree:\n                TableScan\n                  alias: item\n                  filterExpr: ((((i_color) IN ('maroon', 'burnished', 'dim', 'steel', 'navajo', 'chocolate') and i_current_price BETWEEN 35 AND 45) and i_current_price BETWEEN 36 AND 50) and i_item_sk is not null) (type: boolean)\n                  Statistics: Num rows: 48000 Data size: 68732712 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ((((i_color) IN ('maroon', 'burnished', 'dim', 'steel', 'navajo', 'chocolate') and i_current_price BETWEEN 35 AND 45) and i_current_price BETWEEN 36 AND 50) and i_item_sk is not null) (type: boolean)\n                    Statistics: Num rows: 6000 Data size: 1199936 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: i_item_sk (type: int), i_product_name (type: string)\n                      outputColumnNames: _col0, _col3\n                      Statistics: Num rows: 6000 Data size: 642000 Basic stats: COMPLETE Column stats: COMPLETE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                             Inner Join 0 to 2\n                        keys:\n                          0 _col1 (type: int)\n                          1 _col0 (type: int)\n                          2 _col0 (type: int)\n                        outputColumnNames: _col4, _col5, _col7, _col9, _col10, _col11, _col16, _col17, _col21, _col23, _col25, _col27, _col28, _col33, _col36\n                        input vertices:\n                          0 Map 31\n                          2 Reducer 42\n                        Statistics: Num rows: 13200 Data size: 1412400 Basic stats: COMPLETE Column stats: NONE\n                        HybridGraceHashJoin: true\n                        Select Operator\n                          expressions: _col10 (type: float), _col11 (type: float), _col16 (type: int), _col17 (type: int), _col21 (type: int), _col23 (type: int), _col25 (type: int), _col27 (type: string), _col28 (type: string), _col33 (type: int), _col36 (type: string), _col4 (type: int), _col5 (type: int), _col7 (type: int), _col9 (type: float)\n                          outputColumnNames: _col10, _col11, _col16, _col17, _col21, _col23, _col25, _col27, _col28, _col33, _col36, _col4, _col5, _col7, _col9\n                          Statistics: Num rows: 13200 Data size: 1412400 Basic stats: COMPLETE Column stats: NONE\n                          Map Join Operator\n                            condition map:\n                                 Inner Join 0 to 1\n                            keys:\n                              0 _col0 (type: int)\n                              1 _col7 (type: int)\n                            outputColumnNames: _col5, _col6, _col10, _col11, _col12, _col17, _col18, _col22, _col24, _col26, _col28, _col29, _col34, _col37\n                            input vertices:\n                              0 Map 30\n                            Statistics: Num rows: 14520 Data size: 1553640 Basic stats: COMPLETE Column stats: NONE\n                            HybridGraceHashJoin: true\n                            Select Operator\n                              expressions: _col10 (type: float), _col11 (type: float), _col12 (type: float), _col17 (type: int), _col18 (type: int), _col22 (type: int), _col24 (type: int), _col26 (type: int), _col28 (type: string), _col29 (type: string), _col34 (type: int), _col37 (type: string), _col5 (type: int), _col6 (type: int)\n                              outputColumnNames: _col10, _col11, _col12, _col17, _col18, _col22, _col24, _col26, _col28, _col29, _col34, _col37, _col5, _col6\n                              Statistics: Num rows: 14520 Data size: 1553640 Basic stats: COMPLETE Column stats: NONE\n                              Map Join Operator\n                                condition map:\n                                     Inner Join 0 to 1\n                                keys:\n                                  0 _col0 (type: int)\n                                  1 _col17 (type: int)\n                                outputColumnNames: _col8, _col9, _col13, _col14, _col15, _col21, _col25, _col27, _col29, _col31, _col32, _col37, _col40\n                                input vertices:\n                                  0 Map 28\n                                Statistics: Num rows: 15972 Data size: 1709004 Basic stats: COMPLETE Column stats: NONE\n                                HybridGraceHashJoin: true\n                                Select Operator\n                                  expressions: _col13 (type: float), _col14 (type: float), _col15 (type: float), _col21 (type: int), _col25 (type: int), _col27 (type: int), _col29 (type: int), _col31 (type: string), _col32 (type: string), _col37 (type: int), _col40 (type: string), _col8 (type: int), _col9 (type: int)\n                                  outputColumnNames: _col13, _col14, _col15, _col21, _col25, _col27, _col29, _col31, _col32, _col37, _col40, _col8, _col9\n                                  Statistics: Num rows: 15972 Data size: 1709004 Basic stats: COMPLETE Column stats: NONE\n                                  Reduce Output Operator\n                                    key expressions: _col9 (type: int)\n                                    sort order: +\n                                    Map-reduce partition columns: _col9 (type: int)\n                                    Statistics: Num rows: 15972 Data size: 1709004 Basic stats: COMPLETE Column stats: NONE\n                                    value expressions: _col8 (type: int), _col13 (type: float), _col14 (type: float), _col15 (type: float), _col21 (type: int), _col25 (type: int), _col27 (type: int), _col29 (type: int), _col31 (type: string), _col32 (type: string), _col37 (type: int), _col40 (type: string)\n            Execution mode: vectorized\n        Map 41 \n            Map Operator Tree:\n                TableScan\n                  alias: catalog_sales\n                  filterExpr: (cs_item_sk is not null and cs_order_number is not null) (type: boolean)\n                  Statistics: Num rows: 286549727 Data size: 65825832570 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: (cs_item_sk is not null and cs_order_number is not null) (type: boolean)\n                    Statistics: Num rows: 286549727 Data size: 3435718732 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: cs_item_sk (type: int), cs_order_number (type: int), cs_ext_list_price (type: float)\n                      outputColumnNames: _col0, _col1, _col2\n                      Statistics: Num rows: 286549727 Data size: 3435718732 Basic stats: COMPLETE Column stats: COMPLETE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col0 (type: int), _col1 (type: int)\n                          1 _col0 (type: int), _col1 (type: int)\n                        outputColumnNames: _col0, _col2, _col5, _col6, _col7\n                        input vertices:\n                          1 Map 43\n                        Statistics: Num rows: 2911 Data size: 58220 Basic stats: COMPLETE Column stats: COMPLETE\n                        HybridGraceHashJoin: true\n                        Select Operator\n                          expressions: _col0 (type: int), _col2 (type: float), ((_col5 + _col6) + _col7) (type: float)\n                          outputColumnNames: _col0, _col1, _col2\n                          Statistics: Num rows: 2911 Data size: 58220 Basic stats: COMPLETE Column stats: COMPLETE\n                          Group By Operator\n                            aggregations: sum(_col1), sum(_col2)\n                            keys: _col0 (type: int)\n                            mode: hash\n                            outputColumnNames: _col0, _col1, _col2\n                            Statistics: Num rows: 1 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE\n                            Reduce Output Operator\n                              key expressions: _col0 (type: int)\n                              sort order: +\n                              Map-reduce partition columns: _col0 (type: int)\n                              Statistics: Num rows: 1 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE\n                              value expressions: _col1 (type: double), _col2 (type: double)\n            Execution mode: vectorized\n        Map 43 \n            Map Operator Tree:\n                TableScan\n                  alias: catalog_returns\n                  filterExpr: (cr_item_sk is not null and cr_order_number is not null) (type: boolean)\n                  Statistics: Num rows: 28798881 Data size: 5764329494 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: (cr_item_sk is not null and cr_order_number is not null) (type: boolean)\n                    Statistics: Num rows: 28798881 Data size: 569059536 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: cr_item_sk (type: int), cr_order_number (type: int), cr_refunded_cash (type: float), cr_reversed_charge (type: float), cr_store_credit (type: float)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4\n                      Statistics: Num rows: 28798881 Data size: 569059536 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int), _col1 (type: int)\n                        sort order: ++\n                        Map-reduce partition columns: _col0 (type: int), _col1 (type: int)\n                        Statistics: Num rows: 28798881 Data size: 569059536 Basic stats: COMPLETE Column stats: COMPLETE\n                        value expressions: _col2 (type: float), _col3 (type: float), _col4 (type: float)\n            Execution mode: vectorized\n        Map 7 \n            Map Operator Tree:\n                TableScan\n                  alias: hd1\n                  filterExpr: (hd_income_band_sk is not null and hd_demo_sk is not null) (type: boolean)\n                  Statistics: Num rows: 7200 Data size: 770400 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: (hd_income_band_sk is not null and hd_demo_sk is not null) (type: boolean)\n                    Statistics: Num rows: 7200 Data size: 57600 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: hd_demo_sk (type: int), hd_income_band_sk (type: int)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 7200 Data size: 57600 Basic stats: COMPLETE Column stats: COMPLETE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col1 (type: int)\n                          1 _col0 (type: int)\n                        outputColumnNames: _col0\n                        input vertices:\n                          1 Map 8\n                        Statistics: Num rows: 7200 Data size: 28800 Basic stats: COMPLETE Column stats: COMPLETE\n                        HybridGraceHashJoin: true\n                        Reduce Output Operator\n                          key expressions: _col0 (type: int)\n                          sort order: +\n                          Map-reduce partition columns: _col0 (type: int)\n                          Statistics: Num rows: 7200 Data size: 28800 Basic stats: COMPLETE Column stats: COMPLETE\n            Execution mode: vectorized\n        Map 8 \n            Map Operator Tree:\n                TableScan\n                  alias: ib1\n                  filterExpr: ib_income_band_sk is not null (type: boolean)\n                  Statistics: Num rows: 20 Data size: 240 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ib_income_band_sk is not null (type: boolean)\n                    Statistics: Num rows: 20 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: ib_income_band_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 20 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 20 Data size: 80 Basic stats: COMPLETE Column stats: COMPLETE\n            Execution mode: vectorized\n        Map 9 \n            Map Operator Tree:\n                TableScan\n                  alias: promotion\n                  filterExpr: p_promo_sk is not null (type: boolean)\n                  Statistics: Num rows: 450 Data size: 530848 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: p_promo_sk is not null (type: boolean)\n                    Statistics: Num rows: 450 Data size: 1800 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: p_promo_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 450 Data size: 1800 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 450 Data size: 1800 Basic stats: COMPLETE Column stats: COMPLETE\n            Execution mode: vectorized\n        Reducer 21 \n            Reduce Operator Tree:\n              Group By Operator\n                aggregations: sum(VALUE._col0), sum(VALUE._col1)\n                keys: KEY._col0 (type: int)\n                mode: mergepartial\n                outputColumnNames: _col0, _col1, _col2\n                Statistics: Num rows: 1 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE\n                Filter Operator\n                  predicate: (_col1 > (2.0 * _col2)) (type: boolean)\n                  Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: COMPLETE\n                  Select Operator\n                    expressions: _col0 (type: int)\n                    outputColumnNames: _col0\n                    Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: COMPLETE\n                    Reduce Output Operator\n                      key expressions: _col0 (type: int)\n                      sort order: +\n                      Map-reduce partition columns: _col0 (type: int)\n                      Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: COMPLETE\n        Reducer 27 \n            Reduce Operator Tree:\n              Group By Operator\n                aggregations: count(VALUE._col0), sum(VALUE._col1), sum(VALUE._col2), sum(VALUE._col3)\n                keys: KEY._col0 (type: string), KEY._col1 (type: int), KEY._col2 (type: string), KEY._col3 (type: string), KEY._col4 (type: string), KEY._col5 (type: string), KEY._col6 (type: string), KEY._col7 (type: string), KEY._col8 (type: string), KEY._col9 (type: string), KEY._col10 (type: string), KEY._col11 (type: string), KEY._col12 (type: int), KEY._col13 (type: int), KEY._col14 (type: int)\n                mode: mergepartial\n                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18\n                Statistics: Num rows: 532400 Data size: 194326011 Basic stats: COMPLETE Column stats: NONE\n                Select Operator\n                  expressions: _col1 (type: int), _col2 (type: string), _col3 (type: string), _col12 (type: int), _col15 (type: bigint), _col16 (type: double), _col17 (type: double), _col18 (type: double)\n                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7\n                  Statistics: Num rows: 532400 Data size: 194326011 Basic stats: COMPLETE Column stats: NONE\n                  Reduce Output Operator\n                    key expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string)\n                    sort order: +++\n                    Map-reduce partition columns: _col0 (type: int), _col1 (type: string), _col2 (type: string)\n                    Statistics: Num rows: 532400 Data size: 194326011 Basic stats: COMPLETE Column stats: NONE\n                    value expressions: _col3 (type: int), _col4 (type: bigint), _col5 (type: double), _col6 (type: double), _col7 (type: double)\n        Reducer 42 \n            Reduce Operator Tree:\n              Group By Operator\n                aggregations: sum(VALUE._col0), sum(VALUE._col1)\n                keys: KEY._col0 (type: int)\n                mode: mergepartial\n                outputColumnNames: _col0, _col1, _col2\n                Statistics: Num rows: 1 Data size: 20 Basic stats: COMPLETE Column stats: COMPLETE\n                Filter Operator\n                  predicate: (_col1 > (2.0 * _col2)) (type: boolean)\n                  Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: COMPLETE\n                  Select Operator\n                    expressions: _col0 (type: int)\n                    outputColumnNames: _col0\n                    Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: COMPLETE\n                    Reduce Output Operator\n                      key expressions: _col0 (type: int)\n                      sort order: +\n                      Map-reduce partition columns: _col0 (type: int)\n                      Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: COMPLETE\n        Reducer 5 \n            Reduce Operator Tree:\n              Group By Operator\n                aggregations: count(VALUE._col0), sum(VALUE._col1), sum(VALUE._col2), sum(VALUE._col3)\n                keys: KEY._col0 (type: string), KEY._col1 (type: int), KEY._col2 (type: string), KEY._col3 (type: string), KEY._col4 (type: string), KEY._col5 (type: string), KEY._col6 (type: string), KEY._col7 (type: string), KEY._col8 (type: string), KEY._col9 (type: string), KEY._col10 (type: string), KEY._col11 (type: string), KEY._col12 (type: int), KEY._col13 (type: int), KEY._col14 (type: int)\n                mode: mergepartial\n                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18\n                Statistics: Num rows: 532400 Data size: 194326011 Basic stats: COMPLETE Column stats: NONE\n                Select Operator\n                  expressions: _col0 (type: string), _col1 (type: int), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: int), _col15 (type: bigint), _col16 (type: double), _col17 (type: double), _col18 (type: double)\n                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16\n                  Statistics: Num rows: 532400 Data size: 194326011 Basic stats: COMPLETE Column stats: NONE\n                  Map Join Operator\n                    condition map:\n                         Inner Join 0 to 1\n                    keys:\n                      0 _col1 (type: int), _col2 (type: string), _col3 (type: string)\n                      1 _col0 (type: int), _col1 (type: string), _col2 (type: string)\n                    outputColumnNames: _col0, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col20, _col21, _col22, _col23, _col24\n                    input vertices:\n                      1 Reducer 27\n                    Statistics: Num rows: 585640 Data size: 213758616 Basic stats: COMPLETE Column stats: NONE\n                    HybridGraceHashJoin: true\n                    Filter Operator\n                      predicate: (_col21 <= _col13) (type: boolean)\n                      Statistics: Num rows: 195213 Data size: 71252750 Basic stats: COMPLETE Column stats: NONE\n                      Select Operator\n                        expressions: _col0 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: int), _col13 (type: bigint), _col14 (type: double), _col15 (type: double), _col16 (type: double), _col22 (type: double), _col23 (type: double), _col24 (type: double), _col20 (type: int), _col21 (type: bigint)\n                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20\n                        Statistics: Num rows: 195213 Data size: 71252750 Basic stats: COMPLETE Column stats: NONE\n                        Reduce Output Operator\n                          key expressions: _col0 (type: string), _col1 (type: string), _col20 (type: bigint)\n                          sort order: +++\n                          Statistics: Num rows: 195213 Data size: 71252750 Basic stats: COMPLETE Column stats: NONE\n                          value expressions: _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: int), _col12 (type: bigint), _col13 (type: double), _col14 (type: double), _col15 (type: double), _col16 (type: double), _col17 (type: double), _col18 (type: double), _col19 (type: int)\n        Reducer 6 \n            Reduce Operator Tree:\n              Select Operator\n                expressions: KEY.reducesinkkey0 (type: string), KEY.reducesinkkey1 (type: string), VALUE._col0 (type: string), VALUE._col1 (type: string), VALUE._col2 (type: string), VALUE._col3 (type: string), VALUE._col4 (type: string), VALUE._col5 (type: string), VALUE._col6 (type: string), VALUE._col7 (type: string), VALUE._col8 (type: string), VALUE._col9 (type: int), VALUE._col10 (type: bigint), VALUE._col11 (type: double), VALUE._col12 (type: double), VALUE._col13 (type: double), VALUE._col14 (type: double), VALUE._col15 (type: double), VALUE._col16 (type: double), VALUE._col17 (type: int), KEY.reducesinkkey2 (type: bigint)\n                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20\n                Statistics: Num rows: 195213 Data size: 71252750 Basic stats: COMPLETE Column stats: NONE\n                File Output Operator\n                  compressed: false\n                  Statistics: Num rows: 195213 Data size: 71252750 Basic stats: COMPLETE Column stats: NONE\n                  table:\n                      input format: org.apache.hadoop.mapred.TextInputFormat\n                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\n                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe\n\n  Stage: Stage-0\n    Fetch Operator\n      limit: -1\n      Processor Tree:\n        ListSink\n{code}","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12731779","id":"12731779","filename":"HIVE-10609.01.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"created":"2015-05-10T06:27:54.567+0000","size":2633,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12731779/HIVE-10609.01.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12731842","id":"12731842","filename":"HIVE-10609.02.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"created":"2015-05-11T01:32:21.461+0000","size":2791,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12731842/HIVE-10609.02.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Vectorization : Q64 fails with ClassCastException","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12827145/comment/14529972","id":"14529972","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"body":"This doesn't fail on my combined build of HIVE-9743 and HIVE-10565.  Will verify again when those JIRAs go in.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"created":"2015-05-06T05:42:32.359+0000","updated":"2015-05-06T05:42:32.359+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12827145/comment/14535721","id":"14535721","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sushanth","name":"sushanth","key":"sushanth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=sushanth&avatarId=26812","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sushanth&avatarId=26812","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sushanth&avatarId=26812","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sushanth&avatarId=26812"},"displayName":"Sushanth Sowmyan","active":true,"timeZone":"America/Los_Angeles"},"body":"Removing fix version of 1.2.0 in preparation of release, since this is not a blocker for 1.2.0.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sushanth","name":"sushanth","key":"sushanth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=sushanth&avatarId=26812","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sushanth&avatarId=26812","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sushanth&avatarId=26812","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sushanth&avatarId=26812"},"displayName":"Sushanth Sowmyan","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-05-08T22:20:30.622+0000","updated":"2015-05-08T22:20:30.622+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12827145/comment/14535732","id":"14535732","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"body":"[~sushanth]\n\nThis fix is needed to keep queries from crashing.\nPlease include in 1.2.0","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-05-08T22:22:43.531+0000","updated":"2015-05-08T22:22:43.531+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12827145/comment/14535801","id":"14535801","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sushanth","name":"sushanth","key":"sushanth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=sushanth&avatarId=26812","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sushanth&avatarId=26812","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sushanth&avatarId=26812","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sushanth&avatarId=26812"},"displayName":"Sushanth Sowmyan","active":true,"timeZone":"America/Los_Angeles"},"body":"Given that we've already begun the RC process, no new features or bugfixes are to be requested unless they are release blockers. Release blockers can only be either an outages or regressions.\n\nPer my understanding, this matches neither, since:\n\na) Outage : Vectorization is an optional feature in hive and not turned on by default - thus, it does not break regular operation.\nb) Regression : Again, vectorization being new, it should not be considered a regression.\n\nI think this can be included for 1.2.1, which is intended to be a stabilization update on 1.2.0, but probably not for 1.2.0. \n\nThoughts? If my reasoning for why this does not make the bar is incorrect, please do let me know(preferrably by replying to the VOTE thread on hive-dev asking for a deferral of the RC), and we can discuss whether or not this merits holding up the release process. Also, for any other release blockers, please mark the release status page ( https://cwiki.apache.org/confluence/display/Hive/Hive+1.2+Release+Status ) to request inclusions - that way, they are more visible.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sushanth","name":"sushanth","key":"sushanth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=sushanth&avatarId=26812","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sushanth&avatarId=26812","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sushanth&avatarId=26812","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sushanth&avatarId=26812"},"displayName":"Sushanth Sowmyan","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-05-08T22:45:44.980+0000","updated":"2015-05-08T22:45:44.980+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12827145/comment/14535870","id":"14535870","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sushanth","name":"sushanth","key":"sushanth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=sushanth&avatarId=26812","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sushanth&avatarId=26812","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sushanth&avatarId=26812","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sushanth&avatarId=26812"},"displayName":"Sushanth Sowmyan","active":true,"timeZone":"America/Los_Angeles"},"body":"Per discussion with Mostafa, I'll add this to the tentative list for 1.2 - i.e., it will not be considered a release blocker for 1.2.0, but if it gets done before the RC process ends, we will include it in the next RC being built, and include it for 1.2.0. Otherwise, it will make it in a stabilization 1.2.1 release.\n\nI'll update the fix version of this bug with the appropriate version at that time.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sushanth","name":"sushanth","key":"sushanth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=sushanth&avatarId=26812","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sushanth&avatarId=26812","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sushanth&avatarId=26812","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sushanth&avatarId=26812"},"displayName":"Sushanth Sowmyan","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-05-08T23:25:19.793+0000","updated":"2015-05-08T23:25:19.793+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12827145/comment/14536038","id":"14536038","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"body":"\nStruggling to get a repro.\n\nFrom the stack trace, it is the non-native Vector Map Join under Tez.\n\nWith these options, I get no failure.\n\n{noformat}\nSET hive.vectorized.execution.enabled=true;\nset hive.mapjoin.hybridgrace.hashtable=false;\nSET hive.vectorized.execution.mapjoin.native.enabled=false;\nset hive.cbo.enable=true;\nset hive.fetch.task.conversion=none;\nSET hive.auto.convert.join=true;\nSET hive.auto.convert.join.noconditionaltask=true;\nSET hive.auto.convert.join.noconditionaltask.size=1000000000;\nset hive.exec.dynamic.partition.mode=nonstrict;\n{noformat}\n\nHere is the EXPLAIN output:\n{noformat}\nSTAGE DEPENDENCIES:\n  Stage-1 is a root stage\n  Stage-0 depends on stages: Stage-1\n\nSTAGE PLANS:\n  Stage: Stage-1\n    Tez\n      Edges:\n        Map 1 <- Map 3 (BROADCAST_EDGE)\n        Map 11 <- Map 14 (BROADCAST_EDGE), Map 15 (BROADCAST_EDGE), Map 16 (BROADCAST_EDGE), Map 17 (BROADCAST_EDGE), Map 18 (BROADCAST_EDGE), Map 19 (BROADCAST_EDGE), Map 20 (BROADCAST_EDGE), Map 21 (BROADCAST_EDGE), Map 22 (BROADCAST_EDGE), Map 5 (BROADCAST_EDGE), Reducer 2 (BROADCAST_EDGE)\n        Map 23 <- Map 25 (BROADCAST_EDGE)\n        Map 27 <- Map 26 (BROADCAST_EDGE), Map 28 (BROADCAST_EDGE), Map 29 (BROADCAST_EDGE), Map 30 (BROADCAST_EDGE), Map 31 (BROADCAST_EDGE), Map 32 (BROADCAST_EDGE)\n        Map 33 <- Map 27 (BROADCAST_EDGE), Map 35 (BROADCAST_EDGE), Map 36 (BROADCAST_EDGE), Map 37 (BROADCAST_EDGE), Map 38 (BROADCAST_EDGE), Map 39 (BROADCAST_EDGE), Map 40 (BROADCAST_EDGE), Map 41 (BROADCAST_EDGE), Map 42 (BROADCAST_EDGE), Map 43 (BROADCAST_EDGE), Reducer 24 (BROADCAST_EDGE)\n        Map 5 <- Map 10 (BROADCAST_EDGE), Map 4 (BROADCAST_EDGE), Map 6 (BROADCAST_EDGE), Map 7 (BROADCAST_EDGE), Map 8 (BROADCAST_EDGE), Map 9 (BROADCAST_EDGE)\n        Reducer 12 <- Map 11 (SIMPLE_EDGE), Reducer 34 (BROADCAST_EDGE)\n        Reducer 13 <- Reducer 12 (SIMPLE_EDGE)\n        Reducer 2 <- Map 1 (SIMPLE_EDGE)\n        Reducer 24 <- Map 23 (SIMPLE_EDGE)\n        Reducer 34 <- Map 33 (SIMPLE_EDGE)\n#### A masked pattern was here ####\n      Vertices:\n        Map 1 \n            Map Operator Tree:\n                TableScan\n                  alias: catalog_sales\n                  Statistics: Num rows: 1441548 Data size: 2515527468 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (cs_item_sk is not null and cs_order_number is not null) (type: boolean)\n                    Statistics: Num rows: 360387 Data size: 628881867 Basic stats: COMPLETE Column stats: NONE\n                    Map Join Operator\n                      condition map:\n                           Inner Join 0 to 1\n                      keys:\n                        0 cs_item_sk (type: int), cs_order_number (type: int)\n                        1 cr_item_sk (type: int), cr_order_number (type: int)\n                      outputColumnNames: _col14, _col24, _col60, _col61, _col62\n                      input vertices:\n                        1 Map 3\n                      Statistics: Num rows: 396425 Data size: 691770068 Basic stats: COMPLETE Column stats: NONE\n                      Group By Operator\n                        aggregations: sum(_col24), sum(((_col60 + _col61) + _col62))\n                        keys: _col14 (type: int)\n                        mode: hash\n                        outputColumnNames: _col0, _col1, _col2\n                        Statistics: Num rows: 396425 Data size: 691770068 Basic stats: COMPLETE Column stats: NONE\n                        Reduce Output Operator\n                          key expressions: _col0 (type: int)\n                          sort order: +\n                          Map-reduce partition columns: _col0 (type: int)\n                          Statistics: Num rows: 396425 Data size: 691770068 Basic stats: COMPLETE Column stats: NONE\n                          value expressions: _col1 (type: decimal(17,2)), _col2 (type: decimal(19,2))\n            Execution mode: vectorized\n        Map 10 \n            Map Operator Tree:\n                TableScan\n                  alias: store\n                  Statistics: Num rows: 12 Data size: 25632 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ((s_store_sk is not null and s_store_name is not null) and s_zip is not null) (type: boolean)\n                    Statistics: Num rows: 2 Data size: 4272 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: s_store_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: s_store_sk (type: int)\n                      Statistics: Num rows: 2 Data size: 4272 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: s_store_name (type: string), s_zip (type: string)\n                    Select Operator\n                      expressions: s_store_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 2 Data size: 4272 Basic stats: COMPLETE Column stats: NONE\n                      Group By Operator\n                        keys: _col0 (type: int)\n                        mode: hash\n                        outputColumnNames: _col0\n                        Statistics: Num rows: 2 Data size: 4272 Basic stats: COMPLETE Column stats: NONE\n                        Dynamic Partitioning Event Operator\n                          Target Input: store_sales\n                          Partition key expr: ss_store_sk\n                          Statistics: Num rows: 2 Data size: 4272 Basic stats: COMPLETE Column stats: NONE\n                          Target column: ss_store_sk\n                          Target Vertex: Map 4\n            Execution mode: vectorized\n        Map 11 \n            Map Operator Tree:\n                TableScan\n                  alias: cd1\n                  Statistics: Num rows: 1920800 Data size: 538778449 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: cd_demo_sk is not null (type: boolean)\n                    Statistics: Num rows: 960400 Data size: 269389224 Basic stats: COMPLETE Column stats: NONE\n                    Map Join Operator\n                      condition map:\n                           Inner Join 0 to 1\n                      keys:\n                        0 _col4 (type: int)\n                        1 cd_demo_sk (type: int)\n                      outputColumnNames: _col2, _col5, _col6, _col7, _col10, _col11, _col18, _col51, _col52, _col53, _col107, _col138, _col168, _col188, _col197\n                      input vertices:\n                        0 Map 5\n                      Statistics: Num rows: 1056440 Data size: 296328152 Basic stats: COMPLETE Column stats: NONE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col51 (type: int)\n                          1 cd_demo_sk (type: int)\n                        outputColumnNames: _col2, _col5, _col6, _col7, _col10, _col11, _col18, _col52, _col53, _col107, _col138, _col168, _col188, _col197, _col209\n                        input vertices:\n                          1 Map 14\n                        Statistics: Num rows: 1162084 Data size: 325960974 Basic stats: COMPLETE Column stats: NONE\n                        Map Join Operator\n                          condition map:\n                               Inner Join 0 to 1\n                          keys:\n                            0 _col7 (type: int)\n                            1 p_promo_sk (type: int)\n                          outputColumnNames: _col2, _col5, _col6, _col10, _col11, _col18, _col52, _col53, _col107, _col138, _col168, _col188, _col197, _col209\n                          input vertices:\n                            1 Map 15\n                          Statistics: Num rows: 1278292 Data size: 358557079 Basic stats: COMPLETE Column stats: NONE\n                          Map Join Operator\n                            condition map:\n                                 Inner Join 0 to 1\n                            keys:\n                              0 _col5 (type: int)\n                              1 hd_demo_sk (type: int)\n                            outputColumnNames: _col2, _col6, _col10, _col11, _col18, _col52, _col53, _col107, _col138, _col168, _col188, _col197, _col209, _col242\n                            input vertices:\n                              1 Map 16\n                            Statistics: Num rows: 1406121 Data size: 394412795 Basic stats: COMPLETE Column stats: NONE\n                            Map Join Operator\n                              condition map:\n                                   Inner Join 0 to 1\n                              keys:\n                                0 _col52 (type: int)\n                                1 hd_demo_sk (type: int)\n                              outputColumnNames: _col2, _col6, _col10, _col11, _col18, _col53, _col107, _col138, _col168, _col188, _col197, _col209, _col242, _col250\n                              input vertices:\n                                1 Map 17\n                              Statistics: Num rows: 1546733 Data size: 433854083 Basic stats: COMPLETE Column stats: NONE\n                              Map Join Operator\n                                condition map:\n                                     Inner Join 0 to 1\n                                keys:\n                                  0 _col6 (type: int)\n                                  1 ca_address_sk (type: int)\n                                outputColumnNames: _col2, _col10, _col11, _col18, _col53, _col107, _col138, _col168, _col188, _col197, _col209, _col242, _col250, _col259, _col260, _col263, _col266\n                                input vertices:\n                                  1 Map 18\n                                Statistics: Num rows: 1701406 Data size: 477239501 Basic stats: COMPLETE Column stats: NONE\n                                Map Join Operator\n                                  condition map:\n                                       Inner Join 0 to 1\n                                  keys:\n                                    0 _col53 (type: int)\n                                    1 ca_address_sk (type: int)\n                                  outputColumnNames: _col2, _col10, _col11, _col18, _col107, _col138, _col168, _col188, _col197, _col209, _col242, _col250, _col259, _col260, _col263, _col266, _col275, _col276, _col279, _col282\n                                  input vertices:\n                                    1 Map 19\n                                  Statistics: Num rows: 1871546 Data size: 524963462 Basic stats: COMPLETE Column stats: NONE\n                                  Map Join Operator\n                                    condition map:\n                                         Inner Join 0 to 1\n                                    keys:\n                                      0 _col242 (type: int)\n                                      1 ib_income_band_sk (type: int)\n                                    outputColumnNames: _col2, _col10, _col11, _col18, _col107, _col138, _col168, _col188, _col197, _col209, _col250, _col259, _col260, _col263, _col266, _col275, _col276, _col279, _col282\n                                    input vertices:\n                                      1 Map 20\n                                    Statistics: Num rows: 2058700 Data size: 577459820 Basic stats: COMPLETE Column stats: NONE\n                                    Map Join Operator\n                                      condition map:\n                                           Inner Join 0 to 1\n                                      keys:\n                                        0 _col250 (type: int)\n                                        1 ib_income_band_sk (type: int)\n                                      outputColumnNames: _col2, _col10, _col11, _col18, _col107, _col138, _col168, _col188, _col197, _col209, _col259, _col260, _col263, _col266, _col275, _col276, _col279, _col282\n                                      input vertices:\n                                        1 Map 21\n                                      Statistics: Num rows: 2264570 Data size: 635205815 Basic stats: COMPLETE Column stats: NONE\n                                      Map Join Operator\n                                        condition map:\n                                             Inner Join 0 to 1\n                                             Inner Join 0 to 2\n                                        keys:\n                                          0 _col2 (type: int)\n                                          1 i_item_sk (type: int)\n                                          2 _col0 (type: int)\n                                        outputColumnNames: _col10, _col11, _col18, _col107, _col138, _col168, _col188, _col197, _col209, _col259, _col260, _col263, _col266, _col275, _col276, _col279, _col282, _col301, _col306, _col318, _col322\n                                        input vertices:\n                                          1 Map 22\n                                          2 Reducer 2\n                                        Statistics: Num rows: 4982054 Data size: 1397452823 Basic stats: COMPLETE Column stats: NONE\n                                        Filter Operator\n                                          predicate: ((((_col197 <> _col209) and (_col318) IN ('maroon', 'burnished', 'dim', 'steel', 'navajo', 'chocolate')) and _col306 BETWEEN 35 AND 45) and _col306 BETWEEN 36 AND 50) (type: boolean)\n                                          Statistics: Num rows: 622756 Data size: 174681392 Basic stats: COMPLETE Column stats: NONE\n                                          Select Operator\n                                            expressions: _col322 (type: string), _col301 (type: int), _col168 (type: string), _col188 (type: string), _col259 (type: string), _col260 (type: string), _col263 (type: string), _col266 (type: string), _col275 (type: string), _col276 (type: string), _col279 (type: string), _col282 (type: string), 2000 (type: int), _col107 (type: int), _col138 (type: int), _col10 (type: decimal(7,2)), _col11 (type: decimal(7,2)), _col18 (type: decimal(7,2))\n                                            outputColumnNames: _col322, _col301, _col168, _col188, _col259, _col260, _col263, _col266, _col275, _col276, _col279, _col282, _col76, _col107, _col138, _col10, _col11, _col18\n                                            Statistics: Num rows: 622756 Data size: 174681392 Basic stats: COMPLETE Column stats: NONE\n                                            Group By Operator\n                                              aggregations: count(), sum(_col10), sum(_col11), sum(_col18)\n                                              keys: _col322 (type: string), _col301 (type: int), _col168 (type: string), _col188 (type: string), _col259 (type: string), _col260 (type: string), _col263 (type: string), _col266 (type: string), _col275 (type: string), _col276 (type: string), _col279 (type: string), _col282 (type: string), _col76 (type: int), _col107 (type: int), _col138 (type: int)\n                                              mode: hash\n                                              outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18\n                                              Statistics: Num rows: 622756 Data size: 174681392 Basic stats: COMPLETE Column stats: NONE\n                                              Reduce Output Operator\n                                                key expressions: _col0 (type: string), _col1 (type: int), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: int), _col13 (type: int), _col14 (type: int)\n                                                sort order: +++++++++++++++\n                                                Map-reduce partition columns: _col0 (type: string), _col1 (type: int), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: int), _col13 (type: int), _col14 (type: int)\n                                                Statistics: Num rows: 622756 Data size: 174681392 Basic stats: COMPLETE Column stats: NONE\n                                                value expressions: _col15 (type: bigint), _col16 (type: decimal(17,2)), _col17 (type: decimal(17,2)), _col18 (type: decimal(17,2))\n            Execution mode: vectorized\n        Map 14 \n            Map Operator Tree:\n                TableScan\n                  alias: cd2\n                  Statistics: Num rows: 1920800 Data size: 538778449 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: cd_demo_sk is not null (type: boolean)\n                    Statistics: Num rows: 960400 Data size: 269389224 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: cd_demo_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: cd_demo_sk (type: int)\n                      Statistics: Num rows: 960400 Data size: 269389224 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: cd_marital_status (type: string)\n            Execution mode: vectorized\n        Map 15 \n            Map Operator Tree:\n                TableScan\n                  alias: promotion\n                  Statistics: Num rows: 300 Data size: 385624 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: p_promo_sk is not null (type: boolean)\n                    Statistics: Num rows: 150 Data size: 192812 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: p_promo_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: p_promo_sk (type: int)\n                      Statistics: Num rows: 150 Data size: 192812 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 16 \n            Map Operator Tree:\n                TableScan\n                  alias: hd1\n                  Statistics: Num rows: 7200 Data size: 770400 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (hd_demo_sk is not null and hd_income_band_sk is not null) (type: boolean)\n                    Statistics: Num rows: 1800 Data size: 192600 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: hd_demo_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: hd_demo_sk (type: int)\n                      Statistics: Num rows: 1800 Data size: 192600 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: hd_income_band_sk (type: int)\n            Execution mode: vectorized\n        Map 17 \n            Map Operator Tree:\n                TableScan\n                  alias: hd2\n                  Statistics: Num rows: 7200 Data size: 770400 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (hd_demo_sk is not null and hd_income_band_sk is not null) (type: boolean)\n                    Statistics: Num rows: 1800 Data size: 192600 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: hd_demo_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: hd_demo_sk (type: int)\n                      Statistics: Num rows: 1800 Data size: 192600 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: hd_income_band_sk (type: int)\n            Execution mode: vectorized\n        Map 18 \n            Map Operator Tree:\n                TableScan\n                  alias: ad1\n                  Statistics: Num rows: 50000 Data size: 55975728 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ca_address_sk is not null (type: boolean)\n                    Statistics: Num rows: 25000 Data size: 27987864 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: ca_address_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: ca_address_sk (type: int)\n                      Statistics: Num rows: 25000 Data size: 27987864 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: ca_street_number (type: string), ca_street_name (type: string), ca_city (type: string), ca_zip (type: string)\n            Execution mode: vectorized\n        Map 19 \n            Map Operator Tree:\n                TableScan\n                  alias: ad2\n                  Statistics: Num rows: 50000 Data size: 55975728 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ca_address_sk is not null (type: boolean)\n                    Statistics: Num rows: 25000 Data size: 27987864 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: ca_address_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: ca_address_sk (type: int)\n                      Statistics: Num rows: 25000 Data size: 27987864 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: ca_street_number (type: string), ca_street_name (type: string), ca_city (type: string), ca_zip (type: string)\n            Execution mode: vectorized\n        Map 20 \n            Map Operator Tree:\n                TableScan\n                  alias: ib1\n                  Statistics: Num rows: 20 Data size: 240 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ib_income_band_sk is not null (type: boolean)\n                    Statistics: Num rows: 10 Data size: 120 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: ib_income_band_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: ib_income_band_sk (type: int)\n                      Statistics: Num rows: 10 Data size: 120 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 21 \n            Map Operator Tree:\n                TableScan\n                  alias: ib2\n                  Statistics: Num rows: 20 Data size: 240 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ib_income_band_sk is not null (type: boolean)\n                    Statistics: Num rows: 10 Data size: 120 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: ib_income_band_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: ib_income_band_sk (type: int)\n                      Statistics: Num rows: 10 Data size: 120 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 22 \n            Map Operator Tree:\n                TableScan\n                  alias: item\n                  Statistics: Num rows: 18000 Data size: 29671008 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (((i_item_sk is not null and (i_color) IN ('maroon', 'burnished', 'dim', 'steel', 'navajo', 'chocolate')) and i_current_price BETWEEN 35 AND 45) and i_current_price BETWEEN 36 AND 50) (type: boolean)\n                    Statistics: Num rows: 1125 Data size: 1854438 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: i_item_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: i_item_sk (type: int)\n                      Statistics: Num rows: 1125 Data size: 1854438 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: i_current_price (type: decimal(7,2)), i_color (type: string), i_product_name (type: string)\n            Execution mode: vectorized\n        Map 23 \n            Map Operator Tree:\n                TableScan\n                  alias: catalog_sales\n                  Statistics: Num rows: 1441548 Data size: 2515527468 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (cs_item_sk is not null and cs_order_number is not null) (type: boolean)\n                    Statistics: Num rows: 360387 Data size: 628881867 Basic stats: COMPLETE Column stats: NONE\n                    Map Join Operator\n                      condition map:\n                           Inner Join 0 to 1\n                      keys:\n                        0 cs_item_sk (type: int), cs_order_number (type: int)\n                        1 cr_item_sk (type: int), cr_order_number (type: int)\n                      outputColumnNames: _col14, _col24, _col60, _col61, _col62\n                      input vertices:\n                        1 Map 25\n                      Statistics: Num rows: 396425 Data size: 691770068 Basic stats: COMPLETE Column stats: NONE\n                      Group By Operator\n                        aggregations: sum(_col24), sum(((_col60 + _col61) + _col62))\n                        keys: _col14 (type: int)\n                        mode: hash\n                        outputColumnNames: _col0, _col1, _col2\n                        Statistics: Num rows: 396425 Data size: 691770068 Basic stats: COMPLETE Column stats: NONE\n                        Reduce Output Operator\n                          key expressions: _col0 (type: int)\n                          sort order: +\n                          Map-reduce partition columns: _col0 (type: int)\n                          Statistics: Num rows: 396425 Data size: 691770068 Basic stats: COMPLETE Column stats: NONE\n                          value expressions: _col1 (type: decimal(17,2)), _col2 (type: decimal(19,2))\n            Execution mode: vectorized\n        Map 25 \n            Map Operator Tree:\n                TableScan\n                  alias: catalog_returns\n                  Statistics: Num rows: 144067 Data size: 152549408 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (cr_item_sk is not null and cr_order_number is not null) (type: boolean)\n                    Statistics: Num rows: 36017 Data size: 38137616 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: cr_item_sk (type: int), cr_order_number (type: int)\n                      sort order: ++\n                      Map-reduce partition columns: cr_item_sk (type: int), cr_order_number (type: int)\n                      Statistics: Num rows: 36017 Data size: 38137616 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: cr_refunded_cash (type: decimal(7,2)), cr_reversed_charge (type: decimal(7,2)), cr_store_credit (type: decimal(7,2))\n            Execution mode: vectorized\n        Map 26 \n            Map Operator Tree:\n                TableScan\n                  alias: store_sales\n                  Statistics: Num rows: 2750370 Data size: 3717170032 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (((((((ss_item_sk is not null and ss_ticket_number is not null) and ss_customer_sk is not null) and ss_sold_date_sk is not null) and ss_cdemo_sk is not null) and ss_promo_sk is not null) and ss_hdemo_sk is not null) and ss_addr_sk is not null) (type: boolean)\n                    Statistics: Num rows: 10744 Data size: 14520691 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: ss_item_sk (type: int), ss_ticket_number (type: int)\n                      sort order: ++\n                      Map-reduce partition columns: ss_item_sk (type: int), ss_ticket_number (type: int)\n                      Statistics: Num rows: 10744 Data size: 14520691 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: ss_sold_date_sk (type: int), ss_customer_sk (type: int), ss_cdemo_sk (type: int), ss_hdemo_sk (type: int), ss_addr_sk (type: int), ss_promo_sk (type: int), ss_wholesale_cost (type: decimal(7,2)), ss_list_price (type: decimal(7,2)), ss_coupon_amt (type: decimal(7,2)), ss_store_sk (type: int)\n            Execution mode: vectorized\n        Map 27 \n            Map Operator Tree:\n                TableScan\n                  alias: store_returns\n                  Statistics: Num rows: 287514 Data size: 291997400 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (sr_item_sk is not null and sr_ticket_number is not null) (type: boolean)\n                    Statistics: Num rows: 71879 Data size: 72999857 Basic stats: COMPLETE Column stats: NONE\n                    Map Join Operator\n                      condition map:\n                           Inner Join 0 to 1\n                      keys:\n                        0 ss_item_sk (type: int), ss_ticket_number (type: int)\n                        1 sr_item_sk (type: int), sr_ticket_number (type: int)\n                      outputColumnNames: _col0, _col2, _col3, _col4, _col5, _col6, _col7, _col10, _col11, _col18, _col22\n                      input vertices:\n                        0 Map 26\n                      Statistics: Num rows: 79066 Data size: 80299844 Basic stats: COMPLETE Column stats: NONE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col3 (type: int)\n                          1 c_customer_sk (type: int)\n                        outputColumnNames: _col0, _col2, _col4, _col5, _col6, _col7, _col10, _col11, _col18, _col22, _col51, _col52, _col53, _col54, _col55\n                        input vertices:\n                          1 Map 28\n                        Statistics: Num rows: 86972 Data size: 88329830 Basic stats: COMPLETE Column stats: NONE\n                        Map Join Operator\n                          condition map:\n                               Inner Join 0 to 1\n                          keys:\n                            0 _col0 (type: int)\n                            1 d_date_sk (type: int)\n                          outputColumnNames: _col2, _col4, _col5, _col6, _col7, _col10, _col11, _col18, _col22, _col51, _col52, _col53, _col54, _col55\n                          input vertices:\n                            1 Map 29\n                          Statistics: Num rows: 95669 Data size: 97162815 Basic stats: COMPLETE Column stats: NONE\n                          Map Join Operator\n                            condition map:\n                                 Inner Join 0 to 1\n                            keys:\n                              0 _col55 (type: int)\n                              1 d_date_sk (type: int)\n                            outputColumnNames: _col2, _col4, _col5, _col6, _col7, _col10, _col11, _col18, _col22, _col51, _col52, _col53, _col54, _col107\n                            input vertices:\n                              1 Map 30\n                            Statistics: Num rows: 105235 Data size: 106879098 Basic stats: COMPLETE Column stats: NONE\n                            Map Join Operator\n                              condition map:\n                                   Inner Join 0 to 1\n                              keys:\n                                0 _col54 (type: int)\n                                1 d_date_sk (type: int)\n                              outputColumnNames: _col2, _col4, _col5, _col6, _col7, _col10, _col11, _col18, _col22, _col51, _col52, _col53, _col107, _col138\n                              input vertices:\n                                1 Map 31\n                              Statistics: Num rows: 115758 Data size: 117567010 Basic stats: COMPLETE Column stats: NONE\n                              Map Join Operator\n                                condition map:\n                                     Inner Join 0 to 1\n                                keys:\n                                  0 _col22 (type: int)\n                                  1 s_store_sk (type: int)\n                                outputColumnNames: _col2, _col4, _col5, _col6, _col7, _col10, _col11, _col18, _col51, _col52, _col53, _col107, _col138, _col168, _col188\n                                input vertices:\n                                  1 Map 32\n                                Statistics: Num rows: 127333 Data size: 129323713 Basic stats: COMPLETE Column stats: NONE\n                                Reduce Output Operator\n                                  key expressions: _col4 (type: int)\n                                  sort order: +\n                                  Map-reduce partition columns: _col4 (type: int)\n                                  Statistics: Num rows: 127333 Data size: 129323713 Basic stats: COMPLETE Column stats: NONE\n                                  value expressions: _col2 (type: int), _col5 (type: int), _col6 (type: int), _col7 (type: int), _col10 (type: decimal(7,2)), _col11 (type: decimal(7,2)), _col18 (type: decimal(7,2)), _col51 (type: int), _col52 (type: int), _col53 (type: int), _col107 (type: int), _col138 (type: int), _col168 (type: string), _col188 (type: string)\n            Execution mode: vectorized\n        Map 28 \n            Map Operator Tree:\n                TableScan\n                  alias: customer\n                  Statistics: Num rows: 100000 Data size: 85628164 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (((((c_customer_sk is not null and c_first_sales_date_sk is not null) and c_first_shipto_date_sk is not null) and c_current_cdemo_sk is not null) and c_current_hdemo_sk is not null) and c_current_addr_sk is not null) (type: boolean)\n                    Statistics: Num rows: 1563 Data size: 1338368 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: c_customer_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: c_customer_sk (type: int)\n                      Statistics: Num rows: 1563 Data size: 1338368 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: c_current_cdemo_sk (type: int), c_current_hdemo_sk (type: int), c_current_addr_sk (type: int), c_first_shipto_date_sk (type: int), c_first_sales_date_sk (type: int)\n            Execution mode: vectorized\n        Map 29 \n            Map Operator Tree:\n                TableScan\n                  alias: d1\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (d_date_sk is not null and (d_year = 2001)) (type: boolean)\n                    Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: d_date_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: d_date_sk (type: int)\n                      Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 3 \n            Map Operator Tree:\n                TableScan\n                  alias: catalog_returns\n                  Statistics: Num rows: 144067 Data size: 152549408 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (cr_item_sk is not null and cr_order_number is not null) (type: boolean)\n                    Statistics: Num rows: 36017 Data size: 38137616 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: cr_item_sk (type: int), cr_order_number (type: int)\n                      sort order: ++\n                      Map-reduce partition columns: cr_item_sk (type: int), cr_order_number (type: int)\n                      Statistics: Num rows: 36017 Data size: 38137616 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: cr_refunded_cash (type: decimal(7,2)), cr_reversed_charge (type: decimal(7,2)), cr_store_credit (type: decimal(7,2))\n            Execution mode: vectorized\n        Map 30 \n            Map Operator Tree:\n                TableScan\n                  alias: d2\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: d_date_sk is not null (type: boolean)\n                    Statistics: Num rows: 36525 Data size: 40871475 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: d_date_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: d_date_sk (type: int)\n                      Statistics: Num rows: 36525 Data size: 40871475 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: d_year (type: int)\n            Execution mode: vectorized\n        Map 31 \n            Map Operator Tree:\n                TableScan\n                  alias: d3\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: d_date_sk is not null (type: boolean)\n                    Statistics: Num rows: 36525 Data size: 40871475 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: d_date_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: d_date_sk (type: int)\n                      Statistics: Num rows: 36525 Data size: 40871475 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: d_year (type: int)\n            Execution mode: vectorized\n        Map 32 \n            Map Operator Tree:\n                TableScan\n                  alias: store\n                  Statistics: Num rows: 12 Data size: 25632 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ((s_store_sk is not null and s_store_name is not null) and s_zip is not null) (type: boolean)\n                    Statistics: Num rows: 2 Data size: 4272 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: s_store_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: s_store_sk (type: int)\n                      Statistics: Num rows: 2 Data size: 4272 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: s_store_name (type: string), s_zip (type: string)\n                    Select Operator\n                      expressions: s_store_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 2 Data size: 4272 Basic stats: COMPLETE Column stats: NONE\n                      Group By Operator\n                        keys: _col0 (type: int)\n                        mode: hash\n                        outputColumnNames: _col0\n                        Statistics: Num rows: 2 Data size: 4272 Basic stats: COMPLETE Column stats: NONE\n                        Dynamic Partitioning Event Operator\n                          Target Input: store_sales\n                          Partition key expr: ss_store_sk\n                          Statistics: Num rows: 2 Data size: 4272 Basic stats: COMPLETE Column stats: NONE\n                          Target column: ss_store_sk\n                          Target Vertex: Map 26\n            Execution mode: vectorized\n        Map 33 \n            Map Operator Tree:\n                TableScan\n                  alias: cd1\n                  Statistics: Num rows: 1920800 Data size: 538778449 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: cd_demo_sk is not null (type: boolean)\n                    Statistics: Num rows: 960400 Data size: 269389224 Basic stats: COMPLETE Column stats: NONE\n                    Map Join Operator\n                      condition map:\n                           Inner Join 0 to 1\n                      keys:\n                        0 _col4 (type: int)\n                        1 cd_demo_sk (type: int)\n                      outputColumnNames: _col2, _col5, _col6, _col7, _col10, _col11, _col18, _col51, _col52, _col53, _col107, _col138, _col168, _col188, _col197\n                      input vertices:\n                        0 Map 27\n                      Statistics: Num rows: 1056440 Data size: 296328152 Basic stats: COMPLETE Column stats: NONE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col51 (type: int)\n                          1 cd_demo_sk (type: int)\n                        outputColumnNames: _col2, _col5, _col6, _col7, _col10, _col11, _col18, _col52, _col53, _col107, _col138, _col168, _col188, _col197, _col209\n                        input vertices:\n                          1 Map 35\n                        Statistics: Num rows: 1162084 Data size: 325960974 Basic stats: COMPLETE Column stats: NONE\n                        Map Join Operator\n                          condition map:\n                               Inner Join 0 to 1\n                          keys:\n                            0 _col7 (type: int)\n                            1 p_promo_sk (type: int)\n                          outputColumnNames: _col2, _col5, _col6, _col10, _col11, _col18, _col52, _col53, _col107, _col138, _col168, _col188, _col197, _col209\n                          input vertices:\n                            1 Map 36\n                          Statistics: Num rows: 1278292 Data size: 358557079 Basic stats: COMPLETE Column stats: NONE\n                          Map Join Operator\n                            condition map:\n                                 Inner Join 0 to 1\n                            keys:\n                              0 _col5 (type: int)\n                              1 hd_demo_sk (type: int)\n                            outputColumnNames: _col2, _col6, _col10, _col11, _col18, _col52, _col53, _col107, _col138, _col168, _col188, _col197, _col209, _col242\n                            input vertices:\n                              1 Map 37\n                            Statistics: Num rows: 1406121 Data size: 394412795 Basic stats: COMPLETE Column stats: NONE\n                            Map Join Operator\n                              condition map:\n                                   Inner Join 0 to 1\n                              keys:\n                                0 _col52 (type: int)\n                                1 hd_demo_sk (type: int)\n                              outputColumnNames: _col2, _col6, _col10, _col11, _col18, _col53, _col107, _col138, _col168, _col188, _col197, _col209, _col242, _col250\n                              input vertices:\n                                1 Map 38\n                              Statistics: Num rows: 1546733 Data size: 433854083 Basic stats: COMPLETE Column stats: NONE\n                              Map Join Operator\n                                condition map:\n                                     Inner Join 0 to 1\n                                keys:\n                                  0 _col6 (type: int)\n                                  1 ca_address_sk (type: int)\n                                outputColumnNames: _col2, _col10, _col11, _col18, _col53, _col107, _col138, _col168, _col188, _col197, _col209, _col242, _col250, _col259, _col260, _col263, _col266\n                                input vertices:\n                                  1 Map 39\n                                Statistics: Num rows: 1701406 Data size: 477239501 Basic stats: COMPLETE Column stats: NONE\n                                Map Join Operator\n                                  condition map:\n                                       Inner Join 0 to 1\n                                  keys:\n                                    0 _col53 (type: int)\n                                    1 ca_address_sk (type: int)\n                                  outputColumnNames: _col2, _col10, _col11, _col18, _col107, _col138, _col168, _col188, _col197, _col209, _col242, _col250, _col259, _col260, _col263, _col266, _col275, _col276, _col279, _col282\n                                  input vertices:\n                                    1 Map 40\n                                  Statistics: Num rows: 1871546 Data size: 524963462 Basic stats: COMPLETE Column stats: NONE\n                                  Map Join Operator\n                                    condition map:\n                                         Inner Join 0 to 1\n                                    keys:\n                                      0 _col242 (type: int)\n                                      1 ib_income_band_sk (type: int)\n                                    outputColumnNames: _col2, _col10, _col11, _col18, _col107, _col138, _col168, _col188, _col197, _col209, _col250, _col259, _col260, _col263, _col266, _col275, _col276, _col279, _col282\n                                    input vertices:\n                                      1 Map 41\n                                    Statistics: Num rows: 2058700 Data size: 577459820 Basic stats: COMPLETE Column stats: NONE\n                                    Map Join Operator\n                                      condition map:\n                                           Inner Join 0 to 1\n                                      keys:\n                                        0 _col250 (type: int)\n                                        1 ib_income_band_sk (type: int)\n                                      outputColumnNames: _col2, _col10, _col11, _col18, _col107, _col138, _col168, _col188, _col197, _col209, _col259, _col260, _col263, _col266, _col275, _col276, _col279, _col282\n                                      input vertices:\n                                        1 Map 42\n                                      Statistics: Num rows: 2264570 Data size: 635205815 Basic stats: COMPLETE Column stats: NONE\n                                      Map Join Operator\n                                        condition map:\n                                             Inner Join 0 to 1\n                                             Inner Join 0 to 2\n                                        keys:\n                                          0 _col2 (type: int)\n                                          1 i_item_sk (type: int)\n                                          2 _col0 (type: int)\n                                        outputColumnNames: _col10, _col11, _col18, _col107, _col138, _col168, _col188, _col197, _col209, _col259, _col260, _col263, _col266, _col275, _col276, _col279, _col282, _col301, _col306, _col318, _col322\n                                        input vertices:\n                                          1 Map 43\n                                          2 Reducer 24\n                                        Statistics: Num rows: 4982054 Data size: 1397452823 Basic stats: COMPLETE Column stats: NONE\n                                        Filter Operator\n                                          predicate: ((((_col197 <> _col209) and (_col318) IN ('maroon', 'burnished', 'dim', 'steel', 'navajo', 'chocolate')) and _col306 BETWEEN 35 AND 45) and _col306 BETWEEN 36 AND 50) (type: boolean)\n                                          Statistics: Num rows: 622756 Data size: 174681392 Basic stats: COMPLETE Column stats: NONE\n                                          Select Operator\n                                            expressions: _col322 (type: string), _col301 (type: int), _col168 (type: string), _col188 (type: string), _col259 (type: string), _col260 (type: string), _col263 (type: string), _col266 (type: string), _col275 (type: string), _col276 (type: string), _col279 (type: string), _col282 (type: string), 2001 (type: int), _col107 (type: int), _col138 (type: int), _col10 (type: decimal(7,2)), _col11 (type: decimal(7,2)), _col18 (type: decimal(7,2))\n                                            outputColumnNames: _col322, _col301, _col168, _col188, _col259, _col260, _col263, _col266, _col275, _col276, _col279, _col282, _col76, _col107, _col138, _col10, _col11, _col18\n                                            Statistics: Num rows: 622756 Data size: 174681392 Basic stats: COMPLETE Column stats: NONE\n                                            Group By Operator\n                                              aggregations: count(), sum(_col10), sum(_col11), sum(_col18)\n                                              keys: _col322 (type: string), _col301 (type: int), _col168 (type: string), _col188 (type: string), _col259 (type: string), _col260 (type: string), _col263 (type: string), _col266 (type: string), _col275 (type: string), _col276 (type: string), _col279 (type: string), _col282 (type: string), _col76 (type: int), _col107 (type: int), _col138 (type: int)\n                                              mode: hash\n                                              outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18\n                                              Statistics: Num rows: 622756 Data size: 174681392 Basic stats: COMPLETE Column stats: NONE\n                                              Reduce Output Operator\n                                                key expressions: _col0 (type: string), _col1 (type: int), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: int), _col13 (type: int), _col14 (type: int)\n                                                sort order: +++++++++++++++\n                                                Map-reduce partition columns: _col0 (type: string), _col1 (type: int), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: int), _col13 (type: int), _col14 (type: int)\n                                                Statistics: Num rows: 622756 Data size: 174681392 Basic stats: COMPLETE Column stats: NONE\n                                                value expressions: _col15 (type: bigint), _col16 (type: decimal(17,2)), _col17 (type: decimal(17,2)), _col18 (type: decimal(17,2))\n            Execution mode: vectorized\n        Map 35 \n            Map Operator Tree:\n                TableScan\n                  alias: cd2\n                  Statistics: Num rows: 1920800 Data size: 538778449 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: cd_demo_sk is not null (type: boolean)\n                    Statistics: Num rows: 960400 Data size: 269389224 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: cd_demo_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: cd_demo_sk (type: int)\n                      Statistics: Num rows: 960400 Data size: 269389224 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: cd_marital_status (type: string)\n            Execution mode: vectorized\n        Map 36 \n            Map Operator Tree:\n                TableScan\n                  alias: promotion\n                  Statistics: Num rows: 300 Data size: 385624 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: p_promo_sk is not null (type: boolean)\n                    Statistics: Num rows: 150 Data size: 192812 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: p_promo_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: p_promo_sk (type: int)\n                      Statistics: Num rows: 150 Data size: 192812 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 37 \n            Map Operator Tree:\n                TableScan\n                  alias: hd1\n                  Statistics: Num rows: 7200 Data size: 770400 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (hd_demo_sk is not null and hd_income_band_sk is not null) (type: boolean)\n                    Statistics: Num rows: 1800 Data size: 192600 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: hd_demo_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: hd_demo_sk (type: int)\n                      Statistics: Num rows: 1800 Data size: 192600 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: hd_income_band_sk (type: int)\n            Execution mode: vectorized\n        Map 38 \n            Map Operator Tree:\n                TableScan\n                  alias: hd2\n                  Statistics: Num rows: 7200 Data size: 770400 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (hd_demo_sk is not null and hd_income_band_sk is not null) (type: boolean)\n                    Statistics: Num rows: 1800 Data size: 192600 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: hd_demo_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: hd_demo_sk (type: int)\n                      Statistics: Num rows: 1800 Data size: 192600 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: hd_income_band_sk (type: int)\n            Execution mode: vectorized\n        Map 39 \n            Map Operator Tree:\n                TableScan\n                  alias: ad1\n                  Statistics: Num rows: 50000 Data size: 55975728 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ca_address_sk is not null (type: boolean)\n                    Statistics: Num rows: 25000 Data size: 27987864 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: ca_address_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: ca_address_sk (type: int)\n                      Statistics: Num rows: 25000 Data size: 27987864 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: ca_street_number (type: string), ca_street_name (type: string), ca_city (type: string), ca_zip (type: string)\n            Execution mode: vectorized\n        Map 4 \n            Map Operator Tree:\n                TableScan\n                  alias: store_sales\n                  Statistics: Num rows: 2750370 Data size: 3717170032 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (((((((ss_item_sk is not null and ss_ticket_number is not null) and ss_customer_sk is not null) and ss_sold_date_sk is not null) and ss_cdemo_sk is not null) and ss_promo_sk is not null) and ss_hdemo_sk is not null) and ss_addr_sk is not null) (type: boolean)\n                    Statistics: Num rows: 10744 Data size: 14520691 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: ss_item_sk (type: int), ss_ticket_number (type: int)\n                      sort order: ++\n                      Map-reduce partition columns: ss_item_sk (type: int), ss_ticket_number (type: int)\n                      Statistics: Num rows: 10744 Data size: 14520691 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: ss_sold_date_sk (type: int), ss_customer_sk (type: int), ss_cdemo_sk (type: int), ss_hdemo_sk (type: int), ss_addr_sk (type: int), ss_promo_sk (type: int), ss_wholesale_cost (type: decimal(7,2)), ss_list_price (type: decimal(7,2)), ss_coupon_amt (type: decimal(7,2)), ss_store_sk (type: int)\n            Execution mode: vectorized\n        Map 40 \n            Map Operator Tree:\n                TableScan\n                  alias: ad2\n                  Statistics: Num rows: 50000 Data size: 55975728 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ca_address_sk is not null (type: boolean)\n                    Statistics: Num rows: 25000 Data size: 27987864 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: ca_address_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: ca_address_sk (type: int)\n                      Statistics: Num rows: 25000 Data size: 27987864 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: ca_street_number (type: string), ca_street_name (type: string), ca_city (type: string), ca_zip (type: string)\n            Execution mode: vectorized\n        Map 41 \n            Map Operator Tree:\n                TableScan\n                  alias: ib1\n                  Statistics: Num rows: 20 Data size: 240 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ib_income_band_sk is not null (type: boolean)\n                    Statistics: Num rows: 10 Data size: 120 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: ib_income_band_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: ib_income_band_sk (type: int)\n                      Statistics: Num rows: 10 Data size: 120 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 42 \n            Map Operator Tree:\n                TableScan\n                  alias: ib2\n                  Statistics: Num rows: 20 Data size: 240 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ib_income_band_sk is not null (type: boolean)\n                    Statistics: Num rows: 10 Data size: 120 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: ib_income_band_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: ib_income_band_sk (type: int)\n                      Statistics: Num rows: 10 Data size: 120 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 43 \n            Map Operator Tree:\n                TableScan\n                  alias: item\n                  Statistics: Num rows: 18000 Data size: 29671008 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (((i_item_sk is not null and (i_color) IN ('maroon', 'burnished', 'dim', 'steel', 'navajo', 'chocolate')) and i_current_price BETWEEN 35 AND 45) and i_current_price BETWEEN 36 AND 50) (type: boolean)\n                    Statistics: Num rows: 1125 Data size: 1854438 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: i_item_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: i_item_sk (type: int)\n                      Statistics: Num rows: 1125 Data size: 1854438 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: i_current_price (type: decimal(7,2)), i_color (type: string), i_product_name (type: string)\n            Execution mode: vectorized\n        Map 5 \n            Map Operator Tree:\n                TableScan\n                  alias: store_returns\n                  Statistics: Num rows: 287514 Data size: 291997400 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (sr_item_sk is not null and sr_ticket_number is not null) (type: boolean)\n                    Statistics: Num rows: 71879 Data size: 72999857 Basic stats: COMPLETE Column stats: NONE\n                    Map Join Operator\n                      condition map:\n                           Inner Join 0 to 1\n                      keys:\n                        0 ss_item_sk (type: int), ss_ticket_number (type: int)\n                        1 sr_item_sk (type: int), sr_ticket_number (type: int)\n                      outputColumnNames: _col0, _col2, _col3, _col4, _col5, _col6, _col7, _col10, _col11, _col18, _col22\n                      input vertices:\n                        0 Map 4\n                      Statistics: Num rows: 79066 Data size: 80299844 Basic stats: COMPLETE Column stats: NONE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col3 (type: int)\n                          1 c_customer_sk (type: int)\n                        outputColumnNames: _col0, _col2, _col4, _col5, _col6, _col7, _col10, _col11, _col18, _col22, _col51, _col52, _col53, _col54, _col55\n                        input vertices:\n                          1 Map 6\n                        Statistics: Num rows: 86972 Data size: 88329830 Basic stats: COMPLETE Column stats: NONE\n                        Map Join Operator\n                          condition map:\n                               Inner Join 0 to 1\n                          keys:\n                            0 _col0 (type: int)\n                            1 d_date_sk (type: int)\n                          outputColumnNames: _col2, _col4, _col5, _col6, _col7, _col10, _col11, _col18, _col22, _col51, _col52, _col53, _col54, _col55\n                          input vertices:\n                            1 Map 7\n                          Statistics: Num rows: 95669 Data size: 97162815 Basic stats: COMPLETE Column stats: NONE\n                          Map Join Operator\n                            condition map:\n                                 Inner Join 0 to 1\n                            keys:\n                              0 _col55 (type: int)\n                              1 d_date_sk (type: int)\n                            outputColumnNames: _col2, _col4, _col5, _col6, _col7, _col10, _col11, _col18, _col22, _col51, _col52, _col53, _col54, _col107\n                            input vertices:\n                              1 Map 8\n                            Statistics: Num rows: 105235 Data size: 106879098 Basic stats: COMPLETE Column stats: NONE\n                            Map Join Operator\n                              condition map:\n                                   Inner Join 0 to 1\n                              keys:\n                                0 _col54 (type: int)\n                                1 d_date_sk (type: int)\n                              outputColumnNames: _col2, _col4, _col5, _col6, _col7, _col10, _col11, _col18, _col22, _col51, _col52, _col53, _col107, _col138\n                              input vertices:\n                                1 Map 9\n                              Statistics: Num rows: 115758 Data size: 117567010 Basic stats: COMPLETE Column stats: NONE\n                              Map Join Operator\n                                condition map:\n                                     Inner Join 0 to 1\n                                keys:\n                                  0 _col22 (type: int)\n                                  1 s_store_sk (type: int)\n                                outputColumnNames: _col2, _col4, _col5, _col6, _col7, _col10, _col11, _col18, _col51, _col52, _col53, _col107, _col138, _col168, _col188\n                                input vertices:\n                                  1 Map 10\n                                Statistics: Num rows: 127333 Data size: 129323713 Basic stats: COMPLETE Column stats: NONE\n                                Reduce Output Operator\n                                  key expressions: _col4 (type: int)\n                                  sort order: +\n                                  Map-reduce partition columns: _col4 (type: int)\n                                  Statistics: Num rows: 127333 Data size: 129323713 Basic stats: COMPLETE Column stats: NONE\n                                  value expressions: _col2 (type: int), _col5 (type: int), _col6 (type: int), _col7 (type: int), _col10 (type: decimal(7,2)), _col11 (type: decimal(7,2)), _col18 (type: decimal(7,2)), _col51 (type: int), _col52 (type: int), _col53 (type: int), _col107 (type: int), _col138 (type: int), _col168 (type: string), _col188 (type: string)\n            Execution mode: vectorized\n        Map 6 \n            Map Operator Tree:\n                TableScan\n                  alias: customer\n                  Statistics: Num rows: 100000 Data size: 85628164 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (((((c_customer_sk is not null and c_first_sales_date_sk is not null) and c_first_shipto_date_sk is not null) and c_current_cdemo_sk is not null) and c_current_hdemo_sk is not null) and c_current_addr_sk is not null) (type: boolean)\n                    Statistics: Num rows: 1563 Data size: 1338368 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: c_customer_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: c_customer_sk (type: int)\n                      Statistics: Num rows: 1563 Data size: 1338368 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: c_current_cdemo_sk (type: int), c_current_hdemo_sk (type: int), c_current_addr_sk (type: int), c_first_shipto_date_sk (type: int), c_first_sales_date_sk (type: int)\n            Execution mode: vectorized\n        Map 7 \n            Map Operator Tree:\n                TableScan\n                  alias: d1\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (d_date_sk is not null and (d_year = 2000)) (type: boolean)\n                    Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: d_date_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: d_date_sk (type: int)\n                      Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 8 \n            Map Operator Tree:\n                TableScan\n                  alias: d2\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: d_date_sk is not null (type: boolean)\n                    Statistics: Num rows: 36525 Data size: 40871475 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: d_date_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: d_date_sk (type: int)\n                      Statistics: Num rows: 36525 Data size: 40871475 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: d_year (type: int)\n            Execution mode: vectorized\n        Map 9 \n            Map Operator Tree:\n                TableScan\n                  alias: d3\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: d_date_sk is not null (type: boolean)\n                    Statistics: Num rows: 36525 Data size: 40871475 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: d_date_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: d_date_sk (type: int)\n                      Statistics: Num rows: 36525 Data size: 40871475 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: d_year (type: int)\n            Execution mode: vectorized\n        Reducer 12 \n            Reduce Operator Tree:\n              Group By Operator\n                aggregations: count(VALUE._col0), sum(VALUE._col1), sum(VALUE._col2), sum(VALUE._col3)\n                keys: KEY._col0 (type: string), KEY._col1 (type: int), KEY._col2 (type: string), KEY._col3 (type: string), KEY._col4 (type: string), KEY._col5 (type: string), KEY._col6 (type: string), KEY._col7 (type: string), KEY._col8 (type: string), KEY._col9 (type: string), KEY._col10 (type: string), KEY._col11 (type: string), KEY._col12 (type: int), KEY._col13 (type: int), KEY._col14 (type: int)\n                mode: mergepartial\n                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18\n                Statistics: Num rows: 311378 Data size: 87340696 Basic stats: COMPLETE Column stats: NONE\n                Select Operator\n                  expressions: _col0 (type: string), _col1 (type: int), _col10 (type: string), _col11 (type: string), _col12 (type: int), _col15 (type: bigint), _col16 (type: decimal(17,2)), _col17 (type: decimal(17,2)), _col18 (type: decimal(17,2)), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string)\n                  outputColumnNames: _col0, _col1, _col10, _col11, _col12, _col15, _col16, _col17, _col18, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9\n                  Statistics: Num rows: 311378 Data size: 87340696 Basic stats: COMPLETE Column stats: NONE\n                  Map Join Operator\n                    condition map:\n                         Inner Join 0 to 1\n                    keys:\n                      0 _col1 (type: int), _col2 (type: string), _col3 (type: string)\n                      1 _col1 (type: int), _col2 (type: string), _col3 (type: string)\n                    outputColumnNames: _col0, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col15, _col16, _col17, _col18, _col21, _col22, _col31, _col34, _col35, _col36, _col37\n                    input vertices:\n                      1 Reducer 34\n                    Statistics: Num rows: 342515 Data size: 96074767 Basic stats: COMPLETE Column stats: NONE\n                    Filter Operator\n                      predicate: (((((_col12 = 2000) and (_col31 = 2001)) and (_col34 <= _col15)) and (_col2 = _col21)) and (_col3 = _col22)) (type: boolean)\n                      Statistics: Num rows: 7135 Data size: 2001353 Basic stats: COMPLETE Column stats: NONE\n                      Select Operator\n                        expressions: _col0 (type: string), _col2 (type: string), _col11 (type: string), _col15 (type: bigint), _col16 (type: decimal(17,2)), _col17 (type: decimal(17,2)), _col18 (type: decimal(17,2)), _col35 (type: decimal(17,2)), _col36 (type: decimal(17,2)), _col37 (type: decimal(17,2)), _col3 (type: string), _col34 (type: bigint), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string)\n                        outputColumnNames: _col0, _col1, _col10, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col2, _col20, _col3, _col4, _col5, _col6, _col7, _col8, _col9\n                        Statistics: Num rows: 7135 Data size: 2001353 Basic stats: COMPLETE Column stats: NONE\n                        Reduce Output Operator\n                          key expressions: _col0 (type: string), _col1 (type: string), _col20 (type: bigint)\n                          sort order: +++\n                          Statistics: Num rows: 7135 Data size: 2001353 Basic stats: COMPLETE Column stats: NONE\n                          value expressions: _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col12 (type: bigint), _col13 (type: decimal(17,2)), _col14 (type: decimal(17,2)), _col15 (type: decimal(17,2)), _col16 (type: decimal(17,2)), _col17 (type: decimal(17,2)), _col18 (type: decimal(17,2))\n            Execution mode: vectorized\n        Reducer 13 \n            Reduce Operator Tree:\n              Select Operator\n                expressions: KEY.reducesinkkey0 (type: string), KEY.reducesinkkey1 (type: string), VALUE._col0 (type: string), VALUE._col1 (type: string), VALUE._col2 (type: string), VALUE._col3 (type: string), VALUE._col4 (type: string), VALUE._col5 (type: string), VALUE._col6 (type: string), VALUE._col7 (type: string), VALUE._col8 (type: string), 2000 (type: int), VALUE._col10 (type: bigint), VALUE._col11 (type: decimal(17,2)), VALUE._col12 (type: decimal(17,2)), VALUE._col13 (type: decimal(17,2)), VALUE._col14 (type: decimal(17,2)), VALUE._col15 (type: decimal(17,2)), VALUE._col16 (type: decimal(17,2)), 2001 (type: int), KEY.reducesinkkey2 (type: bigint)\n                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20\n                Statistics: Num rows: 7135 Data size: 2001353 Basic stats: COMPLETE Column stats: NONE\n                File Output Operator\n                  compressed: false\n                  Statistics: Num rows: 7135 Data size: 2001353 Basic stats: COMPLETE Column stats: NONE\n                  table:\n                      input format: org.apache.hadoop.mapred.TextInputFormat\n                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\n                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe\n            Execution mode: vectorized\n        Reducer 2 \n            Reduce Operator Tree:\n              Group By Operator\n                aggregations: sum(VALUE._col0), sum(VALUE._col1)\n                keys: KEY._col0 (type: int)\n                mode: mergepartial\n                outputColumnNames: _col0, _col1, _col2\n                Statistics: Num rows: 198212 Data size: 345884161 Basic stats: COMPLETE Column stats: NONE\n                Filter Operator\n                  predicate: (_col1 > (2 * _col2)) (type: boolean)\n                  Statistics: Num rows: 66070 Data size: 115293556 Basic stats: COMPLETE Column stats: NONE\n                  Select Operator\n                    expressions: _col0 (type: int)\n                    outputColumnNames: _col0\n                    Statistics: Num rows: 66070 Data size: 115293556 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: _col0 (type: int)\n                      sort order: +\n                      Map-reduce partition columns: _col0 (type: int)\n                      Statistics: Num rows: 66070 Data size: 115293556 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Reducer 24 \n            Reduce Operator Tree:\n              Group By Operator\n                aggregations: sum(VALUE._col0), sum(VALUE._col1)\n                keys: KEY._col0 (type: int)\n                mode: mergepartial\n                outputColumnNames: _col0, _col1, _col2\n                Statistics: Num rows: 198212 Data size: 345884161 Basic stats: COMPLETE Column stats: NONE\n                Filter Operator\n                  predicate: (_col1 > (2 * _col2)) (type: boolean)\n                  Statistics: Num rows: 66070 Data size: 115293556 Basic stats: COMPLETE Column stats: NONE\n                  Select Operator\n                    expressions: _col0 (type: int)\n                    outputColumnNames: _col0\n                    Statistics: Num rows: 66070 Data size: 115293556 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: _col0 (type: int)\n                      sort order: +\n                      Map-reduce partition columns: _col0 (type: int)\n                      Statistics: Num rows: 66070 Data size: 115293556 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Reducer 34 \n            Reduce Operator Tree:\n              Group By Operator\n                aggregations: count(VALUE._col0), sum(VALUE._col1), sum(VALUE._col2), sum(VALUE._col3)\n                keys: KEY._col0 (type: string), KEY._col1 (type: int), KEY._col2 (type: string), KEY._col3 (type: string), KEY._col4 (type: string), KEY._col5 (type: string), KEY._col6 (type: string), KEY._col7 (type: string), KEY._col8 (type: string), KEY._col9 (type: string), KEY._col10 (type: string), KEY._col11 (type: string), KEY._col12 (type: int), KEY._col13 (type: int), KEY._col14 (type: int)\n                mode: mergepartial\n                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18\n                Statistics: Num rows: 311378 Data size: 87340696 Basic stats: COMPLETE Column stats: NONE\n                Select Operator\n                  expressions: _col1 (type: int), _col12 (type: int), _col15 (type: bigint), _col16 (type: decimal(17,2)), _col17 (type: decimal(17,2)), _col18 (type: decimal(17,2)), _col2 (type: string), _col3 (type: string)\n                  outputColumnNames: _col1, _col12, _col15, _col16, _col17, _col18, _col2, _col3\n                  Statistics: Num rows: 311378 Data size: 87340696 Basic stats: COMPLETE Column stats: NONE\n                  Reduce Output Operator\n                    key expressions: _col1 (type: int), _col2 (type: string), _col3 (type: string)\n                    sort order: +++\n                    Map-reduce partition columns: _col1 (type: int), _col2 (type: string), _col3 (type: string)\n                    Statistics: Num rows: 311378 Data size: 87340696 Basic stats: COMPLETE Column stats: NONE\n                    value expressions: _col12 (type: int), _col15 (type: bigint), _col16 (type: decimal(17,2)), _col17 (type: decimal(17,2)), _col18 (type: decimal(17,2))\n            Execution mode: vectorized\n\n  Stage: Stage-0\n    Fetch Operator\n      limit: -1\n      Processor Tree:\n        ListSink\n{noformat}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"created":"2015-05-09T00:46:04.755+0000","updated":"2015-05-09T00:46:04.755+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12827145/comment/14536048","id":"14536048","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"body":"Will verify against latest. \nDid anything in the code path change in recent patches ? \n\nThanks \nMostafa\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-05-09T00:52:41.109+0000","updated":"2015-05-09T00:52:41.109+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12827145/comment/14536102","id":"14536102","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"body":"HIVE-9743 changed the non-native VectorMapJoinOperator.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"created":"2015-05-09T01:43:14.792+0000","updated":"2015-05-09T01:43:14.792+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12827145/comment/14536222","id":"14536222","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"body":"[~mmccline]\nStill repros on latest.\nFirst attempt to simplify the query failed, will keep trying.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-05-09T05:18:53.057+0000","updated":"2015-05-09T05:18:53.057+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12827145/comment/14536223","id":"14536223","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"body":"I think the hint from the exception is that we are mixing a string with a double column.\n\n[~mmccline]\nCan you provide a patch which prints out the column IDs or such so that we can narrow this down?\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-05-09T05:21:25.527+0000","updated":"2015-05-09T05:21:25.527+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12827145/comment/14537122","id":"14537122","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiveqa","name":"hiveqa","key":"hiveqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hiveqa&avatarId=17060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hiveqa&avatarId=17060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hiveqa&avatarId=17060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hiveqa&avatarId=17060"},"displayName":"Hive QA","active":true,"timeZone":"America/Chicago"},"body":"\n\n{color:red}Overall{color}: -1 at least one tests failed\n\nHere are the results of testing the latest attachment:\nhttps://issues.apache.org/jira/secure/attachment/12731779/HIVE-10609.01.patch\n\n{color:red}ERROR:{color} -1 due to 5 failed/errored test(s), 8919 tests executed\n*Failed tests:*\n{noformat}\nTestHiveAuthFactory - did not produce a TEST-*.xml file\norg.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_vector_left_outer_join2\norg.apache.hadoop.hive.cli.TestEncryptedHDFSCliDriver.testCliDriver_encryption_insert_partition_static\norg.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_vector_left_outer_join2\norg.apache.hive.jdbc.TestSSL.testSSLFetchHttp\n{noformat}\n\nTest results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/3839/testReport\nConsole output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/3839/console\nTest logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-3839/\n\nMessages:\n{noformat}\nExecuting org.apache.hive.ptest.execution.PrepPhase\nExecuting org.apache.hive.ptest.execution.ExecutionPhase\nExecuting org.apache.hive.ptest.execution.ReportingPhase\nTests exited with: TestsFailedException: 5 tests failed\n{noformat}\n\nThis message is automatically generated.\n\nATTACHMENT ID: 12731779 - PreCommit-HIVE-TRUNK-Build","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiveqa","name":"hiveqa","key":"hiveqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hiveqa&avatarId=17060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hiveqa&avatarId=17060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hiveqa&avatarId=17060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hiveqa&avatarId=17060"},"displayName":"Hive QA","active":true,"timeZone":"America/Chicago"},"created":"2015-05-10T10:47:03.198+0000","updated":"2015-05-10T10:47:03.198+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12827145/comment/14537338","id":"14537338","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"body":"[~mmccline]\nI tried the patch on TPC-DS 200GB and query runs fine and returns correct results.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-05-10T20:21:50.538+0000","updated":"2015-05-10T20:21:50.538+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12827145/comment/14537484","id":"14537484","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"body":"[~mmokhtar] Thanks for verifying it!\n\nFix left join filtered code.\n\n[Note: the Tez results for vector_left_outer_join2.q are wrong.  This is a known issue solved by pending HIVE-10565]","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"created":"2015-05-11T01:32:00.803+0000","updated":"2015-05-11T01:32:00.803+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12827145/comment/14537518","id":"14537518","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiveqa","name":"hiveqa","key":"hiveqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hiveqa&avatarId=17060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hiveqa&avatarId=17060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hiveqa&avatarId=17060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hiveqa&avatarId=17060"},"displayName":"Hive QA","active":true,"timeZone":"America/Chicago"},"body":"\n\n{color:red}Overall{color}: -1 at least one tests failed\n\nHere are the results of testing the latest attachment:\nhttps://issues.apache.org/jira/secure/attachment/12731842/HIVE-10609.02.patch\n\n{color:red}ERROR:{color} -1 due to 2 failed/errored test(s), 8921 tests executed\n*Failed tests:*\n{noformat}\norg.apache.hadoop.hive.cli.TestEncryptedHDFSCliDriver.testCliDriver_encryption_insert_partition_static\norg.apache.hive.jdbc.TestMultiSessionsHS2WithLocalClusterSpark.testSparkQuery\n{noformat}\n\nTest results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/3843/testReport\nConsole output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/3843/console\nTest logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-3843/\n\nMessages:\n{noformat}\nExecuting org.apache.hive.ptest.execution.PrepPhase\nExecuting org.apache.hive.ptest.execution.ExecutionPhase\nExecuting org.apache.hive.ptest.execution.ReportingPhase\nTests exited with: TestsFailedException: 2 tests failed\n{noformat}\n\nThis message is automatically generated.\n\nATTACHMENT ID: 12731842 - PreCommit-HIVE-TRUNK-Build","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiveqa","name":"hiveqa","key":"hiveqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hiveqa&avatarId=17060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hiveqa&avatarId=17060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hiveqa&avatarId=17060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hiveqa&avatarId=17060"},"displayName":"Hive QA","active":true,"timeZone":"America/Chicago"},"created":"2015-05-11T03:26:49.449+0000","updated":"2015-05-11T03:26:49.449+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12827145/comment/14537532","id":"14537532","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"body":"Test failures are not related to the changes here.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"created":"2015-05-11T03:52:43.972+0000","updated":"2015-05-11T03:52:43.972+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12827145/comment/14538694","id":"14538694","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vikram.dixit","name":"vikram.dixit","key":"vikram.dixit","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vikram Dixit K","active":true,"timeZone":"America/Los_Angeles"},"body":"+1 LGTM.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vikram.dixit","name":"vikram.dixit","key":"vikram.dixit","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vikram Dixit K","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-05-11T21:45:15.213+0000","updated":"2015-05-11T21:45:15.213+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12827145/comment/14538756","id":"14538756","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vikram.dixit","name":"vikram.dixit","key":"vikram.dixit","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vikram Dixit K","active":true,"timeZone":"America/Los_Angeles"},"body":"[~sushanth] can this still go in 1.2 or has that boat sailed?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vikram.dixit","name":"vikram.dixit","key":"vikram.dixit","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vikram Dixit K","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-05-11T22:20:52.487+0000","updated":"2015-05-11T22:20:52.487+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12827145/comment/14538829","id":"14538829","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vikram.dixit","name":"vikram.dixit","key":"vikram.dixit","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vikram Dixit K","active":true,"timeZone":"America/Los_Angeles"},"body":"Committed to both 1.2 and master. Thanks Matt!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vikram.dixit","name":"vikram.dixit","key":"vikram.dixit","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vikram Dixit K","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-05-11T23:00:55.251+0000","updated":"2015-05-11T23:00:55.251+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12827145/comment/14548946","id":"14548946","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sushanth","name":"sushanth","key":"sushanth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=sushanth&avatarId=26812","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sushanth&avatarId=26812","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sushanth&avatarId=26812","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sushanth&avatarId=26812"},"displayName":"Sushanth Sowmyan","active":true,"timeZone":"America/Los_Angeles"},"body":"This issue has been fixed and released as part of the 1.2.0 release. If you find an issue which seems to be related to this one, please create a new jira and link this one with new jira.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sushanth","name":"sushanth","key":"sushanth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=sushanth&avatarId=26812","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sushanth&avatarId=26812","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sushanth&avatarId=26812","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sushanth&avatarId=26812"},"displayName":"Sushanth Sowmyan","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-05-18T19:53:59.736+0000","updated":"2015-05-18T19:53:59.736+0000"}],"maxResults":19,"total":19,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-10609/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i2ea73:"}}