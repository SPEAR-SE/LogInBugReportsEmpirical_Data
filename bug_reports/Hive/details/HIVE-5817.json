{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12679126","self":"https://issues.apache.org/jira/rest/api/2/issue/12679126","key":"HIVE-5817","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310843","id":"12310843","key":"HIVE","name":"Hive","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310843&avatarId=11935","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310843&avatarId=11935","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310843&avatarId=11935","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310843&avatarId=11935"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12324986","id":"12324986","description":"released","name":"0.13.0","archived":false,"released":true,"releaseDate":"2014-04-21"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2013-11-20T23:04:58.708+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Mon Mar 24 17:54:44 UTC 2014","customfield_12310420":"358491","customfield_12312320":null,"customfield_12310222":"10002_*:*_1_*:*_88229826_*|*_1_*:*_1_*:*_1099102872_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2013-11-27T16:50:38.314+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-5817/watchers","watchCount":4,"isWatching":false},"created":"2013-11-13T23:01:45.654+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.svg","name":"Critical","id":"2"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"5.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12324986","id":"12324986","description":"released","name":"0.13.0","archived":false,"released":true,"releaseDate":"2014-04-21"}],"issuelinks":[{"id":"12382372","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12382372","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12692634","key":"HIVE-6349","self":"https://issues.apache.org/jira/rest/api/2/issue/12692634","fields":{"summary":"Column name map is broken ","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/7","id":"7","description":"The sub-task of the issue","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype","name":"Sub-task","subtask":true,"avatarId":21146}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2014-03-24T17:54:44.671+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12321300","id":"12321300","name":"Vectorization","description":"Vectorized query execution"}],"timeoriginalestimate":null,"description":"Columns coming from different operators may have the same internal names (\"_colNN\"). There exists a query in the form {{select b.cb, a.ca from a JOIN b ON ... JOIN x ON ...;}}  (distilled from a more complex query), which runs ok w/o vectorization. With vectorization, it will run ok for most ca, but for some ca it will fail (or can probably return incorrect results). That is because when building column-to-VRG-index map in VectorizationContext, internal column name for ca that the first map join operator adds to the mapping may be the same as internal name for cb that the 2nd one tries to add. 2nd VMJ doesn't add it (see code in ctor), and when it's time for it to output stuff, it retrieves wrong index from the map by name, and then wrong vector from VRG.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12614191","id":"12614191","filename":"HIVE-5817.00-broken.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-11-16T02:40:54.314+0000","size":61514,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12614191/HIVE-5817.00-broken.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12615679","id":"12615679","filename":"HIVE-5817.4.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"created":"2013-11-25T21:49:27.777+0000","size":13824,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12615679/HIVE-5817.4.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12615830","id":"12615830","filename":"HIVE-5817.5.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"created":"2013-11-26T13:12:16.280+0000","size":16997,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12615830/HIVE-5817.5.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12615853","id":"12615853","filename":"HIVE-5817.6.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-11-26T16:19:26.911+0000","size":34369,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12615853/HIVE-5817.6.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12614192","id":"12614192","filename":"HIVE-5817-uniquecols.broken.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-11-16T02:40:54.319+0000","size":64702,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12614192/HIVE-5817-uniquecols.broken.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"358781","customfield_12312823":null,"summary":"column name to index mapping in VectorizationContext is broken","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13823192","id":"13823192","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"body":"tried to make all columns unique within a query, but too many things in Hive depend upon _colN names either explicitly by getting number back out of them, or implicitly (such as reducer code when generating OI for distincts). May upload patch somewhere, let me try to maintain lineage in vectorization instead.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-11-15T01:34:48.075+0000","updated":"2013-11-15T01:34:48.075+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13823270","id":"13823270","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"body":"I will be gone for a week shortly, so if someone decides to take over... I examined two options:\n1) Making the assumption true (all column names unique).\n2) Adding lineage information to column map.\nI was previously unfamiliar with either part of the codebase so I may be missing some important part, feel free to comment or take over.\n\nFor (1), I have a partial patch. Unfortunately, many places in hive explicitly or implicitly make assumptions about column names generated by semanticanalyzer or other operators. I've fixed a few places, but those that remain were pretty tough to figure out, patch needs more work. Also, patch will be quite \"epic\" in its impact relative to the problem, so it's the less-preferred approach.\nFor (2), adding lineage is easy (output column names are indeed unique within one operator, operator ID can be used and it can be retrieved by tag during the operator, or maps could be scoped to each operator, so an operator would be initialized with \"input maps\" coming from \"output maps\" from its parents, and in turn generate the \"output map\"), but the problem is on retrieve side, because anyone retrieving the column would have to know the lineage of what he's retrieving (from which parent it's coming). \nI've started studying the code of operators to see what kind of assumptions can be made in all the places this map is accessed, esp. e.g. getVectorExpression recursive call thru getCustomUDFExpression, when expressions for UDF parameters are retrieved. It's not quite clear how to get lineage for these parameters and whether it's guaranteed to be from the same parent in any given processOp call. But this seems to be a promising approach.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-11-15T04:33:42.780+0000","updated":"2013-11-15T04:33:42.780+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13824345","id":"13824345","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"body":"Here are 2 patches. Unique cols is abandoned patch with solution 1. \nthe main one is for (2), I was able to compile queries properly but running fails. It's probably something related to passing of serialized stuff thru scratch map, but I cannot get MR logging to work in tests so it's hard to tell.\n\nIf someone wants to take over either patch, feel free... I will get back to it the monday after next earliest.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-11-16T02:40:54.324+0000","updated":"2013-11-16T02:40:54.324+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13824346","id":"13824346","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"body":"General pattern - \"TODO#\" marks where I was going to fix something, double check something, or the debug logging (e,g, TODO# adding blah) that needs to be removed","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-11-16T02:41:43.525+0000","updated":"2013-11-16T02:41:43.525+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13828257","id":"13828257","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ehans","name":"ehans","key":"ehans","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=ehans&avatarId=16468","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=ehans&avatarId=16468","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=ehans&avatarId=16468","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=ehans&avatarId=16468"},"displayName":"Eric Hanson","active":true,"timeZone":"America/Los_Angeles"},"body":"Uploaded HIVE-5817.00-broken.patch here to make it easier to review the differences:\n\nhttps://reviews.apache.org/r/15740/","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ehans","name":"ehans","key":"ehans","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=ehans&avatarId=16468","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=ehans&avatarId=16468","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=ehans&avatarId=16468","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=ehans&avatarId=16468"},"displayName":"Eric Hanson","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-11-20T23:04:58.708+0000","updated":"2013-11-20T23:04:58.708+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13828397","id":"13828397","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ehans","name":"ehans","key":"ehans","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=ehans&avatarId=16468","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=ehans&avatarId=16468","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=ehans&avatarId=16468","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=ehans&avatarId=16468"},"displayName":"Eric Hanson","active":true,"timeZone":"America/Los_Angeles"},"body":"I was able to create a smaller repro as follows.\n\nFirst, create the table alltypesorc (this is a standard table that is in the Hive source code as test data).\n\nset hive.vectorized.execution.enabled = false;\n\ncreate table store(s_store_sk int, s_city string)\nstored as orc;\n\ninsert overwrite table store\nselect cint, cstring1\nfrom alltypesorc\nwhere cint not in (\n-3728, -563, 762, 6981, 253665376, 528534767, 626923679);\n\ncreate table store_sales(ss_store_sk int, ss_hdemo_sk int, ss_net_profit double)\nstored as orc;\n\ninsert overwrite table store_sales\nselect cint, cint, cdouble\nfrom alltypesorc\nwhere cint not in (\n-3728, -563, 762, 6981, 253665376, 528534767, 626923679);\n\ncreate table household_demographics(hd_demo_sk int)\nstored as orc;\n\ninsert overwrite table household_demographics\nselect cint \nfrom alltypesorc\nwhere cint not in (\n-3728, -563, 762, 6981, 253665376, 528534767, 626923679);\n\n-- the NOT IN condition makes sure all the cint values are unique\n\n-- finally, run this:\nset hive.vectorized.execution.enabled = true;\n\nselect store.s_city, ss_net_profit\n    from store_sales\n     JOIN store ON store_sales.ss_store_sk = store.s_store_sk  \n     JOIN household_demographics ON store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk\n    limit 100;\n\nExpected result: 100 rows of output are produced\nActual result:\n...\n2013-11-20 17:57:37,487 Stage-4 map = 0%,  reduce = 0%\n2013-11-20 17:58:04,585 Stage-4 map = 100%,  reduce = 100%\nEnded Job = job_201311191600_0022 with errors\nError during job, obtaining debugging information...\nJob Tracking URL: http://localhost:50030/jobdetails.jsp?jobid=job_201311191600_0022\nExamining task ID: task_201311191600_0022_m_000002 (and more) from job job_201311191600_0022\n\nTask with the most failures(4):\n-----\nTask ID:\n  task_201311191600_0022_m_000000\n\nURL:\n  http://localhost:50030/taskdetails.jsp?jobid=job_201311191600_0022&tipid=task_201311191600_0022_m_000000\n-----\nDiagnostic Messages for this Task:\njava.lang.RuntimeException: org.apache.hadoop.hive.ql.metadata.HiveException: Hive Runtime Error while processing row\n        at org.apache.hadoop.hive.ql.exec.mr.ExecMapper.map(ExecMapper.java:181)\n        at org.apache.hadoop.mapred.MapRunner.run(MapRunner.java:50)\n        at org.apache.hadoop.mapred.MapTask.runOldMapper(MapTask.java:430)\n        at org.apache.hadoop.mapred.MapTask.run(MapTask.java:366)\n        at org.apache.hadoop.mapred.Child$4.run(Child.java:266)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at javax.security.auth.Subject.doAs(Subject.java:396)\n        at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1136)\n        at org.apache.hadoop.mapred.Child.main(Child.java:260)\nCaused by: org.apache.hadoop.hive.ql.metadata.HiveException: Hive Runtime Error while processing row\n        at org.apache.hadoop.hive.ql.exec.vector.VectorMapOperator.process(VectorMapOperator.java:45)\n        at org.apache.hadoop.hive.ql.exec.mr.ExecMapper.map(ExecMapper.java:163)\n        ... 8 more\nCaused by: org.apache.hadoop.hive.ql.metadata.HiveException: Incompatible Long vector column and primitive category STRING\n        at org.apache.hadoop.hive.ql.exec.vector.VectorColumnAssignFactory.buildObjectAssign(VectorColumnAssignFactory.java:278)\n        at org.apache.hadoop.hive.ql.exec.vector.VectorColumnAssignFactory.buildAssigners(VectorColumnAssignFactory.java:365)\n        at org.apache.hadoop.hive.ql.exec.vector.VectorMapJoinOperator.internalForward(VectorMapJoinOperator.java:235)\n        at org.apache.hadoop.hive.ql.exec.CommonJoinOperator.genAllOneUniqueJoinObject(CommonJoinOperator.java:675)\n        at org.apache.hadoop.hive.ql.exec.CommonJoinOperator.checkAndGenObject(CommonJoinOperator.java:758)\n        at org.apache.hadoop.hive.ql.exec.MapJoinOperator.processOp(MapJoinOperator.java:224)\n        at org.apache.hadoop.hive.ql.exec.vector.VectorMapJoinOperator.processOp(VectorMapJoinOperator.java:293)\n        at org.apache.hadoop.hive.ql.exec.Operator.process(Operator.java:489)\n        at org.apache.hadoop.hive.ql.exec.Operator.forward(Operator.java:827)\n        at org.apache.hadoop.hive.ql.exec.vector.VectorMapJoinOperator.flushOutput(VectorMapJoinOperator.java:249)\n        at org.apache.hadoop.hive.ql.exec.vector.VectorMapJoinOperator.internalForward(VectorMapJoinOperator.java:244)\n        at org.apache.hadoop.hive.ql.exec.CommonJoinOperator.genAllOneUniqueJoinObject(CommonJoinOperator.java:675)\n        at org.apache.hadoop.hive.ql.exec.CommonJoinOperator.checkAndGenObject(CommonJoinOperator.java:758)\n        at org.apache.hadoop.hive.ql.exec.MapJoinOperator.processOp(MapJoinOperator.java:224)\n        at org.apache.hadoop.hive.ql.exec.vector.VectorMapJoinOperator.processOp(VectorMapJoinOperator.java:293)\n        at org.apache.hadoop.hive.ql.exec.Operator.process(Operator.java:489)\n        at org.apache.hadoop.hive.ql.exec.Operator.forward(Operator.java:827)\n        at org.apache.hadoop.hive.ql.exec.TableScanOperator.processOp(TableScanOperator.java:91)\n        at org.apache.hadoop.hive.ql.exec.Operator.process(Operator.java:489)\n        at org.apache.hadoop.hive.ql.exec.Operator.forward(Operator.java:827)\n        at org.apache.hadoop.hive.ql.exec.vector.VectorMapOperator.process(VectorMapOperator.java:43)\n        ... 9 more\n\n\n ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ehans","name":"ehans","key":"ehans","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=ehans&avatarId=16468","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=ehans&avatarId=16468","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=ehans&avatarId=16468","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=ehans&avatarId=16468"},"displayName":"Eric Hanson","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-11-21T02:04:30.189+0000","updated":"2013-11-21T02:04:30.189+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13829536","id":"13829536","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ehans","name":"ehans","key":"ehans","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=ehans&avatarId=16468","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=ehans&avatarId=16468","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=ehans&avatarId=16468","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=ehans&avatarId=16468"},"displayName":"Eric Hanson","active":true,"timeZone":"America/Los_Angeles"},"body":"I'm looking at HIVE-5817.00-broken.patch. It looks like a reasonable approach. It does complicate the function interfaces in VectorizationContext a bit because the soureId parameter is added to a lot of functions. The way I understand it, Remus suggested maybe having a different VectorizationContext for each operator (for which there would be a specific VectorizedRowBatch structure). Then the sourceId could perhaps be an instance variable of VectorizationContext and make the function interface simpler. Does anybody have an opinion on this?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ehans","name":"ehans","key":"ehans","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=ehans&avatarId=16468","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=ehans&avatarId=16468","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=ehans&avatarId=16468","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=ehans&avatarId=16468"},"displayName":"Eric Hanson","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-11-22T01:02:05.131+0000","updated":"2013-11-22T01:02:05.131+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13830247","id":"13830247","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"body":"I think the only real problem operator is JOIN. Is not necessarily ‘one VC per operator’ but more like ‘one VC per query region’ where query region is defined by boundaries between different VS requirements (basically different result shapes). An operator like JOIN is one that clearly introduces a boundary, and the interesting part is that it needs two vectorization contexts: one for it’s input(s) and one for it’s output. So it would be more along the line that during vectorization each operator takes an VC (for its input, provided by its parent operator) and gives out a VC for its output, for its child operators to consume. Most operators would give out the same VC they get as input (ie. they do not change shape). And there is serialization too, which is handled separately (as properties added to the Map).\n\nI'll try to come up with actual code over this week end.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"created":"2013-11-22T19:22:29.544+0000","updated":"2013-11-22T19:22:29.544+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13830430","id":"13830430","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"body":"[~ehans] I tried your query. With that I can repro this on a 1-node cluster, but when I use this query in .q file and run mvn test, test actually passes. Any idea why?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-11-22T23:52:50.079+0000","updated":"2013-11-22T23:52:50.079+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13830459","id":"13830459","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"body":"Aah.. I missed one config which is required to repro in .q file {{ set hive.auto.convert.join=true; }} Thanks [~ehans] for test-case.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-11-23T00:33:08.830+0000","updated":"2013-11-23T00:33:08.830+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13830465","id":"13830465","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"body":"[~rusanu] Another approach I am mulling over is to prepend table alias in the column name in that map. That way keys in that map will be unique across different tables, so that they won't collide. Change there is all the callers also need to prepend table alias than, but since all of them have ExprNodeDesc which has table alias, this should work out fine. What do you think ?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-11-23T00:46:34.966+0000","updated":"2013-11-23T00:46:34.966+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13831541","id":"13831541","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"body":"I have  the implementation of 'vectorization regions\" almost done and I know how to finish it. Will post a patch tomorrow. \n\nUsing the qualified column names (alias + column) will work probably, I don't think a query can have duplicate aliases (not up to par on my ANSI readings one can tell...). Thing is that will ripple everywhere in the vectorization context, we'll have to modify all the expression builders to use the alias.column as a key. If the \"region concept\" will work, will have a much more contained impact.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"created":"2013-11-25T15:23:47.630+0000","updated":"2013-11-25T15:23:47.630+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13831645","id":"13831645","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ehans","name":"ehans","key":"ehans","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=ehans&avatarId=16468","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=ehans&avatarId=16468","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=ehans&avatarId=16468","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=ehans&avatarId=16468"},"displayName":"Eric Hanson","active":true,"timeZone":"America/Los_Angeles"},"body":"Great! Thanks for jumping in.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ehans","name":"ehans","key":"ehans","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=ehans&avatarId=16468","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=ehans&avatarId=16468","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=ehans&avatarId=16468","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=ehans&avatarId=16468"},"displayName":"Eric Hanson","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-11-25T17:24:10.927+0000","updated":"2013-11-25T17:24:10.927+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13831772","id":"13831772","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"body":"Currently other operators also change the column names. In fact there's new method that gets the source operator for lineage, note that the only place where it passes thru to parent is Filter - everyone except filter passes their own column names to child ops (which may or may not be necessary).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-11-25T18:58:49.238+0000","updated":"2013-11-25T18:58:49.238+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13831953","id":"13831953","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"body":"https://reviews.apache.org/r/15849/","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"created":"2013-11-25T21:53:06.014+0000","updated":"2013-11-25T21:53:06.014+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13831960","id":"13831960","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=prasanth_j","name":"prasanth_j","key":"prasanth_j","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Prasanth Jayachandran","active":true,"timeZone":"America/Los_Angeles"},"body":"I came across this exact same issue (column name collision) when I worked on HIVE-5369. As Ashutosh pointed out tabAlias.colName will work. This is what I am using for resolving column names from different parent operators. Reference code can be found in JoinStatsRule under StatsRulesProcFactory.java.\nAnother option is every operator will have output row schema which has list of ColumnInfo. ColumnInfo internally contains internal column name and table alias, when used as a key for hashmap should avoid column name collision. Hope this helps.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=prasanth_j","name":"prasanth_j","key":"prasanth_j","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Prasanth Jayachandran","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-11-25T21:58:24.393+0000","updated":"2013-11-25T21:58:24.393+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13831966","id":"13831966","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"body":"[~rusanu] We should add test-case provided by [~ehans] earlier in the comment thread as part of this patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-11-25T22:01:18.131+0000","updated":"2013-11-25T22:01:18.131+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13831968","id":"13831968","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"body":"My patch .4 addresses the issue the following manner:\n \n - vector operators can implement optional interface VectorizationContextRegion. If they do, they must provide a new vectorization context to be used by child operators. In my patch only VectorMapJoinOperator does so.\n - vectorizer walks up the stack of parent nodes to locate the first one (last one?) that created a vectorization context, and this is the vectorization context used to vectorize the current node. At the root of the stack there is a table scan that always creates a vectorization context. \n - I made the VectorMapJoinOperator build the output VectorizedRowBatch using the VectorizedRowBatchCtx class, same as ORC and RC scanners do. This is more consistent and removes the need for the VectorizedRowBatch.buildBatch method (was used only by VMJ)\n - add a simplified init to VectorizedRowBatchCtx  to be used by VMJ (or any other operator we decide).\n\nI did not enable yet 'submit patch' because more code can be removed  (the mapper scratch for vector type map) , code that was use donly by VMJ to enable it to build the output batch. Using VectorizedRowBatchCtx  makes all that code obsolete.\n\nI tested the repro query and passes fine, produces 100 rows (I assume they're the right ones...). I will do some more testing.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"created":"2013-11-25T22:03:52.536+0000","updated":"2013-11-25T22:03:52.536+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13831972","id":"13831972","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"body":"[~prasanth_j]: why I wanted to do it via 'vectorization regions' is because I believe this concept is needed not only for name resolution. Currently, w/o 'regions', the same vectorization context is used for the entire query tree. this results in very wide (many columns) contexts, because there has to be a column in the context for every intermediate column. With Joins, this becomes quite wide.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"created":"2013-11-25T22:07:54.488+0000","updated":"2013-11-25T22:07:54.488+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13831979","id":"13831979","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"body":"[~sershe]: not sure about other operators. Aren't they covered by the existing addOutputColumn mechanism?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"created":"2013-11-25T22:16:34.649+0000","updated":"2013-11-25T22:16:34.649+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13832020","id":"13832020","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"body":"About the other operators, what do you mean? In the explain of the original query I was looking at, vectorized select does this\n{noformat}\nSelect Operator\n                  expressions:\n                        expr: _col22\n                        type: string\n                        expr: _col53\n                        type: float\n                  outputColumnNames: _col0, _col1\n{noformat}\n\nIn that case, _col22 from 2 preceding joins happened to collide, but cannot, for example, _col1 from the last join become _col0 of select? So the collision will happen when _col1 of select is added and there's already _col1 from the last join","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-11-25T22:47:57.962+0000","updated":"2013-11-25T22:47:57.962+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13832197","id":"13832197","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"body":"Did some testing and found testcase : vectorization_part_project.q is failing after applying this patch with following stack trace:\n{code}\njava.lang.RuntimeException: org.apache.hadoop.hive.ql.metadata.HiveException: Hive Runtime Error while processing row\n        at org.apache.hadoop.hive.ql.exec.mr.ExecMapper.map(ExecMapper.java:181)\n        at org.apache.hadoop.mapred.MapRunner.run(MapRunner.java:50)\n        at org.apache.hadoop.mapred.MapTask.runOldMapper(MapTask.java:436)\n        at org.apache.hadoop.mapred.MapTask.run(MapTask.java:372)\n        at org.apache.hadoop.mapred.LocalJobRunner$Job.run(LocalJobRunner.java:212)\nCaused by: org.apache.hadoop.hive.ql.metadata.HiveException: Hive Runtime Error while processing row\n        at org.apache.hadoop.hive.ql.exec.vector.VectorMapOperator.process(VectorMapOperator.java:45)\n        at org.apache.hadoop.hive.ql.exec.mr.ExecMapper.map(ExecMapper.java:163)\n        ... 4 more\nCaused by: org.apache.hadoop.hive.ql.metadata.HiveException: Error evaluating (cdouble + 2)\n        at org.apache.hadoop.hive.ql.exec.vector.VectorSelectOperator.processOp(VectorSelectOperator.java:117)\n        at org.apache.hadoop.hive.ql.exec.Operator.process(Operator.java:489)\n        at org.apache.hadoop.hive.ql.exec.Operator.forward(Operator.java:827)\n        at org.apache.hadoop.hive.ql.exec.TableScanOperator.processOp(TableScanOperator.java:91)\n        at org.apache.hadoop.hive.ql.exec.Operator.process(Operator.java:489)\n        at org.apache.hadoop.hive.ql.exec.Operator.forward(Operator.java:827)\n        at org.apache.hadoop.hive.ql.exec.vector.VectorMapOperator.process(VectorMapOperator.java:43)\n        ... 5 more\nCaused by: java.lang.ArrayIndexOutOfBoundsException: 13\n        at org.apache.hadoop.hive.ql.exec.vector.expressions.gen.DoubleColAddLongScalar.evaluate(DoubleColAddLongScalar.java:57)\n        at org.apache.hadoop.hive.ql.exec.vector.VectorSelectOperator.processOp(VectorSelectOperator.java:115)\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-11-26T02:10:27.882+0000","updated":"2013-11-26T02:10:27.882+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13832232","id":"13832232","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"body":"We should add following .q file in patch:\n{code}\nset hive.auto.convert.join=true;\ncreate table store(s_store_sk int, s_city string)\nstored as orc;\ninsert overwrite table store\nselect cint, cstring1\nfrom alltypesorc\nwhere cint not in (\n-3728, -563, 762, 6981, 253665376, 528534767, 626923679);\ncreate table store_sales(ss_store_sk int, ss_hdemo_sk int, ss_net_profit double)\nstored as orc;\ninsert overwrite table store_sales\nselect cint, cint, cdouble\nfrom alltypesorc\nwhere cint not in (\n-3728, -563, 762, 6981, 253665376, 528534767, 626923679);\ncreate table household_demographics(hd_demo_sk int)\nstored as orc;\ninsert overwrite table household_demographics\nselect cint\nfrom alltypesorc\nwhere cint not in (\n-3728, -563, 762, 6981, 253665376, 528534767, 626923679);\n\nset hive.vectorized.execution.enabled = true;\nselect store.s_city, ss_net_profit\nfrom store_sales\nJOIN store ON store_sales.ss_store_sk = store.s_store_sk\nJOIN household_demographics ON store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk\n;\n\nset hive.auto.convert.join=false;\nset hive.vectorized.execution.enabled = false;\n{code}\n\nI tested the patch on above query and output returned are correct.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-11-26T02:47:53.972+0000","updated":"2013-11-26T02:47:53.972+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13832558","id":"13832558","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"body":"This patch fixes the regression with vectorization_part_project.q \nI added vectorized_context_regression_5817.q but I'm unable to create an expected .out file because mvn test fails on my Windows enlistment:\n\n-------------------------------------------------------\n T E S T S\n-------------------------------------------------------\nRunning org.apache.hadoop.hive.cli.TestCliDriver\nTests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 32.067 sec <<< FAILURE! - in org.apache.hadoop.hive.cli.TestCliDriver\ninitializationError(org.apache.hadoop.hive.cli.TestCliDriver)  Time elapsed: 0.006 sec  <<< FAILURE!\njava.lang.AssertionError: null\n        at org.apache.hadoop.hive.ql.QTestUtil.getHdfsUriString(QTestUtil.java:288)\n        at org.apache.hadoop.hive.ql.QTestUtil.convertPathsFromWindowsToHdfs(QTestUtil.java:276)\n        at org.apache.hadoop.hive.ql.QTestUtil.initConf(QTestUtil.java:233)\n        at org.apache.hadoop.hive.ql.QTestUtil.<init>(QTestUtil.java:317)\n        at org.apache.hadoop.hive.cli.TestCliDriver.<clinit>(TestCliDriver.java:39)\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"created":"2013-11-26T13:12:16.285+0000","updated":"2013-11-26T13:12:16.285+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13832727","id":"13832727","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"body":"Same patch as .5 but also containing .q.out file for new test.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-11-26T16:19:26.915+0000","updated":"2013-11-26T16:19:26.915+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13832728","id":"13832728","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"body":"Submitting patch for Hive QA to pick up","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-11-26T16:20:08.515+0000","updated":"2013-11-26T16:20:08.515+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13832735","id":"13832735","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"body":"+1 I tested Remus's latest patch both with .q files as well with junit tests. All tests passed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-11-26T16:28:07.206+0000","updated":"2013-11-26T16:28:07.206+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13832810","id":"13832810","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"body":"[~sershe] Let me think about that (the SELECT and other operators). My patch handles cases where the input batch is different from the output batch (eg. JOIN, GROUP BY) but is not good for SELECT operator because it forces copy from in batch to out batch. What I uploaded is still needed for JOIN, is much better than how JOIN used to handle this issue, but you have a point that the solution may not be complete.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"created":"2013-11-26T18:00:33.274+0000","updated":"2013-11-26T18:00:33.274+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13832929","id":"13832929","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"body":"Patch looks good to me for what it does, +1\nShould it also handle GBY?\nDo you want to file a separate JIRA for the select case? I can try to make repro next week","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-11-26T19:33:03.956+0000","updated":"2013-11-26T19:33:03.956+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13832972","id":"13832972","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"body":"[~sershe] VGBY is outputing rowmode output (since the next operator is always a reduce sink, and also there was no vector sink when we implemented VGBY). Had the VGBY output batch mode, it would need to do the same thing JOIN does (use a vectorization context, generate output batch etc).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"created":"2013-11-26T20:05:31.999+0000","updated":"2013-11-26T20:05:31.999+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13833926","id":"13833926","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiveqa","name":"hiveqa","key":"hiveqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hiveqa&avatarId=17060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hiveqa&avatarId=17060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hiveqa&avatarId=17060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hiveqa&avatarId=17060"},"displayName":"Hive QA","active":true,"timeZone":"America/Chicago"},"body":"\n\n{color:green}Overall{color}: +1 all checks pass\n\nHere are the results of testing the latest attachment:\nhttps://issues.apache.org/jira/secure/attachment/12615853/HIVE-5817.6.patch\n\n{color:green}SUCCESS:{color} +1 4660 tests passed\n\nTest results: http://bigtop01.cloudera.org:8080/job/PreCommit-HIVE-Build/457/testReport\nConsole output: http://bigtop01.cloudera.org:8080/job/PreCommit-HIVE-Build/457/console\n\nMessages:\n{noformat}\nExecuting org.apache.hive.ptest.execution.PrepPhase\nExecuting org.apache.hive.ptest.execution.ExecutionPhase\nExecuting org.apache.hive.ptest.execution.ReportingPhase\n{noformat}\n\nThis message is automatically generated.\n\nATTACHMENT ID: 12615853","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiveqa","name":"hiveqa","key":"hiveqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hiveqa&avatarId=17060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hiveqa&avatarId=17060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hiveqa&avatarId=17060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hiveqa&avatarId=17060"},"displayName":"Hive QA","active":true,"timeZone":"America/Chicago"},"created":"2013-11-27T16:35:48.708+0000","updated":"2013-11-27T16:35:48.708+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13833941","id":"13833941","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"body":"Committed to trunk. Thanks, Sergey for initial investigation. Thanks, Remus for patch. Thanks, Eric for reproducible test-case!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-11-27T16:50:38.342+0000","updated":"2013-11-27T16:50:38.342+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13841981","id":"13841981","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"body":"It seems like I cannot make a repro for select... even though there are name collisions, the mappings are correct. Perhaps when someone finds a bug we can solve it :)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-12-07T01:20:40.348+0000","updated":"2013-12-07T01:20:40.348+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12679126/comment/13945418","id":"13945418","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jnp","name":"jnp","key":"jnp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jitendra Nath Pandey","active":true,"timeZone":"Etc/UTC"},"body":"bq. It seems like I cannot make a repro for select... even though there are name collisions, the mappings are correct. Perhaps when someone finds a bug we can solve it .\nHIVE-6349 patch includes a test that reproduces the problem for vectorized select. The patch also fixes the issue.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jnp","name":"jnp","key":"jnp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jitendra Nath Pandey","active":true,"timeZone":"Etc/UTC"},"created":"2014-03-24T17:54:44.671+0000","updated":"2014-03-24T17:54:44.671+0000"}],"maxResults":34,"total":34,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-5817/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1psrz:"}}