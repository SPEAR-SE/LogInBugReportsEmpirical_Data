{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12744861","self":"https://issues.apache.org/jira/rest/api/2/issue/12744861","key":"HIVE-8306","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310843","id":"12310843","key":"HIVE","name":"Hive","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310843&avatarId=11935","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310843&avatarId=11935","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310843&avatarId=11935","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310843&avatarId=11935"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":null,"customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Thu Apr 16 01:20:59 UTC 2015","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_17095545894_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2015-04-16T01:20:59.480+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-8306/watchers","watchCount":1,"isWatching":false},"created":"2014-09-30T04:35:13.662+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.svg","name":"Minor","id":"4"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12326450","id":"12326450","description":"released","name":"0.14.0","archived":false,"released":true,"releaseDate":"2014-11-12"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=prasanth_j","name":"prasanth_j","key":"prasanth_j","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Prasanth Jayachandran","active":true,"timeZone":"America/Los_Angeles"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2015-04-16T01:20:59.545+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12323401","id":"12323401","name":"Physical Optimizer","description":"Optimizations which are dependent on runtime"}],"timeoriginalestimate":null,"description":"When hive.auto.convert.join.noconditionaltask = true we check noconditionaltask.size and if the sum of tables sizes in the map join is less than  noconditionaltask.size the plan would generate a Map join, the issue with this is that the calculation doesn't take into account the overhead introduced by different HashTable implementation as results if the sum of input sizes is smaller than the noconditionaltask size by a small margin queries will hit OOM.\n\nTPC-DS query 64 is a good example for this issue as one as non conditional task size is set to 1,280,000,000 while sum of input is 1,012,379,321 which is 20% smaller than the expected size.\n\t  \nVertex\n{code}\n   Map 28 <- Map 11 (BROADCAST_EDGE), Map 12 (BROADCAST_EDGE), Map 14 (BROADCAST_EDGE), Map 15 (BROADCAST_EDGE), Map 16 (BROADCAST_EDGE), Map 24 (BROADCAST_EDGE), Map 26 (BROADCAST_EDGE), Map 30 (BROADCAST_EDGE), Map 31 (BROADCAST_EDGE), Map 32 (BROADCAST_EDGE), Map 39 (BROADCAST_EDGE), Map 40 (BROADCAST_EDGE), Map 43 (BROADCAST_EDGE), Map 45 (BROADCAST_EDGE), Map 5 (BROADCAST_EDGE)\n{code}\n\nException\n{code}\n, TaskAttempt 3 failed, info=[Error: Failure while running task:java.lang.RuntimeException: java.lang.OutOfMemoryError: Java heap space\n\tat org.apache.hadoop.hive.ql.exec.tez.TezProcessor.run(TezProcessor.java:169)\n\tat org.apache.tez.runtime.LogicalIOProcessorRuntimeTask.run(LogicalIOProcessorRuntimeTask.java:324)\n\tat org.apache.tez.runtime.task.TezTaskRunner$TaskRunnerCallable$1.run(TezTaskRunner.java:180)\n\tat org.apache.tez.runtime.task.TezTaskRunner$TaskRunnerCallable$1.run(TezTaskRunner.java:172)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat javax.security.auth.Subject.doAs(Subject.java:415)\n\tat org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1548)\n\tat org.apache.tez.runtime.task.TezTaskRunner$TaskRunnerCallable.call(TezTaskRunner.java:172)\n\tat org.apache.tez.runtime.task.TezTaskRunner$TaskRunnerCallable.call(TezTaskRunner.java:167)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:262)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:744)\nCaused by: java.lang.OutOfMemoryError: Java heap space\n\tat org.apache.hadoop.hive.serde2.WriteBuffers.nextBufferToWrite(WriteBuffers.java:206)\n\tat org.apache.hadoop.hive.serde2.WriteBuffers.write(WriteBuffers.java:182)\n\tat org.apache.hadoop.hive.ql.exec.persistence.MapJoinBytesTableContainer$LazyBinaryKvWriter.writeKey(MapJoinBytesTableContainer.java:189)\n\tat org.apache.hadoop.hive.ql.exec.persistence.BytesBytesMultiHashMap.put(BytesBytesMultiHashMap.java:200)\n\tat org.apache.hadoop.hive.ql.exec.persistence.MapJoinBytesTableContainer.putRow(MapJoinBytesTableContainer.java:267)\n\tat org.apache.hadoop.hive.ql.exec.tez.HashTableLoader.load(HashTableLoader.java:114)\n\tat org.apache.hadoop.hive.ql.exec.MapJoinOperator.loadHashTable(MapJoinOperator.java:184)\n\tat org.apache.hadoop.hive.ql.exec.MapJoinOperator.cleanUpInputFileChangedOp(MapJoinOperator.java:210)\n\tat org.apache.hadoop.hive.ql.exec.Operator.cleanUpInputFileChanged(Operator.java:1036)\n\tat org.apache.hadoop.hive.ql.exec.Operator.cleanUpInputFileChanged(Operator.java:1040)\n\tat org.apache.hadoop.hive.ql.exec.Operator.cleanUpInputFileChanged(Operator.java:1040)\n\tat org.apache.hadoop.hive.ql.exec.Operator.cleanUpInputFileChanged(Operator.java:1040)\n\tat org.apache.hadoop.hive.ql.exec.vector.VectorMapOperator.process(VectorMapOperator.java:37)\n\tat org.apache.hadoop.hive.ql.exec.tez.MapRecordProcessor.processRow(MapRecordProcessor.java:186)\n\tat org.apache.hadoop.hive.ql.exec.tez.MapRecordProcessor.run(MapRecordProcessor.java:164)\n\tat org.apache.hadoop.hive.ql.exec.tez.TezProcessor.run(TezProcessor.java:160)\n\t... 12 more\n{code} \n\nPlan \n{code}\nSTAGE PLANS:\n  Stage: Stage-1\n    Tez\n      Edges:\n        Map 18 <- Map 1 (BROADCAST_EDGE), Map 13 (BROADCAST_EDGE), Map 2 (BROADCAST_EDGE), Map 25 (BROADCAST_EDGE), Map 27 (BROADCAST_EDGE), Map 29 (BROADCAST_EDGE), Map 3 (BROADCAST_EDGE), Map 35 (BROADCAST_EDGE), Map 36 (BROADCAST_EDGE), Map 37 (BROADCAST_EDGE), Map 38 (BROADCAST_EDGE), Map 4 (BROADCAST_EDGE), Map 41 (BROADCAST_EDGE), Map 42 (BROADCAST_EDGE), Map 44 (BROADCAST_EDGE)\n        Map 22 <- Map 33 (BROADCAST_EDGE)\n        Map 28 <- Map 11 (BROADCAST_EDGE), Map 12 (BROADCAST_EDGE), Map 14 (BROADCAST_EDGE), Map 15 (BROADCAST_EDGE), Map 16 (BROADCAST_EDGE), Map 24 (BROADCAST_EDGE), Map 26 (BROADCAST_EDGE), Map 30 (BROADCAST_EDGE), Map 31 (BROADCAST_EDGE), Map 32 (BROADCAST_EDGE), Map 39 (BROADCAST_EDGE), Map 40 (BROADCAST_EDGE), Map 43 (BROADCAST_EDGE), Map 45 (BROADCAST_EDGE), Map 5 (BROADCAST_EDGE)\n        Map 6 <- Map 21 (BROADCAST_EDGE)\n        Reducer 10 <- Reducer 9 (SIMPLE_EDGE)\n        Reducer 19 <- Map 18 (SIMPLE_EDGE), Map 34 (SIMPLE_EDGE), Reducer 23 (SIMPLE_EDGE)\n        Reducer 20 <- Reducer 19 (SIMPLE_EDGE)\n        Reducer 23 <- Map 22 (SIMPLE_EDGE)\n        Reducer 7 <- Map 6 (SIMPLE_EDGE)\n        Reducer 8 <- Map 17 (SIMPLE_EDGE), Map 28 (SIMPLE_EDGE), Reducer 7 (SIMPLE_EDGE)\n        Reducer 9 <- Reducer 20 (BROADCAST_EDGE), Reducer 8 (SIMPLE_EDGE)\n      DagName: mmokhtar_20140910163939_fc966812-9b9d-47a2-bdad-eb43f336b848:1\n      Vertices:\n        Map 1 \n            Map Operator Tree:\n                TableScan\n                  alias: hd1\n                  filterExpr: (hd_demo_sk is not null and hd_income_band_sk is not null) (type: boolean)\n                  Statistics: Num rows: 7200 Data size: 770400 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (hd_demo_sk is not null and hd_income_band_sk is not null) (type: boolean)\n                    Statistics: Num rows: 1800 Data size: 192600 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: hd_demo_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: hd_demo_sk (type: int)\n                      Statistics: Num rows: 1800 Data size: 192600 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: hd_income_band_sk (type: int)\n            Execution mode: vectorized\n        Map 11 \n            Map Operator Tree:\n                TableScan\n                  alias: store_sales\n                  filterExpr: (((((((ss_item_sk is not null and ss_ticket_number is not null) and ss_customer_sk is not null) and ss_store_sk is not null) and ss_cdemo_sk is not null) and ss_promo_sk is not null) and ss_hdemo_sk is not null) and ss_addr_sk is not null) (type: boolean)\n                  Statistics: Num rows: 550076554 Data size: 47370018896 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (((((((ss_item_sk is not null and ss_ticket_number is not null) and ss_customer_sk is not null) and ss_store_sk is not null) and ss_cdemo_sk is not null) and ss_promo_sk is not null) and ss_hdemo_sk is not null) and ss_addr_sk is not null) (type: boolean)\n                    Statistics: Num rows: 2148737 Data size: 185039176 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: ss_item_sk (type: int), ss_ticket_number (type: int)\n                      sort order: ++\n                      Map-reduce partition columns: ss_item_sk (type: int), ss_ticket_number (type: int)\n                      Statistics: Num rows: 2148737 Data size: 185039176 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: ss_customer_sk (type: int), ss_cdemo_sk (type: int), ss_hdemo_sk (type: int), ss_addr_sk (type: int), ss_store_sk (type: int), ss_promo_sk (type: int), ss_wholesale_cost (type: float), ss_list_price (type: float), ss_coupon_amt (type: float), ss_sold_date_sk (type: int)\n            Execution mode: vectorized\n        Map 12 \n            Map Operator Tree:\n                TableScan\n                  alias: cd1\n                  filterExpr: cd_demo_sk is not null (type: boolean)\n                  Statistics: Num rows: 1920800 Data size: 718379200 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: cd_demo_sk is not null (type: boolean)\n                    Statistics: Num rows: 960400 Data size: 359189600 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: cd_demo_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: cd_demo_sk (type: int)\n                      Statistics: Num rows: 960400 Data size: 359189600 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: cd_marital_status (type: string)\n            Execution mode: vectorized\n        Map 13 \n            Map Operator Tree:\n                TableScan\n                  alias: customer\n                  filterExpr: (((((c_customer_sk is not null and c_first_sales_date_sk is not null) and c_first_shipto_date_sk is not null) and c_current_cdemo_sk is not null) and c_current_hdemo_sk is not null) and c_current_addr_sk is not null) (type: boolean)\n                  Statistics: Num rows: 1600000 Data size: 1241633212 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (((((c_customer_sk is not null and c_first_sales_date_sk is not null) and c_first_shipto_date_sk is not null) and c_current_cdemo_sk is not null) and c_current_hdemo_sk is not null) and c_current_addr_sk is not null) (type: boolean)\n                    Statistics: Num rows: 25000 Data size: 19400518 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: c_customer_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: c_customer_sk (type: int)\n                      Statistics: Num rows: 25000 Data size: 19400518 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: c_current_cdemo_sk (type: int), c_current_hdemo_sk (type: int), c_current_addr_sk (type: int), c_first_shipto_date_sk (type: int), c_first_sales_date_sk (type: int)\n            Execution mode: vectorized\n        Map 14 \n            Map Operator Tree:\n                TableScan\n                  alias: cd2\n                  filterExpr: cd_demo_sk is not null (type: boolean)\n                  Statistics: Num rows: 1920800 Data size: 718379200 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: cd_demo_sk is not null (type: boolean)\n                    Statistics: Num rows: 960400 Data size: 359189600 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: cd_demo_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: cd_demo_sk (type: int)\n                      Statistics: Num rows: 960400 Data size: 359189600 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: cd_marital_status (type: string)\n            Execution mode: vectorized\n        Map 15 \n            Map Operator Tree:\n                TableScan\n                  alias: hd2\n                  filterExpr: (hd_demo_sk is not null and hd_income_band_sk is not null) (type: boolean)\n                  Statistics: Num rows: 7200 Data size: 770400 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (hd_demo_sk is not null and hd_income_band_sk is not null) (type: boolean)\n                    Statistics: Num rows: 1800 Data size: 192600 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: hd_demo_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: hd_demo_sk (type: int)\n                      Statistics: Num rows: 1800 Data size: 192600 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: hd_income_band_sk (type: int)\n            Execution mode: vectorized\n        Map 16 \n            Map Operator Tree:\n                TableScan\n                  alias: hd1\n                  filterExpr: (hd_demo_sk is not null and hd_income_band_sk is not null) (type: boolean)\n                  Statistics: Num rows: 7200 Data size: 770400 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (hd_demo_sk is not null and hd_income_band_sk is not null) (type: boolean)\n                    Statistics: Num rows: 1800 Data size: 192600 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: hd_demo_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: hd_demo_sk (type: int)\n                      Statistics: Num rows: 1800 Data size: 192600 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: hd_income_band_sk (type: int)\n            Execution mode: vectorized\n        Map 17 \n            Map Operator Tree:\n                TableScan\n                  alias: item\n                  filterExpr: (((i_item_sk is not null and (i_color) IN ('maroon', 'burnished', 'dim', 'steel', 'navajo', 'chocolate')) and i_current_price BETWEEN 35 AND 45) and i_current_price BETWEEN 36 AND 50) (type: boolean)\n                  Statistics: Num rows: 48000 Data size: 68732712 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (((i_item_sk is not null and (i_color) IN ('maroon', 'burnished', 'dim', 'steel', 'navajo', 'chocolate')) and i_current_price BETWEEN 35 AND 45) and i_current_price BETWEEN 36 AND 50) (type: boolean)\n                    Statistics: Num rows: 3000 Data size: 4295794 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: i_item_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: i_item_sk (type: int)\n                      Statistics: Num rows: 3000 Data size: 4295794 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: i_current_price (type: float), i_color (type: string), i_product_name (type: string)\n            Execution mode: vectorized\n        Map 18 \n            Map Operator Tree:\n                TableScan\n                  alias: store_returns\n                  filterExpr: (sr_item_sk is not null and sr_ticket_number is not null) (type: boolean)\n                  Statistics: Num rows: 55578005 Data size: 4155315616 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (sr_item_sk is not null and sr_ticket_number is not null) (type: boolean)\n                    Statistics: Num rows: 13894502 Data size: 1038828960 Basic stats: COMPLETE Column stats: NONE\n                    Map Join Operator\n                      condition map:\n                           Inner Join 0 to 1\n                      condition expressions:\n                        0 {ss_item_sk} {ss_customer_sk} {ss_cdemo_sk} {ss_hdemo_sk} {ss_addr_sk} {ss_store_sk} {ss_promo_sk} {ss_wholesale_cost} {ss_list_price} {ss_coupon_amt} {ss_sold_date_sk}\n                        1 \n                      keys:\n                        0 ss_item_sk (type: int), ss_ticket_number (type: int)\n                        1 sr_item_sk (type: int), sr_ticket_number (type: int)\n                      outputColumnNames: _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col10, _col11, _col18, _col22\n                      input vertices:\n                        0 Map 4\n                      Statistics: Num rows: 15283953 Data size: 1142711808 Basic stats: COMPLETE Column stats: NONE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        condition expressions:\n                          0 {_col1} {_col3} {_col4} {_col5} {_col6} {_col7} {_col10} {_col11} {_col18} {_col22}\n                          1 {c_current_cdemo_sk} {c_current_hdemo_sk} {c_current_addr_sk} {c_first_shipto_date_sk} {c_first_sales_date_sk}\n                        keys:\n                          0 _col2 (type: int)\n                          1 c_customer_sk (type: int)\n                        outputColumnNames: _col1, _col3, _col4, _col5, _col6, _col7, _col10, _col11, _col18, _col22, _col51, _col52, _col53, _col54, _col55\n                        input vertices:\n                          1 Map 13\n                        Statistics: Num rows: 16812348 Data size: 1256983040 Basic stats: COMPLETE Column stats: NONE\n                        Map Join Operator\n                          condition map:\n                               Inner Join 0 to 1\n                          condition expressions:\n                            0 {_col1} {_col3} {_col4} {_col5} {_col6} {_col7} {_col10} {_col11} {_col18} {_col51} {_col52} {_col53} {_col54} {_col55}\n                            1 \n                          keys:\n                            0 _col22 (type: int)\n                            1 d_date_sk (type: int)\n                          outputColumnNames: _col1, _col3, _col4, _col5, _col6, _col7, _col10, _col11, _col18, _col51, _col52, _col53, _col54, _col55\n                          input vertices:\n                            1 Map 44\n                          Statistics: Num rows: 18493584 Data size: 1382681344 Basic stats: COMPLETE Column stats: NONE\n                          Map Join Operator\n                            condition map:\n                                 Inner Join 0 to 1\n                            condition expressions:\n                              0 {_col1} {_col3} {_col4} {_col5} {_col6} {_col7} {_col10} {_col11} {_col18} {_col51} {_col52} {_col53} {_col54}\n                              1 {d_year}\n                            keys:\n                              0 _col55 (type: int)\n                              1 d_date_sk (type: int)\n                            outputColumnNames: _col1, _col3, _col4, _col5, _col6, _col7, _col10, _col11, _col18, _col51, _col52, _col53, _col54, _col107\n                            input vertices:\n                              1 Map 41\n                            Statistics: Num rows: 20342942 Data size: 1520949504 Basic stats: COMPLETE Column stats: NONE\n                            Map Join Operator\n                              condition map:\n                                   Inner Join 0 to 1\n                              condition expressions:\n                                0 {_col1} {_col3} {_col4} {_col5} {_col6} {_col7} {_col10} {_col11} {_col18} {_col51} {_col52} {_col53} {_col107}\n                                1 {d_year}\n                              keys:\n                                0 _col54 (type: int)\n                                1 d_date_sk (type: int)\n                              outputColumnNames: _col1, _col3, _col4, _col5, _col6, _col7, _col10, _col11, _col18, _col51, _col52, _col53, _col107, _col138\n                              input vertices:\n                                1 Map 42\n                              Statistics: Num rows: 22377236 Data size: 1673044480 Basic stats: COMPLETE Column stats: NONE\n                              Map Join Operator\n                                condition map:\n                                     Inner Join 0 to 1\n                                condition expressions:\n                                  0 {_col1} {_col3} {_col4} {_col5} {_col7} {_col10} {_col11} {_col18} {_col51} {_col52} {_col53} {_col107} {_col138}\n                                  1 {s_store_name} {s_zip}\n                                keys:\n                                  0 _col6 (type: int)\n                                  1 s_store_sk (type: int)\n                                outputColumnNames: _col1, _col3, _col4, _col5, _col7, _col10, _col11, _col18, _col51, _col52, _col53, _col107, _col138, _col168, _col188\n                                input vertices:\n                                  1 Map 29\n                                Statistics: Num rows: 24614960 Data size: 1840348928 Basic stats: COMPLETE Column stats: NONE\n                                Map Join Operator\n                                  condition map:\n                                       Inner Join 0 to 1\n                                  condition expressions:\n                                    0 {_col1} {_col4} {_col5} {_col7} {_col10} {_col11} {_col18} {_col51} {_col52} {_col53} {_col107} {_col138} {_col168} {_col188}\n                                    1 {cd_marital_status}\n                                  keys:\n                                    0 _col3 (type: int)\n                                    1 cd_demo_sk (type: int)\n                                  outputColumnNames: _col1, _col4, _col5, _col7, _col10, _col11, _col18, _col51, _col52, _col53, _col107, _col138, _col168, _col188, _col197\n                                  input vertices:\n                                    1 Map 35\n                                  Statistics: Num rows: 27076456 Data size: 2024383872 Basic stats: COMPLETE Column stats: NONE\n                                  Map Join Operator\n                                    condition map:\n                                         Inner Join 0 to 1\n                                    condition expressions:\n                                      0 {_col1} {_col4} {_col5} {_col7} {_col10} {_col11} {_col18} {_col52} {_col53} {_col107} {_col138} {_col168} {_col188} {_col197}\n                                      1 {cd_marital_status}\n                                    keys:\n                                      0 _col51 (type: int)\n                                      1 cd_demo_sk (type: int)\n                                    outputColumnNames: _col1, _col4, _col5, _col7, _col10, _col11, _col18, _col52, _col53, _col107, _col138, _col168, _col188, _col197, _col209\n                                    input vertices:\n                                      1 Map 38\n                                    Statistics: Num rows: 29784102 Data size: 2226822400 Basic stats: COMPLETE Column stats: NONE\n                                    Map Join Operator\n                                      condition map:\n                                           Inner Join 0 to 1\n                                      condition expressions:\n                                        0 {_col1} {_col4} {_col5} {_col10} {_col11} {_col18} {_col52} {_col53} {_col107} {_col138} {_col168} {_col188} {_col197} {_col209}\n                                        1 \n                                      keys:\n                                        0 _col7 (type: int)\n                                        1 p_promo_sk (type: int)\n                                      outputColumnNames: _col1, _col4, _col5, _col10, _col11, _col18, _col52, _col53, _col107, _col138, _col168, _col188, _col197, _col209\n                                      input vertices:\n                                        1 Map 3\n                                      Statistics: Num rows: 32762512 Data size: 2449504768 Basic stats: COMPLETE Column stats: NONE\n                                      Map Join Operator\n                                        condition map:\n                                             Inner Join 0 to 1\n                                        condition expressions:\n                                          0 {_col1} {_col5} {_col10} {_col11} {_col18} {_col52} {_col53} {_col107} {_col138} {_col168} {_col188} {_col197} {_col209}\n                                          1 {hd_income_band_sk}\n                                        keys:\n                                          0 _col4 (type: int)\n                                          1 hd_demo_sk (type: int)\n                                        outputColumnNames: _col1, _col5, _col10, _col11, _col18, _col52, _col53, _col107, _col138, _col168, _col188, _col197, _col209, _col242\n                                        input vertices:\n                                          1 Map 1\n                                        Statistics: Num rows: 36038764 Data size: 2694455296 Basic stats: COMPLETE Column stats: NONE\n                                        Map Join Operator\n                                          condition map:\n                                               Inner Join 0 to 1\n                                          condition expressions:\n                                            0 {_col1} {_col5} {_col10} {_col11} {_col18} {_col53} {_col107} {_col138} {_col168} {_col188} {_col197} {_col209} {_col242}\n                                            1 {hd_income_band_sk}\n                                          keys:\n                                            0 _col52 (type: int)\n                                            1 hd_demo_sk (type: int)\n                                          outputColumnNames: _col1, _col5, _col10, _col11, _col18, _col53, _col107, _col138, _col168, _col188, _col197, _col209, _col242, _col250\n                                          input vertices:\n                                            1 Map 2\n                                          Statistics: Num rows: 39642640 Data size: 2963900928 Basic stats: COMPLETE Column stats: NONE\n                                          Map Join Operator\n                                            condition map:\n                                                 Inner Join 0 to 1\n                                            condition expressions:\n                                              0 {_col1} {_col10} {_col11} {_col18} {_col53} {_col107} {_col138} {_col168} {_col188} {_col197} {_col209} {_col242} {_col250}\n                                              1 {ca_street_number} {ca_street_name} {ca_city} {ca_zip}\n                                            keys:\n                                              0 _col5 (type: int)\n                                              1 ca_address_sk (type: int)\n                                            outputColumnNames: _col1, _col10, _col11, _col18, _col53, _col107, _col138, _col168, _col188, _col197, _col209, _col242, _col250, _col259, _col260, _col263, _col266\n                                            input vertices:\n                                              1 Map 27\n                                            Statistics: Num rows: 43606904 Data size: 3260291072 Basic stats: COMPLETE Column stats: NONE\n                                            Map Join Operator\n                                              condition map:\n                                                   Inner Join 0 to 1\n                                              condition expressions:\n                                                0 {_col1} {_col10} {_col11} {_col18} {_col107} {_col138} {_col168} {_col188} {_col197} {_col209} {_col242} {_col250} {_col259} {_col260} {_col263} {_col266}\n                                                1 {ca_street_number} {ca_street_name} {ca_city} {ca_zip}\n                                              keys:\n                                                0 _col53 (type: int)\n                                                1 ca_address_sk (type: int)\n                                              outputColumnNames: _col1, _col10, _col11, _col18, _col107, _col138, _col168, _col188, _col197, _col209, _col242, _col250, _col259, _col260, _col263, _col266, _col275, _col276, _col279, _col282\n                                              input vertices:\n                                                1 Map 25\n                                              Statistics: Num rows: 47967596 Data size: 3586320384 Basic stats: COMPLETE Column stats: NONE\n                                              Map Join Operator\n                                                condition map:\n                                                     Inner Join 0 to 1\n                                                condition expressions:\n                                                  0 {_col1} {_col10} {_col11} {_col18} {_col107} {_col138} {_col168} {_col188} {_col197} {_col209} {_col250} {_col259} {_col260} {_col263} {_col266} {_col275} {_col276} {_col279} {_col282}\n                                                  1 \n                                                keys:\n                                                  0 _col242 (type: int)\n                                                  1 ib_income_band_sk (type: int)\n                                                outputColumnNames: _col1, _col10, _col11, _col18, _col107, _col138, _col168, _col188, _col197, _col209, _col250, _col259, _col260, _col263, _col266, _col275, _col276, _col279, _col282\n                                                input vertices:\n                                                  1 Map 36\n                                                Statistics: Num rows: 52764356 Data size: 3944952576 Basic stats: COMPLETE Column stats: NONE\n                                                Map Join Operator\n                                                  condition map:\n                                                       Inner Join 0 to 1\n                                                  condition expressions:\n                                                    0 {_col1} {_col10} {_col11} {_col18} {_col107} {_col138} {_col168} {_col188} {_col197} {_col209} {_col259} {_col260} {_col263} {_col266} {_col275} {_col276} {_col279} {_col282}\n                                                    1 \n                                                  keys:\n                                                    0 _col250 (type: int)\n                                                    1 ib_income_band_sk (type: int)\n                                                  outputColumnNames: _col1, _col10, _col11, _col18, _col107, _col138, _col168, _col188, _col197, _col209, _col259, _col260, _col263, _col266, _col275, _col276, _col279, _col282\n                                                  input vertices:\n                                                    1 Map 37\n                                                  Statistics: Num rows: 58040792 Data size: 4339447808 Basic stats: COMPLETE Column stats: NONE\n                                                  Reduce Output Operator\n                                                    key expressions: _col1 (type: int)\n                                                    sort order: +\n                                                    Map-reduce partition columns: _col1 (type: int)\n                                                    Statistics: Num rows: 58040792 Data size: 4339447808 Basic stats: COMPLETE Column stats: NONE\n                                                    value expressions: _col10 (type: float), _col11 (type: float), _col18 (type: float), _col107 (type: int), _col138 (type: int), _col168 (type: string), _col188 (type: string), _col197 (type: string), _col209 (type: string), _col259 (type: string), _col260 (type: string), _col263 (type: string), _col266 (type: string), _col275 (type: string), _col276 (type: string), _col279 (type: string), _col282 (type: string)\n            Execution mode: vectorized\n        Map 2 \n            Map Operator Tree:\n                TableScan\n                  alias: hd2\n                  filterExpr: (hd_demo_sk is not null and hd_income_band_sk is not null) (type: boolean)\n                  Statistics: Num rows: 7200 Data size: 770400 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (hd_demo_sk is not null and hd_income_band_sk is not null) (type: boolean)\n                    Statistics: Num rows: 1800 Data size: 192600 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: hd_demo_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: hd_demo_sk (type: int)\n                      Statistics: Num rows: 1800 Data size: 192600 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: hd_income_band_sk (type: int)\n            Execution mode: vectorized\n        Map 21 \n            Map Operator Tree:\n                TableScan\n                  alias: catalog_returns\n                  filterExpr: (cr_item_sk is not null and cr_order_number is not null) (type: boolean)\n                  Statistics: Num rows: 28798881 Data size: 2942039156 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (cr_item_sk is not null and cr_order_number is not null) (type: boolean)\n                    Statistics: Num rows: 7199721 Data size: 735509865 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: cr_item_sk (type: int), cr_order_number (type: int)\n                      sort order: ++\n                      Map-reduce partition columns: cr_item_sk (type: int), cr_order_number (type: int)\n                      Statistics: Num rows: 7199721 Data size: 735509865 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: cr_refunded_cash (type: float), cr_reversed_charge (type: float), cr_store_credit (type: float)\n            Execution mode: vectorized\n        Map 22 \n            Map Operator Tree:\n                TableScan\n                  alias: catalog_sales\n                  filterExpr: (cs_item_sk is not null and cs_order_number is not null) (type: boolean)\n                  Statistics: Num rows: 286549727 Data size: 37743959324 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (cs_item_sk is not null and cs_order_number is not null) (type: boolean)\n                    Statistics: Num rows: 71637432 Data size: 9435989863 Basic stats: COMPLETE Column stats: NONE\n                    Map Join Operator\n                      condition map:\n                           Inner Join 0 to 1\n                      condition expressions:\n                        0 {cs_item_sk} {cs_ext_list_price}\n                        1 {cr_refunded_cash} {cr_reversed_charge} {cr_store_credit}\n                      keys:\n                        0 cs_item_sk (type: int), cs_order_number (type: int)\n                        1 cr_item_sk (type: int), cr_order_number (type: int)\n                      outputColumnNames: _col14, _col24, _col59, _col60, _col61\n                      input vertices:\n                        1 Map 33\n                      Statistics: Num rows: 78801176 Data size: 10379589632 Basic stats: COMPLETE Column stats: NONE\n                      Select Operator\n                        expressions: _col14 (type: int), _col24 (type: float), _col59 (type: float), _col60 (type: float), _col61 (type: float)\n                        outputColumnNames: _col14, _col24, _col59, _col60, _col61\n                        Statistics: Num rows: 78801176 Data size: 10379589632 Basic stats: COMPLETE Column stats: NONE\n                        Group By Operator\n                          aggregations: sum(_col24), sum(((_col59 + _col60) + _col61))\n                          keys: _col14 (type: int)\n                          mode: hash\n                          outputColumnNames: _col0, _col1, _col2\n                          Statistics: Num rows: 78801176 Data size: 10379589632 Basic stats: COMPLETE Column stats: NONE\n                          Reduce Output Operator\n                            key expressions: _col0 (type: int)\n                            sort order: +\n                            Map-reduce partition columns: _col0 (type: int)\n                            Statistics: Num rows: 78801176 Data size: 10379589632 Basic stats: COMPLETE Column stats: NONE\n                            value expressions: _col1 (type: double), _col2 (type: double)\n            Execution mode: vectorized\n        Map 24 \n            Map Operator Tree:\n                TableScan\n                  alias: d3\n                  filterExpr: d_date_sk is not null (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: d_date_sk is not null (type: boolean)\n                    Statistics: Num rows: 36525 Data size: 40871475 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: d_date_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: d_date_sk (type: int)\n                      Statistics: Num rows: 36525 Data size: 40871475 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: d_year (type: int)\n            Execution mode: vectorized\n        Map 25 \n            Map Operator Tree:\n                TableScan\n                  alias: ad2\n                  filterExpr: ca_address_sk is not null (type: boolean)\n                  Statistics: Num rows: 800000 Data size: 811903688 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ca_address_sk is not null (type: boolean)\n                    Statistics: Num rows: 400000 Data size: 405951844 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: ca_address_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: ca_address_sk (type: int)\n                      Statistics: Num rows: 400000 Data size: 405951844 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: ca_street_number (type: string), ca_street_name (type: string), ca_city (type: string), ca_zip (type: string)\n            Execution mode: vectorized\n        Map 26 \n            Map Operator Tree:\n                TableScan\n                  alias: customer\n                  filterExpr: (((((c_customer_sk is not null and c_first_sales_date_sk is not null) and c_first_shipto_date_sk is not null) and c_current_cdemo_sk is not null) and c_current_hdemo_sk is not null) and c_current_addr_sk is not null) (type: boolean)\n                  Statistics: Num rows: 1600000 Data size: 1241633212 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (((((c_customer_sk is not null and c_first_sales_date_sk is not null) and c_first_shipto_date_sk is not null) and c_current_cdemo_sk is not null) and c_current_hdemo_sk is not null) and c_current_addr_sk is not null) (type: boolean)\n                    Statistics: Num rows: 25000 Data size: 19400518 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: c_customer_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: c_customer_sk (type: int)\n                      Statistics: Num rows: 25000 Data size: 19400518 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: c_current_cdemo_sk (type: int), c_current_hdemo_sk (type: int), c_current_addr_sk (type: int), c_first_shipto_date_sk (type: int), c_first_sales_date_sk (type: int)\n            Execution mode: vectorized\n        Map 27 \n            Map Operator Tree:\n                TableScan\n                  alias: ad1\n                  filterExpr: ca_address_sk is not null (type: boolean)\n                  Statistics: Num rows: 800000 Data size: 811903688 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ca_address_sk is not null (type: boolean)\n                    Statistics: Num rows: 400000 Data size: 405951844 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: ca_address_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: ca_address_sk (type: int)\n                      Statistics: Num rows: 400000 Data size: 405951844 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: ca_street_number (type: string), ca_street_name (type: string), ca_city (type: string), ca_zip (type: string)\n            Execution mode: vectorized\n        Map 28 \n            Map Operator Tree:\n                TableScan\n                  alias: store_returns\n                  filterExpr: (sr_item_sk is not null and sr_ticket_number is not null) (type: boolean)\n                  Statistics: Num rows: 55578005 Data size: 4155315616 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (sr_item_sk is not null and sr_ticket_number is not null) (type: boolean)\n                    Statistics: Num rows: 13894502 Data size: 1038828960 Basic stats: COMPLETE Column stats: NONE\n                    Map Join Operator\n                      condition map:\n                           Inner Join 0 to 1\n                      condition expressions:\n                        0 {ss_item_sk} {ss_customer_sk} {ss_cdemo_sk} {ss_hdemo_sk} {ss_addr_sk} {ss_store_sk} {ss_promo_sk} {ss_wholesale_cost} {ss_list_price} {ss_coupon_amt} {ss_sold_date_sk}\n                        1 \n                      keys:\n                        0 ss_item_sk (type: int), ss_ticket_number (type: int)\n                        1 sr_item_sk (type: int), sr_ticket_number (type: int)\n                      outputColumnNames: _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col10, _col11, _col18, _col22\n                      input vertices:\n                        0 Map 11\n                      Statistics: Num rows: 15283953 Data size: 1142711808 Basic stats: COMPLETE Column stats: NONE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        condition expressions:\n                          0 {_col1} {_col3} {_col4} {_col5} {_col6} {_col7} {_col10} {_col11} {_col18} {_col22}\n                          1 {c_current_cdemo_sk} {c_current_hdemo_sk} {c_current_addr_sk} {c_first_shipto_date_sk} {c_first_sales_date_sk}\n                        keys:\n                          0 _col2 (type: int)\n                          1 c_customer_sk (type: int)\n                        outputColumnNames: _col1, _col3, _col4, _col5, _col6, _col7, _col10, _col11, _col18, _col22, _col51, _col52, _col53, _col54, _col55\n                        input vertices:\n                          1 Map 26\n                        Statistics: Num rows: 16812348 Data size: 1256983040 Basic stats: COMPLETE Column stats: NONE\n                        Map Join Operator\n                          condition map:\n                               Inner Join 0 to 1\n                          condition expressions:\n                            0 {_col1} {_col3} {_col4} {_col5} {_col6} {_col7} {_col10} {_col11} {_col18} {_col51} {_col52} {_col53} {_col54} {_col55}\n                            1 \n                          keys:\n                            0 _col22 (type: int)\n                            1 d_date_sk (type: int)\n                          outputColumnNames: _col1, _col3, _col4, _col5, _col6, _col7, _col10, _col11, _col18, _col51, _col52, _col53, _col54, _col55\n                          input vertices:\n                            1 Map 30\n                          Statistics: Num rows: 18493584 Data size: 1382681344 Basic stats: COMPLETE Column stats: NONE\n                          Map Join Operator\n                            condition map:\n                                 Inner Join 0 to 1\n                            condition expressions:\n                              0 {_col1} {_col3} {_col4} {_col5} {_col6} {_col7} {_col10} {_col11} {_col18} {_col51} {_col52} {_col53} {_col54}\n                              1 {d_year}\n                            keys:\n                              0 _col55 (type: int)\n                              1 d_date_sk (type: int)\n                            outputColumnNames: _col1, _col3, _col4, _col5, _col6, _col7, _col10, _col11, _col18, _col51, _col52, _col53, _col54, _col107\n                            input vertices:\n                              1 Map 31\n                            Statistics: Num rows: 20342942 Data size: 1520949504 Basic stats: COMPLETE Column stats: NONE\n                            Map Join Operator\n                              condition map:\n                                   Inner Join 0 to 1\n                              condition expressions:\n                                0 {_col1} {_col3} {_col4} {_col5} {_col6} {_col7} {_col10} {_col11} {_col18} {_col51} {_col52} {_col53} {_col107}\n                                1 {d_year}\n                              keys:\n                                0 _col54 (type: int)\n                                1 d_date_sk (type: int)\n                              outputColumnNames: _col1, _col3, _col4, _col5, _col6, _col7, _col10, _col11, _col18, _col51, _col52, _col53, _col107, _col138\n                              input vertices:\n                                1 Map 24\n                              Statistics: Num rows: 22377236 Data size: 1673044480 Basic stats: COMPLETE Column stats: NONE\n                              Map Join Operator\n                                condition map:\n                                     Inner Join 0 to 1\n                                condition expressions:\n                                  0 {_col1} {_col3} {_col4} {_col5} {_col7} {_col10} {_col11} {_col18} {_col51} {_col52} {_col53} {_col107} {_col138}\n                                  1 {s_store_name} {s_zip}\n                                keys:\n                                  0 _col6 (type: int)\n                                  1 s_store_sk (type: int)\n                                outputColumnNames: _col1, _col3, _col4, _col5, _col7, _col10, _col11, _col18, _col51, _col52, _col53, _col107, _col138, _col168, _col188\n                                input vertices:\n                                  1 Map 45\n                                Statistics: Num rows: 24614960 Data size: 1840348928 Basic stats: COMPLETE Column stats: NONE\n                                Map Join Operator\n                                  condition map:\n                                       Inner Join 0 to 1\n                                  condition expressions:\n                                    0 {_col1} {_col4} {_col5} {_col7} {_col10} {_col11} {_col18} {_col51} {_col52} {_col53} {_col107} {_col138} {_col168} {_col188}\n                                    1 {cd_marital_status}\n                                  keys:\n                                    0 _col3 (type: int)\n                                    1 cd_demo_sk (type: int)\n                                  outputColumnNames: _col1, _col4, _col5, _col7, _col10, _col11, _col18, _col51, _col52, _col53, _col107, _col138, _col168, _col188, _col197\n                                  input vertices:\n                                    1 Map 12\n                                  Statistics: Num rows: 27076456 Data size: 2024383872 Basic stats: COMPLETE Column stats: NONE\n                                  Map Join Operator\n                                    condition map:\n                                         Inner Join 0 to 1\n                                    condition expressions:\n                                      0 {_col1} {_col4} {_col5} {_col7} {_col10} {_col11} {_col18} {_col52} {_col53} {_col107} {_col138} {_col168} {_col188} {_col197}\n                                      1 {cd_marital_status}\n                                    keys:\n                                      0 _col51 (type: int)\n                                      1 cd_demo_sk (type: int)\n                                    outputColumnNames: _col1, _col4, _col5, _col7, _col10, _col11, _col18, _col52, _col53, _col107, _col138, _col168, _col188, _col197, _col209\n                                    input vertices:\n                                      1 Map 14\n                                    Statistics: Num rows: 29784102 Data size: 2226822400 Basic stats: COMPLETE Column stats: NONE\n                                    Map Join Operator\n                                      condition map:\n                                           Inner Join 0 to 1\n                                      condition expressions:\n                                        0 {_col1} {_col4} {_col5} {_col10} {_col11} {_col18} {_col52} {_col53} {_col107} {_col138} {_col168} {_col188} {_col197} {_col209}\n                                        1 \n                                      keys:\n                                        0 _col7 (type: int)\n                                        1 p_promo_sk (type: int)\n                                      outputColumnNames: _col1, _col4, _col5, _col10, _col11, _col18, _col52, _col53, _col107, _col138, _col168, _col188, _col197, _col209\n                                      input vertices:\n                                        1 Map 40\n                                      Statistics: Num rows: 32762512 Data size: 2449504768 Basic stats: COMPLETE Column stats: NONE\n                                      Map Join Operator\n                                        condition map:\n                                             Inner Join 0 to 1\n                                        condition expressions:\n                                          0 {_col1} {_col5} {_col10} {_col11} {_col18} {_col52} {_col53} {_col107} {_col138} {_col168} {_col188} {_col197} {_col209}\n                                          1 {hd_income_band_sk}\n                                        keys:\n                                          0 _col4 (type: int)\n                                          1 hd_demo_sk (type: int)\n                                        outputColumnNames: _col1, _col5, _col10, _col11, _col18, _col52, _col53, _col107, _col138, _col168, _col188, _col197, _col209, _col242\n                                        input vertices:\n                                          1 Map 16\n                                        Statistics: Num rows: 36038764 Data size: 2694455296 Basic stats: COMPLETE Column stats: NONE\n                                        Map Join Operator\n                                          condition map:\n                                               Inner Join 0 to 1\n                                          condition expressions:\n                                            0 {_col1} {_col5} {_col10} {_col11} {_col18} {_col53} {_col107} {_col138} {_col168} {_col188} {_col197} {_col209} {_col242}\n                                            1 {hd_income_band_sk}\n                                          keys:\n                                            0 _col52 (type: int)\n                                            1 hd_demo_sk (type: int)\n                                          outputColumnNames: _col1, _col5, _col10, _col11, _col18, _col53, _col107, _col138, _col168, _col188, _col197, _col209, _col242, _col250\n                                          input vertices:\n                                            1 Map 15\n                                          Statistics: Num rows: 39642640 Data size: 2963900928 Basic stats: COMPLETE Column stats: NONE\n                                          Map Join Operator\n                                            condition map:\n                                                 Inner Join 0 to 1\n                                            condition expressions:\n                                              0 {_col1} {_col10} {_col11} {_col18} {_col53} {_col107} {_col138} {_col168} {_col188} {_col197} {_col209} {_col242} {_col250}\n                                              1 {ca_street_number} {ca_street_name} {ca_city} {ca_zip}\n                                            keys:\n                                              0 _col5 (type: int)\n                                              1 ca_address_sk (type: int)\n                                            outputColumnNames: _col1, _col10, _col11, _col18, _col53, _col107, _col138, _col168, _col188, _col197, _col209, _col242, _col250, _col259, _col260, _col263, _col266\n                                            input vertices:\n                                              1 Map 39\n                                            Statistics: Num rows: 43606904 Data size: 3260291072 Basic stats: COMPLETE Column stats: NONE\n                                            Map Join Operator\n                                              condition map:\n                                                   Inner Join 0 to 1\n                                              condition expressions:\n                                                0 {_col1} {_col10} {_col11} {_col18} {_col107} {_col138} {_col168} {_col188} {_col197} {_col209} {_col242} {_col250} {_col259} {_col260} {_col263} {_col266}\n                                                1 {ca_street_number} {ca_street_name} {ca_city} {ca_zip}\n                                              keys:\n                                                0 _col53 (type: int)\n                                                1 ca_address_sk (type: int)\n                                              outputColumnNames: _col1, _col10, _col11, _col18, _col107, _col138, _col168, _col188, _col197, _col209, _col242, _col250, _col259, _col260, _col263, _col266, _col275, _col276, _col279, _col282\n                                              input vertices:\n                                                1 Map 43\n                                              Statistics: Num rows: 47967596 Data size: 3586320384 Basic stats: COMPLETE Column stats: NONE\n                                              Map Join Operator\n                                                condition map:\n                                                     Inner Join 0 to 1\n                                                condition expressions:\n                                                  0 {_col1} {_col10} {_col11} {_col18} {_col107} {_col138} {_col168} {_col188} {_col197} {_col209} {_col250} {_col259} {_col260} {_col263} {_col266} {_col275} {_col276} {_col279} {_col282}\n                                                  1 \n                                                keys:\n                                                  0 _col242 (type: int)\n                                                  1 ib_income_band_sk (type: int)\n                                                outputColumnNames: _col1, _col10, _col11, _col18, _col107, _col138, _col168, _col188, _col197, _col209, _col250, _col259, _col260, _col263, _col266, _col275, _col276, _col279, _col282\n                                                input vertices:\n                                                  1 Map 5\n                                                Statistics: Num rows: 52764356 Data size: 3944952576 Basic stats: COMPLETE Column stats: NONE\n                                                Map Join Operator\n                                                  condition map:\n                                                       Inner Join 0 to 1\n                                                  condition expressions:\n                                                    0 {_col1} {_col10} {_col11} {_col18} {_col107} {_col138} {_col168} {_col188} {_col197} {_col209} {_col259} {_col260} {_col263} {_col266} {_col275} {_col276} {_col279} {_col282}\n                                                    1 \n                                                  keys:\n                                                    0 _col250 (type: int)\n                                                    1 ib_income_band_sk (type: int)\n                                                  outputColumnNames: _col1, _col10, _col11, _col18, _col107, _col138, _col168, _col188, _col197, _col209, _col259, _col260, _col263, _col266, _col275, _col276, _col279, _col282\n                                                  input vertices:\n                                                    1 Map 32\n                                                  Statistics: Num rows: 58040792 Data size: 4339447808 Basic stats: COMPLETE Column stats: NONE\n                                                  Reduce Output Operator\n                                                    key expressions: _col1 (type: int)\n                                                    sort order: +\n                                                    Map-reduce partition columns: _col1 (type: int)\n                                                    Statistics: Num rows: 58040792 Data size: 4339447808 Basic stats: COMPLETE Column stats: NONE\n                                                    value expressions: _col10 (type: float), _col11 (type: float), _col18 (type: float), _col107 (type: int), _col138 (type: int), _col168 (type: string), _col188 (type: string), _col197 (type: string), _col209 (type: string), _col259 (type: string), _col260 (type: string), _col263 (type: string), _col266 (type: string), _col275 (type: string), _col276 (type: string), _col279 (type: string), _col282 (type: string)\n            Execution mode: vectorized\n        Map 29 \n            Map Operator Tree:\n                TableScan\n                  alias: store\n                  filterExpr: ((s_store_sk is not null and s_store_name is not null) and s_zip is not null) (type: boolean)\n                  Statistics: Num rows: 212 Data size: 405680 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ((s_store_sk is not null and s_store_name is not null) and s_zip is not null) (type: boolean)\n                    Statistics: Num rows: 27 Data size: 51666 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: s_store_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: s_store_sk (type: int)\n                      Statistics: Num rows: 27 Data size: 51666 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: s_store_name (type: string), s_zip (type: string)\n            Execution mode: vectorized\n        Map 3 \n            Map Operator Tree:\n                TableScan\n                  alias: promotion\n                  filterExpr: p_promo_sk is not null (type: boolean)\n                  Statistics: Num rows: 450 Data size: 530848 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: p_promo_sk is not null (type: boolean)\n                    Statistics: Num rows: 225 Data size: 265424 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: p_promo_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: p_promo_sk (type: int)\n                      Statistics: Num rows: 225 Data size: 265424 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 30 \n            Map Operator Tree:\n                TableScan\n                  alias: d1\n                  filterExpr: (d_date_sk is not null and (d_year = 2000)) (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (d_date_sk is not null and (d_year = 2000)) (type: boolean)\n                    Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: d_date_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: d_date_sk (type: int)\n                      Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: d_date_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n                      Group By Operator\n                        keys: _col0 (type: int)\n                        mode: hash\n                        outputColumnNames: _col0\n                        Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n                        Dynamic Partitioning Event Operator\n                          Target Input: store_sales\n                          Partition key expr: ss_sold_date_sk\n                          Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n                          Target column: ss_sold_date_sk\n                          Target Vertex: Map 11\n        Map 31 \n            Map Operator Tree:\n                TableScan\n                  alias: d2\n                  filterExpr: d_date_sk is not null (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: d_date_sk is not null (type: boolean)\n                    Statistics: Num rows: 36525 Data size: 40871475 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: d_date_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: d_date_sk (type: int)\n                      Statistics: Num rows: 36525 Data size: 40871475 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: d_year (type: int)\n            Execution mode: vectorized\n        Map 32 \n            Map Operator Tree:\n                TableScan\n                  alias: ib2\n                  filterExpr: ib_income_band_sk is not null (type: boolean)\n                  Statistics: Num rows: 20 Data size: 240 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ib_income_band_sk is not null (type: boolean)\n                    Statistics: Num rows: 10 Data size: 120 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: ib_income_band_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: ib_income_band_sk (type: int)\n                      Statistics: Num rows: 10 Data size: 120 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 33 \n            Map Operator Tree:\n                TableScan\n                  alias: catalog_returns\n                  filterExpr: (cr_item_sk is not null and cr_order_number is not null) (type: boolean)\n                  Statistics: Num rows: 28798881 Data size: 2942039156 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (cr_item_sk is not null and cr_order_number is not null) (type: boolean)\n                    Statistics: Num rows: 7199721 Data size: 735509865 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: cr_item_sk (type: int), cr_order_number (type: int)\n                      sort order: ++\n                      Map-reduce partition columns: cr_item_sk (type: int), cr_order_number (type: int)\n                      Statistics: Num rows: 7199721 Data size: 735509865 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: cr_refunded_cash (type: float), cr_reversed_charge (type: float), cr_store_credit (type: float)\n            Execution mode: vectorized\n        Map 34 \n            Map Operator Tree:\n                TableScan\n                  alias: item\n                  filterExpr: (((i_item_sk is not null and (i_color) IN ('maroon', 'burnished', 'dim', 'steel', 'navajo', 'chocolate')) and i_current_price BETWEEN 35 AND 45) and i_current_price BETWEEN 36 AND 50) (type: boolean)\n                  Statistics: Num rows: 48000 Data size: 68732712 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (((i_item_sk is not null and (i_color) IN ('maroon', 'burnished', 'dim', 'steel', 'navajo', 'chocolate')) and i_current_price BETWEEN 35 AND 45) and i_current_price BETWEEN 36 AND 50) (type: boolean)\n                    Statistics: Num rows: 3000 Data size: 4295794 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: i_item_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: i_item_sk (type: int)\n                      Statistics: Num rows: 3000 Data size: 4295794 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: i_current_price (type: float), i_color (type: string), i_product_name (type: string)\n            Execution mode: vectorized\n        Map 35 \n            Map Operator Tree:\n                TableScan\n                  alias: cd1\n                  filterExpr: cd_demo_sk is not null (type: boolean)\n                  Statistics: Num rows: 1920800 Data size: 718379200 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: cd_demo_sk is not null (type: boolean)\n                    Statistics: Num rows: 960400 Data size: 359189600 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: cd_demo_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: cd_demo_sk (type: int)\n                      Statistics: Num rows: 960400 Data size: 359189600 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: cd_marital_status (type: string)\n            Execution mode: vectorized\n        Map 36 \n            Map Operator Tree:\n                TableScan\n                  alias: ib1\n                  filterExpr: ib_income_band_sk is not null (type: boolean)\n                  Statistics: Num rows: 20 Data size: 240 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ib_income_band_sk is not null (type: boolean)\n                    Statistics: Num rows: 10 Data size: 120 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: ib_income_band_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: ib_income_band_sk (type: int)\n                      Statistics: Num rows: 10 Data size: 120 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 37 \n            Map Operator Tree:\n                TableScan\n                  alias: ib2\n                  filterExpr: ib_income_band_sk is not null (type: boolean)\n                  Statistics: Num rows: 20 Data size: 240 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ib_income_band_sk is not null (type: boolean)\n                    Statistics: Num rows: 10 Data size: 120 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: ib_income_band_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: ib_income_band_sk (type: int)\n                      Statistics: Num rows: 10 Data size: 120 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 38 \n            Map Operator Tree:\n                TableScan\n                  alias: cd2\n                  filterExpr: cd_demo_sk is not null (type: boolean)\n                  Statistics: Num rows: 1920800 Data size: 718379200 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: cd_demo_sk is not null (type: boolean)\n                    Statistics: Num rows: 960400 Data size: 359189600 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: cd_demo_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: cd_demo_sk (type: int)\n                      Statistics: Num rows: 960400 Data size: 359189600 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: cd_marital_status (type: string)\n            Execution mode: vectorized\n        Map 39 \n            Map Operator Tree:\n                TableScan\n                  alias: ad1\n                  filterExpr: ca_address_sk is not null (type: boolean)\n                  Statistics: Num rows: 800000 Data size: 811903688 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ca_address_sk is not null (type: boolean)\n                    Statistics: Num rows: 400000 Data size: 405951844 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: ca_address_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: ca_address_sk (type: int)\n                      Statistics: Num rows: 400000 Data size: 405951844 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: ca_street_number (type: string), ca_street_name (type: string), ca_city (type: string), ca_zip (type: string)\n            Execution mode: vectorized\n        Map 4 \n            Map Operator Tree:\n                TableScan\n                  alias: store_sales\n                  filterExpr: (((((((ss_item_sk is not null and ss_ticket_number is not null) and ss_customer_sk is not null) and ss_store_sk is not null) and ss_cdemo_sk is not null) and ss_promo_sk is not null) and ss_hdemo_sk is not null) and ss_addr_sk is not null) (type: boolean)\n                  Statistics: Num rows: 550076554 Data size: 47370018896 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (((((((ss_item_sk is not null and ss_ticket_number is not null) and ss_customer_sk is not null) and ss_store_sk is not null) and ss_cdemo_sk is not null) and ss_promo_sk is not null) and ss_hdemo_sk is not null) and ss_addr_sk is not null) (type: boolean)\n                    Statistics: Num rows: 2148737 Data size: 185039176 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: ss_item_sk (type: int), ss_ticket_number (type: int)\n                      sort order: ++\n                      Map-reduce partition columns: ss_item_sk (type: int), ss_ticket_number (type: int)\n                      Statistics: Num rows: 2148737 Data size: 185039176 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: ss_customer_sk (type: int), ss_cdemo_sk (type: int), ss_hdemo_sk (type: int), ss_addr_sk (type: int), ss_store_sk (type: int), ss_promo_sk (type: int), ss_wholesale_cost (type: float), ss_list_price (type: float), ss_coupon_amt (type: float), ss_sold_date_sk (type: int)\n            Execution mode: vectorized\n        Map 40 \n            Map Operator Tree:\n                TableScan\n                  alias: promotion\n                  filterExpr: p_promo_sk is not null (type: boolean)\n                  Statistics: Num rows: 450 Data size: 530848 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: p_promo_sk is not null (type: boolean)\n                    Statistics: Num rows: 225 Data size: 265424 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: p_promo_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: p_promo_sk (type: int)\n                      Statistics: Num rows: 225 Data size: 265424 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 41 \n            Map Operator Tree:\n                TableScan\n                  alias: d2\n                  filterExpr: d_date_sk is not null (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: d_date_sk is not null (type: boolean)\n                    Statistics: Num rows: 36525 Data size: 40871475 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: d_date_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: d_date_sk (type: int)\n                      Statistics: Num rows: 36525 Data size: 40871475 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: d_year (type: int)\n            Execution mode: vectorized\n        Map 42 \n            Map Operator Tree:\n                TableScan\n                  alias: d3\n                  filterExpr: d_date_sk is not null (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: d_date_sk is not null (type: boolean)\n                    Statistics: Num rows: 36525 Data size: 40871475 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: d_date_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: d_date_sk (type: int)\n                      Statistics: Num rows: 36525 Data size: 40871475 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: d_year (type: int)\n            Execution mode: vectorized\n        Map 43 \n            Map Operator Tree:\n                TableScan\n                  alias: ad2\n                  filterExpr: ca_address_sk is not null (type: boolean)\n                  Statistics: Num rows: 800000 Data size: 811903688 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ca_address_sk is not null (type: boolean)\n                    Statistics: Num rows: 400000 Data size: 405951844 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: ca_address_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: ca_address_sk (type: int)\n                      Statistics: Num rows: 400000 Data size: 405951844 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: ca_street_number (type: string), ca_street_name (type: string), ca_city (type: string), ca_zip (type: string)\n            Execution mode: vectorized\n        Map 44 \n            Map Operator Tree:\n                TableScan\n                  alias: d1\n                  filterExpr: (d_date_sk is not null and (d_year = 2001)) (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (d_date_sk is not null and (d_year = 2001)) (type: boolean)\n                    Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: d_date_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: d_date_sk (type: int)\n                      Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: d_date_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n                      Group By Operator\n                        keys: _col0 (type: int)\n                        mode: hash\n                        outputColumnNames: _col0\n                        Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n                        Dynamic Partitioning Event Operator\n                          Target Input: store_sales\n                          Partition key expr: ss_sold_date_sk\n                          Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n                          Target column: ss_sold_date_sk\n                          Target Vertex: Map 4\n        Map 45 \n            Map Operator Tree:\n                TableScan\n                  alias: store\n                  filterExpr: ((s_store_sk is not null and s_store_name is not null) and s_zip is not null) (type: boolean)\n                  Statistics: Num rows: 212 Data size: 405680 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ((s_store_sk is not null and s_store_name is not null) and s_zip is not null) (type: boolean)\n                    Statistics: Num rows: 27 Data size: 51666 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: s_store_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: s_store_sk (type: int)\n                      Statistics: Num rows: 27 Data size: 51666 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: s_store_name (type: string), s_zip (type: string)\n            Execution mode: vectorized\n        Map 5 \n            Map Operator Tree:\n                TableScan\n                  alias: ib1\n                  filterExpr: ib_income_band_sk is not null (type: boolean)\n                  Statistics: Num rows: 20 Data size: 240 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ib_income_band_sk is not null (type: boolean)\n                    Statistics: Num rows: 10 Data size: 120 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: ib_income_band_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: ib_income_band_sk (type: int)\n                      Statistics: Num rows: 10 Data size: 120 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 6 \n            Map Operator Tree:\n                TableScan\n                  alias: catalog_sales\n                  filterExpr: (cs_item_sk is not null and cs_order_number is not null) (type: boolean)\n                  Statistics: Num rows: 286549727 Data size: 37743959324 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (cs_item_sk is not null and cs_order_number is not null) (type: boolean)\n                    Statistics: Num rows: 71637432 Data size: 9435989863 Basic stats: COMPLETE Column stats: NONE\n                    Map Join Operator\n                      condition map:\n                           Inner Join 0 to 1\n                      condition expressions:\n                        0 {cs_item_sk} {cs_ext_list_price}\n                        1 {cr_refunded_cash} {cr_reversed_charge} {cr_store_credit}\n                      keys:\n                        0 cs_item_sk (type: int), cs_order_number (type: int)\n                        1 cr_item_sk (type: int), cr_order_number (type: int)\n                      outputColumnNames: _col14, _col24, _col59, _col60, _col61\n                      input vertices:\n                        1 Map 21\n                      Statistics: Num rows: 78801176 Data size: 10379589632 Basic stats: COMPLETE Column stats: NONE\n                      Select Operator\n                        expressions: _col14 (type: int), _col24 (type: float), _col59 (type: float), _col60 (type: float), _col61 (type: float)\n                        outputColumnNames: _col14, _col24, _col59, _col60, _col61\n                        Statistics: Num rows: 78801176 Data size: 10379589632 Basic stats: COMPLETE Column stats: NONE\n                        Group By Operator\n                          aggregations: sum(_col24), sum(((_col59 + _col60) + _col61))\n                          keys: _col14 (type: int)\n                          mode: hash\n                          outputColumnNames: _col0, _col1, _col2\n                          Statistics: Num rows: 78801176 Data size: 10379589632 Basic stats: COMPLETE Column stats: NONE\n                          Reduce Output Operator\n                            key expressions: _col0 (type: int)\n                            sort order: +\n                            Map-reduce partition columns: _col0 (type: int)\n                            Statistics: Num rows: 78801176 Data size: 10379589632 Basic stats: COMPLETE Column stats: NONE\n                            value expressions: _col1 (type: double), _col2 (type: double)\n            Execution mode: vectorized\n        Reducer 10 \n            Reduce Operator Tree:\n              Select Operator\n                expressions: KEY.reducesinkkey0 (type: string), KEY.reducesinkkey1 (type: string), VALUE._col0 (type: string), VALUE._col1 (type: string), VALUE._col2 (type: string), VALUE._col3 (type: string), VALUE._col4 (type: string), VALUE._col5 (type: string), VALUE._col6 (type: string), VALUE._col7 (type: string), VALUE._col8 (type: string), 2000 (type: int), VALUE._col10 (type: bigint), VALUE._col11 (type: double), VALUE._col12 (type: double), VALUE._col13 (type: double), VALUE._col14 (type: double), VALUE._col15 (type: double), VALUE._col16 (type: double), 2001 (type: int), KEY.reducesinkkey2 (type: bigint)\n                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20\n                Statistics: Num rows: 182888 Data size: 13673711 Basic stats: COMPLETE Column stats: NONE\n                File Output Operator\n                  compressed: false\n                  Statistics: Num rows: 182888 Data size: 13673711 Basic stats: COMPLETE Column stats: NONE\n                  table:\n                      input format: org.apache.hadoop.mapred.TextInputFormat\n                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\n                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe\n            Execution mode: vectorized\n        Reducer 19 \n            Reduce Operator Tree:\n              Join Operator\n                condition map:\n                     Inner Join 0 to 1\n                     Inner Join 0 to 2\n                condition expressions:\n                  0 {VALUE._col9} {VALUE._col10} {VALUE._col17} {VALUE._col106} {VALUE._col137} {VALUE._col167} {VALUE._col187} {VALUE._col196} {VALUE._col208} {VALUE._col258} {VALUE._col259} {VALUE._col262} {VALUE._col265} {VALUE._col274} {VALUE._col275} {VALUE._col278} {VALUE._col281}\n                  1 {KEY.reducesinkkey0} {VALUE._col4} {VALUE._col16} {VALUE._col20}\n                  2 \n                outputColumnNames: _col10, _col11, _col18, _col107, _col138, _col168, _col188, _col197, _col209, _col259, _col260, _col263, _col266, _col275, _col276, _col279, _col282, _col301, _col306, _col318, _col322\n                Statistics: Num rows: 127689744 Data size: 9546785792 Basic stats: COMPLETE Column stats: NONE\n                Filter Operator\n                  predicate: ((((_col197 <> _col209) and (_col318) IN ('maroon', 'burnished', 'dim', 'steel', 'navajo', 'chocolate')) and _col306 BETWEEN 35 AND 45) and _col306 BETWEEN 36 AND 50) (type: boolean)\n                  Statistics: Num rows: 15961218 Data size: 1193348224 Basic stats: COMPLETE Column stats: NONE\n                  Select Operator\n                    expressions: _col322 (type: string), _col301 (type: int), _col168 (type: string), _col188 (type: string), _col259 (type: string), _col260 (type: string), _col263 (type: string), _col266 (type: string), _col275 (type: string), _col276 (type: string), _col279 (type: string), _col282 (type: string), 2001 (type: int), _col107 (type: int), _col138 (type: int), _col10 (type: float), _col11 (type: float), _col18 (type: float)\n                    outputColumnNames: _col322, _col301, _col168, _col188, _col259, _col260, _col263, _col266, _col275, _col276, _col279, _col282, _col76, _col107, _col138, _col10, _col11, _col18\n                    Statistics: Num rows: 15961218 Data size: 1193348224 Basic stats: COMPLETE Column stats: NONE\n                    Group By Operator\n                      aggregations: count(), sum(_col10), sum(_col11), sum(_col18)\n                      keys: _col322 (type: string), _col301 (type: int), _col168 (type: string), _col188 (type: string), _col259 (type: string), _col260 (type: string), _col263 (type: string), _col266 (type: string), _col275 (type: string), _col276 (type: string), _col279 (type: string), _col282 (type: string), _col76 (type: int), _col107 (type: int), _col138 (type: int)\n                      mode: hash\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18\n                      Statistics: Num rows: 15961218 Data size: 1193348224 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: string), _col1 (type: int), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: int), _col13 (type: int), _col14 (type: int)\n                        sort order: +++++++++++++++\n                        Map-reduce partition columns: _col0 (type: string), _col1 (type: int), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: int), _col13 (type: int), _col14 (type: int)\n                        Statistics: Num rows: 15961218 Data size: 1193348224 Basic stats: COMPLETE Column stats: NONE\n                        value expressions: _col15 (type: bigint), _col16 (type: double), _col17 (type: double), _col18 (type: double)\n        Reducer 20 \n            Reduce Operator Tree:\n              Group By Operator\n                aggregations: count(VALUE._col0), sum(VALUE._col1), sum(VALUE._col2), sum(VALUE._col3)\n                keys: KEY._col0 (type: string), KEY._col1 (type: int), KEY._col2 (type: string), KEY._col3 (type: string), KEY._col4 (type: string), KEY._col5 (type: string), KEY._col6 (type: string), KEY._col7 (type: string), KEY._col8 (type: string), KEY._col9 (type: string), KEY._col10 (type: string), KEY._col11 (type: string), KEY._col12 (type: int), KEY._col13 (type: int), KEY._col14 (type: int)\n                mode: mergepartial\n                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18\n                Statistics: Num rows: 7980609 Data size: 596674112 Basic stats: COMPLETE Column stats: NONE\n                Select Operator\n                  expressions: _col1 (type: int), _col12 (type: int), _col15 (type: bigint), _col16 (type: double), _col17 (type: double), _col18 (type: double), _col2 (type: string), _col3 (type: string)\n                  outputColumnNames: _col1, _col12, _col15, _col16, _col17, _col18, _col2, _col3\n                  Statistics: Num rows: 7980609 Data size: 596674112 Basic stats: COMPLETE Column stats: NONE\n                  Reduce Output Operator\n                    key expressions: _col1 (type: int), _col2 (type: string), _col3 (type: string)\n                    sort order: +++\n                    Map-reduce partition columns: _col1 (type: int), _col2 (type: string), _col3 (type: string)\n                    Statistics: Num rows: 7980609 Data size: 596674112 Basic stats: COMPLETE Column stats: NONE\n                    value expressions: _col12 (type: int), _col15 (type: bigint), _col16 (type: double), _col17 (type: double), _col18 (type: double)\n        Reducer 23 \n            Reduce Operator Tree:\n              Group By Operator\n                aggregations: sum(VALUE._col0), sum(VALUE._col1)\n                keys: KEY._col0 (type: int)\n                mode: mergepartial\n                outputColumnNames: _col0, _col1, _col2\n                Statistics: Num rows: 39400588 Data size: 5189794816 Basic stats: COMPLETE Column stats: NONE\n                Filter Operator\n                  predicate: (_col1 > (2 * _col2)) (type: boolean)\n                  Statistics: Num rows: 13133529 Data size: 1729931561 Basic stats: COMPLETE Column stats: NONE\n                  Select Operator\n                    expressions: _col0 (type: int)\n                    outputColumnNames: _col0\n                    Statistics: Num rows: 13133529 Data size: 1729931561 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: _col0 (type: int)\n                      sort order: +\n                      Map-reduce partition columns: _col0 (type: int)\n                      Statistics: Num rows: 13133529 Data size: 1729931561 Basic stats: COMPLETE Column stats: NONE\n        Reducer 7 \n            Reduce Operator Tree:\n              Group By Operator\n                aggregations: sum(VALUE._col0), sum(VALUE._col1)\n                keys: KEY._col0 (type: int)\n                mode: mergepartial\n                outputColumnNames: _col0, _col1, _col2\n                Statistics: Num rows: 39400588 Data size: 5189794816 Basic stats: COMPLETE Column stats: NONE\n                Filter Operator\n                  predicate: (_col1 > (2 * _col2)) (type: boolean)\n                  Statistics: Num rows: 13133529 Data size: 1729931561 Basic stats: COMPLETE Column stats: NONE\n                  Select Operator\n                    expressions: _col0 (type: int)\n                    outputColumnNames: _col0\n                    Statistics: Num rows: 13133529 Data size: 1729931561 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: _col0 (type: int)\n                      sort order: +\n                      Map-reduce partition columns: _col0 (type: int)\n                      Statistics: Num rows: 13133529 Data size: 1729931561 Basic stats: COMPLETE Column stats: NONE\n        Reducer 8 \n            Reduce Operator Tree:\n              Join Operator\n                condition map:\n                     Inner Join 0 to 1\n                     Inner Join 0 to 2\n                condition expressions:\n                  0 {VALUE._col9} {VALUE._col10} {VALUE._col17} {VALUE._col106} {VALUE._col137} {VALUE._col167} {VALUE._col187} {VALUE._col196} {VALUE._col208} {VALUE._col258} {VALUE._col259} {VALUE._col262} {VALUE._col265} {VALUE._col274} {VALUE._col275} {VALUE._col278} {VALUE._col281}\n                  1 {KEY.reducesinkkey0} {VALUE._col4} {VALUE._col16} {VALUE._col20}\n                  2 \n                outputColumnNames: _col10, _col11, _col18, _col107, _col138, _col168, _col188, _col197, _col209, _col259, _col260, _col263, _col266, _col275, _col276, _col279, _col282, _col301, _col306, _col318, _col322\n                Statistics: Num rows: 127689744 Data size: 9546785792 Basic stats: COMPLETE Column stats: NONE\n                Filter Operator\n                  predicate: ((((_col197 <> _col209) and (_col318) IN ('maroon', 'burnished', 'dim', 'steel', 'navajo', 'chocolate')) and _col306 BETWEEN 35 AND 45) and _col306 BETWEEN 36 AND 50) (type: boolean)\n                  Statistics: Num rows: 15961218 Data size: 1193348224 Basic stats: COMPLETE Column stats: NONE\n                  Select Operator\n                    expressions: _col322 (type: string), _col301 (type: int), _col168 (type: string), _col188 (type: string), _col259 (type: string), _col260 (type: string), _col263 (type: string), _col266 (type: string), _col275 (type: string), _col276 (type: string), _col279 (type: string), _col282 (type: string), 2000 (type: int), _col107 (type: int), _col138 (type: int), _col10 (type: float), _col11 (type: float), _col18 (type: float)\n                    outputColumnNames: _col322, _col301, _col168, _col188, _col259, _col260, _col263, _col266, _col275, _col276, _col279, _col282, _col76, _col107, _col138, _col10, _col11, _col18\n                    Statistics: Num rows: 15961218 Data size: 1193348224 Basic stats: COMPLETE Column stats: NONE\n                    Group By Operator\n                      aggregations: count(), sum(_col10), sum(_col11), sum(_col18)\n                      keys: _col322 (type: string), _col301 (type: int), _col168 (type: string), _col188 (type: string), _col259 (type: string), _col260 (type: string), _col263 (type: string), _col266 (type: string), _col275 (type: string), _col276 (type: string), _col279 (type: string), _col282 (type: string), _col76 (type: int), _col107 (type: int), _col138 (type: int)\n                      mode: hash\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18\n                      Statistics: Num rows: 15961218 Data size: 1193348224 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: string), _col1 (type: int), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: int), _col13 (type: int), _col14 (type: int)\n                        sort order: +++++++++++++++\n                        Map-reduce partition columns: _col0 (type: string), _col1 (type: int), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: int), _col13 (type: int), _col14 (type: int)\n                        Statistics: Num rows: 15961218 Data size: 1193348224 Basic stats: COMPLETE Column stats: NONE\n                        value expressions: _col15 (type: bigint), _col16 (type: double), _col17 (type: double), _col18 (type: double)\n        Reducer 9 \n            Reduce Operator Tree:\n              Group By Operator\n                aggregations: count(VALUE._col0), sum(VALUE._col1), sum(VALUE._col2), sum(VALUE._col3)\n                keys: KEY._col0 (type: string), KEY._col1 (type: int), KEY._col2 (type: string), KEY._col3 (type: string), KEY._col4 (type: string), KEY._col5 (type: string), KEY._col6 (type: string), KEY._col7 (type: string), KEY._col8 (type: string), KEY._col9 (type: string), KEY._col10 (type: string), KEY._col11 (type: string), KEY._col12 (type: int), KEY._col13 (type: int), KEY._col14 (type: int)\n                mode: mergepartial\n                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18\n                Statistics: Num rows: 7980609 Data size: 596674112 Basic stats: COMPLETE Column stats: NONE\n                Select Operator\n                  expressions: _col0 (type: string), _col1 (type: int), _col10 (type: string), _col11 (type: string), _col12 (type: int), _col15 (type: bigint), _col16 (type: double), _col17 (type: double), _col18 (type: double), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string)\n                  outputColumnNames: _col0, _col1, _col10, _col11, _col12, _col15, _col16, _col17, _col18, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9\n                  Statistics: Num rows: 7980609 Data size: 596674112 Basic stats: COMPLETE Column stats: NONE\n                  Map Join Operator\n                    condition map:\n                         Inner Join 0 to 1\n                    condition expressions:\n                      0 {_col0} {_col2} {_col3} {_col4} {_col5} {_col6} {_col7} {_col8} {_col9} {_col10} {_col11} {_col12} {_col15} {_col16} {_col17} {_col18}\n                      1 {_col2} {_col3} {_col12} {_col15} {_col16} {_col17} {_col18}\n                    keys:\n                      0 _col1 (type: int), _col2 (type: string), _col3 (type: string)\n                      1 _col1 (type: int), _col2 (type: string), _col3 (type: string)\n                    outputColumnNames: _col0, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col15, _col16, _col17, _col18, _col21, _col22, _col31, _col34, _col35, _col36, _col37\n                    input vertices:\n                      1 Reducer 20\n                    Statistics: Num rows: 8778670 Data size: 656341568 Basic stats: COMPLETE Column stats: NONE\n                    Filter Operator\n                      predicate: (((((_col12 = 2000) and (_col31 = 2001)) and (_col34 <= _col15)) and (_col2 = _col21)) and (_col3 = _col22)) (type: boolean)\n                      Statistics: Num rows: 182888 Data size: 13673711 Basic stats: COMPLETE Column stats: NONE\n                      Select Operator\n                        expressions: _col0 (type: string), _col2 (type: string), _col11 (type: string), _col15 (type: bigint), _col16 (type: double), _col17 (type: double), _col18 (type: double), _col35 (type: double), _col36 (type: double), _col37 (type: double), _col3 (type: string), _col34 (type: bigint), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string)\n                        outputColumnNames: _col0, _col1, _col10, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col2, _col20, _col3, _col4, _col5, _col6, _col7, _col8, _col9\n                        Statistics: Num rows: 182888 Data size: 13673711 Basic stats: COMPLETE Column stats: NONE\n                        Reduce Output Operator\n                          key expressions: _col0 (type: string), _col1 (type: string), _col20 (type: bigint)\n                          sort order: +++\n                          Statistics: Num rows: 182888 Data size: 13673711 Basic stats: COMPLETE Column stats: NONE\n                          value expressions: _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col12 (type: bigint), _col13 (type: double), _col14 (type: double), _col15 (type: double), _col16 (type: double), _col17 (type: double), _col18 (type: double)\n\n  Stage: Stage-0\n    Fetch Operator\n      limit: -1\n      Processor Tree:\n        ListSink\n{code}\n\nQuery\n{code}\nexplain  \nselect cs1.product_name ,cs1.store_name ,cs1.store_zip ,cs1.b_street_number ,cs1.b_streen_name ,cs1.b_city\n     ,cs1.b_zip ,cs1.c_street_number ,cs1.c_street_name ,cs1.c_city ,cs1.c_zip ,cs1.syear ,cs1.cnt\n     ,cs1.s1 ,cs1.s2 ,cs1.s3\n     ,cs2.s1 ,cs2.s2 ,cs2.s3 ,cs2.syear ,cs2.cnt\nfrom\n(select i_product_name as product_name ,i_item_sk as item_sk ,s_store_name as store_name\n     ,s_zip as store_zip ,ad1.ca_street_number as b_street_number ,ad1.ca_street_name as b_streen_name\n     ,ad1.ca_city as b_city ,ad1.ca_zip as b_zip ,ad2.ca_street_number as c_street_number\n     ,ad2.ca_street_name as c_street_name ,ad2.ca_city as c_city ,ad2.ca_zip as c_zip\n     ,d1.d_year as syear ,d2.d_year as fsyear ,d3.d_year as s2year ,count(*) as cnt\n     ,sum(ss_wholesale_cost) as s1 ,sum(ss_list_price) as s2 ,sum(ss_coupon_amt) as s3\n  FROM   store_sales\n        JOIN store_returns ON store_sales.ss_item_sk = store_returns.sr_item_sk and store_sales.ss_ticket_number = store_returns.sr_ticket_number\n        JOIN customer ON store_sales.ss_customer_sk = customer.c_customer_sk\n        JOIN date_dim d1 ON store_sales.ss_sold_date_sk = d1.d_date_sk\n        JOIN date_dim d2 ON customer.c_first_sales_date_sk = d2.d_date_sk \n        JOIN date_dim d3 ON customer.c_first_shipto_date_sk = d3.d_date_sk\n        JOIN store ON store_sales.ss_store_sk = store.s_store_sk\n        JOIN customer_demographics cd1 ON store_sales.ss_cdemo_sk= cd1.cd_demo_sk\n        JOIN customer_demographics cd2 ON customer.c_current_cdemo_sk = cd2.cd_demo_sk\n        JOIN promotion ON store_sales.ss_promo_sk = promotion.p_promo_sk\n        JOIN household_demographics hd1 ON store_sales.ss_hdemo_sk = hd1.hd_demo_sk\n        JOIN household_demographics hd2 ON customer.c_current_hdemo_sk = hd2.hd_demo_sk\n        JOIN customer_address ad1 ON store_sales.ss_addr_sk = ad1.ca_address_sk\n        JOIN customer_address ad2 ON customer.c_current_addr_sk = ad2.ca_address_sk\n        JOIN income_band ib1 ON hd1.hd_income_band_sk = ib1.ib_income_band_sk\n        JOIN income_band ib2 ON hd2.hd_income_band_sk = ib2.ib_income_band_sk\n        JOIN item ON store_sales.ss_item_sk = item.i_item_sk\n        JOIN\n (select cs_item_sk\n        ,sum(cs_ext_list_price) as sale,sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit) as refund\n  from catalog_sales JOIN catalog_returns\n  ON catalog_sales.cs_item_sk = catalog_returns.cr_item_sk\n    and catalog_sales.cs_order_number = catalog_returns.cr_order_number\n  group by cs_item_sk\n  having sum(cs_ext_list_price)>2*sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit)) cs_ui\nON store_sales.ss_item_sk = cs_ui.cs_item_sk\n  WHERE  \n         cd1.cd_marital_status <> cd2.cd_marital_status and\n         i_color in ('maroon','burnished','dim','steel','navajo','chocolate') and\n         i_current_price between 35 and 35 + 10 and\n         i_current_price between 35 + 1 and 35 + 15\ngroup by i_product_name ,i_item_sk ,s_store_name ,s_zip ,ad1.ca_street_number\n       ,ad1.ca_street_name ,ad1.ca_city ,ad1.ca_zip ,ad2.ca_street_number\n       ,ad2.ca_street_name ,ad2.ca_city ,ad2.ca_zip ,d1.d_year ,d2.d_year ,d3.d_year\n) cs1\nJOIN\n(select i_product_name as product_name ,i_item_sk as item_sk ,s_store_name as store_name\n     ,s_zip as store_zip ,ad1.ca_street_number as b_street_number ,ad1.ca_street_name as b_streen_name\n     ,ad1.ca_city as b_city ,ad1.ca_zip as b_zip ,ad2.ca_street_number as c_street_number\n     ,ad2.ca_street_name as c_street_name ,ad2.ca_city as c_city ,ad2.ca_zip as c_zip\n     ,d1.d_year as syear ,d2.d_year as fsyear ,d3.d_year as s2year ,count(*) as cnt\n     ,sum(ss_wholesale_cost) as s1 ,sum(ss_list_price) as s2 ,sum(ss_coupon_amt) as s3\n  FROM   store_sales\n        JOIN store_returns ON store_sales.ss_item_sk = store_returns.sr_item_sk and store_sales.ss_ticket_number = store_returns.sr_ticket_number\n        JOIN customer ON store_sales.ss_customer_sk = customer.c_customer_sk\n        JOIN date_dim d1 ON store_sales.ss_sold_date_sk = d1.d_date_sk\n        JOIN date_dim d2 ON customer.c_first_sales_date_sk = d2.d_date_sk \n        JOIN date_dim d3 ON customer.c_first_shipto_date_sk = d3.d_date_sk\n        JOIN store ON store_sales.ss_store_sk = store.s_store_sk\n        JOIN customer_demographics cd1 ON store_sales.ss_cdemo_sk= cd1.cd_demo_sk\n        JOIN customer_demographics cd2 ON customer.c_current_cdemo_sk = cd2.cd_demo_sk\n        JOIN promotion ON store_sales.ss_promo_sk = promotion.p_promo_sk\n        JOIN household_demographics hd1 ON store_sales.ss_hdemo_sk = hd1.hd_demo_sk\n        JOIN household_demographics hd2 ON customer.c_current_hdemo_sk = hd2.hd_demo_sk\n        JOIN customer_address ad1 ON store_sales.ss_addr_sk = ad1.ca_address_sk\n        JOIN customer_address ad2 ON customer.c_current_addr_sk = ad2.ca_address_sk\n        JOIN income_band ib1 ON hd1.hd_income_band_sk = ib1.ib_income_band_sk\n        JOIN income_band ib2 ON hd2.hd_income_band_sk = ib2.ib_income_band_sk\n        JOIN item ON store_sales.ss_item_sk = item.i_item_sk\n        JOIN\n (select cs_item_sk\n        ,sum(cs_ext_list_price) as sale,sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit) as refund\n  from catalog_sales JOIN catalog_returns\n  ON catalog_sales.cs_item_sk = catalog_returns.cr_item_sk\n    and catalog_sales.cs_order_number = catalog_returns.cr_order_number\n  group by cs_item_sk\n  having sum(cs_ext_list_price)>2*sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit)) cs_ui\nON store_sales.ss_item_sk = cs_ui.cs_item_sk\n  WHERE  \n         cd1.cd_marital_status <> cd2.cd_marital_status and\n         i_color in ('maroon','burnished','dim','steel','navajo','chocolate') and\n         i_current_price between 35 and 35 + 10 and\n         i_current_price between 35 + 1 and 35 + 15\ngroup by i_product_name ,i_item_sk ,s_store_name ,s_zip ,ad1.ca_street_number\n       ,ad1.ca_street_name ,ad1.ca_city ,ad1.ca_zip ,ad2.ca_street_number\n       ,ad2.ca_street_name ,ad2.ca_city ,ad2.ca_zip ,d1.d_year ,d2.d_year ,d3.d_year\n) cs2\nON cs1.item_sk=cs2.item_sk\nwhere \n     cs1.syear = 2000 and\n     cs2.syear = 2000 + 1 and\n     cs2.cnt <= cs1.cnt and\n     cs1.store_name = cs2.store_name and\n     cs1.store_zip = cs2.store_zip\norder by cs1.product_name ,cs1.store_name ,cs2.cnt\n{code}","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12671958","id":"12671958","filename":"query64_oom_trim.txt","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-09-30T04:35:17.638+0000","size":990826,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12671958/query64_oom_trim.txt"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Map join sizing done by auto.convert.join.noconditionaltask.size doesn't take into account Hash table overhead and results in OOM","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12744861/comment/14497425","id":"14497425","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"body":"Resolving since there is the Hybrid Hybrid grace hash table which should handle under estimates \"gracefully\"","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-04-16T01:20:59.529+0000","updated":"2015-04-16T01:20:59.529+0000"}],"maxResults":1,"total":1,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-8306/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i20mb3:"}}