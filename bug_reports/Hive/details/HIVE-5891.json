{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12681234","self":"https://issues.apache.org/jira/rest/api/2/issue/12681234","key":"HIVE-5891","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310843","id":"12310843","key":"HIVE","name":"Hive","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310843&avatarId=11935","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310843&avatarId=11935","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310843&avatarId=11935","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310843&avatarId=11935"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12324986","id":"12324986","description":"released","name":"0.13.0","archived":false,"released":true,"releaseDate":"2014-04-21"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2013-11-26T16:37:36.280+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Wed Dec 25 23:09:18 UTC 2013","customfield_12310420":"360499","customfield_12312320":null,"customfield_12310222":"10002_*:*_2_*:*_120982125_*|*_1_*:*_2_*:*_2431331106_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2013-12-25T23:09:18.568+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-5891/watchers","watchCount":3,"isWatching":false},"created":"2013-11-26T10:10:45.376+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"3.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12324312","id":"12324312","description":"released","name":"0.12.0","archived":false,"released":true,"releaseDate":"2013-10-15"}],"issuelinks":[{"id":"12379051","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12379051","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12656770","key":"HIVE-4827","self":"https://issues.apache.org/jira/rest/api/2/issue/12656770","fields":{"summary":"Merge a Map-only task to its child task","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype","name":"Improvement","subtask":false,"avatarId":21140}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunrui","name":"sunrui","key":"sunrui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sun Rui","active":true,"timeZone":"Asia/Shanghai"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2013-12-25T23:09:18.601+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312586","id":"12312586","name":"Query Processor","description":"Tracks issues dealing with query processing."}],"timeoriginalestimate":null,"description":"Use the following test case with HIVE 0.12:\n\n{code:sql}\ncreate table src(key int, value string);\nload data local inpath 'src/data/files/kv1.txt' overwrite into table src;\nselect * from (\n  select c.key from\n    (select a.key from src a join src b on a.key=b.key group by a.key) tmp\n    join src c on tmp.key=c.key\n  union all\n  select c.key from\n    (select a.key from src a join src b on a.key=b.key group by a.key) tmp\n    join src c on tmp.key=c.key\n) x;\n{code}\n\nWe will get a NullPointerException from Union Operator:\n\n{noformat}\njava.lang.RuntimeException: org.apache.hadoop.hive.ql.metadata.HiveException: Hive Runtime Error while processing row {\"_col0\":0}\n\tat org.apache.hadoop.hive.ql.exec.mr.ExecMapper.map(ExecMapper.java:175)\n\tat org.apache.hadoop.mapred.MapRunner.run(MapRunner.java:50)\n\tat org.apache.hadoop.mapred.MapTask.runOldMapper(MapTask.java:436)\n\tat org.apache.hadoop.mapred.MapTask.run(MapTask.java:372)\n\tat org.apache.hadoop.mapred.LocalJobRunner$Job.run(LocalJobRunner.java:212)\nCaused by: org.apache.hadoop.hive.ql.metadata.HiveException: Hive Runtime Error while processing row {\"_col0\":0}\n\tat org.apache.hadoop.hive.ql.exec.MapOperator.process(MapOperator.java:544)\n\tat org.apache.hadoop.hive.ql.exec.mr.ExecMapper.map(ExecMapper.java:157)\n\t... 4 more\nCaused by: java.lang.NullPointerException\n\tat org.apache.hadoop.hive.ql.exec.UnionOperator.processOp(UnionOperator.java:120)\n\tat org.apache.hadoop.hive.ql.exec.Operator.process(Operator.java:504)\n\tat org.apache.hadoop.hive.ql.exec.Operator.forward(Operator.java:842)\n\tat org.apache.hadoop.hive.ql.exec.SelectOperator.processOp(SelectOperator.java:88)\n\tat org.apache.hadoop.hive.ql.exec.Operator.process(Operator.java:504)\n\tat org.apache.hadoop.hive.ql.exec.Operator.forward(Operator.java:842)\n\tat org.apache.hadoop.hive.ql.exec.CommonJoinOperator.genUniqueJoinObject(CommonJoinOperator.java:652)\n\tat org.apache.hadoop.hive.ql.exec.CommonJoinOperator.genUniqueJoinObject(CommonJoinOperator.java:655)\n\tat org.apache.hadoop.hive.ql.exec.CommonJoinOperator.checkAndGenObject(CommonJoinOperator.java:758)\n\tat org.apache.hadoop.hive.ql.exec.MapJoinOperator.processOp(MapJoinOperator.java:220)\n\tat org.apache.hadoop.hive.ql.exec.Operator.process(Operator.java:504)\n\tat org.apache.hadoop.hive.ql.exec.Operator.forward(Operator.java:842)\n\tat org.apache.hadoop.hive.ql.exec.TableScanOperator.processOp(TableScanOperator.java:91)\n\tat org.apache.hadoop.hive.ql.exec.Operator.process(Operator.java:504)\n\tat org.apache.hadoop.hive.ql.exec.Operator.forward(Operator.java:842)\n\tat org.apache.hadoop.hive.ql.exec.MapOperator.process(MapOperator.java:534)\n\t... 5 more\n{noformat}\n  \nThe root cause is in CommonJoinTaskDispatcher.mergeMapJoinTaskIntoItsChildMapRedTask().\n{noformat}\n  +--------------+      +--------------+\n  | MapJoin task |      | MapJoin task |\n  +--------------+      +--------------+\n             \\             /\n              \\           /\n             +--------------+\n             |  Union task  |\n             +--------------+\n{noformat}             \nCommonJoinTaskDispatcher merges the two MapJoin tasks into their common child: Union task. The two MapJoin tasks have the same alias name for their big tables: $INTNAME, which is the name of the temporary table of a join stream. The aliasToWork map uses alias as key, so eventually only the MapJoin operator tree of one MapJoin task is saved into the aliasToWork map of the Union task, while the MapJoin operator tree of another MapJoin task is lost. As a result, Union operator won't be initialized because not all of its parents gets intialized (The Union operator itself indicates it has two parents, but actually it has only 1 parent because another parent is lost).\n\nThis issue does not exist in HIVE 0.11 and thus is a regression bug in HIVE 0.12.\n\nThe propsed solution is to use the query ID as prefix for the join stream name to avoid conflict and add sanity check code in CommonJoinTaskDispatcher that merge of a MapJoin task into its child MapRed task is skipped if there is any alias conflict. Please review the patch. I am not sure if the patch properly handles the case of DemuxOperator.\n\nBTW, anyone knows the origin of \"$INTNAME\"? it is so confusing, maybe we can replace it with a meaningful name.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12615813","id":"12615813","filename":"HIVE-5891.1.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunrui","name":"sunrui","key":"sunrui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sun Rui","active":true,"timeZone":"Asia/Shanghai"},"created":"2013-11-26T10:23:51.154+0000","size":3018,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12615813/HIVE-5891.1.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12619813","id":"12619813","filename":"HIVE-5891.2.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunrui","name":"sunrui","key":"sunrui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sun Rui","active":true,"timeZone":"Asia/Shanghai"},"created":"2013-12-20T13:04:16.973+0000","size":27406,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12619813/HIVE-5891.2.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12620115","id":"12620115","filename":"HIVE-5891.3.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunrui","name":"sunrui","key":"sunrui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sun Rui","active":true,"timeZone":"Asia/Shanghai"},"created":"2013-12-23T03:13:03.883+0000","size":35184,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12620115/HIVE-5891.3.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"360798","customfield_12312823":null,"summary":"Alias conflict when merging multiple mapjoin tasks into their common child mapred task","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunrui","name":"sunrui","key":"sunrui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sun Rui","active":true,"timeZone":"Asia/Shanghai"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunrui","name":"sunrui","key":"sunrui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sun Rui","active":true,"timeZone":"Asia/Shanghai"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12681234/comment/13832744","id":"13832744","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"body":"[~sunrui] Can you add your test case as .q file in patch. You need to set hive.auto.convert.join=true; to effect map-join in .q tests. Also, I think it may result in lot of update to .q.out files since we may now use different alias than $INTNAME which appears in .q.out files.\nAlso, [~yhuai] can you take a look to see if this has any affect on Demux Operator. I don't think so, but you ll know better.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-11-26T16:37:36.280+0000","updated":"2013-11-26T16:37:36.280+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12681234/comment/13832779","id":"13832779","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yhuai","name":"yhuai","key":"yhuai","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=yhuai&avatarId=23452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yhuai&avatarId=23452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yhuai&avatarId=23452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yhuai&avatarId=23452"},"displayName":"Yin Huai","active":true,"timeZone":"America/New_York"},"body":"[~sunrui] What will the plan of the query in the description look like with your patch? Will MapJoins and the Union be executed in the same job? Seems those two tmps appearing in the same position in those MapJoins triggered the bug. I was thinking if ids in those two QBJoinTrees are the same? If so, aliases of those two tables are probably still the same. 0.11 does not have this bug because it does not use a single job to evaluate those MapJoins and the Union.\n\nI do not think it will affect Demux since Demux is at the reducer side.\n\nbtw, I also think \"$INTNAME\" is confusing... Seems it is used to represent those intermediate results. I'd like a name which has a meaningful part which can represent how this intermediate results are generated and a unique part to address the issue shown in this jira.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yhuai","name":"yhuai","key":"yhuai","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=yhuai&avatarId=23452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yhuai&avatarId=23452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yhuai&avatarId=23452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yhuai&avatarId=23452"},"displayName":"Yin Huai","active":true,"timeZone":"America/New_York"},"created":"2013-11-26T17:28:07.348+0000","updated":"2013-11-26T17:28:07.348+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12681234/comment/13833386","id":"13833386","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunrui","name":"sunrui","key":"sunrui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sun Rui","active":true,"timeZone":"Asia/Shanghai"},"body":"Yin Huai  The following is the explain output for the merged task:\n{panel}\n  Stage: Stage-4\n    Map Reduce\n      Alias -> Map Operator Tree:\n        null-subquery1:x-subquery1:$INTNAME \n            Map Join Operator\n              condition map:\n                   Inner Join 0 to 1\n              condition expressions:\n                0 \n                1 {key}\n              handleSkewJoin: false\n              keys:\n                0 [Column[_col0]]\n                1 [Column[key]]\n              outputColumnNames: _col1\n              Position of Big Table: 0\n              Select Operator\n                expressions:\n                      expr: _col1\n                      type: int\n                outputColumnNames: _col0\n                Union\n                  Select Operator\n                    expressions:\n                          expr: _col0\n                          type: int\n                    outputColumnNames: _col0\n                    File Output Operator\n                      compressed: false\n                      GlobalTableId: 0\n                      table:\n                          input format: org.apache.hadoop.mapred.TextInputFormat\n                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\n        null-subquery2:x-subquery2:$INTNAME \n            Map Join Operator\n              condition map:\n                   Inner Join 0 to 1\n              condition expressions:\n                0 \n                1 {key}\n              handleSkewJoin: false\n              keys:\n                0 [Column[_col0]]\n                1 [Column[key]]\n              outputColumnNames: _col1\n              Position of Big Table: 0\n              Select Operator\n                expressions:\n                      expr: _col1\n                      type: int\n                outputColumnNames: _col0\n                Union\n                  Select Operator\n                    expressions:\n                          expr: _col0\n                          type: int\n                    outputColumnNames: _col0\n                    File Output Operator\n                      compressed: false\n                      GlobalTableId: 0\n                      table:\n                          input format: org.apache.hadoop.mapred.TextInputFormat\n                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\n      Local Work:\n        Map Reduce Local Work\n{panel}\n\nAs you can see, MapJoins and the Union are to be executed in the same job. The aliases are changed from \"$INTNAME\" to \"null-subquery1:x-subquery1:$INTNAME\" and \"null-subquery2:x-subquery2:$INTNAME\" respectively.\n\nI am thinking maybe we can change the intermediate alias name for a join stream from \"$INTNAME\" to \"$JOIN_INTERMEDIATE\". But which better name do you think for the case of DemuxOperator?\n\nAshutosh Chauhan : I will add the test case as a .q file when we finalize the patch:)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunrui","name":"sunrui","key":"sunrui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sun Rui","active":true,"timeZone":"Asia/Shanghai"},"created":"2013-11-27T02:46:59.177+0000","updated":"2013-11-27T02:46:59.177+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12681234/comment/13833409","id":"13833409","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yhuai","name":"yhuai","key":"yhuai","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=yhuai&avatarId=23452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yhuai&avatarId=23452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yhuai&avatarId=23452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yhuai&avatarId=23452"},"displayName":"Yin Huai","active":true,"timeZone":"America/New_York"},"body":"Thanks [~sunrui] for confirming the plan. Will \"JOIN_INTERMEDIATE\" give an impression that the dataset is an intermediate dataset during the processing of join instead of an input dataset?\n\nAlso, I am sorry that I did not get your question about DemuxOperator. Why DemuxOperator is related to this issue?  I think Demux is not related to your change since it is an operator at the reducer side. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yhuai","name":"yhuai","key":"yhuai","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=yhuai&avatarId=23452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yhuai&avatarId=23452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yhuai&avatarId=23452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yhuai&avatarId=23452"},"displayName":"Yin Huai","active":true,"timeZone":"America/New_York"},"created":"2013-11-27T03:28:21.358+0000","updated":"2013-11-27T03:28:21.358+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12681234/comment/13833477","id":"13833477","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunrui","name":"sunrui","key":"sunrui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sun Rui","active":true,"timeZone":"Asia/Shanghai"},"body":"[~yhuai] Yes, \"$JOIN_INTERMEDIATE\" is intended to name an intermediate dataset during the processing of join, not for input dataset. Is there anything wrong with my understanding?  \"$JOIN_STREAM\" is also another candidate maybe.\n\nGenMapRedUtils.java:\n{code}\n  private static boolean needsTagging(ReduceWork rWork) {\n    return rWork != null && (rWork.getReducer().getClass() == JoinOperator.class ||\n         rWork.getReducer().getClass() == DemuxOperator.class);\n  }\n\nsplitTasks():\n    if (needsTagging(cplan.getReduceWork())) {\n      String origStreamDesc;\n      Operator<? extends OperatorDesc> joinOp = cplan.getReduceWork().getReducer();\n      QBJoinTree joinTree = parseCtx.getJoinContext().get(joinOp);\n      if (joinTree != null) {\n        streamDesc = joinTree.getJoinStreamDesc();\n      } else {\n        streamDesc = \"$INTNAME\";\n      }\n{code}\n\nLook at the above piece of code, an alias is also needed when the reduce work starts\nwith a DemuxOperator. For this case, \"$INTNAME\" is still un-changed because I have no\nidea how DemuxOperator works.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunrui","name":"sunrui","key":"sunrui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sun Rui","active":true,"timeZone":"Asia/Shanghai"},"created":"2013-11-27T05:30:27.524+0000","updated":"2013-11-27T05:30:27.524+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12681234/comment/13833857","id":"13833857","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yhuai","name":"yhuai","key":"yhuai","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=yhuai&avatarId=23452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yhuai&avatarId=23452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yhuai&avatarId=23452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yhuai&avatarId=23452"},"displayName":"Yin Huai","active":true,"timeZone":"America/New_York"},"body":"I think the main problem is mergeMapJoinTaskIntoItsChildMapRedTask happens in the physical optimization phase which is after we break the plan using GenMapRedUtils. In this case \n{code}\nwhile (cplan.getMapWork().getAliasToWork().get(streamDesc) != null) {\n  streamDesc = origStreamDesc.concat(String.valueOf(++pos));\n}\n{\\code}\nwill not help because those MapJoins were ReduceJoins and they were in different MR jobs. Also, seems the pattern triggers the bug looks like this...\n{code}\n             Union or Join\n             /            \\\n            /              \\\n       MapJoin1             MapJoin1\n      /       \\            /        \\\n   MR1         small1     MR2        small2\n{\\code}\nIn here, MR1 and MR2 are two MapReduce jobs which generates intermediate datasets. small1 and small2 are two small tables. When mergeMapJoinTaskIntoItsChildMapRedTask attaches MapJoin1 and MapJoin2 to the Map phase of the job for Union or Join, MR1 and MR2 has the same alias... Actually, I am thinking using the id of a QB may be a good alias for an intermediate dataset. Thoughts?\n\nI think your change will not affect DemuxOperator because before GenMapRedUtils starts to work, Correlation Optimizer (HIVE-2206) has already generated the optimized plan. But let's give it a try. Can you try this query and see if there is anything wrong?\n{code:sql}\nset hive.optimize.correlation=true;\nSELECT tmp1.key\nFROM (SELECT key, value\n             FROM src\n            GROUP BY a.key, b.value) tmp1\nJOIN\n           (SELECT key, value\n            FROM src\n           GROUP BY key, value) tmp2\nON (tmp1.key=tmp2.key)\nJOIN\n         (SELECT key\n          FROM src\n          GROUP BY key) tmp3\nON (tmp2.key=tmp3.key)\nGROUP BY tmp1.key\n{code}\nThe plan should have three MR jobs. The first one is used to evaluate tmp1. The second is used to evaluate tmp2. And the third one is used to evaluate the join of tmp1, tmp2, and tmp3, and gby.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yhuai","name":"yhuai","key":"yhuai","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=yhuai&avatarId=23452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yhuai&avatarId=23452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yhuai&avatarId=23452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yhuai&avatarId=23452"},"displayName":"Yin Huai","active":true,"timeZone":"America/New_York"},"created":"2013-11-27T15:10:28.244+0000","updated":"2013-11-27T15:10:28.244+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12681234/comment/13834539","id":"13834539","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunrui","name":"sunrui","key":"sunrui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sun Rui","active":true,"timeZone":"Asia/Shanghai"},"body":"[~yhuai] I did try to use the QB id. Something like:\n{code}\n     streamDesc = parseCtx.getQB().getId() + \":$INTNAME\";\n{code}\nBut parseCtx.getQB().getId() returns null. I don't know the reason.\n\nActually, the id of QB is same as that of QBJoinTree. \n{code}\npublic class QBJoinTree implements Serializable{\n  ...\n  // The subquery identifier from QB.\n  // It is of the form topSubQuery:innerSubQuery:....:innerMostSubQuery\n  private String id;  \n{code}\nAnd QBJoinTree has a method getJoinStreamDesc() which is supposed to return the name for the intermediate dataset of the join operation. But this method is not used now. So I tried to use this method in my patch.\n\nI tried your query. There is nothing wrong with it in HIVE 0.12. Below is part of the plan:\n{code}\n  Stage: Stage-2\n    Map Reduce\n      Alias -> Map Operator Tree:\n        $INTNAME \n            Reduce Output Operator\n              key expressions:\n                    expr: _col0\n                    type: int\n              sort order: +\n              Map-reduce partition columns:\n                    expr: _col0\n                    type: int\n              tag: 0\n              value expressions:\n                    expr: _col0\n                    type: int\n        $INTNAME1 \n            Reduce Output Operator\n              key expressions:\n                    expr: _col0\n                    type: int\n              sort order: +\n              Map-reduce partition columns:\n                    expr: _col0\n                    type: int\n              tag: 1\n        tmp3:src \n          TableScan\n            alias: src\n            Select Operator\n              expressions:\n                    expr: key\n                    type: int\n              outputColumnNames: key\n              Group By Operator\n                bucketGroup: false\n                keys:\n                      expr: key\n                      type: int\n                mode: hash\n                outputColumnNames: _col0\n                Reduce Output Operator\n                  key expressions:\n                        expr: _col0\n                        type: int\n                  sort order: +\n                  Map-reduce partition columns:\n                        expr: _col0\n                        type: int\n                  tag: 2\n      Reduce Operator Tree:\n        Demux Operator\n          Mux Operator\n            Join Operator\n\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunrui","name":"sunrui","key":"sunrui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sun Rui","active":true,"timeZone":"Asia/Shanghai"},"created":"2013-11-28T06:19:04.471+0000","updated":"2013-11-28T06:19:04.471+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12681234/comment/13850246","id":"13850246","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunrui","name":"sunrui","key":"sunrui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sun Rui","active":true,"timeZone":"Asia/Shanghai"},"body":"[~yhuai] I think we can leave \"$INTNAME\" as is for this issue. Do you have any further comments? if no, I can prepare a new patch for review.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunrui","name":"sunrui","key":"sunrui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sun Rui","active":true,"timeZone":"Asia/Shanghai"},"created":"2013-12-17T08:40:45.111+0000","updated":"2013-12-17T08:40:45.111+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12681234/comment/13851007","id":"13851007","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yhuai","name":"yhuai","key":"yhuai","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=yhuai&avatarId=23452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yhuai&avatarId=23452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yhuai&avatarId=23452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yhuai&avatarId=23452"},"displayName":"Yin Huai","active":true,"timeZone":"America/New_York"},"body":"[~sunrui] Sorry for getting back late.\n\nI just took a look at QB. Seems it uses aliasToSubq to store the mapping from aliases to sub query expressions (QBExpr). Then, a QBExpr also stores a QB which represents the subquery QB. With this recursive way, all QBs for different levels of the query are stored. So, parseCtx.getQB() only gets the main query block and its id is null. I am not sure if we can get the right QB (the QB for a subquery) from GenMapRedUtils.splitTasks... Can you take a quick look to see if it is easy to get the correct QB? If so, we can use the id of a QB to replace INTNAME. If not, let's use joinTree.getId for those JoinOperators. Seems we do not need to take special care to DemuxOperator. Can you create a review request for your patch? I can leave comments on the review board.\n\nAlso, since QBJoinTree.getJoinStreamDesc is not used, let's delete it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yhuai","name":"yhuai","key":"yhuai","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=yhuai&avatarId=23452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yhuai&avatarId=23452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yhuai&avatarId=23452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yhuai&avatarId=23452"},"displayName":"Yin Huai","active":true,"timeZone":"America/New_York"},"created":"2013-12-17T22:29:47.364+0000","updated":"2013-12-17T22:29:47.364+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12681234/comment/13852894","id":"13852894","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunrui","name":"sunrui","key":"sunrui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sun Rui","active":true,"timeZone":"Asia/Shanghai"},"body":"[~yhuai] Thanks for your comments:)\nIt seems there is no quick way to get the correct QB for a join operator. However, since QBJoinTree's id is same as it's QB's id, we can just use QBJoinTree's id as QB's id. I found simliar usages in the HIVE code base.\n\nI note that something wrong in my first patch. parseCtx.getJoinContext() is used to map the join operator to its QBJoinTree, but this is not enough. A join operator may be a MapJoin or SMBJoin operator instead of a common join operator, so parseCtx.getMapJoinContext() and parseCtx.getSmbMapJoinContext() should also be checked.\n\nI have another thought. Maybe we can define a method in GenMapRedUtils. On each invokation, this method returns a unique intermediate name. Thus we don't have to use QB's id.\n\nWhat's your opinion?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunrui","name":"sunrui","key":"sunrui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sun Rui","active":true,"timeZone":"Asia/Shanghai"},"created":"2013-12-19T13:39:30.462+0000","updated":"2013-12-19T13:39:30.462+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12681234/comment/13853583","id":"13853583","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yhuai","name":"yhuai","key":"yhuai","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=yhuai&avatarId=23452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yhuai&avatarId=23452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yhuai&avatarId=23452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yhuai&avatarId=23452"},"displayName":"Yin Huai","active":true,"timeZone":"America/New_York"},"body":"i see. yes, seems getMapJoinContext and getSmbMapJoinContext can also have QBJoinTrees. I think it will be good to show meaningful aliases for those intermediate results. So, users can know where does an intermediate result come from. Since it is not easy to get the correct QB.id, I prefer to use QBJoinTree.id right now. Once this bug has been fixed, we can work on a followup jira to get rid of INTNAME. Also, I guess that we do not have an unit test to cover this bug. Can you add an test query in multiMapJoin2.q and comment the reason that we need this test? Thanks.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yhuai","name":"yhuai","key":"yhuai","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=yhuai&avatarId=23452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yhuai&avatarId=23452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yhuai&avatarId=23452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yhuai&avatarId=23452"},"displayName":"Yin Huai","active":true,"timeZone":"America/New_York"},"created":"2013-12-20T01:48:46.298+0000","updated":"2013-12-20T01:48:46.298+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12681234/comment/13853939","id":"13853939","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunrui","name":"sunrui","key":"sunrui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sun Rui","active":true,"timeZone":"Asia/Shanghai"},"body":"[~yhuai]\nI attached a new patch and created review board entry:\nhttps://reviews.apache.org/r/16422/","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunrui","name":"sunrui","key":"sunrui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sun Rui","active":true,"timeZone":"Asia/Shanghai"},"created":"2013-12-20T13:03:34.336+0000","updated":"2013-12-20T13:03:34.336+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12681234/comment/13853983","id":"13853983","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunrui","name":"sunrui","key":"sunrui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sun Rui","active":true,"timeZone":"Asia/Shanghai"},"body":"[~yhuai] This patch does not include modifications to the test output files of other impacted test queries. You can review the code change first. I will submit a new patch later.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunrui","name":"sunrui","key":"sunrui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sun Rui","active":true,"timeZone":"Asia/Shanghai"},"created":"2013-12-20T14:18:39.708+0000","updated":"2013-12-20T14:18:39.708+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12681234/comment/13854022","id":"13854022","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yhuai","name":"yhuai","key":"yhuai","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=yhuai&avatarId=23452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yhuai&avatarId=23452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yhuai&avatarId=23452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yhuai&avatarId=23452"},"displayName":"Yin Huai","active":true,"timeZone":"America/New_York"},"body":"Thanks [~sunrui]. LGTM. I left two minor comments on the review board.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yhuai","name":"yhuai","key":"yhuai","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=yhuai&avatarId=23452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yhuai&avatarId=23452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yhuai&avatarId=23452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yhuai&avatarId=23452"},"displayName":"Yin Huai","active":true,"timeZone":"America/New_York"},"created":"2013-12-20T14:55:21.711+0000","updated":"2013-12-20T14:55:21.711+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12681234/comment/13855353","id":"13855353","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunrui","name":"sunrui","key":"sunrui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sun Rui","active":true,"timeZone":"Asia/Shanghai"},"body":"[~yhuai]\nI updated the patch per your comments.\n\nI ran a round of ClientPostive test and found that q.out files of many test queries need to modified because \"$INTNAME\" in the explained plan would be changed to \"null:$INTNAME\". This is because the QB id for the top query is null. This makes no sense, so I enhanced the logic a little bit: don't use a QB id as prefix for the intermediate name if it is null.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunrui","name":"sunrui","key":"sunrui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sun Rui","active":true,"timeZone":"Asia/Shanghai"},"created":"2013-12-23T03:12:41.420+0000","updated":"2013-12-23T03:12:41.420+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12681234/comment/13856336","id":"13856336","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiveqa","name":"hiveqa","key":"hiveqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hiveqa&avatarId=17060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hiveqa&avatarId=17060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hiveqa&avatarId=17060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hiveqa&avatarId=17060"},"displayName":"Hive QA","active":true,"timeZone":"America/Chicago"},"body":"\n\n{color:green}Overall{color}: +1 all checks pass\n\nHere are the results of testing the latest attachment:\nhttps://issues.apache.org/jira/secure/attachment/12620115/HIVE-5891.3.patch\n\n{color:green}SUCCESS:{color} +1 4811 tests passed\n\nTest results: http://bigtop01.cloudera.org:8080/job/PreCommit-HIVE-Build/738/testReport\nConsole output: http://bigtop01.cloudera.org:8080/job/PreCommit-HIVE-Build/738/console\n\nMessages:\n{noformat}\nExecuting org.apache.hive.ptest.execution.PrepPhase\nExecuting org.apache.hive.ptest.execution.ExecutionPhase\nExecuting org.apache.hive.ptest.execution.ReportingPhase\n{noformat}\n\nThis message is automatically generated.\n\nATTACHMENT ID: 12620115","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiveqa","name":"hiveqa","key":"hiveqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hiveqa&avatarId=17060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hiveqa&avatarId=17060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hiveqa&avatarId=17060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hiveqa&avatarId=17060"},"displayName":"Hive QA","active":true,"timeZone":"America/Chicago"},"created":"2013-12-24T14:40:48.688+0000","updated":"2013-12-24T14:40:48.688+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12681234/comment/13856420","id":"13856420","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"body":"+1","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-12-24T18:43:52.862+0000","updated":"2013-12-24T18:43:52.862+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12681234/comment/13856676","id":"13856676","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"body":"Committed to trunk. Thanks, Sun!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-12-25T23:09:18.596+0000","updated":"2013-12-25T23:09:18.596+0000"}],"maxResults":18,"total":18,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-5891/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1q57r:"}}