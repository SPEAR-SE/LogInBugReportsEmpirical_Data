{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13140003","self":"https://issues.apache.org/jira/rest/api/2/issue/13140003","key":"HIVE-18763","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310843","id":"12310843","key":"HIVE","name":"Hive","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310843&avatarId=11935","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310843&avatarId=11935","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310843&avatarId=11935","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310843&avatarId=11935"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2018-02-22T16:17:55.895+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Wed Mar 14 00:49:43 UTC 2018","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-18763/watchers","watchCount":2,"isWatching":false},"created":"2018-02-21T20:30:11.559+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2018-03-14T00:49:50.924+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[],"timeoriginalestimate":null,"description":"When table and partition schema differ, non-vectorized MapOperator does row by row conversion from whatever is read to the table schema.\r\nVectorMapOperator is less consistent... it does the conversion as part of populating VRBs in row/serde modes (used to read e.g. text row-by-row or natively, and make VRBs); see  VectorDeserializeRow class convert... methods for an example. However, the native VRB mode relies on ORC ConvertTreeReader... stuff that lives in ORC, and so never converts anything nside VMO.\r\n\r\nSo, anything running in native VRB mode that is not the vanilla ORC reader will produce data with incorrect schema if there were schema changes and partitions are present  - there are two such cases right now, LLAP IO with ORC or text data, and Parquet. \r\nIt's possible to extend ConvertTreeReader... stuff to LLAP IO ORC that already uses TreeReader-s for everything; LLAP IO text and (non-LLAP) Parquet, as well as any future users however will have to invent their own conversion.\r\nTherefore, I think the best fix for this is to treat all inputs in VMO the same and convert them by default, like the regular MapOperator; and make ORC special mode an exception that allows it to bypass the conversion. \r\ncc [~mmccline]\r\n\r\nTest case - varchar column length should be limited after alter table but it isn't.\r\n{noformat}\r\nCREATE TABLE schema_evolution_data(insert_num int, boolean1 boolean, tinyint1 tinyint, smallint1 smallint, int1 int, bigint1 bigint, decimal1 decimal(38,18), float1 float, double1 double, string1 varchar(50), string2 varchar(50), date1 date, timestamp1 timestamp, boolean_str string, tinyint_str string, smallint_str string, int_str string, bigint_str string, decimal_str string, float_str string, double_str string, date_str string, timestamp_str string, filler string)\r\nrow format delimited fields terminated by '|' stored as textfile;\r\nload data local inpath '../../data/files/schema_evolution/schema_evolution_data.txt' overwrite into table schema_evolution_data;\r\n\r\n\r\ndrop table if exists vsp;\r\ncreate table vsp(vs varchar(50)) partitioned by(s varchar(50)) stored as textfile;\r\ninsert into table vsp partition(s='positive') select string1 from schema_evolution_data;\r\nalter table vsp change column vs vs varchar(3);\r\n\r\ndrop table if exists vsp_orc;\r\ncreate table vsp_orc(vs varchar(50)) partitioned by(s varchar(50)) stored as orc;\r\ninsert into table vsp_orc partition(s='positive') select string1 from schema_evolution_data;\r\nalter table vsp_orc change column vs vs varchar(3);\r\n\r\ndrop table if exists vsp_parquet;\r\ncreate table vsp_parquet(vs varchar(50)) partitioned by(s varchar(50)) stored as parquet;\r\ninsert into table vsp_parquet partition(s='positive') select string1 from schema_evolution_data;\r\nalter table vsp_parquet change column vs vs varchar(3);\r\n\r\nSET hive.llap.io.enabled=true;\r\n-- BAD results from all queries; parquet affected regardless of IO.\r\nselect length(vs) from vsp; \r\nselect length(vs) from vsp_orc;\r\nselect length(vs) from vsp_parquet;\r\n\r\nSET hive.llap.io.enabled=false;\r\nselect length(vs) from vsp; -- ok\r\nselect length(vs) from vsp_orc; -- ok\r\nselect length(vs) from vsp_parquet; -- still bad\r\n{noformat}","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12914386","id":"12914386","filename":"HIVE-18763.WIP.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-03-14T00:46:33.183+0000","size":25686,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12914386/HIVE-18763.WIP.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"VectorMapOperator should take into account partition->table serde conversion for all cases","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13140003/comment/16372233","id":"16372233","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"body":"cc [~vihangk1] fyi, this also affects Parquet","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-02-22T00:01:50.095+0000","updated":"2018-02-22T00:01:50.095+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13140003/comment/16373007","id":"16373007","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vihangk1","name":"vihangk1","key":"vihangk1","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vihang Karajgaonkar","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks for reporting [~sershe] and letting me know. I can take a stab at this if no-one else is planning to work on this.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vihangk1","name":"vihangk1","key":"vihangk1","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vihang Karajgaonkar","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-02-22T16:17:55.895+0000","updated":"2018-02-22T16:17:55.895+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13140003/comment/16373272","id":"16373272","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"body":"Hey, I was planning to work on it, but not for a while (after some other bugs), so feel free if you want to.\r\nMy thinking after looking at the row converters was that the actual changes for most types are simple and insignificant (varchar lengths is one), so the change would be mostly wiring. It should be easy to add a separate VRB converter rather than trying to shoehorn this into VectorDeserializeRow or OI converters, since both of these deal with rows (row->row or row->VRB). All the necessary schema and stuff are available in VectorMapOperator - it is already used for the non-native-VRB case.\r\nThen making sure it doesn't apply to cases that do their own conversion (the only one right now is ORC) is another small wiring issue. \r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-02-22T19:12:28.071+0000","updated":"2018-02-22T19:12:34.895+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13140003/comment/16382988","id":"16382988","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"body":"ConvertTreeReader stuff actually looks perfect for VRBs in this case. However it's in ORC project and tied to TreeReader interface which is not ideal... trying to see if it might be possible to reuse it as is.\r\nOther options include refactoring in ORC (that will delay this a lot) or copying the relevant parts to Hive and removing TreeReader/ORC dependency there; then as the next step refactoring ORC to make actual CV->CV conversions reusable and switching to those, or even moving them to storage-api","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-03-02T01:43:10.277+0000","updated":"2018-03-02T01:43:10.277+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13140003/comment/16383055","id":"16383055","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"body":"Actually, trying this now on master I can no longer repro with Parquet in q files; I think I could repro on the cluster recently.\r\nIt seems to get the table schema correctly in the q file and/or master run, but then it fails with a different error when converting a float column to int (UnsupportedOperationException when trying to read int).\r\n\r\nSummary of results on master in q files: parquet returns correct length for varchar but throws on float->int; ORC with or w/o LLAP IO returns correct lengths but nulls out some values for float->int; text w/o LLAP IO returns all values correctly; text with LLAP IO returns incorrect lengths and also throws on float->int col.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-03-02T02:42:13.843+0000","updated":"2018-03-02T02:42:13.843+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13140003/comment/16397927","id":"16397927","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"body":"Ok I was finally able to return to this.\r\nLooks like it's a much bigger change than I expected.\r\n\r\nI included the test that returns different results for different cases and in fact fails in LLAP IO with either ORC or text...\r\nI cannot repro the issue with Parquet anymore, at least not for these conversions.\r\n\r\nFor now I won't be working on this anymore... I think ConvertTreeReader-s conversion aspects need to be moved from ORC to Hive, since they should not be ORC specific. Or at least conversion logic should be refactored to be reusable in wider range of cases. cc [~mmccline]","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-03-14T00:49:43.265+0000","updated":"2018-03-14T00:49:43.265+0000"}],"maxResults":6,"total":6,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-18763/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i3qfrz:"}}