{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12739300","self":"https://issues.apache.org/jira/rest/api/2/issue/12739300","key":"HIVE-7993","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310843","id":"12310843","key":"HIVE","name":"Hive","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310843&avatarId=11935","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310843&avatarId=11935","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310843&avatarId=11935","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310843&avatarId=11935"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12326450","id":"12326450","description":"released","name":"0.14.0","archived":false,"released":true,"releaseDate":"2014-11-12"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2014-11-13T19:41:37.195+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Thu Nov 13 19:41:37 UTC 2014","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_508805677_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2014-09-10T23:14:30.889+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-7993/watchers","watchCount":2,"isWatching":false},"created":"2014-09-05T01:54:25.266+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12326450","id":"12326450","description":"released","name":"0.14.0","archived":false,"released":true,"releaseDate":"2014-11-12"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmccline","name":"mmccline","key":"mmccline","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046"},"displayName":"Matt McCline","active":true,"timeZone":"America/Chicago"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2014-11-13T19:41:37.205+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12323402","id":"12323402","name":"CBO","description":"All issues dealing with Hive's cost based optimizer and its interaction with Optiq"}],"timeoriginalestimate":null,"description":"Exception \n{code}\n2014-09-04 19:28:24,032 INFO [TezChild] org.apache.hadoop.hive.ql.exec.JoinOperator: 41 Close done\n2014-09-04 19:28:24,033 ERROR [TezChild] org.apache.hadoop.hive.ql.exec.tez.TezProcessor: java.lang.RuntimeException: Reduce operator initialization failed\n\tat org.apache.hadoop.hive.ql.exec.tez.ReduceRecordProcessor.init(ReduceRecordProcessor.java:254)\n\tat org.apache.hadoop.hive.ql.exec.tez.TezProcessor.run(TezProcessor.java:164)\n\tat org.apache.tez.runtime.LogicalIOProcessorRuntimeTask.run(LogicalIOProcessorRuntimeTask.java:309)\n\tat org.apache.tez.runtime.task.TezTaskRunner$TaskRunnerCallable$1.run(TezTaskRunner.java:180)\n\tat org.apache.tez.runtime.task.TezTaskRunner$TaskRunnerCallable$1.run(TezTaskRunner.java:172)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat javax.security.auth.Subject.doAs(Subject.java:415)\n\tat org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1557)\n\tat org.apache.tez.runtime.task.TezTaskRunner$TaskRunnerCallable.call(TezTaskRunner.java:172)\n\tat org.apache.tez.runtime.task.TezTaskRunner$TaskRunnerCallable.call(TezTaskRunner.java:167)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:262)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:744)\nCaused by: java.lang.RuntimeException: cannot find field _col69 from [0:_col18, 1:_col23, 2:_col45, 3:_col47, 4:_col49, 5:_col51, 6:_col108, 7:_col109]\n\tat org.apache.hadoop.hive.serde2.objectinspector.ObjectInspectorUtils.getStandardStructFieldRef(ObjectInspectorUtils.java:410)\n\tat org.apache.hadoop.hive.serde2.objectinspector.StandardStructObjectInspector.getStructFieldRef(StandardStructObjectInspector.java:147)\n\tat org.apache.hadoop.hive.ql.exec.ExprNodeColumnEvaluator.initialize(ExprNodeColumnEvaluator.java:55)\n\tat org.apache.hadoop.hive.ql.exec.Operator.initEvaluators(Operator.java:938)\n\tat org.apache.hadoop.hive.ql.exec.Operator.initEvaluatorsAndReturnStruct(Operator.java:964)\n\tat org.apache.hadoop.hive.ql.exec.SelectOperator.initializeOp(SelectOperator.java:63)\n\tat org.apache.hadoop.hive.ql.exec.Operator.initialize(Operator.java:380)\n\tat org.apache.hadoop.hive.ql.exec.Operator.initialize(Operator.java:464)\n\tat org.apache.hadoop.hive.ql.exec.Operator.initializeChildren(Operator.java:420)\n\tat org.apache.hadoop.hive.ql.exec.JoinOperator.initializeOp(JoinOperator.java:60)\n\tat org.apache.hadoop.hive.ql.exec.Operator.initialize(Operator.java:380)\n\tat org.apache.hadoop.hive.ql.exec.tez.ReduceRecordProcessor.init(ReduceRecordProcessor.java:223)\n\t... 13 more\n\n2014-09-04 19:28:24,034 INFO [TezChild] org.apache.tez.runtime.task.TezTaskRunner: Encounted an error while executing task: attempt_1406566393272_3882_3_24_000028_0\njava.lang.RuntimeException: java.lang.RuntimeException: Reduce operator initialization failed\n\tat org.apache.hadoop.hive.ql.exec.tez.TezProcessor.run(TezProcessor.java:188)\n\tat org.apache.tez.runtime.LogicalIOProcessorRuntimeTask.run(LogicalIOProcessorRuntimeTask.java:309)\n\tat org.apache.tez.runtime.task.TezTaskRunner$TaskRunnerCallable$1.run(TezTaskRunner.java:180)\n\tat org.apache.tez.runtime.task.TezTaskRunner$TaskRunnerCallable$1.run(TezTaskRunner.java:172)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat javax.security.auth.Subject.doAs(Subject.java:415)\n\tat org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1557)\n\tat org.apache.tez.runtime.task.TezTaskRunner$TaskRunnerCallable.call(TezTaskRunner.java:172)\n\tat org.apache.tez.runtime.task.TezTaskRunner$TaskRunnerCallable.call(TezTaskRunner.java:167)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:262)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:744)\nCaused by: java.lang.RuntimeException: Reduce operator initialization failed\n\tat org.apache.hadoop.hive.ql.exec.tez.ReduceRecordProcessor.init(ReduceRecordProcessor.java:254)\n\tat org.apache.hadoop.hive.ql.exec.tez.TezProcessor.run(TezProcessor.java:164)\n\t... 12 more\nCaused by: java.lang.RuntimeException: cannot find field _col69 from [0:_col18, 1:_col23, 2:_col45, 3:_col47, 4:_col49, 5:_col51, 6:_col108, 7:_col109]\n\tat org.apache.hadoop.hive.serde2.objectinspector.ObjectInspectorUtils.getStandardStructFieldRef(ObjectInspectorUtils.java:410)\n\tat org.apache.hadoop.hive.serde2.objectinspector.StandardStructObjectInspector.getStructFieldRef(StandardStructObjectInspector.java:147)\n\tat org.apache.hadoop.hive.ql.exec.ExprNodeColumnEvaluator.initialize(ExprNodeColumnEvaluator.java:55)\n\tat org.apache.hadoop.hive.ql.exec.Operator.initEvaluators(Operator.java:938)\n\tat org.apache.hadoop.hive.ql.exec.Operator.initEvaluatorsAndReturnStruct(Operator.java:964)\n\tat org.apache.hadoop.hive.ql.exec.SelectOperator.initializeOp(SelectOperator.java:63)\n\tat org.apache.hadoop.hive.ql.exec.Operator.initialize(Operator.java:380)\n\tat org.apache.hadoop.hive.ql.exec.Operator.initialize(Operator.java:464)\n\tat org.apache.hadoop.hive.ql.exec.Operator.initializeChildren(Operator.java:420)\n\tat org.apache.hadoop.hive.ql.exec.JoinOperator.initializeOp(JoinOperator.java:60)\n\tat org.apache.hadoop.hive.ql.exec.Operator.initialize(Operator.java:380)\n\tat org.apache.hadoop.hive.ql.exec.tez.ReduceRecordProcessor.init(ReduceRecordProcessor.java:223)\n\t... 13 more\n{code}\n\nQuery\n{code}\nWITH all_sales AS (\n SELECT d_year\n       ,i_brand_id\n       ,i_class_id\n       ,i_category_id\n       ,i_manufact_id\n       ,SUM(sales_cnt) AS sales_cnt\n       ,SUM(sales_amt) AS sales_amt\n FROM (SELECT d_year\n             ,i_brand_id\n             ,i_class_id\n             ,i_category_id\n             ,i_manufact_id\n             ,cs_quantity - COALESCE(cr_return_quantity,0) AS sales_cnt\n             ,cs_ext_sales_price - COALESCE(cr_return_amount,0.0) AS sales_amt\n       FROM catalog_sales JOIN item ON i_item_sk=cs_item_sk\n                          JOIN date_dim ON d_date_sk=cs_sold_date_sk\n                          LEFT JOIN catalog_returns ON (cs_order_number=cr_order_number \n                                                    AND cs_item_sk=cr_item_sk)\n       WHERE i_category='Sports'\n       UNION ALL\n       SELECT d_year\n             ,i_brand_id\n             ,i_class_id\n             ,i_category_id\n             ,i_manufact_id\n             ,ss_quantity - COALESCE(sr_return_quantity,0) AS sales_cnt\n             ,ss_ext_sales_price - COALESCE(sr_return_amt,0.0) AS sales_amt\n       FROM store_sales JOIN item ON i_item_sk=ss_item_sk\n                        JOIN date_dim ON d_date_sk=ss_sold_date_sk\n                        LEFT JOIN store_returns ON (ss_ticket_number=sr_ticket_number \n                                                AND ss_item_sk=sr_item_sk)\n       WHERE i_category='Sports'\n       UNION ALL\n       SELECT d_year\n             ,i_brand_id\n             ,i_class_id\n             ,i_category_id\n             ,i_manufact_id\n             ,ws_quantity - COALESCE(wr_return_quantity,0) AS sales_cnt\n             ,ws_ext_sales_price - COALESCE(wr_return_amt,0.0) AS sales_amt\n       FROM web_sales JOIN item ON i_item_sk=ws_item_sk\n                      JOIN date_dim ON d_date_sk=ws_sold_date_sk\n                      LEFT JOIN web_returns ON (ws_order_number=wr_order_number \n                                            AND ws_item_sk=wr_item_sk)\n       WHERE i_category='Sports') sales_detail\n GROUP BY d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id)\n SELECT  prev_yr.d_year AS prev_year\n                          ,curr_yr.d_year AS year\n                          ,curr_yr.i_brand_id\n                          ,curr_yr.i_class_id\n                          ,curr_yr.i_category_id\n                          ,curr_yr.i_manufact_id\n                          ,prev_yr.sales_cnt AS prev_yr_cnt\n                          ,curr_yr.sales_cnt AS curr_yr_cnt\n                          ,curr_yr.sales_cnt-prev_yr.sales_cnt AS sales_cnt_diff\n                          ,curr_yr.sales_amt-prev_yr.sales_amt AS sales_amt_diff\n FROM all_sales curr_yr, all_sales prev_yr\n WHERE curr_yr.i_brand_id=prev_yr.i_brand_id\n   AND curr_yr.i_class_id=prev_yr.i_class_id\n   AND curr_yr.i_category_id=prev_yr.i_category_id\n   AND curr_yr.i_manufact_id=prev_yr.i_manufact_id\n   AND curr_yr.d_year=2002\n   AND prev_yr.d_year=2002-1\n   AND CAST(curr_yr.sales_cnt AS DECIMAL(17,2))/CAST(prev_yr.sales_cnt AS DECIMAL(17,2))<0.9\n ORDER BY sales_cnt_diff\n limit 100\n{code}","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"With CBO enabled Q75 fails with RuntimeException: cannot find field _col69 from [0:_col18,...]","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12739300/comment/14129331","id":"14129331","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"body":"Query generates a plan now and runs successfully\n{code}\nSTAGE DEPENDENCIES:\n  Stage-1 is a root stage\n  Stage-0 depends on stages: Stage-1\n\nSTAGE PLANS:\n  Stage: Stage-1\n    Tez\n      Edges:\n        Map 15 <- Map 1 (BROADCAST_EDGE), Map 24 (BROADCAST_EDGE)\n        Map 2 <- Map 27 (BROADCAST_EDGE), Map 29 (BROADCAST_EDGE)\n        Map 23 <- Map 13 (BROADCAST_EDGE), Map 19 (BROADCAST_EDGE), Map 21 (BROADCAST_EDGE), Union 10 (CONTAINS)\n        Map 28 <- Map 22 (BROADCAST_EDGE), Map 34 (BROADCAST_EDGE)\n        Map 31 <- Map 12 (BROADCAST_EDGE), Map 14 (BROADCAST_EDGE), Map 32 (BROADCAST_EDGE), Union 4 (CONTAINS)\n        Map 8 <- Map 20 (BROADCAST_EDGE), Map 30 (BROADCAST_EDGE)\n        Reducer 11 <- Union 10 (SIMPLE_EDGE)\n        Reducer 16 <- Map 15 (SIMPLE_EDGE), Map 33 (SIMPLE_EDGE), Union 4 (CONTAINS)\n        Reducer 26 <- Map 25 (SIMPLE_EDGE), Map 28 (SIMPLE_EDGE), Union 10 (CONTAINS)\n        Reducer 3 <- Map 17 (SIMPLE_EDGE), Map 2 (SIMPLE_EDGE), Union 4 (CONTAINS)\n        Reducer 5 <- Union 4 (SIMPLE_EDGE)\n        Reducer 6 <- Reducer 11 (SIMPLE_EDGE), Reducer 5 (SIMPLE_EDGE)\n        Reducer 7 <- Reducer 6 (SIMPLE_EDGE)\n        Reducer 9 <- Map 18 (SIMPLE_EDGE), Map 8 (SIMPLE_EDGE), Union 10 (CONTAINS)\n      DagName: mmokhtar_20140910191313_4c3247fa-60c7-47c0-b407-ee2dc6936148:8\n      Vertices:\n        Map 1\n            Map Operator Tree:\n                TableScan\n                  alias: item\n                  filterExpr: (((((i_item_sk is not null and (i_category = 'Sports')) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                  Statistics: Num rows: 48000 Data size: 68732712 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (((((i_item_sk is not null and (i_category = 'Sports')) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                    Statistics: Num rows: 750 Data size: 1073948 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: i_item_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: i_item_sk (type: int)\n                      Statistics: Num rows: 750 Data size: 1073948 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: i_brand_id (type: int), i_class_id (type: int), i_category_id (type: int), i_manufact_id (type: int)\n            Execution mode: vectorized\n        Map 12\n            Map Operator Tree:\n                TableScan\n                  alias: item\n                  filterExpr: (((((i_item_sk is not null and (i_category = 'Sports')) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                  Statistics: Num rows: 48000 Data size: 68732712 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (((((i_item_sk is not null and (i_category = 'Sports')) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                    Statistics: Num rows: 750 Data size: 1073948 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: i_item_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: i_item_sk (type: int)\n                      Statistics: Num rows: 750 Data size: 1073948 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: i_brand_id (type: int), i_class_id (type: int), i_category_id (type: int), i_manufact_id (type: int)\n            Execution mode: vectorized\n        Map 13\n            Map Operator Tree:\n                TableScan\n                  alias: date_dim\n                  filterExpr: (d_date_sk is not null and (d_year = 2001)) (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (d_date_sk is not null and (d_year = 2001)) (type: boolean)\n                    Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: d_date_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: d_date_sk (type: int)\n                      Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 14\n            Map Operator Tree:\n                TableScan\n                  alias: web_returns\n                  Statistics: Num rows: 13749816 Data size: 1237758344 Basic stats: COMPLETE Column stats: NONE\n                  Reduce Output Operator\n                    key expressions: wr_order_number (type: int), wr_item_sk (type: int)\n                    sort order: ++\n                    Map-reduce partition columns: wr_order_number (type: int), wr_item_sk (type: int)\n                    Statistics: Num rows: 13749816 Data size: 1237758344 Basic stats: COMPLETE Column stats: NONE\n                    value expressions: wr_return_quantity (type: int), wr_return_amt (type: float)\n            Execution mode: vectorized\n        Map 15\n            Map Operator Tree:\n                TableScan\n                  alias: catalog_sales\n                  filterExpr: (cs_item_sk is not null and cs_sold_date_sk is not null) (type: boolean)\n                  Statistics: Num rows: 286549727 Data size: 37743959324 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: cs_item_sk is not null (type: boolean)\n                    Statistics: Num rows: 143274864 Data size: 18871979727 Basic stats: COMPLETE Column stats: NONE\n                    Map Join Operator\n                      condition map:\n                           Inner Join 0 to 1\n                      condition expressions:\n                        0 {cs_item_sk} {cs_order_number} {cs_quantity} {cs_ext_sales_price} {cs_sold_date_sk}\n                        1 {i_brand_id} {i_class_id} {i_category_id} {i_manufact_id}\n                      keys:\n                        0 cs_item_sk (type: int)\n                        1 i_item_sk (type: int)\n                      outputColumnNames: _col14, _col16, _col17, _col22, _col33, _col44, _col46, _col48, _col50\n                      input vertices:\n                        1 Map 1\n                      Statistics: Num rows: 157602352 Data size: 20759179264 Basic stats: COMPLETE Column stats: NONE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        condition expressions:\n                          0 {_col14} {_col16} {_col17} {_col22} {_col44} {_col46} {_col48} {_col50}\n                          1\n                        keys:\n                          0 _col33 (type: int)\n                          1 d_date_sk (type: int)\n                        outputColumnNames: _col14, _col16, _col17, _col22, _col44, _col46, _col48, _col50\n                        input vertices:\n                          1 Map 24\n                        Statistics: Num rows: 173362592 Data size: 22835097600 Basic stats: COMPLETE Column stats: NONE\n                        Reduce Output Operator\n                          key expressions: _col16 (type: int), _col14 (type: int)\n                          sort order: ++\n                          Map-reduce partition columns: _col16 (type: int), _col14 (type: int)\n                          Statistics: Num rows: 173362592 Data size: 22835097600 Basic stats: COMPLETE Column stats: NONE\n                          value expressions: _col17 (type: int), _col22 (type: float), _col44 (type: int), _col46 (type: int), _col48 (type: int), _col50 (type: int)\n            Execution mode: vectorized\n        Map 17\n            Map Operator Tree:\n                TableScan\n                  alias: store_returns\n                  Statistics: Num rows: 55578005 Data size: 4155315616 Basic stats: COMPLETE Column stats: NONE\n                  Reduce Output Operator\n                    key expressions: sr_ticket_number (type: int), sr_item_sk (type: int)\n                    sort order: ++\n                    Map-reduce partition columns: sr_ticket_number (type: int), sr_item_sk (type: int)\n                    Statistics: Num rows: 55578005 Data size: 4155315616 Basic stats: COMPLETE Column stats: NONE\n                    value expressions: sr_return_quantity (type: int), sr_return_amt (type: float)\n            Execution mode: vectorized\n        Map 18\n            Map Operator Tree:\n                TableScan\n                  alias: store_returns\n                  Statistics: Num rows: 55578005 Data size: 4155315616 Basic stats: COMPLETE Column stats: NONE\n                  Reduce Output Operator\n                    key expressions: sr_ticket_number (type: int), sr_item_sk (type: int)\n                    sort order: ++\n                    Map-reduce partition columns: sr_ticket_number (type: int), sr_item_sk (type: int)\n                    Statistics: Num rows: 55578005 Data size: 4155315616 Basic stats: COMPLETE Column stats: NONE\n                    value expressions: sr_return_quantity (type: int), sr_return_amt (type: float)\n            Execution mode: vectorized\n        Map 19\n            Map Operator Tree:\n                TableScan\n                  alias: web_returns\n                  Statistics: Num rows: 13749816 Data size: 1237758344 Basic stats: COMPLETE Column stats: NONE\n                  Reduce Output Operator\n                    key expressions: wr_order_number (type: int), wr_item_sk (type: int)\n                    sort order: ++\n                    Map-reduce partition columns: wr_order_number (type: int), wr_item_sk (type: int)\n                    Statistics: Num rows: 13749816 Data size: 1237758344 Basic stats: COMPLETE Column stats: NONE\n                    value expressions: wr_return_quantity (type: int), wr_return_amt (type: float)\n            Execution mode: vectorized\n        Map 2\n            Map Operator Tree:\n                TableScan\n                  alias: store_sales\n                  filterExpr: (ss_item_sk is not null and ss_sold_date_sk is not null) (type: boolean)\n                  Statistics: Num rows: 550076554 Data size: 47370018896 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ss_item_sk is not null (type: boolean)\n                    Statistics: Num rows: 275038277 Data size: 23685009448 Basic stats: COMPLETE Column stats: NONE\n                    Map Join Operator\n                      condition map:\n                           Inner Join 0 to 1\n                      condition expressions:\n                        0 {ss_item_sk} {ss_ticket_number} {ss_quantity} {ss_ext_sales_price} {ss_sold_date_sk}\n                        1 {i_brand_id} {i_class_id} {i_category_id} {i_manufact_id}\n                      keys:\n                        0 ss_item_sk (type: int)\n                        1 i_item_sk (type: int)\n                      outputColumnNames: _col1, _col8, _col9, _col14, _col22, _col33, _col35, _col37, _col39\n                      input vertices:\n                        1 Map 29\n                      Statistics: Num rows: 302542112 Data size: 26053511168 Basic stats: COMPLETE Column stats: NONE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        condition expressions:\n                          0 {_col1} {_col8} {_col9} {_col14} {_col33} {_col35} {_col37} {_col39}\n                          1\n                        keys:\n                          0 _col22 (type: int)\n                          1 d_date_sk (type: int)\n                        outputColumnNames: _col1, _col8, _col9, _col14, _col33, _col35, _col37, _col39\n                        input vertices:\n                          1 Map 27\n                        Statistics: Num rows: 332796320 Data size: 28658862080 Basic stats: COMPLETE Column stats: NONE\n                        Reduce Output Operator\n                          key expressions: _col8 (type: int), _col1 (type: int)\n                          sort order: ++\n                          Map-reduce partition columns: _col8 (type: int), _col1 (type: int)\n                          Statistics: Num rows: 332796320 Data size: 28658862080 Basic stats: COMPLETE Column stats: NONE\n                          value expressions: _col9 (type: int), _col14 (type: float), _col33 (type: int), _col35 (type: int), _col37 (type: int), _col39 (type: int)\n            Execution mode: vectorized\n        Map 20\n            Map Operator Tree:\n                TableScan\n                  alias: date_dim\n                  filterExpr: (d_date_sk is not null and (d_year = 2001)) (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (d_date_sk is not null and (d_year = 2001)) (type: boolean)\n                    Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: d_date_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: d_date_sk (type: int)\n                      Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 21\n            Map Operator Tree:\n                TableScan\n                  alias: item\n                  filterExpr: (((((i_item_sk is not null and (i_category = 'Sports')) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                  Statistics: Num rows: 48000 Data size: 68732712 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (((((i_item_sk is not null and (i_category = 'Sports')) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                    Statistics: Num rows: 750 Data size: 1073948 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: i_item_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: i_item_sk (type: int)\n                      Statistics: Num rows: 750 Data size: 1073948 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: i_brand_id (type: int), i_class_id (type: int), i_category_id (type: int), i_manufact_id (type: int)\n            Execution mode: vectorized\n        Map 22\n            Map Operator Tree:\n                TableScan\n                  alias: item\n                  filterExpr: (((((i_item_sk is not null and (i_category = 'Sports')) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                  Statistics: Num rows: 48000 Data size: 68732712 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (((((i_item_sk is not null and (i_category = 'Sports')) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                    Statistics: Num rows: 750 Data size: 1073948 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: i_item_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: i_item_sk (type: int)\n                      Statistics: Num rows: 750 Data size: 1073948 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: i_brand_id (type: int), i_class_id (type: int), i_category_id (type: int), i_manufact_id (type: int)\n            Execution mode: vectorized\n        Map 23\n            Map Operator Tree:\n                TableScan\n                  alias: web_sales\n                  filterExpr: (ws_item_sk is not null and ws_sold_date_sk is not null) (type: boolean)\n                  Filter Operator\n                    predicate: ws_item_sk is not null (type: boolean)\n                    Map Join Operator\n                      condition map:\n                           Inner Join 0 to 1\n                      condition expressions:\n                        0 {ws_item_sk} {ws_order_number} {ws_quantity} {ws_ext_sales_price} {ws_sold_date_sk}\n                        1 {i_brand_id} {i_class_id} {i_category_id} {i_manufact_id}\n                      keys:\n                        0 ws_item_sk (type: int)\n                        1 i_item_sk (type: int)\n                      outputColumnNames: _col2, _col16, _col17, _col22, _col33, _col44, _col46, _col48, _col50\n                      input vertices:\n                        1 Map 21\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        condition expressions:\n                          0 {_col2} {_col16} {_col17} {_col22} {_col44} {_col46} {_col48} {_col50}\n                          1\n                        keys:\n                          0 _col33 (type: int)\n                          1 d_date_sk (type: int)\n                        outputColumnNames: _col2, _col16, _col17, _col22, _col44, _col46, _col48, _col50\n                        input vertices:\n                          1 Map 13\n                        Map Join Operator\n                          condition map:\n                               Left Outer Join0 to 1\n                          condition expressions:\n                            0 {_col17} {_col22} {_col44} {_col46} {_col48} {_col50}\n                            1 {wr_return_quantity} {wr_return_amt}\n                          keys:\n                            0 _col16 (type: int), _col2 (type: int)\n                            1 wr_order_number (type: int), wr_item_sk (type: int)\n                          outputColumnNames: _col17, _col22, _col44, _col46, _col48, _col50, _col106, _col107\n                          input vertices:\n                            1 Map 19\n                          Select Operator\n                            expressions: 2001 (type: int), _col44 (type: int), _col46 (type: int), _col48 (type: int), _col50 (type: int), (_col17 - COALESCE(_col106,0)) (type: int), (_col22 - COALESCE(_col107,0.0)) (type: double)\n                            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                            Select Operator\n                              expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int), _col5 (type: int), _col6 (type: double)\n                              outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                              Group By Operator\n                                aggregations: sum(_col5), sum(_col6)\n                                keys: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                                mode: hash\n                                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                                Reduce Output Operator\n                                  key expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                                  sort order: +++++\n                                  Map-reduce partition columns: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                                  value expressions: _col5 (type: bigint), _col6 (type: double)\n            Execution mode: vectorized\n        Map 24\n            Map Operator Tree:\n                TableScan\n                  alias: date_dim\n                  filterExpr: (d_date_sk is not null and (d_year = 2002)) (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (d_date_sk is not null and (d_year = 2002)) (type: boolean)\n                    Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: d_date_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: d_date_sk (type: int)\n                      Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 25\n            Map Operator Tree:\n                TableScan\n                  alias: catalog_returns\n                  Statistics: Num rows: 28798881 Data size: 2942039156 Basic stats: COMPLETE Column stats: NONE\n                  Reduce Output Operator\n                    key expressions: cr_order_number (type: int), cr_item_sk (type: int)\n                    sort order: ++\n                    Map-reduce partition columns: cr_order_number (type: int), cr_item_sk (type: int)\n                    Statistics: Num rows: 28798881 Data size: 2942039156 Basic stats: COMPLETE Column stats: NONE\n                    value expressions: cr_return_quantity (type: int), cr_return_amount (type: float)\n            Execution mode: vectorized\n        Map 27\n            Map Operator Tree:\n                TableScan\n                  alias: date_dim\n                  filterExpr: (d_date_sk is not null and (d_year = 2002)) (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (d_date_sk is not null and (d_year = 2002)) (type: boolean)\n                    Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: d_date_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: d_date_sk (type: int)\n                      Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 28\n            Map Operator Tree:\n                TableScan\n                  alias: catalog_sales\n                  filterExpr: (cs_item_sk is not null and cs_sold_date_sk is not null) (type: boolean)\n                  Statistics: Num rows: 286549727 Data size: 37743959324 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: cs_item_sk is not null (type: boolean)\n                    Statistics: Num rows: 143274864 Data size: 18871979727 Basic stats: COMPLETE Column stats: NONE\n                    Map Join Operator\n                      condition map:\n                           Inner Join 0 to 1\n                      condition expressions:\n                        0 {cs_item_sk} {cs_order_number} {cs_quantity} {cs_ext_sales_price} {cs_sold_date_sk}\n                        1 {i_brand_id} {i_class_id} {i_category_id} {i_manufact_id}\n                      keys:\n                        0 cs_item_sk (type: int)\n                        1 i_item_sk (type: int)\n                      outputColumnNames: _col14, _col16, _col17, _col22, _col33, _col44, _col46, _col48, _col50\n                      input vertices:\n                        1 Map 22\n                      Statistics: Num rows: 157602352 Data size: 20759179264 Basic stats: COMPLETE Column stats: NONE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        condition expressions:\n                          0 {_col14} {_col16} {_col17} {_col22} {_col44} {_col46} {_col48} {_col50}\n                          1\n                        keys:\n                          0 _col33 (type: int)\n                          1 d_date_sk (type: int)\n                        outputColumnNames: _col14, _col16, _col17, _col22, _col44, _col46, _col48, _col50\n                        input vertices:\n                          1 Map 34\n                        Statistics: Num rows: 173362592 Data size: 22835097600 Basic stats: COMPLETE Column stats: NONE\n                        Reduce Output Operator\n                          key expressions: _col16 (type: int), _col14 (type: int)\n                          sort order: ++\n                          Map-reduce partition columns: _col16 (type: int), _col14 (type: int)\n                          Statistics: Num rows: 173362592 Data size: 22835097600 Basic stats: COMPLETE Column stats: NONE\n                          value expressions: _col17 (type: int), _col22 (type: float), _col44 (type: int), _col46 (type: int), _col48 (type: int), _col50 (type: int)\n            Execution mode: vectorized\n        Map 29\n            Map Operator Tree:\n                TableScan\n                  alias: item\n                  filterExpr: (((((i_item_sk is not null and (i_category = 'Sports')) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                  Statistics: Num rows: 48000 Data size: 68732712 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (((((i_item_sk is not null and (i_category = 'Sports')) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                    Statistics: Num rows: 750 Data size: 1073948 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: i_item_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: i_item_sk (type: int)\n                      Statistics: Num rows: 750 Data size: 1073948 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: i_brand_id (type: int), i_class_id (type: int), i_category_id (type: int), i_manufact_id (type: int)\n            Execution mode: vectorized\n        Map 30\n            Map Operator Tree:\n                TableScan\n                  alias: item\n                  filterExpr: (((((i_item_sk is not null and (i_category = 'Sports')) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                  Statistics: Num rows: 48000 Data size: 68732712 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (((((i_item_sk is not null and (i_category = 'Sports')) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                    Statistics: Num rows: 750 Data size: 1073948 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: i_item_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: i_item_sk (type: int)\n                      Statistics: Num rows: 750 Data size: 1073948 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: i_brand_id (type: int), i_class_id (type: int), i_category_id (type: int), i_manufact_id (type: int)\n            Execution mode: vectorized\n        Map 31\n            Map Operator Tree:\n                TableScan\n                  alias: web_sales\n                  filterExpr: (ws_item_sk is not null and ws_sold_date_sk is not null) (type: boolean)\n                  Filter Operator\n                    predicate: ws_item_sk is not null (type: boolean)\n                    Map Join Operator\n                      condition map:\n                           Inner Join 0 to 1\n                      condition expressions:\n                        0 {ws_item_sk} {ws_order_number} {ws_quantity} {ws_ext_sales_price} {ws_sold_date_sk}\n                        1 {i_brand_id} {i_class_id} {i_category_id} {i_manufact_id}\n                      keys:\n                        0 ws_item_sk (type: int)\n                        1 i_item_sk (type: int)\n                      outputColumnNames: _col2, _col16, _col17, _col22, _col33, _col44, _col46, _col48, _col50\n                      input vertices:\n                        1 Map 12\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        condition expressions:\n                          0 {_col2} {_col16} {_col17} {_col22} {_col44} {_col46} {_col48} {_col50}\n                          1\n                        keys:\n                          0 _col33 (type: int)\n                          1 d_date_sk (type: int)\n                        outputColumnNames: _col2, _col16, _col17, _col22, _col44, _col46, _col48, _col50\n                        input vertices:\n                          1 Map 32\n                        Map Join Operator\n                          condition map:\n                               Left Outer Join0 to 1\n                          condition expressions:\n                            0 {_col17} {_col22} {_col44} {_col46} {_col48} {_col50}\n                            1 {wr_return_quantity} {wr_return_amt}\n                          keys:\n                            0 _col16 (type: int), _col2 (type: int)\n                            1 wr_order_number (type: int), wr_item_sk (type: int)\n                          outputColumnNames: _col17, _col22, _col44, _col46, _col48, _col50, _col106, _col107\n                          input vertices:\n                            1 Map 14\n                          Select Operator\n                            expressions: 2002 (type: int), _col44 (type: int), _col46 (type: int), _col48 (type: int), _col50 (type: int), (_col17 - COALESCE(_col106,0)) (type: int), (_col22 - COALESCE(_col107,0.0)) (type: double)\n                            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                            Select Operator\n                              expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int), _col5 (type: int), _col6 (type: double)\n                              outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                              Group By Operator\n                                aggregations: sum(_col5), sum(_col6)\n                                keys: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                                mode: hash\n                                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                                Reduce Output Operator\n                                  key expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                                  sort order: +++++\n                                  Map-reduce partition columns: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                                  value expressions: _col5 (type: bigint), _col6 (type: double)\n            Execution mode: vectorized\n        Map 32\n            Map Operator Tree:\n                TableScan\n                  alias: date_dim\n                  filterExpr: (d_date_sk is not null and (d_year = 2002)) (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (d_date_sk is not null and (d_year = 2002)) (type: boolean)\n                    Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: d_date_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: d_date_sk (type: int)\n                      Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 33\n            Map Operator Tree:\n                TableScan\n                  alias: catalog_returns\n                  Statistics: Num rows: 28798881 Data size: 2942039156 Basic stats: COMPLETE Column stats: NONE\n                  Reduce Output Operator\n                    key expressions: cr_order_number (type: int), cr_item_sk (type: int)\n                    sort order: ++\n                    Map-reduce partition columns: cr_order_number (type: int), cr_item_sk (type: int)\n                    Statistics: Num rows: 28798881 Data size: 2942039156 Basic stats: COMPLETE Column stats: NONE\n                    value expressions: cr_return_quantity (type: int), cr_return_amount (type: float)\n            Execution mode: vectorized\n        Map 34\n            Map Operator Tree:\n                TableScan\n                  alias: date_dim\n                  filterExpr: (d_date_sk is not null and (d_year = 2001)) (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (d_date_sk is not null and (d_year = 2001)) (type: boolean)\n                    Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: d_date_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: d_date_sk (type: int)\n                      Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 8\n            Map Operator Tree:\n                TableScan\n                  alias: store_sales\n                  filterExpr: (ss_item_sk is not null and ss_sold_date_sk is not null) (type: boolean)\n                  Statistics: Num rows: 550076554 Data size: 47370018896 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ss_item_sk is not null (type: boolean)\n                    Statistics: Num rows: 275038277 Data size: 23685009448 Basic stats: COMPLETE Column stats: NONE\n                    Map Join Operator\n                      condition map:\n                           Inner Join 0 to 1\n                      condition expressions:\n                        0 {ss_item_sk} {ss_ticket_number} {ss_quantity} {ss_ext_sales_price} {ss_sold_date_sk}\n                        1 {i_brand_id} {i_class_id} {i_category_id} {i_manufact_id}\n                      keys:\n                        0 ss_item_sk (type: int)\n                        1 i_item_sk (type: int)\n                      outputColumnNames: _col1, _col8, _col9, _col14, _col22, _col33, _col35, _col37, _col39\n                      input vertices:\n                        1 Map 30\n                      Statistics: Num rows: 302542112 Data size: 26053511168 Basic stats: COMPLETE Column stats: NONE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        condition expressions:\n                          0 {_col1} {_col8} {_col9} {_col14} {_col33} {_col35} {_col37} {_col39}\n                          1\n                        keys:\n                          0 _col22 (type: int)\n                          1 d_date_sk (type: int)\n                        outputColumnNames: _col1, _col8, _col9, _col14, _col33, _col35, _col37, _col39\n                        input vertices:\n                          1 Map 20\n                        Statistics: Num rows: 332796320 Data size: 28658862080 Basic stats: COMPLETE Column stats: NONE\n                        Reduce Output Operator\n                          key expressions: _col8 (type: int), _col1 (type: int)\n                          sort order: ++\n                          Map-reduce partition columns: _col8 (type: int), _col1 (type: int)\n                          Statistics: Num rows: 332796320 Data size: 28658862080 Basic stats: COMPLETE Column stats: NONE\n                          value expressions: _col9 (type: int), _col14 (type: float), _col33 (type: int), _col35 (type: int), _col37 (type: int), _col39 (type: int)\n            Execution mode: vectorized\n        Reducer 11\n            Reduce Operator Tree:\n              Group By Operator\n                aggregations: sum(VALUE._col0), sum(VALUE._col1)\n                keys: KEY._col0 (type: int), KEY._col1 (type: int), KEY._col2 (type: int), KEY._col3 (type: int), KEY._col4 (type: int)\n                mode: mergepartial\n                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                Statistics: Num rows: 326292384 Data size: 34644464640 Basic stats: COMPLETE Column stats: NONE\n                Select Operator\n                  expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int), _col5 (type: bigint), _col6 (type: double)\n                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                  Statistics: Num rows: 326292384 Data size: 34644464640 Basic stats: COMPLETE Column stats: NONE\n                  Reduce Output Operator\n                    key expressions: _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                    sort order: ++++\n                    Map-reduce partition columns: _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                    Statistics: Num rows: 326292384 Data size: 34644464640 Basic stats: COMPLETE Column stats: NONE\n                    value expressions: _col0 (type: int), _col5 (type: bigint), _col6 (type: double)\n        Reducer 16\n            Reduce Operator Tree:\n              Join Operator\n                condition map:\n                     Left Outer Join0 to 1\n                condition expressions:\n                  0 {VALUE._col15} {VALUE._col20} {VALUE._col42} {VALUE._col44} {VALUE._col46} {VALUE._col48}\n                  1 {VALUE._col14} {VALUE._col15}\n                outputColumnNames: _col17, _col22, _col44, _col46, _col48, _col50, _col109, _col110\n                Select Operator\n                  expressions: 2002 (type: int), _col44 (type: int), _col46 (type: int), _col48 (type: int), _col50 (type: int), (_col17 - COALESCE(_col109,0)) (type: int), (_col22 - COALESCE(_col110,0.0)) (type: double)\n                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                  Select Operator\n                    expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int), _col5 (type: int), _col6 (type: double)\n                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                    Group By Operator\n                      aggregations: sum(_col5), sum(_col6)\n                      keys: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                      mode: hash\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                        sort order: +++++\n                        Map-reduce partition columns: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                        value expressions: _col5 (type: bigint), _col6 (type: double)\n        Reducer 26\n            Reduce Operator Tree:\n              Join Operator\n                condition map:\n                     Left Outer Join0 to 1\n                condition expressions:\n                  0 {VALUE._col15} {VALUE._col20} {VALUE._col42} {VALUE._col44} {VALUE._col46} {VALUE._col48}\n                  1 {VALUE._col14} {VALUE._col15}\n                outputColumnNames: _col17, _col22, _col44, _col46, _col48, _col50, _col109, _col110\n                Select Operator\n                  expressions: 2001 (type: int), _col44 (type: int), _col46 (type: int), _col48 (type: int), _col50 (type: int), (_col17 - COALESCE(_col109,0)) (type: int), (_col22 - COALESCE(_col110,0.0)) (type: double)\n                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                  Select Operator\n                    expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int), _col5 (type: int), _col6 (type: double)\n                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                    Group By Operator\n                      aggregations: sum(_col5), sum(_col6)\n                      keys: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                      mode: hash\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                        sort order: +++++\n                        Map-reduce partition columns: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                        value expressions: _col5 (type: bigint), _col6 (type: double)\n        Reducer 3\n            Reduce Operator Tree:\n              Join Operator\n                condition map:\n                     Left Outer Join0 to 1\n                condition expressions:\n                  0 {VALUE._col7} {VALUE._col12} {VALUE._col31} {VALUE._col33} {VALUE._col35} {VALUE._col37}\n                  1 {VALUE._col7} {VALUE._col8}\n                outputColumnNames: _col9, _col14, _col33, _col35, _col37, _col39, _col91, _col92\n                Select Operator\n                  expressions: 2002 (type: int), _col33 (type: int), _col35 (type: int), _col37 (type: int), _col39 (type: int), (_col9 - COALESCE(_col91,0)) (type: int), (_col14 - COALESCE(_col92,0.0)) (type: double)\n                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                  Select Operator\n                    expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int), _col5 (type: int), _col6 (type: double)\n                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                    Group By Operator\n                      aggregations: sum(_col5), sum(_col6)\n                      keys: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                      mode: hash\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                        sort order: +++++\n                        Map-reduce partition columns: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                        value expressions: _col5 (type: bigint), _col6 (type: double)\n        Reducer 5\n            Reduce Operator Tree:\n              Group By Operator\n                aggregations: sum(VALUE._col0), sum(VALUE._col1)\n                keys: KEY._col0 (type: int), KEY._col1 (type: int), KEY._col2 (type: int), KEY._col3 (type: int), KEY._col4 (type: int)\n                mode: mergepartial\n                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                Statistics: Num rows: 326292384 Data size: 34644464640 Basic stats: COMPLETE Column stats: NONE\n                Select Operator\n                  expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int), _col5 (type: bigint), _col6 (type: double)\n                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                  Statistics: Num rows: 326292384 Data size: 34644464640 Basic stats: COMPLETE Column stats: NONE\n                  Reduce Output Operator\n                    key expressions: _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                    sort order: ++++\n                    Map-reduce partition columns: _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                    Statistics: Num rows: 326292384 Data size: 34644464640 Basic stats: COMPLETE Column stats: NONE\n                    value expressions: _col0 (type: int), _col5 (type: bigint), _col6 (type: double)\n        Reducer 6\n            Reduce Operator Tree:\n              Join Operator\n                condition map:\n                     Inner Join 0 to 1\n                condition expressions:\n                  0 {VALUE._col0} {KEY.reducesinkkey0} {KEY.reducesinkkey1} {KEY.reducesinkkey2} {KEY.reducesinkkey3} {VALUE._col1} {VALUE._col2}\n                  1 {VALUE._col0} {KEY.reducesinkkey0} {KEY.reducesinkkey1} {KEY.reducesinkkey2} {KEY.reducesinkkey3} {VALUE._col1} {VALUE._col2}\n                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13\n                Statistics: Num rows: 358921632 Data size: 38108909568 Basic stats: COMPLETE Column stats: NONE\n                Filter Operator\n                  predicate: (((((((_col1 = _col8) and (_col2 = _col9)) and (_col3 = _col10)) and (_col4 = _col11)) and (_col0 = 2002)) and (_col7 = 2001)) and ((CAST( _col5 AS decimal(17,2)) / CAST( _col12 AS decimal(17,2))) < 0.9)) (type: boolean)\n                  Statistics: Num rows: 1869383 Data size: 198483850 Basic stats: COMPLETE Column stats: NONE\n                  Select Operator\n                    expressions: 2001 (type: int), 2002 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int), _col12 (type: bigint), _col5 (type: bigint), (_col5 - _col12) (type: bigint), (_col6 - _col13) (type: double)\n                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9\n                    Statistics: Num rows: 1869383 Data size: 198483850 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: _col8 (type: bigint)\n                      sort order: +\n                      Statistics: Num rows: 1869383 Data size: 198483850 Basic stats: COMPLETE Column stats: NONE\n                      TopN Hash Memory Usage: 0.04\n                      value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int), _col5 (type: int), _col6 (type: bigint), _col7 (type: bigint), _col9 (type: double)\n        Reducer 7\n            Reduce Operator Tree:\n              Select Operator\n                expressions: VALUE._col0 (type: int), VALUE._col1 (type: int), VALUE._col2 (type: int), VALUE._col3 (type: int), VALUE._col4 (type: int), VALUE._col5 (type: int), VALUE._col6 (type: bigint), VALUE._col7 (type: bigint), KEY.reducesinkkey0 (type: bigint), VALUE._col8 (type: double)\n                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9\n                Statistics: Num rows: 1869383 Data size: 198483850 Basic stats: COMPLETE Column stats: NONE\n                Limit\n                  Number of rows: 100\n                  Statistics: Num rows: 100 Data size: 10600 Basic stats: COMPLETE Column stats: NONE\n                  File Output Operator\n                    compressed: false\n                    Statistics: Num rows: 100 Data size: 10600 Basic stats: COMPLETE Column stats: NONE\n                    table:\n                        input format: org.apache.hadoop.mapred.TextInputFormat\n                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\n                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe\n            Execution mode: vectorized\n        Reducer 9\n            Reduce Operator Tree:\n              Join Operator\n                condition map:\n                     Left Outer Join0 to 1\n                condition expressions:\n                  0 {VALUE._col7} {VALUE._col12} {VALUE._col31} {VALUE._col33} {VALUE._col35} {VALUE._col37}\n                  1 {VALUE._col7} {VALUE._col8}\n                outputColumnNames: _col9, _col14, _col33, _col35, _col37, _col39, _col91, _col92\n                Select Operator\n                  expressions: 2001 (type: int), _col33 (type: int), _col35 (type: int), _col37 (type: int), _col39 (type: int), (_col9 - COALESCE(_col91,0)) (type: int), (_col14 - COALESCE(_col92,0.0)) (type: double)\n                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                  Select Operator\n                    expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int), _col5 (type: int), _col6 (type: double)\n                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                    Group By Operator\n                      aggregations: sum(_col5), sum(_col6)\n                      keys: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                      mode: hash\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                        sort order: +++++\n                        Map-reduce partition columns: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                        value expressions: _col5 (type: bigint), _col6 (type: double)\n        Union 10\n            Vertex: Union 10\n        Union 4\n            Vertex: Union 4\n\n  Stage: Stage-0\n    Fetch Operator\n      limit: 100\n      Processor Tree:\n        ListSink\n{code}\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-09-10T23:14:02.143+0000","updated":"2014-09-10T23:14:02.143+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12739300/comment/14129333","id":"14129333","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"body":"Query generates a plan now and runs successfully\n{code}\nSTAGE DEPENDENCIES:\n  Stage-1 is a root stage\n  Stage-0 depends on stages: Stage-1\n\nSTAGE PLANS:\n  Stage: Stage-1\n    Tez\n      Edges:\n        Map 15 <- Map 1 (BROADCAST_EDGE), Map 24 (BROADCAST_EDGE)\n        Map 2 <- Map 27 (BROADCAST_EDGE), Map 29 (BROADCAST_EDGE)\n        Map 23 <- Map 13 (BROADCAST_EDGE), Map 19 (BROADCAST_EDGE), Map 21 (BROADCAST_EDGE), Union 10 (CONTAINS)\n        Map 28 <- Map 22 (BROADCAST_EDGE), Map 34 (BROADCAST_EDGE)\n        Map 31 <- Map 12 (BROADCAST_EDGE), Map 14 (BROADCAST_EDGE), Map 32 (BROADCAST_EDGE), Union 4 (CONTAINS)\n        Map 8 <- Map 20 (BROADCAST_EDGE), Map 30 (BROADCAST_EDGE)\n        Reducer 11 <- Union 10 (SIMPLE_EDGE)\n        Reducer 16 <- Map 15 (SIMPLE_EDGE), Map 33 (SIMPLE_EDGE), Union 4 (CONTAINS)\n        Reducer 26 <- Map 25 (SIMPLE_EDGE), Map 28 (SIMPLE_EDGE), Union 10 (CONTAINS)\n        Reducer 3 <- Map 17 (SIMPLE_EDGE), Map 2 (SIMPLE_EDGE), Union 4 (CONTAINS)\n        Reducer 5 <- Union 4 (SIMPLE_EDGE)\n        Reducer 6 <- Reducer 11 (SIMPLE_EDGE), Reducer 5 (SIMPLE_EDGE)\n        Reducer 7 <- Reducer 6 (SIMPLE_EDGE)\n        Reducer 9 <- Map 18 (SIMPLE_EDGE), Map 8 (SIMPLE_EDGE), Union 10 (CONTAINS)\n      DagName: mmokhtar_20140910191313_4c3247fa-60c7-47c0-b407-ee2dc6936148:8\n      Vertices:\n        Map 1\n            Map Operator Tree:\n                TableScan\n                  alias: item\n                  filterExpr: (((((i_item_sk is not null and (i_category = 'Sports')) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                  Statistics: Num rows: 48000 Data size: 68732712 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (((((i_item_sk is not null and (i_category = 'Sports')) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                    Statistics: Num rows: 750 Data size: 1073948 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: i_item_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: i_item_sk (type: int)\n                      Statistics: Num rows: 750 Data size: 1073948 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: i_brand_id (type: int), i_class_id (type: int), i_category_id (type: int), i_manufact_id (type: int)\n            Execution mode: vectorized\n        Map 12\n            Map Operator Tree:\n                TableScan\n                  alias: item\n                  filterExpr: (((((i_item_sk is not null and (i_category = 'Sports')) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                  Statistics: Num rows: 48000 Data size: 68732712 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (((((i_item_sk is not null and (i_category = 'Sports')) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                    Statistics: Num rows: 750 Data size: 1073948 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: i_item_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: i_item_sk (type: int)\n                      Statistics: Num rows: 750 Data size: 1073948 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: i_brand_id (type: int), i_class_id (type: int), i_category_id (type: int), i_manufact_id (type: int)\n            Execution mode: vectorized\n        Map 13\n            Map Operator Tree:\n                TableScan\n                  alias: date_dim\n                  filterExpr: (d_date_sk is not null and (d_year = 2001)) (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (d_date_sk is not null and (d_year = 2001)) (type: boolean)\n                    Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: d_date_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: d_date_sk (type: int)\n                      Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 14\n            Map Operator Tree:\n                TableScan\n                  alias: web_returns\n                  Statistics: Num rows: 13749816 Data size: 1237758344 Basic stats: COMPLETE Column stats: NONE\n                  Reduce Output Operator\n                    key expressions: wr_order_number (type: int), wr_item_sk (type: int)\n                    sort order: ++\n                    Map-reduce partition columns: wr_order_number (type: int), wr_item_sk (type: int)\n                    Statistics: Num rows: 13749816 Data size: 1237758344 Basic stats: COMPLETE Column stats: NONE\n                    value expressions: wr_return_quantity (type: int), wr_return_amt (type: float)\n            Execution mode: vectorized\n        Map 15\n            Map Operator Tree:\n                TableScan\n                  alias: catalog_sales\n                  filterExpr: (cs_item_sk is not null and cs_sold_date_sk is not null) (type: boolean)\n                  Statistics: Num rows: 286549727 Data size: 37743959324 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: cs_item_sk is not null (type: boolean)\n                    Statistics: Num rows: 143274864 Data size: 18871979727 Basic stats: COMPLETE Column stats: NONE\n                    Map Join Operator\n                      condition map:\n                           Inner Join 0 to 1\n                      condition expressions:\n                        0 {cs_item_sk} {cs_order_number} {cs_quantity} {cs_ext_sales_price} {cs_sold_date_sk}\n                        1 {i_brand_id} {i_class_id} {i_category_id} {i_manufact_id}\n                      keys:\n                        0 cs_item_sk (type: int)\n                        1 i_item_sk (type: int)\n                      outputColumnNames: _col14, _col16, _col17, _col22, _col33, _col44, _col46, _col48, _col50\n                      input vertices:\n                        1 Map 1\n                      Statistics: Num rows: 157602352 Data size: 20759179264 Basic stats: COMPLETE Column stats: NONE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        condition expressions:\n                          0 {_col14} {_col16} {_col17} {_col22} {_col44} {_col46} {_col48} {_col50}\n                          1\n                        keys:\n                          0 _col33 (type: int)\n                          1 d_date_sk (type: int)\n                        outputColumnNames: _col14, _col16, _col17, _col22, _col44, _col46, _col48, _col50\n                        input vertices:\n                          1 Map 24\n                        Statistics: Num rows: 173362592 Data size: 22835097600 Basic stats: COMPLETE Column stats: NONE\n                        Reduce Output Operator\n                          key expressions: _col16 (type: int), _col14 (type: int)\n                          sort order: ++\n                          Map-reduce partition columns: _col16 (type: int), _col14 (type: int)\n                          Statistics: Num rows: 173362592 Data size: 22835097600 Basic stats: COMPLETE Column stats: NONE\n                          value expressions: _col17 (type: int), _col22 (type: float), _col44 (type: int), _col46 (type: int), _col48 (type: int), _col50 (type: int)\n            Execution mode: vectorized\n        Map 17\n            Map Operator Tree:\n                TableScan\n                  alias: store_returns\n                  Statistics: Num rows: 55578005 Data size: 4155315616 Basic stats: COMPLETE Column stats: NONE\n                  Reduce Output Operator\n                    key expressions: sr_ticket_number (type: int), sr_item_sk (type: int)\n                    sort order: ++\n                    Map-reduce partition columns: sr_ticket_number (type: int), sr_item_sk (type: int)\n                    Statistics: Num rows: 55578005 Data size: 4155315616 Basic stats: COMPLETE Column stats: NONE\n                    value expressions: sr_return_quantity (type: int), sr_return_amt (type: float)\n            Execution mode: vectorized\n        Map 18\n            Map Operator Tree:\n                TableScan\n                  alias: store_returns\n                  Statistics: Num rows: 55578005 Data size: 4155315616 Basic stats: COMPLETE Column stats: NONE\n                  Reduce Output Operator\n                    key expressions: sr_ticket_number (type: int), sr_item_sk (type: int)\n                    sort order: ++\n                    Map-reduce partition columns: sr_ticket_number (type: int), sr_item_sk (type: int)\n                    Statistics: Num rows: 55578005 Data size: 4155315616 Basic stats: COMPLETE Column stats: NONE\n                    value expressions: sr_return_quantity (type: int), sr_return_amt (type: float)\n            Execution mode: vectorized\n        Map 19\n            Map Operator Tree:\n                TableScan\n                  alias: web_returns\n                  Statistics: Num rows: 13749816 Data size: 1237758344 Basic stats: COMPLETE Column stats: NONE\n                  Reduce Output Operator\n                    key expressions: wr_order_number (type: int), wr_item_sk (type: int)\n                    sort order: ++\n                    Map-reduce partition columns: wr_order_number (type: int), wr_item_sk (type: int)\n                    Statistics: Num rows: 13749816 Data size: 1237758344 Basic stats: COMPLETE Column stats: NONE\n                    value expressions: wr_return_quantity (type: int), wr_return_amt (type: float)\n            Execution mode: vectorized\n        Map 2\n            Map Operator Tree:\n                TableScan\n                  alias: store_sales\n                  filterExpr: (ss_item_sk is not null and ss_sold_date_sk is not null) (type: boolean)\n                  Statistics: Num rows: 550076554 Data size: 47370018896 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ss_item_sk is not null (type: boolean)\n                    Statistics: Num rows: 275038277 Data size: 23685009448 Basic stats: COMPLETE Column stats: NONE\n                    Map Join Operator\n                      condition map:\n                           Inner Join 0 to 1\n                      condition expressions:\n                        0 {ss_item_sk} {ss_ticket_number} {ss_quantity} {ss_ext_sales_price} {ss_sold_date_sk}\n                        1 {i_brand_id} {i_class_id} {i_category_id} {i_manufact_id}\n                      keys:\n                        0 ss_item_sk (type: int)\n                        1 i_item_sk (type: int)\n                      outputColumnNames: _col1, _col8, _col9, _col14, _col22, _col33, _col35, _col37, _col39\n                      input vertices:\n                        1 Map 29\n                      Statistics: Num rows: 302542112 Data size: 26053511168 Basic stats: COMPLETE Column stats: NONE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        condition expressions:\n                          0 {_col1} {_col8} {_col9} {_col14} {_col33} {_col35} {_col37} {_col39}\n                          1\n                        keys:\n                          0 _col22 (type: int)\n                          1 d_date_sk (type: int)\n                        outputColumnNames: _col1, _col8, _col9, _col14, _col33, _col35, _col37, _col39\n                        input vertices:\n                          1 Map 27\n                        Statistics: Num rows: 332796320 Data size: 28658862080 Basic stats: COMPLETE Column stats: NONE\n                        Reduce Output Operator\n                          key expressions: _col8 (type: int), _col1 (type: int)\n                          sort order: ++\n                          Map-reduce partition columns: _col8 (type: int), _col1 (type: int)\n                          Statistics: Num rows: 332796320 Data size: 28658862080 Basic stats: COMPLETE Column stats: NONE\n                          value expressions: _col9 (type: int), _col14 (type: float), _col33 (type: int), _col35 (type: int), _col37 (type: int), _col39 (type: int)\n            Execution mode: vectorized\n        Map 20\n            Map Operator Tree:\n                TableScan\n                  alias: date_dim\n                  filterExpr: (d_date_sk is not null and (d_year = 2001)) (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (d_date_sk is not null and (d_year = 2001)) (type: boolean)\n                    Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: d_date_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: d_date_sk (type: int)\n                      Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 21\n            Map Operator Tree:\n                TableScan\n                  alias: item\n                  filterExpr: (((((i_item_sk is not null and (i_category = 'Sports')) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                  Statistics: Num rows: 48000 Data size: 68732712 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (((((i_item_sk is not null and (i_category = 'Sports')) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                    Statistics: Num rows: 750 Data size: 1073948 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: i_item_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: i_item_sk (type: int)\n                      Statistics: Num rows: 750 Data size: 1073948 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: i_brand_id (type: int), i_class_id (type: int), i_category_id (type: int), i_manufact_id (type: int)\n            Execution mode: vectorized\n        Map 22\n            Map Operator Tree:\n                TableScan\n                  alias: item\n                  filterExpr: (((((i_item_sk is not null and (i_category = 'Sports')) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                  Statistics: Num rows: 48000 Data size: 68732712 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (((((i_item_sk is not null and (i_category = 'Sports')) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                    Statistics: Num rows: 750 Data size: 1073948 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: i_item_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: i_item_sk (type: int)\n                      Statistics: Num rows: 750 Data size: 1073948 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: i_brand_id (type: int), i_class_id (type: int), i_category_id (type: int), i_manufact_id (type: int)\n            Execution mode: vectorized\n        Map 23\n            Map Operator Tree:\n                TableScan\n                  alias: web_sales\n                  filterExpr: (ws_item_sk is not null and ws_sold_date_sk is not null) (type: boolean)\n                  Filter Operator\n                    predicate: ws_item_sk is not null (type: boolean)\n                    Map Join Operator\n                      condition map:\n                           Inner Join 0 to 1\n                      condition expressions:\n                        0 {ws_item_sk} {ws_order_number} {ws_quantity} {ws_ext_sales_price} {ws_sold_date_sk}\n                        1 {i_brand_id} {i_class_id} {i_category_id} {i_manufact_id}\n                      keys:\n                        0 ws_item_sk (type: int)\n                        1 i_item_sk (type: int)\n                      outputColumnNames: _col2, _col16, _col17, _col22, _col33, _col44, _col46, _col48, _col50\n                      input vertices:\n                        1 Map 21\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        condition expressions:\n                          0 {_col2} {_col16} {_col17} {_col22} {_col44} {_col46} {_col48} {_col50}\n                          1\n                        keys:\n                          0 _col33 (type: int)\n                          1 d_date_sk (type: int)\n                        outputColumnNames: _col2, _col16, _col17, _col22, _col44, _col46, _col48, _col50\n                        input vertices:\n                          1 Map 13\n                        Map Join Operator\n                          condition map:\n                               Left Outer Join0 to 1\n                          condition expressions:\n                            0 {_col17} {_col22} {_col44} {_col46} {_col48} {_col50}\n                            1 {wr_return_quantity} {wr_return_amt}\n                          keys:\n                            0 _col16 (type: int), _col2 (type: int)\n                            1 wr_order_number (type: int), wr_item_sk (type: int)\n                          outputColumnNames: _col17, _col22, _col44, _col46, _col48, _col50, _col106, _col107\n                          input vertices:\n                            1 Map 19\n                          Select Operator\n                            expressions: 2001 (type: int), _col44 (type: int), _col46 (type: int), _col48 (type: int), _col50 (type: int), (_col17 - COALESCE(_col106,0)) (type: int), (_col22 - COALESCE(_col107,0.0)) (type: double)\n                            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                            Select Operator\n                              expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int), _col5 (type: int), _col6 (type: double)\n                              outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                              Group By Operator\n                                aggregations: sum(_col5), sum(_col6)\n                                keys: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                                mode: hash\n                                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                                Reduce Output Operator\n                                  key expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                                  sort order: +++++\n                                  Map-reduce partition columns: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                                  value expressions: _col5 (type: bigint), _col6 (type: double)\n            Execution mode: vectorized\n        Map 24\n            Map Operator Tree:\n                TableScan\n                  alias: date_dim\n                  filterExpr: (d_date_sk is not null and (d_year = 2002)) (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (d_date_sk is not null and (d_year = 2002)) (type: boolean)\n                    Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: d_date_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: d_date_sk (type: int)\n                      Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 25\n            Map Operator Tree:\n                TableScan\n                  alias: catalog_returns\n                  Statistics: Num rows: 28798881 Data size: 2942039156 Basic stats: COMPLETE Column stats: NONE\n                  Reduce Output Operator\n                    key expressions: cr_order_number (type: int), cr_item_sk (type: int)\n                    sort order: ++\n                    Map-reduce partition columns: cr_order_number (type: int), cr_item_sk (type: int)\n                    Statistics: Num rows: 28798881 Data size: 2942039156 Basic stats: COMPLETE Column stats: NONE\n                    value expressions: cr_return_quantity (type: int), cr_return_amount (type: float)\n            Execution mode: vectorized\n        Map 27\n            Map Operator Tree:\n                TableScan\n                  alias: date_dim\n                  filterExpr: (d_date_sk is not null and (d_year = 2002)) (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (d_date_sk is not null and (d_year = 2002)) (type: boolean)\n                    Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: d_date_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: d_date_sk (type: int)\n                      Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 28\n            Map Operator Tree:\n                TableScan\n                  alias: catalog_sales\n                  filterExpr: (cs_item_sk is not null and cs_sold_date_sk is not null) (type: boolean)\n                  Statistics: Num rows: 286549727 Data size: 37743959324 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: cs_item_sk is not null (type: boolean)\n                    Statistics: Num rows: 143274864 Data size: 18871979727 Basic stats: COMPLETE Column stats: NONE\n                    Map Join Operator\n                      condition map:\n                           Inner Join 0 to 1\n                      condition expressions:\n                        0 {cs_item_sk} {cs_order_number} {cs_quantity} {cs_ext_sales_price} {cs_sold_date_sk}\n                        1 {i_brand_id} {i_class_id} {i_category_id} {i_manufact_id}\n                      keys:\n                        0 cs_item_sk (type: int)\n                        1 i_item_sk (type: int)\n                      outputColumnNames: _col14, _col16, _col17, _col22, _col33, _col44, _col46, _col48, _col50\n                      input vertices:\n                        1 Map 22\n                      Statistics: Num rows: 157602352 Data size: 20759179264 Basic stats: COMPLETE Column stats: NONE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        condition expressions:\n                          0 {_col14} {_col16} {_col17} {_col22} {_col44} {_col46} {_col48} {_col50}\n                          1\n                        keys:\n                          0 _col33 (type: int)\n                          1 d_date_sk (type: int)\n                        outputColumnNames: _col14, _col16, _col17, _col22, _col44, _col46, _col48, _col50\n                        input vertices:\n                          1 Map 34\n                        Statistics: Num rows: 173362592 Data size: 22835097600 Basic stats: COMPLETE Column stats: NONE\n                        Reduce Output Operator\n                          key expressions: _col16 (type: int), _col14 (type: int)\n                          sort order: ++\n                          Map-reduce partition columns: _col16 (type: int), _col14 (type: int)\n                          Statistics: Num rows: 173362592 Data size: 22835097600 Basic stats: COMPLETE Column stats: NONE\n                          value expressions: _col17 (type: int), _col22 (type: float), _col44 (type: int), _col46 (type: int), _col48 (type: int), _col50 (type: int)\n            Execution mode: vectorized\n        Map 29\n            Map Operator Tree:\n                TableScan\n                  alias: item\n                  filterExpr: (((((i_item_sk is not null and (i_category = 'Sports')) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                  Statistics: Num rows: 48000 Data size: 68732712 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (((((i_item_sk is not null and (i_category = 'Sports')) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                    Statistics: Num rows: 750 Data size: 1073948 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: i_item_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: i_item_sk (type: int)\n                      Statistics: Num rows: 750 Data size: 1073948 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: i_brand_id (type: int), i_class_id (type: int), i_category_id (type: int), i_manufact_id (type: int)\n            Execution mode: vectorized\n        Map 30\n            Map Operator Tree:\n                TableScan\n                  alias: item\n                  filterExpr: (((((i_item_sk is not null and (i_category = 'Sports')) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                  Statistics: Num rows: 48000 Data size: 68732712 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (((((i_item_sk is not null and (i_category = 'Sports')) and i_brand_id is not null) and i_class_id is not null) and i_category_id is not null) and i_manufact_id is not null) (type: boolean)\n                    Statistics: Num rows: 750 Data size: 1073948 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: i_item_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: i_item_sk (type: int)\n                      Statistics: Num rows: 750 Data size: 1073948 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: i_brand_id (type: int), i_class_id (type: int), i_category_id (type: int), i_manufact_id (type: int)\n            Execution mode: vectorized\n        Map 31\n            Map Operator Tree:\n                TableScan\n                  alias: web_sales\n                  filterExpr: (ws_item_sk is not null and ws_sold_date_sk is not null) (type: boolean)\n                  Filter Operator\n                    predicate: ws_item_sk is not null (type: boolean)\n                    Map Join Operator\n                      condition map:\n                           Inner Join 0 to 1\n                      condition expressions:\n                        0 {ws_item_sk} {ws_order_number} {ws_quantity} {ws_ext_sales_price} {ws_sold_date_sk}\n                        1 {i_brand_id} {i_class_id} {i_category_id} {i_manufact_id}\n                      keys:\n                        0 ws_item_sk (type: int)\n                        1 i_item_sk (type: int)\n                      outputColumnNames: _col2, _col16, _col17, _col22, _col33, _col44, _col46, _col48, _col50\n                      input vertices:\n                        1 Map 12\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        condition expressions:\n                          0 {_col2} {_col16} {_col17} {_col22} {_col44} {_col46} {_col48} {_col50}\n                          1\n                        keys:\n                          0 _col33 (type: int)\n                          1 d_date_sk (type: int)\n                        outputColumnNames: _col2, _col16, _col17, _col22, _col44, _col46, _col48, _col50\n                        input vertices:\n                          1 Map 32\n                        Map Join Operator\n                          condition map:\n                               Left Outer Join0 to 1\n                          condition expressions:\n                            0 {_col17} {_col22} {_col44} {_col46} {_col48} {_col50}\n                            1 {wr_return_quantity} {wr_return_amt}\n                          keys:\n                            0 _col16 (type: int), _col2 (type: int)\n                            1 wr_order_number (type: int), wr_item_sk (type: int)\n                          outputColumnNames: _col17, _col22, _col44, _col46, _col48, _col50, _col106, _col107\n                          input vertices:\n                            1 Map 14\n                          Select Operator\n                            expressions: 2002 (type: int), _col44 (type: int), _col46 (type: int), _col48 (type: int), _col50 (type: int), (_col17 - COALESCE(_col106,0)) (type: int), (_col22 - COALESCE(_col107,0.0)) (type: double)\n                            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                            Select Operator\n                              expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int), _col5 (type: int), _col6 (type: double)\n                              outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                              Group By Operator\n                                aggregations: sum(_col5), sum(_col6)\n                                keys: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                                mode: hash\n                                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                                Reduce Output Operator\n                                  key expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                                  sort order: +++++\n                                  Map-reduce partition columns: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                                  value expressions: _col5 (type: bigint), _col6 (type: double)\n            Execution mode: vectorized\n        Map 32\n            Map Operator Tree:\n                TableScan\n                  alias: date_dim\n                  filterExpr: (d_date_sk is not null and (d_year = 2002)) (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (d_date_sk is not null and (d_year = 2002)) (type: boolean)\n                    Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: d_date_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: d_date_sk (type: int)\n                      Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 33\n            Map Operator Tree:\n                TableScan\n                  alias: catalog_returns\n                  Statistics: Num rows: 28798881 Data size: 2942039156 Basic stats: COMPLETE Column stats: NONE\n                  Reduce Output Operator\n                    key expressions: cr_order_number (type: int), cr_item_sk (type: int)\n                    sort order: ++\n                    Map-reduce partition columns: cr_order_number (type: int), cr_item_sk (type: int)\n                    Statistics: Num rows: 28798881 Data size: 2942039156 Basic stats: COMPLETE Column stats: NONE\n                    value expressions: cr_return_quantity (type: int), cr_return_amount (type: float)\n            Execution mode: vectorized\n        Map 34\n            Map Operator Tree:\n                TableScan\n                  alias: date_dim\n                  filterExpr: (d_date_sk is not null and (d_year = 2001)) (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (d_date_sk is not null and (d_year = 2001)) (type: boolean)\n                    Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: d_date_sk (type: int)\n                      sort order: +\n                      Map-reduce partition columns: d_date_sk (type: int)\n                      Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 8\n            Map Operator Tree:\n                TableScan\n                  alias: store_sales\n                  filterExpr: (ss_item_sk is not null and ss_sold_date_sk is not null) (type: boolean)\n                  Statistics: Num rows: 550076554 Data size: 47370018896 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ss_item_sk is not null (type: boolean)\n                    Statistics: Num rows: 275038277 Data size: 23685009448 Basic stats: COMPLETE Column stats: NONE\n                    Map Join Operator\n                      condition map:\n                           Inner Join 0 to 1\n                      condition expressions:\n                        0 {ss_item_sk} {ss_ticket_number} {ss_quantity} {ss_ext_sales_price} {ss_sold_date_sk}\n                        1 {i_brand_id} {i_class_id} {i_category_id} {i_manufact_id}\n                      keys:\n                        0 ss_item_sk (type: int)\n                        1 i_item_sk (type: int)\n                      outputColumnNames: _col1, _col8, _col9, _col14, _col22, _col33, _col35, _col37, _col39\n                      input vertices:\n                        1 Map 30\n                      Statistics: Num rows: 302542112 Data size: 26053511168 Basic stats: COMPLETE Column stats: NONE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        condition expressions:\n                          0 {_col1} {_col8} {_col9} {_col14} {_col33} {_col35} {_col37} {_col39}\n                          1\n                        keys:\n                          0 _col22 (type: int)\n                          1 d_date_sk (type: int)\n                        outputColumnNames: _col1, _col8, _col9, _col14, _col33, _col35, _col37, _col39\n                        input vertices:\n                          1 Map 20\n                        Statistics: Num rows: 332796320 Data size: 28658862080 Basic stats: COMPLETE Column stats: NONE\n                        Reduce Output Operator\n                          key expressions: _col8 (type: int), _col1 (type: int)\n                          sort order: ++\n                          Map-reduce partition columns: _col8 (type: int), _col1 (type: int)\n                          Statistics: Num rows: 332796320 Data size: 28658862080 Basic stats: COMPLETE Column stats: NONE\n                          value expressions: _col9 (type: int), _col14 (type: float), _col33 (type: int), _col35 (type: int), _col37 (type: int), _col39 (type: int)\n            Execution mode: vectorized\n        Reducer 11\n            Reduce Operator Tree:\n              Group By Operator\n                aggregations: sum(VALUE._col0), sum(VALUE._col1)\n                keys: KEY._col0 (type: int), KEY._col1 (type: int), KEY._col2 (type: int), KEY._col3 (type: int), KEY._col4 (type: int)\n                mode: mergepartial\n                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                Statistics: Num rows: 326292384 Data size: 34644464640 Basic stats: COMPLETE Column stats: NONE\n                Select Operator\n                  expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int), _col5 (type: bigint), _col6 (type: double)\n                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                  Statistics: Num rows: 326292384 Data size: 34644464640 Basic stats: COMPLETE Column stats: NONE\n                  Reduce Output Operator\n                    key expressions: _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                    sort order: ++++\n                    Map-reduce partition columns: _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                    Statistics: Num rows: 326292384 Data size: 34644464640 Basic stats: COMPLETE Column stats: NONE\n                    value expressions: _col0 (type: int), _col5 (type: bigint), _col6 (type: double)\n        Reducer 16\n            Reduce Operator Tree:\n              Join Operator\n                condition map:\n                     Left Outer Join0 to 1\n                condition expressions:\n                  0 {VALUE._col15} {VALUE._col20} {VALUE._col42} {VALUE._col44} {VALUE._col46} {VALUE._col48}\n                  1 {VALUE._col14} {VALUE._col15}\n                outputColumnNames: _col17, _col22, _col44, _col46, _col48, _col50, _col109, _col110\n                Select Operator\n                  expressions: 2002 (type: int), _col44 (type: int), _col46 (type: int), _col48 (type: int), _col50 (type: int), (_col17 - COALESCE(_col109,0)) (type: int), (_col22 - COALESCE(_col110,0.0)) (type: double)\n                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                  Select Operator\n                    expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int), _col5 (type: int), _col6 (type: double)\n                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                    Group By Operator\n                      aggregations: sum(_col5), sum(_col6)\n                      keys: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                      mode: hash\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                        sort order: +++++\n                        Map-reduce partition columns: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                        value expressions: _col5 (type: bigint), _col6 (type: double)\n        Reducer 26\n            Reduce Operator Tree:\n              Join Operator\n                condition map:\n                     Left Outer Join0 to 1\n                condition expressions:\n                  0 {VALUE._col15} {VALUE._col20} {VALUE._col42} {VALUE._col44} {VALUE._col46} {VALUE._col48}\n                  1 {VALUE._col14} {VALUE._col15}\n                outputColumnNames: _col17, _col22, _col44, _col46, _col48, _col50, _col109, _col110\n                Select Operator\n                  expressions: 2001 (type: int), _col44 (type: int), _col46 (type: int), _col48 (type: int), _col50 (type: int), (_col17 - COALESCE(_col109,0)) (type: int), (_col22 - COALESCE(_col110,0.0)) (type: double)\n                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                  Select Operator\n                    expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int), _col5 (type: int), _col6 (type: double)\n                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                    Group By Operator\n                      aggregations: sum(_col5), sum(_col6)\n                      keys: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                      mode: hash\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                        sort order: +++++\n                        Map-reduce partition columns: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                        value expressions: _col5 (type: bigint), _col6 (type: double)\n        Reducer 3\n            Reduce Operator Tree:\n              Join Operator\n                condition map:\n                     Left Outer Join0 to 1\n                condition expressions:\n                  0 {VALUE._col7} {VALUE._col12} {VALUE._col31} {VALUE._col33} {VALUE._col35} {VALUE._col37}\n                  1 {VALUE._col7} {VALUE._col8}\n                outputColumnNames: _col9, _col14, _col33, _col35, _col37, _col39, _col91, _col92\n                Select Operator\n                  expressions: 2002 (type: int), _col33 (type: int), _col35 (type: int), _col37 (type: int), _col39 (type: int), (_col9 - COALESCE(_col91,0)) (type: int), (_col14 - COALESCE(_col92,0.0)) (type: double)\n                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                  Select Operator\n                    expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int), _col5 (type: int), _col6 (type: double)\n                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                    Group By Operator\n                      aggregations: sum(_col5), sum(_col6)\n                      keys: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                      mode: hash\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                        sort order: +++++\n                        Map-reduce partition columns: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                        value expressions: _col5 (type: bigint), _col6 (type: double)\n        Reducer 5\n            Reduce Operator Tree:\n              Group By Operator\n                aggregations: sum(VALUE._col0), sum(VALUE._col1)\n                keys: KEY._col0 (type: int), KEY._col1 (type: int), KEY._col2 (type: int), KEY._col3 (type: int), KEY._col4 (type: int)\n                mode: mergepartial\n                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                Statistics: Num rows: 326292384 Data size: 34644464640 Basic stats: COMPLETE Column stats: NONE\n                Select Operator\n                  expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int), _col5 (type: bigint), _col6 (type: double)\n                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                  Statistics: Num rows: 326292384 Data size: 34644464640 Basic stats: COMPLETE Column stats: NONE\n                  Reduce Output Operator\n                    key expressions: _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                    sort order: ++++\n                    Map-reduce partition columns: _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                    Statistics: Num rows: 326292384 Data size: 34644464640 Basic stats: COMPLETE Column stats: NONE\n                    value expressions: _col0 (type: int), _col5 (type: bigint), _col6 (type: double)\n        Reducer 6\n            Reduce Operator Tree:\n              Join Operator\n                condition map:\n                     Inner Join 0 to 1\n                condition expressions:\n                  0 {VALUE._col0} {KEY.reducesinkkey0} {KEY.reducesinkkey1} {KEY.reducesinkkey2} {KEY.reducesinkkey3} {VALUE._col1} {VALUE._col2}\n                  1 {VALUE._col0} {KEY.reducesinkkey0} {KEY.reducesinkkey1} {KEY.reducesinkkey2} {KEY.reducesinkkey3} {VALUE._col1} {VALUE._col2}\n                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13\n                Statistics: Num rows: 358921632 Data size: 38108909568 Basic stats: COMPLETE Column stats: NONE\n                Filter Operator\n                  predicate: (((((((_col1 = _col8) and (_col2 = _col9)) and (_col3 = _col10)) and (_col4 = _col11)) and (_col0 = 2002)) and (_col7 = 2001)) and ((CAST( _col5 AS decimal(17,2)) / CAST( _col12 AS decimal(17,2))) < 0.9)) (type: boolean)\n                  Statistics: Num rows: 1869383 Data size: 198483850 Basic stats: COMPLETE Column stats: NONE\n                  Select Operator\n                    expressions: 2001 (type: int), 2002 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int), _col12 (type: bigint), _col5 (type: bigint), (_col5 - _col12) (type: bigint), (_col6 - _col13) (type: double)\n                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9\n                    Statistics: Num rows: 1869383 Data size: 198483850 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: _col8 (type: bigint)\n                      sort order: +\n                      Statistics: Num rows: 1869383 Data size: 198483850 Basic stats: COMPLETE Column stats: NONE\n                      TopN Hash Memory Usage: 0.04\n                      value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int), _col5 (type: int), _col6 (type: bigint), _col7 (type: bigint), _col9 (type: double)\n        Reducer 7\n            Reduce Operator Tree:\n              Select Operator\n                expressions: VALUE._col0 (type: int), VALUE._col1 (type: int), VALUE._col2 (type: int), VALUE._col3 (type: int), VALUE._col4 (type: int), VALUE._col5 (type: int), VALUE._col6 (type: bigint), VALUE._col7 (type: bigint), KEY.reducesinkkey0 (type: bigint), VALUE._col8 (type: double)\n                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9\n                Statistics: Num rows: 1869383 Data size: 198483850 Basic stats: COMPLETE Column stats: NONE\n                Limit\n                  Number of rows: 100\n                  Statistics: Num rows: 100 Data size: 10600 Basic stats: COMPLETE Column stats: NONE\n                  File Output Operator\n                    compressed: false\n                    Statistics: Num rows: 100 Data size: 10600 Basic stats: COMPLETE Column stats: NONE\n                    table:\n                        input format: org.apache.hadoop.mapred.TextInputFormat\n                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\n                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe\n            Execution mode: vectorized\n        Reducer 9\n            Reduce Operator Tree:\n              Join Operator\n                condition map:\n                     Left Outer Join0 to 1\n                condition expressions:\n                  0 {VALUE._col7} {VALUE._col12} {VALUE._col31} {VALUE._col33} {VALUE._col35} {VALUE._col37}\n                  1 {VALUE._col7} {VALUE._col8}\n                outputColumnNames: _col9, _col14, _col33, _col35, _col37, _col39, _col91, _col92\n                Select Operator\n                  expressions: 2001 (type: int), _col33 (type: int), _col35 (type: int), _col37 (type: int), _col39 (type: int), (_col9 - COALESCE(_col91,0)) (type: int), (_col14 - COALESCE(_col92,0.0)) (type: double)\n                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                  Select Operator\n                    expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int), _col5 (type: int), _col6 (type: double)\n                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                    Group By Operator\n                      aggregations: sum(_col5), sum(_col6)\n                      keys: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                      mode: hash\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                        sort order: +++++\n                        Map-reduce partition columns: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int)\n                        value expressions: _col5 (type: bigint), _col6 (type: double)\n        Union 10\n            Vertex: Union 10\n        Union 4\n            Vertex: Union 4\n\n  Stage: Stage-0\n    Fetch Operator\n      limit: 100\n      Processor Tree:\n        ListSink\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-09-10T23:14:30.932+0000","updated":"2014-09-10T23:14:30.932+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12739300/comment/14210596","id":"14210596","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thejas","name":"thejas","key":"thejas","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thejas&avatarId=15902","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thejas&avatarId=15902","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thejas&avatarId=15902","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thejas&avatarId=15902"},"displayName":"Thejas M Nair","active":true,"timeZone":"America/Los_Angeles"},"body":"This has been fixed in 0.14 release. Please open new jira if you see any issues.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thejas","name":"thejas","key":"thejas","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thejas&avatarId=15902","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thejas&avatarId=15902","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thejas&avatarId=15902","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thejas&avatarId=15902"},"displayName":"Thejas M Nair","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-11-13T19:41:37.195+0000","updated":"2014-11-13T19:41:37.195+0000"}],"maxResults":3,"total":3,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-7993/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1zpiv:"}}