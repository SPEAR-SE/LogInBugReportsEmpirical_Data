{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12746291","self":"https://issues.apache.org/jira/rest/api/2/issue/12746291","key":"HIVE-8371","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310843","id":"12310843","key":"HIVE","name":"Hive","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310843&avatarId=11935","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310843&avatarId=11935","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310843&avatarId=11935","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310843&avatarId=11935"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2014-10-07T00:47:31.150+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Wed Oct 08 03:24:54 UTC 2014","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-8371/watchers","watchCount":6,"isWatching":false},"created":"2014-10-06T23:49:09.953+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":["hcatalog","partition"],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12324986","id":"12324986","description":"released","name":"0.13.0","archived":false,"released":true,"releaseDate":"2014-04-21"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12326450","id":"12326450","description":"released","name":"0.14.0","archived":false,"released":true,"releaseDate":"2014-11-12"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12326829","id":"12326829","description":"0.13 maintenance release 1","name":"0.13.1","archived":false,"released":true,"releaseDate":"2014-06-06"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thiruvel","name":"thiruvel","key":"thiruvel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thiruvel Thirumoolan","active":true,"timeZone":"America/Los_Angeles"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2014-10-08T03:24:54.332+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12320409","id":"12320409","name":"HCatalog","description":"Tracks issues related to the HCatalog"}],"timeoriginalestimate":null,"description":"In Hive-12 and before (on in previous HCatalog releases) HCatStorer would fail if the partition already exists (whether before launching the job or during commit depending on the partitioning). HIVE-6406 changed that behavior and by default does an append. This causes data quality issues since an rerun (or duplicate run) won't fail (when it used to) and will just append to the partition.\n\nA preferable approach would be to leave HCatStorer behavior as is (fail during a duplicate publish) and support append through an option. Overwrite also can be implemented in a similar fashion. Eg:\n\nstore A into 'db.table' using org.apache.hive.hcatalog.pig.HCatStorer('partspec', '', ' -append');","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"HCatStorer should fail by default when publishing to an existing partition","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thiruvel","name":"thiruvel","key":"thiruvel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thiruvel Thirumoolan","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thiruvel","name":"thiruvel","key":"thiruvel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thiruvel Thirumoolan","active":true,"timeZone":"America/Los_Angeles"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12746291/comment/14161227","id":"14161227","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thiruvel","name":"thiruvel","key":"thiruvel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thiruvel Thirumoolan","active":true,"timeZone":"America/Los_Angeles"},"body":"[~sushanth] Lemme know what do you think about this.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thiruvel","name":"thiruvel","key":"thiruvel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thiruvel Thirumoolan","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-10-06T23:49:53.920+0000","updated":"2014-10-06T23:49:53.920+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12746291/comment/14161290","id":"14161290","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sushanth","name":"sushanth","key":"sushanth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=sushanth&avatarId=26812","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sushanth&avatarId=26812","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sushanth&avatarId=26812","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sushanth&avatarId=26812"},"displayName":"Sushanth Sowmyan","active":true,"timeZone":"America/Los_Angeles"},"body":"The main goal of HIVE-6405 was to unify expected behaviour between hive and hcatalog, and making the default for HCatStorer different from the default for hive defeats that purpose. To that end, I disagree that it should fail by default unless you are also saying hive should also fail by default inserting into a partition that already exists.\n\nI fully see the need for data quality issues needing the immutability aspect when jobs are not written assuming idempotency, and that's why HIVE-6406 added a table-wide property to do exactly that, and default append behaviour can currently be turned off table-wide by setting \"immutable\"=\"true\" as a table property, and my suggestion would be to use that on tables with jobs that you expect to hit this problem.\n\nIf your requirement is to have a job-level property that handles this, then, allowing for the \"keeping in-sync with hive default behaviour\" principle then leads me to the following behaviour :\n\na) If no special argument is provided, stick to defaults for the table - i.e., hive defaults, and overridable by the \"immutable\" property, which also overrides the default behaviour for hive.\nb) org.apache.hive.hcatalog.pig.HCatStorer('partspec', '', ' -immutable') => ignore immutable setting, disallow append.\nc) org.apache.hive.hcatalog.pig.HCatStorer('partspec', '', ' -append') => ignore immutable setting, allow append. \n\nNow, thinking more about this, if we were to have a job-level override, to be honest, I am not comfortable with (c), since it's possible for a end user to write a pig script that ignores the table-level immutability property if set, and have it cause data quality issues later, even if a user tries to control it for that table using the \"immutable\" property. Thus, I think we should not implement (c) in this case. I am okay with implementing (b) if you want to have a safeguard default.\n\nI would further say, btw, that I would also be okay with making the default value for the \"immutable\" table property (i.e. what value it'll have if it isn't set) be made configurable on a warehouse-wide level from hive-site.xml. That would also solve your problem without needing you to go set it for each table.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sushanth","name":"sushanth","key":"sushanth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=sushanth&avatarId=26812","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sushanth&avatarId=26812","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sushanth&avatarId=26812","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sushanth&avatarId=26812"},"displayName":"Sushanth Sowmyan","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-10-07T00:47:31.150+0000","updated":"2014-10-07T00:47:31.150+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12746291/comment/14161292","id":"14161292","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sushanth","name":"sushanth","key":"sushanth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=sushanth&avatarId=26812","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sushanth&avatarId=26812","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sushanth&avatarId=26812","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sushanth&avatarId=26812"},"displayName":"Sushanth Sowmyan","active":true,"timeZone":"America/Los_Angeles"},"body":"Edit:\n\n{quote}\nI am okay with implementing (b) if you want to have a safeguard default.\n{quote}\n\nErr, that bit should instead read :\n\n{quote}\nI am okay with implementing (b) if you want to have the ability to invoke HCatStorer that always maintains that safeguard.\n{quote}\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sushanth","name":"sushanth","key":"sushanth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=sushanth&avatarId=26812","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sushanth&avatarId=26812","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sushanth&avatarId=26812","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sushanth&avatarId=26812"},"displayName":"Sushanth Sowmyan","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-10-07T00:50:03.937+0000","updated":"2014-10-07T00:50:03.937+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12746291/comment/14162873","id":"14162873","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thiruvel","name":"thiruvel","key":"thiruvel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thiruvel Thirumoolan","active":true,"timeZone":"America/Los_Angeles"},"body":"Having a warehouse level property which basically sets default value of immutable property will only help restore HCatalog behavior. Isn't that going to flip the behavior of Hive?\n\nI am very concerned that the default HCatStorer behavior has changed after it has been out for a very long time.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thiruvel","name":"thiruvel","key":"thiruvel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thiruvel Thirumoolan","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-10-08T00:49:56.969+0000","updated":"2014-10-08T00:49:56.969+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12746291/comment/14163012","id":"14163012","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sushanth","name":"sushanth","key":"sushanth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=sushanth&avatarId=26812","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sushanth&avatarId=26812","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sushanth&avatarId=26812","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sushanth&avatarId=26812"},"displayName":"Sushanth Sowmyan","active":true,"timeZone":"America/Los_Angeles"},"body":"It is going to flip the hive behaviour in that it will disallow insert-into if there is already data - that was intentional, to be consistent between hive and hcatalog. The question is - do we want to allow appends to data? If so, hive and hcatalog should both allow it. If not, hive and hcatalog should both deny it.\n\nI do understand the concern that HCatStorer behaviour has changed after being out for a long time, but from that same perspective, this new behaviour of HCatStorer has also been out for a while now, for publicly released hive.\n\nThis could still be preserved with yet another warehouse-level parameter for legacy behaviour that makes HCatStorer default to immutable, and hive default to mutable, but honestly, I think that's ugly and will cause more problems going forward for maintainability.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sushanth","name":"sushanth","key":"sushanth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=sushanth&avatarId=26812","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sushanth&avatarId=26812","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sushanth&avatarId=26812","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sushanth&avatarId=26812"},"displayName":"Sushanth Sowmyan","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-10-08T03:24:54.332+0000","updated":"2014-10-08T03:24:54.332+0000"}],"maxResults":5,"total":5,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-8371/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i20v47:"}}