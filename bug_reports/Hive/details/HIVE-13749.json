{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12969057","self":"https://issues.apache.org/jira/rest/api/2/issue/12969057","key":"HIVE-13749","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310843","id":"12310843","key":"HIVE","name":"Hive","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310843&avatarId=11935","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310843&avatarId=11935","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310843&avatarId=11935","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310843&avatarId=11935"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12335838","id":"12335838","description":"Maintenance branch for 2.1 ","name":"2.1.1","archived":false,"released":true,"releaseDate":"2016-12-08"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12335837","id":"12335837","name":"2.2.0","archived":false,"released":true,"releaseDate":"2017-07-25"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2016-05-12T18:58:50.415+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Fri Jul 08 13:56:19 UTC 2016","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_2_*:*_1225785039_*|*_5_*:*_1_*:*_0_*|*_10002_*:*_2_*:*_3689705355","customfield_12312321":null,"resolutiondate":"2016-07-08T13:56:19.566+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-13749/watchers","watchCount":12,"isWatching":false},"created":"2016-05-12T16:31:29.845+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"3.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12329363","id":"12329363","name":"1.1.0","archived":false,"released":true,"releaseDate":"2015-03-07"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2016-12-08T14:38:58.984+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312584","id":"12312584","name":"Metastore","description":"Tracks issue dealing with metastore."}],"timeoriginalestimate":null,"description":"Looking a heap dump of 10GB, a large number of Configuration objects(> 66k instances) are being retained. These objects along with its retained set is occupying about 95% of the heap space. This leads to HMS crashes every few days.\n\nI will attach an exported snapshot from the eclipse MAT.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12335838","id":"12335838","description":"Maintenance branch for 2.1 ","name":"2.1.1","archived":false,"released":true,"releaseDate":"2016-12-08"}],"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12815813","id":"12815813","filename":"HIVE-13749.1.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2016-07-01T20:35:44.151+0000","size":532,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12815813/HIVE-13749.1.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12806472","id":"12806472","filename":"HIVE-13749.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2016-05-26T20:48:36.617+0000","size":829,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12806472/HIVE-13749.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12803698","id":"12803698","filename":"Top_Consumers7.html","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2016-05-12T16:31:59.706+0000","size":4990,"mimeType":"text/html","content":"https://issues.apache.org/jira/secure/attachment/12803698/Top_Consumers7.html"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Memory leak in Hive Metastore","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969057/comment/15281918","id":"15281918","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thejas","name":"thejas","key":"thejas","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thejas&avatarId=15902","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thejas&avatarId=15902","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thejas&avatarId=15902","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thejas&avatarId=15902"},"displayName":"Thejas M Nair","active":true,"timeZone":"America/Los_Angeles"},"body":"What is retaining them as per MAT ?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thejas","name":"thejas","key":"thejas","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thejas&avatarId=15902","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thejas&avatarId=15902","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thejas&avatarId=15902","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thejas&avatarId=15902"},"displayName":"Thejas M Nair","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-05-12T18:58:50.415+0000","updated":"2016-05-12T18:59:13.177+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969057/comment/15282359","id":"15282359","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"body":"I am still analyzing the heap, but appears like they are all stashed away in HashMap, perhaps in a threadlocal. I do not have the allocation stack for these objects so I cannot tell what part of the code creates these instances.\n\nJust running a simple query iteratively via beeline where it connects + disconnects every iteration, I observe the leak. Not sure if it is the same workload as in the environment where the heap dump was generated from.\n\nI am currently running some tests with a change to remove it from the threadlocal at\nhttps://github.com/apache/hive/blob/master/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java#L811\nand\nhttps://github.com/apache/hive/blob/master/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java#L483\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2016-05-13T02:56:54.221+0000","updated":"2016-05-13T02:56:54.221+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969057/comment/15296454","id":"15296454","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"body":"[~thejas] I have a better understanding of what is causing this issue. It appears that FileSystem.Cache (hadoop APIs) is retaining the instances of Configuration in its cache. \nAnytime we call a FileSystem.get(conf), like so\nhttps://github.com/apache/hive/blob/master/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java#L1685\n\nthe conf object becomes the part of the key for the map entry. Its meant to improve performance so we dont have to re-create these FileSystem objects, but doesnt appear that Hive's use of these APIs is using the cache efficiently. \nThere are other areas in the code that contribute, like Path.getFileSystem() under the covers could add to this cache.\nhttps://github.com/apache/hive/blob/master/metastore/src/java/org/apache/hadoop/hive/metastore/Warehouse.java#L104\n\nCaching can be turned off entirely by using \nfs.%s.impl.disable.cache=true where %s is the caching scheme (ex: hdfs or s3) which might make this problem go away but has a performance overhead. (I havent measured it though).\n\nUnfortunately, there is no means to selectively turn off the caching on a per call basis. So we have to fix this in the hive code. fs.close() would remove the entry from the cache. But we cannot call it every time we use this API, as it would be the same as disabling the cache entirely. So its easy choice to add fs.close() here\nhttps://github.com/apache/hive/blob/master/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java#L1685\n\nBut for the other code in Warehouse, we need more data around the cache hits and misses. I am working on instrumenting the FileSystem code to provide this info.\n\nAlternate thought, (I am not sure how feasible it is though), since the FileSystem code does not appear to be using the properties within this Configuration object itself, it may be safe to use a static instance of HiveConf on most calls to FileSystem, like mkdirs(), get() etc. This way we use the cache efficiently too. However, I am not sure if there will be session specific properties that get used across all calls to the FileSystem APIs. \n\nThoughts? Thanks in advance.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2016-05-23T14:43:55.103+0000","updated":"2016-05-23T14:43:55.103+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969057/comment/15296771","id":"15296771","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thejas","name":"thejas","key":"thejas","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thejas&avatarId=15902","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thejas&avatarId=15902","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thejas&avatarId=15902","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thejas&avatarId=15902"},"displayName":"Thejas M Nair","active":true,"timeZone":"America/Los_Angeles"},"body":"This FileSystem.CACHE leak is an issue that shows up in several places across projects. Its not a cache in the traditional sense, that it doesn't have an eviction policy.\nThe peculiar thing about this cache is that the underlying Map has a key that contains UGI object, and the key comparison uses object equality (== operator) instead of .equals method for comparison. This is apparently by design for some security aspects.\n\nSo you have one entry in the cache for every UGI object. \n\nSee the final patch in HIVE-3098 for example. The usual way to solve this is to call FileSystem.closeAllForUGI once the UGI use is over.\nOther related leak jiras - HIVE-4501, HIVE-9234 .\n\nYou might want to check if this is happening in latest trunk as well. There might be other patches that have fixed the problem.\n\n\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thejas","name":"thejas","key":"thejas","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thejas&avatarId=15902","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thejas&avatarId=15902","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thejas&avatarId=15902","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thejas&avatarId=15902"},"displayName":"Thejas M Nair","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-05-23T18:07:13.402+0000","updated":"2016-05-23T18:07:13.402+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969057/comment/15302889","id":"15302889","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"body":"perhaps in the HiveMetaStore.shutdown() we clear the cache for the current UGI. Make sense?  Could you please review the patch when you have a chance ?\nI have had the customer disable the FileSystem caching by adding {{fs.hdfs.impl.disable.cache=true}} to the HMS configuration, the re-run the workloads. The same site that had 66000+ Configuration instances in their heapdump now has 80 instances and none of them are in Cache. So it is clear that the FileSystem.CACHE is the problem. \nThanks","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2016-05-26T20:47:31.560+0000","updated":"2016-05-26T20:47:31.560+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969057/comment/15302925","id":"15302925","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thejas","name":"thejas","key":"thejas","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thejas&avatarId=15902","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thejas&avatarId=15902","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thejas&avatarId=15902","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thejas&avatarId=15902"},"displayName":"Thejas M Nair","active":true,"timeZone":"America/Los_Angeles"},"body":"Regarding the patch\n1. How do you make sure that files created by this ugi are not in use in other parts ? We need do the closing only after we are sure that the ugi object is no longer going to be used. \n2. I am not sure if this would fix the leak. As you can see we have patches that deal with the closing when UGI object is no longer used.\nAre you able to reproduce this in your environment ? If not, you might want to add some debugging around code that adds entries in the cache, and see if the closing of files generated from those places is happening.\nYou might also want to see if the user is some some plugins that might be creating new UGI objects.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thejas","name":"thejas","key":"thejas","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thejas&avatarId=15902","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thejas&avatarId=15902","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thejas&avatarId=15902","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thejas&avatarId=15902"},"displayName":"Thejas M Nair","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-05-26T21:02:33.653+0000","updated":"2016-05-26T21:02:33.653+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969057/comment/15302965","id":"15302965","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"body":"Oops just posted the patch to RB (https://reviews.apache.org/r/47918/) at the same time as this comment.\n1) Isnt the shutdown() called when a HMS request is fulfilled and the executor thread is being released back to the pool? So any new calls would potentially have a new UGI and a new instance of HiveConf. Also, calling closeAll() just removes the cached element. At worst, the FileSystem object is re-cached on a miss.\n2) The other fixes are to address a similar issue on the HS2 side where using the FileSystem APIs causes the Cache to grow. This issue is on the HMS side.\nRegarding reproducing this locally, yes and no. I ran 100's of iterations of beeline executing a script that create a table and then drops it while randomly toggling the value of a hive conf property. For 300 iterations, I have gotten it to retain 60 instances which is not quite the same success as the customer is having. I think because of my test being run as a single user. Re-running the test with this fix, I have 8 instances retained but none in this particular cache.\nI have run with debug around this code and during the drop table command, I can see an element being added to the cache. I am also waiting for logs from this customer who is running with some instrumentation + fix. I can confirm that from those logs too.\n\nAlternatively, in checkTrashPurgeCombination() we could add a close() to this FileSystem. In my testcase, this has been the primary reason for the retained instances.\n{code}\n          HadoopShims.HdfsEncryptionShim shim =\n            ShimLoader.getHadoopShims().createHdfsEncryptionShim(FileSystem.get(hiveConf), hiveConf);\n{code}\n\nThoughts? Thanks","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2016-05-26T21:28:34.387+0000","updated":"2016-05-26T21:28:34.387+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969057/comment/15303049","id":"15303049","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thejas","name":"thejas","key":"thejas","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thejas&avatarId=15902","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thejas&avatarId=15902","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thejas&avatarId=15902","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thejas&avatarId=15902"},"displayName":"Thejas M Nair","active":true,"timeZone":"America/Los_Angeles"},"body":"HIVE-3098 fixes it for metastore . \nThis fix can be dangerous for the embedded metastore use case.\n\nbq. I think because of my test being run as a single user. \nSingle user shouldn't matter as the cache is based on the UGI object as I mentioned earlier. Testing using hive-cli might be better that would ensure creation on new metastore connection each time as well.\n\nI assume you haven't seen this in other user environments. I suspect there is something unique about their environment that would be triggering this. You might want to check if their are using any specific plugins.\nIs this with kerberos enabled ?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thejas","name":"thejas","key":"thejas","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thejas&avatarId=15902","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thejas&avatarId=15902","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thejas&avatarId=15902","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thejas&avatarId=15902"},"displayName":"Thejas M Nair","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-05-26T22:09:16.637+0000","updated":"2016-05-26T22:09:16.637+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969057/comment/15304074","id":"15304074","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aihuaxu","name":"aihuaxu","key":"aihuaxu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Aihua Xu","active":true,"timeZone":"America/Los_Angeles"},"body":"[~ngangam] Just try to understand the issue. FileSystem will cache the key (containing conf). But seems it doesn't make copies of conf but uses the reference? Are we seeing the conf is held by cache object? ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aihuaxu","name":"aihuaxu","key":"aihuaxu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Aihua Xu","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-05-27T13:43:39.170+0000","updated":"2016-05-27T13:43:39.170+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969057/comment/15304139","id":"15304139","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"body":"[~thejas] Thanks for continued discussion on this. However, I am not entirely sure I understand your comment about it being dangerous for scenarios with embedded metastore. Could you please elaborate and help me understand? \nI will lay out what I found so far so that we are all on the same page. Helps answer [~aihuaxu] questions too.\n1) In a HMS heap dump from a customer, there were 66000 instances of Configuration class stored in a HashMap (FileSystem.Cache.CACHE). These instances along with the set of its retained objects accounted for 95% of the total heap. Thats huge.\n2) FileSystem.Cache use a map that uses a composite key with (UGI + Configuration) objects. Because of the way, these keys are compared or because Configuration objects used in Hive are different (because of session params and what not), or a combination of both, we have a lot of cache misses which result in new entries being added to this cache.\n3) This Cache is storing FileSystem objects (an abstraction to the underlying DFS), which, I am told by Hadoop engineer, are a bit expensive to instantiate.  \n4) HMS uses APIs like, FileSystem.get() (in HiveMetaStore) and Path.getFileSystem()(In Warehouse.java) that cause the cache to grow. \n5) I have had the customer disable this cache entirely using a hadoop property, and they have neither seen any issues functionally nor observed any severe performance regression while the HMS heap size remained <350MB compared to 10GB with the cache enabled.\n\nSince disabling the cache entirely causes no functional regression, wouldn't adding a call to delete elements from this cache would be fine too, functionally? Thank you","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2016-05-27T14:41:56.422+0000","updated":"2016-05-27T14:41:56.422+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969057/comment/15304155","id":"15304155","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"body":"Unfortunately, my test environment got auto-destroyed. I will set it up again to re-run with hive CLI instead. I wasnt using kerberos the first time. Did you want me to use kerberos this time? Thanks","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2016-05-27T15:00:26.972+0000","updated":"2016-05-27T15:00:26.972+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969057/comment/15304165","id":"15304165","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aihuaxu","name":"aihuaxu","key":"aihuaxu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Aihua Xu","active":true,"timeZone":"America/Los_Angeles"},"body":"OK. So it's not the objects of Conf themselves occupy the memory, but the instances of the conf (too many of them) as I read from above and HIVE-3098?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aihuaxu","name":"aihuaxu","key":"aihuaxu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Aihua Xu","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-05-27T15:12:03.307+0000","updated":"2016-05-27T15:12:03.307+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969057/comment/15304219","id":"15304219","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"body":"The retained size for each Configuration instance is roughly 100KB. ~66k instances x ~100KB ~= 6+GB. Thats what we are trying to address.\n\n[~thejas] We have seen several issues around HMS stability (sudden death crashes) in the past, a good % of them were OOMs, some connections leaks, some incorrectly sized thread pools etc. We have asked customers to increase the max memory for the HMS process. Some customers running with 40GB memory for HMS and that too at times is not enough. 16GB to 24GB is quite common amongst other customers too. \nIn the past, we have not received heap dumps from the process prior to the crash. So we did not get a chance to analyze it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2016-05-27T15:47:08.514+0000","updated":"2016-05-27T15:47:08.514+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969057/comment/15304586","id":"15304586","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thejas","name":"thejas","key":"thejas","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thejas&avatarId=15902","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thejas&avatarId=15902","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thejas&avatarId=15902","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thejas&avatarId=15902"},"displayName":"Thejas M Nair","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. Since disabling the cache entirely causes no functional regression, wouldn't adding a call to delete elements from this cache would be fine too, functionally\nNo, that method is closeAllForUGI, not deleteAllForUGIFromCache, ie it closes the FileSystem instances. In case of metastore being used in embedded mode (-hiveconf hive.metastore.uris=' ') , if there are references to the FileSystem object in other parts of the code, they will be suddenly closed instances.\n\n[~aihuaxu] The FileSystem.CACHE keeps the references to the FileSystem objects around even if most of them aren't being used and GC will not free them as a result.\n\nThe changes in HIVE-3098 should be addressing this, we need to understand why it wouldn't do that before adding yet another call to closeAllForUGI.\nWe haven't seen this OOM in metastore with hive 1.2.0 users, except for an issue when ACID was enabled, which [~wzheng] worked on. So one thing to analyze is if any plugins are creating new UGI object and that is causing this OOM. \n\n[~daijy] has some experience with dealing with this type of leak. He can also advise on this.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thejas","name":"thejas","key":"thejas","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thejas&avatarId=15902","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thejas&avatarId=15902","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thejas&avatarId=15902","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thejas&avatarId=15902"},"displayName":"Thejas M Nair","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-05-27T19:09:45.032+0000","updated":"2016-05-27T19:09:45.032+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969057/comment/15317001","id":"15317001","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daijy","name":"daijy","key":"daijy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel Dai","active":true,"timeZone":"America/Los_Angeles"},"body":"[~ngangam], what I used to do before to diagnose is to use a patched hadoop client libraries to catch the stack of every invocation of FileSystem.get, and understand exactly where the leak coming from. I don't want to blindly remove it in shutdown, plus, UGI object might already get lost at that time and you might not able to remove it.\n\nHere is how I patch Hadoop:\n{code}\n--- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java\n+++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java\n@@ -20,6 +20,8 @@\n import java.io.Closeable;\n import java.io.FileNotFoundException;\n import java.io.IOException;\n+import java.io.StringWriter;\n+import java.io.PrintWriter;\n import java.lang.ref.WeakReference;\n import java.net.URI;\n import java.net.URISyntaxException;\n@@ -2699,6 +2701,10 @@ private FileSystem getInternal(URI uri, Configuration conf, Key key) throws IOEx\n         }\n         fs.key = key;\n         map.put(key, fs);\n+        StringWriter sw = new StringWriter();\n+        new Throwable(\"\").printStackTrace(new PrintWriter(sw));\n+        LOG.info(\"calling context for getInternal:\" + sw.toString());\n+        LOG.info(\"# of maps:\" + map.size());\n         if (conf.getBoolean(\"fs.automatic.close\", true)) {\n           toAutoClose.add(key);\n         }\n@@ -2752,6 +2758,7 @@ synchronized void closeAll(boolean onlyAutomatic) throws IOException {\n       if (!exceptions.isEmpty()) {\n         throw MultipleIOException.createIOException(exceptions);\n       }\n+      LOG.info(\"map size after closeAll:\" + map.size());\n     }\n\n     private class ClientFinalizer implements Runnable {\n@@ -2789,6 +2796,7 @@ synchronized void closeAll(UserGroupInformation ugi) throws IOException {\n       if (!exceptions.isEmpty()) {\n         throw MultipleIOException.createIOException(exceptions);\n       }\n+      LOG.info(\"map size after closeAll:\" + map.size());\n     }\n\n     /** FileSystem.Cache.Key */\n{code}\n\nHere is how to instruct Hive to use this jar:\n1. Put attached hadoop-common.jar into $HIVE_HOME/lib\n2. export HADOOP_USER_CLASSPATH_FIRST=true\n3. Make sure fs cache is enabled\n4. Restart hivemetastore\n5. Collect hivemetastore.log","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daijy","name":"daijy","key":"daijy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel Dai","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-06-06T19:01:13.413+0000","updated":"2016-06-06T19:01:13.413+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969057/comment/15317100","id":"15317100","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"body":"Thanks [~daijy] \nI have been running with some added instrumentation in the HMS code to figure out the cache sizes before and after. But your idea seems better, seeking info from the hadoop's end.\nThere are 3 general areas that seem to be adding objects to the cache.\n1) The compactor.Initiator and CompactorThread create about ~420k objects. These seem to be addressed in HIVE-13151. This environment is not running with this fix.\n2) The Warehouse.getFs() and Warehouse.getFileStatusesForLocation() are invoked about ~900k times, but not all calls result in new object in the cache.\n3) A small % of the calls are from drop_table_core. \n\nI will try to see other areas that use these FS apis that could be adding to this cache.\n\nThejas, the fix from HIVE-3098 no longer exists in the codebase. It has been replaced by the fix in HIVE-8228 (simliar intent). The root cause could very well be the initiator thread. I will check their configuration to affirm this and use HIVE-13151 if needed. Thanks","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2016-06-06T19:58:53.716+0000","updated":"2016-06-06T19:58:53.716+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969057/comment/15321265","id":"15321265","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"body":"[~thejas] After disabling the compactor.Initiator and the Compactor threads, (because this customer is not using the fix from HIVE-13151), there appear to be no more leaks. \nHowever, there are still about 400 instances of Configuration objects in memory (about 80MB of retained objects, 12% in this case), about 11 of them from static initializers in *Writable classes and the remaining of them stashed in thread locals, 1 per thread. So HMS roughly has 390 threads, each has 1 instance of Configuration set in its threadlocals. These references should be re-set when the thread gets re-assigned but they would be retained until this occurs. Would it make sense to do this cleanup sooner. Something like this\n{code}\n         try {\n           ms.shutdown();\n         } finally {\n           threadLocalConf.remove();\n           threadLocalMS.remove();\n{code}\nAs always, thank you for your input in advance. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2016-06-08T19:12:31.245+0000","updated":"2016-06-08T19:12:31.245+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969057/comment/15359603","id":"15359603","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"body":"Have a new heap dump from a customer that has been running for an extended period of time, with the following properties removed.\n{code}\n<property><name>hive.compactor.initiator.on</name><value>true</value></property>\n<property><name>hive.compactor.worker.threads</name><value>1</value></property>\n{code}\n\nThe leak from the above compactor thread was later addressed in HIVE-13151 that the customer was not running with. So I had them remove these properties.\n\nHMS has been stable, no OOM crashes yet. There are about 214 instances of Configuration occupying 66MB of heap space, roughly 18% of the total active heap. Each of this instance was from an individual thread holding on to the object in the threadlocals. I think we can save this unnecessary reference and do better by cleaning up the threadlocal before the thread is returning to the pool.\n\nI have uploaded a new patch that does just that. Let me know of any thoughts. Thanks","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2016-07-01T20:46:22.709+0000","updated":"2016-07-01T20:46:22.709+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969057/comment/15360253","id":"15360253","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiveqa","name":"hiveqa","key":"hiveqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hiveqa&avatarId=17060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hiveqa&avatarId=17060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hiveqa&avatarId=17060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hiveqa&avatarId=17060"},"displayName":"Hive QA","active":true,"timeZone":"America/Chicago"},"body":"\n\nHere are the results of testing the latest attachment:\nhttps://issues.apache.org/jira/secure/attachment/12815813/HIVE-13749.1.patch\n\n{color:red}ERROR:{color} -1 due to no test(s) being added or modified.\n\n{color:red}ERROR:{color} -1 due to 6 failed/errored test(s), 10287 tests executed\n*Failed tests:*\n{noformat}\norg.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_stats_list_bucket\norg.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_subquery_multiinsert\norg.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver_vector_complex_all\norg.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver_vector_complex_join\norg.apache.hadoop.hive.cli.TestMinimrCliDriver.testCliDriver_schemeAuthority\norg.apache.hadoop.hive.llap.tezplugins.TestLlapTaskSchedulerService.testDelayedLocalityNodeCommErrorImmediateAllocation\n{noformat}\n\nTest results: https://builds.apache.org/job/PreCommit-HIVE-MASTER-Build/350/testReport\nConsole output: https://builds.apache.org/job/PreCommit-HIVE-MASTER-Build/350/console\nTest logs: http://ec2-50-18-27-0.us-west-1.compute.amazonaws.com/logs/PreCommit-HIVE-MASTER-Build-350/\n\nMessages:\n{noformat}\nExecuting org.apache.hive.ptest.execution.TestCheckPhase\nExecuting org.apache.hive.ptest.execution.PrepPhase\nExecuting org.apache.hive.ptest.execution.ExecutionPhase\nExecuting org.apache.hive.ptest.execution.ReportingPhase\nTests exited with: TestsFailedException: 6 tests failed\n{noformat}\n\nThis message is automatically generated.\n\nATTACHMENT ID: 12815813 - PreCommit-HIVE-MASTER-Build","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiveqa","name":"hiveqa","key":"hiveqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hiveqa&avatarId=17060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hiveqa&avatarId=17060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hiveqa&avatarId=17060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hiveqa&avatarId=17060"},"displayName":"Hive QA","active":true,"timeZone":"America/Chicago"},"created":"2016-07-02T16:55:00.021+0000","updated":"2016-07-02T16:55:00.021+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969057/comment/15362557","id":"15362557","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"body":"The test failures above do not appear to be related to the patch. So +1 for me.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2016-07-05T14:28:54.502+0000","updated":"2016-07-05T14:28:54.502+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969057/comment/15362576","id":"15362576","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aihuaxu","name":"aihuaxu","key":"aihuaxu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Aihua Xu","active":true,"timeZone":"America/Los_Angeles"},"body":"+1. The change makes sense to me.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aihuaxu","name":"aihuaxu","key":"aihuaxu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Aihua Xu","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-07-05T14:45:25.094+0000","updated":"2016-07-05T14:45:25.094+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969057/comment/15363705","id":"15363705","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thejas","name":"thejas","key":"thejas","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thejas&avatarId=15902","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thejas&avatarId=15902","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thejas&avatarId=15902","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thejas&avatarId=15902"},"displayName":"Thejas M Nair","active":true,"timeZone":"America/Los_Angeles"},"body":"+1 looks good.\nThanks for chasing this down!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thejas","name":"thejas","key":"thejas","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thejas&avatarId=15902","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thejas&avatarId=15902","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thejas&avatarId=15902","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thejas&avatarId=15902"},"displayName":"Thejas M Nair","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-07-06T03:46:27.902+0000","updated":"2016-07-06T03:46:49.023+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969057/comment/15367699","id":"15367699","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aihuaxu","name":"aihuaxu","key":"aihuaxu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Aihua Xu","active":true,"timeZone":"America/Los_Angeles"},"body":"Pushed to master. Thanks Naveen for the contribution.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aihuaxu","name":"aihuaxu","key":"aihuaxu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Aihua Xu","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-07-08T13:56:19.843+0000","updated":"2016-07-08T13:56:19.843+0000"}],"maxResults":23,"total":23,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-13749/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i2xusf:"}}