{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Charles Chen",
            "key": "charleschen",
            "name": "charleschen",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=charleschen",
            "timeZone": "America/Los_Angeles"
        },
        "components": [{
            "description": "Tracks issues dealing with query processing.",
            "id": "12312586",
            "name": "Query Processor",
            "self": "https://issues.apache.org/jira/rest/api/2/component/12312586"
        }],
        "created": "2011-08-17T00:55:55.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Charles Chen",
            "key": "charleschen",
            "name": "charleschen",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=charleschen",
            "timeZone": "America/Los_Angeles"
        },
        "customfield_10010": null,
        "customfield_12310191": [{
            "id": "10343",
            "self": "https://issues.apache.org/jira/rest/api/2/customFieldOption/10343",
            "value": "Reviewed"
        }],
        "customfield_12310192": null,
        "customfield_12310220": "2011-08-17T19:29:27.163+0000",
        "customfield_12310222": "10002_*:*_3_*:*_1186533462_*|*_1_*:*_3_*:*_105031864_*|*_5_*:*_1_*:*_0",
        "customfield_12310230": null,
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "3.0",
        "customfield_12310320": null,
        "customfield_12310420": "35791",
        "customfield_12310920": "123849",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i0ljqv:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Sep 01 00:15:43 UTC 2011",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "The predicate pushdown optimizer starts at the topmost operators traverses the operator tree, at each stage collecting predicates to be pushed down.  At each operator, ive.ql.ppd.OpProcFactory.DefaultPPD.mergeWithChildrenPred is called, which merges the predicates of the children nodes into the current node.  The predicates are stored in hive.ql.ppd.ExprWalkerInfo.pushdownPreds as a map from the alias a predicate refers to (a predicate may only refer to one alias at a time as only such predicates can be pushed) to a list of such predicates.  Since at each stage the alias the predicate refers to may change (subqueries may change aliases), this is updated for each operator (hive.ql.ppd.ExprWalkerProcFactory.extractPushdownPreds is called which walks the ExprNodeDesc for each predicate). When a JoinOperator is encountered, mergeWithChildrenPred is passed an optional parameter \"aliases\" which contains a set of aliases that can be pushed per ansi semantics (see hive.ql.ppd.OpProcFactory.JoinPPD.getQualifiedAliases).  The part that is incorrect is that aliases are filtered in mergeWithChildrenPred before extractPushdownPreds is called, which associates the predicates with the correct alias in the current operator's context while the filtering should happen after.\n\nIn test case Q2 below, when the predicate \"a.bar=3\" comes into the JoinOperator, the alias is \"a\" coming in so it is accepted for pushdown.  When brought into the JoinOperator's context, however, since the predicate refers to b.foo in the inner scope, we should not actually accept this for pushdown.\n\nWith the test cases\n{noformat}\n-- Q1: predicate should not be pushed on the right side of a left outer join (this is correct in trunk)\nexplain\nSELECT a.foo as foo1, b.foo as foo2, b.bar\nFROM pokes a LEFT OUTER JOIN pokes2 b\nON a.foo=b.foo\nWHERE b.bar=3;\n\n-- Q2: predicate should not be pushed on the right side of a left outer join (this is broken in trunk)\nexplain\nSELECT * FROM\n    (SELECT a.foo as foo1, b.foo as foo2, b.bar\n    FROM pokes a LEFT OUTER JOIN pokes2 b\n    ON a.foo=b.foo) a\nWHERE a.bar=3;\n\n-- Q3: predicate should be pushed (this is correct in trunk)\nexplain\nSELECT * FROM\n    (SELECT a.foo as foo1, b.foo as foo2, a.bar\n    FROM pokes a JOIN pokes2 b\n    ON a.foo=b.foo) a\nWHERE a.bar=3;\n{noformat}\nThe current output is\n{noformat}\nhive> \n    > -- Q1: predicate should not be pushed on the right side of a left outer join\n    > explain\n    > SELECT a.foo as foo1, b.foo as foo2, b.bar\n    > FROM pokes a LEFT OUTER JOIN pokes2 b\n    > ON a.foo=b.foo\n    > WHERE b.bar=3;\nOK\nABSTRACT SYNTAX TREE:\n  (TOK_QUERY (TOK_FROM (TOK_LEFTOUTERJOIN (TOK_TABREF (TOK_TABNAME pokes) a) (TOK_TABREF (TOK_TABNAME pokes2) b) (= (. (TOK_TABLE_OR_COL a) foo) (. (TOK_TABLE_OR_COL b) foo)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) foo) foo1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) foo) foo2) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) bar))) (TOK_WHERE (= (. (TOK_TABLE_OR_COL b) bar) 3))))\n\nSTAGE DEPENDENCIES:\n  Stage-1 is a root stage\n  Stage-0 is a root stage\n\nSTAGE PLANS:\n  Stage: Stage-1\n    Map Reduce\n      Alias -> Map Operator Tree:\n        a \n          TableScan\n            alias: a\n            Reduce Output Operator\n              key expressions:\n                    expr: foo\n                    type: int\n              sort order: +\n              Map-reduce partition columns:\n                    expr: foo\n                    type: int\n              tag: 0\n              value expressions:\n                    expr: foo\n                    type: int\n        b \n          TableScan\n            alias: b\n            Reduce Output Operator\n              key expressions:\n                    expr: foo\n                    type: int\n              sort order: +\n              Map-reduce partition columns:\n                    expr: foo\n                    type: int\n              tag: 1\n              value expressions:\n                    expr: foo\n                    type: int\n                    expr: bar\n                    type: int\n      Reduce Operator Tree:\n        Join Operator\n          condition map:\n               Left Outer Join0 to 1\n          condition expressions:\n            0 {VALUE._col0}\n            1 {VALUE._col0} {VALUE._col1}\n          handleSkewJoin: false\n          outputColumnNames: _col0, _col4, _col5\n          Filter Operator\n            predicate:\n                expr: (_col5 = 3)\n                type: boolean\n            Select Operator\n              expressions:\n                    expr: _col0\n                    type: int\n                    expr: _col4\n                    type: int\n                    expr: _col5\n                    type: int\n              outputColumnNames: _col0, _col1, _col2\n              File Output Operator\n                compressed: false\n                GlobalTableId: 0\n                table:\n                    input format: org.apache.hadoop.mapred.TextInputFormat\n                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\n\n  Stage: Stage-0\n    Fetch Operator\n      limit: -1\n\n\nTime taken: 0.113 seconds\nhive> \n    > -- Q2: predicate should not be pushed on the right side of a left outer join\n    > explain\n    > SELECT * FROM\n    >     (SELECT a.foo as foo1, b.foo as foo2, b.bar\n    >     FROM pokes a LEFT OUTER JOIN pokes2 b\n    >     ON a.foo=b.foo) a\n    > WHERE a.bar=3;\nOK\nABSTRACT SYNTAX TREE:\n  (TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_LEFTOUTERJOIN (TOK_TABREF (TOK_TABNAME pokes) a) (TOK_TABREF (TOK_TABNAME pokes2) b) (= (. (TOK_TABLE_OR_COL a) foo) (. (TOK_TABLE_OR_COL b) foo)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) foo) foo1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) foo) foo2) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) bar))))) a)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)) (TOK_WHERE (= (. (TOK_TABLE_OR_COL a) bar) 3))))\n\nSTAGE DEPENDENCIES:\n  Stage-1 is a root stage\n  Stage-0 is a root stage\n\nSTAGE PLANS:\n  Stage: Stage-1\n    Map Reduce\n      Alias -> Map Operator Tree:\n        a:a \n          TableScan\n            alias: a\n            Reduce Output Operator\n              key expressions:\n                    expr: foo\n                    type: int\n              sort order: +\n              Map-reduce partition columns:\n                    expr: foo\n                    type: int\n              tag: 0\n              value expressions:\n                    expr: foo\n                    type: int\n        a:b \n          TableScan\n            alias: b\n            Filter Operator\n              predicate:\n                  expr: (bar = 3)\n                  type: boolean\n              Reduce Output Operator\n                key expressions:\n                      expr: foo\n                      type: int\n                sort order: +\n                Map-reduce partition columns:\n                      expr: foo\n                      type: int\n                tag: 1\n                value expressions:\n                      expr: foo\n                      type: int\n                      expr: bar\n                      type: int\n      Reduce Operator Tree:\n        Join Operator\n          condition map:\n               Left Outer Join0 to 1\n          condition expressions:\n            0 {VALUE._col0}\n            1 {VALUE._col0} {VALUE._col1}\n          handleSkewJoin: false\n          outputColumnNames: _col0, _col4, _col5\n          Select Operator\n            expressions:\n                  expr: _col0\n                  type: int\n                  expr: _col4\n                  type: int\n                  expr: _col5\n                  type: int\n            outputColumnNames: _col0, _col1, _col2\n            Select Operator\n              expressions:\n                    expr: _col0\n                    type: int\n                    expr: _col1\n                    type: int\n                    expr: _col2\n                    type: int\n              outputColumnNames: _col0, _col1, _col2\n              File Output Operator\n                compressed: false\n                GlobalTableId: 0\n                table:\n                    input format: org.apache.hadoop.mapred.TextInputFormat\n                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\n\n  Stage: Stage-0\n    Fetch Operator\n      limit: -1\n\n\nTime taken: 0.101 seconds\nhive> \n    > -- Q3: predicate should be pushed\n    > explain\n    > SELECT * FROM\n    >     (SELECT a.foo as foo1, b.foo as foo2, a.bar\n    >     FROM pokes a JOIN pokes2 b\n    >     ON a.foo=b.foo) a\n    > WHERE a.bar=3;\nOK\nABSTRACT SYNTAX TREE:\n  (TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_JOIN (TOK_TABREF (TOK_TABNAME pokes) a) (TOK_TABREF (TOK_TABNAME pokes2) b) (= (. (TOK_TABLE_OR_COL a) foo) (. (TOK_TABLE_OR_COL b) foo)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) foo) foo1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) foo) foo2) (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) bar))))) a)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)) (TOK_WHERE (= (. (TOK_TABLE_OR_COL a) bar) 3))))\n\nSTAGE DEPENDENCIES:\n  Stage-1 is a root stage\n  Stage-0 is a root stage\n\nSTAGE PLANS:\n  Stage: Stage-1\n    Map Reduce\n      Alias -> Map Operator Tree:\n        a:a \n          TableScan\n            alias: a\n            Filter Operator\n              predicate:\n                  expr: (bar = 3)\n                  type: boolean\n              Reduce Output Operator\n                key expressions:\n                      expr: foo\n                      type: int\n                sort order: +\n                Map-reduce partition columns:\n                      expr: foo\n                      type: int\n                tag: 0\n                value expressions:\n                      expr: foo\n                      type: int\n                      expr: bar\n                      type: int\n        a:b \n          TableScan\n            alias: b\n            Reduce Output Operator\n              key expressions:\n                    expr: foo\n                    type: int\n              sort order: +\n              Map-reduce partition columns:\n                    expr: foo\n                    type: int\n              tag: 1\n              value expressions:\n                    expr: foo\n                    type: int\n      Reduce Operator Tree:\n        Join Operator\n          condition map:\n               Inner Join 0 to 1\n          condition expressions:\n            0 {VALUE._col0} {VALUE._col1}\n            1 {VALUE._col0}\n          handleSkewJoin: false\n          outputColumnNames: _col0, _col1, _col4\n          Select Operator\n            expressions:\n                  expr: _col0\n                  type: int\n                  expr: _col4\n                  type: int\n                  expr: _col1\n                  type: int\n            outputColumnNames: _col0, _col1, _col2\n            Select Operator\n              expressions:\n                    expr: _col0\n                    type: int\n                    expr: _col1\n                    type: int\n                    expr: _col2\n                    type: int\n              outputColumnNames: _col0, _col1, _col2\n              File Output Operator\n                compressed: false\n                GlobalTableId: 0\n                table:\n                    input format: org.apache.hadoop.mapred.TextInputFormat\n                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\n\n  Stage: Stage-0\n    Fetch Operator\n      limit: -1\n{noformat}\nNote that Q2 is incorrect because the predicate \"bar = 3\" is incorrectly pushed to the right side of the left outer join (Q1 and Q3 are correct).",
        "duedate": null,
        "environment": null,
        "fixVersions": [{
            "archived": false,
            "description": "released",
            "id": "12316178",
            "name": "0.8.0",
            "releaseDate": "2011-12-16",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12316178"
        }],
        "issuelinks": [{
            "id": "12342253",
            "inwardIssue": {
                "fields": {
                    "issuetype": {
                        "avatarId": 21133,
                        "description": "A problem which impairs or prevents the functions of the product.",
                        "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                        "id": "1",
                        "name": "Bug",
                        "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                        "subtask": false
                    },
                    "priority": {
                        "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/critical.svg",
                        "id": "2",
                        "name": "Critical",
                        "self": "https://issues.apache.org/jira/rest/api/2/priority/2"
                    },
                    "status": {
                        "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                        "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                        "id": "6",
                        "name": "Closed",
                        "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                        "statusCategory": {
                            "colorName": "green",
                            "id": 3,
                            "key": "done",
                            "name": "Done",
                            "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
                        }
                    },
                    "summary": "Predicate push down get error result when sub-queries have the same alias name "
                },
                "id": "12464329",
                "key": "HIVE-1342",
                "self": "https://issues.apache.org/jira/rest/api/2/issue/12464329"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12342253",
            "type": {
                "id": "12310010",
                "inward": "is part of",
                "name": "Incorporates",
                "outward": "incorporates",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310010"
            }
        }],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/critical.svg",
            "id": "2",
            "name": "Critical",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/2"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310843&avatarId=11935",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310843&avatarId=11935",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310843&avatarId=11935",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12310843&avatarId=11935"
            },
            "id": "12310843",
            "key": "HIVE",
            "name": "Hive",
            "projectCategory": {
                "description": "Scalable Distributed Computing",
                "id": "10292",
                "name": "Hadoop",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/10292"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12310843"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Charles Chen",
            "key": "charleschen",
            "name": "charleschen",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=charleschen",
            "timeZone": "America/Los_Angeles"
        },
        "resolution": {
            "description": "A fix for this issue is checked into the tree and tested.",
            "id": "1",
            "name": "Fixed",
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1"
        },
        "resolutiondate": "2011-08-31T23:42:00.000+0000",
        "status": {
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "id": "6",
            "name": "Closed",
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "statusCategory": {
                "colorName": "green",
                "id": 3,
                "key": "done",
                "name": "Done",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
            }
        },
        "subtasks": [],
        "summary": "Incorrect alias filtering for predicate pushdown",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2011-12-16T23:56:06.000+0000",
        "versions": [{
            "archived": false,
            "description": "released",
            "id": "12314524",
            "name": "0.6.0",
            "releaseDate": "2010-10-29",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12314524"
        }],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/HIVE-2383/votes",
            "votes": 0
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/HIVE-2383/watchers",
            "watchCount": 0
        },
        "workratio": -1
    },
    "id": "12519060",
    "key": "HIVE-2383",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12519060"
}