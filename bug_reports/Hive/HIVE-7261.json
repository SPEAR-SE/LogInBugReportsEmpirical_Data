{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": null,
        "components": [{
            "description": "Tracks issues dealing with query processing.",
            "id": "12312586",
            "name": "Query Processor",
            "self": "https://issues.apache.org/jira/rest/api/2/component/12312586"
        }],
        "created": "2014-06-20T03:22:11.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Chris Chen",
            "key": "chris_chen",
            "name": "chris_chen",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=chris_chen",
            "timeZone": "Asia/Shanghai"
        },
        "customfield_10010": null,
        "customfield_12310191": null,
        "customfield_12310192": null,
        "customfield_12310220": "2015-02-15T08:47:21.567+0000",
        "customfield_12310222": "1_*:*_1_*:*_31273324488_*|*_5_*:*_1_*:*_0",
        "customfield_12310230": null,
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "0.0",
        "customfield_12310320": null,
        "customfield_12310420": "400880",
        "customfield_12310920": "400965",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i1x07j:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jun 17 02:23:26 UTC 2015",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "【Phenomenon】\nThe query results are not the same as when hive.groupby.skewindata was setted to true and false.\n\n【my question】\nI want to calculate the count(*) and count(distinct) simultaneously ,otherwise it will cost 2 MR job to calculate. But when i set the hive.groupby.skewindata to be true, the count(*) result shoud not be same as the count(distinct) , but the real result is same, so it's wrong. And I find the difference of its query plan which the \"Reduce Operator Tree->Group By Operator->mode\"  is mergepartial when skew is set to false and \n\"Reduce Operator Tree->Group By Operator->mode\"  is complete when skew is set to true. So i'm confused the root cause of the error.\n\n【sql】\nselect ds,appid,eventname,active,{color:red}count(distinct(guid)), count(*) {color}from eventinfo_tmp where ds='20140612' and length(eventname)<1000 and eventname like '%alibaba%' group by ds,appid,eventname,active;\n\n【the others hive configaration exclude hive.groupby.skewindata】\nhive.exec.compress.output=true\nhive.exec.compress.intermediate=true\nio.seqfile.compression.type=BLOCK\nmapred.output.compression.codec=org.apache.hadoop.io.compress.GzipCodec\nhive.map.aggr=true\nhive.stats.autogather=false\nhive.exec.scratchdir=/user/complat/tmp\nmapred.job.queue.name=complat\nhive.exec.mode.local.auto=false\nhive.exec.mode.local.auto.inputbytes.max=500\nhive.exec.mode.local.auto.tasks.max=10\nhive.exec.mode.local.auto.input.files.max=1000\nhive.exec.dynamic.partition=true\nhive.exec.dynamic.partition.mode=nonstrict\nhive.input.format=org.apache.hadoop.hive.ql.io.CombineHiveInputFormat\nmapred.max.split.size=100000000\nmapred.min.split.size.per.node=100000000\nmapred.min.split.size.per.rack=100000000\n\n【result】\nwhen hive.groupby.skewindata=true  the result is :\n20140612\t8\talibaba\t1\t{color:red}87\t147{color}\n\nwhen it=false the result is : \n20140612\t8\talibaba\t1\t{color:red}87\t87{color}\n\n【query plan】\nABSTRACT SYNTAX TREE:\n  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME eventinfo_tmp))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL ds)) (TOK_SELEXPR (TOK_TABLE_OR_COL appid)) (TOK_SELEXPR (TOK_TABLE_OR_COL eventname)) (TOK_SELEXPR (TOK_TABLE_OR_COL active)) (TOK_SELEXPR (TOK_FUNCTIONDI count (TOK_TABLE_OR_COL guid))) (TOK_SELEXPR (TOK_FUNCTIONSTAR count))) (TOK_WHERE (and (and (= (TOK_TABLE_OR_COL ds) '20140612') (< (TOK_FUNCTION length (TOK_TABLE_OR_COL eventname)) 1000)) (like (TOK_TABLE_OR_COL eventname) '%tvvideo_setting%'))) (TOK_GROUPBY (TOK_TABLE_OR_COL ds) (TOK_TABLE_OR_COL appid) (TOK_TABLE_OR_COL eventname) (TOK_TABLE_OR_COL active))))\n\nSTAGE DEPENDENCIES:\n  Stage-1 is a root stage\n  Stage-0 is a root stage\n\nSTAGE PLANS:\n  Stage: Stage-1\n    Map Reduce\n      Alias -> Map Operator Tree:\n        eventinfo_tmp \n          TableScan\n            alias: eventinfo_tmp\n            Filter Operator\n              predicate:\n                  expr: ((length(eventname) < 1000) and (eventname like '%tvvideo_setting%'))\n                  type: boolean\n              Select Operator\n                expressions:\n                      expr: ds\n                      type: string\n                      expr: appid\n                      type: string\n                      expr: eventname\n                      type: string\n                      expr: active\n                      type: int\n                      expr: guid\n                      type: string\n                outputColumnNames: ds, appid, eventname, active, guid\n                Group By Operator\n                  aggregations:\n                        expr: count(DISTINCT guid)\n                        expr: count()\n                  bucketGroup: false\n                  keys:\n                        expr: ds\n                        type: string\n                        expr: appid\n                        type: string\n                        expr: eventname\n                        type: string\n                        expr: active\n                        type: int\n                        expr: guid\n                        type: string\n                  mode: hash\n                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                  Reduce Output Operator\n                    key expressions:\n                          expr: _col0\n                          type: string\n                          expr: _col1\n                          type: string\n                          expr: _col2\n                          type: string\n                          expr: _col3\n                          type: int\n                          expr: _col4\n                          type: string\n                    sort order: +++++\n                    Map-reduce partition columns:\n                          expr: _col0\n                          type: string\n                          expr: _col1\n                          type: string\n                          expr: _col2\n                          type: string\n                          expr: _col3\n                          type: int\n                    tag: -1\n                    value expressions:\n                          expr: _col5\n                          type: bigint\n                          expr: _col6\n                          type: bigint\n      Reduce Operator Tree:\n        Group By Operator\n          aggregations:\n                expr: count(DISTINCT KEY._col4:0._col0)\n                expr: count(VALUE._col1)\n          bucketGroup: false\n          keys:\n                expr: KEY._col0\n                type: string\n                expr: KEY._col1\n                type: string\n                expr: KEY._col2\n                type: string\n                expr: KEY._col3\n                type: int\n          mode: {color:red}mergepartial{color}\n          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5\n          Select Operator\n            expressions:\n                  expr: _col0\n                  type: string\n                  expr: _col1\n                  type: string\n                  expr: _col2\n                  type: string\n                  expr: _col3\n                  type: int\n                  expr: _col4\n                  type: bigint\n                  expr: _col5\n                  type: bigint\n            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5\n            File Output Operator\n              compressed: true\n              GlobalTableId: 0\n              table:\n                  input format: org.apache.hadoop.mapred.TextInputFormat\n                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\n\n  Stage: Stage-0\n    Fetch Operator\n      limit: -1\n\n\nABSTRACT SYNTAX TREE:\n  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME eventinfo_tmp))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL ds)) (TOK_SELEXPR (TOK_TABLE_OR_COL appid)) (TOK_SELEXPR (TOK_TABLE_OR_COL eventname)) (TOK_SELEXPR (TOK_TABLE_OR_COL active)) (TOK_SELEXPR (TOK_FUNCTIONDI count (TOK_TABLE_OR_COL guid))) (TOK_SELEXPR (TOK_FUNCTIONSTAR count))) (TOK_WHERE (and (and (= (TOK_TABLE_OR_COL ds) '20140612') (< (TOK_FUNCTION length (TOK_TABLE_OR_COL eventname)) 1000)) (like (TOK_TABLE_OR_COL eventname) '%tvvideo_setting%'))) (TOK_GROUPBY (TOK_TABLE_OR_COL ds) (TOK_TABLE_OR_COL appid) (TOK_TABLE_OR_COL eventname) (TOK_TABLE_OR_COL active))))\n\nSTAGE DEPENDENCIES:\n  Stage-1 is a root stage\n  Stage-0 is a root stage\n\nSTAGE PLANS:\n  Stage: Stage-1\n    Map Reduce\n      Alias -> Map Operator Tree:\n        eventinfo_tmp \n          TableScan\n            alias: eventinfo_tmp\n            Filter Operator\n              predicate:\n                  expr: ((length(eventname) < 1000) and (eventname like '%tvvideo_setting%'))\n                  type: boolean\n              Select Operator\n                expressions:\n                      expr: ds\n                      type: string\n                      expr: appid\n                      type: string\n                      expr: eventname\n                      type: string\n                      expr: active\n                      type: int\n                      expr: guid\n                      type: string\n                outputColumnNames: ds, appid, eventname, active, guid\n                Group By Operator\n                  aggregations:\n                        expr: count(DISTINCT guid)\n                        expr: count()\n                  bucketGroup: false\n                  keys:\n                        expr: ds\n                        type: string\n                        expr: appid\n                        type: string\n                        expr: eventname\n                        type: string\n                        expr: active\n                        type: int\n                        expr: guid\n                        type: string\n                  mode: hash\n                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                  Reduce Output Operator\n                    key expressions:\n                          expr: _col0\n                          type: string\n                          expr: _col1\n                          type: string\n                          expr: _col2\n                          type: string\n                          expr: _col3\n                          type: int\n                          expr: _col4\n                          type: string\n                    sort order: +++++\n                    Map-reduce partition columns:\n                          expr: _col0\n                          type: string\n                          expr: _col1\n                          type: string\n                          expr: _col2\n                          type: string\n                          expr: _col3\n                          type: int\n                    tag: -1\n                    value expressions:\n                          expr: _col5\n                          type: bigint\n                          expr: _col6\n                          type: bigint\n      Reduce Operator Tree:\n        Group By Operator\n          aggregations:\n                expr: count(DISTINCT KEY._col4:0._col0)\n                expr: count(VALUE._col1)\n          bucketGroup: false\n          keys:\n                expr: KEY._col0\n                type: string\n                expr: KEY._col1\n                type: string\n                expr: KEY._col2\n                type: string\n                expr: KEY._col3\n                type: int\n          mode: {color:red}complete{color}\n          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5\n          Select Operator\n            expressions:\n                  expr: _col0\n                  type: string\n                  expr: _col1\n                  type: string\n                  expr: _col2\n                  type: string\n                  expr: _col3\n                  type: int\n                  expr: _col4\n                  type: bigint\n                  expr: _col5\n                  type: bigint\n            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5\n            File Output Operator\n              compressed: true\n              GlobalTableId: 0\n              table:\n                  input format: org.apache.hadoop.mapred.TextInputFormat\n                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\n\n  Stage: Stage-0\n    Fetch Operator\n      limit: -1\n\n\n",
        "duedate": null,
        "environment": "hive0.12   hadoop1.0.4",
        "fixVersions": [],
        "issuelinks": [{
            "id": "12428117",
            "outwardIssue": {
                "fields": {
                    "issuetype": {
                        "avatarId": 21133,
                        "description": "A problem which impairs or prevents the functions of the product.",
                        "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                        "id": "1",
                        "name": "Bug",
                        "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                        "subtask": false
                    },
                    "priority": {
                        "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                        "id": "3",
                        "name": "Major",
                        "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
                    },
                    "status": {
                        "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                        "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                        "id": "5",
                        "name": "Resolved",
                        "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                        "statusCategory": {
                            "colorName": "green",
                            "id": 3,
                            "key": "done",
                            "name": "Done",
                            "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
                        }
                    },
                    "summary": "count(*) with count(distinct) gives wrong results when hive.groupby.skewindata=true"
                },
                "id": "12836488",
                "key": "HIVE-10971",
                "self": "https://issues.apache.org/jira/rest/api/2/issue/12836488"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12428117",
            "type": {
                "id": "12310000",
                "inward": "is duplicated by",
                "name": "Duplicate",
                "outward": "duplicates",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"
            }
        }],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "id": "3",
            "name": "Major",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310843&avatarId=11935",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310843&avatarId=11935",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310843&avatarId=11935",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12310843&avatarId=11935"
            },
            "id": "12310843",
            "key": "HIVE",
            "name": "Hive",
            "projectCategory": {
                "description": "Scalable Distributed Computing",
                "id": "10292",
                "name": "Hadoop",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/10292"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12310843"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Chris Chen",
            "key": "chris_chen",
            "name": "chris_chen",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=chris_chen",
            "timeZone": "Asia/Shanghai"
        },
        "resolution": {
            "description": "The problem is a duplicate of an existing issue.",
            "id": "3",
            "name": "Duplicate",
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/3"
        },
        "resolutiondate": "2015-06-17T02:24:16.000+0000",
        "status": {
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "id": "5",
            "name": "Resolved",
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "statusCategory": {
                "colorName": "green",
                "id": 3,
                "key": "done",
                "name": "Done",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
            }
        },
        "subtasks": [],
        "summary": "Calculation works wrong when hive.groupby.skewindata  is true and count(*) count(distinct) group by work simultaneously ",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2015-06-17T02:24:16.000+0000",
        "versions": [{
            "archived": false,
            "description": "released",
            "id": "12324312",
            "name": "0.12.0",
            "releaseDate": "2013-10-15",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12324312"
        }],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/HIVE-7261/votes",
            "votes": 0
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/HIVE-7261/watchers",
            "watchCount": 2
        },
        "workratio": -1
    },
    "id": "12722689",
    "key": "HIVE-7261",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12722689"
}