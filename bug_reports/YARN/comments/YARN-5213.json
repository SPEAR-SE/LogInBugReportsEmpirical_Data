[cc :-\ [~xgong], Recent build failure for this test case [Link|https://builds.apache.org/job/PreCommit-YARN-Build/12341/artifact/patchprocess/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-client.txt]
{noformat}
Tests run: 13, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 2.353 sec <<< FAILURE! - in org.apache.hadoop.yarn.client.cli.TestLogsCLI
testFetchFinishedApplictionLogs(org.apache.hadoop.yarn.client.cli.TestLogsCLI)  Time elapsed: 0.214 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<[Hello]> but was:<[=====]>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at org.apache.hadoop.yarn.client.cli.TestLogsCLI.testFetchFinishedApplictionLogs(TestLogsCLI.java:427)
{noformat}, I looked at the test case for randomness, basically test {{testFetchFinishedApplictionLogs}} usually failing in Ubuntu but not either in Windows OR Mac. The reason is test is expecting whenever container logs files are read, log files are listed in order which LogCliHelper print on console. The test-case reads it and try to do assertion. But {{FileContext.getFileContext(qualifiedLogDir.toUri(), getConf()).listStatus(remoteAppLogDir)}} RemoteIterator does not guaranty that iterator is in-order. As a result, printing on console might get randomized for the log files. 
Test failing randomly because test always assert content from specific offset which might go on toss
{code}
   Assert.assertEquals(new String(logMessage.getBytes(), 0, 5),
        new String(sysOutStream.toByteArray(),
        (fullContextSize - fileContentSize - tailContentSize), 5));
{code}, Expected ByteArrayStream
{noformat}
Container: container_0_0001_01_000003 on localhost_12341468825226852
====================================================================
Container: container_0_0001_01_000003 on localhost_12341468825227186
====================================================================
Container: container_0_0001_01_000003 on localhost_12341468825227197
====================================================================
Container: container_0_0001_01_000003 on localhost_12341468825227236
====================================================================
Container: container_0_0001_01_000003 on localhost_12341468825227248
====================================================================
LogType:stdout
Log Upload Time:Mon Jul 18 12:30:27 +0530 2016
LogLength:43
Log Contents:
Hello
End of LogType:stdout


{noformat}

But actual ByteArrayStream is 
{noformat}
Container: container_0_0001_01_000003 on localhost_12341468824484792
====================================================================
Container: container_0_0001_01_000003 on localhost_12341468824484591
====================================================================
Container: container_0_0001_01_000003 on localhost_12341468824485086
====================================================================
LogType:stdout
Log Upload Time:Mon Jul 18 12:18:05 +0530 2016
LogLength:43
Log Contents:
Hello container_0_0001_01_000003 in stdout!
End of LogType:stdout

Container: container_0_0001_01_000003 on localhost_12341468824484822
====================================================================
Container: container_0_0001_01_000003 on localhost_12341468824485037
====================================================================
{noformat}, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 17s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 7m 5s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 20s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 15s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 26s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 16s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 0m 30s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 14s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 18s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 17s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 17s {color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red} 0m 12s {color} | {color:red} hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client: The patch generated 1 new + 84 unchanged - 1 fixed = 85 total (was 85) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 22s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 12s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 0m 33s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 11s {color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 8m 13s {color} | {color:red} hadoop-yarn-client in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 16s {color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 20m 33s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.yarn.client.api.impl.TestYarnClient |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:9560f25 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12818536/YARN-5213.patch |
| JIRA Issue | YARN-5213 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux eb52deffa530 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 5b4a708 |
| Default Java | 1.8.0_91 |
| findbugs | v3.0.0 |
| checkstyle | https://builds.apache.org/job/PreCommit-YARN-Build/12355/artifact/patchprocess/diff-checkstyle-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-client.txt |
| unit | https://builds.apache.org/job/PreCommit-YARN-Build/12355/artifact/patchprocess/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-client.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-YARN-Build/12355/artifact/patchprocess/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-client.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/12355/testReport/ |
| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/12355/console |
| Powered by | Apache Yetus 0.3.0   http://yetus.apache.org |


This message was automatically generated.

, Thanks [~rohithsharma] for investigation on this. I run into the same issue and see the same behavior as you. However, for test case, I think only one record for container 3 is expected. I guess there is something wrong with logsCLI but not only test cases. CC [~xgong]. , Change the issue type to a bug as this is not only a test issue., Thanks for the investigation. [~rohithsharma]. 
Agree with [~djp]. This is the code bug, not the test issue.

Uploaded a patch to fix it. , One quick comment, 
# reader creation is duplicated, may be this can be avoided., Thanks [~xgong] for put a quick patch and [~rohithsharma] for quick comments!
I think this patch fix an issue for log rolling correctly and I verified the patch locally and previous test failure is gone. 
A couple of comments:
bq. reader creation is duplicated, may be this can be avoided.
This is also my thought when I first look. However, after taking a look again especially sync with Xuan offline, I agree this should be by intentional as reader's stream index could be updated after calling {{getContainerLogsStream()}}. However, we should add a comments there to explicitly mention that why we need a "duplicated" creation here or later comer could be confused also and did mistakenly change.

In TestLogsCLI.java,
{noformat}
int tailContentSize = "\nEnd of LogType:syslog\n\n".getBytes().length;
{noformat}
This is not right. Here LogType should be stdout but not syslog although not affect result yet.

One optional comments to see if you would like to address here or later: there are many hard coded messages, like: "Hello container_0_0001_01_000003 in stdout!" - better to have static method with specifying container id and logtype.
 , Uploaded a new patch to address all the comments, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 22s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue} 0m 10s {color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 6m 59s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 2m 26s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 40s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 56s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 28s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 29s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 42s {color} | {color:green} trunk passed {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue} 0m 10s {color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 46s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 2m 23s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 2m 23s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 37s {color} | {color:green} hadoop-yarn-project/hadoop-yarn: The patch generated 0 new + 83 unchanged - 4 fixed = 83 total (was 87) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 53s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 24s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 43s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 39s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 2m 16s {color} | {color:green} hadoop-yarn-common in the patch passed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 8m 17s {color} | {color:red} hadoop-yarn-client in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 17s {color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 33m 21s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.yarn.client.api.impl.TestYarnClient |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:9560f25 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12818654/YARN-5213.2.patch |
| JIRA Issue | YARN-5213 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux 877271c769fe 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 92fe2db |
| Default Java | 1.8.0_91 |
| findbugs | v3.0.0 |
| unit | https://builds.apache.org/job/PreCommit-YARN-Build/12361/artifact/patchprocess/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-client.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-YARN-Build/12361/artifact/patchprocess/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-client.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/12361/testReport/ |
| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client U: hadoop-yarn-project/hadoop-yarn |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/12361/console |
| Powered by | Apache Yetus 0.3.0   http://yetus.apache.org |


This message was automatically generated.

, The test failure is not related. +1. Latest patch LGTM.
[~rohithsharma], I will commit it tomorrow if you don't have further comments., +1 LGTM, I have commit the patch to trunk and branch-2. Thanks [~xgong] for patch contribution and [~rohithsharma] for review and comments!, SUCCESS: Integrated in Hadoop-trunk-Commit #10118 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/10118/])
YARN-5213. Fix a bug in LogCLIHelpers which cause (junping_du: rev dc2f4b6ac8a6f8848457046cf9e1362d8f48495d)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/test/java/org/apache/hadoop/yarn/client/cli/TestLogsCLI.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/LogCLIHelpers.java
]