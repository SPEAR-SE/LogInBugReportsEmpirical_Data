[reproduced by the new unit test "TestFifoScheduler#testYARN1986" which is attached with name "YARN-1986-testcase.patch". It's not for commit, just for your information., It's the new unit test to reproduce this NPE constantly.
It's not for commit, just for your information or validation.
, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12643498/YARN-1986-testcase.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:

                  org.apache.hadoop.yarn.server.resourcemanager.TestClientRMService
                  org.apache.hadoop.yarn.server.resourcemanager.TestFifoScheduler

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/3699//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/3699//console

This message is automatically generated., The failure of TestClientRMService is tracked by YARN-2023.
The failure of TestFifoScheduler when YARN-1986-testcase.patch is applied shows the reproduce of this NPE., Thanks you for reporting the issue, Hong. It looks like a concurrency bug about AbstractYarnScheduler#applications. 
I'll take a look more deeply., Fixing itself LGTM. Minor points:

{code}
+      if (application == null) {
+        continue;
+      }
{code}

{code}
+      if (attempt == null) {
+        continue;
+      }
{code}

How about adding comments to describe why we can skip the entry like this?
{code}
// attempt can be null because assignContainer doesn't have any locks.
// In this case, we can just skip the entry.
{code}, [~sandyr], should we fix this race condition in 2.4.1 release? IMHO, It should be fixed., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12643524/YARN-1986.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:

                  org.apache.hadoop.yarn.server.resourcemanager.TestRMRestart

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/3702//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/3702//console

This message is automatically generated., Under what circumstances does application end up null?  This does seem like a serious issue that we should fix., [~sandyr], in my understanding, this will be happen in following invoke sequence. [~zhiguohong] please correct me if I was wrong.
{code}
1) APP_ADDED // will create SchedulerApplication
2) NODE_UPDATE // will access SchedulerApplication.getCurrentAppAttempt(), it's null currently. :(
3) APP_ATTEMPT_ADDED // will call SchedulerApplication.setCurrentAppAttempt(...)
{code}
Instead of 
{code}
1) APP_ADDED // will create SchedulerApplication
2) APP_ATTEMPT_ADDED // will call SchedulerApplication.setCurrentAppAttempt(...)
3) NODE_UPDATE // will access SchedulerApplication.getCurrentAppAttempt, not null now :)
{code}

I think the patch should be enough to fix this problem, but some comments,
1) A simple test case (instead of a random test) should be included to make sure no regression in the future
2) Should we rethink is it possible to evict APP_ADDED event in scheduler? Only APP_ATTEMPT_ADDED event left can make sure atomic in this case., Wangda, thanks for your suggestion. I add the test going through the sequence: APP_ADDED, NODE_UPDATE, APP_ATTEMPT_ADDED. And it works as expected: fails on trunk and succeed with the fix.

I agree with you to evict APP_ADDED in scheduler. But that's a big change. We'd better do it in another jira., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12643739/YARN-1986-2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/3710//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/3710//console

This message is automatically generated., Thanks for looking into this everyone. I wanted to post again to correct an assumption I made in my original post.

I found a situation where "After RM was restarted, the job runs without a problem" isn't correct.

In this case, after restarting this RM multiple times, the exception persists on startup. Removing the RM state allows the RM to startup again.

{noformat}
17:50:29,781  INFO FifoScheduler:369 - Accepted application application_1396474639291_0106 from user: xxxxx, currently num of applications: 1
17:50:29,782  INFO FifoScheduler:369 - Accepted application application_1396474639291_0105 from user: xxxxx, currently num of applications: 2
17:50:29,782  INFO FifoScheduler:369 - Accepted application application_1396474639291_0063 from user: xxxxx, currently num of applications: 3
17:50:29,782  INFO FifoScheduler:369 - Accepted application application_1396474639291_0051 from user: xxxxx, currently num of applications: 4
17:50:29,782  INFO FifoScheduler:369 - Accepted application application_1396474639291_0094 from user: xxxxx, currently num of applications: 5
17:50:29,782  INFO FifoScheduler:369 - Accepted application application_1396474639291_0061 from user: xxxxx, currently num of applications: 6
17:50:29,782  INFO FifoScheduler:369 - Accepted application application_1396474639291_0095 from user: xxxxx, currently num of applications: 7
17:50:29,782  INFO RMNodeImpl:385 - xxxxx.com:33502 Node Transitioned from NEW to RUNNING
17:50:29,782  INFO FifoScheduler:369 - Accepted application application_1396474639291_0062 from user: xxxxx, currently num of applications: 8
17:50:29,783  INFO FifoScheduler:369 - Accepted application application_1396474639291_0050 from user: xxxxx, currently num of applications: 9
17:50:29,788 FATAL ResourceManager:600 - Error in handling event type NODE_UPDATE to the scheduler
java.lang.NullPointerException
	at org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler.assignContainers(FifoScheduler.java:462)
	at org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler.nodeUpdate(FifoScheduler.java:714)
	at org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler.handle(FifoScheduler.java:743)
	at org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler.handle(FifoScheduler.java:104)
	at org.apache.hadoop.yarn.server.resourcemanager.ResourceManager$SchedulerEventDispatcher$EventProcessor.run(ResourceManager.java:591)
	at java.lang.Thread.run(Thread.java:744)
17:50:29,790  INFO ResourceManager:604 - Exiting, bbye..
17:50:29,800  INFO CallQueueManager:53 - Using callQueue class java.util.concurrent.LinkedBlockingQueue
17:50:29,801  INFO Server:593 - Starting Socket Reader #1 for port 8033
17:50:29,803  INFO RpcServerFactoryPBImpl:174 - Adding protocol org.apache.hadoop.yarn.server.api.ResourceManagerAdministrationProtocolPB to the server
17:50:29,804  INFO Server:662 - IPC Server listener on 8033: starting
17:50:29,804  INFO Server:815 - IPC Server Responder: starting
17:50:29,809  INFO log:67 - Stopped SelectChannelConnector@0.0.0.0:8088
17:50:29,910  INFO Server:2399 - Stopping server on 8032
17:50:29,911  INFO Server:694 - Stopping IPC Server listener on 8032
17:50:29,911  INFO Server:820 - Stopping IPC Server Responder
17:50:29,911  INFO Server:2399 - Stopping server on 8033
17:50:29,912  INFO Server:694 - Stopping IPC Server listener on 8033
17:50:29,912  INFO ResourceManager:890 - Transitioning to standby state
17:50:29,912  INFO Server:820 - Stopping IPC Server Responder
17:50:29,913  INFO MetricsSystemImpl:200 - Stopping ResourceManager metrics system...
17:50:29,915  INFO MetricsSystemImpl:206 - ResourceManager metrics system stopped.
17:50:29,916  INFO MetricsSystemImpl:572 - ResourceManager metrics system shutdown complete.
17:50:29,916  INFO AsyncDispatcher:138 - AsyncDispatcher is draining to stop, igonring any new events.
{noformat}, Thanks for your help, Hong, Wangda, and Jon! I think the reproducing flow pointed by Wangda is correct. Minor comments against the patch:

{code}
+import java.util.concurrent.atomic.AtomicBoolean;
{code}

We can remove unused import.

{code}
+  public void testYARN1986() throws Exception {
{code}

Should we update the test name to proper one?(e.g. testNodeUpdateBeforeAttemptInit or something?)
, Tsuyoshi, thanks for your suggestion. I uploaded a new patch., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12643895/YARN-1986-3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/3716//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/3716//console

This message is automatically generated., +1(non-binding). Let's wait for [~sandyr]'s comment., [~vinodkv], can you check this JIRA? It looks serious problem to me. Should we do this as a blocker ticket of 2.4.1? , Sorry for being so slow on this.

+1 to the change.  I looked at the code for the fair and capacity schedulers and they don't seem to face the same issue., FAILURE: Integrated in Hadoop-Yarn-trunk #561 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/561/])
YARN-1986. In Fifo Scheduler, node heartbeat in between creating app and attempt causes NPE (Hong Zhiguo via Sandy Ryza) (sandy: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1594476)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestFifoScheduler.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1779 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1779/])
YARN-1986. In Fifo Scheduler, node heartbeat in between creating app and attempt causes NPE (Hong Zhiguo via Sandy Ryza) (sandy: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1594476)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestFifoScheduler.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1753 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1753/])
YARN-1986. In Fifo Scheduler, node heartbeat in between creating app and attempt causes NPE (Hong Zhiguo via Sandy Ryza) (sandy: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1594476)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestFifoScheduler.java
, SUCCESS: Integrated in Hadoop-trunk-Commit #5605 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/5605/])
YARN-1986. In Fifo Scheduler, node heartbeat in between creating app and attempt causes NPE (Hong Zhiguo via Sandy Ryza) (sandy: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1594476)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestFifoScheduler.java
]