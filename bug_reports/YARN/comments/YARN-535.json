[{code}
org.apache.hadoop.yarn.applications.unmanagedamlauncher.TestUnmanagedAMLauncher  Time elapsed: 4137 sec  <<< ERROR!
java.lang.RuntimeException: Error parsing 'yarn-site.xml' : org.xml.sax.SAXParseException: Premature end of file.
	at org.apache.hadoop.conf.Configuration.loadResource(Configuration.java:2050)
	at org.apache.hadoop.conf.Configuration.loadResources(Configuration.java:1899)
	at org.apache.hadoop.conf.Configuration.getProps(Configuration.java:1816)
	at org.apache.hadoop.conf.Configuration.handleDeprecation(Configuration.java:465)
	at org.apache.hadoop.conf.Configuration.asXmlDocument(Configuration.java:2127)
	at org.apache.hadoop.conf.Configuration.writeXml(Configuration.java:2096)
	at org.apache.hadoop.conf.Configuration.writeXml(Configuration.java:2086)
	at org.apache.hadoop.yarn.applications.unmanagedamlauncher.TestUnmanagedAMLauncher.setup(TestUnmanagedAMLauncher.java:63)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:27)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: org.xml.sax.SAXParseException: Premature end of file.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:246)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:284)
	at javax.xml.parsers.DocumentBuilder.parse(DocumentBuilder.java:153)
	at org.apache.hadoop.conf.Configuration.parse(Configuration.java:1887)
	at org.apache.hadoop.conf.Configuration.parse(Configuration.java:1875)
	at org.apache.hadoop.conf.Configuration.loadResource(Configuration.java:1946)
	... 29 more
{code}
This stack trace is a failure to read the file yarn-site.xml, which is actually being written on line 63 of TestUnmanagedAMLauncher -a file that 
is already open for writing. 

It is possible that some filesystems (here, HFS+) make that write visible while it is still
going on, triggering a failure which then corrupts later builds at init time

{code}
$ ls -l target/test-classes/yarn-site.xml 
-rw-r--r--  1 stevel  staff  0  3 Apr 15:37 target/test-classes/yarn-site.xml
{code}

This is newer than the one in test/properties, so Maven doesn't fix it next test run
{code}
$ ls -l src/test/resources/yarn-site.xml 
-rw-r--r--@ 1 stevel  staff  830 28 Nov 16:29 src/test/resources/yarn-site.xml
{code}
as a result, follow on tests fail when MiniYARNCluster tries to read it.

{code}
org.apache.hadoop.yarn.applications.unmanagedamlauncher.TestUnmanagedAMLauncher  Time elapsed: 515 sec  <<< ERROR!
java.lang.RuntimeException: Error parsing 'yarn-site.xml' : org.xml.sax.SAXParseException: Premature end of file.
	at org.apache.hadoop.conf.Configuration.loadResource(Configuration.java:2050)
	at org.apache.hadoop.conf.Configuration.loadResources(Configuration.java:1899)
	at org.apache.hadoop.conf.Configuration.getProps(Configuration.java:1816)
	at org.apache.hadoop.conf.Configuration.get(Configuration.java:719)
	at org.apache.hadoop.conf.Configuration.getTrimmed(Configuration.java:738)
	at org.apache.hadoop.conf.Configuration.getLong(Configuration.java:948)
	at org.apache.hadoop.security.Groups.<init>(Groups.java:62)
	at org.apache.hadoop.security.Groups.getUserToGroupsMappingService(Groups.java:182)
	at org.apache.hadoop.security.UserGroupInformation.initialize(UserGroupInformation.java:244)
	at org.apache.hadoop.security.UserGroupInformation.ensureInitialized(UserGroupInformation.java:213)
	at org.apache.hadoop.security.UserGroupInformation.getLoginUser(UserGroupInformation.java:674)
	at org.apache.hadoop.security.UserGroupInformation.getCurrentUser(UserGroupInformation.java:582)
	at org.apache.hadoop.fs.FileContext.getFileContext(FileContext.java:458)
	at org.apache.hadoop.fs.FileContext.getFileContext(FileContext.java:439)
	at org.apache.hadoop.fs.FileContext.getLocalFSFileContext(FileContext.java:425)
	at org.apache.hadoop.yarn.server.MiniYARNCluster.<init>(MiniYARNCluster.java:93)
	at org.apache.hadoop.yarn.applications.unmanagedamlauncher.TestUnmanagedAMLauncher.setup(TestUnmanagedAMLauncher.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:27)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
{code}

# This test should copy over the new yarn-site.xml rather than overwrite the live one
# there should be a yarn-site-template.xml that is copied over
# the {{Configuration.loadResource()}} could skip size 0 files instead of trying to parse them.


, Arguably it depends on HADOOP-9453 "Configuration.loadResource should skip empty resources", but the root cause is the race condition overwriting the file; the new config should be written then delete+rename onto the new file. Assuming both delete and rename are atomic, this would avoid ever having a present-but-invalid-XML document on the classpath, {{TestDistributedShell#setup}} has nearly identical code to overwrite yarn-site.xml., this patch verifies that the conf to write has picked up the hostnames, then saves the config XML to a string *before* trying to write it to the classpath'd resource, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12577836/YARN-535.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-unmanaged-am-launcher.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/694//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/694//console

This message is automatically generated., Hi, Steve.  The patch looks good.  I verified that the test passes, running on Mac and Windows.

Do you also want to include {{TestDistributedShell#setup}} in the patch?  I expect the change would be nearly identical.
, Updated version with the same logic added to {{TestDistributedShell}}, which has the same race condition. There's also a log4j.properties file for the UnmanagedAMLauncher tests, which was absent before, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12583010/YARN-535-02.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-unmanaged-am-launcher.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/917//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/917//console

This message is automatically generated., +1 for the patch.  Thanks for making the change in {{TestDistributedShell}} too.  I verified the tests on both Mac and Windows., resubmitting, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12583010/YARN-535-02.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-YARN-Build/4507//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12583010/YARN-535-02.patch
  against trunk revision c91b2de.

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-YARN-Build/7295//console

This message is automatically generated., [~stevel@apache.org], do you still want to get this one in?  It would need a rebase., I want to get all my outstanding patches in... I just resubmitted it to see what state it was in, Hi [~stevel@apache.org], looks like the latest patch does not apply on trunk. Would you mind to rebase it? For now I'm canceling this patch as a clean up. ]