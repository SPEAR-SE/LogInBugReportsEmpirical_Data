[Posted patch v.1.

Excluded all the undesirable indirect dependencies from these modules., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 33s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red} 0m 0s {color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue} 0m 9s {color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 7m 17s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 1m 44s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 49s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 32s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 26s {color} | {color:green} trunk passed {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue} 0m 9s {color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 33s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 1m 26s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 1m 26s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 41s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 24s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green} 0m 3s {color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 21s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 0m 44s {color} | {color:green} hadoop-yarn-server-timelineservice in the patch passed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 4m 56s {color} | {color:red} hadoop-yarn-server-timelineservice-hbase-tests in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 17s {color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 21m 52s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.yarn.server.timelineservice.storage.TestHBaseTimelineStorage |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:9560f25 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12817557/YARN-5364.01.patch |
| JIRA Issue | YARN-5364 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  xml  |
| uname | Linux 2588a1932efe 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / a290a98 |
| Default Java | 1.8.0_91 |
| unit | https://builds.apache.org/job/PreCommit-YARN-Build/12297/artifact/patchprocess/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-timelineservice-hbase-tests.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-YARN-Build/12297/artifact/patchprocess/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-timelineservice-hbase-tests.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/12297/testReport/ |
| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase-tests U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/12297/console |
| Powered by | Apache Yetus 0.3.0   http://yetus.apache.org |


This message was automatically generated.

, Not sure why the unit test failed. It's certainly unrelated. Kicking off the jenkins build one more time., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 24s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red} 0m 0s {color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue} 0m 55s {color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 7m 22s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 1m 37s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 48s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 32s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 27s {color} | {color:green} trunk passed {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue} 0m 8s {color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 35s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 1m 32s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 1m 32s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 41s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 26s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green} 0m 2s {color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 22s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 0m 45s {color} | {color:green} hadoop-yarn-server-timelineservice in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 5m 6s {color} | {color:green} hadoop-yarn-server-timelineservice-hbase-tests in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 17s {color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 22m 31s {color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:9560f25 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12817557/YARN-5364.01.patch |
| JIRA Issue | YARN-5364 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  xml  |
| uname | Linux d1a088cb154d 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / a290a98 |
| Default Java | 1.8.0_91 |
|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/12298/testReport/ |
| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase-tests U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/12298/console |
| Powered by | Apache Yetus 0.3.0   http://yetus.apache.org |


This message was automatically generated.

, LGTM., Thanks for the patch [~sjlee0], patch LGTM will commit it shortly !, [~sjlee0], Not sure its an issue but locally test case execution for the project is failing for {{hadoop-yarn-server-timelineservice-hbase-tests}}, Have attached the snapshot for the same. Can you check once locally too?
Test report from the [latest jenkins run|https://builds.apache.org/job/PreCommit-YARN-Build/12298/testReport/org.apache.hadoop.yarn.server.timelineservice.storage.flow/] shows that it has run test cases for this project successfully but some how locally failing for me.
 , Hmm, I haven't seen that error before. I see the {{twill-zookeeper}} dependency with or without this patch:

{noformat}
[INFO]    org.apache.twill:twill-zookeeper:jar:0.6.0-incubating:test
{noformat}

I also see it in the classpath of the unit tests (via {{mvn test -X}} )

{panel}
\[DEBUG\] boot(compact) classpath:  surefire-booter-2.17.jar  surefire-api-2.17.jar  test-classes  classes  junit-4.11.jar  hamcrest-core-1.3.jar  hadoop-yarn-server-timelineservice-3.0.0-alpha1-SNAPSHOT.jar  hadoop-annotations-3.0.0-alpha1-SNAPSHOT.jar  tools.jar  guice-4.0.jar  javax.inject-1.jar  aopalliance-1.0.jar  commons-io-2.4.jar  servlet-api-2.5.jar  jaxb-api-2.2.2.jar  stax-api-1.0-2.jar  activation-1.1.jar  commons-cli-1.2.jar  commons-lang-2.6.jar  commons-logging-1.1.3.jar  commons-csv-1.0.jar  jackson-core-asl-1.9.13.jar  jackson-mapper-asl-1.9.13.jar  hadoop-common-2.5.1.jar  commons-math3-3.1.1.jar  xmlenc-0.52.jar  commons-httpclient-3.1.jar  commons-codec-1.4.jar  commons-net-3.1.jar  commons-collections-3.2.2.jar  jetty-6.1.26.jar  jetty-util-6.1.26.jar  jersey-json-1.19.jar  jaxb-impl-2.2.3-1.jar  jersey-server-1.19.jar  jasper-compiler-5.5.23.jar  jasper-runtime-5.5.23.jar  jsp-api-2.1.jar  commons-el-1.0.jar  log4j-1.2.17.jar  jets3t-0.9.0.jar  httpcore-4.4.4.jar  java-xmlbuilder-0.4.jar  commons-configuration-1.6.jar  commons-digester-1.8.jar  commons-beanutils-1.7.0.jar  commons-beanutils-core-1.8.0.jar  slf4j-api-1.7.10.jar  slf4j-log4j12-1.7.10.jar  avro-1.7.4.jar  paranamer-2.3.jar  snappy-java-1.0.4.1.jar  protobuf-java-2.5.0.jar  jsch-0.1.51.jar  jsr305-3.0.0.jar  zookeeper-3.4.6.jar  commons-compress-1.4.1.jar  xz-1.0.jar  hadoop-auth-2.5.1.jar  httpclient-4.5.2.jar  apacheds-kerberos-codec-2.0.0-M15.jar  apacheds-i18n-2.0.0-M15.jar  api-asn1-api-1.0.0-M20.jar  api-util-1.0.0-M20.jar  hadoop-yarn-api-3.0.0-alpha1-SNAPSHOT.jar  hadoop-yarn-common-3.0.0-alpha1-SNAPSHOT.jar  jackson-jaxrs-1.9.13.jar  jackson-xc-1.9.13.jar  guice-servlet-4.0.jar  jersey-guice-1.19.jar  jersey-servlet-1.19.jar  hadoop-yarn-server-common-3.0.0-alpha1-SNAPSHOT.jar  leveldbjni-all-1.8.jar  hadoop-yarn-server-applicationhistoryservice-3.0.0-alpha1-SNAPSHOT.jar  jettison-1.1.jar  fst-2.24.jar  javassist-3.18.1-GA.jar  objenesis-2.1.jar  guava-11.0.2.jar  jersey-core-1.19.jar  jsr311-api-1.1.1.jar  jersey-client-1.19.jar  hbase-common-1.1.3.jar  hbase-protocol-1.1.3.jar  hbase-annotations-1.1.3.jar  htrace-core-3.1.0-incubating.jar  findbugs-annotations-1.3.9-1.jar  hbase-client-1.1.3.jar  netty-all-4.1.0.Beta5.jar  jcodings-1.0.8.jar  joni-2.1.2.jar  hbase-server-1.1.3.jar  hbase-procedure-1.1.3.jar  hbase-prefix-tree-1.1.3.jar  hbase-hadoop-compat-1.1.3.jar  hbase-hadoop2-compat-1.1.3.jar  metrics-core-2.2.0.jar  commons-math-2.2.jar  jetty-sslengine-6.1.26.jar  jsp-2.1-6.1.14.jar  jsp-api-2.1-6.1.14.jar  servlet-api-2.5-6.1.14.jar  jamon-runtime-2.3.1.jar  disruptor-3.3.0.jar  hbase-common-1.1.3-tests.jar  hbase-server-1.1.3-tests.jar  hbase-it-1.1.3-tests.jar  hbase-shell-1.1.3.jar  jruby-complete-1.6.8.jar  netty-3.2.4.Final.jar  phoenix-core-4.7.0-HBase-1.1.jar  tephra-api-0.7.0.jar  tephra-core-0.7.0.jar  gson-2.2.4.jar  guice-assistedinject-3.0.jar  libthrift-0.9.0.jar  fastutil-6.5.6.jar  twill-common-0.6.0-incubating.jar  twill-core-0.6.0-incubating.jar  twill-api-0.6.0-incubating.jar  asm-all-5.0.2.jar  twill-discovery-api-0.6.0-incubating.jar  twill-discovery-core-0.6.0-incubating.jar  twill-zookeeper-0.6.0-incubating.jar  metrics-core-3.1.0.jar  tephra-hbase-compat-1.1-0.7.0.jar  antlr-3.5.jar  ST4-4.0.7.jar  antlr-runtime-3.5.jar  stringtemplate-3.2.1.jar  antlr-2.7.7.jar  sqlline-1.1.8.jar  annotations-1.3.2.jar  snappy-0.3.jar  phoenix-core-4.7.0-HBase-1.1-tests.jar  jline-2.11.jar  joda-time-1.6.jar  mockito-all-1.8.5.jar  hadoop-common-2.5.1-tests.jar  hadoop-hdfs-2.5.1.jar  commons-daemon-1.0.13.jar  netty-3.6.2.Final.jar  hadoop-hdfs-2.5.1-tests.jar  hbase-testing-util-1.1.3.jar  hbase-annotations-1.1.3-tests.jar  hbase-hadoop-compat-1.1.3-tests.jar  hbase-hadoop2-compat-1.1.3-tests.jar  surefire-junit4-2.17.jar
{panel}

Do you see that as well? Does your maven local cache ( {{~/.m2/repository}} ) have that jar?, Passes for me.
I tried changing the repository path (so that all jars are downloaded again) and even then it works.

Probably [~naganarasimha_gr@apache.org] at that time the repository from where the jar was to be downloaded from, may have been down., Not sure why it was failing earlier (with /without the patch), once i changed the repo location then was able to start running the test cases, Will go ahead and commit the patch., strangely dependency tree was also not showing it as required jar earlier, Thanks for the contribution [~sjlee0] and reviews from [~jrottinghuis] and [~varun_saxena]., SUCCESS: Integrated in Hadoop-trunk-Commit #10092 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/10092/])
YARN-5364. timelineservice modules have indirect dependencies on (naganarasimha_gr: rev af8f480c2482b40e9f5a2d29fb5bc7069979fa2e)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase-tests/pom.xml
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/pom.xml
]