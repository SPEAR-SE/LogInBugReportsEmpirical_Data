[[~vinodkv]
Can you give me some advice ? Thanks!, YARN-3091 just replaced {{synchronized}} with a read/write lock.  There's still a lot that can be done to improve the locking.  The trick is to map the state that's being protected and figure out how not to lock unnecessarily for each operation., Hi [~zhengchenyu], thanks for filing this jira. IIUC, you reduced frequency of NM node update to avoid flooding the network in a 5k nodes cluster, but Continuous Scheduling is not necessary when there are still enough node update events in the clusters. Besides the improvement of lock in FS, we can always balance time interval of continuous scheduling  and frequency of NM node update to get better scheduling latency., On large clusters, we have been recommending our customers to turn off continuous scheduling. Are you sure you need continuous scheduling? , [~daniel@cloudera.com]
Yes, I think so. Though this work is hard, I think it's necessary!, [~yufeigu] [~kasha@cloudera.com]
We can't turn off  continuous scheduling
Because our cluster is 1 Gigabit Ethernet. locality is very important for us. we lower the max.assign to keep off hot pot. And this configuration lead to the decrement of assigned capacity.  , How is locality related to continuous scheduling? You could turn on delay scheduling without using continuous scheduling. , [~kasha@cloudera.com]
We have used delay scheduling to raise the locality. But delay scheduling will lower the hit rate, then lower the ablitity of assigned. Because when we assigned to a node, we find the most suitable queue, then find the most suitable app, then find the most suitable request. But the most suitable request may not be assigned because this node is not proper the request when turn on delay scheduling. This is the reason I create YARN-5846 !, For exmaple, addNode and removeNode can't  happen at the same time in FairScheduler. 
Because the two method are also called in SchedulerEventDispatcher.EventProcessor.run.( notes: called by scheduler.handle(event) ). Because all Scheduler event is execute in a blocking queue. 
So, in FairScheduler, many similar code are written by object lock. I think it's unnecessary!, hi, [~zhengchenyu]  *The setting that max.assign is 5 lead to the assigned ability decreased.* what is the value before you modify it to 5?]