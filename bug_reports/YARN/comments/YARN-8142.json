[In Unix terms, SIGTERM is used for terminating application.  My impression this is correct behavior rather than start another instance.  If other signal is used (besides SIGKILL and SIGTERM), then spawning another instance might be the right thing to do., I am thinking another scenario, what if an app's AM hangs. User wants to restart the AM without restarting the entire app, would it be reasonable to allow an AM be killed then automatically restarted in another instance? To terminate the application (especially for a long-running service), we need to call a stop command instead of killing an AM directly. Does that make sense?, [~cheersyang] If AM is hanging, then it is unlikely to gracefully terminate by SIGTERM.  I think SIGKILL would be the right way to handle this, and let RM restart it., I ran mapreduce sleep job.
{noformat}
hadoop jar hadoop-mapreduce-client-jobclient-2.8-tests.jar sleep -m 1 -mt 100000 -r 1 -rt 1
{noformat}
Tried to kill am attempt.
 It didn't kill the whole application.
 In my case, it launched another AM attempt.
 I ran SIGKILL as well as SIGTERM. Both of them spawned new AM attempt.
-So something that went into 3.* changed that behavior.-
I thought the affected version was 3.2 and 3.1
Yesha: Can you please mention affected version ?
 , My bad.
Please ignore my previous comments.
I missed to read that it affects {{yarn-native-services}}., Okay, I could put up a patch that would modify the service AM SIGTERM behavior to match the SIGKILL behavior, but we need to resolve what we would like the AM to do in this situation. Currently, the behavior is:
* SIGKILL only kills the AM, so a new AM will be started and the service will keep running
* SIGTERM stops the entire service
* a service client stop command RPC stops the entire service

So the question is whether the SIGTERM behavior should be the same as the SIGKILL or the service client stop command., I'm leaning in favor of having SIGTERM result in a new AM being started, as SIGKILL does now. Erring on the side of "keep the service running" may outweigh matching the Unix philosophy here, but I can understand that reasoning., [~billie.rinaldi] [~shanekumpf@gmail.com] SIGTERM should not be more destructive than SIGKILL.  Hence, I am changing my mind about using SIGTERM to terminate the entire application.  It would be good to keep it consistent with existing YARN AM design., [~eyang], that argument makes sense to me. It does seem unexpected for SIGTERM to be more destructive than SIGKILL. I will put up a patch to make SIGTERM match the SIGKILL behavior., | (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 28s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 22m 59s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 22s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 14s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 26s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green}  8m 54s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 33s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 12s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 24s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 18s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 18s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 12s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 23s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green}  9m 31s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 38s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 11s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  8m 40s{color} | {color:green} hadoop-yarn-services-core in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 23s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 55m  2s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:8620d2b |
| JIRA Issue | YARN-8142 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12918641/YARN-8142.1.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |
| uname | Linux fcf6b1f34e97 4.4.0-64-generic #85-Ubuntu SMP Mon Feb 20 11:50:30 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 0d898b7 |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_162 |
| findbugs | v3.1.0-RC1 |
|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/20315/testReport/ |
| Max. process+thread count | 687 (vs. ulimit of 10000) |
| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/20315/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, +1 This patch looks good to me.  I just committed to trunk.

[~billie.rinaldi] Thank you for the patch.
[~shanekumpf@gmail.com] Thank you for the review., SUCCESS: Integrated in Jenkins build Hadoop-trunk-Commit #13995 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/13995/])
YARN-8142.  Improve SIGTERM handling for YARN Service Application (eyang: rev 9031a76d447f0c5eaa392144fd17c5b9812e1b20)
* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/ServiceScheduler.java
* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/test/java/org/apache/hadoop/yarn/service/TestYarnNativeServices.java
* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/ClientAMService.java
* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/test/java/org/apache/hadoop/yarn/service/ServiceTestUtils.java
, Thanks for the review and commit, [~eyang]! I plan to cherry-pick this to branch-3.1 if no one objects.]