[This behavior is still true for 2.7.6., Hi [~gurmukhd] , After investigating this issue, I think is related to JAVA float precision. JAVA float has 32 bits (4 bytes) where 23 bits are used for the mantissa (about 7 decimal *digits*). which will result in some unexpected precision loss here. 

Also, capacity value is a percentage based value, so it will be converted and cap into 0.0714286f. 

I tested in local, System.out.println(0.07142857142857143f) will be 0.071428575.

So to be safe, we suggest not setting capacity with precision which extends JAVA float precision., Hi [~gurmukhd] , any comments on this? Can we close this issue as won't fix?, close this as won't fix as explained above., Thanks Zian, for looking into this]