[Uploading a patch that might help.

Haven't been able to validate this because I was unable to consistently reproduce the issue. Verified the test passes locally with the patch, so at least this is not a regression.
, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12596899/yarn-1046-1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/1676//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/1676//console

This message is automatically generated., Just did some research and looks like these kinds of test failures were solved for MR in MAPREDUCE-5094.  There, they set NM_PMEM_CHECK_ENABLED and NM_VMEM_CHECK_ENABLED to false for all MiniMRYarnClusters.  Would it be possible to do this for all MiniYarnClusters?, Thanks Sandy. Totally agree with you, forgot about that JIRA.

Here is a patch that is very much along the lines of MAPREDUCE-5094, but for MiniYARNCluster.

I wonder if we need MAPREDUCE-5094 anymore?, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12596983/yarn-1046-2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-tests.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/1678//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/1678//console

This message is automatically generated., +1, And yeah, MAPREDUCE-5094 may not be necessary now, though that's work for another JIRA., Thanks Karthik!  Just committed this to trunk, branch-2, branch-2.1-beta, and branch-2.1.0-beta, SUCCESS: Integrated in Hadoop-trunk-Commit #4241 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/4241/])
YARN-1046. Disable mem monitoring my default in MiniYARNCluster (Karthik Kambatla via Sandy Ryza) (sandy: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1512493)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/YarnConfiguration.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-tests/src/test/java/org/apache/hadoop/yarn/server/MiniYARNCluster.java
, Sorry to chime in late on this. Was there a reason why both vmem and pmem checks were disabled? Having seen such failures reported by other folks at times, in almost all situations ( including this one ), only the vmem limits were exceeded. , [~hitesh], I was wondering the same. In the end, just followed what MAPREDUCE-5094 did. It does make sense to only disable vmem monitoring. Also, we shouldn't need to do MAPREDUCE-5094 any more. 

Should I post an addendum that does all this or file a new JIRA?, Vinod's comment on MAPREDUCE-5094 for disabling pmem as well was

bq. Let's also disable pmem, no point in doing it for tests. If we want to validate the monitoring, specific tests should do that., [~kkambatl] Looking more at MAPREDUCE-5094, looks like Vinod had a comment that specific tests already exist for verifying that container mem monitoring works. My main concern was that having a path always testing container monitoring would be useful to catch edge cases in different environments. However, as Vinod mentioned, given that as we have specific tests for that, it should be fine to disable both. To summarize, nothing more to be done. , SUCCESS: Integrated in Hadoop-Yarn-trunk #297 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/297/])
YARN-1046. Disable mem monitoring my default in MiniYARNCluster (Karthik Kambatla via Sandy Ryza) (sandy: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1512493)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/YarnConfiguration.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-tests/src/test/java/org/apache/hadoop/yarn/server/MiniYARNCluster.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1487 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1487/])
YARN-1046. Disable mem monitoring my default in MiniYARNCluster (Karthik Kambatla via Sandy Ryza) (sandy: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1512493)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/YarnConfiguration.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-tests/src/test/java/org/apache/hadoop/yarn/server/MiniYARNCluster.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1514 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1514/])
YARN-1046. Disable mem monitoring my default in MiniYARNCluster (Karthik Kambatla via Sandy Ryza) (sandy: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1512493)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/YarnConfiguration.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-tests/src/test/java/org/apache/hadoop/yarn/server/MiniYARNCluster.java
]