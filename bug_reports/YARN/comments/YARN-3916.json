[In YARN-3878 we introduced check for whether event queue is empty in DrainDispatcher#await.
Even pre YARN-3878, code was essentially doing the same but that was through a volatile flag. That may have failed sometimes as well. 
But changes to volatile flag were not seen by other thread as quickly as checking for event queue being empty hence few of these tests were not failing and allowing async dispatcher to handle the event.

We should ideally check whether event has been handled in addition to event queue being empty., Pre YARN-3878 code would have actually worked for DrainDispatcher., Updated patch, \\
\\
| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  16m 12s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | javac |   7m 41s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 41s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:green}+1{color} | checkstyle |   0m 56s | There were no new checkstyle issues. |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 21s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 33s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   1m 34s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | yarn tests |   1m 56s | Tests passed in hadoop-yarn-common. |
| | |  40m 19s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12744910/YARN-3916.01.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 1df39c1 |
| hadoop-yarn-common test log | https://builds.apache.org/job/PreCommit-YARN-Build/8511/artifact/patchprocess/testrun_hadoop-yarn-common.txt |
| Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/8511/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf905.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/8511/console |


This message was automatically generated., Thanks [~varun_saxena] investigating this problem, I think patch generally looks good. I suggest to add some comments about why add a processingEvents variable., Thanks [~leftnoteasy] for reviewing the patch.
Have added a comment as you said and updated a new patch. , \\
\\
| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  16m 13s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | javac |   7m 42s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 35s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:green}+1{color} | checkstyle |   0m 56s | There were no new checkstyle issues. |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 21s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 34s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   1m 34s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | yarn tests |   1m 56s | Tests passed in hadoop-yarn-common. |
| | |  40m 16s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12744944/YARN-3916.02.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / d7319de |
| hadoop-yarn-common test log | https://builds.apache.org/job/PreCommit-YARN-Build/8513/artifact/patchprocess/testrun_hadoop-yarn-common.txt |
| Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/8513/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf905.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/8513/console |


This message was automatically generated., [~varun_saxena],
Thanks for updating, but I think the comment may not accurate enough if I understand correctly: the flag == true when dispatcher is processing events OR dispatcher has pending events, maybe rename it to something like "isIdle" is more accurate.

Thoughts?, Skimmed through the patch. Would it be simpler to have a boolean flag ({{eventBeingProcessed}}) turned on only when an event is being handled, and {{isProcessingEvents}} be {{!eventQueue.isEmpty() || eventBeingProcessed}}?, How about keeping earlier variable *drained* only, this makes more appropriate I think. , I thought of this first.
But issue here is that LinkedBlockingQueue#take is a blocking queue. It wont return from the call if there are no pending events.
If I set the flag before this call, it is possible that we are stuck forever there.
If I set it afterwards there can be a minor race wherein event queue may have taken from queue and made it empty but not updated the flag to true. In this case, we may wrongly judge that no events are being processed., Yeah variable can be named as drained. Because we name the dispatcher as DrainDispatcher as well.
I can mention in comments as to what it means., Won't draining events on serviceStop have the same problem ? 

Actually wondered why that flag was added in the first place, this should be the reason.
I think we can revert the change of YARN-3878 and fix the problem of YARN-3878 properly ?, bq. Won't draining events on serviceStop have the same problem ?
Yes, you are correct. It will have the same problem. We may judge that queue is empty and go on to interrupt the thread while event is being handled.

bq. I think we can revert the change of YARN-3878 and fix the problem of YARN-3878 properly ?
Yeah lets do that. I think when Interrupted exception is thrown on put(issue in YARN-3878), we can reset the flag to false if queue is empty.
Thoughts ?
, [~jianhe], I have an added and addendum patch on YARN-3878.
It adds the previous drained flag, reset it on InterruptedException and kept the bits related to YARN-3878 which were required., thanks [~varun_saxena] ! re-open YARN-3878 and close this as a dup of that. 
will look at YARN-3878.]