[[~sandflee], inside the scheduler, every application only has one attempt. so the current attempt is the attempt corresponding to the appAttemptId. So the name 'getAppAttempt(attemptId)' is matching with the internal implementation. If you agree, we can close this jira. 
, [~jianhe],  thanks for your explanation, I stil have one doubt,

waitForSchedulerAppAttemptAdded(ApplicationAttemptId attemptId) in MockRM maybe expect to waiting RMAppAttempt with attemptId to be SCHEDULED, actually It'll be true after first appAttempt is SCHEDULED. It'll cause launch AM failed before YARN-3533. maybe waitForSchedulerAppAttemptAdded should be corrected as below:

  int tick = 0;
    // Wait for at most 5 sec
    SchedulerApplicationAttempt attempt =
        ((AbstractYarnScheduler)rm.getResourceScheduler()).getApplicationAttempt(attemptId);
    while (null == attempt && attempt.getApplicationAttemptId().equals(attemptId) == false
         && tick < 50) {
      Thread.sleep(100);
      if (tick % 10 == 0) {
        System.out.println("waiting for SchedulerApplicationAttempt="
            + attemptId + " added.");
      }
      tick++;
      attempt =
          ((AbstractYarnScheduler)rm.getResourceScheduler()).getApplicationAttempt(attemptId);
    }

so why waitForSchedulerAppAttemptAdded is not done as expected, I thought the deep reason is getApplicationAttempt(attemptId) is misleading, Especially for the scheduler newbies , we may expect it to return corresponding sheduler app attempt with attemptId.

That's the reason why I suggest to rename it,  please correct me if anything wrong, thanks.
, Didn't get you. the waitForSchedulerAppAttemptAdded implementations should be correct, it waits for the given attempt to be added into scheduler. In fact, after YARN-3533, this call is not needed any more. so, it becomes a no-op. Regarding the name, it does't make too much difference.. The implement is to return the corresponding attempt, given the attempt Id. And the only way today to get that is through the corresponding application and from there get the current attempt. , sorry for my explanation. Let's consider below situation,
1, am1 crashed , rmAppAttempt1 send ATTEMPT_REMOVE event to scheduler
2, scheduler stops schedulerAppAttempt1(not clear), waits for rmAppAttempt2  added to scheduler
3, at this time If we use waitForSchedulerAppAttemptAdded(attempt2) it will be true, and maybe it's not the expected action, The implement of AbstractYarnScheduler.getApplicationAttempt has no problem,  just the name and parrameters confusing me when I view launchAM failures in YARN-3387 and maybe confusing other scheduler newbies.

I wondered If I had explained more clearly, sorry for that., bq. Let's consider below situation,
Hi [~sandflee], it's a valid situation. But waitForSchedulerAppAttemptAdded is really just a test utility method, it's not used in any production code. The whole MockRM is used for testing only., ok, close it now, thanks [~jianhe]]