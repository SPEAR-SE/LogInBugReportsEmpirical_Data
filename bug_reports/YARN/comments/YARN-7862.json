[Hi [~sunilg],

YARN Native service rest api already support hadoop delegation token, and it takes precedence over user.name parameter.  However, Hadoop does not have a single login form to validate username and password to issue delegation token.  Without Knox, user can come into the system from various entry points using web browser.  This is the reason that user.name parameter is used to let server know who the end user should be in the absence of Knox to verify end user credential.  User.name is a stop gap solution for not having a SSO.  For the POST request, use URL that looks like this:

{code}
http://rm_ip:8088/app/v1/services?user.name=foobar
{code}

If you have obtained delegation token somehow, then you can forward the cookie to:

{code}
http://rm_ip:8088/app/v1/services
Set-Cookie: hadoop.auth=...; Path=/; Domain=example.com; HttpOnly
{code}

In Kerberos enabled cluster, you can submit the request with WWW-Authenticate header, and Kerberos ticket, and the request will work., Thanks [~eyang]

I agree with the last point of sending WWW-Authenticate header etc. But for non-secure mode, now UI has to send with user.name option. Its not good to send this user.name=dummy value always from UI in non-secure mode. Because after adding this also, server just skips user.name value. Since server skips this, i think it should not be marked as mandatory option for non-secure mode., [~sunilg] I don't think we ever said user.name is mandatory.  In the absence of external authenticators and delegation token, then user.name is required.  The UI must display 401 Unauthorized challenge to prevent information leak to anonymous user., By the way, the above statements apply to AuthenticationFilter (multi-users mode), StaticUserWebFilter (single user mode), the remote user is hard coded to hadoop.http.staticuser.user in core-site.xml., bq.If you have obtained delegation token somehow, then you can forward the cookie to:

In case of non-kerberized cluster, how this delegation token can be obtained?, [~sunilg] AuthenticationFilter will issue delegation token if user.name parameter exists, and hadoop.auth cookie doesn't exist from web request, and service user is allowed to proxy for end user.  The best practice is to ensure that username/password are verified by knox or third party authenticator and issue the token.  AuthenticationFilter are configured to trust source hostname/IP from Knox gateway only for simple security to work.]