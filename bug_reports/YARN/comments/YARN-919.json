[Attaching patch

Thanks,
Mayank, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12592048/YARN-919-trunk-1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/1468//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/1468//console

This message is automatically generated., [~mayank_bansal] Is this just a question of adding documentation to yarn-env.sh and not additional logic? bin/yarn already does the checking of whether the process specific heapsize and opts are set and if not set, use the default heapsize/opts.

, Thanks [~hitesh] for comments

The primary intention for this JIRA is to provide some handy way for users to set the parameters.

I think you are right bin/yarn already set the defaults which I can remove from this patch , however We need something like this in yarn-env.sh may be commented for now by that user doesnt have to dig around the documentation to increase the sizes for memory.

thoughts?

Thanks,
Mayank, [~mayank_bansal] Yes, that sounds good. 

Something like:

export YARN_RESOURCEMANAGER_HEAPSIZE=${YARN_RESOURCEMANAGER_HEAPSIZE:-<default/recommended value>}
export YARN_RESOURCEMANAGER_OPTS=${YARN_RESOURCEMANAGER_OPTS:-<default/recommended settings>} 

should be enough to account for docs. yarn-env.sh is expected to be overwritten by the user in any case as part of a deployment. 

 , Thanks [~hitesh] for review

For now I commented in yarn-env.sh as suggested.

Thanks,
Mayank, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12592618/YARN-919-trunk-2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/1501//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/1501//console

This message is automatically generated., [~mayank_bansal] I was actually recommending replacing <default/recommended settings> with some actual values based on the default 1GB heap size and recommended jvm settings such as heap dump on out of memory.

If just for documentation, a simpler approach documenting just the variable names and the format the values need to be specified in would suffice.



, Cancelling patch while review comments are addressed., Thanks [~hitesh] and [~vinodkv] for review

Updating the patch

Thanks,
Mayank, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12593050/YARN-919-trunk-3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/1519//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/1519//console

This message is automatically generated., [~hitesh], can you please review/commit this? Tx., [~mayank_bansal] Thanks for addressing the review comments. Looking at bin/yarn in a bit more detail, I noticed a couple of other gotchas that can affect users when setting heapsize. In that aspect, I have attached a patch with a bit more verbose documentation. 

Let me know what you think. , {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12593107/YARN.919.4.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/1526//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/1526//console

This message is automatically generated., Thanks [~hitesh] . Looks good 
+1

Thanks,
Mayank, +1. Documentation looks good. Will help users figure out all the combinations., Thanks Mayank. Committed to trunk/branch-2/branch-2.1-beta, Thanks [~hitesh].]