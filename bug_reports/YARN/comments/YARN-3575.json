[Sample error log from a MapReduce AM usign the 2.5 jars:
{noformat}
2015-05-04 21:29:09,852 FATAL [main] org.apache.hadoop.mapreduce.v2.app.MRAppMaster: Error starting MRAppMaster
java.lang.IllegalArgumentException: Invalid ContainerId: container_e10_1430340923112_5551_01_000001
	at org.apache.hadoop.yarn.api.records.ContainerId.fromString(ContainerId.java:189)
	at org.apache.hadoop.yarn.util.ConverterUtils.toContainerId(ConverterUtils.java:171)
	at org.apache.hadoop.mapreduce.v2.app.MRAppMaster.main(MRAppMaster.java:1400)
Caused by: java.lang.NumberFormatException: For input string: "e10"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:441)
	at java.lang.Long.parseLong(Long.java:483)
	at org.apache.hadoop.yarn.api.records.ContainerId.toApplicationAttemptId(ContainerId.java:196)
	at org.apache.hadoop.yarn.api.records.ContainerId.fromString(ContainerId.java:179)
	... 2 more
2015-05-04 21:29:09,870 INFO [main] org.apache.hadoop.util.ExitUtil: Exiting with status 1
{noformat}, Can we support the binary compatibility?
The API of 2.5 does not support the parsing of epoch character, may be its because that time the container id was not containing the epoch character. 

As per my understanding the binaries should be same across the cluster and client. , The only way to support compatibility would be to remove the epoch number field from the container ID, but I doubt that's going to happen at this point.  I filed this mostly to document the fact that an incompatibility exists.  Most likely we'll have to recommend that users do _not_ perform a restart of the RM where it tries to recover (and therefore starts using an epoch number in container IDs) as long as applications are running on the grid using YARN client jars version 2.5 or earlier.  RM restart with recovery would only be supported as long as all applications are using YARN jars >= 2.6., Dropping 2.6.1-candiate label, 2.6.1 is out now. Targetting 2.6.2 / 2.7.2., Targeting 2.6.3 now that 2.6.2 has shipped., Agreed. I requested that this be filed largely for documentation concerns.

There is one simple way sites can avoid this _incompatibility_: Do not use RM-recovery on a 2.6+ cluster while you still have applications running versions < 2.6. Once all apps are upgraded to 2.6+, you can enable RM-recovery and perform work-preserving RM restarts and rolling upgrades.

Closing this for now as won't fix. Please reopen if you disagree. Thanks.]