[If the continer expiry happens before app master is launched/failed to launch at nodemanager ( because of ipc connection retry time is greater then container expiry interval ) , then rm app attempt is transitioned to FAILED state. At rm app attempt FAILED state, LAUNCHED or LAUNCH_FAILED events are not defined which intern causes InvalidStateTransitonException., Attached the patch to fix this issue. Please review this., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12593496/YARN-933.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/1544//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/1544//console

This message is automatically generated., [~rohithsharma] - Sorry, patch has gone stale. Mind re-basing? Thanks!, Sure, I will recheck the code for existence of problem and update the patch., I do not see any possibility of *Invalid event: LAUNCH_FAILED at FAILED* in trunk version. But I see potential problem of *Invalid event: LAUNCHED at FINAL_SAVING* or *Invalid event: LAUNCH_FAILED at FINAL_SAVING* when launched/launch_failed event are triggered after transition ALLOCATED---kill event--->FINAL_SAVING., Attached the patch for fixing the issue. Kindly review the updated patch.

Fix is Ignore the launched/launch_failed events at final_saving., [~jianhe] Could you have look at this issue please?
The issue reported in descriiption flow has been changed and which . But since there is potential issue at final_saving state. I have attached patch to this jira insted of creating new jira. Is it fine ?
And HadoopQA does not run since yesterday night. I am not sure is there was any problem?, sure, mind editing the title to reflect the problem ?
nit: {{// verify for both launched and launch_failed transitions in failed}}, the comment should say in "killed" state., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12697353/0001-YARN-933.patch
  against trunk revision 1382ae5.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/6552//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/6552//console

This message is automatically generated., Updated title as per problem. 
Attached the patch fixing review comment, kindly review the updated patch., the variable {{Container amContainer = allocateApplicationAttempt();}} is not used. 
just updating the patch myself, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12697404/0001-YARN-933.patch
  against trunk revision fcad031.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/6555//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/6555//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12697566/YARN-933.3.patch
  against trunk revision aab459c.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 13 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core:

                  org.apache.hadoop.mapreduce.lib.input.TestLineRecordReader
                  org.apache.hadoop.mapred.TestLineRecordReader

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/6560//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-YARN-Build/6560//artifact/patchprocess/newPatchFindbugsWarningshadoop-mapreduce-client-core.html
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/6560//console

This message is automatically generated., You should not ignore RMAppAttemptEventType.LAUNCHED? We will have to explicitly kill the AppAttempt and the AM in this case, right?, bq. You should not ignore RMAppAttemptEventType.LAUNCHED? We will have to explicitly kill the AppAttempt and the AM in this case
The AM here is being killed. Allocated state gets the kill event and kill the AM(send the clean up event to the AM launcher) and then moves to the final_saving state.  , thanks [~jianhe] for updating changed patch:-) Just to be flow consistency in test for RMAppAttemptImpl state i.e new->submitted->scheduled->allocated_saving->allocated--kill event-> final_saving->killed I'd like to add {{allocateApplicationAttempt()}}. 
Updated the patch for doing verification at killed state., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12697671/0004-YARN-933.patch
  against trunk revision b73956f.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/6573//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/6573//console

This message is automatically generated., [~jianhe] kindly review the updated patch., lgtm, +1, Committed to trunk and branch-2.  thanks Rohith !, FAILURE: Integrated in Hadoop-trunk-Commit #7158 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7158/])
YARN-933. Fixed InvalidStateTransitonException at FINAL_SAVING state in RMApp. Contributed by Rohith Sharmaks (jianhe: rev c0d9b93953767608dfe429ddb9bd4c1c3bd3debf)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/TestRMAppAttemptTransitions.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #110 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/110/])
YARN-933. Fixed InvalidStateTransitonException at FINAL_SAVING state in RMApp. Contributed by Rohith Sharmaks (jianhe: rev c0d9b93953767608dfe429ddb9bd4c1c3bd3debf)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/TestRMAppAttemptTransitions.java
* hadoop-yarn-project/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Yarn-trunk #844 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/844/])
YARN-933. Fixed InvalidStateTransitonException at FINAL_SAVING state in RMApp. Contributed by Rohith Sharmaks (jianhe: rev c0d9b93953767608dfe429ddb9bd4c1c3bd3debf)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/TestRMAppAttemptTransitions.java
* hadoop-yarn-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2042 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2042/])
YARN-933. Fixed InvalidStateTransitonException at FINAL_SAVING state in RMApp. Contributed by Rohith Sharmaks (jianhe: rev c0d9b93953767608dfe429ddb9bd4c1c3bd3debf)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/TestRMAppAttemptTransitions.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java
* hadoop-yarn-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #101 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/101/])
YARN-933. Fixed InvalidStateTransitonException at FINAL_SAVING state in RMApp. Contributed by Rohith Sharmaks (jianhe: rev c0d9b93953767608dfe429ddb9bd4c1c3bd3debf)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/TestRMAppAttemptTransitions.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #111 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/111/])
YARN-933. Fixed InvalidStateTransitonException at FINAL_SAVING state in RMApp. Contributed by Rohith Sharmaks (jianhe: rev c0d9b93953767608dfe429ddb9bd4c1c3bd3debf)
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/TestRMAppAttemptTransitions.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2061 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2061/])
YARN-933. Fixed InvalidStateTransitonException at FINAL_SAVING state in RMApp. Contributed by Rohith Sharmaks (jianhe: rev c0d9b93953767608dfe429ddb9bd4c1c3bd3debf)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/TestRMAppAttemptTransitions.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java
]