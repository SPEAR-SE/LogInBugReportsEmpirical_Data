[Pasting test-case failure message
{quote}
Running org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.TestFairScheduler
Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 180.775 sec <<< FAILURE! - in org.apache.hadoop.yarn.server.resour
tFairScheduler
testContinuousScheduling(org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.TestFairScheduler)  Time elapsed: 180.495 se
java.lang.AssertionError: expected:<2> but was:<1>
        at org.junit.Assert.fail(Assert.java:88)
        at org.junit.Assert.failNotEquals(Assert.java:743)
        at org.junit.Assert.assertEquals(Assert.java:118)
        at org.junit.Assert.assertEquals(Assert.java:555)
        at org.junit.Assert.assertEquals(Assert.java:542)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.TestFairScheduler.testContinuousScheduling(TestFairSchedul


Results :

Failed tests:
  TestFairScheduler.testContinuousScheduling:2758 expected:<2> but was:<1>
{quote}, Thanks for the catch, [~rdsr]. 
For the node perference, scheduler always tries to assign new container to the node with the most available resource, YARN-1290.
I also replayed the test failure locally. I think it may due to the node.availableResource's update. I'll check out it. , Thanks for the help Wei. I think I might have found the reason for this failure.  Notice that the test-case TestFairScheduler.testLoadConfigurationOnInitialize() first starts up the continuousScheduling thread (under FairScheduler object). When the execution flow reaches the test-case TestFairScheduler.testContinuousScheduling, even though we create a new FairScheduler object, the old thread (continuousScheduling) is still live, and now, there are now two live continuousScheduling threads trying to assign containers to nodes. 

The problem does not seem to occur when I properly stop each thread before starting another execution of this test-case., Yes, that makes sense. We can only use the old scheduler, instead of creating a new one inside the testContinuousScheduling. Cannot remember why I created a new fairscheduler why I wrote the test case., Look the code again. I remembered why I created a new FS, as the old one doesn't have continuous scheduling enabled. Yes, the problem is the testLoadConfigurationOnInitialize(). We need to do the fairscheduler.stop() before we shut down the test. Otherwise, the update thread and continuousScheduling thread are still running. I'll update with a patch later., Wei,  while analyzing this failure, I stumbled upon another potential problem.
The method SchedulerApplication.getCurrentConsumption() is not synchronized, this may lead to visibility (staleness) problems, Wei, calling fairscheduler.stop() will not stop the threads. It seems that the threads "continuousScheduling thread" and "update thread" are not handling interrupt properly. Though we are doing [schedulingthread | updateThread].interrupt(), we do need to keep checking the interrupt flag in the while loop of these threads., Wei, since I already have a patch for this on my 2.3 hadoop branch (for my internal org). I'm also submitting it here. Please have a look to see if it is fine by you., Thanks, [~rdsr]. I'll take a look later., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12654298/YARN-2252-1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/4217//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/4217//console

This message is automatically generated., [~rdsr], sorry for later reply. the patch looks good to me., Thanks Wei!, The fix is specific to testContinuousScheduling. I propose fixing all the tests under TestFairScheduler, by using the same global field {{scheduler}} in all the tests even when the test method initializes a new instance of the scheduler. The teardown method should also stop {{resourceManager}} if not null. 

We should follow up this work with (1) re-using the scheduler instance within {{resourceManager}} and (2) moving out tests with different FS configurations to different files. , {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12654298/YARN-2252-1.patch
  against trunk revision 9e35571.

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-YARN-Build/5055//console

This message is automatically generated., +1 for the proposal, [~kasha]., Here is a patch that modifies Ratandeep's patch. , {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12670318/yarn-2252-2.patch
  against trunk revision c50fc92.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The following test timeouts occurred in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:

org.apache.hadoop.yarn.server.resourcemanager.applicationsmanager.TestAMRestart
org.apache.hadoop.yarn.server.resourcemanager.security.TestRMDelegationTokens
org.apache.hadoop.yarn.server.resourcemanager.TestRMRestart
org.apache.hadoop.yarn.server.resourcemanager.TestWorkPreservingRMRestart
org.apache.hadoop.yarn.server.resourcemanager.TestSubmitApplicationWithRMHA
org.apache.hadoop.yarn.server.resourcemanager.recovery.TestZKRMStateStore
org.apache.hadoop.yarn.server.resourcemanager.TestKillApplicationWithRMHA
org.apache.hadoop.yarn.server.resourcemanager.TestApplicationCleanup
org.apache.hadoop.yarn.server.resourcemanager.TestContainerResourceUsage

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/5066//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/5066//console

This message is automatically generated., The patch touches only TestFairScheduler, and couldn't have caused all these test failures. , Patch looks good to me., +1, Thanks Ratandeep for reporting and posting a fix, and Sandy for the review. Just committed this to trunk and branch-2. , FAILURE: Integrated in Hadoop-Yarn-trunk #689 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/689/])
YARN-2252. Intermittent failure of TestFairScheduler.testContinuousScheduling. (Ratandeep Ratti and kasha via kasha) (kasha: rev f5578207d2d20aa71adf12aa9f6c37b00ee9b8dc)
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/TestFairScheduler.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1905 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1905/])
YARN-2252. Intermittent failure of TestFairScheduler.testContinuousScheduling. (Ratandeep Ratti and kasha via kasha) (kasha: rev f5578207d2d20aa71adf12aa9f6c37b00ee9b8dc)
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/TestFairScheduler.java
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1880 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1880/])
YARN-2252. Intermittent failure of TestFairScheduler.testContinuousScheduling. (Ratandeep Ratti and kasha via kasha) (kasha: rev f5578207d2d20aa71adf12aa9f6c37b00ee9b8dc)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/TestFairScheduler.java
* hadoop-yarn-project/CHANGES.txt
, Hi, this test failure is found on trunk - you can find it [here|https://issues.apache.org/jira/browse/YARN-2312?focusedCommentId=14161902&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14161902]. Log is as follows:

{code}
Tests run: 79, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 8.698 sec <<< FAILURE! - in org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.TestFairScheduler
testContinuousScheduling(org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.TestFairScheduler)  Time elapsed: 0.582 sec  <<< FAILURE!
java.lang.AssertionError: expected:<2> but was:<1>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:743)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.junit.Assert.assertEquals(Assert.java:555)
	at org.junit.Assert.assertEquals(Assert.java:542)
	at org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.TestFairScheduler.testContinuousScheduling(TestFairScheduler.java:3372)
{code}

Can I reopen this problem?, [~ozawa] - I have also noticed the failure occasionally, poked around a little but didn't see the root cause. We could reopen this JIRA or open another one: the earlier patch is already committed to branch-2.6. , [~ozawa], [~kasha], I'll look into this issue., [~kkambatl] [~ywskycn] Thank you, opened YARN-2666 to address the problem.]