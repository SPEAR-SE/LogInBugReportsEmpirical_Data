[Technically this isn't a blocker, and can be added as a new API in a compatible manner. But I'd like to avoid having multiple APIs as we still have a chance of getting this into 2.1.0. Thoughts?, [~vinodkv], what is exactly the use case for this? most of the time I would expect that newly avail container allocations for an AM, in a heartbeat, are scattered through out the cluster with seldom overlaps on the same node. Wondering how often you are seeing this overlap (and how many containers) to justify a multiple containers support. Also, the current response is 'void', just an ACK, what would be the response for multiple containers. BTW, I'm not opposed, just wondering if we really need it.

Finally, if this ends up being the last standing blocker, we should not block the release because of it., bq. most of the time I would expect that newly avail container allocations for an AM, in a heartbeat, are scattered through out the cluster with seldom overlaps on the same node.
That is very application specific. I am looking at MR which is as of now the biggest app where in for all medium to large jobs, we are creating per-container threads inside the AM to launch them. Having a bulk API simplifies the threading in AM and at the same time helps us to launch containers faster.

bq. Also, the current response is 'void', just an ACK, what would be the response for multiple containers.
We do have an empty response object in the protocol, it will become a list. Similarly the client library needs to be modified - may be we can have both single container and multi-container APIs in the clients.

bq. Finally, if this ends up being the last standing blocker, we should not block the release because of it.
There are a couple of blockers that are PA and that need some review love. Won't block release for this. I'll ask others' help to move this forward in any case.

BTW, I've always wanted to do this, but the freeze for APIs is what triggered me to file the ticket now. , +1 let's get this asap if possible - I'd rather not have multiple apis., bq. may be we can have both single container and multi-container APIs in the clients.

I'd rather we don't do this. It's just more stuff to maintain... , bq. Similarly the client library needs to be modified - may be we can have both single container and multi-container APIs in the clients.

In NMClientAsync, it will be interesting to see whether it is good to gather a number of single container starting requests, combine them, and send a batch request.

Another question, should stopContainer take the request of multiple containers as well?, 
bq.  should stopContainer take the request of multiple containers as well
yes, we'll do this for startContainer/stopContainer/getContainerStatus.

After offline discussion with Vinod, Omkar, Bikas, Hitesh, we come up with the following new record structures  

StartContainersRequest:
- a list of StartContainerRequest

StartContainersResponse:
- a list of servicesMetaData
- a list of ContainerIds for succeeded requests
- a list of ContainerId to Exception Map for failed requests

StopContainersRequest:
- a list of containerIds to be stopped

StopContainersResponse:
- a list of ContainerIds for succeeded requests
- a list of ContainerId to Exception Map for failed requests

GetContainerStatusesRequest:
- a list of containerIds to be queried

GetContainerStatusesResponse:
- a list of ContainerId to ContainerStatus Map for succeeded requests
- a list of ContainerId to Exception Map for failed requests
, Upload a patch:
1. Add 3 bulk api to ContainerManagementProtol startContainers/stopContainers/getContainerStatuses, and correspondingly its records

2. Moved SerializedException to yarn.api.records and correspondingly its PB to yarn.api.records.pb.impl, does this seem a right place ?

3. added test cases for the bulk apis
will test on real cluster, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12593263/YARN-926.1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 14 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 3 warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 7 new Findbugs (version 1.3.9) warnings.

        {color:red}-1 release audit{color}.  The applied patch generated 1 release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/1535//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-YARN-Build/1535//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-YARN-Build/1535//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-yarn-api.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-YARN-Build/1535//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-yarn-common.html
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/1535//console

This message is automatically generated., New patch fixed the warnings, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12593284/YARN-926.2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 14 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 3 new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/1536//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-YARN-Build/1536//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-yarn-api.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-YARN-Build/1536//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-yarn-common.html
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/1536//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12593297/YARN-926.3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 14 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/1538//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-YARN-Build/1538//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-yarn-api.html
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/1538//console

This message is automatically generated., the findbug -1 is reporting SerializedException is not derived from Exception, although named ending with 'Exception', which is not an issue , The new names look fine. Can you remove the single-container APIs from the protocol?

In ContainerManager, any IOException happening for any single container should only affect that container only - similar to how you are handing YarnException.

SerializedException should take in a Throwable. Also once you do this, knock off YarnServerBuilderUtils.newSerializedException().

Still to review PBImpls., bq. The new names look fine. Can you remove the single-container APIs from the protocol?

The single-container APIs should be removed, but they may not be removed in this patch. Otherwise, all the callers of them need to be modified, making the patch even bigger. How about filing a follow-up ticket to deal with it?, bq. Otherwise, all the callers of them need to be modified, making the patch even bigger. How about filing a follow-up ticket to deal with it?
it will be a large but straightforward patch, we can do that in one ticket., Uploaded a patch.
Removed the old single container API, changed the callers to use the new API

Added a new deserialize method in SerializedException and a test case for that., New patch with a minor fix, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12593763/YARN-926.5.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 26 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 17 warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 3 new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-tests:

                  org.apache.hadoop.yarn.client.api.impl.TestNMClient
                  org.apache.hadoop.yarn.server.TestContainerManagerSecurity

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/1551//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-YARN-Build/1551//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-yarn-api.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-YARN-Build/1551//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-yarn-common.html
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/1551//console

This message is automatically generated., fixed the warnings, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12593789/YARN-926.6.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 26 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-tests:

                  org.apache.hadoop.yarn.client.api.impl.TestNMClient

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/1553//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-YARN-Build/1553//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-yarn-api.html
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/1553//console

This message is automatically generated., Hopefully final set of comments, mostly looks good
 - ContainerManagerImpl.stopContainerInternal() doesn't need to throw IOException at all.
 - Same with getContainerStatusInternal().
 - SerializedException.deSerialize() can be simplified a little by just obtaining the class-name first and then instantiating.
 - parseAndThrowException can be refactored into say SerializedException?

We can add multi-container APIs in NMClient too. May be in a follow up ticket.

The trace from SerializedException isn't set up, fix in a follow up ticket?, Oh and please also suppress the findBugs warning., The test passes for me on local machine, not sure why Jenkins is miscomplaining., The test passes for me locally also.

Fixed the comments.

bq.We can add multi-container APIs in NMClient too. May be in a follow up ticket.
bq.The trace from SerializedException isn't set up, fix in a follow up ticket?
do in a followup ticket, uploaded a new one, missed adding the find bug-exclude file, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12593820/YARN-926.7.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 26 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-tests:

                  org.apache.hadoop.yarn.client.api.impl.TestNMClient

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/1559//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-YARN-Build/1559//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-yarn-api.html
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/1559//console

This message is automatically generated., bq. The test passes for me on local machine, not sure why Jenkins is miscomplaining.

1. TestNMClient failure is unrelated here.
2. Thread scheduling on jenkins may be different from that on our local machine. I was able to reproduce the problem after I added Thread.sleep(10000) in ContainerLaunch.call(). Still working on it. See YARN-906., Uploaded a new patch fixing the find bug -1., also tested on real cluster, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12593827/YARN-926.8.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 26 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-tests:

                  org.apache.hadoop.yarn.client.api.impl.TestNMClient

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/1561//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/1561//console

This message is automatically generated., Looks good, checking this in., Committed this to trunk, branch-2 and branch-2.1. Thanks Jian!

Let's watch out for any issues coming out of this and respond asap. This one's going in a little too late in the game, so.., Team, I'm getting errors building trunk today and I believe they are related to the changes on this JIRA

A snapshot is below:
[ERROR] COMPILATION ERROR :
[INFO] -------------------------------------------------------------
[ERROR] /home/anonymous/SOURCE_CODE/local_repo/bare_repo/hadoop/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/impl/pb/service/ContainerManagementProtocolPBServiceImpl.java:[55,2] error: method does not override or implement a method from a supertype
[ERROR] /home/anonymous/SOURCE_CODE/local_repo/bare_repo/hadoop/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/impl/pb/service/ContainerManagementProtocolPBServiceImpl.java:[69,2] error: method does not override or implement a method from a supertype
[ERROR] /home/anonymous/SOURCE_CODE/local_repo/bare_repo/hadoop/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/impl/pb/service/ContainerManagementProtocolPBServiceImpl.java:[83,2] error: method does not override or implement a method from a supertype
[ERROR] /home/anonymous/SOURCE_CODE/local_repo/bare_repo/hadoop/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/StartContainersResponsePBImpl.java:[107,21] error: cannot access ApplicationAccessTypeProto
[ERROR]   class file for ApplicationAccessTypeProto not found
/home/anonymous/SOURCE_CODE/local_repo/bare_repo/hadoop/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/StartContainersResponsePBImpl.java:[115,11] error: cannot access ContainerIdProto
[ERROR]   class file for ContainerIdProto not found
/home/anonymous/SOURCE_CODE/local_repo/bare_repo/hadoop/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/StartContainersResponsePBImpl.java:[119,43] error: incompatible types
[ERROR]   requir...

Regards


, I just built it again, it passed. How are you compiling the code? mvn clean install usually is the correct way to compile., I also tried, it should work. can you do mvn clean, Team, you are right, a 'mvn clean install' is working as expected. Apologies for the false alarm.

I'll keep looking at the issue at my  local setup, I have  been generating  'package's for tests in my cluster with commands like  'package -Pdist,native,docs,src -DskipTests -Dtar' without problems for a while. Regards
]