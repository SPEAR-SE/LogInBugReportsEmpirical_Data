[{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12648941/YARN-2134.diff
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-YARN-Build/3939//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12648952/YARN-2134.diff
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-YARN-Build/3940//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12648977/YARN-2134.diff
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 2 warning messages.
        See https://builds.apache.org/job/PreCommit-YARN-Build/3941//artifact/trunk/patchprocess/diffJavadocWarnings.txt for details.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/3941//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/3941//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12649338/YARN-2134-v2.diff
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:

                  org.apache.hadoop.yarn.server.resourcemanager.TestSubmitApplicationWithRMHA

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/3942//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/3942//console

This message is automatically generated., Hi [~octo47],
In your patch,there seems to be two properties you want to inherit from parent - minSharePreemptionTimeout and scheduling policy.
Inheriting minSharePreemptionTimeout from a parent into an unconfigured queue wouldn't cause preemption to happen
at the unconfigured queue since minResources is not set in it(its 0 mem,0 cpu if its not set).
May I know what is the use case you are thinking about ? , This is a first of two patches for deep hierarchical queues. For example in day or two I'll prepare patch which fixes situation with deep min share.
Code from test case, with current implementation of the scheduler queues will get fair share between queues {bit, sub1 and sub2} and will not take in account min share specified for sub1.sub11. 
I wan't to propogate min share for FSParentQueue from deeper levels. And in that case specified properties should work.
{code}
PrintWriter out = new PrintWriter(new FileWriter(ALLOC_FILE));
    out.println("<?xml version=\"1.0\"?>");
    out.println("<allocations>");
    out.println("<queue name=\"queue1\">");
    out.println("  <maxResources>10240mb, 10vcores</maxResources>");
    out.println("  <queue name=\"big\"/>");
    out.println("  <queue name=\"sub1\">");
    out.println("    <schedulingPolicy>fair</schedulingPolicy>");
    out.println("    <queue name=\"sub11\">");
    out.println("      <minResources>6192mb, 6vcores</minResources>");
    out.println("    </queue>");
    out.println("  </queue>");
    out.println("  <queue name=\"sub2\">");
    out.println("  </queue>");
    out.println("</queue>");
    out.println("</allocations>");
    out.close();
{code}, implemented as a part of https://issues.apache.org/jira/browse/YARN-2151]