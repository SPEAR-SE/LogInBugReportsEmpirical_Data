[It makes sense to me that an app is always needy when its demand is less than min share. [~templedf], can you elaborate your concern?, My concern is that if I have two apps that are both under min share, we will prefer the app that has used fewer of the resources assigned to it.  For example, assume min share is 16GB.  Assume app1 has requested 10GB and used 4GB.  app2 has also requested 5GB and used 4GB.

{code}
resourceUsage1 = 4
resourceUsage2 = 4
minShare1 = 10
minShare2 = 5
s1Needy = true
s2Needy = true
minshareRatio1 = 0.4
minshareRatio2 = 0.8
{code}

We will therefore return {{0.4 - 0.8}}, which is negative, meaning that we prefer app1 to app2.  Unless I'm misunderstanding something., Hmmm...  Thinking about it a little further, I'm not sure it actually matters that much which one we prefer.  They're both under the min share, so scheduling either one is fine...  Maybe?, In the case, assigning resource to the one with fewer usage seems reasonable, and the min share ratio can guarantee that if both demands are under min share. I've thought about another case, one demand is less than min share and the other is greater. Assume the min share is 10G.
{code}
demand1 = 5
demand2 = 12
resourceUsage1 = 4
resourceUsage2 = 7
minShare1 = 5
minShare2 = 10 
s1Needy = true (4 < 5)
s2Needy = true (7 < 10)
minshareRatio1 = 0.8
minshareRatio2 = 0.7
{code}
We prefer app2 since minshareRatio2 < minshareRatio2, but if we don't do {{min(demand, minShare)}}, then minshareRatios will be:
{code}
minshareRatio1 = 4/10 = 0.4 
minshareRatio2 = 7/10 = 0.7
{code}
Seems like we could prefer app1., In FSAppAttempt, getMinShare return Resources.none(). So demand couldn't be less than min share on app level. ]