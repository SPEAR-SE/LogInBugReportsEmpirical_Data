[The API has supports two params, state and healthy.  However, UNHEALTHY is a possible node state.  I propose removing the healthy param, allowing the state param to include multiple states, and if it is not specified, filtering by the NEW, RUNNING, and UNHEALTHY states.  This ensures that what's returned is the same as what's returned by the Java client., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12582524/YARN-642.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/904//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/904//console

This message is automatically generated., The param name should be 'states'. If not specified it should 'filter' using the same states the java API returns. We should also support '*' or 'all' as states value to indicate no filtering., Attaching a new patch that makes those changes, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12582560/YARN-642-1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/906//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/906//console

This message is automatically generated., The implementation isn't beautiful as I commented on MAPREDUCE-3760, so thanks for taking this up.

A general suggestion: Please add a little more information to the title than it is.

Please fix the title.

I don't see a point of multiple comma separated states, the default result when no state is passed should return all active nodes. When a state is passed, only those nodes should be removed.

Even so, as multiple people requested on MAPREDUCE-3760, the default active list should only have active nodes and no unhealthy nodes.

Please also fix the web-UI when you do this.

It'll be great if you can refactor code to be same in the UI and web-services, but please push it out if feel so., bq. A general suggestion: Please add a little more information to the title than it is.
Understood

bq. Even so, as multiple people requested on MAPREDUCE-3760, the default active list should only have active nodes and no unhealthy nodes.
The Java/RPC API (ClientRMProtocol#getClusterNodes) returns the list of all active nodes, which includes unhealthy nodes.  It seems confusing to me to have them return different things.  Thoughts?

bq. I don't see a point of multiple comma separated states, the default result when no state is passed should return all active nodes. When a state is passed, only those nodes should be removed.
My thought was that being able to specify multiple comma separated states makes it possible to get a consistent view of the cluster.  If users need to make calls serially to get nodes in different states, they might miss some nodes that change state.  With Tucu's suggestion of an "all" option, though, maybe this isn't necessary, so I can take it out.
, bq. With Tucu's suggestion of an "all" option, though, maybe this isn't necessary, so I can take it out.
Yes, we should just do this.

bq. The Java/RPC API (ClientRMProtocol#getClusterNodes) returns the list of all active nodes, which includes unhealthy nodes. It seems confusing to me to have them return different things. Thoughts?
Good point. I can rationalize what others said on MAPREDUCE-3760. When one goes to the default nodes UI, you are used to seeing active/good nodes since Hadoop-1. I think what we should do is
 - by default show only active nodes
 - if given a state, show the corresponding nodes
 - and a special "all" to show all nodes
Thoughs?

And clearly, we need to fix the RPC impl to accomodate the above, accepting states etc. Can you file a separate ticket for that?, [~vinodkv], your proposal sounds good to me.  Uploading a patch that implements it. , {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12583043/YARN-642-2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:

                  org.apache.hadoop.yarn.server.resourcemanager.webapp.TestRMWebServicesNodes

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/921//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/921//console

This message is automatically generated., Latest patch should fix failing test, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12583185/YARN-642-2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/926//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/926//console

This message is automatically generated., [~vinodkv], is the latest patch satisfactory to you?  Just verified that it still applies cleanly to trunk., +1, bq. Vinod Kumar Vavilapalli, is the latest patch satisfactory to you? Just verified that it still applies cleanly to trunk.
Will look at it by EOD today.., [~vinodkv], do you still want to look at this?, Looking at it now.., Mostly looks good. The conditional logic is complex but AFAIU you got it as clear as possible.

One minor thing: In TestRMWebServicesNodes, testNodesQueryRunning and testNodesQueryState are duplicates. You should perhaps change the later to query nodes in new state and appropriately change the name.

Regarding my earlier comment about RPCs etc, you should file a ticket ASAP as this is a potential API change. Tx., Thanks for taking a look Vinod.  I'll upload a a patch that fixes the tests.

Regarding the RPCs, I think we might only need to change the semantics of getClusterNodes and not the APIs/protocols.  Either way, I filed YARN-791 and I'll post results after investigating there., Not just semantics. Once we start returning only active nodes, we'll need to add the filter API or just modify getClusterNodes or GetClusterNodesRequest to take in targetState., OK, that makes sense to me about the APIs.

Uploaded a patch that fixes the tests., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12586825/YARN-642-3.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-YARN-Build/1166//console

This message is automatically generated., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12586833/YARN-642-4.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/1168//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/1168//console

This message is automatically generated., +1. Checking this in., Committed this to trunk, branch-2 and branch-2.1. Thanks Sandy!

Committed this branch-2.1 as this is going to be incompatible with alpha releases. Marked incompatible too for users of alpha releases., Integrated in Hadoop-trunk-Commit #3885 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/3885/])
    YARN-642. Removed health parameter from ResourceManager /nodes web-service and cleaned the behaviour of the status parameter. Contributed by Sandy Ryza. (Revision 1490890)

     Result = SUCCESS
vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1490890
Files : 
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/TestRMWebServicesNodes.java
]