[Let --shell_args accept multiple arguments separated by empty space, [~xgong] can you please give an example of command to run multiple arguments? Ideally each argument should allow spaces in between also.

As an example, similar to shell command, we can do:
cp "my file  1.txt" "my file  2.txt"
This can be complex by allowing \" inside each argument in addition to having spaces.
cp "my\"file  1.txt" "my\"file  2.txt", [~tassapola]

we can do --shell_command echo --shell_args a b c

The (a b c) will be treated as three different arguments

, Can each argument be complex as I describe above? It is matching regular shell behavior., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12608831/YARN-1314.1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell:

                  org.apache.hadoop.yarn.applications.distributedshell.TestDistributedShell

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/2194//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/2194//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12608843/YARN-1314.1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell:

                  org.apache.hadoop.yarn.applications.distributedshell.TestDistributedShell

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/2199//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/2199//console

This message is automatically generated., bq.Can each argument be complex as I describe above? It is matching regular shell behavior.
I think so.

Try this command :
{code}
--shell_command echo --shell_args YARN HADOOP "'\\\"\\\$MYARG\\\"'" -shell_env "MYARG=myval"
{code}

We can get the expect output. As long as we give the valid argument, it will give the expected output. , Looking good. Thanks for the patch!, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12608881/YARN-1314.2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/2200//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/2200//console

This message is automatically generated., Thanks [~xgong] latest patch looks good to me. Can you please comment on how you tested this manually? , I am using "--shell_command echo --shell_args HADOOP YARN MAPREDUCE HDFS" to do the test
Before applied the patch :
The shell script for launching the container will be something like :
{code}
exec /bin/bash -c "echo HADOOP 1>/Users/xuan/dep/hadoop-3.0.0-SNAPSHOT/logs/application_1382474044210_0001/container_1382474044210_0001_01_000002/stdout 2>/Users/xuan/dep/hadoop-3.0.0-SNAPSHOT/logs/application_1382474044210_0001/container_1382474044210_0001_01_000002/stderr "
{code}
And the output will only show "HADOOP"

After I applied the patch.
The shell script for launching the container will be something like this:
{code}
exec /bin/bash -c "echo HADOOP YARN MAPREDUCE HDFS  1>/Users/xuan/dep/hadoop-3.0.0-SNAPSHOT/logs/application_1382474749963_0001/container_1382474749963_0001_01_000002/stdout 2>/Users/xuan/dep/hadoop-3.0.0-SNAPSHOT/logs/application_1382474749963_0001/container_1382474749963_0001_01_000002/stderr "
{code}
Then the output will show "HADOOP YARN MAPREDUCE HDFS" as we expected
, 1.Using the same approach as YARN-1303. Basically,  create a file that will save all the client's input args(from --shell_args). The AM will read all the args, and add them into CLC. We try to let all containers run the exactly the same args that client gives, and let clients to figure out when and where to do the correct escaping staff.
2. Did a little code formatting, since we are using lots of duplicate codes, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12615225/YARN-1314.3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell:

                  org.apache.hadoop.yarn.applications.distributedshell.TestDistributedShell

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/2512//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/2512//console

This message is automatically generated., fix test case failure, Increasing the --num_container numbers to let test case find the correct log folder, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12615234/YARN-1314.5.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/2513//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/2513//console

This message is automatically generated., Did test on single node cluster:
Using
--shell_command echo --shell_args HADOOP YARN MAPREDUCE

In launch_container.sh ,
{code}
exec /bin/bash -c "echo HADOOP YARN MAPREDUCE 1>/Users/xuan/dep/hadoop-3.0.0-SNAPSHOT/logs/application_1385060881865_0015/container_1385060881865_0015_01_000002/stdout 2>/Users/xuan/dep/hadoop-3.0.0-SNAPSHOT/logs/application_1385060881865_0015/container_1385060881865_0015_01_000002/stderr "
{code}

In container stdout log:
it shows 
{code}
HADOOP YARN MAPREDUCE
{code}
as expected, +1, looks good. Checked this into trunk and branch-2. Thanks Xuan!, SUCCESS: Integrated in Hadoop-trunk-Commit #4793 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/4793/])
YARN-1314. Fixed DistributedShell to not fail with multiple arguments for a shell command separated by spaces. Contributed by Xuan Gong. (vinodkv: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1545486)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/Client.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/test/java/org/apache/hadoop/yarn/applications/distributedshell/TestDistributedShell.java
, FAILURE: Integrated in Hadoop-Yarn-trunk #403 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/403/])
YARN-1314. Fixed DistributedShell to not fail with multiple arguments for a shell command separated by spaces. Contributed by Xuan Gong. (vinodkv: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1545486)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/Client.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/test/java/org/apache/hadoop/yarn/applications/distributedshell/TestDistributedShell.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1594 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1594/])
YARN-1314. Fixed DistributedShell to not fail with multiple arguments for a shell command separated by spaces. Contributed by Xuan Gong. (vinodkv: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1545486)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/Client.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/test/java/org/apache/hadoop/yarn/applications/distributedshell/TestDistributedShell.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1620 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1620/])
YARN-1314. Fixed DistributedShell to not fail with multiple arguments for a shell command separated by spaces. Contributed by Xuan Gong. (vinodkv: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1545486)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/Client.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/test/java/org/apache/hadoop/yarn/applications/distributedshell/TestDistributedShell.java
]