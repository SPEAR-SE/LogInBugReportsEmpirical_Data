[Thanks [~sidharta-s] reporting this issue.  

This happens when:

- A multiple nodes cluster (# >= 2)
- App1 takes almost of the cluster
- AM Request of app2 can be reserved but cannot get allocated
- If app2 get resource from a different node other than reserved node (IAW, reservation cancellation happens). App2 can get a container-id with number > 1.

From what I can see, there're two issues that container id could be skipped when works with reservation-continuous-looking:

*Issue#1, multiple containerId will be skipped*
In LeafQueue#assignContainer 
{code}
    // Create the container if necessary
    Container container = 
        getContainer(rmContainer, application, node, capability, priority);
{code}

Happens before successfully allocate or reserve container.

So if LeafQueue relaxed checks considered reserved resource, it is possible that unnecessary getContainer call happens.

This issue only exists in branch-2.7. Branch-2.8/branch-2/trunk will not create containerId unless it allocate or reserve new container.

*Issue#2, single container id will be skipped:*
This issue exists in both of branch-2.7 and branch-2.8+.

When one container (c1) is reserved at host1, and later it is cancelled to allocate another container (c2) at a different host, containerId of c1 will be skipped.

Uploading a demo test to reproduce this issue in branch-2.7:, CC: [~jlowe]/[~nroberts]]