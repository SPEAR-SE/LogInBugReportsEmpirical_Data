[Once we hit exception in RackResolver, since this is not caught or default rack is not returned, this is end up not releasing containers which could not be assigned in RMContainerAllocator.java

{noformat}

      assignContainers(allocatedContainers);
       
      // release container if we could not assign it 
      it = allocatedContainers.iterator();
      while (it.hasNext()) {
        Container allocated = it.next();
        LOG.info("Releasing unassigned and invalid container " 
            + allocated + ". RM may have assignment issues");
        containerNotAssigned(allocated);
      }
{noformat}

AM would no longer ask for new containers since it thinks containers are assigned and RM assumes containers are allocated to AM. Job ends up hanging forever without making any progress. Fixing releasing containers might be part of another JIRA, at the minimum we need to catch exception and return default rack incase of failure. , Simple patch to catch NPE and return default-rack. Since it is catch NPE did not try to come up with test case. Let me know if this look good., {code}
rNameList == null
{code}

Look into DNSToSwitchMapping doc, resolve() seems not to return null. Probably, you want to check
{code}
rNameList.size() == 0
{code}


Please add a test case in TestRackResolver., [~zjshen] Yes, documentation does not mention returning null for resolve(), but if you look into RawScriptBasedMapping::resolve(), failure to resolve rack can return null in atleast two places, hence the null check. Thanks for pointing out TestRackResolver, I will try to add a test case., Updated patch with testcase, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12596360/YARN-1032.2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/1660//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/1660//console

This message is automatically generated., Marking as critical. W/o this fix and when there is a problem with the rack resolver script, the MRAppMaster will simply hang. NPE make it somewhat tricky to find out what the root cause is., Patch looks good. Logging can be improved. Fixing it myself., Same patch with logging fix., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12605181/YARN-1032.3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/2022//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/2022//console

This message is automatically generated., +1 lgtm.

I just committed this. Thanks [~lohit]!, SUCCESS: Integrated in Hadoop-trunk-Commit #4548 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/4548/])
YARN-1032. Fixed NPE in RackResolver. Contributed by Lohit Vijayarenu. (acmurthy: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1529534)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/RackResolver.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/util/TestRackResolver.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk #354 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/354/])
YARN-1032. Fixed NPE in RackResolver. Contributed by Lohit Vijayarenu. (acmurthy: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1529534)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/RackResolver.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/util/TestRackResolver.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1544 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1544/])
YARN-1032. Fixed NPE in RackResolver. Contributed by Lohit Vijayarenu. (acmurthy: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1529534)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/RackResolver.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/util/TestRackResolver.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1570 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1570/])
YARN-1032. Fixed NPE in RackResolver. Contributed by Lohit Vijayarenu. (acmurthy: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1529534)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/RackResolver.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/util/TestRackResolver.java
, Closing old tickets that are already part of a release.]