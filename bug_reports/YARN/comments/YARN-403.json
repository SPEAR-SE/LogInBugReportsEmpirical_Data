[[~devaraj.k] Can you give some more information? RM / NM / application logs would have helped a lot.... are you able to reproduce this? any steps to reproduce? what I can see is that hash provided is not what shuffle service was expecting.. did it fail for all?, Sorry Omkar, I don't have logs for this now, I have faced it once during long runs when the load was high on the cluster. During that time the fetch request from the Reducer got failed due to this error.

We could wait for sometime If I get any further info I will update, or if any others face this they could also help to check this further. , Hash verification is one authentication process at Reducer/NM for Http request/response i.e fetching map output from NodeManager's. 

One specific scenario I have observed above exception is 
     bq. When app master is killed after map phase is completed. 2nd app master attempt start reducer phase which intern reducers request for fetching map output. 

In the above scenario, 
1. 1st attemp AM has SecretKey.This key has sent to Node Manager during start of container(Map Task). Node Manager stores in memory i.e *ShuffleHandler.secretManager* which will be removed only after application is finished. 

After Map Task is completed, app master is killed.

2. When 2nd attempt app master started, new SecretKey is generated. This Secretkey is sent along with startContainer request to NodeManager and Reducer JVM is started by NM. Fetcher at reducer encrypt request url using SecretKey and sends fetch request to Node Manager where Map Task has run (Old SecretKey is present). 
At NodeManager , hash verification is verified with old 1st attempt app master SecretKey. This verification fails since keys are different., This sounds like a duplicate of MAPREDUCE-5042 which was fixed in 2.1.0 and 0.23.7., yes..it is a duplicate..closing it.]