[Currently, if we want to run custom script at DS. We can do it like this :
--shell_command sh --shell_script custom_script.sh
, We could let DS either execute shell_commands option or shell_script option. 
The right DS commandline should be that we provide either --shell_command or --shell_script.
If we provide both options, we can throw out exception, and say something like  "Do not provide both options at the same time"., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12615872/YARN-1435.1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/2535//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/2535//console

This message is automatically generated., Why are you passing an extra resource now? Shouldn't be needed.

We also need to make sure that the shell used is cross-platform., If it runs in Windows Env, we will convert the shellscript to bat script, and use cmd /c to launch it, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12616845/YARN-1435.2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/2587//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/2587//console

This message is automatically generated., 1. Shall we make the variables static and capitalize the names? Maybe not specify the absolute path to bash, in case it is the other place (though it is a rare case)?
{code}
+  private final String linux_bash_command = "/bin/bash";
+  private final String windows_command = "cmd /c";
{code}

2. Maybe it's good to change the hardcoded variables bellow to static? And some others in Client.java?
{code}
  // Hardcoded path to shell script in launch container's local env
  private final String ExecShellStringPath = "ExecShellScript.sh";

  // Hardcoded path to custom log_properties
  private final String log4jPath = "log4j.properties";

  private final String shellCommandPath = "shellCommands";
  private final String shellArgsPath = "shellArgs";
{code}

3. You may want to comment why in windows, the output can not be assert line-by-line.
{code}
+            if (Shell.WINDOWS && !count
+                && output.getName().trim().equals("stdout")) {
+              Assert.assertTrue(stdOutContent.containsAll(expectedContent));
+            }
{code}

4. Can we use copyFromLocal as well for Windows?
{code}
+          ds = new DataInputStream(new FileInputStream(shellScriptPath));
+          byte[] command = new byte[ds.available()];
+          ds.readFully(command);
+          ostream = FileSystem
+              .create(fs, shellDst, new FsPermission((short) 0710));
+          ostream.write(command);
+        } finally {
+          IOUtils.closeQuietly(ds);
+          IOUtils.closeQuietly(ostream);
+        }
{code}, Is it safe to presume /bin/bash exist in any Linux machine?, Uploaded the wrong patch, YARN-1435.3.patch should be the right one, bq. 2. Maybe it's good to change the hardcoded variables bellow to static? And some others in Client.java?

Those variables will be used in App.java or Client.java only. I think it should be fine to define as final

bq. You may want to comment why in windows, the output can not be assert line-by-line.

Added

bq. Can we use copyFromLocal as well for Windows?

Tested and changed, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12617024/YARN-1435.3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/2598//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/2598//console

This message is automatically generated., bq. Those variables will be used in App.java or Client.java only. I think it should be fine to define as final

I mean maybe it's better to make these hard code variables static, because they are not altered in each instances of AM or Client. How do you think?

One other nit:

Is it better to simplify the following code
{code}
+      String shellPathSuffix = "";
+      if (Shell.WINDOWS) {
+        shellPathSuffix =
+            appName + "/" + appId.getId() + "/" + windowBatPath;
+      } else {
+        shellPathSuffix =
+            appName + "/" + appId.getId() + "/" + linuxShellPath;
+      }
{code}
to
{code}
+      String shellPathSuffix =  appName + "/" + appId.getId() + "/" + (Shell.WINDOWS ? windowBatPath : linuxShellPath);
{code}, Address all the latest comments, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12617977/YARN-1435.4.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/2639//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/2639//console

This message is automatically generated., +1 LGTM, Not sure about the Windows stuff, but looks fine to me otherwise. +1., Checked this into trunk and branch-2. Thanks Xuan!, SUCCESS: Integrated in Hadoop-trunk-Commit #4882 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/4882/])
YARN-1435. Modified Distributed Shell to accept either the command or the custom script. Contributed by Xuan Gong. (zjshen: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1550867)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/Client.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/test/java/org/apache/hadoop/yarn/applications/distributedshell/TestDistributedShell.java
, FAILURE: Integrated in Hadoop-Yarn-trunk #421 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/421/])
YARN-1435. Modified Distributed Shell to accept either the command or the custom script. Contributed by Xuan Gong. (zjshen: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1550867)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/Client.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/test/java/org/apache/hadoop/yarn/applications/distributedshell/TestDistributedShell.java
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1612 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1612/])
YARN-1435. Modified Distributed Shell to accept either the command or the custom script. Contributed by Xuan Gong. (zjshen: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1550867)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/Client.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/test/java/org/apache/hadoop/yarn/applications/distributedshell/TestDistributedShell.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1638 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1638/])
YARN-1435. Modified Distributed Shell to accept either the command or the custom script. Contributed by Xuan Gong. (zjshen: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1550867)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/Client.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/test/java/org/apache/hadoop/yarn/applications/distributedshell/TestDistributedShell.java
]