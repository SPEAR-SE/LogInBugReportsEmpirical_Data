[The extra lookups started in 2.6 releases, and it appears to be caused by HADOOP-10650.  However YARN really should not be using bogus users on tokens anyway in case the RPC layer (or other non-YARN systems) try to do something with those users like HADOOP-10650 did., I wonder what happens when they *do* resolve...  , Yeah, probably nothing good.  [~gss2002] pointed out HADOOP-12413 which I think will also remove the bogus lookups in practice when users aren't using the reverse ACL feature that was added in HADOOP-10650.  I'll pull that into 2.6 and 2.7, since I think most users won't be using that new feature.  We'll still need to stop using the bogus usernames for those that are using that reverse-ACL feature or if someone else tries to do something with the ugi assuming it actually was a valid user., [~jlowe] just confirmed that HADOOP-12413 does seem to fix it.. Just ran a test with the else if block... I think as a safety measure for the time being I may still keep my tactical fix but I'll move the regex to compile once as if the LDAP storm from our jobs show up again I'm going to have a bad day :)


Confirmed it never was sent out to NSS/LDAP
appattempt_1446307555640_0052_000001, Old JIRA.

bq. However YARN really should not be using bogus users on tokens anyway in case the RPC layer (or other non-YARN systems) try to do something with those users like HADOOP-10650 did.
bq. if someone else tries to do something with the ugi assuming it actually was a valid user.
They aren't really bogus, for many of these calls, we need them to identify the incoming security context / identity when per-app, per-container tokens are used. Server logging / audit logs also can depend on this for operations where the identifier should be app / container etc.

Even though, our core layer is named as UserGroupInformation, in many part of YARN and MapReduce (other than application submission), it is used as a way of propogating "IdentityInformation". Arguably, the server side code could simply look at the incoming tokens, find the incoming ID and ignore the user-name altogether. On the flip side, obviously Service-level authorization layer (hadoop-policy.xml) etc are wired into it as system-level users (HADOOP-10650 being a symptom) so I agree with you in that it is kind of disconnected.

Most of this code goes all the way back when I originally implemented security for YARN. And I borrowed this way of doing things strictly from how JobTokens were done in Hadoop 1.x MapReduce. I doubt if we can change this now - we'll have to change each and every API depending on this and their usage to understand both user-name and the specific identifier (like Application ID).

Given that HADOOP-12413 too care of the invalid group lookups, we are good for now. Changing the usage of UGI to only use real kerberos-names is likely going to be a huge one in YARN / MR.
]