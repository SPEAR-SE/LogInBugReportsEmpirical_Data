[Isnt this similar to a jira opened by you already? The issue being that the scheduler puts a reservation on a node whose total capacity is smaller than the reservation resource size. In this case, nm1 has capacity=1024 but the scheduler is putting a reservation of 2048 on it and that can never be satisfied. So it does not make sense to make that reservation at all., How is this different from YARN-957, No as per Arun I am separating out issues which are causing this failure.
* YARN-957 :- Fix if container is getting reserved on a node manager which exceeds its memory.
* this jira :- Ideally the switch should have taken place from one to other node manager if another node manager has sufficient memory. However that did not happen. This must have occurred either because excess reservation did not work or reservation exchange did not occur. We need to find the root cause  and fix this., Then please clarify this in the description or comment. Otherwise it looked like an exact duplicate. So the purpose of this jira is to fix the following situation.
1) NM1 has 2048 capacity in total but only 512 is free. A reservation of 1024 is placed on it
2) NM2 now reports 1024 free space. At this point, the above reservation should be removed from NM1 and container should be assigned to NM2.
Step 2 is not happening and this jira intends to fix it., The capacity scheduler should have eventually looked at the second node even with the first one being reserved. There is a formula for this where it its bias'd against really large requests.  What was your minimum allocation size and your maximum allocation size?  Can you still reproduce this on 2.3.0 or newer?

Also note that this should be superceded by https://issues.apache.org/jira/browse/YARN-1769 which makes it so that reservations will continue to look other heartbeating nodes .]