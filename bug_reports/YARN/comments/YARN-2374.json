[Thanks [~vvasudev]! This problem has been bothered me for two issues, YARN-2354 and YARN-2295. Seems like this is connected with the network settings of the server, causing the following lines to fail
{code}
      if (appReport.getHost().startsWith(hostName)
          && appReport.getRpcPort() == -1) {
        verified = true;
      }
{code}
If such check failed, verified will never be set to true, hence the test will fail. I haven't looked into it in details, but I think the hostName may be something you'd like to start with. , Patch with debug information added to figure out root cause., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12658863/apache-yarn-2374.0.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell:

                  org.apache.hadoop.yarn.applications.distributedshell.TestDistributedShell

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/4493//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/4493//console

This message is automatically generated., From Jenkins:
{noformat}
TestDistributedShell.testDSShell:193 Expected host name to start with 'asf905.gq1.ygridcore.net/67.195.81.149', was 'asf905/67.195.81.149'. Expected rpc port to be '-1', was '-1'.
{noformat}

It looks like the calls to NetUtils.getHostName() can return a short name or a fully qualified domain name. I'm not sure how to resolve this. The test code and the code in distributed shell app master call NetUtils.getHostName() and are getting different results. One solution could be to modify both the distributed shell app master and the test to use fully qualified domain names, but I'm open to suggestions., I dont know how much this might help . refer this link with jvm bug "http://bugs.java.com/view_bug.do?bug_id=7166687". , Attached new patch which tests for short name or FQDN., If hostname has "." then the below code might still not work
{noformat}
if (name.contains(".")) {
        // FQDN
        String[] nameParts = name.split("\\.");
        ret = nameParts[0] + "/" + parts[1];
      } 
{noformat}
, I have SuSE 11 and i tried to set hostname with ".", Using a hostname with a dot was causing inconsistent results and "InetAddress.getLocalHost()" was also throwing "java.net.UnknownHostException". so i think its not a standard to have dot in host name. With that assumption patch seems to be fine, It's *extremely* common for hostnames to have a period., As earlier mentioned there is a jvm bug which gives FQDN when " InetAddress.getLocalHost().getHostName() ". So what i guess in the machine where test case is runing  jvm used for running test case and jvm path set in JAVA_HOME is diff . org.apache.hadoop.yarn.applications.distributedshell.Client is using JAVA_HOME. Hence diff results might be coming  when InetAddress.getLocalHost().getHostName() is called. 
So may be once we can have check at this setting if not we can continue with the patch , {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12659134/apache-yarn-2374.1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/4506//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/4506//console

This message is automatically generated., [~Naganarasimha], [~aw], thanks for the feedback. 

The JVM bug fix is only in Java 8 so I don't think we can use it. 

I've uploaded a new patch which I think fixes the issue. If the ips match, it gets the FQDN for both and compares them. If the hostnames match but the ip addresses differ, it fetches all the ip addresses for the host and checks the entries for both(I've run into the second case on my machine)., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12659166/apache-yarn-2374.2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/4508//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/4508//console

This message is automatically generated., Cancelling patch because I found one more corner case. Sometimes, the app report contains "N/A" as the host., Uploaded new patch which handles the case when host is reported as "N/A". Also refactored the checkHostname function to make it cleaner and cover the case where you have short name + ip-1 and FQDN + ip-2 returned by InetAddress(on a machine with multiple network interfaces)., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12659190/apache-yarn-2374.3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/4509//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/4509//console

This message is automatically generated., Hi [~vvasudev],
Patch LGTM, 
My intention of providing the bug id is to mention that one of the java version there is problem.  And you had mentioned 
bq. The test code and the code in distributed shell app master call NetUtils.getHostName() and are getting different results. 
So i was trying to say that JVM running the test code and JVM which is launched by the Client.java code (using JVM_HOME) is different (one with the buggy JVM ) So this should be mostly a configuration issue and if both are set to same JVM then we should not be facing this issue. 
*But anyway this patch ensures in all scenarios it works fine.* But it would always better to configure to one JVM so that we dont face these kind of issues in future in some other case.
, looks good, [~vvasudev], can you add some comments to the checkHostname method to explain what its doing? thx, Added new patch with comments., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12659868/apache-yarn-2374.4.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell:

                  org.apache.hadoop.yarn.applications.distributedshell.TestDistributedShell

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/4523//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/4523//console

This message is automatically generated., {noformat}
java.lang.RuntimeException: java.net.UnknownHostException: asf905.ygridcore.net: asf905.ygridcore.net
	at java.net.InetAddress.getLocalHost(InetAddress.java:1402)
	at org.apache.hadoop.yarn.server.MiniYARNCluster.getHostname(MiniYARNCluster.java:424)
	at org.apache.hadoop.yarn.server.MiniYARNCluster.setNonHARMConfiguration(MiniYARNCluster.java:272)
	at org.apache.hadoop.yarn.server.MiniYARNCluster.serviceInit(MiniYARNCluster.java:252)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:163)
	at org.apache.hadoop.yarn.applications.distributedshell.TestDistributedShell.setup(TestDistributedShell.java:80)

testDSShellWithMultipleArgs(org.apache.hadoop.yarn.applications.distributedshell.TestDistributedShell)  Time elapsed: 0.218 sec  <<< ERROR!
java.lang.RuntimeException: java.net.UnknownHostException: asf905.ygridcore.net: asf905.ygridcore.net
	at java.net.InetAddress.getLocalHost(InetAddress.java:1402)
	at org.apache.hadoop.yarn.server.MiniYARNCluster.getHostname(MiniYARNCluster.java:424)
	at org.apache.hadoop.yarn.server.MiniYARNCluster.setNonHARMConfiguration(MiniYARNCluster.java:272)
	at org.apache.hadoop.yarn.server.MiniYARNCluster.serviceInit(MiniYARNCluster.java:252)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:163)
	at org.apache.hadoop.yarn.applications.distributedshell.TestDistributedShell.setup(TestDistributedShell.java:80)

testDebugFlag(org.apache.hadoop.yarn.applications.distributedshell.TestDistributedShell)  Time elapsed: 0.215 sec  <<< ERROR!
java.lang.RuntimeException: java.net.UnknownHostException: asf905.ygridcore.net: asf905.ygridcore.net
	at java.net.InetAddress.getLocalHost(InetAddress.java:1402)
	at org.apache.hadoop.yarn.server.MiniYARNCluster.getHostname(MiniYARNCluster.java:424)
	at org.apache.hadoop.yarn.server.MiniYARNCluster.setNonHARMConfiguration(MiniYARNCluster.java:272)
	at org.apache.hadoop.yarn.server.MiniYARNCluster.serviceInit(MiniYARNCluster.java:252)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:163)
	at org.apache.hadoop.yarn.applications.distributedshell.TestDistributedShell.setup(TestDistributedShell.java:80)

testDSShellWithShellScript(org.apache.hadoop.yarn.applications.distributedshell.TestDistributedShell)  Time elapsed: 0.172 sec  <<< ERROR!
java.lang.RuntimeException: java.net.UnknownHostException: asf905.ygridcore.net: asf905.ygridcore.net
	at java.net.InetAddress.getLocalHost(InetAddress.java:1402)
	at org.apache.hadoop.yarn.server.MiniYARNCluster.getHostname(MiniYARNCluster.java:424)
	at org.apache.hadoop.yarn.server.MiniYARNCluster.setNonHARMConfiguration(MiniYARNCluster.java:272)
	at org.apache.hadoop.yarn.server.MiniYARNCluster.serviceInit(MiniYARNCluster.java:252)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:163)
	at org.apache.hadoop.yarn.applications.distributedshell.TestDistributedShell.setup(TestDistributedShell.java:80)

testDSShell(org.apache.hadoop.yarn.applications.distributedshell.TestDistributedShell)  Time elapsed: 0.168 sec  <<< ERROR!
java.lang.RuntimeException: java.net.UnknownHostException: asf905.ygridcore.net: asf905.ygridcore.net
	at java.net.InetAddress.getLocalHost(InetAddress.java:1402)
	at org.apache.hadoop.yarn.server.MiniYARNCluster.getHostname(MiniYARNCluster.java:424)
	at org.apache.hadoop.yarn.server.MiniYARNCluster.setNonHARMConfiguration(MiniYARNCluster.java:272)
	at org.apache.hadoop.yarn.server.MiniYARNCluster.serviceInit(MiniYARNCluster.java:252)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:163)
	at org.apache.hadoop.yarn.applications.distributedshell.TestDistributedShell.setup(TestDistributedShell.java:80)

testDSRestartWithPreviousRunningContainers(org.apache.hadoop.yarn.applications.distributedshell.TestDistributedShell)  Time elapsed: 0.169 sec  <<< ERROR!
java.lang.RuntimeException: java.net.UnknownHostException: asf905.ygridcore.net: asf905.ygridcore.net
	at java.net.InetAddress.getLocalHost(InetAddress.java:1402)
	at org.apache.hadoop.yarn.server.MiniYARNCluster.getHostname(MiniYARNCluster.java:424)
	at org.apache.hadoop.yarn.server.MiniYARNCluster.setNonHARMConfiguration(MiniYARNCluster.java:272)
	at org.apache.hadoop.yarn.server.MiniYARNCluster.serviceInit(MiniYARNCluster.java:252)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:163)
	at org.apache.hadoop.yarn.applications.distributedshell.TestDistributedShell.setup(TestDistributedShell.java:80)

testDSShellWithCustomLogPropertyFile(org.apache.hadoop.yarn.applications.distributedshell.TestDistributedShell)  Time elapsed: 0.163 sec  <<< ERROR!
java.lang.RuntimeException: java.net.UnknownHostException: asf905.ygridcore.net: asf905.ygridcore.net
	at java.net.InetAddress.getLocalHost(InetAddress.java:1402)
	at org.apache.hadoop.yarn.server.MiniYARNCluster.getHostname(MiniYARNCluster.java:424)
	at org.apache.hadoop.yarn.server.MiniYARNCluster.setNonHARMConfiguration(MiniYARNCluster.java:272)
	at org.apache.hadoop.yarn.server.MiniYARNCluster.serviceInit(MiniYARNCluster.java:252)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:163)
	at org.apache.hadoop.yarn.applications.distributedshell.TestDistributedShell.setup(TestDistributedShell.java:80)

testContainerLaunchFailureHandling(org.apache.hadoop.yarn.applications.distributedshell.TestDistributedShell)  Time elapsed: 0.166 sec  <<< ERROR!
java.lang.RuntimeException: java.net.UnknownHostException: asf905.ygridcore.net: asf905.ygridcore.net
	at java.net.InetAddress.getLocalHost(InetAddress.java:1402)
	at org.apache.hadoop.yarn.server.MiniYARNCluster.getHostname(MiniYARNCluster.java:424)
	at org.apache.hadoop.yarn.server.MiniYARNCluster.setNonHARMConfiguration(MiniYARNCluster.java:272)
	at org.apache.hadoop.yarn.server.MiniYARNCluster.serviceInit(MiniYARNCluster.java:252)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:163)
	at org.apache.hadoop.yarn.applications.distributedshell.TestDistributedShell.setup(TestDistributedShell.java:80)
{noformat}

All the distributed shell tests failed because of an UnknownHostException on asf905, which also seems to have a new hostname now. It was asf905.gq1.ygridcore.net last week, but the exception trace says asf906.ygridcore.net., Correction for my last comment - it should say "but the exception trace says asf905.ygridcore.net.", I found the same issue in https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1853/console. It also get failed for other tests. I think we should hold on this change until we figure out networking configuration issues there. [~vvasudev], what do you think?, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12659868/apache-yarn-2374.4.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/4529//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/4529//console

This message is automatically generated., [~jianhe] and [~gkesavan] spoke offline and fixed the hostname; Junping resubmitted the patch to Jenkins. Thank you to all three., checking this in., Committed to trunk and branch-2. thanks Varun !, FAILURE: Integrated in Hadoop-trunk-Commit #6023 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6023/])
YARN-2374. Fixed TestDistributedShell#testDSShell failure due to hostname dismatch. Contributed by Varun Vasudev (jianhe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1616302)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/test/java/org/apache/hadoop/yarn/applications/distributedshell/TestDistributedShell.java
, FAILURE: Integrated in Hadoop-Yarn-trunk #636 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/636/])
YARN-2374. Fixed TestDistributedShell#testDSShell failure due to hostname dismatch. Contributed by Varun Vasudev (jianhe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1616302)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/test/java/org/apache/hadoop/yarn/applications/distributedshell/TestDistributedShell.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1830 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1830/])
YARN-2374. Fixed TestDistributedShell#testDSShell failure due to hostname dismatch. Contributed by Varun Vasudev (jianhe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1616302)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/test/java/org/apache/hadoop/yarn/applications/distributedshell/TestDistributedShell.java
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #1856 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1856/])
YARN-2374. Fixed TestDistributedShell#testDSShell failure due to hostname dismatch. Contributed by Varun Vasudev (jianhe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1616302)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/test/java/org/apache/hadoop/yarn/applications/distributedshell/TestDistributedShell.java
]