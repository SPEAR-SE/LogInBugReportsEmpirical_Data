[YARN-3756 and YARN-3757 are same as this issue ! can you close them ., First off, one should never set the heap size and the container size to the same value.  The container size needs to be big enough to hold the entire process, not just the heap, so it needs to also consider the overhead of the JVM itself and any off-heap usage (e.g.: JVM code, data, thread stacks, shared libs, off-heap allocations, etc.).  If you set the heap size to the same size as the container then when the heap fills up the process overall will be bigger than the heap size and YARN will kill the container.

Couple of things to check:
- Does the job configuration show that it is indeed asking for only 256 MB containers for tasks?  Check the job configuration link for the job on the job history server or the configuration link for the AM's UI while the job is running.
- Check the RM logs to verify what minimum allocation size it is loading from the configs and what request size it is allocating per task, Had looked into code for CS and FS. The minimum allocation understanding and its behavior is different acros CS and FS.
# CS : It is straight forward that if any request with less than min-allocation-mb, then the CS normalize the request to min-allocation-mb. And containers are allocated with minimum-allocation-mb. 
# FS : if any request with less than min-allocation-mb then the FS normalize the request with the factor {{yarn.scheduler.increment-allocation-mb}}. Example in description, min-alocation-mb is 256mb, but increment-allocation-mb default 1024mb which always allocate 1024mb to containers. There is huge effect of {{yarn.scheduler.increment-allocation-mb}} which changes the requested memory and assign with newly calculated resource.

The behavior is not consistent with CS and FS. I am not sure why there an additional configuration introduced in FS? Is it bug ?, bq. Is it bug ?
To be clear, is the inconsistent behavior is bug? or implemented intentionally for FS?, Hi [~rohithsharma] This issue is similar to the issue raised in YARN-3525, I feel if {{yarn.scheduler.minimum-allocation-mb}} is specific to capacity then better change it to {{yarn.scheduler.capacity.minimum-allocation-mb}} similar to the suggestion in YARN-3525. So that there is less confusion. Thoughts ?, All these confusion should be solved probably after YARN-2986. This issue can be raised there whether they will be handling it.]