[Saw an example of this today where the RM seemed to drop a container completion event for a MapReduce AM.  The RM log showed it received the container completion event from the NM:

{noformat}
2014-09-02 16:03:30,270 [ResourceManager Event Processor] INFO capacity.CapacityScheduler: Application attempt appattempt_1407992474095_785859_000001 released container container_1407992474095_785859_01_010123 on node: host: xx #containers=x available=x used=x with event: FINISHED
{noformat}

However the MapReduce AM never received the container completion event.  It always logs a "Received completed container " message for every finished container event it receives from the RM, but that log message was missing for this particular container.  That lost container completion event (along with 8 others) caused the MapReduce AM to think it still had map containers left to be released and then failed to preempt reducers when the headroom went to zero., My apologies, this is an invalid report.  I accidentally grabbed the wrong container ID when searching the RM log because after looking again I don't see the RM seeing the container completion event.  The 9 missing completion events on the AM were all from the same node, so I think this is a case of a poorly handled node failure that lead to a MapReduce app hang.

I'll file a separate JIRA to track handling that case better.  That's probably is a MapReduce fix since the RM can't tell the container is no longer needed unless either the NM reports it completing (which it failed to do in this case due to a bad node) or the AM explicitly releases the container.]