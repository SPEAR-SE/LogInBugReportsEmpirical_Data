[Could you explain more on why do you think this will cause any issues. Because I do not think there will be any.

We have two ConfigurationProvider right now. 
The first one is LocalConfigurationProvider. By using this, we will load local core-site.xml and local yarn-site.xml twice. I think this should be fine. It will not change any property values.

The other one is FileSystemBasedConfigurationProvider. We will load local core-site.xml and local yarn-site.xml first as the bootstrap configurations, then we load the remote Configurations to over-write everything. And I think if we choose to use FileSystemBasedConfigurationProvider, we should upload the configurations that we want to use to remote FileSystems. 
, I think Hitesh's concern is of the workflow

# load YARN config
# subclass overrides values in its serviceInit()
# new YarnConfig overwrites this.

I'm not sure this happens, certainly {{new YarnConfig(Configuration)}} doesn't -it pops up in a few places -hence some logic in {{AbstractService.init(Configuration)}} to recognise and handle this situation by updating its own {{config}} field.

A small unit test should be able to replicate the problem if it does exist., [~stevel@apache.org] A common case will be with mini clusters where the code itself updates the config based on what ports the daemon binds to. 


]