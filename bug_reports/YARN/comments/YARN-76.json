[Vinod, I wonder if you are interested and have time to look at this issue. It's a problem for MacOS, not sure how it works on Windows.

Thanks,
Bo
, Do the simple test on Mac environment. Create a java class that simply do the infinite loop, and create shell script to execute this class. Run the command to kill the shell script process, but this java process keeps running. Looks like this is the reason.

Possible solution can be instead of execute kill -15/-9 ${pid}, we can do 
1. pkill -9/-15 -P ${pid}. This command will kill the process and all of its children processes, but does not kill the grandchild.
2. kill -9/-15 -${pgid}. This command will kill all processes, including the grandchild, which has same process group id. 
And we can use "ps -o pid 4848|sed 1d" to get pgid., On Linux, we launch commands via a "setsid" binary. Which is absent on Mac. We could try writing our own very simple setsid program or ask Mac users to install such a binary from elsewhere., The fact that this only repros on Mac makes me suspect that we're seeing a problem related to setsid/process groups.  setsid is available on Linux, but it's not available on Mac.

https://github.com/apache/hadoop-common/blob/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Shell.java#L304

With setsid enabled, we send kill commands with a '-' prepended to the pid to indicate a process group, and thus kill the whole process group.  Without setsid enabled, we don't prepend the '-' (no process group), and we only kill the single process.  Perhaps Xuan's suggestion to use pkill -P on platforms without setsid would work, though I have't researched if pkill is something widely available or just present on Mac or just present on certain BSD flavors.

I suspect that we don't have this problem on Windows.  On Windows, we don't have setsid, but we do have the concept of process groups using a different underlying implementation (Windows job objects)., Jira mark-up totally butchered the last comment.  :-)  That was meant to say:

With setsid enabled, we send kill commands with a hypen prepended to the pid to indicate a process group, and thus kill the whole process group. Without setsid enabled, we don't prepend the hypen..., {code}  
   public static String[] getSignalKillCommand(int code, String pid) {
    return Shell.WINDOWS ? new String[] { Shell.WINUTILS, "task", "kill", pid } :
      new String[] { "kill", "-" + code, isSetsidAvailable ? "-" + pid : pid };
  }
{code}

If setSid is supported, the command kill -15/-9 -{$pid} will be executed. This will kill the whole process group.
If setSid is not supported, the command kill -15/-9 $pid will be executed., [~bowang] I run the sleep task, and kill this application. Could you tell me which command you are running to find out that the application master is not killed. Because I run ps -A before and after kill command, and I do not find the application master is alive., [~xgong] Any update on this issue? Do you think issue is still exists in branch-2 or trunk?, I think this is duplication with YARN-3561. We already have discussion there. Close this as duplication]