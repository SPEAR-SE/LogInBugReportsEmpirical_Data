[Which version of Hadoop are you using? I don't see this problem in trunk or branch-2., Thanks for the quick response.

I have reproduced it with apache 2.6.0 release (HDP 2.2.4 distribution). We are using 2.5.0 version.

We are not having *exceptionToPolicyMap* for FOREVER retrypolicy. Updating the exceptionToPolicyMap only for other retry policies.

*RetryPolicies.java*
{code}
static class RetryForever implements RetryPolicy {
    @Override
    public RetryAction shouldRetry(Exception e, int retries, int failovers,
        boolean isIdempotentOrAtMostOnce) throws Exception {
      return RetryAction.RETRY;
    }
  }
{code}

*RMProxy.java*
{code}
if (waitForEver) {
      return RetryPolicies.RETRY_FOREVER;
    }

...

    Map<Class<? extends Exception>, RetryPolicy> exceptionToPolicyMap =
        new HashMap<Class<? extends Exception>, RetryPolicy>();
{code}, Thanks for the explanation.. I got the problem in my machines too. Last time when I test, the configuration settings had issue. , RetryPolicies.RETRY_FOREVER should also should use exceptionToPolicyMap.
[~raju.bairishetti] Feel free to take up this JIRA. , I was copied *yarn.resourcemanager.connect.wait-ms* from description but actual configuration is *yarn.resourcemanager.connect.max-wait.ms*., Setting RetryPolicies.RETRY_FOREVER for exceptionToPolicyMap as default policy is not sufficient, but also {{RetryPolicies.RetryForever.shouldRetry()}} should check for Connect exceptions and handle it. Otherwise shouldRetry always return RetryAction.RETRY action., You can probably avoid this situation by setting a bigger value for "yarn.resourcemanager.connect.max-wait.ms"(like below) if you want to wait for long time to establish a connection to RM with retries.

{code:xml}
    conf.setInt(YarnConfiguration.RESOURCEMANAGER_CONNECT_MAX_WAIT_MS, Integer.MAX_VALUE);
{code}

Anyway it seems this issue needs to be fixed., {quote}
You can probably avoid this situation by setting a bigger value
{quote}

Would this not cause the client to wait for too long (well after the rm has come back online), bq. Would this not cause the client to wait for too long (well after the rm has come back online)
"yarn.resourcemanager.connect.max-wait.ms" is the max time to wait to establish a connection to RM, If the RM comes online before this time it will connect immediately. IPC client would be internally retrying to connect RM for every "yarn.resourcemanager.connect.retry-interval.ms" (default value 30 * 1000) and exception will be thrown if it can't connect for "yarn.resourcemanager.connect.max-wait.ms"., [~raju.bairishetti], would you like to provide a patch?

/cc [~xgong], [~jianhe] who wrote most of this code.

Targeting 2.7.1/2.8.0, but more likely one is 2.8.0. Can see if we can get it into earlier releases too depending on their schedule., bq. Setting RetryPolicies.RETRY_FOREVER for exceptionToPolicyMap as default policy is not sufficient, but also RetryPolicies.RetryForever.shouldRetry() should check for Connect exceptions and handle it. Otherwise shouldRetry always return RetryAction.RETRY action.

 Do we need to catch exception in shouldRetry if we have separate exceptionToPolicy map  which contains only connectionException entry. ( like exceptiontoPolicyMap.put(connectionException, FOREVER polcicy))

Seems we do not even require exceptionToPolicy for FOREVER policy if we catch the exception in shouldRetry method.

thoughts?, [~vinodkv] I will provide a patch shortly. 
 I am not able to assign myself. Can anyone help me in assigning myself? 

 , \\
\\
| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  14m 43s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 3 new or modified test files. |
| {color:green}+1{color} | javac |   7m 37s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 44s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 23s | The applied patch does not increase the total number of release audit warnings. |
| {color:green}+1{color} | checkstyle |   2m  1s | There were no new checkstyle issues. |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 35s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 32s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   3m  2s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | common tests |  22m 17s | Tests passed in hadoop-common. |
| {color:green}+1{color} | yarn tests |   1m 56s | Tests passed in hadoop-yarn-common. |
| | |  63m 53s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12733743/YARN-3646.patch |
| Optional Tests | javac unit findbugs checkstyle javadoc |
| git revision | trunk / 93972a3 |
| hadoop-common test log | https://builds.apache.org/job/PreCommit-YARN-Build/7994/artifact/patchprocess/testrun_hadoop-common.txt |
| hadoop-yarn-common test log | https://builds.apache.org/job/PreCommit-YARN-Build/7994/artifact/patchprocess/testrun_hadoop-yarn-common.txt |
| Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/7994/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf907.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/7994/console |


This message was automatically generated., bq. Seems we do not even require exceptionToPolicy for FOREVER policy if we catch the exception in shouldRetry method.
make sense to me,will reveiw the patch, thanks, Thanks for working on this issue.. The patch overall looks good to me.
nit : Can the test moved to Yarn package since issue is in Yarn? Otherwise if there is any changed in the RMProxy, test will not run., And I verified in one node cluster by enabling and disabling retryforever policy., Thanks [~rohithsharma] for the review.

 Looks like it is mainly an issue with retry policy.

, Added a new unit test in hadoop-yarn-client. [~rohithsharma] Could you please review?

Ran the test without starting the RM and then test was getting timeout.

Ran the test by starting the RM then client is getting ApplicationNotFoundException for older/invalid appId.
{code}
      rm = new ResourceManager();
      rm.init(conf);
      rm.start();
{code}, \\
\\
| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  14m 46s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 4 new or modified test files. |
| {color:green}+1{color} | javac |   7m 35s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 43s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:green}+1{color} | checkstyle |   2m 44s | There were no new checkstyle issues. |
| {color:green}+1{color} | whitespace |   0m  1s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 35s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 33s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   3m 48s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | common tests |  23m 54s | Tests passed in hadoop-common. |
| {color:green}+1{color} | yarn tests |   6m 54s | Tests passed in hadoop-yarn-client. |
| {color:green}+1{color} | yarn tests |   1m 56s | Tests passed in hadoop-yarn-common. |
| | |  73m 55s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12734062/YARN-3646.001.patch |
| Optional Tests | javac unit findbugs checkstyle javadoc |
| git revision | trunk / ce53c8e |
| hadoop-common test log | https://builds.apache.org/job/PreCommit-YARN-Build/8017/artifact/patchprocess/testrun_hadoop-common.txt |
| hadoop-yarn-client test log | https://builds.apache.org/job/PreCommit-YARN-Build/8017/artifact/patchprocess/testrun_hadoop-yarn-client.txt |
| hadoop-yarn-common test log | https://builds.apache.org/job/PreCommit-YARN-Build/8017/artifact/patchprocess/testrun_hadoop-yarn-common.txt |
| Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/8017/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf902.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/8017/console |


This message was automatically generated., Thanks for updating the patch, some comments on tests 
# I think we can remove the tests added in the hadoop-common project, since yarn-client verifies required funcitionality. And basically hadoop-common test was mocking the RMProxy functionality which test was passing without RMProxy fix also.
# code never reach {{Assert.fail("");}}. better to remove it
# Catch the ApplicationNotFoundException instead of catching throwable. I think you can add {{expected = ApplicationNotFoundException.class}} in the @Test annotation  like below.
{code}
@Test(timeout = 30000, expected = ApplicationNotFoundException.class)
  public void testClientWithRetryPolicyForEver() throws Exception {
    YarnConfiguration conf = new YarnConfiguration();
    conf.setInt(YarnConfiguration.RESOURCEMANAGER_CONNECT_MAX_WAIT_MS, -1);

    ResourceManager rm = null;
    YarnClient yarnClient = null;
    try {
      // start rm
      rm = new ResourceManager();
      rm.init(conf);
      rm.start();

      yarnClient = YarnClient.createYarnClient();
      yarnClient.init(conf);
      yarnClient.start();

      // create invalid application id
      ApplicationId appId = ApplicationId.newInstance(1430126768987L, 10645);

      // RM should throw ApplicationNotFoundException exception
      yarnClient.getApplicationReport(appId);
    } finally {
      if (yarnClient != null) {
        yarnClient.stop();
      }
      if (rm != null) {
        rm.stop();
      }
    }
  }
{code}
# can you rename the test name with actual functionality test, like {{testShouldNotRetryForeverForNonNetworkExceptions}}, [~rohithsharma] Thanks for the review and comments. Attached a new patch, +1 lgtm (non-binding)..  wait for jenkins report!!, \\
\\
| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  14m 34s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | javac |   7m 32s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 37s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 23s | The applied patch does not increase the total number of release audit warnings. |
| {color:green}+1{color} | checkstyle |   0m 38s | There were no new checkstyle issues. |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 34s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 33s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   2m  6s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | yarn tests |   6m 51s | Tests passed in hadoop-yarn-client. |
| {color:green}+1{color} | yarn tests |   1m 55s | Tests passed in hadoop-yarn-common. |
| | |  45m 47s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12734115/YARN-3646.002.patch |
| Optional Tests | javac unit findbugs checkstyle javadoc |
| git revision | trunk / 4aa730c |
| hadoop-yarn-client test log | https://builds.apache.org/job/PreCommit-YARN-Build/8023/artifact/patchprocess/testrun_hadoop-yarn-client.txt |
| hadoop-yarn-common test log | https://builds.apache.org/job/PreCommit-YARN-Build/8023/artifact/patchprocess/testrun_hadoop-yarn-common.txt |
| Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/8023/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf909.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/8023/console |


This message was automatically generated., +1, latest patch looks good to me.

Thanks [~raju.bairishetti] for reporting and contribution, Thanks [~rohithsharma] for review., The patch LGTM too in overall. 
Just one minor issue:
{code}
exceptionToPolicyMap.put(EOFException.class, retryPolicy);
{code}
Do we need to apply RetryPolicies.RETRY_FOREVER on EOFException too? I don't think so. [~jianhe] and [~xgong], any comments here?, Committed to trunk, branch-2 and branch-2.7.

Thanks [~raju.bairishetti]., FAILURE: Integrated in Hadoop-trunk-Commit #7882 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7882/])
YARN-3646. Applications are getting stuck some times in case of retry (devaraj: rev 0305316d6932e6f1a05021354d77b6934e57e171)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/RMProxy.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/test/java/org/apache/hadoop/yarn/client/api/impl/TestYarnClient.java
, Thanks [~djp] for the comment. 
I have just committed this patch before noticing your comment. Can we handle adding EOFException to the list as part of another issue/improvement? Thanks., Sure. I will file a separated JIRA for discussing this., Filed YARN-3695 for continue the discussion., Also, congratulations to [~raju.bairishetti] for contributing the first patch to Apache Hadoop project! :), SUCCESS: Integrated in Hadoop-Yarn-trunk #935 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/935/])
YARN-3646. Applications are getting stuck some times in case of retry (devaraj: rev 0305316d6932e6f1a05021354d77b6934e57e171)
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/RMProxy.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/test/java/org/apache/hadoop/yarn/client/api/impl/TestYarnClient.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk-Java8 #204 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/204/])
YARN-3646. Applications are getting stuck some times in case of retry (devaraj: rev 0305316d6932e6f1a05021354d77b6934e57e171)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/test/java/org/apache/hadoop/yarn/client/api/impl/TestYarnClient.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/RMProxy.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2133 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2133/])
YARN-3646. Applications are getting stuck some times in case of retry (devaraj: rev 0305316d6932e6f1a05021354d77b6934e57e171)
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/test/java/org/apache/hadoop/yarn/client/api/impl/TestYarnClient.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/RMProxy.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #193 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/193/])
YARN-3646. Applications are getting stuck some times in case of retry (devaraj: rev 0305316d6932e6f1a05021354d77b6934e57e171)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/RMProxy.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/test/java/org/apache/hadoop/yarn/client/api/impl/TestYarnClient.java
* hadoop-yarn-project/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk-Java8 #203 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/203/])
YARN-3646. Applications are getting stuck some times in case of retry (devaraj: rev 0305316d6932e6f1a05021354d77b6934e57e171)
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/RMProxy.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/test/java/org/apache/hadoop/yarn/client/api/impl/TestYarnClient.java
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #2151 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2151/])
YARN-3646. Applications are getting stuck some times in case of retry (devaraj: rev 0305316d6932e6f1a05021354d77b6934e57e171)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/test/java/org/apache/hadoop/yarn/client/api/impl/TestYarnClient.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/RMProxy.java
]