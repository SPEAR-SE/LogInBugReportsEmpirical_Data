[I'm expanding the scope of this jira to cover some flaws I've discovered in NodeManager's job control logic on Windows:

# Windows was erroneously flagged as supporting setsid, which caused prepending of a '-' character to the job ID passed to winutils.
# Exit code from job terminated by winutils task kill differed from expectations in YARN Java code, so that it couldn't tell the difference between a killed container vs. a container that had exited with failure.
# Multiple tests were relying on bash scripts and signals for launching and controlling containers.

I have a patch in progress.  With the expanded scope, the patch will fix the following tests on Windows: {{TestContainerLaunch}}, {{TestContainerManager}}, and {{TestNodeManagerShutdown}}.
, This patch addresses the bugs that I found.  I've verified that the tests pass on Mac (does not have setsid), Ubuntu (does have setsid), and Windows.  Here is an explanation of the changes:

# Discussion on YARN-359 concluded that we should refactor {{getCheckProcessIsAliveCommand}} and {{getSignalKillCommand}} from {{ContainerExecutor}} back to {{Shell}}.  I'm taking the opportunity to do it now while we're working on this code.  {{isSetsidSupported}} used to return true for Windows, with the rationale being that this flag really means "are process groups supported".  This didn't work out in practice, because there is too much logic that is very specific to using setsid.  This had been causing the calls to winutils to prepend a '-' character to the job ID, which is incorrect.
# "winutils task kill" had been terminating the job with exit code 1, but some of the YARN code depends on seeing a Unix-style exit code from signalled child processes, which is 128 + signal.  (See {{ContainerLaunch#call}}.)  The Windows {{TerminateJobObject}} API is most analogous to a kill signal, so I've changed task.c to use 128 + 9 = 137.
# {{TestNodeManagerShutdown}}, {{TestContainerManager}}, and {{TestContainerLaunch}} were using bash scripts and signals for testing.  I wrote alternatives for Windows that use cmd and winutils.  Note that there is no equivalent to bash's ability to trap a signal, so on Windows, the assertions need to check for process existence instead.
# Some test working directories have been shortened by switching from {{Class#getName}} to {{Class#getSimpleName}}, similar to several prior patches.
# {{TestContainerManager}} had been requesting memory in bytes, but the API actually uses megabytes.  I'm guessing that the API changed from bytes to MB at some point, but we forgot to update this test.  This caused a very interesting problem.  {{ContainerImpl#LaunchTransition}} would apply a conversion from bytes to MB, which would cause an overflow to exactly 0.  Then, {{ContainersMonitorImpl#isProcessTreeOverLimit}} would see that the container uses > 0 MB and decide to kill it.  This is a race condition that would cause the test to fail unpredictably on Windows.  I hadn't seen the problem on Mac or Ubuntu, where it seems we were just getting lucky.  I've changed the test code to use MB.
# {{TestContainerLaunch#setNewEnvironmentHack}} uses reflection to modify the environment during the test.  I needed to update this code to handle different internal JDK class structure when running on Windows.
, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12575025/YARN-493.1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 4 new or modified test files.

    {color:green}+1 tests included appear to have a timeout.{color}

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:red}-1 eclipse:eclipse{color}.  The patch failed to build with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/571//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/571//console

This message is automatically generated., Jenkins gave -1 for failure in mvn eclipse:eclipse.  This has been happening intermittently on Jenkins lately, but I haven't been able to repro it yet.  It's unrelated to this patch., Hi Chris, patch looks good

Just one question, would make sense to expose common Shell/Test utilities that would abstract out the following 2 patterns (mainly used in tests):

{code}
	  if (Path.WINDOWS) {
	    commands.add("cmd");
	    commands.add("/c");
	    commands.add(scriptFile.getAbsolutePath());
	  } else {
	    commands.add("/bin/bash");
	    commands.add(scriptFile.getAbsolutePath());
	  }
{code}

{code}
	  File scriptFile = new File(tmpDir, Path.WINDOWS ? "scriptFile.cmd" :
	    "scriptFile.sh");
{code}

This should help with code readability and will also simplify the cross platform support. Otherwise, +1 from me
, {quote}
would make sense to expose common Shell/Test utilities that would abstract out the following 2 patterns
{quote}

Good idea, Ivan.  Here is version 2 of the patch, which adds a few more helper methods to {{Shell}} to assist with this.  I've intentionally left one occurrence of this pattern untouched in {{TestContainerLaunch#testSpecialCharSymlinks}} because of a very specific need for internal quoting and escaping in the arguments., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12575800/YARN-493.2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 4 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager:

                  org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.TestContainerLocalizer

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/619//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/619//console

This message is automatically generated., The test failure is unrelated.  I suspect it was introduced in the patch for HADOOP-9357.  I've added comments on that issue to discuss., Thanks Chris, this looks really good!

Two really minor comments below, otherwise, +1 from me

1. Would it make sense to extract badSymlink with quoting to a platform dependent constant and still use the new Shell util?
{code}
      if (Shell.WINDOWS) {
        commands.add("cmd");
        commands.add("/c");
        commands.add("\"" + badSymlink + "\"");
      } else {
        commands.add("/bin/sh ./\\\"" + badSymlink + "\\\"");
      }
{code}

2. (non-binding) I was thinking whether we can come up with better (more intuitive) names for getScriptName/getScriptFile? Maybe appendScriptExtension? 
, Here is a new patch that renames the new {{Shell}} methods to {{appendScriptExtension}}.

Regarding trying to use {{Shell#getRunScriptCommand}} in the badSymlink test, I have not been able to get this to work.  The test depends on very specific quoting, and the conversion to absolute path inside {{Shell#getRunScriptCommand}} (required by other callers) interferes with this., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12577046/YARN-493.3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 4 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/670//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/670//console

This message is automatically generated., +1, latest patch looks good to me, thanks Chris, Thank you for the reviews, Ivan!, Looking at this for final review/commit., Canceling the patch.  It needs to be rebased against recent trunk changes., Attaching rebased patch and resubmitting to Jenkins., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12579087/YARN-493.4.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 4 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/756//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/756//console

This message is automatically generated., The patch looks good to me. One comment though: As discussed at YARN-359 ([here|https://issues.apache.org/jira/browse/YARN-359?focusedCommentId=13571615&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13571615]), do we already need the APIs beyond YARN now? If so promoting them to common is fine by me, otherwise, we should delay it as discussed there.., The conclusion of YARN-359 was to promote those methods back to {{Shell}} the next time we touched this part of the code.  The justification was on the grounds of symmetry; all other code paths that shell out to bash or winutils for Unix commands are already centralized in {{Shell}}.

For right now, I do need those methods to move somewhere where I can call them from the test code in this patch.  That's the immediate need.  I can also imagine writing more tests that check the existence of a process or check the effect of killing processes.  Putting those methods in {{Shell}} will make them easier to use for future tests.
, okay, you win.

My only gripe is that after this patch some of the nodemanager related tickets will need separate patches for trunk and branch-2. Can't do much.

+1 for the patch, checking this in., I just committed this trunk. Thanks Chris!, Integrated in Hadoop-trunk-Commit #3634 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/3634/])
    YARN-493. Fixed some shell related flaws in YARN on Windows. Contributed by Chris Nauroth.
HADOOP-9486. Promoted Windows and Shell related utils from YARN to Hadoop Common. Contributed by Chris Nauroth. (Revision 1469667)

     Result = SUCCESS
vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1469667
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Shell.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/winutils/task.c
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/ContainerExecutor.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/launcher/ContainerLaunch.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/TestNodeManagerShutdown.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/BaseContainerManagerTest.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/TestContainerManager.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/launcher/TestContainerLaunch.java
, Integrated in Hadoop-Yarn-trunk #188 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/188/])
    YARN-493. Fixed some shell related flaws in YARN on Windows. Contributed by Chris Nauroth.
HADOOP-9486. Promoted Windows and Shell related utils from YARN to Hadoop Common. Contributed by Chris Nauroth. (Revision 1469667)

     Result = SUCCESS
vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1469667
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Shell.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/winutils/task.c
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/ContainerExecutor.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/launcher/ContainerLaunch.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/TestNodeManagerShutdown.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/BaseContainerManagerTest.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/TestContainerManager.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/launcher/TestContainerLaunch.java
, Integrated in Hadoop-Hdfs-trunk #1377 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1377/])
    YARN-493. Fixed some shell related flaws in YARN on Windows. Contributed by Chris Nauroth.
HADOOP-9486. Promoted Windows and Shell related utils from YARN to Hadoop Common. Contributed by Chris Nauroth. (Revision 1469667)

     Result = FAILURE
vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1469667
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Shell.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/winutils/task.c
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/ContainerExecutor.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/launcher/ContainerLaunch.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/TestNodeManagerShutdown.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/BaseContainerManagerTest.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/TestContainerManager.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/launcher/TestContainerLaunch.java
, Integrated in Hadoop-Mapreduce-trunk #1404 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1404/])
    YARN-493. Fixed some shell related flaws in YARN on Windows. Contributed by Chris Nauroth.
HADOOP-9486. Promoted Windows and Shell related utils from YARN to Hadoop Common. Contributed by Chris Nauroth. (Revision 1469667)

     Result = SUCCESS
vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1469667
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Shell.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/winutils/task.c
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/ContainerExecutor.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/launcher/ContainerLaunch.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/TestNodeManagerShutdown.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/BaseContainerManagerTest.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/TestContainerManager.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/launcher/TestContainerLaunch.java
, Vinod, thanks very much for the review and commit.  Also, thank you for taking care of splitting the {{Shell}} change to a HADOOP common jira., This change apparently introduced an extra INFO message on each hadoop command, which in turn has broken the start-dfs.sh script in a similar way as described in HDFS-4427., I merged the patch to branch-2.]