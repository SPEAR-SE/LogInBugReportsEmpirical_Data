[[~giovanni.fumarola] thanks for reporting..I would like to work on this jira, If you have patch, you can reassign to yourself...thanks, It would be good to avoid the NPE, however I am surprised we run into this. If there are no ANY requests, why are we allocating a container? Is this an indicator of a scheduler bug? , You can work on it., Took a look at code, this happens when:
1) Application request a resource request (name != *) under a priority, there's no off switch resource request under the priority.
2) Allocate any container under any other priority will trigger the issue.

I think add a null check in {{checkForDeactivation}} should be sufficient., Increased priority to blocker since this will cause RM down no matter which scheduler we are using., As far as I can see, this should only happen when user writes their own application, using ApplicationMasterProtocol (instead of AMRMClient). AMRMClient will handle the case -- when user require a host or rack under a priority, offswitch resource request will be added automatically., Yes,Adding null check is sufficient..priority can null if container got allocated under any other priority,,please check the following snippet for same..

{code}
Map<String, ResourceRequest> nodeRequests = requests.get(priority);
    return (nodeRequests == null) ? null : nodeRequests.get(resourceName);
{code}, Attached patch ..[~leftnoteasy] and [~kasha] kindly review!!, Mostly LGTM, could you make code inner {{if ... }} indent?, I think we don't need check null here, since Map<String, RR> will be always created when priority added., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12705656/YARN-3369.patch
  against trunk revision 61a4c7f.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

      {color:red}-1 javac{color}.  The applied patch generated 1152 javac compiler warnings (more than the trunk's current 206 warnings).

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 43 warning messages.
        See https://builds.apache.org/job/PreCommit-YARN-Build/7026//artifact/patchprocess/diffJavadocWarnings.txt for details.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.ipc.TestRPCWaitForProxy
                  org.apache.hadoop.tracing.TestTracing
                  org.apache.hadoop.hdfs.server.namenode.ha.TestPipelinesFailover
                  org.apache.hadoop.hdfs.qjournal.TestSecureNNWithQJM

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/7026//testReport/
Javac warnings: https://builds.apache.org/job/PreCommit-YARN-Build/7026//artifact/patchprocess/diffJavacWarnings.txt
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/7026//console

This message is automatically generated., Attached same patch with correct indent, will commit when Jenkins get back., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12705751/YARN-3369.2.patch
  against trunk revision 91baca1.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/7032//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/7032//console

This message is automatically generated., Thanks a lot!!!, Thanks [~brahmareddy] for providing patch.
I think all the caller of getResourceRequest() needs be verified for null check.  Below code also should check for null else NPE can be thrown. 
{code}
 public synchronized Resource getResource(Priority priority) {
    ResourceRequest request = getResourceRequest(priority, ResourceRequest.ANY);
    return request.getCapability();
  }
{code}, Thanks for taking look into this issue..Yes.I missed this one..Updated the patch, Thanks for [~rohithsharma] for the additional review, {{getResource}} is only used by tests, but it's better to add null check.

Latest patch LGTM, will commit once Jenkins get back., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12705912/YARN-3369-003.patch
  against trunk revision 8041267.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The following test timeouts occurred in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:

org.apache.hadoop.yarn.server.resourcemanager.TestRM

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/7040//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/7040//console

This message is automatically generated., Committed to trunk/branch-2/branch-2.7, verified failed test is not related.

Thanks for [~giovanni.fumarola] reporting, [~brahmareddy] working on the patch and review from [~rohithsharma] and [~kasha]!, FAILURE: Integrated in Hadoop-trunk-Commit #7384 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7384/])
YARN-3369. Missing NullPointer check in AppSchedulingInfo causes RM to die. (Brahma Reddy Battula via wangda) (wangda: rev 6bc7710ec7f2592c4c87dd940fbe5827ef81fe72)
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #139 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/139/])
YARN-3369. Missing NullPointer check in AppSchedulingInfo causes RM to die. (Brahma Reddy Battula via wangda) (wangda: rev 6bc7710ec7f2592c4c87dd940fbe5827ef81fe72)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java
* hadoop-yarn-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Yarn-trunk #873 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/873/])
YARN-3369. Missing NullPointer check in AppSchedulingInfo causes RM to die. (Brahma Reddy Battula via wangda) (wangda: rev 6bc7710ec7f2592c4c87dd940fbe5827ef81fe72)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java
* hadoop-yarn-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2089 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2089/])
YARN-3369. Missing NullPointer check in AppSchedulingInfo causes RM to die. (Brahma Reddy Battula via wangda) (wangda: rev 6bc7710ec7f2592c4c87dd940fbe5827ef81fe72)
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2071 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2071/])
YARN-3369. Missing NullPointer check in AppSchedulingInfo causes RM to die. (Brahma Reddy Battula via wangda) (wangda: rev 6bc7710ec7f2592c4c87dd940fbe5827ef81fe72)
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #130 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/130/])
YARN-3369. Missing NullPointer check in AppSchedulingInfo causes RM to die. (Brahma Reddy Battula via wangda) (wangda: rev 6bc7710ec7f2592c4c87dd940fbe5827ef81fe72)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java
* hadoop-yarn-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #139 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/139/])
YARN-3369. Missing NullPointer check in AppSchedulingInfo causes RM to die. (Brahma Reddy Battula via wangda) (wangda: rev 6bc7710ec7f2592c4c87dd940fbe5827ef81fe72)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java
* hadoop-yarn-project/CHANGES.txt
, The patch applies to 2.6.0 cleanly., Pulled this into 2.6.1. Ran compilation before the push. Patch applied cleanly.
]