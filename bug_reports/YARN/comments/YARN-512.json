[The patch applies the changes requested by the jira, which are minor. Reviews are appreciated., Thanks for picking this up, Maysam.  Changes look OK to me, moving to Patch Available so Jenkins can comment on the patch., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12584837/YARN-512.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/1015//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/1015//console

This message is automatically generated., reviewed patch.. It looks good to me.., +1, will commit shortly., Thanks, Maysam!  I committed this to trunk and branch-2., Integrated in Hadoop-trunk-Commit #3798 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/3798/])
    YARN-512. Log aggregation root directory check is more expensive than it needs to be. Contributed by Maysam Yabandeh (Revision 1487498)

     Result = SUCCESS
jlowe : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1487498
Files : 
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/TestLogAggregationService.java
, I was going to comment on it. Why is the verifyAndCreate method getting called for every app? Shouldn't this be only once? This could explain one part of the gazillions connections we are creating to name-node during log-aggregation., I believe the verifyAndCreate change was done as part of YARN-24., [~tucu00] and I talked about this when working on YARN-24.  An earlier version of the patch didn't have this, but our thought was that verifying log dir permissions was worth an RPC or two per application., If filesystem caching is enabled, which is by default, the {{verifyAndCreate}} uses a cached {{FileSystem}} instance, no new connections are being created.

Now on why this is done on every AM start. If this would be done at NM start it would require a NM restart once the log dir is set, potentially requiring restarting all NMs of the cluster. By doing at AM start, things recover automatically -without NMs restarts- in case of transient issues with the log dir. Also, having a file-exists and a get-permissions check per app to be more resilient does not seem heavy. Still, we could reduce this to a single get-permissions call, if the dir does not exists we'll get a FNE., If at the time of creating an application's dir, the permission are wrong, then the creation will fail anyways, right?

bq. If filesystem caching is enabled, which is by default, the verifyAndCreate uses a cached FileSystem instance, no new connections are being created.
Except idle connections are closed every 60sec by default.

bq. By doing at AM start, things recover automatically without NMs restarts in case of transient issues with the log dir. Also, having a file-exists and a get-permissions check per app to be more resilient does not seem heavy. Still, we could reduce this to a single get-permissions call, if the dir does not exists we'll get a FNE.
What sort of transient failures?

I'm looking at this from the point of scalability issues we've seen on large clusters. NMs DOS'ing NameNode during log-aggregation. A couple of fixes went in, for e.g., to delay aggregation to app-finish. But opening this connection for every app is one thing we should completely avoid if possible. I'll file a ticket, we can continue discussion there.

, AFAIK the FileSystem caching does not have eviction by inactivity. Where do they get close every 60sec?
, Integrated in Hadoop-Yarn-trunk #225 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/225/])
    YARN-512. Log aggregation root directory check is more expensive than it needs to be. Contributed by Maysam Yabandeh (Revision 1487498)

     Result = SUCCESS
jlowe : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1487498
Files : 
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/TestLogAggregationService.java
, Integrated in Hadoop-Hdfs-trunk #1415 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1415/])
    YARN-512. Log aggregation root directory check is more expensive than it needs to be. Contributed by Maysam Yabandeh (Revision 1487498)

     Result = FAILURE
jlowe : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1487498
Files : 
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/TestLogAggregationService.java
, Integrated in Hadoop-Mapreduce-trunk #1441 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1441/])
    YARN-512. Log aggregation root directory check is more expensive than it needs to be. Contributed by Maysam Yabandeh (Revision 1487498)

     Result = SUCCESS
jlowe : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1487498
Files : 
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/TestLogAggregationService.java
]