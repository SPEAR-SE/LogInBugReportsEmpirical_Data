[[~john.lilley@redpoint.net], thank you for the detailed bug report.

I believe the root cause is likely to be in container localization's URI parsing to construct the local download path.  The relevant code is in {{ContainerLocalizer#download}}:

{code}
  Callable<Path> download(Path path, LocalResource rsrc,
      UserGroupInformation ugi) throws IOException {
    DiskChecker.checkDir(new File(path.toUri().getRawPath()));
    return new FSDownload(lfs, ugi, conf, path, rsrc);
  }
{code}

We're taking a {{Path}} and converting it to URI form, but I don't think {{getRawPath}} is the correct call for us to access the path portion of the URI.  A possible fix would be to switch to {{getPath}}, which would actually decode back to the original form.

{code}
scala> new org.apache.hadoop.fs.Path("domain\\hadoopuser").toUri().getRawPath()
new org.apache.hadoop.fs.Path("domain\\hadoopuser").toUri().getRawPath()
res4: java.lang.String = domain%5Chadoopuser

scala> new org.apache.hadoop.fs.Path("domain\\hadoopuser").toUri().getPath()
new org.apache.hadoop.fs.Path("domain\\hadoopuser").toUri().getPath()
res5: java.lang.String = domain\hadoopuser
{code}
, I'm attaching a patch with the fix I described in my last comment.  I added a test that passes a file name containing a '\' character through localization.  With the existing code using {{URI#getRawPath}}, the test fails as shown below.  (Note the incorrect URI-encoded path, similar to the reported symptom in the description.)  After switching to {{URI#getPath}}, the test passes as expected.

{code}
Failed tests: 
  TestContainerLocalizer.testLocalizerDiskCheckDoesNotUriEncodePath:265 
Argument(s) are different! Wanted:
containerLocalizer.checkDir(/my\File);
-> at org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.TestContainerLocalizer.testLocalizerDiskCheckDoesNotUriEncodePath(TestContainerLocalizer.java:265)
Actual invocation has different arguments:
containerLocalizer.checkDir(/my%5CFile);
-> at org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.TestContainerLocalizer.testLocalizerDiskCheckDoesNotUriEncodePath(TestContainerLocalizer.java:264)
{code}
, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12726815/YARN-3514.001.patch
  against trunk revision d52de61.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager:

                  org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.TestContainerLocalizer

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/7419//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/7419//console

This message is automatically generated., Thank you!  I am very impressed with the short time it took to patch., In the first patch, the new test passed for me locally but failed on Jenkins.  I think this is because I was using a hard-coded destination path for the localized resource, and this might have caused a permissions violation on the Jenkins host.  Here is patch v002.  I changed the test so that the localized resource is relative to the user's filecache, which is in the proper test working directory.  I also added a second test to make sure that we don't accidentally URI-decode anything.

bq. I am very impressed with the short time it took to patch.

Thanks!  Before we declare victory though, can you check that your local file system allows the '\' character in file and directory names?  The patch here definitely fixes a bug, but testing the '\' character on your local file system will tell us whether or not the whole problem is resolved for your deployment.  Even better would be if you have the capability to test with my patch applied.
, Sadly, we aren't equipped to upgrade and patch, we are mandated to go with the flow of the commercial distros we support.  However I can assure you that our local FS definitely supports the \ in the filename, as I saw the usercache folder with the \ in it., We did work around the issue by changing our username mapping in sssd and auth_to_local rules to use plain usernames, that seemed to be the path of least resistance., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12726964/YARN-3514.002.patch
  against trunk revision 997408e.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/7431//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/7431//console

This message is automatically generated., [~john.lilley@redpoint.net], thank you for the confirmation., [~cnauroth], I think this causes other problems in latest YARN as well, for example:

If a user with name with mixed cases for example "De", if we have a rule "/L" in kerberos side to make all names to lower case, when NM doing log aggregation, it will fail because user name doesn't match (in UserGroupInformation is "de", but in "OS").

{code}
java.io.IOException: Owner 'De' for path /hadoop/yarn2/log/application_1428608050835_0013/container_1428608050835_0013_01_000006/stder
r did not match expected owner 'de'
        at org.apache.hadoop.io.SecureIOUtils.checkStat(SecureIOUtils.java:285)
        at org.apache.hadoop.io.SecureIOUtils.forceSecureOpenForRead(SecureIOUtils.java:219)
        at org.apache.hadoop.io.SecureIOUtils.openForRead(SecureIOUtils.java:204)
        at org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogValue.secureOpenFile(AggregatedLogFormat.java:275)
        at org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogValue.write(AggregatedLogFormat.java:227)
        at org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter.append(AggregatedLogFormat.java:448)
        at org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.AppLogAggregatorImpl$ContainerLogAggregator.doContainer
LogAggregation(AppLogAggregatorImpl.java:534)
        at 
...
{code}

One possible solution is ignoring cases while compare user name, but that will be problematic when user "De"/"de" existed at the same time. Any thoughts? [~cnauroth]., I also doubt if this (the fix by the patch) is the only place where domain\login type of user-names will fail in YARN., Looking at the original description, I see upper-case "DOMAIN" is getting translated to lower-case "domain" in this environment.  It's likely that this environment would get an ownership mismatch error even after getting past the current bug.

{code}
drwxr-s--- 4 DOMAIN\hadoopuser yarn 4096 Apr 17 12:10 domain\hadoopuser
{code}

Nice catch, Wangda.

Is it necessary to translate to lower-case, or can the domain portion of the name be left in upper-case to match the OS level?

bq. One possible solution is ignoring cases while compare user name, but that will be problematic when user "De"/"de" existed at the same time.

I've seen a few mentions online that Active Directory is not case-sensitive but is case-preserving.  That means it will preserve the case you used in usernames, but the case doesn't matter for comparisons.  I've also seen references that DNS has similar behavior with regards to case.

I can't find a definitive statement though that this is guaranteed behavior.  I'd feel safer making this kind of change if we had a definitive reference., [~cnauroth],

bq. I've seen a few mentions online that Active Directory is not case-sensitive but is case-preserving. That means it will preserve the case you used in usernames, but the case doesn't matter for comparisons. I've also seen references that DNS has similar behavior with regards to case.
Good point! I've found one post about this: https://msdn.microsoft.com/en-us/library/bb726984.aspx:
bq. Note: Although Windows 2000 stores user names in the case that you enter, user names aren't case sensitive. For example, you can access the Administrator account with the user name Administrator or administrator. Thus, user names are case aware but not case sensitive..

So I think it's safe to make this change too., [~leftnoteasy], [~cnauroth] - can the latest patch be committed?, \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  16m 26s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | javac |   7m 54s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |  10m  5s | There were no new javadoc warning messages. |
| {color:red}-1{color} | release audit |   0m 15s | The applied patch generated 1 release audit warnings. |
| {color:red}-1{color} | checkstyle |   0m 36s | The applied patch generated  1 new checkstyle issues (total was 24, now 23). |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 30s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 34s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   1m 14s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:red}-1{color} | yarn tests |   8m 17s | Tests failed in hadoop-yarn-server-nodemanager. |
| | |  46m 54s | |
\\
\\
|| Reason || Tests ||
| Failed unit tests | hadoop.yarn.server.nodemanager.TestNodeStatusUpdater |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12726964/YARN-3514.002.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 5db371f |
| Release Audit | https://builds.apache.org/job/PreCommit-YARN-Build/9321/artifact/patchprocess/patchReleaseAuditProblems.txt |
| checkstyle |  https://builds.apache.org/job/PreCommit-YARN-Build/9321/artifact/patchprocess/diffcheckstylehadoop-yarn-server-nodemanager.txt |
| hadoop-yarn-server-nodemanager test log | https://builds.apache.org/job/PreCommit-YARN-Build/9321/artifact/patchprocess/testrun_hadoop-yarn-server-nodemanager.txt |
| Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/9321/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf905.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/9321/console |


This message was automatically generated., Hello [~vvasudev].

As per prior comments from [~leftnoteasy] and [~vinodkv], we suspect the current patch does not fully address all potential problems with use of Active Directory "DOMAIN\login" usernames in YARN.  I don't have bandwidth right now to hunt down those additional problems and fix them.

I think these are the options for handling this JIRA now:
# Finish the review of the fix that is already here and commit it.  Handle subsequent issues in separate JIRAs.
# Unassign it from me and see if someone else can pick it up, run with my current patch, look for more problems and then turn that into a more comprehensive patch.
# Continue to let this linger until I or someone else frees up time for more investigation., I'm not actively working on this, so I'm unassigning., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 0s {color} | {color:blue} Docker mode activated. {color} |
| {color:red}-1{color} | {color:red} patch {color} | {color:red} 0m 7s {color} | {color:red} YARN-3514 does not apply to trunk. Rebase required? Wrong Branch? See https://wiki.apache.org/hadoop/HowToContribute for help. {color} |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12726964/YARN-3514.002.patch |
| JIRA Issue | YARN-3514 |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/13256/console |
| Powered by | Apache Yetus 0.3.0   http://yetus.apache.org |


This message was automatically generated.

, +1 on first option. I think we can fix domain\login issues one by one. Guys, what do you think?, Move it out of 2.8., Is this still on target for 2.9.0 ? If not, can we we push this out to the next major release ?, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  0s{color} | {color:blue} Docker mode activated. {color} |
| {color:red}-1{color} | {color:red} patch {color} | {color:red}  0m  5s{color} | {color:red} YARN-3514 does not apply to trunk. Rebase required? Wrong Branch? See https://wiki.apache.org/hadoop/HowToContribute for help. {color} |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Issue | YARN-3514 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12726964/YARN-3514.002.patch |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/17714/console |
| Powered by | Apache Yetus 0.6.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Pushing it out from 2.9.0 due to lack of recent activity. Feel free to revert if required.]