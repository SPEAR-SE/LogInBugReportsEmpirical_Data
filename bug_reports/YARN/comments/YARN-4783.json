[{noformat}
ecretManager$InvalidToken): token (HDFS_DELEGATION_TOKEN token 9 for yarn) can't be found in cache
2014-03-02 08:44:29,707 WARN org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.LogAggregationService: Application failed to init aggregation
org.apache.hadoop.yarn.exceptions.YarnRuntimeException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.security.token.SecretManager$InvalidToken): token (HDFS_DELEGATION_TOKEN token 9 for yarn) can't be found in cache
        at org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.LogAggregationService.createAppDir(LogAggregationService.java:312)
        at org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.LogAggregationService.initAppAggregator(LogAggregationService.java:371)
        at org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.LogAggregationService.initApp(LogAggregationService.java:323)
        at org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.LogAggregationService.handle(LogAggregationService.java:451)
        at org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.LogAggregationService.handle(LogAggregationService.java:68)
        at org.apache.hadoop.yarn.event.AsyncDispatcher.dispatch(AsyncDispatcher.java:189)
        at org.apache.hadoop.yarn.event.AsyncDispatcher$1.run(AsyncDispatcher.java:117)
        at java.lang.Thread.run(Thread.java:745)
{noformat}, From the exception it appears the HDFS token is being cancelled before the nodemanager gets around to aggregating the logs.  Without the valid HDFS token the NM cannot perform log aggregation.  I remember there was some token keepalive semantics in the the RM-NM protocol so nodemanagers could ask for tokens to be kept alive after the application completed to perform cleanup tasks like log aggregation.  However if the nodemanager was down too long then that window will be missed and the RM will cancel the HDFS token.

The RM logs should shed some light on exactly what happened.  It should show the relative timing of the following events which would be interesting to know:
# When the application completed
# When the HDFS token was cancelled by the RM (check for 'Cancelling HDFS_DELEGATION_TOKEN token 9 for yarn')
# When the nodemanager reconnected to the RM (and presumably started log aggregation shortly afterwards)
, Thanks [~jlowe] for the comment. 

Detail for the events from logs :
===================================

bq. 1. When the application completed
{noformat}
2014-03-01 19:11:03,527 INFO org.apache.hadoop.yarn.server.resourcemanager.RMAuditLogger: USER=yarn	OPERATION=Application Finished - Succeeded	TARGET=RMAppManager	RESULT=SUCCESS	APPID=application_xxxxxxxxxxxxxx_yyyyy
{noformat}

bq. 2. When the HDFS token was cancelled by the RM (check for 'Cancelling HDFS_DELEGATION_TOKEN token 9 for yarn')
{noformat}
2014-03-01 19:21:12,347 INFO org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager: Token cancelation requested for identifier: HDFS_DELEGATION_TOKEN token 9 for yarn
{noformat}


bq. 3. When the nodemanager reconnected to the RM (and presumably started log aggregation shortly afterwards)

NM Lost
{noformat}
2014-03-01 19:13:42,079 INFO org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNodeImpl: Deactivating Node host87:66666 as it is now LOST
{noformat}

NM Added
{noformat}
2014-03-02 08:44:31,785 INFO org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNodeImpl: host87:66666 Node Transitioned from NEW to RUNNING
{noformat}

{noformat}
2014-03-02 08:44:29,705 ERROR org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.LogAggregationService: Failed to setup application log directory for application_xxxxxxxxxxxxxx_yyyyy
org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.security.token.SecretManager$InvalidToken): token (HDFS_DELEGATION_TOKEN token 9 for yarn) can't be found in cache
	at org.apache.hadoop.ipc.Client.call(Client.java:1511)
	at org.apache.hadoop.ipc.Client.call(Client.java:1447)
{noformat}, Thanks for posting the details from the logs!  The problem is as I suspected -- the RM cancelled the delegation token before log aggregation had started from the nodemanager.  In this case it was well before the nodemanager had a chance to aggregate, as the nodemanager wasn't recovered until 13.5 hours after the application completed.

I'm not sure what YARN can do to fix this scenario.  It's a security risk to leave the delegation token around too long after the application completed, and in the general case we can't leave it around forever because it will eventually expire on its own.  Therefore we can't support arbitrary delays between the application completing and the log aggregation starting., Thanks [~jlowe] for comment..

bq. in the general case we can't leave it around forever because it will eventually expire on its own. Therefore we can't support arbitrary delays between the application completing and the log aggregation starting.

Agree with you., Resolving as Won't Fix per the above discussion since we don't want to keep an application's security tokens valid for an arbitrary time after the application completes.]