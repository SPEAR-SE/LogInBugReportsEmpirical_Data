[It might also be useful to have a "SystemdNspawnContainerExectuor" for yarn.nodemanager.container-executor.class. I don't know how many people would be interesting it using it however., SystemdNspawnContainerExectuor is a good idea. Just add one for systemd besides the standard CgroupsLCEHandler., do we need to have a special container executor? Or a specialized {{LCEResourcesHandler}} would do the trick?, [~tucu00], you mean just detect whether the system is RedHat 7 inside the CgroupsLCEResourceHandler? If so, use systemd to execute?, i was not meaning autodetection, i was meaning that a new resource handler may be enough to deal with cgroups in RH7, without having to write a new LCE., oh, yes, adding a new LCEResourceHandler to handle the preExecute and afterExecute is enough., +1.
A new LCEResourceHandler is needed. To support more resource isolation, we also need to have init(), preExecute() and postExecute() for different resource. Adding an abstract CgroupsResourceManager and its implement CPUResourceManager\MemResourceManager is good., A prelim patch that implements the systemd-based cpu resource isolation for Redhat 7.
A summary:
(1) Create a new resource handler SystemdLCEResourceHandler. Users can use this handle by configuring the field "yarn.nodemanager.linux-container-executor.resources-handler.class".
(2) For each container, create one slice and one scope. The scope is put inside the slice, and cpuShare isolation is also attached to the slice.  All container's slices are organized in a root slice (named "hadoop_yarn.slice" in default).

Will add some testcases later., startSystemdSlice/stopSystemdSlice needs root privilege? Let container-executor to run "sudo systemctl start " ?, Thanks your comments, [~beckham007].
bq. startSystemdSlice/stopSystemdSlice needs root privilege?
Yes, "systemctl start/stop slice" needs root privilege.
bq. Let container-executor to run "sudo systemctl start "?
You mean adding start/stop slice function in the container-executor, and let SystemdLCEResourceHandler invokes these functions?, container-executor.c
* L1188: If initialize_user() fails, do you not need to cleanup?
* L1194: Same for create_log_dirs(). Seems that goto cleanup is still warranted.
* L1207: Missing space before S_IRWXU.
* L1243: Nit. Hardcoding 55 here is error-prone. You could allocate a 4K buffer here, and use snprintf.
* L1244: You need to check the return value from malloc(). Since you're running as root here, everything has to be extra careful.
* L1255: On failure, would log the command being executed.
, container-executor.c - the new method significantly duplicates the existing one. Can we have separate methods to capture the differences and leave the original method as is. , Sure, will update a new patch by combing [~bcwalrus] comments., Sure, will update a new patch by combing [~bcwalrus] comments., Is there no API that we can use instead of spawning shells to set this up?

We should have some auto-detection to chose the right plugin for the right OS.

IAC, YARN-3443 changed the way resource isolation code is organized in the ResourceManager. YARN-3542 is migrating existing cgroups+cpu support to the new layout. We need to relook at this patch in light of those changes., Also, it will be really useful if we could find a way to support existing code on RHEL7, even if libcgroups is deprecated and the approach ends up becoming heavy-handed, perhaps with some manual steps. This [page|https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Resource_Management_Guide/chap-Using_libcgroup_Tools.html] talks about ways of doing this., [~vinodkv], discussed about this with Karthik offline. We thought it would be better just let the existing cgroups code work well in RedHat7. And after that, we can provide another systemd solution. 
I can update a patch later., RHEL7 recommends using systemd, but doesn't require us to do so. As Wei said, we thought it might be better to fix the immediate issue (which Wei claims is a simple fix) instead of switching over to use systemd. We could follow-up with a fix that uses systemd., In Redhat 7, the controller for cpu is "/sys/fs/cgroup/cpu,cpuacct". However, this patch cannot be supported by container-executor due to the comma. So the patch replaces it to "/sys/fs/cgroup/cpu". And "/sys/fs/cgroup/cpu" has already symlinked to "/sys/fs/cgroup/cpu,cpuacct"., Verified the patch works. Can we add more comments to say clarify why the patch replaces cpu,cpuacct with cpu? May be something along the lines of - "In RHEL7, the CPU controller is named 'cpu,cpuacct'. The comma in the controller name leads to container launch failure. Symlinks 'cpu' and 'cpuacct' point to 'cpu,cpuacct'. Using 'cpu' solves the issue.", +1 otherwise. 

[~vinodkv], [~tucu00] - is this somewhat hacky approach reasonable? , Thanks, [~kasha]. Updated a patch adding more comments., Thinking out aloud, should we do OS specific checks for this?

Also, does the newer CGroupsHandlerImpl also need to change? /cc [~vvasudev]., While this may work for the default RHEL7 configuration, this will break if someone happens to have mounted the same controllers to "/sys/fs/cgroup/cpuacct,cpu", or if the user mounted other controllers at the same path as well. What do you think about creating the symlink from "/sys/fs/cgroup/cpu" to the mounted path for cpu in all cases (unless it was actually mounted at /sys/fs/cgroup/cpu of course)., Isn't it better to use a different separator that is less likely to be in use ( e.g ':' or '|' instead of ',' ) when invoking container-executor ? Granted that this is a (slightly) bigger change, but it seems like the right thing to do. , To clarify, my comment was respect to this line in the description {{The comma in the controller name leads to container launch failure.}} . I believe switching separators or encoding arguments in some way is a better approach than requiring symlinks or transform "cpu,cpuacct" to "cpu" as the controller name. , [~sidharta-s], thanks for the advice. Use a different separator LGTM. In that way, we can trust the "cpu" controller, and can also help avoid doing OS-specific changes.
Comments? [~kasha], [~vinodkv], [~mjacobs].

And for the new CGroupsHandlerImpl, didn't find any problem when I checked the patch. [~vvasudev], please correct me if I missed anything. 
, I haven't looked at it closely, but think Yarn doesn't pick the separator. If we could easily change the separator from within Yarn, that is without requiring any other environment changes by the admin, I ll be a +1 for that change. By the way, Linux allows anything but '/' and '%' for filenames. So, picking ':' or '|' is only less likely to cause issues in the future. Who would have thought they would use ', in a filename?

If we continue with the patch posted here, I think [~mjacobs]' suggestion makes sense.  , I'm confused, does this mean that you'll re-mount the cpu and cpuacct controllers? Do we know that other components in the RHEL7 world don't expect them to be in the default place?, You can remount controllers if you retain the same combination as the existing mount point, so I guess you could replace the ',' with something your parsing code can handle (or you could fix the parsing code). In general, life is a lot easier if you can avoid remounting as you then don't have to worry about managing their lifecycle.

I'd argue the most robust thing to do is discover the existing mount point from /proc/mounts and then use it (assuming the comma parsing can be fixed) if it's present (and don't forget to respect the NodeManager's cgroup paths from /proc/self/mounts), There are two different issues here : 

* container-executor binary invocation uses ‘,’ as a separator when supplying a list of paths - which breaks when the path contains ‘,’
* cpu,cpuacct are mounted together by default on RHEL7 

Now, for the latter issue : In {{CgroupsLCEResourcesHandler}}, the following steps occur : 

* If the {{yarn.nodemanager.linux-container-executor.cgroups.mount}} switch is enabled , the ‘cpu’ controller is explicitly mounted at the specified path. 
* (irrespective of the state of the switch) The {{/proc/mounts}} file (possibly updated by the previous step) is subsequently parsed to determine the mount locations for the various cgroup controllers - this parsing code seems to be correct even if cpu and cpuacct are mounted in one location.

So, the thing we need to fix is the separator issue and we should be good.  The important thing to remember is that there are *two* cgroups implementation classes ( {{CgroupsLCEResourcesHandler}} and {{CGroupsHandlerImpl}} ). Hopefully, this will be addressed soon ( YARN-3542 ) - or we risk divergence. 
, Thanks, [sidharta-s]. So the change would be in how the container-executor accepts lists of paths, not attempting to re-mount the controllers, right? If I understand it correctly, that sounds like a good plan to me., [~mjacobs] , Yes, that is what I am proposing.  If we handle the path separation correctly, we should be able to continue using the current (deprecated, but still workable) mechanism for using cgroups., Hi [~ywskycn], 

Would you be able to submit a patch with the requested changes? Maybe we should consider pulling this into 2.7.1 ? 

/cc [~vinodkv]

, [~sidharta-s], yes, working on it., [~ywskycn] , thanks! Looking forward to your patch., Uploaded a patch by replacing comma with '%'., \\
\\
| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  15m 56s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | javac |   7m 37s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 42s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:green}+1{color} | checkstyle |   0m 36s | There were no new checkstyle issues. |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 33s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 33s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   1m 13s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | yarn tests |   6m  6s | Tests passed in hadoop-yarn-server-nodemanager. |
| | |  43m 44s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12738765/YARN-2194-4.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 6785661 |
| hadoop-yarn-server-nodemanager test log | https://builds.apache.org/job/PreCommit-YARN-Build/8232/artifact/patchprocess/testrun_hadoop-yarn-server-nodemanager.txt |
| Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/8232/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf905.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/8232/console |


This message was automatically generated., I tried running jobs with the patch posted here, and ran into issues during localization:
{noformat}
Localizer failed
java.io.IOException: Application application_1434091083696_0001 initialization failed (exitCode=20) with output: main : command provided 0
main : user is nobody
main : requested yarn user is systest
Failed to create directory /data/yarn/nm%/data1/yarn/nm/usercache/systest - No such file or directory

	at org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor.startLocalizer(LinuxContainerExecutor.java:241)
	at org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceLocalizationService$LocalizerRunner.run(ResourceLocalizationService.java:1132)
Caused by: ExitCodeException exitCode=20: 
	at org.apache.hadoop.util.Shell.runCommand(Shell.java:538)
	at org.apache.hadoop.util.Shell.run(Shell.java:455)
	at org.apache.hadoop.util.Shell$ShellCommandExecutor.execute(Shell.java:715)
	at org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor.startLocalizer(LinuxContainerExecutor.java:232)
	... 1 more
{noformat}, [~ywskycn] ,  you'll need to change {{PrivilegedOperationExecutor}} as well 

{code}
      if (noneArgsOnly == false) {
        //We have already appended at least one tasks file.
        finalOpArg.append(",");
        finalOpArg.append(tasksFile);
      } else {
        finalOpArg.append(tasksFile);
        noneArgsOnly = false;
      }
{code}


The tests appear to pass in TestLinuxContainerExecutorWithMocks,
 but it not clear why. One example in {{TestLinuxContainerExecutorWithMocks}} that should have caused a test failure : 

{code}
StringUtils.join(",", dirsHandler.getLocalDirs()),
StringUtils.join(",", dirsHandler.getLogDirs()), "cgroups=none"),
{code}

It appears to me that this construction is done in enough places that it would make sense to create a static constant for use as a separator when constructing an argument for the container-executor binary. A good candidate location to add such a constant would be the {{PrivilegedOperation}} class. You could, in addition, also ‘hide’ the join functionality by adding a static function in the {{PrivilegedOperation}} class. 

, [~kasha], [~sidharta-s], thanks for the comments. Looking into it., Updated a new patch addressing [~sidharta-s] comments. I put the '%' constant to LinuxContainerExecutor.

[~kasha], could u try again the latest patch? It runs well in my local test., [~ywskycn] ,  I see the following in the patch :

{code}
+++ hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/privileged/PrivilegedOperationExecutor.java
@@ -30,6 +30,7 @@
 import org.apache.hadoop.util.Shell.ExitCodeException;
 import org.apache.hadoop.yarn.api.ApplicationConstants;
 import org.apache.hadoop.yarn.conf.YarnConfiguration;
+import org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor;
{code}

Please note that {{LinuxContainerExecutor}} already has a dependency on {{PrivilegedOperation}} and indirectly on {{PrivilegedOperationExecutor}} ( via resource handlers ). It doesn't make sense to add a dependency on {{LinuxContainerExecutor}} here - it makes it a circular dependency of sorts. {{PrivilegedOperationExecutor}} is a wrapper around the container-executor binary and the idea is move all invocations of container-executor to use this mechanism.  I recommend instead adding this constant in {{PrivilegedOperation}} or {{PrivilegedOperationExecutor}} as mentioned before. 
, [~sidharta-s], thanks for pointing out. Will fix it soon., [~ywskycn] , the latest patch (v6) looks fine to me. Thanks!

[~vvasudev] , [~vinodkv] , [~kasha]  could one of you take a quick look  and commit please?

, +1 for the latest patch. Tested it on my machine and it handles the comma issue. I'll commit it tomorrow if there are no objections., Thanks, [~vvasudev]., I tried the latest patch, and still run into the same issue (logs below). Did anyone try the patch with multiple local directories? 

{noformat}
15/07/01 10:51:32 INFO mapreduce.Job: Job job_1435771879097_0003 failed with state FAILED due to: Application application_1435771879097_0003 failed 2 times due to AM Container for appattempt_1435771879097_0003_000002 exited with  exitCode: -1000
For more detailed output, check application tracking page:http://krhel7-1.vpc.cloudera.com:8088/proxy/application_1435771879097_0003/Then, click on links to logs of each attempt.
Diagnostics: Application application_1435771879097_0003 initialization failed (exitCode=20) with output: main : command provided 0
main : user is nobody
main : requested yarn user is systest
Failed to create directory /data/yarn/nm%/data1/yarn/nm/usercache/systest - No such file or directory

Failing this attempt. Failing the application.
{noformat}, I tested it with multiple local dirs as well. Any chance you can attach the yarn-site.xml you used(or send it to me offline)?, [~kasha] , I have run into such issues when I forgot to rebuild container-executor (requires a different maven profile to be used). So, a shot in the dark : did you re-build the container-executor binary? :), I did a {{mvn clean package -Pdist -Dtar -Dmaven.javadoc.skip=true -DskipTests -Pnative}}. I can try changing it to -Pdist,native., [~kasha] yes, you need the "native" profile to build container-executor. , bq. yes, you need the "native" profile to build container-executor.
I did add the native profile (at the end), but I wonder if adding it right after -Pdist would be any different.

In any case, we should probably go ahead and commit this if multiple people have gotten this to work. I haven't had a chance to look more closely, but it is possible the issues I am seeing are because of some missing commits from our branch. I wasn't using trunk or branch-2., [~vvasudev] - do you want to do the honors? , Committed to trunk and branch-2. Thanks Wei!, FAILURE: Integrated in Hadoop-trunk-Commit #8123 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/8123/])
YARN-2194. Fix bug causing CGroups functionality to fail on RHEL7. Contributed by Wei Yan. (vvasudev: rev c40bdb56a79fe1499c2284d493edc84620c0c078)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/impl/configuration.c
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/StringUtils.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/privileged/PrivilegedOperationExecutor.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/privileged/PrivilegedOperation.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/TestLinuxContainerExecutorWithMocks.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/util/TestStringUtils.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/test/test-container-executor.c
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #247 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/247/])
YARN-2194. Fix bug causing CGroups functionality to fail on RHEL7. Contributed by Wei Yan. (vvasudev: rev c40bdb56a79fe1499c2284d493edc84620c0c078)
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/util/TestStringUtils.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/test/test-container-executor.c
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/privileged/PrivilegedOperation.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/impl/configuration.c
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/StringUtils.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/TestLinuxContainerExecutorWithMocks.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/privileged/PrivilegedOperationExecutor.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2195 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2195/])
YARN-2194. Fix bug causing CGroups functionality to fail on RHEL7. Contributed by Wei Yan. (vvasudev: rev c40bdb56a79fe1499c2284d493edc84620c0c078)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/privileged/PrivilegedOperation.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/StringUtils.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/impl/configuration.c
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/test/test-container-executor.c
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/privileged/PrivilegedOperationExecutor.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/util/TestStringUtils.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/TestLinuxContainerExecutorWithMocks.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #250 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/250/])
YARN-2194. Fix bug causing CGroups functionality to fail on RHEL7. Contributed by Wei Yan. (vvasudev: rev c40bdb56a79fe1499c2284d493edc84620c0c078)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/StringUtils.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/privileged/PrivilegedOperationExecutor.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/impl/configuration.c
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/test/test-container-executor.c
* hadoop-yarn-project/CHANGES.txt
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/util/TestStringUtils.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/TestLinuxContainerExecutorWithMocks.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/privileged/PrivilegedOperation.java
, FAILURE: Integrated in Hadoop-Yarn-trunk #980 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/980/])
YARN-2194. Fix bug causing CGroups functionality to fail on RHEL7. Contributed by Wei Yan. (vvasudev: rev c40bdb56a79fe1499c2284d493edc84620c0c078)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/privileged/PrivilegedOperationExecutor.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/test/test-container-executor.c
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/TestLinuxContainerExecutorWithMocks.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/impl/configuration.c
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/StringUtils.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/privileged/PrivilegedOperation.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/util/TestStringUtils.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2177 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2177/])
YARN-2194. Fix bug causing CGroups functionality to fail on RHEL7. Contributed by Wei Yan. (vvasudev: rev c40bdb56a79fe1499c2284d493edc84620c0c078)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/TestLinuxContainerExecutorWithMocks.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/privileged/PrivilegedOperationExecutor.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/util/TestStringUtils.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/impl/configuration.c
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/StringUtils.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/test/test-container-executor.c
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/privileged/PrivilegedOperation.java
, Greetings,
This message is going out to notify that I will be out of the office on July 8 2015 on medical appointments. I will have limited access to either v-mail or e-mail.
Have a great day,
 Tatiana

, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #238 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/238/])
YARN-2194. Fix bug causing CGroups functionality to fail on RHEL7. Contributed by Wei Yan. (vvasudev: rev c40bdb56a79fe1499c2284d493edc84620c0c078)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/privileged/PrivilegedOperation.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/TestLinuxContainerExecutorWithMocks.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/privileged/PrivilegedOperationExecutor.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/util/TestStringUtils.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/StringUtils.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/impl/configuration.c
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/test/test-container-executor.c
, [~ywskycn] / [~vvasudev], do we need any additional documentation for this? Say at http://hadoop.apache.org/docs/current/hadoop-yarn/hadoop-yarn-site/NodeManagerCgroups.html ?, [~vinodkv], Thanks for pointing it out. IMO, I don't think we need additional documentation as the patch doesn't bring new configuration or new implementation mechanism. We need a new documentation when we bring the systemd., [~ywskycn] , [~vvasudev]

So, it looks like the final version of the patch that was eventually committed didn't actually go through jenkins ( wasn't submitted to jenkins or something else went wrong during submission ). There seems to be a test failing that needs to be fixed ( see below ) 

{code}
testSquashCGroupOperationsWithValidOperations(org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.privileged.TestPrivilegedOperationExecutor)  Time elapsed: 0.178 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...n/container_01/tasks[,net_cls/hadoop_yarn/container_01/tasks,]blkio/hadoop_yarn/co...> but was:<...n/container_01/tasks[%net_cls/hadoop_yarn/container_01/tasks%]blkio/hadoop_yarn/co...>
at org.junit.Assert.assertEquals(Assert.java:115)
at org.junit.Assert.assertEquals(Assert.java:144)
at org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.privileged.TestPrivilegedOperationExecutor.testSquashCGroupOperationsWithValidOperations(TestPrivilegedOperationExecutor.java:225)
{code}

thanks,
-Sidharta, attaching patch with a fix for unit test issue., submitted to jenkins. [~vinodkv] , please take a quick look and commit ?, \\
\\
| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |   6m 29s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | javac |   7m 53s | There were no new javac warning messages. |
| {color:green}+1{color} | release audit |   0m 19s | The applied patch does not increase the total number of release audit warnings. |
| {color:green}+1{color} | checkstyle |   0m 38s | There were no new checkstyle issues. |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 20s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 32s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   1m 13s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | yarn tests |   6m 15s | Tests passed in hadoop-yarn-server-nodemanager. |
| | |  24m 42s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12744373/YARN-2194-7.patch |
| Optional Tests | javac unit findbugs checkstyle |
| git revision | trunk / 2e3d83f |
| hadoop-yarn-server-nodemanager test log | https://builds.apache.org/job/PreCommit-YARN-Build/8465/artifact/patchprocess/testrun_hadoop-yarn-server-nodemanager.txt |
| Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/8465/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf903.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/8465/console |


This message was automatically generated., My apologies for missing the failing unit test [~sidharta-s]. I've committed the fix for the failing unit test., FAILURE: Integrated in Hadoop-trunk-Commit #8138 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/8138/])
YARN-2194. Addendum patch to fix failing unit test in TestPrivilegedOperationExecutor. Contributed by Sidharta Seethana. (vvasudev: rev 63d0365088ff9fca0baaf3c4c3c01f80c72d3281)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/privileged/TestPrivilegedOperationExecutor.java
, Thanks [~vvasudev]  - jenkins wasn't triggered so we all missed it,  , FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #251 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/251/])
YARN-2194. Addendum patch to fix failing unit test in TestPrivilegedOperationExecutor. Contributed by Sidharta Seethana. (vvasudev: rev 63d0365088ff9fca0baaf3c4c3c01f80c72d3281)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/privileged/TestPrivilegedOperationExecutor.java
, FAILURE: Integrated in Hadoop-Yarn-trunk #981 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/981/])
YARN-2194. Addendum patch to fix failing unit test in TestPrivilegedOperationExecutor. Contributed by Sidharta Seethana. (vvasudev: rev 63d0365088ff9fca0baaf3c4c3c01f80c72d3281)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/privileged/TestPrivilegedOperationExecutor.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #239 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/239/])
YARN-2194. Addendum patch to fix failing unit test in TestPrivilegedOperationExecutor. Contributed by Sidharta Seethana. (vvasudev: rev 63d0365088ff9fca0baaf3c4c3c01f80c72d3281)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/privileged/TestPrivilegedOperationExecutor.java
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #2178 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2178/])
YARN-2194. Addendum patch to fix failing unit test in TestPrivilegedOperationExecutor. Contributed by Sidharta Seethana. (vvasudev: rev 63d0365088ff9fca0baaf3c4c3c01f80c72d3281)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/privileged/TestPrivilegedOperationExecutor.java
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk-Java8 #249 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/249/])
YARN-2194. Addendum patch to fix failing unit test in TestPrivilegedOperationExecutor. Contributed by Sidharta Seethana. (vvasudev: rev 63d0365088ff9fca0baaf3c4c3c01f80c72d3281)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/privileged/TestPrivilegedOperationExecutor.java
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #2197 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2197/])
YARN-2194. Addendum patch to fix failing unit test in TestPrivilegedOperationExecutor. Contributed by Sidharta Seethana. (vvasudev: rev 63d0365088ff9fca0baaf3c4c3c01f80c72d3281)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/privileged/TestPrivilegedOperationExecutor.java
, Thanks for finding and fixing the issue, [~sidharta-s]. It might be better to create a new JIRA for follow-ups, especially if the person working on it is different; we should avoid the who gets the credit issue if we can :), [~kasha] , thanks - will keep that in mind going forward. Assigned this JIRA back to Wei since he did the bulk of the work.
, No problem at all. I really wish JIRA allows assigning stuff to multiple people, but well there are so many things it could do better. , [~vvasudev] / [~sidharta-s] / [~kasha], we could just open a placeholder JIRA ticket against Sid for the addendum, post the test fix there and close it right away., My hadoop version is 2.6.4 which is also affected by such bug. Obviously, the patch from (v5) is not available for me, because 2.6.4 even not has the directory  "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/..."
How can I solve this issue?  Thank you~
]