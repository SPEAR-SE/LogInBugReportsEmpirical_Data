[Is there a recent change in 2.8 that broke this?  I haven't seen it in 2.7, yet it too is using the buffer to copy the bytes in a similar manner and I haven't heard of any reports from our users about truncated logs.  The FileInputStream claim in the description above isn't mentioned in the javadocs, and was I not able to replicate it with a simple cat-like program:
{code}
import java.io.File;
import java.io.FileInputStream;
class cat {
    public static void main(String[] args) throws Exception {
	byte[] buf = new byte[65536];
	File f = new File(args[0]);
	FileInputStream in = new FileInputStream(f);
	int len;
	while ((len = in.read(buf)) != -1) {
	    System.out.write(buf, 0, len);
	}
    }
}
{code}

I'm able to use the code above to successfully copy files of arbitrary sizes with JDK7 on Linux.  Could this be a platform-specific issue?, You're right, it was some issue with our FileSystem implementation.

I will cancel this. Sorry about the confusion., Not an issue]