[simple patch for trunk, Changes for this function in YARN-2 is shown below:

-  public static void normalizeRequest(ResourceRequest ask, int minMemory) {
-    int memory = Math.max(ask.getCapability().getMemory(), minMemory);
-    ask.getCapability().setMemory(
-        minMemory * ((memory / minMemory) + (memory % minMemory > 0 ? 1 : 0)));
+  public static void normalizeRequest(
+      ResourceRequest ask, 
+      ResourceCalculator resourceCalculator, 
+      Resource clusterResource,
+      Resource minimumResource) {
+    Resource normalized = 
+        Resources.normalize(
+            resourceCalculator, ask.getCapability(), minimumResource);
+    ask.setCapability(normalized);, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12584464/YARN-721.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/991//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/991//console

This message is automatically generated., Is this specific to secured environment?, Yes. If security is not enabled, authorizeRequest() will do nothing, and this bug will not be triggered. , Anyone encountered this problem while using secured yarn (>=2.0.3)?

I've applied this patch on our production cluster for one week, and it works.
, The problem has already been fixed in YARN-370, and YARN-382. I think the problem should no longer exist >= 2.0.3., Feel free to reopen it if you still encounter the problem with >= 2.0.3, I checked YARN-370 and YARN-382ï¼ŒI think it's the same problem with this issue.
I'm using cdh4.2 and found that SchedulerUtils.java in trunk not changed, so I mistakenly assumed that the bug was not fixed.

And I agreed that YARN-382 is a better fix. ]