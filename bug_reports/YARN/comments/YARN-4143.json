[Copying comments from YARN-2005
  
Sunil G added a comment - 03/Sep/15 07:17
Hi Anubhav Dhoot
Thank you for updating the patch. I have a comment here.
isWaitingForAMContainer is now used in 2 cases. To set the ContainerType and also in blacklist case. And this check is now hitting in every heartbeat from AM.
I think its better to set a state called amIsStarted in SchedulerApplicationAttempt. And this can be set from 2 places.
1. RMAppAttemptImpl#AMContainerAllocatedTransition can call a new scheduler api to set amIsStarted flag when AM Container is launched and registered. We need to pass ContainerId to this new api to get attempt object and to set the flag.
2. AbstrctYarnScheduler#recoverContainersOnNode can also invoke this api to set this flag.
So now we can directly read from SchedulerApplicationAttempt everytime when heartbeat call comes from AM. If we are not doing this in this ticket, I can open another ticket for this optimization. Please suggest your thoughts., I think we can minimize the impact of checking on every allocate to only allocates before the AM is assigned which should be only a few times until AM itself gets launched. This avoids adding an API to the scheduler., Attached patch ensures checks are done only when AM is not allocated yet. Once its allocated it will simply return. Also remove passing the applicationId which is redundant since we are checking only for this App., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  18m 45s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:red}-1{color} | tests included |   0m  0s | The patch doesn't appear to include any new or modified tests.  Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. |
| {color:green}+1{color} | javac |   9m  3s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |  11m 15s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 25s | The applied patch does not increase the total number of release audit warnings. |
| {color:green}+1{color} | checkstyle |   0m 59s | There were no new checkstyle issues. |
| {color:red}-1{color} | whitespace |   0m  1s | The patch has 1  line(s) that end in whitespace. Use git apply --whitespace=fix. |
| {color:green}+1{color} | install |   1m 36s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 37s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   1m 40s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | yarn tests |  55m 48s | Tests passed in hadoop-yarn-server-resourcemanager. |
| | | 100m 13s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12757137/YARN-4143.001.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 6b97fa6 |
| whitespace | https://builds.apache.org/job/PreCommit-YARN-Build/9200/artifact/patchprocess/whitespace.txt |
| hadoop-yarn-server-resourcemanager test log | https://builds.apache.org/job/PreCommit-YARN-Build/9200/artifact/patchprocess/testrun_hadoop-yarn-server-resourcemanager.txt |
| Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/9200/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf907.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/9200/console |


This message was automatically generated., Hi [~adhoot]
Thank you for sharing the patch. 
Yes, this overall helps to avoid extra calls to RMAppAttempt to see AM container is launched.

I have couple of minor reasons for the alternative suggestion earlier.
1. It can avoid the schedulers contacting RMApp or RMAppAttempt if possible. Because the accessibility to get RMAppAttempt looks slightly trickier. but I am agreeing that this correct and used many places. 
{code}
    RMAppAttempt appAttempt =
        rmContext.getRMApps().get(applicationId).getCurrentAppAttempt();
{code}

In my opinion it will be good if RMAppAttempt can update {{SchedulerApplicationAttempt}}, it will look more clean. 
2. RMAppAttempt knows exactly when the AM Container is launched, so its good to update app at that time.

Yes, I know its not very strong reason, I mentioned it because it may looks more clean this way :). Also It adds an additional API to scheduler. We can definitely weigh the usefulness of this, and if its fine, then can be done. Thoughts?
, Sorry, for point 1, I meant adding below snippet.
{code}
    // The working knowledge is that masterContainer for AM is null as it
    // itself is the master container.
    RMAppAttempt appAttempt =
        rmContext.getRMApps().get(applicationId).getCurrentAppAttempt();
    return (appAttempt != null && appAttempt.getMasterContainer() == null
        && appAttempt.getSubmissionContext().getUnmanagedAM() == false);
{code}, Cannot think of an API to add to the scheduler that will be called by RMAppAttempt. We can add an event to SchedulerEventType such as AM_CONTAINER_ALLOCATED that happens in the 2 places you mentioned. Seems overkill to me.  Lemme know if you have any alternate ways of doing this., Yes [~adhoot]. I am also not getting any other way other than this Event handling. Because RMAppAttempt need to update such information to Schedulers (common), and either an Event or an API is only a clean way here.

I do not have any objection here for existing way what is done in the  patch. Thought of bringing up all possible options here and weigh in the  best. , | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 0s {color} | {color:blue} Docker mode activated. {color} |
| {color:red}-1{color} | {color:red} patch {color} | {color:red} 0m 4s {color} | {color:red} YARN-4143 does not apply to trunk. Rebase required? Wrong Branch? See https://wiki.apache.org/hadoop/HowToContribute for help. {color} |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12757137/YARN-4143.001.patch |
| JIRA Issue | YARN-4143 |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/11978/console |
| Powered by | Apache Yetus 0.3.0   http://yetus.apache.org |


This message was automatically generated.

, Since [~adhoot] doesn't seem to be working on this one anymore, I just rebased it and posted a new patch.  This patch turns out to be considerably simpler than its predecessor because some of the cleanup that was in the original patch made it in already.  [~sunilg], wanna have a look?, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 22s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red} 0m 0s {color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 6m 56s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 31s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 21s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 37s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 15s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 1s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 22s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 38s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 30s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 30s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 18s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 34s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 10s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 10s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 24s {color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 36m 41s {color} | {color:red} hadoop-yarn-server-resourcemanager in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 21s {color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 51m 51s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.yarn.server.resourcemanager.TestWorkPreservingRMRestart |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:2c91fd8 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12810564/YARN-4143.002.patch |
| JIRA Issue | YARN-4143 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux cce0395aff7c 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 8e8cb4c |
| Default Java | 1.8.0_91 |
| findbugs | v3.0.0 |
| unit | https://builds.apache.org/job/PreCommit-YARN-Build/12014/artifact/patchprocess/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-YARN-Build/12014/artifact/patchprocess/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/12014/testReport/ |
| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/12014/console |
| Powered by | Apache Yetus 0.3.0   http://yetus.apache.org |


This message was automatically generated.

, Given the current state of trunk, this patch is now reduced to optimizing away a very cheap call.  Given the additional complication to the logic, it's not worth it.]