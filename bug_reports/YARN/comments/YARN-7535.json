[Hi, [~yufeigu] [~templedf]

I'm sorry to bother you, but recently I was wondering why the demand of the queue cannot exceed *maxResources*. Is it a scheduling optimization need or a semantic consideration?

If it is a scheduling optimization requirement, I think it is necessary to show the real value when the *demand *value of the queue is displayed on the web page.

If it's a semantic consideration, can you give me a place where you can find the exact definition?

Thanks!

YunFan Zhou, Max resource is a hard limit, which means a queue can't use more resources than its max resources. Hence, demand and usage shouldn't be greater than max resources. The exiting code makes sense to me in that sense. Should we display the original demand other than normalized one? I am open to suggestions, and would like to hear more about why needs to show the original. cc [~wilfreds], The code has changed in recent versions, there is no updateDemandForApp any more after YARN-6172.

Demand for a queue as [~yufeigu] explained should be limited to the maximum the queue can use. So the existing code should be left as is. Changing the calculation would affect the minimum share starvation and some other calculations that use the demand. Having the extra detail on how high demand really is in a queue is could provide some more detail for tuning. The {{FSAppAttempt}} does not cap it so we have the info already.

Some considerations:
- We could store the extra detail to the {{leafQueue}}. There would not really be an overhead beside some extra local storage.
- Adding it to the {{parentQueue}} to get it for the whole hierarchy would be possible but it does involve overhead. We would then also need to choose if we want the unlimited demand from the child queue or the limited version
- The scheduler state dump is easily changed, 
- Do we want to display this in the web UI? It might be confusing to show the two numbers always and the state dump would be a much better place because it can be seen over time instead of just one instance
, I understand that a queue cannot use more resource than its max resources, but demand is not use.
The users should know how many resources their apps are requesting, and the YARN admin should know how many extra resources should be added to the queue, if the demand is always larger than the max resources. Now, when the demand is larger than the max value,  the demand value in the RM web UI  is just a limit instead of a real demand, which is unreasonable.
, The demand for an application is not limited and is we do not stop adding up demand at any limit for an application.
This is purely about the maximum demand a queue is assigned for the purpose of scheduling. Showing a demand in a queue that is higher than what could ever be allocated in the queue also does not make sense from a scheduling perspective. I agree that it is one of the possible factors you look at from a tuning perspective.

Demand should not be the one and only number to base a queue size on. An applications demand is just the requested resources for the Application Master until the application runs. When the AM is not started there is no request for any other resources beside that one AM container. There is thus no demand beside that one container. This means that the demand in a queue is of limited value for tuning the size of a queue. Non runnable applications always skew the demand number. If you run into the maximum size of a queue demand will be skewed unless all applications in all queues are running. Most likely it will give the wrong info and your tuning would be off. If you are not running into the maximum queue size and still have unsatisfied demand something else is going on. Again demand will not be the value you are tuning on in that case., [~daemon] if you don't mind I would like to supply a patch for this. Can I assign it to myself?]