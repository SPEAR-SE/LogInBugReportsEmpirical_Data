[Here is the stack trace from a failure.

{code}
testDistributedCache(org.apache.hadoop.mapreduce.v2.TestMRJobs)  Time elapsed: 1
6.844 sec  <<< FAILURE!
java.lang.AssertionError: null
        at org.junit.Assert.fail(Assert.java:86)
        at org.junit.Assert.assertTrue(Assert.java:41)
        at org.junit.Assert.assertTrue(Assert.java:52)
        at org.apache.hadoop.mapreduce.v2.TestMRJobs._testDistributedCache(TestMRJobs.java:881)
        at org.apache.hadoop.mapreduce.v2.TestMRJobs.testDistributedCache(TestMRJobs.java:891)
{code}

The task log shows the assertion failing when it tries to find job.jar/lib/lib2.jar.

{code}
2014-11-03 15:36:33,652 FATAL [main] org.apache.hadoop.mapred.YarnChild: Error running child : java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertNotNull(Assert.java:621)
	at org.junit.Assert.assertNotNull(Assert.java:631)
	at org.apache.hadoop.mapreduce.v2.TestMRJobs$DistributedCacheChecker.setup(TestMRJobs.java:764)
	at org.apache.hadoop.mapreduce.Mapper.run(Mapper.java:142)
	at org.apache.hadoop.mapred.MapTask.runNewMapper(MapTask.java:784)
	at org.apache.hadoop.mapred.MapTask.run(MapTask.java:341)
	at org.apache.hadoop.mapred.YarnChild$2.run(YarnChild.java:169)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:415)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1640)
	at org.apache.hadoop.mapred.YarnChild.main(YarnChild.java:164)
{code}
, I'll have a look, [~rusanu], did this happen when you ran the unit tests?  Can you have a look also?, So, having looked at this a bit (with some help from [~cnauroth]) I've added some logging and it looks to be some kind of pathing issue, the files are there, just not quite how the classloader expects them to be.  

2014-11-04 14:22:53,956 INFO [main] org.apache.hadoop.mapreduce.v2.TestMRJobs: THE PATH TO THE PLACE IS file:/C:/boo/1415139741659/org.apache.hadoop.mapreduce.v2.TestMRJobs-localDir-nm-0_0/usercache/cwelch/appcache/application_1415139755128_0001/container_1415139755128_0001_01_000001/job.jar/job.jar/^M

(ignore the c:/boo, that was a different troubleshooting step (which made no difference...))  notice the duplicated job.jar/job.jar - the files are present in the higher level "job.jar" directory, but not in the duplicated path, so in some form or fashion an additional level is being added to the path now, it's not clear to me why as of yet.  Continuing to investigate., A little more info - inside the job.jar directory is a job.jar file, I believe this is where the duplication is taking place, as the resource path is finding that entry both during the search for just job.jar and the path which has it as a parent directory (the test is failing while looking for "job.jar/lib/lib1.jar".  It might be a classpath ordering issue.  Still looking..., on both Mac (where the test passes) and windows (where not) the directory layout looks to be the same where the issue lies, and there is a job.jar/job.jar (directory/file) present both places, but only on windows does it end up finding the resource "job.jar" as the doubled path, and then failing to find the lib1.jar subsequently (no doubt, because of the former).  Pretty sure it's a classpath issue, don't think it's related to link differences as I don't believe that was newly introduced.  and, still looking..., On Mac, cl.getResource("job.jar/") returns the directory (higher level entry), on windows the same call is returning the jar file path (job.jar/job.jar).  I think this is the essential issue, because when asking subsequently for "job.jar/lib/lib1.jar" the former finds the resource and the latter (win) will not, as it is starting from the wrong place.  This certainly looks like a classpath issue, either different content or different order.  still looking., So, these tests pass with the revision directly before [YARN-2198] checkin, and fail for it and subsequent revisions (having checked several, including current trunk - although behavior seems to differ slightly from the checkin until now). A couple of differences are notable, although which is responsible is not yet clear.  Post 2198 the classpath*jar ends up with a reference to itself, which does not seem correct (although it may or may not be the cause).  the non-secure windows path also ends up with a reference to the classpath jar in the nmPrivate directory instead of in the usercache area as it did before the change., Enumerating the entries for job.jar indicates the issue, on the working revision there are two, one of which can then be used to get to the job.jar/lib/lib1.jar, on the broken revision that entry does not exist, which I think suggests that the classpath entry for the directory which contains that directory has gone missing.
working:
{code}
JURL /C:/Users/cwelch/AppData/Local/Temp/1415233136660/org.apache.hadoop.mapreduce.v2.TestMRJobs-localDir-nm-2_3/usercache/cwelch/appcache/application_1415233156844_0001/container_1415233156844_0001_01_000002/job.jar/^M
2014-11-05 16:19:48,074 INFO [main] org.apache.hadoop.mapreduce.v2.TestMRJobs: JJURL /C:/Users/cwelch/AppData/Local/Temp/1415233136660/org.apache.hadoop.mapreduce.v2.TestMRJobs-localDir-nm-2_0/usercache/cwelch/appcache/application_1415233156844_0001/container_1415233156844_0001_01_000001/job.jar/^M
2014-11-05 16:19:48,074 INFO [main] org.apache.hadoop.mapreduce.v2.TestMRJobs: JJURL /C:/Users/cwelch/AppData/Local/Temp/1415233136660/org.apache.hadoop.mapreduce.v2.TestMRJobs-localDir-nm-2_0/usercache/cwelch/appcache/application_1415233156844_0001/container_1415233156844_0001_01_000001/job.jar/job.jar/^M
2014-11-05 16:19:48,074 INFO [main] org.apache.hadoop.mapreduce.v2.TestMRJobs: JJURL /C:/Users/cwelch/AppData/Local/Temp/1415233136660/org.apache.hadoop.mapreduce.v2.TestMRJobs-localDir-nm-2_3/usercache/cwelch/appcache/application_1415233156844_0001/container_1415233156844_0001_01_000002/job.jar/job.jar/^M
{code}

not working
{code}
2014-11-05 16:05:37,813 INFO [main] org.apache.hadoop.mapreduce.v2.TestMRJobs: JJURL /C:/Users/cwelch/AppData/Local/Temp/1415232295468/org.apache.hadoop.mapreduce.v2.TestMRJobs-localDir-nm-0_2/usercache/cwelch/appcache/application_1415232314590_0001/container_1415232314590_0001_01_000001/job.jar/job.jar/^M
2014-11-05 16:05:37,813 INFO [main] org.apache.hadoop.mapreduce.v2.TestMRJobs: JJURL /C:/Users/cwelch/AppData/Local/Temp/1415232295468/org.apache.hadoop.mapreduce.v2.TestMRJobs-localDir-nm-1_1/usercache/cwelch/appcache/application_1415232314590_0001/container_1415232314590_0001_01_000002/job.jar/job.jar/^M
{code}

looking into differences wrt the container... entry on the classpath
{code}, Patch to revert behavior for jar creation location, which resolves this issue for non-secure windows.  As it is it probably breaks secure windows, I may look at making the behavior conditional (however, I suspect secure windows will fail this test/is broken as well, so I'm not sure that making this conditional really matters at the moment...)., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12680024/YARN-2803.0.patch
  against trunk revision 75b820c.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/5763//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/5763//console

This message is automatically generated., The fix is to cause existing unit tests which fail on windows to now pass, there is no need for additional tests, they're already there., +1 for the patch.  I verified that {{TestMRJobs}} and {{TestUberAM}} pass in my Windows environment.

I'm going to hold off on committing until tomorrow in case anyone else watching wants to comment regarding secure mode.  I do think we need to commit this, because without it, we have a regression in non-secure mode on Windows, which has been shipping for several releases already.  Secure mode is still under development as I understand it., the original response to why this change is made, but I didn't pay further attention..
https://issues.apache.org/jira/browse/YARN-2198?focusedCommentId=14158260&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14158260

Thought this might break windows security,  I'm OK to get this patch in and fix windows security separately.  thanks Craig and Chris !, just thought more, [~cwelch], I think it's fine to add a security enable conditional check and also skip the two distributed cache tests for Windows-secuirty,  and open a follow-up jira to either fix windows-secuirty to conform with the non-secure behavior or add a new unit test for windows-secure-distributed-cache. what do you think ?, Right, we currently don't run (can't..) any unit tests through the secure windows codepath (which is problematic...) so disabling the tests in that case is accomplished :-) I'm going to put up a patch in a few which will retain the existing logic for windows secure even though we know it is not quite correct - the patch as it is now will completely break windows secure mode, so I think it's better for now to allow that path to function as it did before and only change the non-secure path so that we fix this issue - I think we'll want to go with that patch for now, and to open a follow-on to address the windows-secure case in a better way., Patch which retains windows secure behavior for classpath jar location while fixing non secure windows by returning it to using "pwd", Thanks again, Craig.  I re-verified that the tests pass in my environment with this version of the patch.  I agree with the argument to retain the current behavior of secure mode (such as it is).

Sorry to nitpick, but it looks like some lines are indented by 1 space instead of 2.  Would you mind fixing that?  I'll be +1 after that.

{code}
        if (exec instanceof WindowsSecureContainerExecutor) {
         jarDir = nmPrivateClasspathJarDir;
        } else {
         jarDir = pwd; 
        }
{code}
, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12680238/YARN-2803.1.patch
  against trunk revision 2ac1be7.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/5787//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/5787//console

This message is automatically generated., Now, with better indentation., +1 for the v2 patch.  I'll commit this., FAILURE: Integrated in Hadoop-trunk-Commit #6483 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6483/])
YARN-2803. MR distributed cache not working correctly on Windows after NodeManager privileged account changes. Contributed by Craig Welch. (cnauroth: rev 06b797947c980d7d21864eb8b700cf565756aac1)
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/launcher/ContainerLaunch.java
, I have committed this to trunk, branch-2 and branch-2.6.  Craig, thank you for tracking down the bug and providing a fix., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12680251/YARN-2803.2.patch
  against trunk revision a71e930.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/5789//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/5789//console

This message is automatically generated., FAILURE: Integrated in Hadoop-Yarn-trunk #737 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/737/])
YARN-2803. MR distributed cache not working correctly on Windows after NodeManager privileged account changes. Contributed by Craig Welch. (cnauroth: rev 06b797947c980d7d21864eb8b700cf565756aac1)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/launcher/ContainerLaunch.java
* hadoop-yarn-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1927 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1927/])
YARN-2803. MR distributed cache not working correctly on Windows after NodeManager privileged account changes. Contributed by Craig Welch. (cnauroth: rev 06b797947c980d7d21864eb8b700cf565756aac1)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/launcher/ContainerLaunch.java
* hadoop-yarn-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1951 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1951/])
YARN-2803. MR distributed cache not working correctly on Windows after NodeManager privileged account changes. Contributed by Craig Welch. (cnauroth: rev 06b797947c980d7d21864eb8b700cf565756aac1)
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/launcher/ContainerLaunch.java
]