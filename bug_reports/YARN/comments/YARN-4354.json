[Sample stacktrace:
{noformat}
java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.ExecutorCompletionService$QueueingFuture@4e2b9db3 rejected from java.util.concurrent.ThreadPoolExecutor@467b3667[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 102]
        at java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:2047)
        at java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:823)
        at java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1369)
        at java.util.concurrent.ExecutorCompletionService.submit(ExecutorCompletionService.java:181)
        at org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceLocalizationService$PublicLocalizer.addResource(ResourceLocalizationService.java:816)
        at org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceLocalizationService$LocalizerTracker.handle(ResourceLocalizationService.java:704)
        at org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceLocalizationService$LocalizerTracker.handle(ResourceLocalizationService.java:646)
        at org.apache.hadoop.yarn.event.AsyncDispatcher.dispatch(AsyncDispatcher.java:183)
        at org.apache.hadoop.yarn.event.AsyncDispatcher$1.run(AsyncDispatcher.java:109)
        at java.lang.Thread.run(Thread.java:745)
{noformat}

The threadpool was shutdown due to an earlier NPE that occurred:
{noformat}
2015-11-13 02:09:56,944 [Public Localizer] FATAL localizer.ResourceLocalizationService: Error: Shutting down
java.lang.NullPointerException
        at org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.LocalResourcesTrackerImpl.handle(LocalResourcesTrackerImpl.java:174)
        at org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.LocalResourcesTrackerImpl.handle(LocalResourcesTrackerImpl.java:56)
        at org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceLocalizationService$PublicLocalizer.run(ResourceLocalizationService.java:862)
2015-11-13 02:09:56,944 [Public Localizer] INFO localizer.ResourceLocalizationService: Public cache exiting
{noformat}
, I believe this was caused by YARN-2902.  A resource was just localized, but the resource is missing.  That normally doesn't occur.  However after YARN-2902 a resource can be yanked out while it is still downloading if a container releases it and the refcount is zero.  So if a public resource is requested by a container but killed before the localization completes then we can get a localized event for a missing resource and hit the NPE.

We should not be removing a resource if the localization will still complete, otherwise we not only risk the NPE but also leaking the local files., Attaching a unit test I hacked together that demonstrates the problem as I understand it., [~jlowe], I think you are correct. Below code added in YARN-2902 causes the problem.
Public Localizer will continue downloading the resource unlike localizer for private resources which exits because a DIE is issued.
As you said, because of below addition resource is removed if reference count is 0, but for a PUBLIC resource a LOCALIZED Event may come even after container has been killed. This wont happen for private resources though.

{code}
    // Remove the resource if its downloading and its reference count has
    // become 0 after RELEASE. This maybe because a container was killed while
    // localizing and no other container is referring to the resource.
    if (event.getType() == ResourceEventType.RELEASE) {
      if (rsrc.getState() == ResourceState.DOWNLOADING &&
          rsrc.getRefCount() <= 0) {
        removeResource(req);
      }
    }
{code}

I think a check for resource visibility should suffice. What do you think ?, Marking this as a blocker for 2.7.2., Looks like this can cause nodemanagers to crash as well:
{noformat}
2015-11-13 17:22:51,063 [AsyncDispatcher event handler] FATAL event.AsyncDispatcher: Error in dispatcher thread
java.lang.NullPointerException
        at org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.LocalResourcesTrackerImpl.getPathForLocalization(LocalResourcesTrackerImpl.java:448)
        at org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceLocalizationService$PublicLocalizer.addResource(ResourceLocalizationService.java:802)
        at org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceLocalizationService$LocalizerTracker.handle(ResourceLocalizationService.java:704)
        at org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceLocalizationService$LocalizerTracker.handle(ResourceLocalizationService.java:646)
        at org.apache.hadoop.yarn.event.AsyncDispatcher.dispatch(AsyncDispatcher.java:183)
        at org.apache.hadoop.yarn.event.AsyncDispatcher$1.run(AsyncDispatcher.java:109)
        at java.lang.Thread.run(Thread.java:745)
{noformat}

 I think it was trying to lookup a resource that it assumed was still there but had been removed.

bq. I think a check for resource visibility should suffice. What do you think ?

What worries me about that approach is if we somehow allowed a heartbeat from a localizer to come in just after we cleaned up a resource because a container happened to be released then we get the same kind of badness if the localization completed just after we removed it.  We may still want a null check just in case we get a late event for a removed resource., Makes sense. Better to be safe and have an explicit null check in addition to check for public resource.
We can print a log message if rsrc is not found. , Patch that implements the visibility check to avoid executing the logic for public resources along with the null resource check just in case somehow we get a late event for a resource that was already removed., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 5s {color} | {color:blue} docker + precommit patch detected. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 3m 0s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 22s {color} | {color:green} trunk passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 23s {color} | {color:green} trunk passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 10s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 25s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 12s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 0m 56s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 18s {color} | {color:green} trunk passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 22s {color} | {color:green} trunk passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 23s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 21s {color} | {color:green} the patch passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 21s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 23s {color} | {color:green} the patch passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 23s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 10s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 24s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 13s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 3s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 17s {color} | {color:green} the patch passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 24s {color} | {color:green} the patch passed with JDK v1.7.0_79 {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 8m 35s {color} | {color:red} hadoop-yarn-server-nodemanager in the patch failed with JDK v1.8.0_60. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 9m 0s {color} | {color:red} hadoop-yarn-server-nodemanager in the patch failed with JDK v1.7.0_79. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 21s {color} | {color:green} Patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 28m 48s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_60 Failed junit tests | hadoop.yarn.server.nodemanager.containermanager.localizer.TestResourceLocalizationService |
| JDK v1.7.0_79 Failed junit tests | hadoop.yarn.server.nodemanager.containermanager.localizer.TestResourceLocalizationService |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.7.1 Server=1.7.1 Image:test-patch-base-hadoop-date2015-11-13 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12772275/YARN-4354.001.patch |
| JIRA Issue | YARN-4354 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux 5d9136129aa2 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-YARN-Build/patchprocess/apache-yetus-fa12328/precommit/personality/hadoop.sh |
| git revision | trunk / f94d892 |
| findbugs | v3.0.0 |
| unit | https://builds.apache.org/job/PreCommit-YARN-Build/9684/artifact/patchprocess/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-nodemanager-jdk1.8.0_60.txt |
| unit | https://builds.apache.org/job/PreCommit-YARN-Build/9684/artifact/patchprocess/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-nodemanager-jdk1.7.0_79.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-YARN-Build/9684/artifact/patchprocess/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-nodemanager-jdk1.8.0_60.txt https://builds.apache.org/job/PreCommit-YARN-Build/9684/artifact/patchprocess/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-nodemanager-jdk1.7.0_79.txt |
| JDK v1.7.0_79  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/9684/testReport/ |
| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager |
| Max memory used | 227MB |
| Powered by | Apache Yetus   http://yetus.apache.org |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/9684/console |


This message was automatically generated.

, Fix for unit test failure., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 13s {color} | {color:blue} docker + precommit patch detected. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 2 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 3m 56s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 33s {color} | {color:green} trunk passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 28s {color} | {color:green} trunk passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 13s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 30s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 16s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 9s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 26s {color} | {color:green} trunk passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 28s {color} | {color:green} trunk passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 28s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 28s {color} | {color:green} the patch passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 28s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 28s {color} | {color:green} the patch passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 28s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 12s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 29s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 15s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 18s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 26s {color} | {color:green} the patch passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 27s {color} | {color:green} the patch passed with JDK v1.7.0_79 {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 9m 48s {color} | {color:red} hadoop-yarn-server-nodemanager in the patch failed with JDK v1.8.0_60. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 9m 45s {color} | {color:green} hadoop-yarn-server-nodemanager in the patch passed with JDK v1.7.0_79. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 28s {color} | {color:green} Patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 33m 59s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_60 Failed junit tests | hadoop.yarn.server.nodemanager.containermanager.localizer.TestResourceLocalizationService |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.7.1 Server=1.7.1 Image:test-patch-base-hadoop-date2015-11-13 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12772286/YARN-4354.002.patch |
| JIRA Issue | YARN-4354 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux 225cbeefebd4 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-YARN-Build/patchprocess/apache-yetus-fa12328/precommit/personality/hadoop.sh |
| git revision | trunk / f94d892 |
| findbugs | v3.0.0 |
| unit | https://builds.apache.org/job/PreCommit-YARN-Build/9685/artifact/patchprocess/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-nodemanager-jdk1.8.0_60.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-YARN-Build/9685/artifact/patchprocess/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-nodemanager-jdk1.8.0_60.txt |
| JDK v1.7.0_79  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/9685/testReport/ |
| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager |
| Max memory used | 229MB |
| Powered by | Apache Yetus   http://yetus.apache.org |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/9685/console |


This message was automatically generated.

, +1, patch LGTM, +1

Thanks Jason for catching and fixing this.

I also verified that the new test ({{TestLocalResourcesTrackerImpl#testReleaseWhileDownloading}}) passes with the fix and NPEs without it.

And, I ran {{TestResourceLocalizationService}} (the above test that is failing) in my local build environment and it passes for me., [~jlowe] Nice catch.+1 (non-binding)., +1. Patch LGTM. Will commit it shortly.
bq. Looks like this can cause nodemanagers to crash as well.
To make NM more robust, I think we should tolerate this kind of failure/exception in LocalResourcesTracker rather than making NM's dispatch to crash and exit. May be we can make LocalResourcesTracker have a separated AsyncDispatcher to set "DISPATCHER_EXIT_ON_ERROR_KEY" to false like what we do in RM for SchedulerEventDispatcher?, FAILURE: Integrated in Hadoop-trunk-Commit #8805 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/8805/])
YARN-4354. Public resource localization fails with NPE. Contributed by (junping_du: rev 855d52927b6115e2cfbd97a94d6c1a3ddf0e94bb)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/TestResourceLocalizationService.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/TestLocalResourcesTrackerImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalResourcesTrackerImpl.java
* hadoop-yarn-project/CHANGES.txt
, I have commit the 002 patch to trunk, branch-2 and branch-2.7. Thanks [~jlowe] for patch and Varun, Brahma and Eric for review!, FAILURE: Integrated in Hadoop-Yarn-trunk #1404 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/1404/])
YARN-4354. Public resource localization fails with NPE. Contributed by (junping_du: rev 855d52927b6115e2cfbd97a94d6c1a3ddf0e94bb)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/TestResourceLocalizationService.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalResourcesTrackerImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/TestLocalResourcesTrackerImpl.java
* hadoop-yarn-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #668 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/668/])
YARN-4354. Public resource localization fails with NPE. Contributed by (junping_du: rev 855d52927b6115e2cfbd97a94d6c1a3ddf0e94bb)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/TestLocalResourcesTrackerImpl.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalResourcesTrackerImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/TestResourceLocalizationService.java
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #680 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/680/])
YARN-4354. Public resource localization fails with NPE. Contributed by (junping_du: rev 855d52927b6115e2cfbd97a94d6c1a3ddf0e94bb)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/TestResourceLocalizationService.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalResourcesTrackerImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/TestLocalResourcesTrackerImpl.java
* hadoop-yarn-project/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #2609 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2609/])
YARN-4354. Public resource localization fails with NPE. Contributed by (junping_du: rev 855d52927b6115e2cfbd97a94d6c1a3ddf0e94bb)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/TestResourceLocalizationService.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/TestLocalResourcesTrackerImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalResourcesTrackerImpl.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #607 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/607/])
YARN-4354. Public resource localization fails with NPE. Contributed by (junping_du: rev 855d52927b6115e2cfbd97a94d6c1a3ddf0e94bb)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalResourcesTrackerImpl.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/TestResourceLocalizationService.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/TestLocalResourcesTrackerImpl.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2544 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2544/])
YARN-4354. Public resource localization fails with NPE. Contributed by (junping_du: rev 855d52927b6115e2cfbd97a94d6c1a3ddf0e94bb)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/TestResourceLocalizationService.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/TestLocalResourcesTrackerImpl.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalResourcesTrackerImpl.java
, bq. To make NM more robust, I think we should tolerate this kind of failure/exception in LocalResourcesTracker rather than making NM's dispatch to crash and exit. May be we can make LocalResourcesTracker have a separated AsyncDispatcher to set "DISPATCHER_EXIT_ON_ERROR_KEY" to false like what we do in RM for SchedulerEventDispatcher?

I don't think there's anything magical about localization vs. the other things the NM is doing.  The async dispatcher will only exit if an exception leaks up to the top, and when it does that's a programming error since it doesn't handle an exception properly.  If we're willing for NPEs in localization to not take down the NM, why are we willing to do the same if it happens in another NM subsystem that also uses the AsyncDispatcher?  IMHO we should be consistent about the unexpected exception handling., The commit to branch-2.7 broke the build because the LocalResourcesTrackerImpl constructor arguments are different than in branch-2.  Attached is the version of the patch I committed to branch-2.7., Sorry for making a mistake. I was paying more attentions to other conflicts rather than this change...
Thanks [~jlowe] for fixing this., bq. I don't think there's anything magical about localization vs. the other things the NM is doing. The async dispatcher will only exit if an exception leaks up to the top, and when it does that's a programming error since it doesn't handle an exception properly.
I agree there are no much different in overall. However, back to this case: from a user's prospective, an occasional NPE localization exception for a resource being cancelled could be better to be ignored (but get logged) rather than crash the NM. The price of ignoring the exception here could be potentially leaking file half localized (could be removed later) but the gain is the NM can be survival and keep working. We should at least provide this trade-off as a configurable choice to user. Isn't it?

bq.  If we're willing for NPEs in localization to not take down the NM, why are we willing to do the same if it happens in another NM subsystem that also uses the AsyncDispatcher? IMHO we should be consistent about the unexpected exception handling.
I am not against to keep consistent for localization event handling with other subsystems, but not sure if ignoring other exceptional events could potentially cause NM ends up in a bad state. I think that is motivation we separate SchedulerEventDispatcher from RM dispatcher for general events with different setting/behavior. No?, I committed the 2.7 patch to branch-2.7.2 as well, since it was missing from that release branch.

bq. I am not against to keep consistent for localization event handling with other subsystems, but not sure if ignoring other exceptional events could potentially cause NM ends up in a bad state.

From my perspective, any escaped exception at the Async Dispatcher level is capable of leaving the NM in a bad state.  Since it's escaped we don't know where it occurred and what we were trying to do at the time.  That's why I think it's a bit dangerous to assume the decisions we will make from that bad state are better than crashing.  Anyway if we want to do this then we should take up the discussion in a JIRA targeting that feature., Given YARN-2902 is just committed into 2.6 branch, I have cherry-pick this patch into branch-2.6 also., FAILURE: Integrated in Hadoop-trunk-Commit #9060 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/9060/])
Add YARN-2975, YARN-3893, YARN-2902 and YARN-4354 to Release 2.6.4 entry (junping_du: rev b6c9d3fab9c76b03abd664858f64a4ebf3c2bb20)
* hadoop-yarn-project/CHANGES.txt
]