[To solve this problem, we need to change the native code:
When mkdir call fails, we need to check the exception type. If the type is FileAlreadyExist, we should check whether the permission of the file is the same as the desired permission. If both of them are true, we should not fail the localization process., Wow, this wasn't the case before. Marking this regression as a blocker.

I just traced it down to YARN-2161 - we need to look at the patch again., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12675390/YARN-2701.1.patch
  against trunk revision b0d6ac9.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

        {color:red}-1 release audit{color}.  The applied patch generated 1 release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/5425//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-YARN-Build/5425//artifact/patchprocess/patchReleaseAuditProblems.txt
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/5425//console

This message is automatically generated., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12675514/YARN-2701.2.patch
  against trunk revision abae63c.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/5437//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/5437//console

This message is automatically generated., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12675514/YARN-2701.2.patch
  against trunk revision a6aa6e4.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/5438//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/5438//console

This message is automatically generated., Thanks [~xgong], [~vinodkv] Couple comments:

1. Should we check whether it is a directory before check permission at the following?
change
        if (stat(npath, &sb) == 0) {
          if (check_permission(sb.st_mode, perm) == -1) {
            fprintf(LOGFILE, "Path %s does not have desired permission.\n", npath);
            free(npath);
            return -1;
          }
        } else {
To
        if (stat(npath, &sb) == 0) {
    if (!S_ISDIR (sb.st_mode)) {
      fprintf(LOGFILE, "Path %s is file not dir\n", npath);
      free(npath);
      return -1;
     } else if (check_permission(sb.st_mode, perm) == -1) {
            fprintf(LOGFILE, "Path %s does not have desired permission.\n", npath);
            free(npath);
            return -1;
          }
        } else {

2. in the while loop:
Should we check permission after check whether it is a directory?
change
  while (NULL != (p = strchr(p, '/'))) {
    .......
    if (stat(npath, &sb) != 0) {
      .......
    } else if (!S_ISDIR (sb.st_mode)) {
      .....
    }
}
to
  while (NULL != (p = strchr(p, '/'))) {
    .......
    if (stat(npath, &sb) != 0) {
      .......
    } else if (!S_ISDIR (sb.st_mode)) {
      .....
    } else if (check_permission(sb.st_mode, perm) == -1) {
            fprintf(LOGFILE, "Path %s does not have desired permission.\n", npath);
            free(npath);
            return -1;
   }
}

3. It look like most code inside the while loop are duplicate with the code outside the while loop.
 Can we create a new function? So we can call the function from both inside the loop and outside the loop.
, Thanks for the review. Addressed all comments, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12675661/YARN-2701.3.patch
  against trunk revision 39063cd.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/5453//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/5453//console

This message is automatically generated., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12675661/YARN-2701.3.patch
  against trunk revision 39063cd.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/5454//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/5454//console

This message is automatically generated., thanks [~xgong],  I want to discuss about check_permission:

Do we need to check the directory permission?
Before YARN-2161 patch was committed, the code didn't check the permission.
{code}
   if (mkdirat(cwd, token, perm) != 0) {
      if (errno != EEXIST) {
        fprintf(LOGFILE, "Can't create directory %s in %s - %s\n", 
                token, path, strerror(errno));
        close(cwd);
        free(buffer);
        return -1;
      }
    }
{code}

If we want to check permission, Can we change the permission if the permission doesn't match?
{code}
int check_permission(char* path, mode_t filePerm, mode_t desired) {
  int filePermInt = filePerm & (S_IRWXU | S_IRWXG | S_IRWXO);
  int desiredInt = desired & (S_IRWXU | S_IRWXG | S_IRWXO);
  if (filePermInt != desiredInt) {
      if (chmod(path, desiredInt | (filePerm & (S_ISUID | S_ISGID | S_ISVTX))) != 0) {
        return -1;
    }
  }
  return 0;
}
{code}
, [~zxu] Thanks for the feedback.

bq. Do we need to check the directory permission?

I think we need. We need to make sure the directory has the right permission.

bq. If we want to check permission, Can we change the permission if the permission doesn't match?

I do not think that we need to do that. If we really want to do that, just changing the permission is not enough. We might need to go through all the sub-directories, and do some necessary checks. And it does not sound like a easy way to do it. I am thinking that we just keep it this way (check but no change the permission.). If we have further requirement, we need to spend more time to investigate it.


, Hi [~xgong], thanks for the details explanation. The explanation sounds reasonable to me. 

Some nits:
1. since we only check permission for the final directory component,
I think we also need check finalComponent in the first call check_permission.
change
{code}
        } else if (check_permission(sb.st_mode, perm) == -1) {
{code}
to
{code}
        } else if (finalComponent == 1 && check_permission(sb.st_mode, perm) == -1) {
{code}

2. Can we create a new function check_dir to remove the duplicate code which verify the existing directory at two places?
We can also remove function check_permission by moving check_permission code into check_dir.
This is check_dir function:
{code}
int check_dir(char* npath, mode_t st_mode, mode_t desired, int finalComponent) {
    // Check whether it is a directory
    if (!S_ISDIR (st_mode)) {
      fprintf(LOGFILE, "Path %s is file not dir\n", npath);
      return -1;
   } else if (finalComponent == 1) {
  int filePermInt = st_mode & (S_IRWXU | S_IRWXG | S_IRWXO);
  int desiredInt = desired & (S_IRWXU | S_IRWXG | S_IRWXO);
  if (filePermInt != desiredInt) {
      fprintf(LOGFILE, "Path %s does not have desired permission.\n", npath);
      return -1;
    }
   }
   return 0;
}
{code}

3. Can we move free(npath); from create_validate_dirs to mkdirs?
It will be better to free the memory at the same function(mkdirs) which allocated the memory.
in mkdirs 
{code}
if (create_validate_dirs(npath, perm, path, 0) == -1) {
      free(npath);
       return -1;
     }
{code}

4. a little more optimization to remove redundant code:
we can merge these two piece of code:
        fprintf(LOGFILE, "Can't create directory %s in %s - %s\n", npath,
                path, strerror(errno));
by 
if (errno != EEXIST || stat(npath, &sb) != 0) {

The code after change will be like the following: 
{code}
int create_validate_dir(char* npath, mode_t perm, char* path, int finalComponent) {
  struct stat sb;
  if (stat(npath, &sb) != 0) {
    if (mkdir(npath, perm) != 0) {
      if (errno != EEXIST  || stat(npath, &sb) != 0) {
        fprintf(LOGFILE, "Can't create directory %s in %s - %s\n", npath,
                path, strerror(errno));
        return -1;
      }
      // The directory npath should exist.
      if (check_dir(npath, sb.st_mode, perm, finalComponent) == -1) {
          return -1;
       }
    }
  } else if(check_dir(npath, sb.st_mode, perm, finalComponent) == -1){
      return -1;
  }
  return 0;
}
{code}

5. Can we change the name create_validate_dirs to create_validate_dir? since we only create one directory in create_validate_dirs., addressed all comments, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12675954/YARN-2701.4.patch
  against trunk revision e90718f.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/5470//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/5470//console

This message is automatically generated., thanks [~xgong], the latest patch looks most good to me, Just one typo in function check_dir:
"return 0;" should be outside the inner "}".
change:
{code}
    return -1;
    }
    return 0;
  }
}
{code}
to
{code}
    return -1;
    }
  }
  return 0;
}
{code}, Good catch.... Fixed, thanks [~xgong], The latest patch LGTM., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12675971/YARN-2701.5.patch
  against trunk revision e90718f.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/5473//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/5473//console

This message is automatically generated., Had some off line discussion with [~jianhan]. We think that for now, reverting the previous method changes might be the safest way to solve this issue.

Uploaded a new patch to do it, Sorry. Online discussion with [~jianhe].  And thanks for the review. [~zxu], since the previous method has been used/tested thoroughly, I also prefer reverting the patch for solving the problem for now. thanks [~zxu] for reviewing the previous patch !, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12675996/YARN-2701.6.patch
  against trunk revision e90718f.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/5476//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/5476//console

This message is automatically generated., +1, thanks [~jianhe], The latest patch LGTM., FAILURE: Integrated in Hadoop-trunk-Commit #6297 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6297/])
YARN-2701. Potential race condition in startLocalizer when using LinuxContainerExecutor. Contributed by Xuan Gong (jianhe: rev 2839365f230165222f63129979ea82ada79ec56e)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/impl/container-executor.c
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/TestLinuxContainerExecutor.java
Missing file for YARN-2701 (jianhe: rev 4fa1fb3193bf39fcb1bd7f8f8391a78f69c3c302)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/MockContainerLocalizer.java
, Committed to trunk, brach-2, and branch-2.6.  thanks Xuan ! And thanks [~zxu] for reviewing the patch !, Why exactly was this rushed?  The OS X native code build is now broken again., FWIW, I've re-opened this JIRA because I'm -1 on the suggested code fix.  It was clearly done for patch expediency reasons rather than a proper fix., SUCCESS: Integrated in Hadoop-Yarn-trunk #719 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/719/])
YARN-2701. Potential race condition in startLocalizer when using LinuxContainerExecutor. Contributed by Xuan Gong (jianhe: rev 2839365f230165222f63129979ea82ada79ec56e)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/TestLinuxContainerExecutor.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/impl/container-executor.c
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java
Missing file for YARN-2701 (jianhe: rev 4fa1fb3193bf39fcb1bd7f8f8391a78f69c3c302)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/MockContainerLocalizer.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1908 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1908/])
YARN-2701. Potential race condition in startLocalizer when using LinuxContainerExecutor. Contributed by Xuan Gong (jianhe: rev 2839365f230165222f63129979ea82ada79ec56e)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/TestLinuxContainerExecutor.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/impl/container-executor.c
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java
Missing file for YARN-2701 (jianhe: rev 4fa1fb3193bf39fcb1bd7f8f8391a78f69c3c302)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/MockContainerLocalizer.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1933 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1933/])
YARN-2701. Potential race condition in startLocalizer when using LinuxContainerExecutor. Contributed by Xuan Gong (jianhe: rev 2839365f230165222f63129979ea82ada79ec56e)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/impl/container-executor.c
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/TestLinuxContainerExecutor.java
* hadoop-yarn-project/CHANGES.txt
Missing file for YARN-2701 (jianhe: rev 4fa1fb3193bf39fcb1bd7f8f8391a78f69c3c302)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/MockContainerLocalizer.java
, 
So let's summarize the current situation:

* previous code had a potential race condition. this is bad.
* reverting the code broke the portability for OSes that don't yet support the relatively new \*at routines.  this is equally bad, as it breaks a significant segment of the developer community.

There is a middle ground here that solves both of these problems:  introduce \*at routines as a compile-time dependency.  We should be able to detect if the current libc has mkdirat, opendirat, etc and, if not, compile our own in from sources like Free/Net/OpenBSD's implementation. 

Let's revert the revert, then build a new patch that does the above., [~aw] Thanks for the summary. Let us not revert the current code. I uploaded an addendum patch. In this patch, I revert the current mkdirs codes to the codes which were committed in YARN-2161. Also I made some necessary changes to solve the race condition issue. If you can review it, that will be very helpful.

 , One nit in the addendum patch:
Can we change
{code}
  if (stat(path, &sb) == 0) {
    if (check_dir(path, sb.st_mode, perm, 1) == -1) {
      return -1;
    }
    return 0;
  }
{code}
to
{code}
  if (stat(path, &sb) == 0) {
    return check_dir(path, sb.st_mode, perm, 1);
  }
{code}, [~zxu] Thanks for reviewing this patch again. New patch addressed your comment., [~aw] Do you have any other comments for this patch ?, Hi Xuan Gong, thank for the patch. Path lgtm, just some indent issue in check_dir definition., Thanks for the review. [~decster].

Uploaded a new patch to fix format issue., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12676533/YARN-2701.addendum.3.patch
  against trunk revision d71d40a.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/5517//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/5517//console

This message is automatically generated., lgtm too, thanks Binglin and Zhihai for reviewing the patch , I'm blowing an error:

{code}
container-executor.c:458:12: warning: implicit declaration of function 'check_dir' is invalid in C99 [-Wimplicit-function-declaration]
     [exec]     return check_dir(path, sb.st_mode, perm, 1);
{code}

I'll see if I can track down where this is coming from., I think the warning is because we should add definition of the function prototype at the front of the file or in a header file:
int check_dir(char* npath, mode_t st_mode, mode_t desired, int finalComponent);
int create_validate_dir(char* npath, mode_t perm, char* path, int finalComponent);

So when these functions are called, the function prototype can be found.
, Sorry, I copied the wrong message, but yes, I think the one I'm actually blowing is the same cause/effect.  We should probably just move the functions up near the top rather than put a prototype., so, how about moving the function declarations into container-executor.h file?  Looks like most of functions in container-executor.c are using this pattern., OK, a simple test I did moved these functions near the top and the compile errors go away. 

The new compiler shipped this week as part of the Yosemite launch\-\-Apple LLVM version 6.0 (clang-600.0.54) (based on LLVM 3.5svn)]\-\-points out some other potential issues in the form of warnings, but we can deal with those separately., move function declarations into container-executor.h, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12677055/YARN-2701.addendum.4.patch
  against trunk revision 683897f.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/5555//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/5555//console

This message is automatically generated., [~aw] Do you have any other comments ?, OK, this compiled without incident, so I'm +1 now.  Thanks!, Thanks for the reviews. Will commit it once Jenkins give +1, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12677055/YARN-2701.addendum.4.patch
  against trunk revision f1a149e.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/5664//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/5664//console

This message is automatically generated., FAILURE: Integrated in Hadoop-trunk-Commit #6413 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6413/])
YARN-2701. Addendum patch. Potential race condition in startLocalizer when using LinuxContainerExecutor. Contributed by Xuan Gong (xgong: rev 86ff28dea09037795f9a76d1712d741d04e33bfe)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/impl/container-executor.h
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/impl/container-executor.c
, Committed to trunk/branch-2/branch-2.6. Thanks for the review., SUCCESS: Integrated in Hadoop-Yarn-trunk #730 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/730/])
YARN-2701. Addendum patch. Potential race condition in startLocalizer when using LinuxContainerExecutor. Contributed by Xuan Gong (xgong: rev 86ff28dea09037795f9a76d1712d741d04e33bfe)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/impl/container-executor.c
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/impl/container-executor.h
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1919 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1919/])
YARN-2701. Addendum patch. Potential race condition in startLocalizer when using LinuxContainerExecutor. Contributed by Xuan Gong (xgong: rev 86ff28dea09037795f9a76d1712d741d04e33bfe)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/impl/container-executor.h
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/impl/container-executor.c
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1944 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1944/])
YARN-2701. Addendum patch. Potential race condition in startLocalizer when using LinuxContainerExecutor. Contributed by Xuan Gong (xgong: rev 86ff28dea09037795f9a76d1712d741d04e33bfe)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/impl/container-executor.h
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/impl/container-executor.c
]