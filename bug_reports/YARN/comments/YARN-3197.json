[{code:xml}
  protected synchronized void completedContainer(RMContainer rmContainer,
      ContainerStatus containerStatus, RMContainerEventType event) {
    if (rmContainer == null) {
      LOG.info("Null container completed...");
      return;
    }
{code}

Here this log can be updated with containerId from ContainerStatus along with the some meaningful message.
, Yes, will do that. Thanks [~devaraj.k] for the suggestion., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12699282/YARN-3197.001.patch
  against trunk revision f0412de.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 5 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:

                  org.apache.hadoop.yarn.server.resourcemanager.recovery.TestFSRMStateStore

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/6651//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-YARN-Build/6651//artifact/patchprocess/newPatchFindbugsWarningshadoop-yarn-server-resourcemanager.html
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/6651//console

This message is automatically generated., It would be better if the log level changed to DEBUG. In NM restart, these messages are very huge, Thanks [~varun_saxena] for patch and [~rohithsharma] for comment.

{code:xml}
+          + "] of unknown application completed with event " + event);
{code}
Here 'unknown application' may not be appropriate always. Instead can we think of logging like '"Unknown container " + containerStatus.getContainerId() + " completed with event " + event'.


bq. It would be better if the log level changed to DEBUG. In NM restart, these messages are very huge
Do you see any other info logs coming for the same container? IMO, it should have at least one info log about this container status update from NM, after NM restart.
, Hmm...But we do have Container ID. Would it be right to say Unknown container if we are printing ContainerID ? 
We do not know the Application ID however., rmContainer could be null when SchedulerApplicationAttempt is null or liveContainers doesn't have the container info. There could be a chance of ApplicationAttempt is running and container has already completed(removed from liveContainers). Here we cannot say unknown application.

I have mentioned 'Unknown container' because RM has removed this container info and doesn't know about this container any more. Do you see any better message here?
, I think it's better not saying 

{code}
1276	      LOG.info("Container [ContainerId: " + containerStatus.getContainerId()
1277	          + "] of unknown application completed with event " + event);
{code}

Since we have containerId within containerStatus, it's better to indicate we cannot get RMContainer since the attempt probably is already completed, I suggest print both containerId and applicationId out.\

I think INFO could be fine since it will be at most once for each container.

And a logging below is also confusing:
{code}
    if (application == null) {
      LOG.info("Container " + container + " of" + " unknown application "
          + appId + " completed with event " + event);
      return;
    }
{code}

If a RM can get RMContainer, the application will definitely not "unknown", should indicate the application may be completed as well., bq. Do you see any other info logs coming for the same container?
No information about container. Its only above log message will be printed., bq. I think INFO could be fine since it will be at most once for each container.
I agree this log message is most once for  each containers But IIUC, the above log message would not help to analyze any issue in cluster rather it is just only information. This would come because NodeManger may be delayed in identifying container has finished and sending its status. 

Consider NM restart , NM recovers all the containers and sends all the container status(running and completed) while registering. But application already would have completed and scheduler prints above message which is not really required. It just fills log files. 
May be above scenario can be considered for changing log level to DEBUG., Yes. Remark from [~rohithsharma] make sense.
I also came across scenarios where NM was slightly delayed in reporting its status, and application completed in mean time. Lots of this log will be printed on that time. 
, [~devaraj.k] and others,
I meant printing unknown container or unknown application while printing their respective IDs' might be deemed as confusing by some too.
Cant we say something "Non-alive container <containerid> ...." ?

AppID can probably be printed from ContainerID.
Thoughts ?, I am not completely convinced to change the log level to debug, even if there are many logs those would be one log per container. If we change the log level to debug then we would be missing the update of those containers after NM restart in the usual cases where the log level is Info. And also there is a debug log in the caller method would probably serve the same and (rmContainer == null) {} log wouldn't be required if you have decided to make the log level as debug.

{code:xml}
LOG.debug("Container FINISHED: " + containerId);
{code}


IMO, we don't need to explicitly derive and print the application id from container id, just logging container id would be enough and user can derive application id from it if they really want.
, [~devaraj.k]
Agree that making only log associated with Null container completion as DEBUG doesnt seem right

So what do you think ? Should I print "Unknown container" or "Non-alive container" ?, I would be ok for anyone, better you can add both of them like below.

"Unknown or non-alive container " + containerId + " completed with ...."
, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12699909/YARN-3197.002.patch
  against trunk revision c33ae27.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 5 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/6684//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-YARN-Build/6684//artifact/patchprocess/newPatchFindbugsWarningshadoop-yarn-server-resourcemanager.html
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/6684//console

This message is automatically generated., I think "non-alive container" is not correct, since all completed containers reported from NM are "non-alive", I suggest better saying {{containerId="xx" completed with status=yyy from completed or unknown application id="zzz"}}.

And I suggest to improve following log a little bit as I suggested:
https://issues.apache.org/jira/browse/YARN-3197?focusedCommentId=14326344&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14326344

{{If a RM can get RMContainer, the application will definitely not "unknown", should indicate the application may be completed as well.}}, Hmm...Non-alive was to indicate that its not found in aliveContainers in SchedulerApplicationAttempt., If so, you should indicate this container cannot be found in aliveContainers of SchedulerApplicationAttempt to be more clear., [~leftnoteasy],
Thought so initially but that was making log too verbose. Maybe can do that to avoid confusion.
Moreover, I think there should be some differentiation between the log where container is null and the one where application is null.
I think we can say
"Container xxx completed with state yyy but was not found in alive containers map"
Thoughts ?

Any need to mention the application ID ? That can be derived from container ID. Right ?

Other log I will change as you suggested.
 , Hi [~varun_saxena],
Thanks for reply, I still prefer my suggestion :).

Since the "alive containers map" is too detailed, nobody can understand it unless read RM code.

Yes application ID can be derived, but user has to translate it, I suggest to print it out directly, when doing log debug, we can just copy and search it in logs, that is why I suggest to include app-Id.

Does this make sense to you?, [~leftnoteasy], if I change the log like this, there will be no difference between logs for container being null and application being null. Is that fine ?
[~devaraj.k], your thoughts on this., There's one difference, when container id and app id is null, it is
{{containerId="xx" completed with status=yyy from completed or unknown application id="zzz"}}

And when RMContainer is not null, but cannot find app id, it should be:
{{containerId="xx" completed with status=yyy from completed application id="zzz"}}.

The 2nd one's application shouldn't be indicated as "unknown", {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12700831/YARN-3197.003.patch
  against trunk revision 5731c0e.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 5 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/6740//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-YARN-Build/6740//artifact/patchprocess/newPatchFindbugsWarningshadoop-yarn-server-resourcemanager.html
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/6740//console

This message is automatically generated., You can infer ApplicationID from the ContainerID, so need for printing both., I guess you mean no need for printing both., Will change it back then. AppId was added to aid in quicker debugging , Patch looks good to me, I'm OK with both with/without the appId., Yeah, I meant no need for printing both., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12704829/YARN-3197.004.patch
  against trunk revision ed4e72a.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/6978//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/6978//console

This message is automatically generated., +1, latest patch looks good to me, will commit it shortly., Committed to trunk and branch-2.

Thanks [~varun_saxena] for patch and [~leftnoteasy] for review and discussion., Thanks [~devaraj.k] for the commit and review. [~leftnoteasy] and [~vinodkv], thanks for your comments.
, FAILURE: Integrated in Hadoop-trunk-Commit #7347 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7347/])
YARN-3197. Confusing log generated by CapacityScheduler. Contributed by (devaraj: rev 7179f94f9d000fc52bd9ce5aa9741aba97ec3ee8)
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #126 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/126/])
YARN-3197. Confusing log generated by CapacityScheduler. Contributed by (devaraj: rev 7179f94f9d000fc52bd9ce5aa9741aba97ec3ee8)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java
* hadoop-yarn-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2067 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2067/])
YARN-3197. Confusing log generated by CapacityScheduler. Contributed by (devaraj: rev 7179f94f9d000fc52bd9ce5aa9741aba97ec3ee8)
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #135 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/135/])
YARN-3197. Confusing log generated by CapacityScheduler. Contributed by (devaraj: rev 7179f94f9d000fc52bd9ce5aa9741aba97ec3ee8)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java
* hadoop-yarn-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2085 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2085/])
YARN-3197. Confusing log generated by CapacityScheduler. Contributed by (devaraj: rev 7179f94f9d000fc52bd9ce5aa9741aba97ec3ee8)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java
* hadoop-yarn-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #136 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/136/])
YARN-3197. Confusing log generated by CapacityScheduler. Contributed by (devaraj: rev 7179f94f9d000fc52bd9ce5aa9741aba97ec3ee8)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java
* hadoop-yarn-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Yarn-trunk #870 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/870/])
YARN-3197. Confusing log generated by CapacityScheduler. Contributed by (devaraj: rev 7179f94f9d000fc52bd9ce5aa9741aba97ec3ee8)
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java
]