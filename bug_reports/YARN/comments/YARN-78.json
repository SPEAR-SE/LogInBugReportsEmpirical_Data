[
Client stop code in this patch is currently commented out until YARN-79 is fixed., Attaching the patch that does the refactor. Existing test for UnmanagedAMLauncher pass. No new tests added., This looks good, +1. Will push the changes after YARN-79 goes in., Ahm, going back on this one. May be it is better to make UnmanagedAMLauncher extend YarnClientImpl instead of composing it. That way the launcher itself can also be a service that be started/stopped etc. For example, with the current code/patch, you will have to trap all exceptions in {{run()}} and make sure that the client connection is closed correctly.

Thoughts?, I had given a thought to this and decided not to do it. This is because I see the launcher evolve from being just a client to the RM. I uses the client-RM  protocol to negotiate app launch but then goes on to provide more functionality - eg launching the actual app locally. More can be added later. So I view the client-AM functionality as something used by the launcher and so I included it as a member object that provides the functionality., Makes sense.

But you still need to fix the run() method to make sure client is stopped correctly. I think instead of my earlier suggestion of extending YarnClientImpl, implementing Service is better for you since you can then shut down client as part of {{stop()}} and create it as part of {{start()}}., YARN-83 is in. Can you please update the patch addressing the above comment? Tx., I have updated the patch to now call stop() and existing test now works. Implementing Service is a good suggestion but I am holding back on that. Service interface implies existence of certain service states which AMLauncher is not satisfying. Also, there are a number of other interface functions like register etc which dont apply to AMLauncher. Going forward if this evolves from being an executable to a library that other apps build on, then it will be useful to implement the full fledged service interface like you suggest. Let me know if this sounds good to you., Like I mentioned before, there is still a bug in this patch. If any of the commands throw and error, run() will abort and the rmClient connection is not closed - a leak. You either
 - go the service way which puts the onus on the user to stop the launcher explicitly or
 - need to put all of the run() code in a try{} block and close the connection in a finally block., ah. that motivation wasnt clear to me earlier., Attaching patch with try finally combo., Looks good now. +1. Kicking Jenkins., Jenkins is rejecting the patch with a javac warning. Can you please take a look? See https://builds.apache.org/view/Hadoop/job/PreCommit-YARN-Build/34/console., Fixing pom dependency that wasnt exposed until I did a clean install build., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12544673/YARN-78.4.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-unmanaged-am-launcher.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/35//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/35//console

This message is automatically generated., +1.

I just committed this to trunk and branch-2. Thanks Bikas!, Integrated in Hadoop-Hdfs-trunk-Commit #2784 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Commit/2784/])
    YARN-78. Changed UnManagedAM application to use YarnClient. Contributed by Bikas Saha. (Revision 1383705)

     Result = SUCCESS
vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1383705
Files : 
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-unmanaged-am-launcher/pom.xml
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-unmanaged-am-launcher/src/main/java/org/apache/hadoop/yarn/applications/unmanagedamlauncher/UnmanagedAMLauncher.java
, Integrated in Hadoop-Common-trunk-Commit #2721 (See [https://builds.apache.org/job/Hadoop-Common-trunk-Commit/2721/])
    YARN-78. Changed UnManagedAM application to use YarnClient. Contributed by Bikas Saha. (Revision 1383705)

     Result = SUCCESS
vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1383705
Files : 
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-unmanaged-am-launcher/pom.xml
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-unmanaged-am-launcher/src/main/java/org/apache/hadoop/yarn/applications/unmanagedamlauncher/UnmanagedAMLauncher.java
, Integrated in Hadoop-Mapreduce-trunk-Commit #2745 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Commit/2745/])
    YARN-78. Changed UnManagedAM application to use YarnClient. Contributed by Bikas Saha. (Revision 1383705)

     Result = FAILURE
vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1383705
Files : 
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-unmanaged-am-launcher/pom.xml
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-unmanaged-am-launcher/src/main/java/org/apache/hadoop/yarn/applications/unmanagedamlauncher/UnmanagedAMLauncher.java
, Integrated in Hadoop-Hdfs-trunk #1163 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1163/])
    YARN-78. Changed UnManagedAM application to use YarnClient. Contributed by Bikas Saha. (Revision 1383705)

     Result = FAILURE
vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1383705
Files : 
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-unmanaged-am-launcher/pom.xml
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-unmanaged-am-launcher/src/main/java/org/apache/hadoop/yarn/applications/unmanagedamlauncher/UnmanagedAMLauncher.java
, Integrated in Hadoop-Mapreduce-trunk #1194 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1194/])
    YARN-78. Changed UnManagedAM application to use YarnClient. Contributed by Bikas Saha. (Revision 1383705)

     Result = SUCCESS
vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1383705
Files : 
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-unmanaged-am-launcher/pom.xml
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-unmanaged-am-launcher/src/main/java/org/apache/hadoop/yarn/applications/unmanagedamlauncher/UnmanagedAMLauncher.java
]