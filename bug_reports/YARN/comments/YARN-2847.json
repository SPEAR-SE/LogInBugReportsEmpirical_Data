[The problem is in this code:

{code}
  char **banned_users = get_values(BANNED_USERS_KEY);
  char **banned_user = (banned_users == NULL) ? 
    (char**) DEFAULT_BANNED_USERS : banned_users;
  for(; *banned_user; ++banned_user) {
    if (strcmp(*banned_user, user) == 0) {
      free(user_info);
      if (banned_users != (char**)DEFAULT_BANNED_USERS) {
        free_values(banned_users);
      }
      fprintf(LOGFILE, "Requested user %s is banned\n", user);
      return NULL;
    }
  }
  if (banned_users != NULL && banned_users != (char**)DEFAULT_BANNED_USERS) {
    free_values(banned_users);
  }
{code}

Note that in one case we check for banned_users != NULL and != DEFAULT_BANNED_USERS but in another case we're missing the NULL check.

Lots of ways to fix it:

- free_values could check for NULL
- banned_users could always be non-NULL (i.e.: set it to DEFAULT_BANNED_USERS if get_values returns NULL)
- add check for != NULL before calling free_values, patch with no test, Will the second solution(set it to DEFAULT_BANNED_USERS if get_values returns NULL) be better?
With second solution, we needn't check null and we only need check DEFAULT_BANNED_USERS before calling free_values., patch contains fix and unit test, also change the fix in the way recommended by @zhihai xu , latest patch, previous one has a minor comment error, Thanks for the fix, [~lichangleo]. There are some unnecessary changes in the latest patch, the blanks.
And for the testcase, do we really need the testcase for this fix, given that the testcase requires mapred user., The latest patch seems to have the logic backwards and references the value being initially set in the trinary operator which isn't good (use before set):

{code}
  char **banned_users = get_values(BANNED_USERS_KEY) ? 
     (char**) DEFAULT_BANNED_USERS : banned_users;
{code}

Also the extraneous whitespace changes per Wei's comments should be addressed., Merged test from YARN-3810, cleaned up whitespace errors. Ready for review., Oops fix not correct
, PATCH from YARN-3180 does not use uninitialized variable, please review, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12698521/YARN-2487.05.trunk.patch
  against trunk revision 58cb9f5.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:red}-1 eclipse:eclipse{color}.  The patch failed to build with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/6623//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/6623//console

This message is automatically generated., The eclipse:eclipse test trips over the Test from [~Chang Li] . The required user "mapred" does not exit. Do we need this test anyway? I added a test in the C Part of the patch., Agree the extra test in TestLinuxContainerExecutor is not needed and more restrictive since it requires a mapred user to exist.  [~oflebbe] would you mind updating the patch?  Otherwise patch looks good to me., Removed Test from the JAVA part of the code, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12698773/YARN-2487.06.trunk.patch
  against trunk revision ba3c80a.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/6636//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/6636//console

This message is automatically generated., +1 lgtm.  Committing this., Thanks, Olaf!  I committed this to trunk and branch-2., FAILURE: Integrated in Hadoop-trunk-Commit #7106 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7106/])
YARN-2847. Linux native container executor segfaults if default banned user detected. Contributed by Olaf Flebbe (jlowe: rev 1a0f508b6386b1c26ec606f6d73afddaa191b7d8)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/test/test-container-executor.c
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/impl/container-executor.c
* hadoop-yarn-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #104 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/104/])
YARN-2847. Linux native container executor segfaults if default banned user detected. Contributed by Olaf Flebbe (jlowe: rev 1a0f508b6386b1c26ec606f6d73afddaa191b7d8)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/impl/container-executor.c
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/test/test-container-executor.c
* hadoop-yarn-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Yarn-trunk #838 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/838/])
YARN-2847. Linux native container executor segfaults if default banned user detected. Contributed by Olaf Flebbe (jlowe: rev 1a0f508b6386b1c26ec606f6d73afddaa191b7d8)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/impl/container-executor.c
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/test/test-container-executor.c
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2036 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2036/])
YARN-2847. Linux native container executor segfaults if default banned user detected. Contributed by Olaf Flebbe (jlowe: rev 1a0f508b6386b1c26ec606f6d73afddaa191b7d8)
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/impl/container-executor.c
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/test/test-container-executor.c
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #105 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/105/])
YARN-2847. Linux native container executor segfaults if default banned user detected. Contributed by Olaf Flebbe (jlowe: rev 1a0f508b6386b1c26ec606f6d73afddaa191b7d8)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/impl/container-executor.c
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/test/test-container-executor.c
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2055 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2055/])
YARN-2847. Linux native container executor segfaults if default banned user detected. Contributed by Olaf Flebbe (jlowe: rev 1a0f508b6386b1c26ec606f6d73afddaa191b7d8)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/impl/container-executor.c
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/test/test-container-executor.c
, SUCCESS: Integrated in Hadoop-Hdfs-trunk-Java8 #97 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/97/])
YARN-2847. Linux native container executor segfaults if default banned user detected. Contributed by Olaf Flebbe (jlowe: rev 1a0f508b6386b1c26ec606f6d73afddaa191b7d8)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/impl/container-executor.c
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/test/test-container-executor.c
* hadoop-yarn-project/CHANGES.txt
]