[\\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  17m 43s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:red}-1{color} | javac |   9m  9s | The applied patch generated  6  additional warning messages. |
| {color:green}+1{color} | javadoc |  11m 16s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 30s | The applied patch does not increase the total number of release audit warnings. |
| {color:red}-1{color} | checkstyle |   0m 55s | The applied patch generated  3 new checkstyle issues (total was 53, now 55). |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   2m 12s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 39s | The patch built with eclipse:eclipse. |
| {color:red}-1{color} | findbugs |   1m 48s | The patch appears to introduce 1 new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | yarn tests |  51m 54s | Tests passed in hadoop-yarn-server-resourcemanager. |
| | |  96m 10s | |
\\
\\
|| Reason || Tests ||
| FindBugs | module:hadoop-yarn-server-resourcemanager |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12735991/YARN-3508.01.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 9acd24f |
| javac | https://builds.apache.org/job/PreCommit-YARN-Build/8120/artifact/patchprocess/diffJavacWarnings.txt |
| checkstyle |  https://builds.apache.org/job/PreCommit-YARN-Build/8120/artifact/patchprocess/diffcheckstylehadoop-yarn-server-resourcemanager.txt |
| Findbugs warnings | https://builds.apache.org/job/PreCommit-YARN-Build/8120/artifact/patchprocess/newPatchFindbugsWarningshadoop-yarn-server-resourcemanager.html |
| hadoop-yarn-server-resourcemanager test log | https://builds.apache.org/job/PreCommit-YARN-Build/8120/artifact/patchprocess/testrun_hadoop-yarn-server-resourcemanager.txt |
| Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/8120/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf903.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/8120/console |


This message was automatically generated., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  16m 14s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | javac |   7m 35s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 35s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:red}-1{color} | checkstyle |   0m 50s | The applied patch generated  1 new checkstyle issues (total was 53, now 53). |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 36s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 35s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   1m 27s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | yarn tests |  50m 38s | Tests passed in hadoop-yarn-server-resourcemanager. |
| | |  89m  2s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12736323/YARN-3508.02.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / eb6bf91 |
| checkstyle |  https://builds.apache.org/job/PreCommit-YARN-Build/8137/artifact/patchprocess/diffcheckstylehadoop-yarn-server-resourcemanager.txt |
| hadoop-yarn-server-resourcemanager test log | https://builds.apache.org/job/PreCommit-YARN-Build/8137/artifact/patchprocess/testrun_hadoop-yarn-server-resourcemanager.txt |
| Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/8137/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf907.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/8137/console |


This message was automatically generated., Checkstyle is showing incorrect result it seems. There were 53 checkstyle issues, both, before and after the patch., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  15m 56s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | javac |   7m 35s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 36s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:red}-1{color} | checkstyle |   0m 46s | The applied patch generated  1 new checkstyle issues (total was 53, now 53). |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 36s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 32s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   1m 25s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | yarn tests |  50m 24s | Tests passed in hadoop-yarn-server-resourcemanager. |
| | |  88m 15s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12736416/YARN-3508.002.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / da05361 |
| checkstyle |  https://builds.apache.org/job/PreCommit-YARN-Build/8145/artifact/patchprocess/diffcheckstylehadoop-yarn-server-resourcemanager.txt |
| hadoop-yarn-server-resourcemanager test log | https://builds.apache.org/job/PreCommit-YARN-Build/8145/artifact/patchprocess/testrun_hadoop-yarn-server-resourcemanager.txt |
| Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/8145/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf905.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/8145/console |


This message was automatically generated., Trying to better understand this problem: I'm not sure where is bottleneck. If CapacityScheduler becomes bottleneck, move preemption events out of main RM dispatcher doesn't help. This approach only helps when main dispatcher is bottleneck.

And a parallel thing we can do is to optimize number of preemption event. Currently, if a container sits in to-preempt list, before it is get preempted, one event will be sent to scheduler for every few seconds, we can reduce frequency of this event., Yes, it's not a cure-all to move the preemption processing to the scheduler event queue when the scheduler is the bottleneck, but we do have separate event queues for a reason.  If it didn't matter who was the bottleneck then we'd just have one event queue for everything, correct?  The scheduler event queue is primarily blocked by the big scheduler lock, and IMHO we should dispatch events that need that lock to that queue.  Doing otherwise starts to couple the two event dispatchers together and we might as well just have the one event queue to rule them all., I think this make sense to move preemption events from main dispatcher to the scheduler dispatcher. Otherwise, any non-scheduler events on main dispatcher will be waiting for the preemption events to grab the scheduler lock, which is unnecessary. , Just to clarify, in the implementation I have spawned a new preemption dispatcher thread instead of posting preemption events to scheduler dispatcher.
This is because IMHO container preemption events should have priority over scheduler events. This approach though would make this one extra thread contending for scheduler lock.

Another approach though would be to post events preemption events to scheduler dispatcher. And have a {{LinkedBlockingDeque}} for storing events instead. This way preemption events can be posted to front of queue. However, linked blocking deque uses a single lock for put and take operations whereas linked blocking queue uses 2 different locks for these 2 operations making the latter better from a performance viewpoint.

[~jlowe], [~jianhe], [~leftnoteasy], thoughts on the approaches mentioned above ?, The problem I see in the clubbing with scheduler events is if there is many scheduler events already in the event queue then it delays pre-emption events to trigger. As [~varun_saxena] said, container preemption events should be considered as higher priority than scheduler events. Having separate event disaptcher for preemptiong events would allow preemption events to participate in obtaining the lock in--earlier--stages rather then waiting for scheuduler events queue to complete.  I think current patch approach make sense to me i.e having individual dispatcher thread for preemption events. , [~jlowe]/[~jianhe]/[~leftnoteasy]/[~rohithsharma], can one of the commiters have a look at this ? :), I tent to support [~jlowe] and [~jianhe]'s suggestion, make preemption events directly goes to scheduler event queue.

I think we cannot assume preemption events have higher priority than other events, in most cases, preemption events are just notify AM about something will happen. And manage two queues for scheduler can be complex, how to balance them, etc. To reduce complex, I suggest to only maintain one queue for scheduler until we have to., [~leftnoteasy], ok if thats the consensus, I will do so., Moving out all non-critical / non-blocker issues that didn't make it out of 2.7.1 into 2.7.2., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  19m 27s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 3 new or modified test files. |
| {color:green}+1{color} | javac |   8m  6s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |  10m  6s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 24s | The applied patch does not increase the total number of release audit warnings. |
| {color:red}-1{color} | checkstyle |   0m 49s | The applied patch generated  7 new checkstyle issues (total was 248, now 251). |
| {color:green}+1{color} | whitespace |   0m  1s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 37s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 34s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   1m 29s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:red}-1{color} | yarn tests |  46m 45s | Tests failed in hadoop-yarn-server-resourcemanager. |
| | |  89m 23s | |
\\
\\
|| Reason || Tests ||
| Failed unit tests | hadoop.yarn.server.resourcemanager.TestApplicationCleanup |
|   | hadoop.yarn.server.resourcemanager.TestWorkPreservingRMRestart |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12742567/YARN-3508.03.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 2ffd842 |
| checkstyle |  https://builds.apache.org/job/PreCommit-YARN-Build/8377/artifact/patchprocess/diffcheckstylehadoop-yarn-server-resourcemanager.txt |
| hadoop-yarn-server-resourcemanager test log | https://builds.apache.org/job/PreCommit-YARN-Build/8377/artifact/patchprocess/testrun_hadoop-yarn-server-resourcemanager.txt |
| Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/8377/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf904.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/8377/console |


This message was automatically generated., [~varun_saxena],
It seems to me this patch doesn't work as what I expected:

I think we PreemptionPolicy should directly send events to scheduler event dispatcher, so events won't go to rmDispatcher. What [~jlowe]/[~jianhe] suggested should be the same.

Now my understanding of this patch is, preemption events still go to rmDispatcher, and rmDispatcher sends events to schedulerDispatcher:

{code}
  @SuppressWarnings("unchecked")
  public void serviceInit(Configuration conf) throws Exception {
    scheduleEditPolicy.init(conf, rmContext.getDispatcher().getEventHandler(),
        (PreemptableResourceScheduler) rmContext.getScheduler());
    this.monitorInterval = scheduleEditPolicy.getMonitoringInterval();
    super.serviceInit(conf);
  }
{code}

I think one solution is exposing scheduler events dispatcher to RMContext interface, so schedulerEditPolicy can use the schedulerDispatcher do initialization.

And could you take a look at failed tests, it looks like related to the patch., [~leftnoteasy], the test failures seem unrelated. Had submitted patch again. Lets see what that gives.

bq. Now my understanding of this patch is, preemption events still go to rmDispatcher, and rmDispatcher sends events to schedulerDispatcher.
Yes, you are correct.

The issue in the JIRA is that on picking up the ContainerPreempt Event from RM Dispatcher Queue, this event is processed by the RM Dispatcher thread itself(which can block this dispatcher) instead of putting it in another dispatcher queue. This was blocking the RM Dispatcher thread because it was waiting for scheduler lock. Hence other events in the queue were getting delayed.

The current design is such that different dispatchers(based on event type) are registered to main RM Dispatcher. And RM Dispatcher then dispatches these events to appropriate registered dispatchers. Although, its an additional step(and may cost some extra processing time), I think this has been done to have a single point of contact for dispatching events across RM.

We can open an interface for posting events directly to Scheduler Events as well. That ofcourse would be faster. But then this change should be made for all the scheduler events not only container preemption events. Thoughts ?, I mean,
We can open an interface for posting events directly to Scheduler *Dispatcher* as well. , \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  16m 41s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 3 new or modified test files. |
| {color:green}+1{color} | javac |   7m 52s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |  10m  4s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:red}-1{color} | checkstyle |   0m 48s | The applied patch generated  6 new checkstyle issues (total was 248, now 250). |
| {color:green}+1{color} | whitespace |   0m  1s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 34s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 35s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   1m 27s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:red}-1{color} | yarn tests |  50m 58s | Tests failed in hadoop-yarn-server-resourcemanager. |
| | |  90m 28s | |
\\
\\
|| Reason || Tests ||
| Timed out tests | org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.TestQueueManager |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12742603/YARN-3508.04.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 8e33372 |
| checkstyle |  https://builds.apache.org/job/PreCommit-YARN-Build/8378/artifact/patchprocess/diffcheckstylehadoop-yarn-server-resourcemanager.txt |
| hadoop-yarn-server-resourcemanager test log | https://builds.apache.org/job/PreCommit-YARN-Build/8378/artifact/patchprocess/testrun_hadoop-yarn-server-resourcemanager.txt |
| Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/8378/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf904.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/8378/console |


This message was automatically generated., Thanks for explanation, [~varun_saxena].

Currently, YARN's non-preemption scheduler events are sent to central RM dispatcher and then pushed to scheduler event queue. RM dispatcher won't wait for these events to be handled, so the performance should be good.

Preemption event is different, RMContainerPreemptEventDispatcher is a synchronized dispatcher, when RMDispatcher receive these events, it will wait for these events proceeded.

My suggestion is to make {{ContainerPreemptEventType}} as a part of {{SchedulerEventType}}, and ProportionalCapacityPreemptionPolicy sends the event to {{RMDispatcher}}. So these events will be sent to SchedulerEventQueue, and not block central RMDispatcher.

Thoughts?, [~leftnoteasy], yes this is what the patch does and addresses the issue in hand. I thought you want me to put events directly to Scheduler Event Queue and hence bypass Central RM Dispatcher Queue.

Anyways just to explain, below is what I have done.
I have removed {{ContainerPreemptEventType}} and moved all these events to {{SchedulerEventType}}.
I have also removed {{RMContainerPreemptEventDispatcher}} because that processes the events synchronously as part of RMDispatcher Event Thread.

As per patch the events from {{ProportionalCapacityPreemptionPolicy}} are sent to central RM Dispatcher and as the event type is {{SchedulerEventType}}, the preemption events are sent to scheduler event queue.
Then the Scheduler Dispatcher picks up these events from scheduler event queue and call {{CapacityScheduler#handle}} which then calls the relevant method to handle different preemption events.

I added a test case too for this behavior by adding a new test class {{TestRMDispatcher}}.
, I think my comment confusing you: https://issues.apache.org/jira/browse/YARN-3508?focusedCommentId=14606576&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14606576. I was thinking yesterday that we need to directly send preemption events to scheduler event dispatcher. But if we expose scheduler event dispatcher in RMContext, more event dispatcher will be exposed in the future, that is against the reason why we have a central RM dispatcher.

You patch basically looks good, some minor comments:
- Instead of passing EventHandler<SchedulerEvent> to Proportional.., you should pass RMContext.
- Not caused by your patch, save e.getKey() to ApplicationAttemptId in containerBasedPreemptOrKill avoid multiple getKey
- Source: ProportionalCapacityPreemptionPolicy, should be {{SchedulingEditPolicy}}

Other looks good to me., bq. Instead of passing EventHandler<SchedulerEvent> to Proportional.., you should pass RMContext.
Ok, IIUC you want me to pass RMContext to ProportionalCapacityPreemptionPolicy and get event handler from there. Correct ?, Any reason you want this changed ? Even if we pass RMContext we will have to eventually get EventHandler from that because {{SchedulingEditPolicy#init}} wants that. And anyways ProportionalCapacityPreemptionPolicy constructors are used only from tests., bq. Ok, IIUC you want me to pass RMContext to ProportionalCapacityPreemptionPolicy and get event handler from there. Correct ?
Yes

bq. Any reason you want this changed?
RM components have a reference to RMContext is a convention, you can see most of RM components have RMContext. And this can avoid some future code changes if Proportional..Policy needs more information beyond dispatcher.

bq.  And anyways ProportionalCapacityPreemptionPolicy constructors are used only from tests.
Init is used by production code, I suggest to make constructor/init signature consistent., [~leftnoteasy],
bq. Init is used by production code, I suggest to make constructor/init signature consistent.
Yes {{SchedulingEditPolicy#init}} and constructor are consistent. init takes {{EventHandler}} as argument just like the constructor. Anyways I will make the change.
I will therefore, change {{SchedulingEditPolicy#init}} as well (to make it consistent with the constructor).

By the way, this is how {{SchdulingEditPolicy#init}} looked before my change.
{code}
  public void init(Configuration config, EventHandler<ContainerPreemptEvent> dispatcher, PreemptableResourceScheduler scheduler);
{code}

And this is how ProportionalCapacityPreemptionPolicy constructor looked.
{code}
   public ProportionalCapacityPreemptionPolicy(Configuration config, EventHandler<ContainerPreemptEvent> dispatcher, CapacityScheduler scheduler)
{code}
So I merely changed {{EventHandler<ContainerPreemptEvent>}} to {{EventHandler<SchedulerEvent>}} in the function signature.  

Will make the change and update patch shortly., [~leftnoteasy], updated the patch as per your comments. Kindly review., BTW, as we are passing RMContext into {{SchedulingEditPolicy#init}}, we can do away with PreemptableResourceScheduler as its parameter as well because we can get scheduler instance from RMContext as well., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  23m  5s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 3 new or modified test files. |
| {color:green}+1{color} | javac |   9m 59s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |  11m 10s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:red}-1{color} | checkstyle |   0m 51s | The applied patch generated  7 new checkstyle issues (total was 249, now 251). |
| {color:green}+1{color} | whitespace |   0m  2s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 34s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 32s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   1m 28s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:red}-1{color} | yarn tests |  48m 28s | Tests failed in hadoop-yarn-server-resourcemanager. |
| | |  97m 39s | |
\\
\\
|| Reason || Tests ||
| Failed unit tests | hadoop.yarn.server.resourcemanager.scheduler.fifo.TestFifoScheduler |
|   | hadoop.yarn.server.resourcemanager.TestRM |
| Timed out tests | org.apache.hadoop.yarn.server.resourcemanager.TestWorkPreservingRMRestart |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12742937/YARN-3508.05.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 147e020 |
| checkstyle |  https://builds.apache.org/job/PreCommit-YARN-Build/8397/artifact/patchprocess/diffcheckstylehadoop-yarn-server-resourcemanager.txt |
| hadoop-yarn-server-resourcemanager test log | https://builds.apache.org/job/PreCommit-YARN-Build/8397/artifact/patchprocess/testrun_hadoop-yarn-server-resourcemanager.txt |
| Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/8397/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf903.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/8397/console |


This message was automatically generated., Fixed one checkstyle issue, \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  16m 28s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 3 new or modified test files. |
| {color:green}+1{color} | javac |   7m 57s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 45s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:red}-1{color} | checkstyle |   0m 49s | The applied patch generated  6 new checkstyle issues (total was 249, now 250). |
| {color:green}+1{color} | whitespace |   0m  2s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 33s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 34s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   1m 29s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:red}-1{color} | yarn tests |  61m 26s | Tests failed in hadoop-yarn-server-resourcemanager. |
| | | 100m 29s | |
\\
\\
|| Reason || Tests ||
| Timed out tests | org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestNodeLabelContainerAllocation |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12742972/YARN-3508.06.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / d0cc038 |
| checkstyle |  https://builds.apache.org/job/PreCommit-YARN-Build/8399/artifact/patchprocess/diffcheckstylehadoop-yarn-server-resourcemanager.txt |
| hadoop-yarn-server-resourcemanager test log | https://builds.apache.org/job/PreCommit-YARN-Build/8399/artifact/patchprocess/testrun_hadoop-yarn-server-resourcemanager.txt |
| Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/8399/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf904.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/8399/console |


This message was automatically generated., [~leftnoteasy], the checkstyle issue is because of the formatting of following piece of code.

{code}
 switch(event.getType()) {
    case NODE_ADDED:
    {
      NodeAddedSchedulerEvent nodeAddedEvent = (NodeAddedSchedulerEvent)event;
      addNode(nodeAddedEvent.getAddedRMNode());
      recoverContainersOnNode(nodeAddedEvent.getContainerReports(),
        nodeAddedEvent.getAddedRMNode());
    }
    break;
    case NODE_REMOVED:
    {
      NodeRemovedSchedulerEvent nodeRemovedEvent = (NodeRemovedSchedulerEvent)event;
      removeNode(nodeRemovedEvent.getRemovedRMNode());
    }
    break;
{code}

I added the code in the same format as previous piece of code. If I fix this issue I will have to change code unrelated to my change as well.
Do you want me to fix it ? Or ignore this checkstyle issue ?
, [~leftnoteasy], the timed out test {{TestNodeLabelContainerAllocation}} is unrelated and will be handled by YARN-3848.
Maybe you can review that JIRA too :), Thanks for update, [~varun_saxena].

Checkstyle is fine to me, the patch generally looks good. [~jianhe]/[~jlowe], could you take a look also?, lgtm, thanks [~varun_saxena] !, Committing.., [~varun_saxena],

I just pushed this change to trunk/branch-2. Could you rebase the patch to branch-2.7 and run tests of RM? I will resolve the patch after it went to branch-2.7.

Thanks,
Wangda, FAILURE: Integrated in Hadoop-trunk-Commit #8109 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/8109/])
YARN-3508. Prevent processing preemption events on the main RM dispatcher. (Varun Saxena via wangda) (wangda: rev 0e4b06690ff51fbde3ab26f68fde8aeb32af69af)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/ContainerPreemptEvent.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/SchedulingMonitor.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/SchedulingEditPolicy.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestRMDispatcher.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/ContainerPreemptEventType.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TestProportionalCapacityPreemptionPolicyForNodePartitions.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TestProportionalCapacityPreemptionPolicy.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/event/SchedulerEventType.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java
, Thanks for the review and commit [~leftnoteasy]. Will make the changes for 2.7 and update, Thanks for the review [~jianhe], [~leftnoteasy], updated patch for branch-2.7, Committed to trunk/branch-2/branch-2.7, thanks [~varun_saxena] and review from [~rohithsharma], [~jianhe], [~jlowe]., FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #246 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/246/])
YARN-3508. Prevent processing preemption events on the main RM dispatcher. (Varun Saxena via wangda) (wangda: rev 0e4b06690ff51fbde3ab26f68fde8aeb32af69af)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/SchedulingEditPolicy.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/SchedulingMonitor.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/event/SchedulerEventType.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestRMDispatcher.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/ContainerPreemptEvent.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TestProportionalCapacityPreemptionPolicy.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TestProportionalCapacityPreemptionPolicyForNodePartitions.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/ContainerPreemptEventType.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk #976 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/976/])
YARN-3508. Prevent processing preemption events on the main RM dispatcher. (Varun Saxena via wangda) (wangda: rev 0e4b06690ff51fbde3ab26f68fde8aeb32af69af)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/ContainerPreemptEventType.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TestProportionalCapacityPreemptionPolicy.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/SchedulingEditPolicy.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/SchedulingMonitor.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TestProportionalCapacityPreemptionPolicyForNodePartitions.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestRMDispatcher.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/event/SchedulerEventType.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/ContainerPreemptEvent.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #244 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/244/])
YARN-3508. Prevent processing preemption events on the main RM dispatcher. (Varun Saxena via wangda) (wangda: rev 0e4b06690ff51fbde3ab26f68fde8aeb32af69af)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TestProportionalCapacityPreemptionPolicy.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestRMDispatcher.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/SchedulingMonitor.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TestProportionalCapacityPreemptionPolicyForNodePartitions.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/ContainerPreemptEventType.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/SchedulingEditPolicy.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/ContainerPreemptEvent.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/event/SchedulerEventType.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #234 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/234/])
YARN-3508. Prevent processing preemption events on the main RM dispatcher. (Varun Saxena via wangda) (wangda: rev 0e4b06690ff51fbde3ab26f68fde8aeb32af69af)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/SchedulingMonitor.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/event/SchedulerEventType.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/ContainerPreemptEvent.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/ContainerPreemptEventType.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/SchedulingEditPolicy.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TestProportionalCapacityPreemptionPolicy.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TestProportionalCapacityPreemptionPolicyForNodePartitions.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestRMDispatcher.java
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #2173 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2173/])
YARN-3508. Prevent processing preemption events on the main RM dispatcher. (Varun Saxena via wangda) (wangda: rev 0e4b06690ff51fbde3ab26f68fde8aeb32af69af)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/event/SchedulerEventType.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestRMDispatcher.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/ContainerPreemptEventType.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TestProportionalCapacityPreemptionPolicy.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TestProportionalCapacityPreemptionPolicyForNodePartitions.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/ContainerPreemptEvent.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/SchedulingMonitor.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/SchedulingEditPolicy.java
* hadoop-yarn-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2192 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2192/])
YARN-3508. Prevent processing preemption events on the main RM dispatcher. (Varun Saxena via wangda) (wangda: rev 0e4b06690ff51fbde3ab26f68fde8aeb32af69af)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TestProportionalCapacityPreemptionPolicy.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/SchedulingMonitor.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestRMDispatcher.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/ContainerPreemptEventType.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/event/SchedulerEventType.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/SchedulingEditPolicy.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/ContainerPreemptEvent.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TestProportionalCapacityPreemptionPolicyForNodePartitions.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java
]