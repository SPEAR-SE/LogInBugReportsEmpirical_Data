[This looks client is sending ResourceRequest with capability 0 memory., In trunk, RM does not dies unless *yarn.dispatcher.exit-on-error* is set to true., bq. RM does not dies unless yarn.dispatcher.exit-on-error is set to true
Ignore this. RM sets this configuration to true neverthless of configured value.

In YARN-382 ResourceRequest is validated via normalization process. Normalization of resources make sure always minimum-allocation-mb for containers even if users send 0 as container memory.
I verified in real cluster by sending 0 as container memory and am memory. Schedulers normalize the requests and allocates configured yarn.scheduler.minimum-allocation-mb.

[~hoelog] Could you give scenario when it happened? , Thanks for looking at this [~rohithsharma] and doing tests, didn't get feedback from [~hoelog], closing this as invalid., This problem also happened twice(31/Jan/15 and 20/Jun/15) in our cluster.
We use hadoop-2.2.0 and also set "yarn.scheduler.minimum-allocation-mb=3072"., Hi [~huizane], thanks for reply. 
 Would you please attach the RM logs if you have?, The only non-INFO log is following(it is so sudden there is not any other WARN or ERROR ).
There are several tens thousands of jobs per day.
{code}
2015-06-21 09:53:44,696 FATAL org.apache.hadoop.yarn.server.resourcemanager.ResourceManager: Error in handling event type NODE_UPDATE to the scheduler
java.lang.ArithmeticException: / by zero
        at org.apache.hadoop.yarn.util.resource.DefaultResourceCalculator.computeAvailableContainers(DefaultResourceCalculator.java:37)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue.assignContainer(LeafQueue.java:1335)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue.assignNodeLocalContainers(LeafQueue.java:1185)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue.assignContainersOnNode(LeafQueue.java:1136)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue.assignContainers(LeafQueue.java:871)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue.assignContainersToChildQueues(ParentQueue.java:645)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue.assignContainers(ParentQueue.java:559)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler.nodeUpdate(CapacityScheduler.java:690)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler.handle(CapacityScheduler.java:734)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler.handle(CapacityScheduler.java:86)
        at org.apache.hadoop.yarn.server.resourcemanager.ResourceManager$SchedulerEventDispatcher$EventProcessor.run(
ResourceManager.java:557)        at java.lang.Thread.run(Thread.java:724)
2015-06-21 09:53:44,696 INFO org.apache.hadoop.yarn.server.resourcemanager.ResourceManager: Exiting, bbye..
{code}, We encounter this issue too,  our cluster is 2.5.0,  the resource manager log shows:
{code}
2016-08-12 02:06:51,204 INFO org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainerImpl: container_1470798127749_8644_01_000820 Container Transitioned from NEW to RESERVED
2016-08-12 02:06:51,204 INFO org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: Reserved container  application attempt=appattempt_1470798127749_8644_000001 resource=<memory:2048, vCores:1> queue=default: capacity=0.65, absoluteCapacity=0.65, usedResources=<memory:3719168, vCores:1715>, usedCapacity=1.1451658, absoluteUsedCapacity=0.74435765, numApps=19, numContainers=1715 node=host: dx-pipe-sata114-pm:38694 #containers=36 available=19456 used=82944 clusterResource=<memory:6553600, vCores:2304>
2016-08-12 02:06:51,204 INFO org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue: Re-sorting assigned queue: root.default stats: default: capacity=0.65, absoluteCapacity=0.65, usedResources=<memory:3721216, vCores:1716>, usedCapacity=1.1458336, absoluteUsedCapacity=0.7447917, numApps=19, numContainers=1716
2016-08-12 02:06:51,204 INFO org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue: assignedContainer queue=root usedCapacity=0.86067706 absoluteUsedCapacity=0.86067706 used=<memory:4965376, vCores:1983> cluster=<memory:6553600, vCores:2304>
2016-08-12 02:06:51,222 INFO org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainerImpl: container_1470798127749_8660_01_000041 Container Transitioned from ALLOCATED to ACQUIRED
2016-08-12 02:06:51,222 INFO org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainerImpl: container_1470798127749_8660_01_000042 Container Transitioned from ALLOCATED to ACQUIRED
2016-08-12 02:06:51,222 INFO org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainerImpl: container_1470798127749_8660_01_000043 Container Transitioned from ALLOCATED to ACQUIRED
2016-08-12 02:06:51,222 INFO org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainerImpl: container_1470798127749_8660_01_000044 Container Transitioned from ALLOCATED to ACQUIRED
2016-08-12 02:06:51,222 INFO org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainerImpl: container_1470798127749_8660_01_000045 Container Transitioned from ALLOCATED to ACQUIRED
2016-08-12 02:06:51,222 INFO org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainerImpl: container_1470798127749_8660_01_000046 Container Transitioned from ALLOCATED to ACQUIRED
2016-08-12 02:06:51,222 INFO org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainerImpl: container_1470798127749_8660_01_000047 Container Transitioned from ALLOCATED to ACQUIRED
2016-08-12 02:06:51,223 INFO org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainerImpl: container_1470798127749_8660_01_000048 Container Transitioned from ALLOCATED to ACQUIRED
2016-08-12 02:06:51,223 INFO org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainerImpl: container_1470798127749_8660_01_000049 Container Transitioned from ALLOCATED to ACQUIRED
2016-08-12 02:06:51,223 INFO org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainerImpl: container_1470798127749_8660_01_000050 Container Transitioned from ALLOCATED to ACQUIRED
2016-08-12 02:06:51,223 INFO org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainerImpl: container_1470798127749_8660_01_000051 Container Transitioned from ALLOCATED to ACQUIRED
2016-08-12 02:06:51,223 INFO org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainerImpl: container_1470798127749_8660_01_000052 Container Transitioned from ALLOCATED to ACQUIRED
2016-08-12 02:06:51,223 INFO org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainerImpl: container_1470798127749_8660_01_000053 Container Transitioned from ALLOCATED to ACQUIRED
2016-08-12 02:06:51,223 FATAL org.apache.hadoop.yarn.server.resourcemanager.ResourceManager: Error in handling event type NODE_UPDATE to the scheduler
java.lang.ArithmeticException: / by zero
        at org.apache.hadoop.yarn.util.resource.DominantResourceCalculator.computeAvailableContainers(DominantResourceCalculator.java:101)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue.assignContainer(LeafQueue.java:1332)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue.assignOffSwitchContainers(LeafQueue.java:1218)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue.assignContainersOnNode(LeafQueue.java:1177)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue.assignContainers(LeafQueue.java:877)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue.assignContainersToChildQueues(ParentQueue.java:656)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue.assignContainers(ParentQueue.java:570)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler.allocateContainersToNode(CapacityScheduler.java:851)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler.handle(CapacityScheduler.java:900)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler.handle(CapacityScheduler.java:98)
        at org.apache.hadoop.yarn.server.resourcemanager.ResourceManager$SchedulerEventDispatcher$EventProcessor.run(ResourceManager.java:599)
        at java.lang.Thread.run(Thread.java:745)
2016-08-12 02:06:51,224 INFO org.apache.hadoop.yarn.server.resourcemanager.ResourceManager: Exiting, bbye..
2016-08-12 02:06:51,230 INFO org.mortbay.log: Stopped HttpServer2$SelectChannelConnectorWithSafeStartup@f04:8088
2016-08-12 02:06:51,331 INFO org.apache.hadoop.ipc.Server: Stopping server on 8032
2016-08-12 02:06:51,332 INFO org.apache.hadoop.ipc.Server: Stopping IPC Server Responder
2016-08-12 02:06:51,332 INFO org.apache.hadoop.ipc.Server: Stopping IPC Server listener on 8032
2016-08-12 02:06:51,333 INFO org.apache.hadoop.ipc.Server: Stopping server on 8033
2016-08-12 02:06:51,334 INFO org.apache.hadoop.ipc.Server: Stopping IPC Server listener on 8033
2016-08-12 02:06:51,335 INFO org.apache.hadoop.ipc.Server: Stopping IPC Server Responder
{code}


[~huizane] Have you solved the problem? Thanks
, We also see this issue at CDH5.7.2 which is based on hadoop 2.6 release + patches from hadoop 2.7 release, I studied most of the code paths I found two potential corner cases which may cause this issue:
1. maximum allocation can be changed based on node added and removed and total resource changed on the node. if maximum allocation is changed to 0 transiently, this issue may happen. since the following code at CapacityScheduler.allocate will change ResourceRequest in ask to 0 if getMaximumResourceCapability is 0.
{code}
    SchedulerUtils.normalizeRequests(
        ask, getResourceCalculator(), getClusterResource(),
        getMinimumResourceCapability(), getMaximumResourceCapability());
{code}
2. capability from resource request in application returned without cloning in LeafQueue.assignContainer and AppSchedulingInfo.cloneResourceRequest and AppSchedulingInfo.getResource, Potentially the capability in resource request returned can be changed outside.
I implemented a patch which fixed the first potential corner case based on branch-2.7. We already deployed this patch for more than one month, so far we didn't see this issue happen with the attached patch.
The stack trace for the exception is 
{code}
2017-02-09 15:36:43,062 FATAL org.apache.hadoop.yarn.server.resourcemanager.ResourceManager: Error in handling event type NODE_UPDATE to the scheduler
java.lang.ArithmeticException: / by zero
        at org.apache.hadoop.yarn.util.resource.DominantResourceCalculator.computeAvailableContainers(DominantResourceCalculator.java:115)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue.assignContainer(LeafQueue.java:1536)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue.assignOffSwitchContainers(LeafQueue.java:1392)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue.assignContainersOnNode(LeafQueue.java:1271)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue.assignContainersInternal(LeafQueue.java:830)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue.assignContainers(LeafQueue.java:734)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue.assignContainersToChildQueues(ParentQueue.java:586)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue.assignContainers(ParentQueue.java:447)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue.assignContainersToChildQueues(ParentQueue.java:586)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue.assignContainers(ParentQueue.java:447)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler.allocateContainersToNode(CapacityScheduler.java:1027)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler.handle(CapacityScheduler.java:1069)
        at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler.handle(CapacityScheduler.java:114)
        at org.apache.hadoop.yarn.server.resourcemanager.ResourceManager$SchedulerEventDispatcher$EventProcessor.run(ResourceManager.java:691)
        at java.lang.Thread.run(Thread.java:745)
{code}]