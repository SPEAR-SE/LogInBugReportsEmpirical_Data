[Consider RM initially in standby.
1. StandBy RM
2. StandBy -->Active (Failed because of ZK session expire)
3. RM remain in StandBy state.
4. StandBy -->Active will fail with below exception
{code}
2014-09-20 14:21:36,980 | WARN  | AsyncDispatcher event handler-EventThread | Exception handling the winning of election | org.apache.hadoop.ha.ActiveStandbyElector.becomeActive(ActiveStandbyElector.java:809)
org.apache.hadoop.ha.ServiceFailedException: RM could not transition to Active
	at org.apache.hadoop.yarn.server.resourcemanager.EmbeddedElectorService.becomeActive(EmbeddedElectorService.java:128)
	at org.apache.hadoop.ha.ActiveStandbyElector.becomeActive(ActiveStandbyElector.java:805)
	at org.apache.hadoop.ha.ActiveStandbyElector.processResult(ActiveStandbyElector.java:416)
	at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:602)
	at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:498)
Caused by: org.apache.hadoop.ha.ServiceFailedException: Error when transitioning to Active mode
	at org.apache.hadoop.yarn.server.resourcemanager.AdminService.transitionToActive(AdminService.java:290)
	at org.apache.hadoop.yarn.server.resourcemanager.EmbeddedElectorService.becomeActive(EmbeddedElectorService.java:126)
	... 4 more
Caused by: org.apache.hadoop.service.ServiceStateException: RMActiveServices cannot enter state STARTED from state STOPPED
	at org.apache.hadoop.service.ServiceStateModel.checkStateTransition(ServiceStateModel.java:129)
	at org.apache.hadoop.service.ServiceStateModel.enterState(ServiceStateModel.java:111)
{code}
, This is basically problem in not recreating active services if RM is failed to transition to Active., thanks for reporting this issue. analysis looks good to me., Hi Rohith, what zookeeper exception did you see when this happens? I'm seeing similar issue in RM too. , [~cindy2012] RM zkClient got session expired. Immediately zkClient got recovered, but at this time RM already reached inconsistent state where it can not transition to active., Updated the patch for fixing issue. Please review.., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12670964/YARN-2588.patch
  against trunk revision ef784a2.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The following test timeouts occurred in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:

org.apache.hadoop.yarn.server.resourcemanager.TestWorkPreservingRMRestart

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/5097//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/5097//console

This message is automatically generated., Hi [~jianhe] , could you please review the patch whenever you get time., Rohith, thanks for the patch, I have a couple of comments:
- the stopActiveServices() call maybe not necessary ? as the AbstractService class internally should call stop if any exception occurs.
{code}
        } catch (Exception e) {
          stopActiveServices();
{code}
- maybe we can invoke following right before each time start the active services?
{code}
          createAndInitActiveServices();
{code}
- fix following code comment 
{code}
// @Test(timeout = 30000)
{code}, Thanks Jian He for reviewing patch :-)
bq. ■the stopActiveServices() call maybe not necessary ? as the AbstractService class internally should call stop if any exception occurs
Agree

bq. ■fix following code comment 
Agree

bq. ■maybe we can invoke following right before each time start the active services? 
Invoking before startActiveServices causes reinitialization of active services every time trainstionToActive which is not needed in positive flow.  I thought of removing completely activeservice initializition for trainsitionToStandby, but it has potential dependency on starting RMWebApp. I do not know why RMWebbApp has dependency on activeServices for starting in standby mode.Is it a bug??, I updated the patch with above changes.Please review, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12674976/YARN-2588.1.patch
  against trunk revision 128ace1.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/5405//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/5405//console

This message is automatically generated., Thanks for updating !
bq. I thought of removing completely activeservice initializition for trainsitionToStandby, but it has potential dependency on starting RMWebApp. I do not know why RMWebbApp has dependency on activeServices for starting in standby mode.
Didn't quite get what you mean. RMWebApp is started in both standby and active., In RMWebApp, we have code below where ApplicationACLManager and QueueACL managers are part of ActiveServices instances binded to RMWebApp. IIUC, these are not needed for starting in standby mode. I would like to know reason behind why these 2 active service instances are binded to RMWebApp.?
{code}
   if (rm != null) {
      bind(ResourceManager.class).toInstance(rm);
      bind(RMContext.class).toInstance(rm.getRMContext());
      bind(ApplicationACLsManager.class).toInstance(
          rm.getApplicationACLsManager());
      bind(QueueACLsManager.class).toInstance(rm.getQueueACLsManager());
    }
{code}, I traced the code ApplicationACLsManager/QueueACLsManager were earlier used by RMWebService for injection. this binding seems not necessary anymore. But anyways, this doesn't matter too much? as these two are just two classes and they are not extending service.

another minor comment in the patch, add {{Assert.fail()}} after {{rm.adminService.transitionToActive(requestInfo);}}
{code}
try {
+      rm.adminService.transitionToActive(requestInfo);
+    } catch (Exception e) {
+      assertTrue("Error when transitioning to Active mode".contains(e
+          .getMessage()));
+    }
{code}, bq. But anyways, this doesn't matter too much? as these two are just two classes and they are not extending service.
Yes it does not matter., bq. add Assert.fail() after rm.adminService.transitionToActive(requestInfo);
Done

I updated the patch. Please review, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12675432/YARN-2588.2.patch
  against trunk revision 72093fd.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/5432//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/5432//console

This message is automatically generated., looks good +1, Committed to trunk, branch-2 and branch-2.6,  thanks Rohith !, FAILURE: Integrated in Hadoop-trunk-Commit #6282 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6282/])
YARN-2588. Standby RM fails to transitionToActive if previous transitionToActive failed with ZK exception. Contributed by Rohith Sharmaks (jianhe: rev a6aa6e42cacdbfcc1c2b7c19e7239204fe9ff654)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestRMHA.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java
* hadoop-yarn-project/CHANGES.txt
, Thanks 'Jian He' for review and committing patch:-), SUCCESS: Integrated in Hadoop-Yarn-trunk #716 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/716/])
YARN-2588. Standby RM fails to transitionToActive if previous transitionToActive failed with ZK exception. Contributed by Rohith Sharmaks (jianhe: rev a6aa6e42cacdbfcc1c2b7c19e7239204fe9ff654)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestRMHA.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1905 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1905/])
YARN-2588. Standby RM fails to transitionToActive if previous transitionToActive failed with ZK exception. Contributed by Rohith Sharmaks (jianhe: rev a6aa6e42cacdbfcc1c2b7c19e7239204fe9ff654)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestRMHA.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1930 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1930/])
YARN-2588. Standby RM fails to transitionToActive if previous transitionToActive failed with ZK exception. Contributed by Rohith Sharmaks (jianhe: rev a6aa6e42cacdbfcc1c2b7c19e7239204fe9ff654)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestRMHA.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java
, Thanks Jian for pointing me to this. Patch fixes an important issue, but I would like for us to call transitionToStandby in the catch-block instead of explicitly calling the contents of transitionToStandby. I ll fix this up in YARN-2010. , bq. but I would like for us to call transitionToStandby in the catch-block instead of explicitly calling the contents of transitionToStandby
As I understand the comment, Is expecting change is like below..? CMIIAW, If yes, transitionToStandby return in intial state check itself. And end up in without creating active services and resetting dispatcher!!!
{code}
try {
          startActiveServices();
          return null;
        } catch (Exception e) {
          transitionToStandby(true);
          throw e;
        }
{code}
, Agree, we will need to move things around a little to get it right. , Actually, looking closely, it appears the patch is probably the simplest way to get this done. Forget I said anything :), There is another hidden similar issue  after this patch. Should I raise another Jira or provide add on patch to this Jira only?, Let us do it on another JIRA, given this is already committed to 2.6.0., Thanks Karthik!! I have raised YARN-2865]