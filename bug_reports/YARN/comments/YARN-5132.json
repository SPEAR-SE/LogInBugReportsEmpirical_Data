[Adding an exclusion for protobuf-generated sources from YARN build as [suggested | https://issues.apache.org/jira/browse/YARN-4887?focusedCommentId=15295122] by [~cnauroth].

I ran test-patch locally with and without this change for YARN-4887 to verify it works correctly., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 12s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red} 0m 0s {color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 6m 19s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 1m 59s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 2m 29s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 18s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 57s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 1m 58s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 1m 58s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 1m 58s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 2m 28s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 16s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green} 0m 2s {color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 34s {color} | {color:green} hadoop-yarn-project_hadoop-yarn generated 0 new + 6617 unchanged - 7318 fixed = 6617 total (was 13935) {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 15s {color} | {color:green} hadoop-yarn in the patch passed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 54m 33s {color} | {color:red} hadoop-yarn in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 17s {color} | {color:green} Patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 76m 33s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.yarn.server.resourcemanager.applicationsmanager.TestAMRestart |
|   | hadoop.yarn.server.resourcemanager.TestClientRMTokens |
|   | hadoop.yarn.server.resourcemanager.TestAMAuthorization |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:2c91fd8 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12805793/YARN-5132-v1.patch |
| JIRA Issue | YARN-5132 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  xml  |
| uname | Linux a0b2da07675b 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / b4078bd |
| Default Java | 1.8.0_91 |
| unit | https://builds.apache.org/job/PreCommit-YARN-Build/11646/artifact/patchprocess/patch-unit-hadoop-yarn-project_hadoop-yarn.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-YARN-Build/11646/artifact/patchprocess/patch-unit-hadoop-yarn-project_hadoop-yarn.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/11646/testReport/ |
| modules | C: hadoop-yarn-project/hadoop-yarn U: hadoop-yarn-project/hadoop-yarn |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/11646/console |
| Powered by | Apache Yetus 0.2.0   http://yetus.apache.org |


This message was automatically generated.

, There are no unit tests as the patch has only pom file changes. Consequently the failing tests are unrelated and are covered by YARN-5091., I'm not sure if this is really the correct thing to do.  Don't we consider some of the protobuf RPCs as a public interface?, No, we do not in YARN. They are behind interfaces like [ApplicationClientProtocol|https://github.com/apache/hadoop/blob/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/ApplicationClientProtocol.java] which are the public APIs. HDFS already does the exact same exclusion as [~cnauroth] [pointed out|https://issues.apache.org/jira/browse/YARN-4887?focusedCommentId=15295122] earlier. Additionally there is _no_ means to generate Javadocs for protobufs [currently|https://github.com/google/protobuf/issues/304]., bq. No, we do not in YARN. 

Citation needed, because if that's the case, then that means that non-Java clients are basically screwed. It also makes the Go example by Hortonworks *extremely* problematic.  (http://hortonworks.com/blog/go-hadoop-err-hadoop-and-go/)

, bq.  then that means that non-Java clients are basically screwed. It also makes the Go example by Hortonworks extremely problematic. 
[~aw], appoligize but I do NOT see the connection between generated java classes and go clients. A go client would generate its own go files from the protobuf and use it., ANY documentation is better than NO documentation.  Removing the javadoc effectively makes these APIs disappear from search results., [~asuresh], thanks for providing the clarification.

[~aw], I feel a few points are being missed:
  * The exclusion is _confined_ to *protobuf generated internal classes*.
  * Protobuf generation has a *known Javadoc bug with JDK8* which is open. Once the [bug|https://github.com/google/protobuf/issues/304] is resolved and we upgrade to an appropriate version, we can remove this exclusion.
  * The change *aligns YARN with HDFS project*., From the bug [~subru] cited, it looks like there's no solution for the javadoc warnings in 2.5, a version we're unlikely to change and Google is unlikely to fix.

[~aw], I think your point is that Jenkins should stop complaining about (new) javadoc warnings in generated code, rather than giving up generating javadoc entirely. The protobuf classes are public APIs, but they're not user-facing in our Java APIs... I'm pretty ambivalent about keeping javadoc for them; including it may mislead someone into writing against them, rather than the API classes. Since (IIRC) we exclude other \@Private APIs from the generated javadoc, this seems like a good change, overall. Unless there's a better way to effect it?, I see several reasons to get this in:
# As Subru, Chris and others mentioned, I don't see why we should publish javadocs of these proto generated classes. We should actually update the release script to remove javadoc from proto files. [~vinodkv], [~leftnoteasy] - you have been working on the releases recently, do we publish javadocs for these? 
# All JIRAs see these javadoc errors. It is painstakingly hard to figure out what javadoc issues the patch introduces. , +1. 

Will check this in tomorrow (Fri) morning. , Checking this in. , SUCCESS: Integrated in Hadoop-trunk-Commit #9883 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/9883/])
YARN-5132. Exclude generated protobuf sources from YARN Javadoc build. (kasha: rev f5ff05cc8a67c125717261392c996136ba66785b)
* hadoop-yarn-project/hadoop-yarn/pom.xml
, Thanks [~subru] for the patch, [~aw] and [~chris.douglas] for your inputs. 

Just committed this to trunk, branch-2, and branch-2.8. , Thanks [~chris.douglas] for reviewing and [~kasha] for reviewing/committing!, [~subru], [~kasha], 

[~billie.rinaldi] found this, could you please confirm ? seems like an issue.
bq. It looks like the maven-javadoc-plugin is not configured properly for the hadoop-yarn module. There are YARN exclusions in the top level pom: https://github.com/apache/hadoop/blob/trunk/pom.xml#L443, and these are overridden in the hadoop-yarn pom: https://github.com/apache/hadoop/blob/trunk/hadoop-yarn-project/hadoop-yarn/pom.xml#L78 by a subset of the package names. I am not sure if the lack of exclusion of the yarn server and yarn webapp packages was intentional or not.]