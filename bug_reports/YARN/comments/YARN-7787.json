[YARN Service code contains one implementation of ApplicationMaster code that extends 

org.apache.hadoop.service.AbstractService.  AM's responsibility is to report service status, and other application logic.  Hadoop RPC setup by ApplicationMaster must follow basic Hadoop security practice.  HADOOP-9698 added logic to make sure saslRPCClient verifies server side credential against list of configuration defined principal names.  The goal is to prevents men in middle attack or replay attack.  This is hard coded into Hadoop security design when service are statically deploy on cluster of nodes. 

Therefore, user must use server principal in Yarn Service to launch YARN service:
{code:java}
  "kerberos_principal" : {
    "principal_name" : "hbase/_HOST@EXAMPLE.COM",
    "keytab" : "file:///etc/security/keytabs/hbase.service.keytab"
  },{code}
 

This ticket is to discuss whether there is any wiggle room to relax security and allow end user principal to be used for starting service.  ApplicationMaster can run on any node in YARN cluster.  This security check seems cumbersome to generate a keytab that contains the proper server principals for ApplicationMaster.  In large scale cluster, using server principal is definitely preferred to prevent men-in-middle attack even within trusted security perimeter.  This request can have profound impact to Hadoop security design for sasl rpc client and worthy of discussion.  The alternative is to reimplement AM not base on Hadoop RPC, and new implementation needs to solve men-in-middle attack in other shape or forms.  It seems like a lot disadvantages to enable end user principal to run ApplicationMaster.  Thoughts?]