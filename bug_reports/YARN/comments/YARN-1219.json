[Patch attached. There's only one line change in source code. Added a new unit test case to test .tgz file download. Also refactored the testing code to avoid code redundancy., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12604123/YARN-1219.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/1974//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/1974//console

This message is automatically generated., I think this change makes sense, but I'd like to get a second opinion.  Is anyone aware of any subtle dependency on the ".tmp" extension in {{FSDownload}}?, [~cnauroth] ".tmp" I guess was added only to indicate that the current file is either getting downloaded/ updated. I think we should retain that. Probably what we can do is
{code}
    Path tempCopy = new Path(dstdir, sCopy.getName() + ".tmp");
    ......
    ......
    sourceFs.copyToLocalFile(sCopy, tempCopy);
    Path dCopy = new Path(dstdir, sCopy.getName());
    File src = new File(tempCopy.toUri().getRawPath());
    File dst = new File(dCopy.toUri().getRawPath());
    if (!src.renameTo(dst)) {
      throw new IOException("Unable to rename file: [" + src + "] to [" + dst
          + "]");
    }
    return dCopy;
{code}

also we will have to remove the corresponding renameTo calls from unpack().
{code}
    case FILE:
    default:
      if (!localrsrc.renameTo(dst)) {
        throw new IOException("Unable to rename file: [" + localrsrc
          + "] to [" + dst + "]");
      }
      break;
{code}
{code}
    if(localrsrc.isFile()){
      try {
        files.delete(new Path(localrsrc.toString()), false);
      } catch (IOException ignore) {
      }
    }
{code}
// in both PATTERN and ARCHIVE we need to remove this but lets retain the log message about Cannot unpack.
{code}
        if (!localrsrc.renameTo(dst)) {
          throw new IOException("Unable to rename file: [" + localrsrc
              + "] to [" + dst + "]");
{code}, The impact of this bug is that Yarn will fail to download any .tar.gz or .tgz files as resources on Windows platform.

[~ojoshi] Thank you for reviewing this patch. I think the ".tmp" file name suffix is only used to make sure the temporary archive file use a different name than the archive file name itself. So the file name of dCopy has to be different from sCopy. Because the final unarchived files need to be put in a folder whose name is the exactly the original archive file name. 

Here is what happens when a container downloads an archived resource file, let's say the file name is "stage-3.tar.gz" and the destination dir is "filecache/10".
  a. Create destDirPath folder "filecache/10"
  b. Create dst_work folder "filecache/10_tmp"
  c. Copy archive file to dTmp "filecache/10_tmp/stage-3.tar.gz.tmp"
  d. Unpack dTmp "filecache/10_tmp/stage-3.tar.gz.tmp" into dFinal "filecache/10_tmp/stage-3.tar.gz/"
  e. Rename folder dst_work "filecache/10_tmp" to destDirPath "filecache/10"
So after all these steps, the unzipped unarchived files can be found in "filecache/10/stage-3.tar.gz/*"

I also checked in Hadoop 1.x the file name being downloaded from HDFS does not have the ".tmp" suffix. It is using the original file name as the file name to be downloaded.

I didn't see anywhere in code to treat the ".tmp" file differently. If you know please let me know. If the original author only used a suffix to make sure the name is different than the original file name, it doesn't seem to be worth it to add an unnecessary and error-prone rename operations just to keep the temporary file name suffix., bq. I didn't see anywhere in code to treat the ".tmp" file differently. If you know please let me know. If the original author only used a suffix to make sure the name is different than the original file name, it doesn't seem to be worth it to add an unnecessary and error-prone rename operations just to keep the temporary file name suffix.
No we are not adding new just moving them around. from unpack to here..Ideally that rename code should have been present here only. I remember we had a bug to remove that .tmp file. But I think it is fine we can go ahead with this patch. As it will not break anything else., +1 for the patch.  I verified on both Mac and Windows.  I plan to commit this later today., SUCCESS: Integrated in Hadoop-trunk-Commit #4537 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/4537/])
YARN-1219. FSDownload changes file suffix making FileUtil.unTar() throw exception. Contributed by Shanyu Zhao. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1529084)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/FSDownload.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/util/TestFSDownload.java
, I've committed this to trunk, branch-2, and branch-2.1-beta.  Shanyu, thank you for the patch.  Omkar, thank you for help with code review., FAILURE: Integrated in Hadoop-Yarn-trunk #352 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/352/])
YARN-1219. FSDownload changes file suffix making FileUtil.unTar() throw exception. Contributed by Shanyu Zhao. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1529084)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/FSDownload.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/util/TestFSDownload.java
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1542 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1542/])
YARN-1219. FSDownload changes file suffix making FileUtil.unTar() throw exception. Contributed by Shanyu Zhao. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1529084)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/FSDownload.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/util/TestFSDownload.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1568 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1568/])
YARN-1219. FSDownload changes file suffix making FileUtil.unTar() throw exception. Contributed by Shanyu Zhao. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1529084)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/FSDownload.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/util/TestFSDownload.java
, Closing old tickets that are already part of a release.]