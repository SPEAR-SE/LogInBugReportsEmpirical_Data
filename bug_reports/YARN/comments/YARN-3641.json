[Upload a quick patch to fix it. The issue is obviously and the solution is simple enough, not need unit test., I think the patch approach is OK, but I'm not sure I agree with the problem analysis.  We kill -9 the NM during rolling upgrades, which obviously will not cleanly shutdown the state store, yet we don't have the IO error lock problem.  The issue is that the old NM process must still be running, which is why leveldb refuses to open the still-in-use database.  In that sense this JIRA appears to be a duplicate of the same problems described in YARN-3585 and YARN-3640., bq. We kill -9 the NM during rolling upgrades, which obviously will not cleanly shutdown the state store, yet we don't have the IO error lock problem.
Yes. I also suspect that if old NM is still running. The bad news is our original environment is gone, may need sometime to reproduce this to see if the same problem of YARN-3585., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  14m 39s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:red}-1{color} | tests included |   0m  0s | The patch doesn't appear to include any new or modified tests.  Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. |
| {color:green}+1{color} | javac |   7m 36s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 39s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 23s | The applied patch does not increase the total number of release audit warnings. |
| {color:green}+1{color} | checkstyle |   0m 35s | There were no new checkstyle issues. |
| {color:red}-1{color} | whitespace |   0m  0s | The patch has 1  line(s) that end in whitespace. Use git apply --whitespace=fix. |
| {color:green}+1{color} | install |   1m 34s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 33s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   1m  3s | The patch does not introduce any new Findbugs (version 2.0.3) warnings. |
| {color:green}+1{color} | yarn tests |   6m  0s | Tests passed in hadoop-yarn-server-nodemanager. |
| | |  42m  5s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12732578/YARN-3641.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 065d8f2 |
| whitespace | https://builds.apache.org/job/PreCommit-YARN-Build/7921/artifact/patchprocess/whitespace.txt |
| hadoop-yarn-server-nodemanager test log | https://builds.apache.org/job/PreCommit-YARN-Build/7921/artifact/patchprocess/testrun_hadoop-yarn-server-nodemanager.txt |
| Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/7921/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf902.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/7921/console |


This message was automatically generated., Marking it as critical for 2.7.1 whichever way we go.., +1 for the patch.  Will commit this later today, and fix the whitespace nit as part of the commit., Thanks, Junping!  I committed this to trunk, branch-2, and branch-2.7., SUCCESS: Integrated in Hadoop-trunk-Commit #7823 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7823/])
YARN-3641. NodeManager: stopRecoveryStore() shouldn't be skipped when exceptions happen in stopping NM's sub-services. Contributed by Junping Du (jlowe: rev 711d77cc54a64b2c3db70bdacc6bf2245c896a4b)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeManager.java
* hadoop-yarn-project/CHANGES.txt
, Apologies for coming late into this JIRA.. I think {{DefaultMetricsSystem.shutdown();}} also should be called in the finally block otherwise if custom implementation of MetricsSinkAdapter like HADOOP-11932 would hang the JVM., FAILURE: Integrated in Hadoop-Yarn-trunk #927 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/927/])
YARN-3641. NodeManager: stopRecoveryStore() shouldn't be skipped when exceptions happen in stopping NM's sub-services. Contributed by Junping Du (jlowe: rev 711d77cc54a64b2c3db70bdacc6bf2245c896a4b)
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeManager.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk-Java8 #196 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/196/])
YARN-3641. NodeManager: stopRecoveryStore() shouldn't be skipped when exceptions happen in stopping NM's sub-services. Contributed by Junping Du (jlowe: rev 711d77cc54a64b2c3db70bdacc6bf2245c896a4b)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeManager.java
* hadoop-yarn-project/CHANGES.txt
, bq. I think DefaultMetricsSystem.shutdown(); also should be called in the finally block otherwise if custom implementation of MetricsSinkAdapter like HADOOP-11932 would hang the JVM.

Arguably there are a lot of different things that can cause the JVM to hang during shutdown.  An auxiliary service that doesn't always shutdown cleanly.  Someone adds a new service that launches non-daemon threads and their shutdown/stop isn't called, etc. etc.  IMHO if we really want to prevent shutdowns from hanging in general then the NM should explicitly call ExitUtil.terminate rather than relying on all the non-daemon threads to eventually exit., Either that or we need a form of CompositeService that is hardened against sub-services from throwing during shutdown and continue to shutdown other services.  We still risk leaving some non-daemon threads around if the sub-service that threw didn't get around to really cleaning up, so we probably should still call ExitUtil.terminate., bq. so we probably should still call ExitUtil.terminate.
I think this is right way to overcome from JVM hang during graceful shutdown., FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #195 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/195/])
YARN-3641. NodeManager: stopRecoveryStore() shouldn't be skipped when exceptions happen in stopping NM's sub-services. Contributed by Junping Du (jlowe: rev 711d77cc54a64b2c3db70bdacc6bf2245c896a4b)
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeManager.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2125 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2125/])
YARN-3641. NodeManager: stopRecoveryStore() shouldn't be skipped when exceptions happen in stopping NM's sub-services. Contributed by Junping Du (jlowe: rev 711d77cc54a64b2c3db70bdacc6bf2245c896a4b)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeManager.java
* hadoop-yarn-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #185 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/185/])
YARN-3641. NodeManager: stopRecoveryStore() shouldn't be skipped when exceptions happen in stopping NM's sub-services. Contributed by Junping Du (jlowe: rev 711d77cc54a64b2c3db70bdacc6bf2245c896a4b)
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeManager.java
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #2143 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2143/])
YARN-3641. NodeManager: stopRecoveryStore() shouldn't be skipped when exceptions happen in stopping NM's sub-services. Contributed by Junping Du (jlowe: rev 711d77cc54a64b2c3db70bdacc6bf2245c896a4b)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeManager.java
* hadoop-yarn-project/CHANGES.txt
, I can't see how to change this from 'Pending Closed' to 'Fixed'. :(, The latest patch can be applied to 2.6.0 branch cleanly, bq. I can't see how to change this from 'Pending Closed' to 'Fixed'. 
I cannot either. The weird thing is I even cannot reopen it..., Pulled this into 2.6.1. Ran compilation before the push. Patch applied cleanly.
]