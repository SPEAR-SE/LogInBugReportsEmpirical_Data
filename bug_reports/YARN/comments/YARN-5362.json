[this could simple reproduced by add a sleep to RMAppManager
{code}
      case APP_COMPLETED: 
      {
        try {
          Thread.sleep(2000);
        } catch(InterruptedException e){}
        finishApplication(applicationId);
        logApplicationSummary(applicationId);
        checkAppNumCompletedLimit(); 
      } 
{code}
APP_COMPLETED is processed async, and could simple be fixed by add mockRM#drainEvents() before calling asserts.

, seen many test failures related to RMApp/RMAppattempt comes to some state but some event are not processed in rm event queue or scheduler event queue, cause test failure,  seems we could implicitly invokes drainEvents(should also drain sheduler event) in some mockRM method like waitForState, thought?  cc [~sunilg] [~rohithsharma]
{code}
void waitForState() {
   .... 
   drainEvents();
}
{code}, update a patch to add drainEvents() before asserts,  there had a very little race condition since drainEvents() just grant there are no event in event queue, not grant event are processed completely., Right, it make sense to add  implicitly in mockRM. This would avoid many times for writing new test case,  not to worry about calling explicitly  drain events. , +1 LGTM.  submitting patch for HadoopQA, | (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 15s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 11m 33s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 33s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 21s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 38s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 19s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 0m 58s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 21s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 32s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 32s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 32s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 19s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 35s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 16s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 8s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 17s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 33m 31s {color} | {color:green} hadoop-yarn-server-resourcemanager in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 17s {color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 53m 2s {color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:9560f25 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12817573/YARN-5362.01.patch |
| JIRA Issue | YARN-5362 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux 49a9ebbfd431 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 438b7c5 |
| Default Java | 1.8.0_91 |
| findbugs | v3.0.0 |
|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/12303/testReport/ |
| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/12303/console |
| Powered by | Apache Yetus 0.3.0   http://yetus.apache.org |


This message was automatically generated.

, committed to trunk/branch-2.. thanks [~sandflee] for the patch!!, SUCCESS: Integrated in Hadoop-trunk-Commit #10089 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/10089/])
YARN-5362. TestRMRestart#testFinishedAppRemovalAfterRMRestart can fail. (rohithsharmaks: rev d6d41e820ac7b3ba73f5e4ea1ee72715dc1ffc9f)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestRMRestart.java
, thanks [~rohithsharma] for review and commit, open YARN-5375 to track implicitly invokes drainEvents in mockRM., able to still see this issue YARN-5256 as part of the [build|https://builds.apache.org/job/PreCommit-YARN-Build/13314/testReport/org.apache.hadoop.yarn.server.resourcemanager/TestRMRestart/testFinishedAppRemovalAfterRMRestart], may be one of you guys can take a relook at it ?
{code}
java.lang.AssertionError: expected null, but was:<submit_time: 1475828790939 application_submission_context { application_id { id: 1 cluster_timestamp: 1475828790911 } application_name: "" queue: "default" priority { priority: 0 } am_container_spec { } cancel_tokens_when_complete: true maxAppAttempts: 2 resource { memory: 1024 virtual_cores: 1 } applicationType: "YARN" keep_containers_across_application_attempts: false attempt_failures_validity_interval: 0 am_container_resource_request { priority { priority: 0 } resource_name: "*" capability { memory: 1024 virtual_cores: 1 } num_containers: 0 relax_locality: true node_label_expression: "" execution_type_request { execution_type: GUARANTEED enforce_execution_type: false } } } user: "jenkins" start_time: 1475828790939 application_state: RMAPP_FINISHED finish_time: 1475828790998>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotNull(Assert.java:664)
	at org.junit.Assert.assertNull(Assert.java:646)
	at org.junit.Assert.assertNull(Assert.java:656)
	at org.apache.hadoop.yarn.server.resourcemanager.TestRMRestart.testFinishedAppRemovalAfterRMRestart(TestRMRestart.java:1656)
{code}, thanks [~Naganarasimha], I'll have a look., +1. I am still getting same as [~naganarasimha_gr@apache.org]. 
https://builds.apache.org/job/PreCommit-YARN-Build/13472/testReport/org.apache.hadoop.yarn.server.resourcemanager/TestRMRestart/testFinishedAppRemovalAfterRMRestart/


I think events are not fully drained here which would have come from StateStore. YARN-5375 would have been a clean solution for this. I think we can make progress there with review.  , Ditto: https://builds.apache.org/job/PreCommit-YARN-Build/13997/testReport/org.apache.hadoop.yarn.server.resourcemanager/TestRMRestart/testFinishedAppRemovalAfterRMRestart/, This will be fixed by YARN-5548]