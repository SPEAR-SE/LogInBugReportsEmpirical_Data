[Hi [~stevel@apache.org]

I am trying to help on this one. 
It looks like this Jersey client was only used for ATS v2, I already saw a flag {{timelineServiceV2}} in TimelineClientImpl class, can we only init this instance when the flag is true? So in theory a timeline client would work with Jersey 2 but talk to ATS v1 using the file system writer?, ATS 1.5 Is the filesystem outputter; ATSv1.0 is REST only. I don't know about anything else ... not been keeping current with this, I am assigning this one to myself now to investigate., Attached a patch to resolve this. The thought is when timeline client failed to init, it doesn't necessarily fail the entire Yarn client. Like this case, client uses a higher version of jersey which is not compatible with yarn runtime. When this happens, we should print a warning on console and disable the timeline client, but let rest of yarn client run. Instead of failing the application., | (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 14s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 9m 9s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 20s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 17s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 31s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 20s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 0m 41s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 18s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 26s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 23s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 23s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 15s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 29s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 15s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 0m 49s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 16s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 16m 19s {color} | {color:green} hadoop-yarn-client in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 18s {color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 32m 2s {color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:9560f25 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12833410/YARN-5271.01.patch |
| JIRA Issue | YARN-5271 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux b96d6404961c 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 8a9f663 |
| Default Java | 1.8.0_101 |
| findbugs | v3.0.0 |
|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/13398/testReport/ |
| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/13398/console |
| Powered by | Apache Yetus 0.3.0   http://yetus.apache.org |


This message was automatically generated.

, Note that such tight coupling should not be required, not so that we have that library dependency between spark and Yarn. The idea of Jersey is exactly to avoid this type of tight coupling between two application frameworks. I think it is still a huge drawback of not having the History Server up. I think it is 1./ Spark's job to have enough decoupling in place; 2./ Yarn to evolve fast enough, being able to use latest libraries and benefit from added features and improvements. That being said, most likely this fix is probably a good first step., Can somebody help to review this?, Hi [~cheersyang] thanks for the patch.
While I think the fix itself is good, the unit test part fails to show regression if I remove the fix.

I suspect you want to init/start/stop spyClient instead of client object:
{code}
      spyClient.init(conf);
      spyClient.start();
      assertFalse("Timeline client should be disabled when"
          + "it is failed to init",
          spyClient.timelineServiceEnabled);
      spyClient.stop();
{code}

Also some nitpicking: 
{code}
LOG.warn("Timeline client could not be initialized "
	            + "because dependency missing or incompatible,"
{code}
It reads more natural to me to say "because of missing or incompatible dependency,"., Hi [~jojochuang]

Thanks for looking at this one. You are absolutely right I should use spyClient instead of the client, I have fixed that in v2 patch (one for trunk and one for branch-2.8). I tested if I remove the code fix, the UT will fail like following,

{code}
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.558 sec <<< FAILURE! - in org.apache.hadoop.yarn.client.api.impl.TestYarnClient
testTimelineClientInitFailure(org.apache.hadoop.yarn.client.api.impl.TestYarnClient)  Time elapsed: 0.465 sec  <<< ERROR!
java.lang.NoClassDefFoundError: Mock a failure when init timeline instance
	at org.apache.hadoop.yarn.client.api.impl.TestYarnClient.testTimelineClientInitFailure(TestYarnClient.java:170)
{code} 

 Also I have revised the warning message according to your comment. Thank you!, | (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 18s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  6m 45s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 20s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 15s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 25s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 15s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 28s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 15s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 18s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 17s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 17s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 12s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 23s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 14s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 43s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 14s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 16m 37s{color} | {color:green} hadoop-yarn-client in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 15s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 29m 36s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:a9ad5d6 |
| JIRA Issue | YARN-5271 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12838939/YARN-5271.02.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux 610e63b07a5a 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 43aef30 |
| Default Java | 1.8.0_101 |
| findbugs | v3.0.0 |
|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/13914/testReport/ |
| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/13914/console |
| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 19s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  7m 10s{color} | {color:green} branch-2.8 passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 19s{color} | {color:green} branch-2.8 passed with JDK v1.8.0_101 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 22s{color} | {color:green} branch-2.8 passed with JDK v1.7.0_111 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 15s{color} | {color:green} branch-2.8 passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 25s{color} | {color:green} branch-2.8 passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 14s{color} | {color:green} branch-2.8 passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 37s{color} | {color:green} branch-2.8 passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 15s{color} | {color:green} branch-2.8 passed with JDK v1.8.0_101 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 16s{color} | {color:green} branch-2.8 passed with JDK v1.7.0_111 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 19s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 17s{color} | {color:green} the patch passed with JDK v1.8.0_101 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 17s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 18s{color} | {color:green} the patch passed with JDK v1.7.0_111 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 18s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 12s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 22s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 13s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 47s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 11s{color} | {color:green} the patch passed with JDK v1.8.0_101 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 14s{color} | {color:green} the patch passed with JDK v1.7.0_111 {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 66m  6s{color} | {color:red} hadoop-yarn-client in the patch failed with JDK v1.7.0_111. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 16s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}147m 19s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_101 Failed junit tests | hadoop.yarn.client.TestGetGroups |
|   | hadoop.yarn.client.api.impl.TestAMRMProxy |
| JDK v1.8.0_101 Timed out junit tests | org.apache.hadoop.yarn.client.cli.TestYarnCLI |
|   | org.apache.hadoop.yarn.client.api.impl.TestAMRMClient |
|   | org.apache.hadoop.yarn.client.api.impl.TestYarnClient |
|   | org.apache.hadoop.yarn.client.api.impl.TestNMClient |
| JDK v1.7.0_111 Failed junit tests | hadoop.yarn.client.TestGetGroups |
|   | hadoop.yarn.client.api.impl.TestAMRMProxy |
| JDK v1.7.0_111 Timed out junit tests | org.apache.hadoop.yarn.client.cli.TestYarnCLI |
|   | org.apache.hadoop.yarn.client.api.impl.TestAMRMClient |
|   | org.apache.hadoop.yarn.client.api.impl.TestYarnClient |
|   | org.apache.hadoop.yarn.client.api.impl.TestNMClient |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:5af2af1 |
| JIRA Issue | YARN-5271 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12838942/YARN-5271-branch-2.8.01.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux 1403e6cca942 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | branch-2.8 / 0feb9bb |
| Default Java | 1.7.0_111 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_101 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_111 |
| findbugs | v3.0.0 |
| unit | https://builds.apache.org/job/PreCommit-YARN-Build/13916/artifact/patchprocess/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-client-jdk1.7.0_111.txt |
| JDK v1.7.0_111  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/13916/testReport/ |
| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/13916/console |
| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, The 02 patch looks good to me. Are there other comments?, Hello [~jojochuang]

Is there anything else you want me to work on for this patch? Please let me know., Thanks for reminder. +1 and will commit soon., Thank you!, Committed this to trunk, branch-2 and branch-2.8. Thanks [~cheersyang] for the patch, [~steve_l] for filing the jira and [~jo_desmet@yahoo.com] for comments., SUCCESS: Integrated in Jenkins build Hadoop-trunk-Commit #10860 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/10860/])
YARN-5271. ATS client doesn't work with Jersey 2 on the classpath.  (weichiu: rev 09520cb439f8b002e3f2f3d8f5080ffc34f4bd5c)
* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/YarnClientImpl.java
* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/test/java/org/apache/hadoop/yarn/client/api/impl/TestYarnClient.java
, Great, thanks [~jojochuang] :), Quick note: are we catching an error here and disables timeline service based on this? Catching errors seems to be inadequate as per Java API doc:
bq. An Error is a subclass of Throwable that indicates serious problems that a reasonable application should not try to catch. Most such errors are abnormal conditions. 
(https://docs.oracle.com/javase/7/docs/api/java/lang/Error.html)

Reopen this JIRA for more investigation. , Hello [~gtCarrera9]

Thank you for watching on this. This is a handler for an abnormal condition that client uses a conflict jersey dependency against Yarn, so I thought disabling timeline service was better than fail. I'd love to hear if you or anyone else have any other good suggestions.
, Thanks for the work [~cheersyang]! This looks like a pretty unfortunate case for uses to use the YARN client. I noticed we're not creating timeline clients if timeline service is turned off in the config. One inquiry is, can we fail fast and let the user disable timeline service? Raising errors as early as possible may avoid much troubles in the future? , Hi [~gtCarrera9]

The point is you'll need to try catch this exception so you can fail with a more informative error message, something like "dependency conflict, you have to disable timeline server", and people will need to add "yarn.timeline-service.enabled=false" in their client code and start all over again. The fix here was trying to alleviate this pain, it prints a warning on console and warns user timeline client could not be initialized because of dependency issue, more user friendly. How anyone else thinks?, Thanks [~cheersyang]. 
bq.  The fix here was trying to alleviate this pain, it prints a warning on console and warns user timeline client could not be initialized because of dependency issue, more user friendly.
The goad sounds reasonable but I don't think that justifies the behavior to catch and swallow an Error. What we can do is to clearly document this behavior as a known issue, *suggest* uses to *try* disable timeline services when seeing this error, instead of directly assume the root cause of an error? , Thanks [~gtCarrera9], hi [~jojochuang] what's your thought on this?, Okay. I think it's a better idea to bail out after emitting an warning message that suggests setting hadoop.yarn.timeline-service.enabled=false to disable timeline service. How does that sound?

I am going to revert this commit. [~cheersyang] can you work on a new patch based on [~gtCarrera9]'s suggestion?, Thanks [~jojochuang]! Let's not revert the change directly since the code base changed a lot since the commit. [~cheersyang] maybe you'd like to open a new JIRA and fix the issue there? Thanks! , Hi [~jojochuang] and [~gtCarrera9]

Sure, I opened YARN-6177 to get this fixed as the way [~gtCarrera9] suggested. Lets move the discussion over to that ticket, and closed this one.

Thank you.]