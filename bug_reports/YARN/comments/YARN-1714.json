[{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12628275/YARN-1714.v1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:red}-1 javac{color:red}.  The patch appears to cause the build to fail.

Console output: https://builds.apache.org/job/PreCommit-YARN-Build/3066//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12628283/YARN-1714.v1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:red}-1 javac{color:red}.  The patch appears to cause the build to fail.

Console output: https://builds.apache.org/job/PreCommit-YARN-Build/3067//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12628295/YARN-1714.v2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:red}-1 javac{color:red}.  The patch appears to cause the build to fail.

Console output: https://builds.apache.org/job/PreCommit-YARN-Build/3068//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12628368/YARN-1714.v3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:red}-1 javac{color:red}.  The patch appears to cause the build to fail.

Console output: https://builds.apache.org/job/PreCommit-YARN-Build/3073//console

This message is automatically generated., Hi Siqi, I've some thoughts about this issue:

1. Actually the current apps page provide users the full text search over the app list. Therefore, you can input user/queue to retrieve the sub list of a certain user/queue. Though I understand it's not perfect way as a complete list has to be retrieved anyway, it should meet your basic requirement, shouldn't it? Or you're looking for some thing efficient?

2. Another consideration is that now REST API is providing more filters (including user/queue) than web UI to get applications. Ideally, the two interfaces should have same or equivalent capability of exposing data. Probably you want to think about other filters here as well.

3. I had a quick look at the patch. I didn't see there's an iterative way for users to do the query other than editing url. Did I miss something?

4. Should we reuse AppsBlock?, For question 1, yes we do have full text search over the app list. By doing this, we can filter the apps on the server side. So, user will not be bothered by other people's jobs. Also, once we need to add security, it's better to see the apps that you own. 
2. I'm not aware of any REST API does the same thing, can you give me some examples?
3. For now, users have to edit url, but we can also provide direct link where people can click to get in this page. Moreover, we can automatically take user name and call this new url directly in the future when turning on security.
4. yes, we should reuse AppsBlock., bq. 2. I'm not aware of any REST API does the same thing, can you give me some examples?

You can  have a look at RMWebServices#getApps. IMO, it's good to add all these filters in one round instead of one after the other, unless different filters really differs a lot in the way they're going to be presented.

bq. 3. For now, users have to edit url, but we can also provide direct link where people can click to get in this page. Moreover, we can automatically take user name and call this new url directly in the future when turning on security.

It's a good idea that in secured mode, the users login to the apps page that only shows their own app list. However, I still think some interactive method should be provided to users to filter apps, instead of editing URL directly. For example, I'm an Admin, and want to watch the applications from another user.

Anyway, if your use case doesn't care about interaction on web UI, but the app list, the current REST API should already serve you well. Otherwise, we should make web UI more interactive.

, I am all for making the webUI more interactive. And I checked RMWebServices#getApps, it will give a different format of applications and statuses. You can't drill in the apps and see how everything is going. However, some users want the same UI as in the RM, so this patch will provide them with a simple url that displays only their job or queues., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12628368/YARN-1714.v3.patch
  against trunk revision 52bbe0f.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:red}-1 javac{color:red}.  The patch appears to cause the build to fail.

Console output: https://builds.apache.org/job/PreCommit-YARN-Build/5215//console

This message is automatically generated., [~l201514], I think the RM rest api now supports the filtering. Is this jira to add web UI support? 
canceling the patch as it doesn't apply now.]