[diff --git a/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java b/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-
index 3b0804f..922a33f 100644
--- a/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java
+++ b/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java
@@ -1074,7 +1074,8 @@ private void makeUberDecision(long dataInputLength) {
         ( (Math.max(conf.getLong(MRJobConfig.MAP_MEMORY_MB, 0),
             conf.getLong(MRJobConfig.REDUCE_MEMORY_MB, 0))
             <= sysMemSizeForUberSlot)
-            || (sysMemSizeForUberSlot == JobConf.DISABLED_MEMORY_LIMIT));
+            || (sysMemSizeForUberSlot == JobConf.DISABLED_MEMORY_LIMIT)
+            || (numReduceTasks == 0 && conf.getLong(MRJobConfig.MAP_MEMORY_MB, 0) <= sysMemSizeForUberSlot));
     boolean smallCpu =
         (
             Math.max(

diff --git a/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TestJobImpl.java b/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-cli
index 3594d57..296a3e7 100644
--- a/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TestJobImpl.java
+++ b/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TestJobImpl.java
@@ -483,6 +483,14 @@ public void testUberDecision() throws Exception {
     conf.setInt(MRJobConfig.JOB_UBERTASK_MAXMAPS, 1);
     isUber = testUberDecision(conf);
     Assert.assertFalse(isUber);
+    
+    // enable uber mode of 0 reducer no matter how much memory we assign to reducer
+    conf = new Configuration();
+       conf.setBoolean(MRJobConfig.JOB_UBERTASK_ENABLE, true);  
+       conf.setInt(MRJobConfig.NUM_REDUCES, 0);           //actual num of reducer set to 0       
+       conf.setInt(MRJobConfig.REDUCE_MEMORY_MB, 2048);   //mapreduce.reduce.memory.mb set to 2048 MB which is larger than yarn.app.mapreduce.am.resource.mb(1536 MB by default)  
+       isUber = testUberDecision(conf);
+       Assert.assertTrue(isUber);
   }
 
   private boolean testUberDecision(Configuration conf) {, This may have to be moved to the MAPREDUCE jira project.]