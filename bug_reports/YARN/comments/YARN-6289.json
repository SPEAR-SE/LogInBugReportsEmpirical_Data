[The detailed environment and results of the experiments are shown in the attachment.
, [~Huangkx6810],

For locality scheduling scheduling, there're typically two causes:

1) FileSystem/Application should support locality. For example, FileInputFormat in MR uses FileSystem.getBlockLocations to get where blocks located.

2) Misconfiguration of topology script makes wrong rack name returned for given hosts. https://hadoop.apache.org/docs/r2.7.2/hadoop-project-dist/hadoop-common/RackAwareness.html 

In addition to that.

3) There's a fix to handle too long delay to wait locality in CapacityScheduler: YARN-4287, but this will not handle #1/#2., Thanks [~leftnoteasy]

For #1 - Can you explain a little more, the answer is not clear, it should say more conclusively that  - MR is using FileSystem.getFileBlockLocations but Yarn is not honoring locality in default scheduling mode.

For #2 - Since the data is all rack local, we are not expecting this experiment to help. Is there a reason you think it might?

For #3 - There were no other jobs running on the cluster at the same time and we thought we should get 100% locality all the time. Can you please explain how to get the data locality here?, Hi [~leftnoteasy]

To verify whether rack awareness has any influence on data locality in former experiments, we have carried out two experiments in which we configured the rack awareness for all the nodes to be in the same rack and to be in separate racks respectively. 

From the results, we can find that the tasks get node locality and rack locality when configuring the rack awareness for all the nodes to be in the same rack. And, the tasks get node locality and OffSwitch when configuring the rack awareness for all the nodes to be in separate racks. 

The conclusion is that the data the rack awareness settings do not make it anymore likely to schedule data local tasks in our experiments.

The detailed environment and results of the experiments are shown in the attachment.
, [~Huangkx6810], I think this issue is caused by YARN-6344. Could you take a look to see if YARN-6344 can solve the problem or not? 

Thanks,, Thanks, [~leftnoteasy]. 
It seems works for me. I noticed the patch has been merged into Hadoop 3.0 snapshot. Acutally, I am using Hadoop 2.7 and 2.8. Is there a way to port this patch to 2.7 and 2.8?, Hi [~leftnoteasy].
I have verified that YARN-6344 issue fixes the problem.

Thanks., [~Huangkx6810], [~leftnoteasy], I have closed this as a dup of YARN-6344 as it is already resolved.]