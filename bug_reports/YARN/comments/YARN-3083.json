[Index: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/FairSchedulerPage.java
===================================================================
--- hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/FairSchedulerPage.java	(revision 9320)
+++ hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/FairSchedulerPage.java	(working copy)
@@ -64,21 +64,29 @@
 
     @Override
     protected void render(Block html) {
+//      ResponseInfo ri = info("\'" + qinfo.getQueueName() + "\' Queue Status").
+//          _("Used Resources:", StringEscapeUtils.escapeHtml(
+//              qinfo.getUsedResources().toString())).
+//          _("Num Active Applications:", qinfo.getNumActiveApplications()).
+//          _("Num Pending Applications:", qinfo.getNumPendingApplications()).
+//          _("Min Resources:", StringEscapeUtils.escapeHtml(
+//              qinfo.getMinResources().toString())).
+//          _("Max Resources:", StringEscapeUtils.escapeHtml(
+//              qinfo.getMaxResources().toString()));
       ResponseInfo ri = info("\'" + qinfo.getQueueName() + "\' Queue Status").
-          _("Used Resources:", StringEscapeUtils.escapeHtml(
-              qinfo.getUsedResources().toString())).
+          _("Used Resources:", qinfo.getUsedResources().toString()).
           _("Num Active Applications:", qinfo.getNumActiveApplications()).
           _("Num Pending Applications:", qinfo.getNumPendingApplications()).
-          _("Min Resources:", StringEscapeUtils.escapeHtml(
-              qinfo.getMinResources().toString())).
-          _("Max Resources:", StringEscapeUtils.escapeHtml(
-              qinfo.getMaxResources().toString()));
+          _("Min Resources:", qinfo.getMinResources().toString()).
+          _("Max Resources:", qinfo.getMaxResources().toString());
+
       int maxApps = qinfo.getMaxApplications();
       if (maxApps < Integer.MAX_VALUE) {
           ri._("Max Running Applications:", qinfo.getMaxApplications());
       }
-      ri._("Fair Share:", StringEscapeUtils.escapeHtml(
-        qinfo.getFairShare().toString()));
+//      ri._("Fair Share:", StringEscapeUtils.escapeHtml(
+//        qinfo.getFairShare().toString()));
+      ri._("Fair Share:", qinfo.getFairShare().toString());
 
       html._(InfoBlock.class);
 
, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12693842/fairscheduler-ui-format.patch
  against trunk revision 786dbdf.

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-YARN-Build/6387//console

This message is automatically generated., [~Xia Hu], this issue has been fixed in trunk. As you used 2.3.0, please checkout latest version., This was fixed by YARN-1975.  Reopening to resolve this as a duplicate of that.]