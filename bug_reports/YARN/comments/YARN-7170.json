[Attaching an initial patch by removing *bower-shrinkwrap-resolver-ext* dependency., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 18s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 15m 24s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  6m 56s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 20s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 11s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m  7s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  3m 30s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  3m 30s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 18s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m  7s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  3m 42s{color} | {color:green} hadoop-yarn-ui in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 25s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 32m  3s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:71bbb86 |
| JIRA Issue | YARN-7170 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12886096/YARN-7170.001.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  xml  |
| uname | Linux bc7417f08369 3.13.0-123-generic #172-Ubuntu SMP Mon Jun 26 18:04:35 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 4a83170 |
| Default Java | 1.8.0_144 |
|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/17363/testReport/ |
| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-ui U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-ui |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/17363/console |
| Powered by | Apache Yetus 0.6.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Hi [~sunilg],
Few comments/questions.
# Since {{bower-shrinkwrap-resolver-ext}} has been removed from .bowerrc, would bower detect {{bower-shrinkwrap.json}}?
# If not, we can remove bower-shrinkwrap.json too and flatten bower component's versions (no ~ or ^), so that UI won't break due to package version discrepancy.

Thoughts., Yes. Currently i was able to build it, however it still pulls a close 1Gb of dependency.
, [~sunilg]/[~akhilpb], do you intend to get this for 2.9.0 as it looks relevant?, -02:
* upgrade frontend-maven-plugin
* also move it's version definition to the proper location in the maven repo, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 19s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  1m 27s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 13m 54s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 18m 27s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 40s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 43m 39s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 20s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 16s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 16s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 14m  3s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 14m  3s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 43s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  3s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green}  9m 45s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 25s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  0m 12s{color} | {color:green} hadoop-project in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  3m 12s{color} | {color:green} hadoop-yarn-ui in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 30s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 74m 34s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:3d04c00 |
| JIRA Issue | YARN-7170 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12891630/YARN-7170.002.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  xml  |
| uname | Linux 2d783ea6026a 3.13.0-129-generic #178-Ubuntu SMP Fri Aug 11 12:48:20 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 075358e |
| Default Java | 1.8.0_144 |
|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/17881/testReport/ |
| modules | C: hadoop-project hadoop-yarn-project/hadoop-yarn/hadoop-yarn-ui U: . |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/17881/console |
| Powered by | Apache Yetus 0.6.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Using HADOOP-14945 (which fixes docker -i mode when GPG signing isn't required), I ran two builds on ASF Jenkins, each using this command line:

{code}
dev-support/bin/create-release --docker --native --dockercache
{code}

Once with plain trunk+14945 an once with the -02 patch.  My understanding is that bower and friends cache in the home directory. By running each build in separate Docker containers with their own home dirs and their own maven repo caches, nothing should get cached between the two builds.

As a result, the -02 patch cuts build time by  ~3 minutes.  Of course, the ASF also has a significantly faster network pipe than if you were building at home. Additionally the node I was running on wasn't doing much during the first run but got another job scheduled during the second run.  As a result, times here should be viewed as conservative.

It'd be great if someone else can confirm that upgrading the frontend plugin has a significant impact on the build time., I tried this command with v2 patch. I could see that dependency is lesser now interms of size. Regarding build time, this plugin definitely helps with latest version.

However  we are also checking to move away from bower 100%. We already use Yarn package manager now. There are some more improvements to be done as per https://bower.io/blog/2017/how-to-migrate-away-from-bower/ 

For now, I think the current changes in v2 patch seems good enough start to improve the current state. [~Sreenath] could you also please take a look., +1
As pointed out by [~sunilg], v2 patch helps in mitigating the impediment issues.

Once bower-shrinkwrap-resolver-ext is removed, the semver based dependency resolution would start picking the latest available version that matches the pattern. In IDEAL SITUATIONS that shouldn't cause any issues, and considering that we are moving towards a better method for bower side dependency resolution, things must be fine down the line., Hi [~sunil.govind@gmail.com]
Do you think this might be needed in the branch2 backport as well? 

thanks
Vrushali
, Yes. We need this there as well., Thanks Sunil! Will wait for this to get committed and pick it up right away. , Pushed to branch-3.0/trunk, thanks [~sunilg] and thanks reviews from [~Sreenath]/[~aw]/[~akhilpb]!, SUCCESS: Integrated in Jenkins build Hadoop-trunk-Commit #13115 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/13115/])
YARN-7170. Improve bower dependencies for YARN UI v2. (Sunil G via (wangda: rev 4afd308b62d2335f31064c05bfefaf2294d874b0)
* (edit) hadoop-project/pom.xml
* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-ui/pom.xml
* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-ui/src/main/webapp/.bowerrc
]