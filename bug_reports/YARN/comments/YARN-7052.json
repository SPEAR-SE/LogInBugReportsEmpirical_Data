[Using {{HadoopExecutor}} may not be feasible.

The following is used to launch the preemption thread:
{code:title=SchedulingMonitor#serviceStart}
    ses = Executors.newSingleThreadScheduledExecutor(new ThreadFactory() {
...
    handler = ses.scheduleAtFixedRate(new PreemptionChecker(),
        0, monitorInterval, TimeUnit.MILLISECONDS);
{code}

{{HadoopExecutors}} provides a {{newSingleThreadScheduledExecutor}} interface, but it just turns around and calls {{Executors#newSingleThreadScheduledExecutor}}. The {{HadoopExecutors#newSingleThreadScheduledExecutor}} method does not provide the {{HadoopScheduledThreadPoolExecutor}} wrapper in the return value of that interface, so you don't get the logging benefits if you use {{HadoopExecutors#newSingleThreadScheduledExecutor}}

Alternatively, we could have the thread itself catch and handle throwables.

The thread being launched by {{SchedulingMonitor#serviceStart}} is calling {{PreemptionChecker#run}}, which only handles {{YarnRuntimeException}}. Anything else will cause the thread to hang and not get rescheduled.

I suggest that another solution would be to handle other throwables, log them, and either re-throw or cancel the thread., bq. I suggest that another solution would be to handle other throwables, log them, and either re-throw or cancel the thread.
After an off-line discussion with [~jlowe], I think it would be better to catch throwables, log them, and skip the invocation. Preemption does not have persistent structures across invocations, plus it doesn't modify any existing leaf queue structures.

Since preemption can be an important productivity feature for certain use cases, I am marking this critical for 2.8.2., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  1m 22s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 16m  4s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 34s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 26s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 39s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m  4s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 23s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 34s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 34s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 34s{color} | {color:green} the patch passed {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 23s{color} | {color:orange} hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager: The patch generated 1 new + 1 unchanged - 0 fixed = 2 total (was 1) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 35s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 11s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 20s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 49m 52s{color} | {color:red} hadoop-yarn-server-resourcemanager in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 19s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 75m 39s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.yarn.server.resourcemanager.scheduler.capacity.TestContainerAllocation |
| Timed out junit tests | org.apache.hadoop.yarn.server.resourcemanager.TestRMStoreCommands |
|   | org.apache.hadoop.yarn.server.resourcemanager.TestSubmitApplicationWithRMHA |
|   | org.apache.hadoop.yarn.server.resourcemanager.TestKillApplicationWithRMHA |
|   | org.apache.hadoop.yarn.server.resourcemanager.TestRMHAForNodeLabels |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:14b5c93 |
| JIRA Issue | YARN-7052 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12883601/YARN-7052.001.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux d5ea45e62c4a 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / c2cb7ea |
| Default Java | 1.8.0_144 |
| findbugs | v3.1.0-RC1 |
| checkstyle | https://builds.apache.org/job/PreCommit-YARN-Build/17122/artifact/patchprocess/diff-checkstyle-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |
| unit | https://builds.apache.org/job/PreCommit-YARN-Build/17122/artifact/patchprocess/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/17122/testReport/ |
| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/17122/console |
| Powered by | Apache Yetus 0.6.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, The following unit tests are all passing for me in my environment:
{noformat}
  org.apache.hadoop.yarn.server.resourcemanager.TestRMStoreCommands
  org.apache.hadoop.yarn.server.resourcemanager.TestSubmitApplicationWithRMHA
  org.apache.hadoop.yarn.server.resourcemanager.TestKillApplicationWithRMHA
  org.apache.hadoop.yarn.server.resourcemanager.TestRMHAForNodeLabels 
{noformat}

The {{TestContainerAllocation}} unit test is the same as YARN-7044, I'm a bit hesitant to catch Throwable instead of Exception when suppressing, but that's exactly what the thread pool executor is going to do as well.

+1 lgtm.  I'll commit this later today if no objections, cleaning up the unused import checkstyle nit during the process.
, Thanks, Eric!  I committed this to trunk, branch-2, branch-2.8, and branch-2.8.2., SUCCESS: Integrated in Jenkins build Hadoop-trunk-Commit #12244 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/12244/])
YARN-7052. RM SchedulingMonitor gives no indication why the spawned (jlowe: rev 39a9dc8e4a6e1d13658867ad756878d3dd6352b0)
* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/SchedulingMonitor.java
]