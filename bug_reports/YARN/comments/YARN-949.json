[{noformat}
2013-07-20 14:55:23,901 [LogAggregationService #64] WARN org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.AppLogAggregatorImpl:
Aggregation did not complete for application application_xxx_xxx
2013-07-20 14:55:23,902 [LogAggregationService #64] ERROR org.apache.hadoop.yarn.YarnUncaughtExceptionHandler: Thread 
Thread[LogAggregationService #64,5,main] threw an Exception.
java.lang.NullPointerException
        at org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogValue.write(AggregatedLogFormat.java:187)
        at org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter.append(AggregatedLogFormat.java:264)
        at org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.AppLogAggregatorImpl.
uploadLogsForContainer(AppLogAggregatorImpl.java:128)
        at org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.AppLogAggregatorImpl.
doAppLogAggregation(AppLogAggregatorImpl.java:164)
        at org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.AppLogAggregatorImpl.run(AppLogAggregatorImpl.java:138)
        at org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.LogAggregationService$2.run(LogAggregationService.java:361)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:722)
{noformat}


It looks like the loop calling uploadLogsForContainer() should be inside a try block and closeWriter() should be moved to the finally block., The patch makes uploadLogsForContainer() catch Exception, not just IOException and log. If one input was the cause, the corresponding container log will be skipped. If the output was the cause, appending the next container log may or may not work. In any case, the writer will be closed and subsequent cleanup will happen., The change is OK in the sense that it makes it more robust to errors occurring during log uploading, but we're masking an NPE here which seems bad.

I think we should also fix the cause of the NPE itself, which is in LogValue.write.  This code in 0.23 should have a null check for {{in}} before trying to call close:

{code}
         // Write the log itself
          FileInputStream in = null;
          try {
            in = new FileInputStream(logFile);
            byte[] buf = new byte[65535];
            int len = 0;
            while ((len = in.read(buf)) != -1) {
              out.write(buf, 0, len);
            }
          } finally {
            in.close();
          }
{code}

Looks like this was already fixed in trunk and branch-2 by YARN-578., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12593767/YARN-949.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/1552//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/1552//console

This message is automatically generated., I will try pulling YARN-578 and its dependency to branch-0.23 to fix the NPE problem., Well, YARN-578 depends on HADOOP-9511, which depends on HADOOP-8952. , It's actually  HADOOP-8562. The commit message for r1453486 has the wrong jira number., It is unlikely that HADOOP-8562 and YARN-578 will ever get merged to branch-0.23. How about adding the null check for branch-0.23 as part of this jira?, Sounds good to me.  Adjusting affects/target versions appropriately., The new patch is for branch-0.23 only.
, Thanks, Kihwal.  I committed this to branch-0.23.]