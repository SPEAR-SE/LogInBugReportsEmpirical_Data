[Trivial patch, no test cases added, The reason is: At RMAppAttemptImpl::generateProxyUriWithoutScheme(String)
{code}
      return result.toASCIIString().substring(HttpConfig.getSchemePrefix().length());
{code}
can return an empty String,

But at WebAppProxyServlet, it only check whether the urlString is null or not, we should also check the empty string., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12603030/YARN-1157.1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/1915//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/1915//console

This message is automatically generated., bq. can return an empty String
looks like it returns empty string because Distributed Shell registered the URL as empty string.
we probably can sanity check in AMRegisteredTransition/AMUnregisteredTransition that if it's empty String, leave the appAttempt.origTrackingUrl still as "N/A".
Then we don't need to special case the empty string in WebAppProxyServlet

Also, In fact in RegisterApplicationMasterRequest's comment, users are already instructed to use 'null' as default value, but in FinishApplicationMasterRequest, we don't have, we can also add that in the comment., Tx guys, couple of comments:
 - Agree with Jian, all users of the trackingUrl, for e.g. ApplicationReport will have the same issue. So let's make sure that once registration and finish-app is done, the url in RM's memory is always "N/A" if not explicitly set by AM.
 - Let's document RegisterApplicationMasterRequest.getTrackingUrl() and setTrackingUrl() to describe that empty, null, "N/A" strings are all valid besides a real URL.
 - Similarly FinishApplicationMasterRequest.

The real underlying problem is that tracking URL is a string and not a URL :) Too late to make incompatible changes, but I'll file a ticket., bq. The real underlying problem is that tracking URL is a string and not a URL :) Too late to make incompatible changes, but I'll file a ticket.
Filed YARN-1211., Thanks, [~vinodkv] and [~jianhe] for the comments.

I agree with all your comments. We can definitely fix this problem by adding check in AMRegisteredTransition/AMUnregisteredTransition as Jian mentioned. But just for this ticket, when the yarn application (distributed shell) is finished, the applicationMaster will do 
{code}
resourceManager.unregisterApplicationMaster(appStatus, appMessage, null)
{code}

And at RMAppAttempt::AMUnregisteredTransition(), the orginalUrl will overwritten by 
{code}
      appAttempt.origTrackingUrl = unregisterEvent.getTrackingUrl();
{code}

Here, we can find that ApplicationMaster has already set url as null. But why can we still get the orginalUrl as empty string ?
I think that the real problem happens in FinishApplicationMasterRequestPBImpl::setTrackingUrl(String)
{code}
  @Override
  public void setTrackingUrl(String url) {
    maybeInitBuilder();
    if (url == null) {
      builder.clearTrackingUrl();
      return;
    }
    builder.setTrackingUrl(url);
  }
{code}

So, even we already set the url as Null, when we create the FinishApplicationMasterRequest, the url will be as empty string.

Anyway, I think adding the check should solve this issue., bq.all users of the trackingUrl, for e.g. ApplicationReport will have the same issue. So let's make sure that once registration and finish-app is done, the url in RM's memory is always "N/A" if not explicitly set by AM.

Adding this logic in both AMRegisteredTransition/AMUnregisteredTransition
{code}
      String url = registrationEvent.getTrackingurl();
      if (url == null || url.trim().isEmpty()) {
        appAttempt.origTrackingUrl = "N/A";
      } else {
        appAttempt.origTrackingUrl = url;
      }
{code}

bq.Let's document RegisterApplicationMasterRequest.getTrackingUrl() and setTrackingUrl() to describe that empty, null, "N/A" strings are all valid besides a real URL.

Done

bq.Similarly FinishApplicationMasterRequest.

Done

Also added a new testcase, fixed the testcase failure, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12603734/YARN-1157.2.patch
  against trunk revision .

    {color:red}-1 patch{color}.  Trunk compilation may be broken.

Console output: https://builds.apache.org/job/PreCommit-YARN-Build/1951//console

This message is automatically generated., Kick off the Jenkins again, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12603749/YARN-1157.2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/1952//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/1952//console

This message is automatically generated., The patch is not applying more, can you please update? Tx., Update patch based on latest trunk, For the following code, we may create a common function for both AMRegisteredTransition and AMUnregisteredTransition
{code}
      String url = unregisterEvent.getTrackingUrl();
      if (url == null || url.trim().isEmpty()) {
        appAttempt.origTrackingUrl = "N/A";
      } else {
        appAttempt.origTrackingUrl = url;
      }
      appAttempt.proxiedTrackingUrl = 
        appAttempt.generateProxyUriWithoutScheme(appAttempt.origTrackingUrl);
{code}

bq. Let's document RegisterApplicationMasterRequest.getTrackingUrl() and setTrackingUrl()
Can you also document in the specific method comments ? for both registerRequest and unregisterRequest. And also say something like for those default values, will fallback to ResourceManager's app page

Typo in RegisterApplicationMasterRequest: are all "values"

The tests can probably be done with TestRMAppAttemptTransitions.runApplicationAttempt, In fact,the earlier tests in TestRMAppAttemptImpl can probably also be merged into TestRMAppAttemptTransitions. and so we don't need to change the visibility of AMregisteredTransition and AMUnregisteredTransition. 
, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12604637/YARN-1157.3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/1987//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/1987//console

This message is automatically generated., bq.For the following code, we may create a common function for both AMRegisteredTransition and AMUnregisteredTransition

Done

bq.Can you also document in the specific method comments ? for both registerRequest and unregisterRequest. And also say something like for those default values, will fallback to ResourceManager's app page

Added

bq.Typo in RegisterApplicationMasterRequest: are all "values"

Fixed

bq.The tests can probably be done with TestRMAppAttemptTransitions.runApplicationAttempt, In fact,the earlier tests in TestRMAppAttemptImpl can probably also be merged into TestRMAppAttemptTransitions. and so we don't need to change the visibility of AMregisteredTransition and AMUnregisteredTransition.

Removed TestRMAppAttemptImpl. We will cover all its tests in TestRMAppAttemptTransitions. Change the visibility of AMregisteredTransition and AMUnregisteredTransition back to private.

, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12604723/YARN-1157.4.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/1994//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/1994//console

This message is automatically generated., create the patch based on the latest trunk, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12604851/YARN-1157.5.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/2003//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/2003//console

This message is automatically generated., Adding more comments in RegisterApplicationMasterRequest and FinishApplicationMasterRequest, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12604859/YARN-1157.6.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/2004//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/2004//console

This message is automatically generated., Tests look much clean, thanks for the update, patch looks good, + 1, Patch looks good to me too, except for the javadoc. Will upload the javadoc fixes myself., Same patch with javadoc fixes and a method rename., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12605142/YARN-1157.7.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 1 warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/2019//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/2019//console

This message is automatically generated., fix -1 on javadoc warning, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12605160/YARN-1157.8.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/2021//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/2021//console

This message is automatically generated., Committed this to trunk, branch-2 and branch-2.1. Thanks Xuan!, SUCCESS: Integrated in Hadoop-trunk-Commit #4470 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/4470/])
YARN-1157. Fixed ResourceManager UI to behave correctly when apps like distributed-shell do not set tracking urls. Contributed by Xuan Gong. (vinodkv: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1526371)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/FinishApplicationMasterRequest.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/RegisterApplicationMasterRequest.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/TestRMAppAttemptImpl.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/TestRMAppAttemptTransitions.java
, FAILURE: Integrated in Hadoop-Yarn-trunk #344 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/344/])
YARN-1157. Fixed ResourceManager UI to behave correctly when apps like distributed-shell do not set tracking urls. Contributed by Xuan Gong. (vinodkv: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1526371)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/FinishApplicationMasterRequest.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/RegisterApplicationMasterRequest.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/TestRMAppAttemptImpl.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/TestRMAppAttemptTransitions.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1560 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1560/])
YARN-1157. Fixed ResourceManager UI to behave correctly when apps like distributed-shell do not set tracking urls. Contributed by Xuan Gong. (vinodkv: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1526371)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/FinishApplicationMasterRequest.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/RegisterApplicationMasterRequest.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/TestRMAppAttemptImpl.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/TestRMAppAttemptTransitions.java
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1534 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1534/])
YARN-1157. Fixed ResourceManager UI to behave correctly when apps like distributed-shell do not set tracking urls. Contributed by Xuan Gong. (vinodkv: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1526371)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/FinishApplicationMasterRequest.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/RegisterApplicationMasterRequest.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/TestRMAppAttemptImpl.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/TestRMAppAttemptTransitions.java
, Closing old tickets that are already part of a release.]