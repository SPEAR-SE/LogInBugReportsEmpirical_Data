[Upon further investigation, you cannot "hack" the yarn-site.xml file.

1) If you thinly a non-simple field for the value of hadoop.securiy.authentication (i.e. "proxy" , "kerberos", "kerberos_ssl",...) then you will get a "security method is not enabled" exception. 

2) If you try the other hack of a "dummy" security method (i.e. hadoop.security.authentication = "foo"), you get the (expected) exception "Invalid attribute value of hadoop.security.authentication" error.

So I dont see a good workaround, unless maybe there is a simple way to implement a dummy implementation of security ., [~jayunit100], please refer to YARN-1253 for details on why is this way. IMO this is not a bug., Thanks for the quick response ! will respond in that thread., I guess, depending on the answer to the issue i raised here YARN-1253 , you might be right, this is not a "bug" .

As part of closing this ticket:  Can you suggest a "simple" workaround to YARN-1253 ?  In my case , I'd like to run my cluster with LinuxContainers and disable impersonation entirely. , O the yarn-site.xml of the NMs:

{code}
   <property>
    <description>The UNIX user that containers will run as when Linux-container-executor
    is used in nonsecure mode (a use case for this is using cgroups).</description>
    <name>yarn.nodemanager.linux-container-executor.nonsecure-mode.local-user</name>
    <value>nobody</value>
  </property>
{code}
, That will not allow multi tenancy.... 
Maybe there is no workaround?, what exactly are you referring as multi tenancy?
, for example, if sally submits a job in SIMPLE mode, I'd still like the job to run under Sally's user name,..., Access to HDFS happens as Sally's username. While access to local resources in the node, as nobody (or the user you configure). It was agreed that was a security risk to allow user impersonation for the process without strong authentication as you can easily fake anybody by setting the user.name Java System property., Yes i think this makes sense .  Just one minor correction that its not an HDFS Specific security hole: Any Hadoop compatible file system could suffer this vulnerability because the LCE runs as root, and can thuse su as any user, i beleive., well... to be precise not "runs as root" but "executes w/ root priviliges"., CLOSING this bug, with mixed feelings :) ...

In any case *THANKS* alot for your help on this.  Pointing out that previous JIRA was very helpful.  I guess we can close this JIRA now.  Hopefully some discussion on the mailing list will help me to consider some other options! , not really, refer to the {{container-executor.c}} file, you'll see how things work., its the root owndership + setuid bit that allows us to do. 
{noformat}
(seteuid(user) != 0) 
{noformat}
which is what im referring to above... that ability will essentially be a security issue in any hadoop compatible file system i think, not just hdfs.

, Reopening, based on the following use case: 

1) Alice and Tom trust each other.
2) They run their jobs on the same cluster.
3) Neither would ever knowingly do anything to harm the other (i.e. impersonate user and then write code in a M/R job to scrape ssh keys from local fs.)
4) But tom is a novice developer, and  MIGHT do something funny like accidentally overwrite files in /user/alice/ in some of his jobs, so SOME process isolation would be nice to have.
5) And also : alice and tom are using a posix style HCFS  where uid is important in order to do operations like chown.

So in the above scenario, there really is not much need for kerberization: its a simple and lightweight cluster with trusted users , but there is alot of value in having some basic process isolation nevertheless...i.e. from linux containers. 

SUGGESTION: 

Rather than add an extra parameter, we just can allow a wildcard parameter in the nonsecure.local-user parameter value :

{noformat}
+    <name>yarn.nodemanager.linux-container-executor.nonsecure-mode.local-user</name>
+    <value>*</value>
{noformat}  

That anyone who  is submitting a job, is the user that the LCE will run under.  

Essentially, this provides administrators the option of disabling/enabling the feature added in YARN-1253., Marking as dupe of YARN-2424. Please reopen if my understanding is incorrect, Closing old tickets that are already part of a release.]