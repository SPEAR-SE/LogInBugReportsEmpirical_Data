[If I do:

{code}
Map<String, LocalResource> localResources = new HashMap<String, LocalResource>();
localResources.put("node-ring-app-master.jar", appMasterJarResource);
appContext.getAMContainerSpec().setLocalResources(localResources);
{code}

Things work fine.

If I instead do the more "extending" form:

{code}
Map<String, LocalResource> localResources = appContext.getAMContainerSpec().getLocalResources();
localResources.put("node-ring-app-master.jar", appMasterJarResource);
appContext.getAMContainerSpec().setLocalResources(localResources);
{code}

Then the mutations don't stick.

Wonder if this is somehow a Java oddity?, Check the code in ContainerLaunchContextPBImpl:

{code}
  @Override
  public Map<String, LocalResource> getLocalResources() {
    initLocalResources();
    return this.localResources;
  }

  private void initLocalResources() {
    if (this.localResources != null) {
      return;
    }
    ContainerLaunchContextProtoOrBuilder p = viaProto ? proto : builder;
    List<StringLocalResourceMapProto> list = p.getLocalResourcesList();
    this.localResources = new HashMap<String, LocalResource>();

    for (StringLocalResourceMapProto c : list) {
      this.localResources.put(c.getKey(), convertFromProtoFormat(c.getValue()));
    }
  }
  
  @Override
  public void setLocalResources(
      final Map<String, LocalResource> localResources) {
    if (localResources == null)
      return;
    initLocalResources();
    this.localResources.clear();
    this.localResources.putAll(localResources);
  }
{code}

In your second case, localResources is the same object of appContext.getAMContainerSpec().localResources. When setLocalResources is called, the instance is cleaned up first, and then appends itself, which already contains no items.

The buggy part is that setters don't really set the collections but append them to the existing ones. It's not the only problem with ContainerLaunchContextPBImpl, but with all XXXXPBImpls that set collections (see YARN-489). A special issue with ContainerLaunchContextPBImpl is that appending will be done after cleaning up.

, Thanks! I've resolved this as a dupe of YARN-489, which covers this.]