[Attached log file., Call flow is attached file issue is 
1. Disconnected event which made *zkClient=null*.
2. Call for ZKRMStateStore.updateApplicationAttemptStateInternal() from RMAppAttemptImpl.(EXPIRED event not yet come)., there seems to be a race here. what causes the Disconnected event ?, Lets say zkClient session connected to server X. Killing/Stopping server X causes disconnected event. Immideately zkClient internally retry for other configured servers. If it is able to establish connection with other server then Syncconnected evet is triggered, elseif it is able to connect to one of the configured server but Quorum is not satisfied tthen session expired event triggered.

In my test,  2 out of 3 ZooKeeper is killed so that quorum not satisfied. But these zookeeper servers were restarted after 5 seconds., Assigning to myself, will take a look early next week. [~jianhe], [~rohithsharma] - please feel free to take it over if you can get to it earlier than that., Ideally, we should guard against accessing zkClient with a getZkClient() method that attempts a new connection if zkClient is null., Or, move all uses to runWithCheck()., I think we should have all uses of zkClient with runWithCheck(), Working on a patch, will try to post something later today or tomorrow. , Here is a patch that replaces all direct references to zkClient and uses runWithCheck instead. 

ZKRMStateStore has become very unwieldy and hard to manage. We should definitely clean it up. Thinking about it, I think we should just have have RMZooKeeper and/or RMFencingZooKeeper classes that extend/wrap ZooKeeper and override the methods we need. That would make the remaining ZK code much easier to read and maintain. Would like to work on this on a separate JIRA target for 2.5.

Haven't added a test in the patch. I am tempted not to, given the intention to cleanup/revamp the ZK interactions. Can add one if insisted. 

, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12640175/yarn-1934-0.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/3568//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/3568//console

This message is automatically generated., +1 patch looks good to me :-), looks good to me also, committing soon, thanks Karthik!, Committed to trunk, branch-2, branch-2.4. Thanks Rohith for reporting the issue and thanks Karthik for the patch!, SUCCESS: Integrated in Hadoop-trunk-Commit #5523 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/5523/])
YARN-1934. Fixed a potential NPE in ZKRMStateStore caused by handling Disconnected event from ZK. Contributed by Karthik Kambatla. (jianhe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1587776)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk #542 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/542/])
YARN-1934. Fixed a potential NPE in ZKRMStateStore caused by handling Disconnected event from ZK. Contributed by Karthik Kambatla. (jianhe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1587776)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1734 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1734/])
YARN-1934. Fixed a potential NPE in ZKRMStateStore caused by handling Disconnected event from ZK. Contributed by Karthik Kambatla. (jianhe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1587776)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #1759 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1759/])
YARN-1934. Fixed a potential NPE in ZKRMStateStore caused by handling Disconnected event from ZK. Contributed by Karthik Kambatla. (jianhe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1587776)
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java
]