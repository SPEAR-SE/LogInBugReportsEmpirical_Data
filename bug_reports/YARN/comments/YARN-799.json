[+1 to append to tasks, check https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Resource_Management_Guide/sec-Moving_a_Process_to_a_Control_Group.html for ref. , Is there a reason that it would ever be beneficial to write to /cgroup.procs over /tasks?, [~sandyr] Not sure. I'm afraid my cgroup experience is limited to <24h :P
, Just found this comment in the original YARN-3 discussion:

bq. This is a small edit to the previous patch. It now writes the process ID to "cgroup.procs" instead of "tasks" so other kernel threads started by the same process stay in the cgroup.

So it seems like there is some reasoning behind it, and having other threads started by the same process stay in the cgroup is important.  I'll have to learn more about cgroups to have an opinion on the right course of action., Fair enough. One thing that I notice is, when I patch to write to /tasks, the tasks file has >1 PID in it, while the cgroup.procs file has only 1 (as expected). This suggests to me that the tasks file contains all child PIDs, so I'm a bit confused about the comment in YARN-3. Nevertheless, it'd be worth verifying., Thread group IDs should be written to /cgroup.procs while individual thread IDs are written to /tasks. Effectively this means that /cgroup.procs can be used to atomically move entire processes to a cgroup, while /tasks requires cgroup movement occur thread by thread, an inherently racy operation (i.e. a new thread is created during the move will be left behind in the old cgroup unless the move is retried). That makes /cgroup.procs more attractive for cgroup migration. Once threads are in the new cgroup, it doesn't matter how they got there: if they fork, their children will be in the new cgroup too.

However, /cgroup.procs has some issues:
# As identified in the original bug report, /cgroup.procs wasn't always writable, so we'd need to fall back to /tasks when /cgroup.procs is read-only.
# On all SLES 11 kernels I've tested (including the upcoming SLES 11 SP3), it's trivial to crash the kernel via /cgroup.procs., Hey Adar,

Thanks, this is super useful. In the case of YARN, I believe it's setting up the cgroup.procs file in the container-executor, prior to any user-code being executed. I also don't think it's using any threading. In such a case, is it safe to write to tasks? It seems that if a single threaded process moves itself into cgroup.procs, and then spawns the user code, everything from then-on-out should end up in /tasks, right?

Cheers,
Chris, If YARN can guarantee that containers are single threaded at the time of cgroup setup, /tasks and /cgroup.procs are interchangeable, and /tasks should be preferred for simplicity and robustness.

Where it gets more interesting is cgroup migration after the fact, but if there's no use case for that, it's irrelevant., Hey Adar,

Excellent. Looking at:

http://svn.apache.org/viewvc/hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/native/container-executor/impl/container-executor.c?view=markup

CGroup enforcement is triggered at line 894. Line 939 appears to be where the container-launch script is executed. I believe it should be safe to just write to /tasks, but perhaps someone with more experience with container-launcher could chime in?

Cheers,
Chris, Yes, I've looked at this code before. Using /tasks there should be fine., Good deal. I'll send in a patch in 5m., Simple tweak to use /tasks instead of /cgroup.procs. Tested locally, and it works., I've not added any tests, but tested locally. What's the protocol here?, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12587707/YARN-799.0.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/1225//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/1225//console

This message is automatically generated., Adar, could you sync with Alejandro and Sandy, so we can get this in?, I just committed this. Thanks [~criccomini] and [~adar]!, Integrated in Hadoop-trunk-Commit #3965 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/3965/])
    YARN-799. Fix CgroupsLCEResourcesHandler to use /tasks instead of /cgroup.procs. Contributed by Chris Riccomini. (Revision 1494035)

     Result = SUCCESS
acmurthy : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1494035
Files : 
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java
, Integrated in Hadoop-Yarn-trunk #244 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/244/])
    YARN-799. Fix CgroupsLCEResourcesHandler to use /tasks instead of /cgroup.procs. Contributed by Chris Riccomini. (Revision 1494035)

     Result = SUCCESS
acmurthy : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1494035
Files : 
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java
, Integrated in Hadoop-Hdfs-trunk #1434 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1434/])
    YARN-799. Fix CgroupsLCEResourcesHandler to use /tasks instead of /cgroup.procs. Contributed by Chris Riccomini. (Revision 1494035)

     Result = FAILURE
acmurthy : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1494035
Files : 
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java
, Integrated in Hadoop-Mapreduce-trunk #1461 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1461/])
    YARN-799. Fix CgroupsLCEResourcesHandler to use /tasks instead of /cgroup.procs. Contributed by Chris Riccomini. (Revision 1494035)

     Result = SUCCESS
acmurthy : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1494035
Files : 
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java
]