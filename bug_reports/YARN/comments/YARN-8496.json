[ 

I think it's important to check that the resources meet the minimum resource allocation
{code:java}
// ParentQueue.java
@Override
public synchronized CSAssignment assignContainers(Resource clusterResource,
    FiCaSchedulerNode node, ResourceLimits resourceLimits) {
  CSAssignment assignment = 
      new CSAssignment(Resources.createResource(0, 0), NodeType.NODE_LOCAL);
  Set<String> nodeLabels = node.getLabels();

if (!Resources.fitsIn(minimumAllocation, node.getAvailableResource())) {
  return assignment;
}
...
}

{code}, [~tangshangwen] , thanks for raising up this issue. This allocation is basically a multiple resource allocation which uses DRC when calculating the amount of resource we allocate for each container. When we calculate if the node has the available resource to do more allocation or not, we pick the dominant resource and do the calculation. This may cause dominant resource still have available but some other resource is already not enough to do the allocation. 

I think we need to fix this. 

[~sunilg] , could you share thoughts on this?

 

 , I'll update a patch later

, Thanks, [~tangshangwen] . I can help review the patch when it's ready.]