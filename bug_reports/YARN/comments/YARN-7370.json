[[~eepayne], actually I think all preemption parameters should be refreshable, and includes the whole preemption enable/disable., 1) Can I take this task?
2) Do you mean to add a new rmadmin command like -refreshSchedulingMonitors or make this part of -refreshQueues?, [~GergelyNovak], thank you for your interest. Please go ahead and take this JIRA.
bq. 2) Do you mean to add a new rmadmin command like -refreshSchedulingMonitors or make this part of -refreshQueues?
My opinion is to include these as part of the {{-refreshQueues}} option. The queue-specific disable preemption option is refreshable under {{-refreshQueues}}, so I think it makes sense to refresh the others in the same way., [~GergelyNovak], you're very much welcome to take up this task, this is quite helpful and important for user to use preemption.

I agree with Eric, it's better to include this in {{-refreshQueues}} op so we don't need any changes to RMAdmin protocol and CLI. To me the requirement is:

- Handle changes to {{SchedulingEditPolicy}} configs including preemption (which means {{SchedulingMonitor}} should be refreshable as well).
- All preemption-related parameters.

[~eepayne]/[~sunilg], please feel free to add any requirement in your mind., Yes. I am also in same line in using {{-refreshQueues}} for refreshing all preemption-related params., Thanks [~leftnoteasy], [~sunilg], and [~GergelyNovak].

So, just to be clear, I think we would all like the following preemption properties to be refreshable with {{yarn rmadmin -refreshQueues}}:
{noformat}

yarn.resourcemanager.scheduler.monitor.enable
yarn.resourcemanager.monitor.capacity.preemption.max_ignored_over_capacity
yarn.resourcemanager.monitor.capacity.preemption.max_wait_before_kill
yarn.resourcemanager.monitor.capacity.preemption.monitoring_interval
yarn.resourcemanager.monitor.capacity.preemption.natural_termination_factor
yarn.resourcemanager.monitor.capacity.preemption.observe_only
yarn.resourcemanager.monitor.capacity.preemption.select_based_on_reserved_containers
yarn.resourcemanager.monitor.capacity.preemption.total_preemption_per_round
yarn.scheduler.capacity.lazy-preemption-enabled


# Intra-queue-specific properties:
yarn.resourcemanager.monitor.capacity.preemption.intra-queue-preemption.enabled
yarn.resourcemanager.monitor.capacity.preemption.intra-queue-preemption.minimum-threshold
yarn.resourcemanager.monitor.capacity.preemption.intra-queue-preemption.max-allowable-limit
yarn.resourcemanager.monitor.capacity.preemption.intra-queue-preemption.preemption-order-policy
{noformat}

I do NOT think we want to refresh {{yarn.resourcemanager.scheduler.monitor.policies}} since that would require stopping and restarting the monitor thread. At least, if we want to make this refreshable, I suggest that we do it as part of a separate JIRA.

Also, just FYI, the {{yarn.scheduler.capacity.root.\[QUEUEPATH\].disable_preemption}} property is already refreshable.
, Make sense, [~eepayne]. 

I just found previously I filed a JIRA: YARN-6124. 

Let's move enable/disable preemption to YARN-6124, and move preemption properties refresh to this JIRA.

And FYI: I have a wip patch in YARN-6124, which should be directly ported to this JIRA to solve the problems (See {{syncConfigFromScheduler}} in attached patch of YARN-6124)., Link this JIRA to YARN-6124. , Offline discussing this JIRA with [~GergelyNovak], I felt it might be better to do this discussion on community.

YARN-6142, we will take care of all scheduling edit policy refresh. So for this JIRA, I would like to keep it as simple as possible: 

In current implementation. PCPP#init is called only when RMActiveService start. What we can do here is: 

1) Move all config-related updates such as: 

    maxIgnoredOverCapacity = csConfig.getDouble(
        CapacitySchedulerConfiguration.PREEMPTION_MAX_IGNORED_OVER_CAPACITY,
        CapacitySchedulerConfiguration.DEFAULT_PREEMPTION_MAX_IGNORED_OVER_CAPACITY);

    naturalTerminationFactor = csConfig.getDouble(
        CapacitySchedulerConfiguration.PREEMPTION_NATURAL_TERMINATION_FACTOR,
        CapacitySchedulerConfiguration.DEFAULT_PREEMPTION_NATURAL_TERMINATION_FACTOR);
  
   To a separate method: updateConfigs(CapacitySchedulerConfiguration conf). 

2) Call updateConfigs at the beginning of editSchedule. 

3) Add a local variable to store CapacitySchedulerConfiguration such as lastCSConf, and inside updateConfigs, compare if scheduler.getConfiguration == lastCSConf. Only update configs when scheduler.getConfiguration != lastCSConf. With this change, we can avoid config version, etc. 

4) And we should not change any logics of RMActiveService, etc. It should be sufficient to change PCPP only., Thanks [~leftnoteasy] for the further design specifications.

bq. YARN-6142, we will take care of all scheduling edit policy refresh.
YARN-6142 is closed, so I'm not sure where the actual work will take place.

As for the rest, it sounds like a good plan., [~eepayne] He must have meant YARN-6124, not YARN-6142. 

I attached a first WiP version for review., Thanks [~GergelyNovak] for the work on this patch. I just have a couple of small issues with the patch and one suggestion.

- {{ProportionalCapacityPreemptionPolicy}} has an unused import of {{YarnConfiguration}}
- In {{ProportionalCapacityPreemptionPolicy#updateConfigIfNeeded}}, can we switch the names of the local {{csConfig}} variable and the global class instance variable {{config}}? My opinion is that a class instance variable should have the more descriptive name.
- It would be nice if {{updateConfigIfNeeded}} would LOG the values of all of the properties so that we have a record in the RM syslog whenever the values are refreshed.,  [~eepayne] Thank you for your suggestions, addressed them in patch #2., [~GergelyNovak], Thanks for the updated patch. Just a couple of things:
- Why were {{DEFAULT_PREEMPTION_MAX_IGNORED_OVER_CAPACITY}} and {{DEFAULT_PREEMPTION_NATURAL_TERMINATION_FACTOR}} changed from float to double? The capacity scheduler configuration properties are not consistent about the usage of float and double, but it looks like the preemption properties are using float. If we want to make it consistent or change these to double, I would prefer to do it as a separate JIRA.
- Thanks for adding the log documenting the updated properties. Can you please add the following properties to the log statement?
-- isIntraQueuePreemptionEnabled
-- selectCandidatesForResevedContainers
-- isQueuePriorityPreemptionEnabled
-- additionalPreemptionBasedOnReservedResource

, Added the above 4 properties to the log statement in patch #3.

As for the float-double change, if you check the {{ProportionalCapacityPreemptionPolicy}} code, both of the modified default properties are used with getDouble() methods, meaning that they are automatically converted to double (and neither {{DEFAULT_PREEMPTION_MAX_IGNORED_OVER_CAPACITY}} nor {{DEFAULT_PREEMPTION_NATURAL_TERMINATION_FACTOR}} is used anywhere else in the codebase) - so I didn't actually change the type that is actually used (the type of {{maxIgnoredOverCapacity}} and {{naturalTerminationFactor}} was and still is double). The reason I changed the default constants is the precision problem of the automatic conversion: 0.1 becomes 0.10000000149011612 and it looked funny in the newly introduced log message., Thanks for the patch, [~GergelyNovak]. I will review today.
bq. The reason I changed the default constants is the precision problem of the automatic conversion: 0.1 becomes 0.10000000149011612 and it looked funny in the newly introduced log messa
Fair enough., [~subru] and [~asuresh],

I am aware that you have requested that things should not be checked into branch-2.9. However, we need this feature to go into branch-2.8, and I think it will be awkward if this feature is in 2.8, branch-2, branch-3 and trunk, but not branch-2.9. Would it be appropriate to commit this to branch-2.9 as well?, [~GergelyNovak], Thanks for your effort on this feature. Patch LGTM
+1, Sorry for jumping in little late here. Thanks for the effort [~GergelyNovak] and [~eepayne]. Patch seems fine.

One quick doubt. In {{ProportionalCapacityPreemptionPolicy}}, LOG is printed when {{csConfig}} is not null. So how could we quickly verify which config got changed?, [~sunilg], thanks for your comment. I see what you mean. If we take out the {{if (this.csConfig != null)}}, then the values will also be logged during initialization as well as during refresh. That way we can compare newly logged values with the initial ones.

[~GergelyNovak], Sorry for changing it at this point, but [~sunilg] has a good point. Would you mind making this change?, Thanks [~sunilg] for the suggestion, I removed the null check in patch #4, now we log the properties during the serviceInit, too., [~eepayne], please go ahead and cherry-pick to branch-2.9. FYI we plan to cut branch-2.9.0 and initiate the RC process EOD today. Thanks., Thanks [~GergelyNovak], [~eepayne] Latest patch is fine to me. Pls help to commit., Waiting for precommit to complete: https://builds.apache.org/job/PreCommit-YARN-Build/18307/, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 19s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 14m 57s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 31s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 29s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 34s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m  3s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  0m 55s{color} | {color:red} hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager in trunk has 2 extant Findbugs warnings. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 17s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 33s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 28s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 28s{color} | {color:green} the patch passed {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 26s{color} | {color:orange} hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager: The patch generated 2 new + 496 unchanged - 9 fixed = 498 total (was 505) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 31s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green}  9m 36s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m  3s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 16s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 54m 36s{color} | {color:green} hadoop-yarn-server-resourcemanager in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 18s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 95m 35s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:5b98639 |
| JIRA Issue | YARN-7370 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12895418/YARN-7370.004.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |
| uname | Linux 7228c56aceec 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / d00b6f7 |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_131 |
| findbugs | v3.1.0-RC1 |
| findbugs | https://builds.apache.org/job/PreCommit-YARN-Build/18307/artifact/out/branch-findbugs-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager-warnings.html |
| checkstyle | https://builds.apache.org/job/PreCommit-YARN-Build/18307/artifact/out/diff-checkstyle-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/18307/testReport/ |
| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/18307/console |
| Powered by | Apache Yetus 0.7.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Findbugs warnings are for {{org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.policies.DominantResourceFairnessPolicy}} and are not related to this patch.

{{CapacitySchedulerConfiguration.java}} has an unused import for {{ImmutableMap}}. I'll go ahead and remove it as part of the commit., Sorry, I already did (patch #5)., SUCCESS: Integrated in Jenkins build Hadoop-trunk-Commit #13180 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/13180/])
YARN-7370: Preemption properties should be refreshable. Contrubted by (epayne: rev e6ec02001fc4eed9eb51c8653d8f931135e49eda)
* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/TestCapacitySchedulerLazyPreemption.java
* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java
* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfiguration.java
* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TestProportionalCapacityPreemptionPolicy.java
* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/SchedulingMonitor.java
, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 11m 42s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 16m 39s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 37s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 33s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 40s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 11s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  1m  4s{color} | {color:red} hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager in trunk has 2 extant Findbugs warnings. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 22s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 39s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 34s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 34s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 31s{color} | {color:green} hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager: The patch generated 0 new + 497 unchanged - 9 fixed = 497 total (was 506) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 36s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 11s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 12s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 21s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 55m 50s{color} | {color:red} hadoop-yarn-server-resourcemanager in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 19s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}113m 38s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.yarn.server.resourcemanager.scheduler.capacity.TestIncreaseAllocationExpirer |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:5b98639 |
| JIRA Issue | YARN-7370 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12895441/YARN-7370.005.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |
| uname | Linux 658059f095a9 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 04c604c |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_131 |
| findbugs | v3.1.0-RC1 |
| findbugs | https://builds.apache.org/job/PreCommit-YARN-Build/18310/artifact/out/branch-findbugs-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager-warnings.html |
| unit | https://builds.apache.org/job/PreCommit-YARN-Build/18310/artifact/out/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/18310/testReport/ |
| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/18310/console |
| Powered by | Apache Yetus 0.7.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

]