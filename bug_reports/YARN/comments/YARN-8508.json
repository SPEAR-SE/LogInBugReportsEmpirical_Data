[This happens with a container that gets cleaned up before its pid file is created. To solve it, we need to release the resources at the end of \{{LinuxContainerExecutor.reapContainer()}} just like we do in \{{LinuxContainerExecutor.launchContainer()}}, 
{\{LinuxContainerExecutor.reLaunchContainer()}}, and \{{LinuxContainerExecutor.reacquireContainer}}.

Please see my explanation below:
Refer \{{container_e21_1532545600682_0001_01_000002}} in yarn8505.nodemanager.log

- 002 is launched but its pid file is not created
{code}
2018-07-25 19:08:54,409 DEBUG util.ProcessIdFileReader (ProcessIdFileReader.java:getProcessId(53)) - Accessing pid from pid file /.../application_1532545600682_0001/container_e21_1532545600682_0001_01_000002/container_e21_1532545600682_0001_01_000002.pid
2018-07-25 19:08:54,409 DEBUG util.ProcessIdFileReader (ProcessIdFileReader.java:getProcessId(103)) - Got pid null from path /.../application_1532545600682_0001/container_e21_1532545600682_0001_01_000002/container_e21_1532545600682_0001_01_000002.pid
{code}

- Since application is killed, 002 is killed by ResourceManager
{code}
2018-07-25 19:08:54,643 DEBUG container.ContainerImpl (ContainerImpl.java:handle(2080)) - Processing container_e21_1532545600682_0001_01_000002 of type CONTAINER_KILLED_ON_REQUEST
{code}

- The above triggers \{{ContainerLaunch.cleanupContainer()}} for 002. This happens before the pid file is created
{code}
2018-07-25 19:08:54,409 WARN launcher.ContainerLaunch (ContainerLaunch.java:cleanupContainer(784)) - Container clean up before pid file created container_e21_1532545600682_0001_01_000002
{code}

- \{{cleanupContainer}} invokes \{{reapDockerContainerNoPid(user)}}
{code}
2018-07-25 19:08:54,410 INFO launcher.ContainerLaunch (ContainerLaunch.java:reapDockerContainerNoPid(940)) - Unable to obtain pid, but docker container request detected. Attempting to reap container container_e21_1532545600682_0001_01_000002
{code}

- \{{reapDockerContainerNoPid(user)}} calls \{{exec.reapContainer(...)}}
{code}
2018-07-25 19:08:54,412 DEBUG docker.DockerCommandExecutor (DockerCommandExecutor.java:executeDockerCommand(89)) - Running docker command: inspect docker-command=inspect format=\{{.State.Status}} name=container_e21_1532545600682_0001_01_000002
2018-07-25 19:08:54,412 DEBUG privileged.PrivilegedOperationExecutor (PrivilegedOperationExecutor.java:getPrivilegedOperationExecutionCommand(119)) - Privileged Execution Command Array: [/.../hadoop-yarn/bin/container-executor, --inspect-docker-container, --format=\{{.State.Status}}, container_e21_1532545600682_0001_01_000002]
2018-07-25 19:08:54,530 DEBUG docker.DockerCommandExecutor (DockerCommandExecutor.java:getContainerStatus(160)) - Container Status: nonexistent ContainerId: container_e21_1532545600682_0001_01_000002
2018-07-25 19:08:54,530 DEBUG launcher.ContainerLaunch (ContainerLaunch.java:reapDockerContainerNoPid(948)) - Sent signal to docker container container_e21_1532545600682_0001_01_000002 as user hrt_qa, result=success
{code}

- The problem is that the \{{reapContainer}} in \{{LinuxContainerExecutor}} doesn't release the resources assigned to the container. The below code snippet that performs these tasks after the container completes doesn't happen at this point.
{code}
 resourcesHandler.postExecute(containerId);

try {
 if (resourceHandlerChain != null) {
 LOG.info("{} POST Complete", containerId);
 resourceHandlerChain.postComplete(containerId);
 }
 } catch (ResourceHandlerException e) {
 LOG.warn("ResourceHandlerChain.postComplete failed for " +
 "containerId: " + containerId + ". Exception: " + e);
 }
 }
{code}

- The launch of container fails after 4 minutes and only then the resources are released.
{code}
2018-07-25 19:12:09,999 WARN nodemanager.LinuxContainerExecutor (LinuxContainerExecutor.java:handleExitCode(593)) - Exit code from container container_e21_1532545600682_0001_01_000002 is : 27
2018-07-25 19:12:10,000 WARN nodemanager.LinuxContainerExecutor (LinuxContainerExecutor.java:handleExitCode(599)) - Exception from container-launch with container ID: container_e21_1532545600682_0001_01_000002 and exit code: 27
2018-07-25 19:12:10,000 INFO nodemanager.ContainerExecutor (ContainerExecutor.java:logOutput(541)) - Container id: container_e21_1532545600682_0001_01_000002
2018-07-25 19:12:10,003 INFO nodemanager.ContainerExecutor (ContainerExecutor.java:logOutput(541)) - Docker inspect command: /usr/bin/docker inspect --format \{{.State.Pid}} container_e21_1532545600682_0001_01_000002
2018-07-25 19:12:10,003 INFO nodemanager.ContainerExecutor (ContainerExecutor.java:logOutput(541)) - Failed to write pid to file /cgroup/cpu/.../container_e21_1532545600682_0001_01_000002/tasks - No such process
2018-07-25 19:12:10,003 INFO nodemanager.ContainerExecutor (ContainerExecutor.java:logOutput(541)) - Wrote the exit code 27 to /.../application_1532545600682_0001/container_e21_1532545600682_0001_01_000002/container_e21_1532545600682_0001_01_000002.pid.exitcode
2018-07-25 19:12:10,003 DEBUG container.ContainerImpl (ContainerImpl.java:handle(2080)) - Processing container_e21_1532545600682_0001_01_000002 of type UPDATE_DIAGNOSTICS_MSG
2018-07-25 19:12:10,004 DEBUG recovery.NMLeveldbStateStoreService (NMLeveldbStateStoreService.java:storeContainerDiagnostics(488)) - storeContainerDiagnostics: containerId=container_e21_1532545600682_0001_01_000002, diagnostics=[2018-07-25 19:08:49.283]Container Killed by ResourceManager
Container id: container_e21_1532545600682_0001_01_000002
Docker inspect command: /usr/bin/docker inspect --format \{{.State.Pid}} container_e21_1532545600682_0001_01_000002
Failed to write pid to file /cgroup/cpu/.../container_e21_1532545600682_0001_01_000002/tasks - No such process
{code}

 , Verifying the fix. Haven't added a unit test. , Modified the test for reapContainer to verify {{postComplete}} is invoked at the end of reap container in patch 2, [~shanekumpf@gmail.com] [~eyang] could you please review patch 2?, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 10s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 26m  5s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 58s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 13s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 37s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 45s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 58s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 26s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 40s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m  2s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  1m  2s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m  9s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 37s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 48s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m  4s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 23s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 18m  0s{color} | {color:green} hadoop-yarn-server-nodemanager in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 31s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 76m 41s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:ba1ab08 |
| JIRA Issue | YARN-8508 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12933248/YARN-8505.001.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |
| uname | Linux 95544b2179d7 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / be150a1 |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_171 |
| findbugs | v3.1.0-RC1 |
|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/21380/testReport/ |
| Max. process+thread count | 336 (vs. ulimit of 10000) |
| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/21380/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Triggering build for patch 2, | (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 33s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 24m 42s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 55s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 14s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 35s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m 44s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 44s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 23s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 33s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 52s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 52s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m  8s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 30s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m 17s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 52s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 18s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 18m  1s{color} | {color:green} hadoop-yarn-server-nodemanager in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 18s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 70m 46s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:ba1ab08 |
| JIRA Issue | YARN-8508 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12933259/YARN-8505.002.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |
| uname | Linux 4ab7d00c07b9 4.4.0-89-generic #112-Ubuntu SMP Mon Jul 31 19:38:41 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / be150a1 |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_171 |
| findbugs | v3.1.0-RC1 |
|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/21381/testReport/ |
| Max. process+thread count | 408 (vs. ulimit of 10000) |
| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/21381/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, +1 looks good to me., Thank you [~csingh] for the patch.  I committed this to trunk and branch-3.1., SUCCESS: Integrated in Jenkins build Hadoop-trunk-Commit #14659 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/14659/])
YARN-8508.  Release GPU resource for killed container.             (eyang: rev ed9d60e888d0acfd748fda7f66249f5b79a3ed6d)
* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java
* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/TestLinuxContainerExecutor.java
, I think it is important to get it backported to branch-3.1.1, I'm going to do this in a couple of hours, please let me know if you think different.

cc: [~csingh], [~eyang], Committed to branch-3.1.1, thanks [~csingh]!]