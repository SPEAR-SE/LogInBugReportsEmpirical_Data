[{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12647212/YARN-2098.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 6 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 2 warning messages.
        See https://builds.apache.org/job/PreCommit-YARN-Build/3847//artifact/trunk/patchprocess/diffJavadocWarnings.txt for details.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/3847//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/3847//console

This message is automatically generated., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12647316/YARN-2098.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 6 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/3855//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/3855//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12647316/YARN-2098.patch
  against trunk revision 7f1e2f9.

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-YARN-Build/7057//console

This message is automatically generated., Canceling patch. The patch doesn't apply anymore. , [~sunilg], I saw that couple of tickets under the app priority umbrella jira got committed. I wanted to find out if there is any other jira that is blocking
implementing app priority in fair scheduler ?, Hi [~ashwinshankar77]
Yes. YARN-2003 is committed. It has changes for RM and CS together. 
All basic changes needed from RM is defined now hence FairScheduler can go ahead.

{{checkAndGetApplicationPriority}} in YarnScheduler now can be extended in FairScheduler to take some default value or to do some validation. And priority is an integer now. So RMAppManager will invoke this method and set priority in RMApp. 
{{yarn.cluster.max-application-priority}}  can be used to get max priority from cluster. And we are doing a max cap if any app is submitted with a high value.

Now FairOrderingPolicy has this new appPriority added for comparision of apps. FairOrderingPolicy also needs this. Please ping me if any help needed, i updated the doc in main thread too. , Thanks [~sunilg] !
Hey [~ywskycn], when you get a chance, can you please rebase your patch ?, [~sunilg], [~ashwinshankar77]. Sure, will rebase a new one., Hi, [~ywskycn], is this issue still works?, [~ywskycn] how about the progress of this jira?, Sorry... missed this ticket... I'll grab some time to fix it., Looks like the old patch cannot be rebased. I'll code a new one., [~ywskycn]

General framework for priority support is completed and the CS work related to that also is done. This is available as part of 2.8.1 release onwards. I am planning to close the parent JIRA as resolved, however I could see that YARN-2099 and this tickets is not done.
Please help to share the plan for same and in that case we could take it out from this umbrella jira and track it independently.

cc/[~templedf], It's on my radar.  No concrete plans yet, though., Thanks for the reminder, [~sunilg]. Sorry I forgot some old jiras. To align with YARN-1963, I think this patch needs to be rewritten. [~templedf], are u planning to take this one?, You can assign it to me if you want, or you're welcome to pick it back up.  I won't get to it before beta1., linking to YARN-1963, Hey [~ywskycn] [~templedf] any updates on this one?]