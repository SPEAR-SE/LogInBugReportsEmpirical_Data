[During the service init the service bind address is calculated based on all the settings and stored as an InetSocketAddress in a local variable. In the startup the server is created using that socket address. This all works.
In the {{ApplicationMasterService}} and the {{ClientRMService}} after the service start the bind address is updated as part of the config update. This update does not happen in the other services. The update is the return value of {{updateConnectAddr()}}. This method in its javadoc shows the following text:
bq. The wildcard address is replaced with the local host's address.
Since we store this return value in the bind address we break binding to the wildcard address in later cycles., patch to not override the bind address in the two services
all tests pass locally, no new test added since we do not have multi homed tests, +1 (nonbinding).  The only new test I can think of would be to verify that the member variable address stays at 0.0.0.0 if it's initially 0.0.0.0--mainly useful as a "spec" for the class behavior., I agree on [~rchiang]'s test suggestion.

I'm surprised the patch doesn't break any tests since it changes the behavior of the {{getBindAddress()}} method, which is used for testing.

I suspect the patch may break with security enabled because the {{DelegationTokenRenewer.setLocalSecretManagerAndServiceAddr()}} method relies on {{ClientRMService.getBindAddress()}}.  Security code generally doesn't like non-specific addresses.  It would be good to do a thorough test with Kerberos enabled to verify.  I don't know what operation uses {{DelegationTokenRenewer.setLocalSecretManagerAndServiceAddr()}}, but it shouldn't be too hard to figure out., I'll rework the patch to make the {{getBindAddress()}} behave as it did before. There is one call that is made to the method in the RM code which might be influenced by the change which I overlooked.
I'll try to mock up a test that makes sure the bind on the second attempt gets passed in the 0.0.0.0 again., I must be missing something, but can't figure out why not setting the variable helps here. If I understand the code correctly, the individual variables {{clientBindAddress}} and {{masterServiceAddress}} are used only in tests and the one other place in {{DelegationTokenRenewer}} that Daniel pointed out. 

Both ClientRMService and ApplicationMasterService are part of RMActiveServices. On transition to standby, both services are inited again to be started when the RM transitions back to active. This code path, in theory at least, shouldn't be different from the first time around. 

Am I missing something or misreading the code? ]