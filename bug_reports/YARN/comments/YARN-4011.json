[hey [~jlowe], have you encountered this issue before at Yahoo ? Also would it make sense to have a feature on NM to limit the amount of data
user/app can write to nm-local-dir to protect other users ? I'm looking into related jiras like YARN-1781, which could be a band-aid to this problem., Yes, we ran into this a while ago, see YARN-2473 which was ultimately fixed by YARN-90.  There were a number of other fixes as well such as YARN-3850 and YARN-3925.  Closing this as a duplicate of YARN-90.

As for the ability to limit disk space, this has been discussed many times before and as far back as MAPREDUCE-1100.  An unsophisticated solution is to have the container monitor that already is looking for too much memory usage also monitor disk usage and kill the container if its too large.  However this doesn't solve the problem for containers that are writing to locations that aren't container-specific (e.g.: where maps store their shuffle outputs, /tmp, etc.  I think it could be difficult to enforce tasks that are filling the disk in arbitrary ways, but it could be straightforward to catch the task that simply is logging too much., Thanks Jason, this is exactly what I was looking for !, We face this problem quite often in our ad hoc cluster and are thinking to implement some basic checkers to make such misbehaved jobs fail fast.

Until we have a proper solution for yarn, we can have a mapreduce-specific solution in place to protect the cluster from rogue mapreduce tasks? The mapreduce task can check for BYTES_WRITTEN counter and fail fast if it is above the configured limit. It is true that written bytes is larger than the actual used disk space, but to detect a rogue task the exact value is not required and a very large value for written bytes to local disk is a good indicative that the task is misbehaved.

Thoughts?, bq. The mapreduce task can check for BYTES_WRITTEN counter and fail fast if it is above the configured limit.
I think having the MR framework provide an optional limit for local filesystem output is a reasonable request until a more sophisticated solution can be implemented by YARN directly., Thanks [~jlowe]. I created MAPREDUCE-6489 for this.]