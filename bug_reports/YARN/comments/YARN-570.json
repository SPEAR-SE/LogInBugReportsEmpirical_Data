[simple patch, change js render to locale time, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12577997/MAPREDUCE-5141.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3512//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3512//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12577997/MAPREDUCE-5141.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/726//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/726//console

This message is automatically generated., Thanks for the report and the patch!

With this patch it now renders it this way:

renderHadoopDate() -> "Wed, 10 Apr 2013 08:29:56 GMT+05:30"
format() -> "10-Apr-2013 08:29:56"

Which I think is still inconsistent. Ideally, I think, we'd want the former everywhere for consistency. Can you update format() as well to print in the same style, if you agree?, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12577997/MAPREDUCE-5141.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/3664//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/3664//console

This message is automatically generated., Hi [~peng.zhang], what's going on this issue? I'd like to take it over., Assigned to myself. [~peng.zhang], feel free to reassign if you want to work., Attached a patch. With the patch, yarn.util.Times.format() renders as "Wed May 14 10:24:29 JST 2014", which is consistent with MapReduce jobhistoryserver WebUI.
bq. Can you update format() as well to print in the same style, if you agree?
The format of JavaScript {{Date.toLocaleString()}} varies by the browser. In my environment: 
{code}
Chrome: 2014/5/14 10:25:08
Safari: 2014年5月14日 10:25:08 JST
{code}
Therefore, it's impossible to update {{format()}} to print in the same style., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12644756/YARN-570.2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/4115//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/4115//console

This message is automatically generated., [~qwertymaniac], Thank you for the review. If we'll make time format same completely, we need to change lots parts to use same format function. As a temporary fix that addresses this issue at first, Akira's patch looks good to me. What do you think?

I think the timezone difference confuses users frequently, so we should fix it in the next release(2.5.0)., {quote}
The format of JavaScript Date.toLocaleString() varies by the browser. 
{quote}

One alternative to make format same is to change {{renderHadoopDate}} to return same format as {{yarn.util.Times#format()}} does instead of using {{Date#toLocaleString}}. [~ajisakaa], [~qwertymaniac], what do you think?, Thanks [~ozawa] for the comment.
Attaching a patch to change {{renderHadoopDate}} to return "almost" the same format.
Javascript doesn't support z pattern (ex. PDT, JST, ...), so the patch will output in Z pattern (ex. -0800, +0900, ...).
In my environment, date is rendered as follows:
{code}
Mon Jun 30 16:48:18 +0900 2014 // EEE MMM dd hh:mm:ss Z yyyy
{code}
I think it's better to render in Java instead of Javascript to make the format the same., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12653110/YARN-570.3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/4141//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/4141//console

This message is automatically generated., The patch needs no tests. I verified that date was properly formatted., I've been playing around with this patch some.  I'm fine with it as is, but if there are reservations about it in its current state, is it worth combining this patch with a change in Times.java to end up with a uniform time/date format, e.g.

    EEE MMM dd HH:mm:ss Z YYYY
    Mon Oct 13 12:54:20 -0700 2014

Thoughts?
, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12653110/YARN-570.3.patch
  against trunk revision a56ea01.

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-YARN-Build/5378//console

This message is automatically generated., Thanks [~rchiang] for trying the patch. Update the patch to uniform the format to "EEE MMM dd HH:mm:ss Z yyyy"., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12674718/YARN-570.4.patch
  against trunk revision 5faaba0.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/5385//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/5385//console

This message is automatically generated., One bug.

    The RM UI application table ends up with times like:

    Tue Oct 14 14:4:27 -0700 2014  (for 2:04 PM)
    Tue Oct 14 14:5:6 -0700 2014    (for 2:05 PM)

One comment.

    The RM "About" section always shows time local to the node the RM is running on.  The RM UI application table always show local time of the machine/browser.  That fits given the Javascript/Java discrepancy, but it could be confusing in a completely different way.
, Thanks [~rchiang] for the comment. Fixed the bug by padding zero.
bq. it could be confusing in a completely different way.
It's a good idea to show the local time of the browser everywhere, however, there needs some code change (rendering date by JavaScript instead of Java) to achieve this. Hopefully, I'll post a new patch in the end of the week., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12674935/YARN-570.5.patch
  against trunk revision 128ace1.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/5403//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/5403//console

This message is automatically generated., Verified.  The time formatting looks uniform to me., The patch looks reasonable. +1, relying on others' testing. Checking this in, will add one comment in Times.java in the process. , Thanks Peng and Akira for working on this, Harsh and Ray for your reviews. Just committed to trunk and branch-2. , SUCCESS: Integrated in Hadoop-trunk-Commit #6514 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6514/])
YARN-570. Time strings are formated in different timezone. (Akira Ajisaka and Peng Zhang via kasha) (kasha: rev 456b973819904e9647dabad292d2d6205dd84399)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/resources/webapps/static/yarn.dt.plugins.js
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/Times.java
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #3 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/3/])
YARN-570. Time strings are formated in different timezone. (Akira Ajisaka and Peng Zhang via kasha) (kasha: rev 456b973819904e9647dabad292d2d6205dd84399)
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/resources/webapps/static/yarn.dt.plugins.js
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/Times.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk #741 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/741/])
YARN-570. Time strings are formated in different timezone. (Akira Ajisaka and Peng Zhang via kasha) (kasha: rev 456b973819904e9647dabad292d2d6205dd84399)
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/resources/webapps/static/yarn.dt.plugins.js
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/Times.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #3 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/3/])
YARN-570. Time strings are formated in different timezone. (Akira Ajisaka and Peng Zhang via kasha) (kasha: rev 456b973819904e9647dabad292d2d6205dd84399)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/resources/webapps/static/yarn.dt.plugins.js
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/Times.java
* hadoop-yarn-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1931 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1931/])
YARN-570. Time strings are formated in different timezone. (Akira Ajisaka and Peng Zhang via kasha) (kasha: rev 456b973819904e9647dabad292d2d6205dd84399)
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/resources/webapps/static/yarn.dt.plugins.js
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/Times.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1955 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1955/])
YARN-570. Time strings are formated in different timezone. (Akira Ajisaka and Peng Zhang via kasha) (kasha: rev 456b973819904e9647dabad292d2d6205dd84399)
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/resources/webapps/static/yarn.dt.plugins.js
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/Times.java
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk-Java8 #3 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/3/])
YARN-570. Time strings are formated in different timezone. (Akira Ajisaka and Peng Zhang via kasha) (kasha: rev 456b973819904e9647dabad292d2d6205dd84399)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/Times.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/resources/webapps/static/yarn.dt.plugins.js
, So this changed timestamps to be rendered unconditionally in local time?  That's unfortunate.  See [~aw]'s comment in https://issues.apache.org/jira/browse/YARN-2348?focusedCommentId=14073218&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14073218.  Unfortunately local timezone isn't always the right thing to do because the timestamps of the log files for tasks will _not_ be the local timezone of the browser when running jobs in a distant colo.  So this change makes it worse for users that are lining up events based on what they see in the UI with what they see in the logs.

This minimally should have been configurable.  Filed YARN-4332 to either revert this change or make it configurable.]