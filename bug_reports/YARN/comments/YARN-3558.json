[Hi [~bibinchundatt]
Could you please upload the RM logs., [~sunilg]. Attaching Rm log and AM log, [~sunilg]. As discussed offline i have tried the same scenarios with only single node.
In case of single node number of container reserved is equal to number of required containers.
Only 18 containers where reserved by RM. , By check the log, i think i found the cause. 
First we note that the pending request containers host by AM and scheduler may not be consistent at some time. For example, at time 01'', app submit request with 3 containers, then the scheduler allocate 2, and pending 1. At time 02'', AM update the request where the #containers is still 3, after updated the request info, AM gets back the allocated 2 container. But now the pending containers is still 3 in AppSchedulingInfo, even though the real request is 1. In the next heartbeat at 03'', AM then update the request with 1 container. If there're many tasks, such inconsistent will be corrected to some extent.
However, this is not the only reason of this jira. Near the end of map tasks, AM updates request with 1 container (in fact this container had been allocated, but did not been fetched by AM) at 15:10:38,606, scheduler make two reservations on two nodes for this container request (container 19 and 20). However, this 1 containers has been fulfilled, then at 15:10:39,622, AM updates the request with 0 container. But during this second, 19 and 20 are reserved.
There are two problem here: 1, request host by AM and Scheduler are not consistent; 2, conservations are made on many nodes. We should consider the reasonability of the two, especially the first.]