[Existing tests for MAPREDUCE-2953 demonstrate the race is fixed w/o synchronizing the method., Tom is on vacation, but I remember the internal debate if it should be synchronized.  It was only added as a defensive measure., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12566348/YARN-357.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:red}-1 eclipse:eclipse{color}.  The patch failed to build with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/364//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/364//console

This message is automatically generated., If we can safely remove the synchronization, it sounds good.  However it looks like {{DelegationTokenRenewer#addApplication}} is another chokepoint right behind {{RMAppManager#submitApplication}}, so fixing just the former probably won't help in practice without fixing that as well., Add tests that both better verify MAPREDUCE-2953 by ensuring {{ClientRMService}} is synchronously calling {{RMAppManager}}, but that {{RMAppManager}} is not synchronizing concurrent job submissions., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12566815/YARN-357.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:

                  org.apache.hadoop.yarn.server.resourcemanager.webapp.TestRMWebServices

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/373//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/373//console

This message is automatically generated., TestRMWebServices failure is likely unrelated, see HADOOP-9246., Yes, the test failed on a non-patched trunk build., Couldn't see any reason for submitApplication to be synchronized, so this looks good. 

Minor nits in the unit test.
- An assert within a thread will not cause the test to fail. The test works however, since it'll time out. Having an explicit error may be better.
- The test ends up relying on Mockito handling multiple threads - and resetting a mock mid way through an invocation. Was playing with this - mockito seemed to be serializing invocations to the mock. So the second submit would hang, without the reset. Chaining is supposed to work via - doAnswer().doNothing.when().... Think it may be better to write a custom eventHandler for this test.

There's a bunch of other synchronized methods in RMAppManager, which could likely be cleaned up. Will open a separate jira to track this., Thanks for the review!  I struggled quite a bit with writing these tests.  I am indeed expecting the barrier to cause the test to timeout.  How do you suggest I add an explicit error?  Log the assert since there's not much else I can (easily) do?  

I couldn't get chaining to work with void return methods.  The mock hangs on a poll for repeated calls to a method with a doAnswer if there aren't more doAnswers registered with it, but since I couldn't get the chaining to work up-front, I added the chain after the method is hit the first time.

How would a custom event handler work better in this case?  I think it'd just mimic the current behavior?  Could we maybe have the separate jira, for removing other syncs, improve the tests in general?  Or could you help me out by updating the tests since I'm unclear what to do?, bq. Thanks for the review! I struggled quite a bit with writing these tests. I am indeed expecting the barrier to cause the test to timeout. How do you suggest I add an explicit error? Log the assert since there's not much else I can (easily) do? 
A flag to track the error in the thread should work ?

I couldn't get chaining to work with void return methods. The mock hangs on a poll for repeated calls to a method with a doAnswer if there aren't more doAnswers registered with it, but since I couldn't get the chaining to work up-front, I added the chain after the method is hit the first time.
bq. Chaining seemed to work ok, as long as the previous invocation had completed. Even without chaining, the mock does not seem to handle multiple parallel invocations. Struggled a bit with this as well - which is what makes me a little wary of using mockito for this case (http://code.google.com/p/mockito/wiki/FAQ).

bq. How would a custom event handler work better in this case? I think it'd just mimic the current behavior? Could we maybe have the separate jira, for removing other syncs, improve the tests in general? Or could you help me out by updating the tests since I'm unclear what to do?
It'd behave the same, except would not use mockito for the EventHandler mock. Sure, I'll try updating the unit test., Pretty much the same patch, but with the mockito EventHandler replaced.
I'm +1 on the previous patch. Daryn, if you think this change to the unit test looks OK, please go ahead and commit it. Thanks, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12568093/YARN-357.txt
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/382//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/382//console

This message is automatically generated., Sid, thanks a lot for your help.  I'll commit shortly., Integrated in Hadoop-trunk-Commit #3330 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/3330/])
    YARN-357. App submission should not be synchronized (daryn) (Revision 1443016)

     Result = SUCCESS
daryn : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1443016
Files : 
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestClientRMService.java
, For branch 23, change test to use {{ApplicationsStore}} instead of {{RMStateStore}}., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12568245/YARN-357.branch-23.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-YARN-Build/384//console

This message is automatically generated., Merged to trunk, branch 2, 2.0.3, and 23., Integrated in Hadoop-Yarn-trunk #120 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/120/])
    YARN-357. App submission should not be synchronized (daryn) (Revision 1443016)

     Result = FAILURE
daryn : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1443016
Files : 
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestClientRMService.java
, Integrated in Hadoop-Hdfs-0.23-Build #518 (See [https://builds.apache.org/job/Hadoop-Hdfs-0.23-Build/518/])
    YARN-357. App submission should not be synchronized (daryn) (Revision 1443048)

     Result = SUCCESS
daryn : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1443048
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java
* /hadoop/common/branches/branch-0.23/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestClientRMService.java
, Integrated in Hadoop-Hdfs-trunk #1309 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1309/])
    YARN-357. App submission should not be synchronized (daryn) (Revision 1443016)

     Result = FAILURE
daryn : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1443016
Files : 
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestClientRMService.java
, Integrated in Hadoop-Mapreduce-trunk #1337 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1337/])
    YARN-357. App submission should not be synchronized (daryn) (Revision 1443016)

     Result = SUCCESS
daryn : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1443016
Files : 
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestClientRMService.java
]