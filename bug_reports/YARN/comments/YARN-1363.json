[Proposal :- 
* Retain the current behavior as it is (synchronous one). 
* Add a configuration knob to enable asynchronous behavior. 
** If enabled then Get / Renew / Cancel apis will work as it is except saving updated DT to RMStateStore synchronously.
** Client will have to make an additional call to check the status of the operation passing DT and OP [ Get/Renew/Cancel ]. 
*** ClientRMService remembers the status of the operation starting from the time when client requested and RMStateStore saved it to
**** until first Client request arrived to check its status[ requests for (token, op) ]
**** or timer (configurable..may be 10 min) expired., Work in progress patch.. YARN-1363.1.patch, [~ojoshi], thanks for the preliminary work. Let me take it over to finish work. , I've some different ideas about the implementation.

1. IMHO, we don't need to retain the synchronous behavior, like ClientRMService#submitApplication, which involves writing RMStateStore as well. Or is there any point that I have missed?

2. In the RMStateStore, we can refer to the asynchronous process of app and attempt to deal with token identifier. This should be much obvious.

3. The questionable and difficult part will be how users get notified of the success of getting/canceling/renewing DT?
* RMDelegationTokenSecretManager need to maintain a list of ongoing operations, and listen to the events from RMStateStore to get updated about their progress.
* It seems we need to modify the API like what YARN-1446 does. The client keeps querying until it get the answer.
* The answer needs to be hold until the storing operation is finished.

Any idea?, I've drafted an initial patch which only contains the production code. Here're some important changes:

1. storing DT and removing DT are changed to be async in RMStateStore, and notify RMDelegationTokenSecretManager of operation completion.

2. updating DT is added to RMStateStore, such that RMStateStore can send separate update completion notification, not to confused with storing/removing completion notifications.

3. RMDelegationTokenSecretManager handles the completion nofitications from RMStateStore

4. RMStateStore maintains a map of outstanding DT operations.

5. ClientRMService are changed to whether the operation is still in progress or not, and poll the result only when the operation is finished.

6. Update the javadoc in ApplicationClientProtocol

7. Update the YarnClientImpl according. One finding in YarnClient is that canceling/renewing DT are not wrapped., 8. RMDelegationTokenSecretManager has the cleanup thread to clean the outstanding DT operations that have been finished, but the results have never been polled by the client, which is possible if the client crashes., Upload a new patch which include test cases and some bug fixes, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12618545/YARN-1363.3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 7 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:

                  org.apache.hadoop.mapreduce.security.TestJHSSecurity

                                      The following test timeouts occurred in hadoop-common-project/hadoop-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:

org.apache.hadoop.yarn.server.resourcemanager.TestClientRMTokens

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/2656//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-YARN-Build/2656//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-yarn-server-resourcemanager.html
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/2656//console

This message is automatically generated., Fix test failures and findbugs warnings.

TestJHSSecurity failure is however, not related. Ran it locally, and the failure happened on trunk as well. Will file another jira to track it., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12618719/YARN-1363.4.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 7 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:

                  org.apache.hadoop.mapreduce.security.TestJHSSecurity

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/2659//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/2659//console

This message is automatically generated., The remaining test failure is supposed to be taken care by YARN-1463., patch not applying any more, can you update it, thanks, Upload a new patch:

1. Rebase against the latest trunk
2. Incorporate the change in YARN-1363
3. Rename some methods
4. Reorder protos to be compatible., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12619173/YARN-1363.5.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 7 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:

                  org.apache.hadoop.mapred.TestYARNRunner
                  org.apache.hadoop.mapreduce.security.TestJHSSecurity

                                      The following test timeouts occurred in hadoop-common-project/hadoop-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:

org.apache.hadoop.mapred.TestClientRedirect

                                      The test build failed in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api 

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/2684//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/2684//console

This message is automatically generated., TestYARNRunner and TestClientRedirect should be fixed in MAPREDUCE-5687. They are not related., Create a new patch:

1. Update against the latest trunk
2. Refactor some code
3. Make cancel/renew in RMDelegationTokenIndentifier async as well
4. Fix some test issues., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12629991/YARN-1363.6.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 7 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:

                  org.apache.hadoop.yarn.server.resourcemanager.recovery.TestFSRMStateStore
                  org.apache.hadoop.yarn.server.resourcemanager.recovery.TestZKRMStateStore

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/3132//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/3132//console

This message is automatically generated., Fix the test failures, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12630103/YARN-1363.7.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 7 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The following test timeouts occurred in hadoop-common-project/hadoop-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:

org.apache.hadoop.yarn.client.api.impl.TestNMClient

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/3135//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/3135//console

This message is automatically generated., Haven’t looked at the patch deeply, some thoughts
- we don’t need a separate api getIsObtained in GetDelegationTokenResponse, setting the token as null can be leveraged to indicate not yet obtained.
- what will happen if one operation is in the progress like getDelegationToken while in the meantime another operation like cancelDelegationToken comes in ?
  Thinking whether it’s good to have a state machine per delegation token. We have 6 events GET,CANCEL,RENEW from client, and STORED, UPDATED, REMOVED from state store; 3 states, NEW, PROGRESS(or getting, canceling, renewing if needed) and FINISHED. We should think about all the possible combinations., Talk to Jian offline. Canceled the patch, and seek for a light-weighted solution, Create a new patch, which changes the solution. Instead of making the RMStateStore operate token asynchronously, I created a RMDelegationTokenSecretManagerAsync which receive the operation events from ClientRMService, handle them one by one on a separate thread. It can the RPC call unblocked as well as keeping the change modular, though the size of patch is not reduced. Another important change in this patch is that instead of touching the hadoop common code base, I created separate get/cancel/renew response for yarn project only., Add one more test case to verify RMDelegationTokenSecretManagerAsync., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12631303/YARN-1363.8.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 9 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.

        {color:red}-1 release audit{color}.  The applied patch generated 1 release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:

                  org.apache.hadoop.yarn.server.resourcemanager.security.TestDelegationTokenRenewer
                  org.apache.hadoop.yarn.server.resourcemanager.TestApplicationACLs

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/3192//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-YARN-Build/3192//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-YARN-Build/3192//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-yarn-server-resourcemanager.html
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/3192//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12631320/YARN-1363.9.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 9 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.

        {color:red}-1 release audit{color}.  The applied patch generated 1 release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:

                  org.apache.hadoop.mapreduce.v2.TestUberAM
                  org.apache.hadoop.yarn.server.resourcemanager.security.TestDelegationTokenRenewer
                  org.apache.hadoop.yarn.server.resourcemanager.TestApplicationACLs

                                      The following test timeouts occurred in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:

org.apache.hadoop.yarn.server.resourcemanager.TestResourceTrackerService

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/3193//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-YARN-Build/3193//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-YARN-Build/3193//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-yarn-server-resourcemanager.html
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/3193//console

This message is automatically generated., Fix the jenkins warnings., TestUberAM failure is not related, and happens on trunk as well. Filed a separate ticket to trace it: MAPREDUCE-5768, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12631388/YARN-1363.10.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 11 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:

                  org.apache.hadoop.mapreduce.v2.TestUberAM
                  org.apache.hadoop.yarn.server.resourcemanager.TestRMRestart

                                      The following test timeouts occurred in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:

org.apache.hadoop.yarn.server.resourcemanager.TestResourceTrackerService

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/3198//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/3198//console

This message is automatically generated., Kick the jenkins again, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12631556/YARN-1363.10.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 11 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:

                  org.apache.hadoop.mapreduce.v2.TestUberAM

                                      The following test timeouts occurred in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:

org.apache.hadoop.yarn.client.api.impl.TestNMClient

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/3208//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/3208//console

This message is automatically generated., The code looks much simpler now than earlier's approach, thanks for the update, some comments:
- we don’t need a separate api getIsObtained in GetDelegationTokenResponse, setting the token as null means not obtained.
- RMDelegationTokenEventType: CREATE_RMDT-> CREATE, similarly others.
- RMDelegationTokenIdentifier.renew(): I think it’s fine to blockingly renew the token here instead of keeping polling as this renew method is called by DelegationTokenRenewer which is already asynchronously renewing.
- RMDTOperationState.IN_PROFESS typo
- can RMDTOperationKey contain RMDTIdentifer and the operation type as the key?
-  createTokenAsync: we can return the RMDTOperationValue which includes the token, and so we don’t need a separate method pollToken to get the token. similarly for renew
- the following code is duplicated in the try and catch, similarly for cancel.
{code}
          key = new RMDTOperationKey(
              rmDTIdentifier.getOwner(), rmDTIdentifier.getRealUser(),
              rmDTIdentifier.getRenewer(), RMDTOperationType.RENEW);
          value = operations.get(key);
          if (value != null) {
            value.state = RMDTOperationState.FINISHED;
            value.timestamp = System.currentTimeMillis();
{code}, Jian, thanks for the comments.

bq. we don’t need a separate api getIsObtained in GetDelegationTokenResponse, setting the token as null means not obtained.

This is because I want to make three kinds of responses semantically consistent, and since we anyway make the change incompatible, it's good to change to what looks better.

bq. RMDelegationTokenEventType: CREATE_RMDT-> CREATE, similarly others.

Done

bq. RMDelegationTokenIdentifier.renew(): I think it’s fine to blockingly renew the token here instead of keeping polling as this renew method is called by DelegationTokenRenewer which is already asynchronously renewing.

This is because renew/cancel is called from ApplicationClientProtocol.

bq. RMDTOperationState.IN_PROFESS typo

Done

bq. can RMDTOperationKey contain RMDTIdentifer and the operation type as the key?

I understand you concern here, but I intentionally extract owner, user and renewer from RMDTIdentifer to construct the key, as they are the only fields in RMDTIdentifer that are used to by hashCode() and equals(). However, to make the code clearer, I add a constructor for RMDTOperationKey to take RMDTIdentifer as param.

bq. createTokenAsync: we can return the RMDTOperationValue which includes the token, and so we don’t need a separate method pollToken to get the token. similarly for renew

I did the following instead: in xxxxTokenAsync, instead of returning the state, returning the result/throwing the exception if the state is FINISHED, which should make the code clearer.

bq. the following code is duplicated in the try and catch, similarly for cancel.

I refactored the code in handleRMDelegationTokenEvent.
, We need to think about whether get/cancel/renew operation is idempotent to survive RM fail over. If it's a big additional change, we should solve it another ticket., Fix a nit, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12631670/YARN-1363.11.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 11 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:

                  org.apache.hadoop.mapreduce.v2.TestMRJobsWithProfiler

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/3213//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/3213//console

This message is automatically generated., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12631681/YARN-1363.12.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 11 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/3215//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/3215//console

This message is automatically generated., To survive RM failover, renew operation needs to make sure removing DT and creating DT are executed as an atomic step, which seems to require non trivial work to handle it. Shall we separate the work in another jira to prevent the patch from further growing, [~jianhe]?, yup,we can separate it. we need to provide atomic update operation for the DT.  For the zk store, we can use the multi operation. , Cleaning up stale PA patches.]