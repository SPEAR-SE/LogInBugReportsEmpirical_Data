[Post a patch which let TestRMRestart run with all types of schedulers, and fix the failures related to FS., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12672460/YARN-2635-1.patch
  against trunk revision 0708827.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager:

                  org.apache.hadoop.yarn.server.nodemanager.TestDirectoryCollection

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/5223//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/5223//console

This message is automatically generated., All tests passed locally. The TestDirectoryCollection failure looks related to YARN-1979, YARN-2640., Looks good to me.  Ran cleanly in my tree.  +1, +1. Committing this. , Just saw YARN-2638 as well. On second thought, it might be better to club the two JIRAs and implement a base class for RM tests that run against all schedulers.

And, schedulerType in these tests should probably be an enum so subclasses don't have to know the order., Update a patch which implements a bast class, which can be reused in future., Tested TestRM/TestRMRestart/TestClientToAMTokens.  All three tests now pass cleanly using FairScheduler.  +1, Oops, pending Jenkins of course., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12672637/YARN-2635-2.patch
  against trunk revision 6ac1051.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 4 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/5242//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/5242//console

This message is automatically generated., I was reviewing Wei's patch. While trying out my would-be-suggestions, I ended up making more than I wanted.

Here is the patch that:
# moves the schedulerSetup Before method to parent class
# adds a method to keep track of RMs created in TestRMRestart, so they can stopped after the test is done. Without this, some of the tests were failing depending on order of execution. 
, By the way, these tests take a long time to run. Do we want to run against all three schedulers? Or, would it be enough to run against CS and FS?, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12672709/yarn-2635-3.patch
  against trunk revision 054f285.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 4 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/5247//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/5247//console

This message is automatically generated., This seems like a good idea.  A few stylistic comments.

Can we rename RMSchedulerParametrizedTestBase to ParameterizedSchedulerTestBase?  The former confuses me a little because it like something that happened, rather than a noun, and "RM" doesn't seem necessary.  Also, Parameterized as spelled in the JUnit class name has three e's.  Lastly, can the class include some header comments on what it's doing?

{code}
+  protected void configScheduler(YarnConfiguration conf) throws IOException {
+    // Configure scheduler
{code}
Just name the method configureScheduler instead of an abbreviation then comment.

{code}
+  private void configFifoScheduler(YarnConfiguration conf) {
+    conf.set(YarnConfiguration.RM_SCHEDULER, FifoScheduler.class.getName());
+  }
+
+  private void configCapacityScheduler(YarnConfiguration conf) {
+    conf.set(YarnConfiguration.RM_SCHEDULER, CapacityScheduler.class.getName());
+  }
{code}
These are only one line - can we just inline them?

{code}
+  protected YarnConfiguration conf = null;
{code}
I think better to make this private and expose it through a getConfig method.

Running the tests without FIFO seems reasonable to me.

One last thought - not sure how feasible this is, but the code might be simpler if we get rid of SchedulerType and just have the parameters be Configuration objects?, Thanks for the review, Sandy. I tried to parametrize based on conf through a static block in the base class, but couldn't get it to work. The updated patch addresses remaining of your comments., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12672744/yarn-2635-4.patch
  against trunk revision 2d8e6e2.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 4 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/5250//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/5250//console

This message is automatically generated., Parametrized should be spelled Paramet *e* rized.  Can you fix that on commit?

Otherwise, +1.

 , Good catch on that. Committing this, will fix on commit. , FAILURE: Integrated in Hadoop-trunk-Commit #6186 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6186/])
YARN-2635. TestRM, TestRMRestart, TestClientToAMTokens should run with both CS and FS. (Wei Yan and kasha via kasha) (kasha: rev 80d11eb68e60f88e16d7d41edecbddfc935a6b10)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/ParameterizedSchedulerTestBase.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestRM.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/security/TestClientToAMTokens.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestRMRestart.java
, Thanks Wei for working on this, and Sandy for the review. 

Just committed this to trunk and branch-2. , SUCCESS: Integrated in Hadoop-Yarn-trunk #700 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/700/])
YARN-2635. TestRM, TestRMRestart, TestClientToAMTokens should run with both CS and FS. (Wei Yan and kasha via kasha) (kasha: rev 80d11eb68e60f88e16d7d41edecbddfc935a6b10)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestRMRestart.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/ParameterizedSchedulerTestBase.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/security/TestClientToAMTokens.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestRM.java
* hadoop-yarn-project/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1891 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1891/])
YARN-2635. TestRM, TestRMRestart, TestClientToAMTokens should run with both CS and FS. (Wei Yan and kasha via kasha) (kasha: rev 80d11eb68e60f88e16d7d41edecbddfc935a6b10)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestRM.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/ParameterizedSchedulerTestBase.java
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestRMRestart.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/security/TestClientToAMTokens.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1916 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1916/])
YARN-2635. TestRM, TestRMRestart, TestClientToAMTokens should run with both CS and FS. (Wei Yan and kasha via kasha) (kasha: rev 80d11eb68e60f88e16d7d41edecbddfc935a6b10)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestRMRestart.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/security/TestClientToAMTokens.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/ParameterizedSchedulerTestBase.java
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestRM.java
* hadoop-yarn-project/CHANGES.txt
, SUCCESS: Integrated in Hadoop-trunk-Commit #6536 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6536/])
YARN-2635. Merging to branch-2.6 for hadoop-2.6.0-rc1. (acmurthy: rev 81dc0ac6dcf2f34ad607da815ea0144f178691a9)
* hadoop-yarn-project/CHANGES.txt
, I've merged this back into branch-2.6 since it is safe, and is causing conflicts with too many cherry-picks., FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #5 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/5/])
YARN-2635. Merging to branch-2.6 for hadoop-2.6.0-rc1. (acmurthy: rev 81dc0ac6dcf2f34ad607da815ea0144f178691a9)
* hadoop-yarn-project/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Yarn-trunk #743 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/743/])
YARN-2635. Merging to branch-2.6 for hadoop-2.6.0-rc1. (acmurthy: rev 81dc0ac6dcf2f34ad607da815ea0144f178691a9)
* hadoop-yarn-project/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1933 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1933/])
YARN-2635. Merging to branch-2.6 for hadoop-2.6.0-rc1. (acmurthy: rev 81dc0ac6dcf2f34ad607da815ea0144f178691a9)
* hadoop-yarn-project/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Hdfs-trunk-Java8 #5 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/5/])
YARN-2635. Merging to branch-2.6 for hadoop-2.6.0-rc1. (acmurthy: rev 81dc0ac6dcf2f34ad607da815ea0144f178691a9)
* hadoop-yarn-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1957 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1957/])
YARN-2635. Merging to branch-2.6 for hadoop-2.6.0-rc1. (acmurthy: rev 81dc0ac6dcf2f34ad607da815ea0144f178691a9)
* hadoop-yarn-project/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk-Java8 #5 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/5/])
YARN-2635. Merging to branch-2.6 for hadoop-2.6.0-rc1. (acmurthy: rev 81dc0ac6dcf2f34ad607da815ea0144f178691a9)
* hadoop-yarn-project/CHANGES.txt
]