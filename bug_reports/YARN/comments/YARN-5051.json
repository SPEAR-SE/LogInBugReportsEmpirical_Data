[Is your include hosts file empty?, i think we should put the decommission node in InactiveRMNodes when it is registered
{code:title=ResourceTrackerService.java|borderStyle=solid}
    RMNode rmNode = new RMNodeImpl(nodeId, rmContext, host, cmPort, httpPort,
            resolve(host), capability, nodeManagerVersion);
    // Check if this node is a 'valid' node
    if (!this.nodesListManager.isValidNode(host)) {
      String message =
              "Disallowed NodeManager from  " + host
                      + ", Sending SHUTDOWN signal to the NodeManager.";
      LOG.info(message);
      response.setDiagnosticsMessage(message);
      response.setNodeAction(NodeAction.SHUTDOWN);
       this.rmContext.getInactiveRMNodes().put(rmNode.getNodeID().getHost(), rmNode);
      return response;
    }
{code}, The include hosts file not empty also have the same problem, when the nodemanager start will trigger the AddNodeTransition, the node in the NEW state, will not reduce the value of DecommisionedNMs value.
{code:title=RMNodeImpl.java|borderStyle=solid}
    Rpublic static class AddNodeTransition implements
      SingleArcTransition<RMNodeImpl, RMNodeEvent> {

    @Override
    public void transition(RMNodeImpl rmNode, RMNodeEvent event) {
      // Inform the scheduler
      RMNodeStartedEvent startEvent = (RMNodeStartedEvent) event;
      List<NMContainerStatus> containers = null;

      String host = rmNode.nodeId.getHost();
      if (rmNode.context.getInactiveRMNodes().containsKey(host)) {

        // Old node rejoining
        RMNode previouRMNode = rmNode.context.getInactiveRMNodes().get(host);
        rmNode.context.getInactiveRMNodes().remove(host);
        rmNode.updateMetricsForRejoinedNode(previouRMNode.getState());
      } else {
        ClusterMetrics.getMetrics().incrNumActiveNodes();
{code}, I think should add NEW events in updateMetricsForRejoinedNode method processingï¼Œlike this:
{code:title=RMNodeImpl.java|borderStyle=solid}
  private void updateMetricsForRejoinedNode(NodeState previousNodeState) {
    ClusterMetrics metrics = ClusterMetrics.getMetrics();
    metrics.incrNumActiveNodes();

    switch (previousNodeState) {
    case LOST:
      metrics.decrNumLostNMs();
      break;
    case REBOOTED:
      metrics.decrNumRebootedNMs();
      break;
    case NEW:
    case DECOMMISSIONED:
      metrics.decrDecommisionedNMs();
      break;
    case UNHEALTHY:
      metrics.decrNumUnhealthyNMs();
      break;
    default:
      LOG.debug("Unexpected previous node state");    
    }
  }
{code}, I'm not sure that last suggestion looks right.  I don't have time to go dig in the code at the moment.  [~kshukla], can you comment?, [~tangshangwen], Thank you for reporting this. The fix for this issue was part of YARN-3102 AFAICT from the problem statement of this JIRA. Its fix was checked into 2.7.3. It seems you are running 2.7.1? , yes, thanks [~kshukla]]