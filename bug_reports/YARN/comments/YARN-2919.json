[As mentioned in the [comment|https://issues.apache.org/jira/browse/YARN-2874?focusedCommentId=14233528&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14233528]  by Karthik as ??add a variable to Token to capture that it is to be cancelled, so it works across any duplicate TimerTasks as well??, Hi [~kasha] & [~seth.siddharth@gmail.com]
Based on my understanding from the comments, i have uploaded the initial patch please review and confirm whether is this the approach you guys had in mind., Submitting the draft patch, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12686036/YARN-2919.20141209-1.patch
  against trunk revision 2e98ad3.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 15 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:

                  org.apache.hadoop.yarn.server.resourcemanager.TestWorkPreservingRMRestart
                  org.apache.hadoop.yarn.server.resourcemanager.TestRM

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/6069//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-YARN-Build/6069//artifact/patchprocess/newPatchFindbugsWarningshadoop-yarn-server-resourcemanager.html
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/6069//console

This message is automatically generated., Hi [~kasha] , can you provide your opinion on the approach which i have mentioned in this sample patch ?, Was out most of last week. Just got back, will try and get to this today. , I think we want to add the "canceling" state to {{Token}} itself, and update the renew code to reject renew requests when "canceling" is true., Hi [~kasha] 
Thanks for the review, 
AFAIU you just want to add a atomic  "canceling" state to {{org.apache.hadoop.security.token.Token}} itself, and once {{org.apache.hadoop.security.token.Token.cancel(Configuration)}} is invoked "canceling" state of token will be set to true and when {{org.apache.hadoop.security.token.Token.renew(Configuration)}} try to renew the token we should check this state and stop the renew and return expiration date less than the system time (or -1), right ? 
Further based on this Token."cancelling" state {{org.apache.hadoop.yarn.server.resourcemanager.security.DelegationTokenRenewer.RenewalTimerTask}} can determine to renew and create new timer task?, Hi [~kasha]
Can you please take a look @ my previous [comment|https://issues.apache.org/jira/browse/YARN-2919?focusedCommentId=14258208&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14258208], and if approach mentioned in it is not clear then would give a WIP patch, or please inform if any other approach you have in your mind.
 , [~Naganarasimha] - I am on vacation and will not be able to look into this at least until next week. Sorry for the inconvenience. , Hi [~kasha@cloudera.com],
    Hope if you are free you can take a look @ my earlier [comment|https://issues.apache.org/jira/browse/YARN-2919?focusedCommentId=14258208&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14258208] on this jira. If the approach is fine will work on the patch for that approach., Sorry for the delay here. The approach you suggest sounds about right. I might have more concrete comments based on the patch. , [~Naganarasimha], patch seems not applying any more. mind updating ? I'll review this and get it in. , thanks for commenting, will try to get a updated patch by this week., The patch still needs updating., Sorry for the delay will shortly work on the  Karthik's comments and rebase the patch, [~Naganarasimha], do you have bandwidth to finish this recently? May I move this to 2.9 if you don't?, Cannot hold 2.8.0 for this forever. It's a long standing issue, and not a new regression in 2.8.0.

There's been no patch update for a really long time. Moving this out into 2.8.1.

[~Naganarasimha], if you can try getting this in for 2.8.1, that'll be great., Oops really sorry for the long delay, will try to work it out for 2.8.1, Hi [~Naganarasimha], any progress on this jira?, Move it out to 2.9.0 given no progress on this jira for a while which is actually pretty old issue., Sorry [~djp] for the really long delay for the simple fix. Have uploaded the patch could you help in reviewing the same ?, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  3m 35s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 21s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 14m 50s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 14m 43s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 59s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 53s{color} | {color:green} trunk passed {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  1m 39s{color} | {color:red} hadoop-common-project/hadoop-common in trunk has 18 extant Findbugs warnings. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 55s{color} | {color:green} trunk passed {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 21s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  2m  0s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 14m 42s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 14m 42s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  2m  1s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 58s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m  2s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 29s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  8m 49s{color} | {color:green} hadoop-common in the patch passed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 45m  0s{color} | {color:red} hadoop-yarn-server-resourcemanager in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 49s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}144m 56s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.yarn.server.resourcemanager.TestRMRestart |
|   | hadoop.yarn.server.resourcemanager.security.TestDelegationTokenRenewer |
| Timed out junit tests | org.apache.hadoop.yarn.server.resourcemanager.TestRMStoreCommands |
|   | org.apache.hadoop.yarn.server.resourcemanager.TestSubmitApplicationWithRMHA |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:14b5c93 |
| JIRA Issue | YARN-2919 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12873723/YARN-2919.002.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux c8851ad76f12 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 45ff4d3 |
| Default Java | 1.8.0_131 |
| findbugs | v3.1.0-RC1 |
| findbugs | https://builds.apache.org/job/PreCommit-YARN-Build/16208/artifact/patchprocess/branch-findbugs-hadoop-common-project_hadoop-common-warnings.html |
| unit | https://builds.apache.org/job/PreCommit-YARN-Build/16208/artifact/patchprocess/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/16208/testReport/ |
| modules | C: hadoop-common-project/hadoop-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: . |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/16208/console |
| Powered by | Apache Yetus 0.5.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Testcases failures (except TestRMRestart.testFinishedAppRemovalAfterRMRestart) are related to the patch looking into it, but Findbugs does not seem to be related to the patch, Uploading the patch after fixing the issues in UT, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 20s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  1s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  1m 22s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 13m 59s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 18m 50s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  2m  6s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  2m  7s{color} | {color:green} trunk passed {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  1m 40s{color} | {color:red} hadoop-common-project/hadoop-common in trunk has 17 extant Findbugs warnings. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 26s{color} | {color:green} trunk passed {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 18s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 24s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 12m  3s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 12m  3s{color} | {color:green} the patch passed {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  2m  5s{color} | {color:orange} root: The patch generated 9 new + 101 unchanged - 0 fixed = 110 total (was 101) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  2m  5s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m 30s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 30s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red}  9m  7s{color} | {color:red} hadoop-common in the patch failed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 44m 49s{color} | {color:red} hadoop-yarn-server-resourcemanager in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 38s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}142m 23s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.ha.TestActiveStandbyElectorRealZK |
|   | hadoop.yarn.server.resourcemanager.TestOpportunisticContainerAllocatorAMService |
|   | hadoop.yarn.server.resourcemanager.security.TestDelegationTokenRenewer |
| Timed out junit tests | org.apache.hadoop.yarn.server.resourcemanager.TestSubmitApplicationWithRMHA |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:14b5c93 |
| JIRA Issue | YARN-2919 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12874013/YARN-2919.003.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux 80a3a2a3ab73 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 9ae9467 |
| Default Java | 1.8.0_131 |
| findbugs | v3.1.0-RC1 |
| findbugs | https://builds.apache.org/job/PreCommit-YARN-Build/16220/artifact/patchprocess/branch-findbugs-hadoop-common-project_hadoop-common-warnings.html |
| checkstyle | https://builds.apache.org/job/PreCommit-YARN-Build/16220/artifact/patchprocess/diff-checkstyle-root.txt |
| unit | https://builds.apache.org/job/PreCommit-YARN-Build/16220/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common.txt |
| unit | https://builds.apache.org/job/PreCommit-YARN-Build/16220/artifact/patchprocess/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/16220/testReport/ |
| modules | C: hadoop-common-project/hadoop-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: . |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/16220/console |
| Powered by | Apache Yetus 0.5.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, {{TestDelegationTokenRenewer.testCancelWithMultipleAppSubmissions}} is not related to this patch same was found in other jira's too. Have corrected the checkstyle issues in the current patch and other test case failures are not related to the patch. Findbugs issue too not related to the patch (will raise new issues for these shortly)., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 32s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  1m 37s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 13m 51s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 19m 16s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  2m 15s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  2m  8s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m  5s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 25s{color} | {color:green} trunk passed {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 19s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 21s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 11m 27s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 11m 27s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  2m  3s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 53s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m 27s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 46s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red}  9m 11s{color} | {color:red} hadoop-common in the patch failed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 44m 56s{color} | {color:red} hadoop-yarn-server-resourcemanager in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 42s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}143m 20s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.security.TestRaceWhenRelogin |
|   | hadoop.yarn.server.resourcemanager.TestRMRestart |
|   | hadoop.yarn.server.resourcemanager.security.TestDelegationTokenRenewer |
| Timed out junit tests | org.apache.hadoop.yarn.server.resourcemanager.TestSubmitApplicationWithRMHA |
|   | org.apache.hadoop.yarn.server.resourcemanager.TestKillApplicationWithRMHA |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:14b5c93 |
| JIRA Issue | YARN-2919 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12874268/YARN-2919.004.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux 12ce2c648314 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / abdea26 |
| Default Java | 1.8.0_131 |
| findbugs | v3.1.0-RC1 |
| unit | https://builds.apache.org/job/PreCommit-YARN-Build/16229/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common.txt |
| unit | https://builds.apache.org/job/PreCommit-YARN-Build/16229/artifact/patchprocess/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/16229/testReport/ |
| modules | C: hadoop-common-project/hadoop-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: . |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/16229/console |
| Powered by | Apache Yetus 0.5.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Thanks [~Naganarasimha] for contributing the patch. Latest patch looks good to me. Just a minor comments for DelegationTokenRenewer, if token is cancelling, shall we log something different than "The token was removed already."? Other looks fine to me.
btw, does failed tests related to the patch? If not, do we have some JIRA to track them?, Thanks [~djp] for taking a look at the patch and sorry for the delayed reply.
I checked multiple times these were my findings :
# {{TestRMRestart.testRMRestartWaitForPreviousAMToFinish}} fails always with or without patch even after YARN-5416. I have raise YARN-6759 for it.
# {{TestDelegationTokenRenewer}} is same as YARN-5816 tested multiple times in the local setup it never fails.
# {{TestRaceWhenRelogin.test}} also passes in my local setup and failure does not seem to be related to the patch.

Also i tested {{org.apache.hadoop.fs.TestDelegationTokenRenewer}} and all the test cases passes there too.

Have uploaded the patch with reworking on your comment. Please check if the log message is fine or you were expecting some thing else , | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 14s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 15s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 13m  4s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 15m  2s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 50s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 52s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 53s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 22s{color} | {color:green} trunk passed {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 16s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 28s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 12m  0s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 12m  0s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 51s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 54s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m  8s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 22s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  8m 24s{color} | {color:green} hadoop-common in the patch passed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 45m 19s{color} | {color:red} hadoop-yarn-server-resourcemanager in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 34s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}133m 49s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.yarn.server.resourcemanager.TestRMRestart |
|   | hadoop.yarn.server.resourcemanager.TestRMEmbeddedElector |
|   | hadoop.yarn.server.resourcemanager.monitor.TestSchedulingMonitor |
|   | hadoop.yarn.server.resourcemanager.security.TestDelegationTokenRenewer |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:14b5c93 |
| JIRA Issue | YARN-2919 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12875365/YARN-2919.005.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux 6adfd1c68dc0 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / fa1aaee |
| Default Java | 1.8.0_131 |
| findbugs | v3.1.0-RC1 |
| unit | https://builds.apache.org/job/PreCommit-YARN-Build/16293/artifact/patchprocess/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/16293/testReport/ |
| modules | C: hadoop-common-project/hadoop-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: . |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/16293/console |
| Powered by | Apache Yetus 0.5.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, [~djp] test case failures are not related to the patch. can you take a look at the latest patch ?, Latest patch LGTM. +1. Will commit it tomorrow if no further comments from others., got a question, [~Naganarasimha], could you elaborate what the race condition is based on code? The jira description is a bit vague.
The patch uses a local variable in the token itself to indicate cancelling, I'm unsure if this is a good way. Caller can just make a copy of the token and do all sorts of operation and this flag becomes moot.
Also, there are some behavior changes, the return value of renew method was supposed to be the expiration time, now '-1' is returned as an error code, which old program does not understand - old program was expecting an exception if renew fails. And it's possible for old program to wrongly interprets the '-1' as the expiration time. 
, Thanks for the review [~jianhe], 
bq. could you elaborate what the race condition is based on code? The jira description is a bit vague.
Hmm ok i can reword it, but best way to explain would be based on the original [comment|https://issues.apache.org/jira/browse/MAPREDUCE-5384?focusedCommentId=13745421&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13745421] from Sid which was mentioned by [~kasha] in YARN-2874 . This race is about stopping creation of the timer task or trying to renew the token if cancel is already invoked on it.

bq. Caller can just make a copy of the token and do all sorts of operation and this flag becomes moot.
Well agree that if there is a copy made there nothing much which can be done but IIUC its not the general usage to clone it and it would be useful to avoid unnecessary invoke on the renew or creation of timer task given that these are multi threaded in nature. In my initial approach i had created the flag in the RM's {{DelegationTokenToRenew}}, which i think was rightfully corrected by [~kasha] to be put in Token.

bq. Also, there are some behavior changes, the return value of renew method was supposed to be the expiration time, now '-1' is returned as an error code, which old program does not understand - old program was expecting an exception if renew fails. And it's possible for old program to wrongly interprets the '-1' as the expiration time.
Agree , but the reason i did was api was not clearly mentioning that if its cancelled then exception will be thrown and it would be left to the renewer (interface) so its implementation might want to differ but on other hand if expiration is less than before renew check for requesting new token passes. So i thought its safer, but if you feel its better to throw exception then would do so but if so then just throw IO Exception ? what if renewer was throwing some subclass?

, Thanks for additional review, [~jianhe]!
bq. there are some behavior changes, the return value of renew method was supposed to be the expiration time, now '-1' is returned as an error code, which old program does not understand - old program was expecting an exception if renew fails.
Oh. I could miss that. "-1" is something dangerous as caller will use this value as expire time, etc., just like: DelegationTokenRenewer.renew() or DelegationTokenFetcher.renewTokens(). I think we should throw IOException instead given the behavior should be failed to renew (due to token get cancelling), and also most callers should handle IOException explicitly for renew failure cases., bq.  This race is about stopping creation of the timer task or trying to renew the token if cancel is already invoked on it.
I don't see where the race is based on latest code. 
"removeApplicationFromRenewal" method is where the cancel happens. Inside the method, it always call "dttr.cancelTimer();" first before cancelling the actual token.  could you explain a bit more where the race is?  , [~jianhe], 
May be my understanding is wrong and correct me if i am so. I went more based on the description which is there in MAPREDUCE-5384 which says the two possible race scenarios. but though one is correct not completely sure about the second one.
{quote}
Races to fix:
# TimerTask#cancel() disallows future invocations of run(), but doesn't abort an already scheduled/started run().
# In the context of DelegationTokenRenewal, RenewalTimerTask#cancel() only cancels that TimerTask instance. However, it has no effect on any other TimerTasks created for that token.
Attach one or more files to this issue
{quote}
assume {{RenewalTimerTask. run}} is invoked by the timer task and it has passed through the {{if (!dttr.isTimerCancelled())}} but before {{renewToken(DelegationTokenToRenew)}} or in between {{renewToken}} & {{setTimerForTokenRenewal}} is invoked, {{removeApplicationFromRenewal}} gets triggered. In which case unnecessary renew or timer task scheduling happens
IIUC this is what even Sid meant by ??The in-process renew can check these till the last moment before invoking the actual renew, and subsequent renewals will not attempt a renew (maybe even not schedule a renew)?? in his [comment|https://issues.apache.org/jira/browse/MAPREDUCE-5384?focusedCommentId=13745421&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13745421] in MAPREDUCE-5384.
, bq. assume RenewalTimerTask. run is invoked by the timer task and it has passed through the if (!dttr.isTimerCancelled()) but before renewToken(DelegationTokenToRenew) or in between renewToken & setTimerForTokenRenewal is invoked, removeApplicationFromRenewal gets triggered. In which case unnecessary renew or timer task scheduling happens

I think there's always such situation regardless whether the flag is inside the method (done by this patch) or outside the method ( the cancelled flag which exists today). e.g. In current patch, if the renew Method has passed the {{if (!cancelling.get()) {}} check, and before renew invokes, the cancel is executed, then the renewToken will also be executed ? Unless we completely synchronize the cancel and renew at client side which will bring more overhead, it is possible for a renew happen immediately after a cancel. 

On the other hand, it is possible, but rare, for the mentioned scenario to occur because {{dttr.cancelTimer();}} will cancel the timer and the followup cancelToken(dttr) doesnot cancel the token immediately, but rather enqueues the cancel the task which should have more room for the other parallel executing renewal thread to run into completion.

Anyway, we could try to synchronize both operations completely to avoid this rare scenario but at the cost of more overhead,  or we have a good fallback code to handle this failed scenario as it does today. (btw, do you know if this issue occur in reality or it's a observation by code?) IMHO, the current existing way maybe fine..

, Thanks [~jianhe] for the feeback.

bq. Unless we completely synchronize the cancel and renew at client side which will bring more overhead, it is possible for a renew happen immediately after a cancel.
Agree that patch works currently on the best effort and does not completely ensure race is avoided. But instead if we synchronize the {{Token.renew(Configuration)}} & {{Token.cancel(configuration)}}, and also have a simple boolean in {{Token}} to signify the cancelling flow should ensure that the race is fully avoided.
And in terms of cost *renew* is called not very frequently and *cancel* only once, and if use read write locks if really required then should be pretty fast. Thoughts ?

bq.In the context of DelegationTokenRenewal, RenewalTimerTask#cancel() only cancels that TimerTask instance. However, it has no effect on any other TimerTasks created for that token. 
 [~jianhe] could there be chances for this ? IIUC there is only one Dttr per Token  and hence only one timer task right?

Also would like to know the feedback from [~kasha] as the issue was raised by him.
, Hi [~jianhe] & [~djp], If you guys still feel its better to keep it as is, then will close this jira, Is this still on target for 2.9.0 ? If not, can we we push this out to the next major release ?, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  0s{color} | {color:blue} Docker mode activated. {color} |
| {color:red}-1{color} | {color:red} patch {color} | {color:red}  0m  5s{color} | {color:red} YARN-2919 does not apply to trunk. Rebase required? Wrong Branch? See https://wiki.apache.org/hadoop/HowToContribute for help. {color} |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Issue | YARN-2919 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12875365/YARN-2919.005.patch |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/17715/console |
| Powered by | Apache Yetus 0.6.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Moving target version to 3.1.0 due to lack of activity. Feel free to revert if you have any concerns., As there is no further response on this jira and neither its very critical to handle, i am closing this jira.]