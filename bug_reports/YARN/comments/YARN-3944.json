[\\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  16m 25s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:red}-1{color} | tests included |   0m  0s | The patch doesn't appear to include any new or modified tests.  Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. |
| {color:green}+1{color} | javac |   7m 50s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 41s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:red}-1{color} | checkstyle |   0m 52s | The applied patch generated  1 new checkstyle issues (total was 3, now 4). |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 21s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 32s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   1m 41s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | yarn tests |   1m 57s | Tests passed in hadoop-yarn-common. |
| | |  40m 44s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12746191/YARN-3944.v1.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / e4f7562 |
| checkstyle |  https://builds.apache.org/job/PreCommit-YARN-Build/8590/artifact/patchprocess/diffcheckstylehadoop-yarn-common.txt |
| hadoop-yarn-common test log | https://builds.apache.org/job/PreCommit-YARN-Build/8590/artifact/patchprocess/testrun_hadoop-yarn-common.txt |
| Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/8590/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf905.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/8590/console |


This message was automatically generated., Hi [~l201514], thanks for reporting this issue. Is this issue duplicate as YARN-3238?, [~zxu], this is not a duplicate of YARN-3238(i.e. ConnectTimeoutException), this jira deals with ConnectException., Hi [~l201514], thanks for the information. I am not sure how you get 1 hour delay.
The following is my calculation based on the latest code which has the fix YARN-3554. Please correct me if I am wrong.
The IPC retry for ConnectException is handled at {{Client#handleConnectionFailure}}, which uses {{connectionRetryPolicy}}
{code}
        final int max = conf.getInt(
            CommonConfigurationKeysPublic.IPC_CLIENT_CONNECT_MAX_RETRIES_KEY,
            CommonConfigurationKeysPublic.IPC_CLIENT_CONNECT_MAX_RETRIES_DEFAULT);
        final int retryInterval = conf.getInt(
            CommonConfigurationKeysPublic.IPC_CLIENT_CONNECT_RETRY_INTERVAL_KEY,
            CommonConfigurationKeysPublic
                .IPC_CLIENT_CONNECT_RETRY_INTERVAL_DEFAULT);
        connectionRetryPolicy = RetryPolicies.retryUpToMaximumCountWithFixedSleep(
            max, retryInterval, TimeUnit.MILLISECONDS);
  public static final int     IPC_CLIENT_CONNECT_MAX_RETRIES_DEFAULT = 10;
  public static final int     IPC_CLIENT_CONNECT_RETRY_INTERVAL_DEFAULT = 1000;
{code}
So based on the default value, it will retry 10 times with interval 1 seconds, the total is 10 seconds at IPC layer.
The second layer retry is at NMProxy:
{code}
        createRetryPolicy(conf,
          YarnConfiguration.CLIENT_NM_CONNECT_MAX_WAIT_MS,
          YarnConfiguration.DEFAULT_CLIENT_NM_CONNECT_MAX_WAIT_MS,
          YarnConfiguration.CLIENT_NM_CONNECT_RETRY_INTERVAL_MS,
          YarnConfiguration.DEFAULT_CLIENT_NM_CONNECT_RETRY_INTERVAL_MS);
  public static final long DEFAULT_CLIENT_NM_CONNECT_MAX_WAIT_MS =
      3 * 60 * 1000;
  public static final long DEFAULT_CLIENT_NM_CONNECT_RETRY_INTERVAL_MS
      = 10 * 1000;
{code}
It will retry 180,000/10,000 = 18 times at NMProxy.
So the total delay will be 18*(10 + 10) = 360 seconds, which is 6 minutes, one-tenth of the delay you got. 
, [~zxu] Thanks for your quick response, I think the reason we encounter this problem is that we were setting IPC_CLIENT_CONNECT_MAX_RETRIES to 40 times prior to 2.6, and when we merge 2.6 the value of DEFAULT_CLIENT_NM_CONNECT_MAX_WAIT_MS is 15 * 60 * 1000. Therefore, the total delay could end up with more than 1 hour.

So, I think the best solution could be backporting YARN-3554 instead, and maybe dail down the number of IPC_CLIENT_CONNECT_MAX_RETRIES, Dropping 2.6.1-candiate label, 2.6.1 is out now. Targetting 2.6.2 / 2.7.2., [~l201514], [~zxu], what's your thought on this? Should we close this one and target YARN-3554 for 2.6.2 instead?, Agreed, I will close this one]