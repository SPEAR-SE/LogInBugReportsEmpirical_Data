[I think we should do a scrub of all the TODOs that I left in code :)

Thanks for taking this up, Thomas.

I believe we were trying to do too many things using a single underlying data structure. My objectives were:
 - Only let a single connection from the AM to do requests at a time (or in other words requests from multiple threads in an AM are forced to be serial)
 - If and whenever possible, don't let illegal AMs go through to the scheduler and other components in RM
 - Keep track of last-responses in order to account for missing messages. (This is a legacy baggage, not sure if this can happen in current RPC)

If we can separate these functionality logically, we will be good., Thanks for the info Vinod.  In an effort to keep changes to a minimum for now, we can remove the synchronized from the unregisterAttempt and in allocate just check to see if it was null when putting it.  It appears the synchronized in unregisterAttempt was just trying to prevent the memory leak of adding the response back to the responseMap after it had been unregistered. 
, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12551348/YARN-189.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/126//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/126//console

This message is automatically generated., The change looks good to me. I don't see any real issues with it.  I am a +1 for it.  I am not going to check it in to give Vinod and others some time to comment if they want to.  , bq. Thanks for the info Vinod. In an effort to keep changes to a minimum for now, we can remove the synchronized from the unregisterAttempt and in allocate just check to see if it was null when putting it.
+1 for the idea, clearly I don't want us to hold this blocker for fixing all these, let's create a separate ticket.

Will quickly look at the patch., If you throw an exception when the previous response isn't there, the AM might ignore it. The MR AM currently ignores exceptions upto a certain count (that's a separate bug) irrespective of the failure type. If you send a reboot command, that is better.

Exception handling on the MR AM side is totally broken, it doesn't seem to shutdown the AM on getting critical exceptions or reboot commands from the RM - another bug., Thanks for the review Vinod.  I was not aware of the handling exception bug. I've updated the patch to do a reboot.

Also I should have mentioned before we manually tested this patch. We reproduced the issue by introducing a sleep in the allocate, then we verified that with this patch it didn't deadlock when AM got killed or finished., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12551540/YARN-189.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/130//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/130//console

This message is automatically generated., The new patch looks good too. I am +1 on this also., +1 for the patch. Pushing in.

We need to fix the other AM issues immediately. *sigh*, Just committed this to trunk, branch-2 and branch-0.23. Thanks Thomas!, File MAPREDUCE-4761 for the MR AM issues on RM exceptions., Integrated in Hadoop-trunk-Commit #2947 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/2947/])
    YARN-189. Fixed a deadlock between RM's ApplicationMasterService and the dispatcher. Contributed by Thomas Graves. (Revision 1404431)

     Result = SUCCESS
vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1404431
Files : 
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java
, Integrated in Hadoop-Yarn-trunk #23 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/23/])
    YARN-189. Fixed a deadlock between RM's ApplicationMasterService and the dispatcher. Contributed by Thomas Graves. (Revision 1404431)

     Result = SUCCESS
vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1404431
Files : 
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java
, Integrated in Hadoop-Hdfs-0.23-Build #422 (See [https://builds.apache.org/job/Hadoop-Hdfs-0.23-Build/422/])
    YARN-189. Fixed a deadlock between RM's ApplicationMasterService and the dispatcher. Contributed by Thomas Graves.
svn merge --ignore-ancestry -c 1404431 ../../trunk/ (Revision 1404433)

     Result = SUCCESS
vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1404433
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java
, Integrated in Hadoop-Hdfs-trunk #1213 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1213/])
    YARN-189. Fixed a deadlock between RM's ApplicationMasterService and the dispatcher. Contributed by Thomas Graves. (Revision 1404431)

     Result = FAILURE
vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1404431
Files : 
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java
, Integrated in Hadoop-Mapreduce-trunk #1243 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1243/])
    YARN-189. Fixed a deadlock between RM's ApplicationMasterService and the dispatcher. Contributed by Thomas Graves. (Revision 1404431)

     Result = ABORTED
vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1404431
Files : 
* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java
]