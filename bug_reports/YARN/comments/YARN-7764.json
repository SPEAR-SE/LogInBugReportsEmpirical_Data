[[~cheersyang] This is not an issue. Resource#getResources gives back an map of ResourceInformation. Its been populated and could be used for read-only purpose. As of now, all caller is adhering to this. If we make an improvement to do a copy of map while returning from getResources, it impacts a lot to CS performance.

An option is to keep a copy of map when Resource is created. Its also has a bit of performance impact. [~leftnoteasy], whats ur thought on this? API in marked as *InterfaceAudience.Private*, so i think we need not have to keep a duplicate., I am not sure how bad is it with regarding to the CS performance if we return a copy of ResourceInformation array, that looks like the most straightforward fix. Is that a big concern?, Resources and DominantResourceCalculator are two classes which provide basic ops on Resource object. To support add/subtract/multiply etc, each ResourceInformation object of Resource has to be iterated. getResourcesArray is used for this. Hence if this getter is costlier interms of operation, it will impact basic ops on Resource, and hence impact CS performance. You can refer the recent tight loop UT performance test cases added CS.

 

Now coming to getResources, its still used in various places but not much as getResourcesArray. Hence I was reserved to make a copy on each return. Another way of fixing is having a readOnly mapper and populate that as well. however findbug ll still return same error. But we can internally assume a read only map is returned., Hi [~sunilg]/[~leftnoteasy]

I think we should get this fixed. Expose such fields can potentially introduce weird bugs. Proposed to return a copy instead of exposing the reference. I don't think this is expensive because the array will be just a few items. Submitted v1 patch, please let me know your thoughts.

 , | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 26s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 25m 58s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 30s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 17s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 33s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m 58s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  1m 11s{color} | {color:red} hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api in trunk has 1 extant Findbugs warnings. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 23s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 31s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 27s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 27s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 14s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 30s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 21s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 14s{color} | {color:green} hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api generated 0 new + 0 unchanged - 1 fixed = 0 total (was 1) {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 21s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  0m 35s{color} | {color:green} hadoop-yarn-api in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 22s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 56m  1s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:8620d2b |
| JIRA Issue | YARN-7764 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12917327/YARN-7764.001.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |
| uname | Linux 2447c746eff0 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 2be64eb |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_151 |
| findbugs | v3.1.0-RC1 |
| findbugs | https://builds.apache.org/job/PreCommit-YARN-Build/20197/artifact/out/branch-findbugs-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-api-warnings.html |
|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/20197/testReport/ |
| Max. process+thread count | 335 (vs. ulimit of 10000) |
| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/20197/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Hi [~cheersyang]

Unfortunately this wil have an impact on performance tests on SLS as we ll that UT perf tests 
{code:java}
mvn test -Dtest=org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacitySchedulerPerf#testUserLimitThroughputForTwoResources -DRunCapacitySchedulerPerfTests{code}
I suggest you might need to run this for upto 4 resources and compare trunk vs your patch. Earlier when i tested there was impact.

cc [~leftnoteasy]. I think wangda has suppressed this error. Could u pls confirm once., Hi [~sunilg]

Thanks for the pointer, I have run that perf UT

2 resources result:
* before: #ResourceTypes = 2. Avg of fastest 20: 44843.05
* after: #ResourceTypes = 2. Avg of fastest 20: 41841.004
 
5 resource result:
* before: #ResourceTypes = 5. Avg of fastest 20: 37950.664
* after: #ResourceTypes = 5. Avg of fastest 20: 31545.742

Not sure how to eval this result. Is it a concerning overhead?
, Yup. There is a dip in performance. Around 8 to 10%. This is a concern. , Hi [~sunilg]

If return a copy is not an option, I tried to modify the signature to return an unmodified list, but that ends up with modifying too many classes. In this case, I suggest to exclude this check in findbugs as it is intended. The caller needs to make sure there is no modifications to the ResourceInformation array returned by getResources. Uploaded v2 patch.

Please let me know your thoughts.
Thanks, Thank you weiwei.
Looks fine. I ll wait for Wangda also. , | (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 25s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 25m 32s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 35m 40s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Skipped patched modules with no Java source: hadoop-yarn-project/hadoop-yarn {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m  0s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  2s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 29s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Skipped patched modules with no Java source: hadoop-yarn-project/hadoop-yarn {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m  0s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 21s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 48m 22s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:8620d2b |
| JIRA Issue | YARN-7764 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12917353/YARN-7764.002.patch |
| Optional Tests |  asflicense  findbugs  xml  |
| uname | Linux c33c9d435f84 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 2be64eb |
| maven | version: Apache Maven 3.3.9 |
| Max. process+thread count | 340 (vs. ulimit of 10000) |
| modules | C: hadoop-yarn-project/hadoop-yarn U: hadoop-yarn-project/hadoop-yarn |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/20199/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Thanks [~cheersyang] / [~sunilg] for looking at this issue.

+1 about skipping this in findbugs. I would not prefer to touch the basic part of Resource, any change in the code could harm performance a lot, and correctness is a bigger problem. , Thanks [~leftnoteasy]. Committing shortly., Thanks [~cheersyang] for the patch. Thanks [~leftnoteasy] for additional review. Committed to branch-3.1 and trunk. , Thanks [~sunilg], [~leftnoteasy]!, SUCCESS: Integrated in Jenkins build Hadoop-trunk-Commit #13921 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/13921/])
YARN-7764. Findbugs warning: Resource#getResources may expose internal (sunilg: rev f7a17b029ddd61ca73c2c2c88f5451dbf05fc501)
* (edit) hadoop-yarn-project/hadoop-yarn/dev-support/findbugs-exclude.xml
]