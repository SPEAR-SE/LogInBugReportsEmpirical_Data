[Here issue is happening because while submitting an application, hasAccess() check will always reach ParentQueue::hasAccess(). 
In this case, finally parent will come as "root" and it will pass this check. (* is default for acl_submit_applications and acl_administer_queue in root queue)

So to ensure only one specified user to submit job in a leaf queue, below configurations are mandatory in "root"
  root.acl_submit_applications 
  root.acl_administer_queue

To submit a job, acl_administer_queue check has no relevance. But we are forced to configure this also, if we want to achieve what is mentioned in the problem statement of this issue. 
Also if each leaf queue wants to have its own set of users, all users finally are to be mentioned in root. This is not good.

So it is better to skip hasAccess() check if parent Queue is "root" as below
if(rootQueue){
   return false;
}, This is a duplicate of YARN-1269 and related to YARN-1941 and YARN-1951.

In any case I don't think we want to special-case the root queue, as the same issue could exist in a subtree where access to the subtree root allows access to any queue within the subtree.

Actually I believe this is by design.  It allows admins to configure access to an entire subtree of queues by giving access to the root of the subtree rather than having to add the access to each leaf queue.  So for your example above you'll want to set the root queue's ACLs to be empty so that one must have access to the leaf queue in order to submit.]