[Create a patch to add the static string. As it is a minor change, no test case is added., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12609300/YARN-1328.1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/2231//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/2231//console

This message is automatically generated., +1 for exposing ContainerId prefix. There are lots places where containerId's prefix is used(e.g. test cases).

IMO, we should use snake case with upper case like CONTAINER_ID_PREFIX instead of using camel case when we define constants.  I think appIdStrPrefix/appAttemptIdStrPrefix should also be fixed., Agreed with Tsuyoshi that we should make these upper case., bq. IMO, we should use snake case with upper case like CONTAINER_ID_PREFIX instead of using camel case when we define constants. I think appIdStrPrefix/appAttemptIdStrPrefix should also be fixed.

Yes, the upper case is pretty standard for naming the final static variables. However, due to some reasons, ApplicationId and ApplicationAttemptId doesn't follow it. I'd like keep the consistency in  ContainerId as well. In contrast, I'm conservative to change appIdStrPrefix/appAttemptIdStrPrefix as they are open to the users. Therefore the change may affect the existing users, in particular after GA release., How about adding Deprecated annotation to appIdStrPrefix/appAttemptIdStrPrefix for 2.2.x's backward compatibility , and adding upper case constants for 2.3.0 or later releases?, The existing constants are marked as Private and Unstable, so we should be able to change them., Changed to the upper case.

I'm wondering whether the constant is really private. Actually, in my case I refer to the prefix to check whether it is the container/app/appattempt id string, which is already written in the file., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12609392/YARN-1328.2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/2240//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/2240//console

This message is automatically generated., Note that ConverterUtils already has prefixes for applications, containers, and appattempts (along with methods to convert to and from strings)., Noticed it before, but is it better to refer to a unique constant instead of having two similar ones? By the way, ConverterUtils is marked \@Private as well. Not sure it's correct or not., Why do you need this? I can see how one can use it, and how harmless it is to expose it, but I'd rather add APIs to expose any missing functionality., bq. Why do you need this?

Suppose we write different id strings (application, attempt, container) into one file, I'd like to convert it into the Id objects, but instead of calling ConvertUtils.toXXXXId, I'd like to check whether it's a possible XXXX Id first, avoiding the unnecessary conversion process., Don't think we should expose these constants - ties us into not changing things for ever. We ideally wouldn't change them, but its much better to depend on APIs anyways. Even exposing the prefix is not guaranteed to help figure out valid IDs as there could be other problems.

If you see missing APIs, let's add them.

Also, it is generally useful to provide the problem in title/description instead of a solution., bq. We ideally wouldn't change them, but its much better to depend on APIs anyways.

Agreed. Let's keep to APIs to convert the IDs, and determine whether the given strings are IDs. We can find the APIs in ConvertUtils.

Meanwhile, I checked that the prefix constants in ApplicationId and ApplicationAttemptId are already marked \@Private. Let's just leave them there for compatibility.

Close the ticket as Won't Fix]