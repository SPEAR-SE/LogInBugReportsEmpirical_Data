[The patch adds {{equals}} methods that use the same variable that was used in {{hashCode}}.  It also removes the unnecessary {{equals}} method., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12698251/YARN-3183.patch
  against trunk revision 67efab9.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/6605//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/6605//console

This message is automatically generated., Thanks for providing patch!! It looks good to me overall.
In all the hashcode implementation there is chance of NPE in hashcode(). Should null be checked? equals method does this check., That's a good point, though I'm not sure what we'd return for the hashcode otherwise.  It probably make sense to have the constructor, where the variable used for hashCode and equals is set, do the null check and throw an {{IllegalArgumentException}} or something like that?, I'd suggest for returning 0 in hashCode() if null., According to the contract of hashCode: http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html

{quote}
If two objects are equal according to the equals(Object) method, then calling the hashCode method on each of the two objects must produce the same integer result.
{quote}

{quote}
t is not required that if two objects are unequal according to the equals(java.lang.Object) method, then calling the hashCode method on each of the two objects must produce distinct integer results.
{quote}

I don't think either rule has been broken according due to the change on either hashCode or equal.

hashCode change in ats related events is to generate the hash code only based on the event's related app ID, and use it to route the event to the right dispatcher.

Close the jira as invalid. Feel free to reopen it if folks have different idea.]