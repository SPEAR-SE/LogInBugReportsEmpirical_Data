[{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12702882/YARN-3296.1.patch
  against trunk revision 952640f.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/6867//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/6867//console

This message is automatically generated., Agree with setting it to Public-Evolving. I think we should make the methods uniform along with marking it Public. At the very least, I think the following methods shouldn't be abstract: getCumulativeVmem, getCumulativeRssmem, getCumulativeCpuTime, getCpuUsagePercent. These methods should probably return UNAVAILABLE (=0). 

[~hitesh], [~jianhe] - what do you think? , Made some functions non abstract. 

There is some inconsistency in return values though. Older functions were expected to return 0 but cpuPercent returns -1 for cases where functionality is not available. , {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12703261/YARN-3296.2.patch
  against trunk revision 608ebd5.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/6889//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/6889//console

This message is automatically generated., Thanks [~hitesh] for updating the patch!
bq. There is some inconsistency in return values though. Older functions were expected to return 0 but cpuPercent returns -1 for cases where functionality is not available. 
I think inconsistent for default value here will make user get confused. However, I think this shouldn't be in scope of this JIRA and I guess we should discuss in a separated JIRA that if we want to change the value (also a headache to existing user). 
v2 patch looks good to me. +1. Will commit it later if no further comments from others., bq. I think inconsistent for default value here will make user get confused. 
The return values should be consistent. 

bq. However, I think this shouldn't be in scope of this JIRA and I guess we should discuss in a separated JIRA that if we want to change the value (also a headache to existing user). 
I am open to doing it in another JIRA. It won't be a headache to the user yet, since the CPU percentage hasn't been in a release. Got committed only a few days ago. Let us get to this at the earliest we can. [~hitesh] - do you want to repurpose YARN-3297 for this? , +1 on getting this in, provided we are immediately following up on making the return values consistent. [~djp] - mind taking care of the commits? 
, I have commit v2 patch to trunk and branch-2. Thanks [~hitesh] for the patch and [~kasha] for review!
Filing another JIRA for issue of inconsistent default (untracked) value., FAILURE: Integrated in Hadoop-trunk-Commit #7280 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7280/])
YARN-3296. Mark ResourceCalculatorProcessTree class as Public for configurable resource monitoring. Contributed by Hitesh Shah (junping_du: rev 7ce3c7635392c32f0504191ddd8417fb20509caa)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ResourceCalculatorProcessTree.java
* hadoop-yarn-project/CHANGES.txt
, bq. I am open to doing it in another JIRA. It won't be a headache to the user yet, since the CPU percentage hasn't been in a release. Got committed only a few days ago
I was thinking return -1 (as CPU percentage) make slightly more sense as it won't duplicate with case of zero resource consumption. However, this should be against with what we already released before. Just filed YARN-3304, plz continue the discussion there. Thx!, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #127 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/127/])
YARN-3296. Mark ResourceCalculatorProcessTree class as Public for configurable resource monitoring. Contributed by Hitesh Shah (junping_du: rev 7ce3c7635392c32f0504191ddd8417fb20509caa)
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ResourceCalculatorProcessTree.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk #861 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/861/])
YARN-3296. Mark ResourceCalculatorProcessTree class as Public for configurable resource monitoring. Contributed by Hitesh Shah (junping_du: rev 7ce3c7635392c32f0504191ddd8417fb20509caa)
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ResourceCalculatorProcessTree.java
* hadoop-yarn-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2059 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2059/])
YARN-3296. Mark ResourceCalculatorProcessTree class as Public for configurable resource monitoring. Contributed by Hitesh Shah (junping_du: rev 7ce3c7635392c32f0504191ddd8417fb20509caa)
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ResourceCalculatorProcessTree.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #118 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/118/])
YARN-3296. Mark ResourceCalculatorProcessTree class as Public for configurable resource monitoring. Contributed by Hitesh Shah (junping_du: rev 7ce3c7635392c32f0504191ddd8417fb20509caa)
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ResourceCalculatorProcessTree.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #127 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/127/])
YARN-3296. Mark ResourceCalculatorProcessTree class as Public for configurable resource monitoring. Contributed by Hitesh Shah (junping_du: rev 7ce3c7635392c32f0504191ddd8417fb20509caa)
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ResourceCalculatorProcessTree.java
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #2077 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2077/])
YARN-3296. Mark ResourceCalculatorProcessTree class as Public for configurable resource monitoring. Contributed by Hitesh Shah (junping_du: rev 7ce3c7635392c32f0504191ddd8417fb20509caa)
* hadoop-yarn-project/CHANGES.txt
* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ResourceCalculatorProcessTree.java
]