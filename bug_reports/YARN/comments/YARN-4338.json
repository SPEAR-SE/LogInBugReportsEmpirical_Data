[Simple fix is to check if the value is null., Recently in YARN-4250, there were a chance that {{anyRequest.getNodeLabelExpression()}} become null becaue ApplicationMasterService may not normalizes expression always., Hi [~xinwei],
   What was the scenario in which you got this NPE? , Missed to add a point earlier, are you using a custom scheduler here?, Hi, [~Naganarasimha] & [~sunilg]
I just try to merge YARN-2618 into trunk and run the unit test {{TestCapacityScheduler#testNoMoreVDisksOnNode}}, After updating some codes(e.g.  {{cs.allocate()}}method), then it throws the NPE. Maybe the test codes has some incorrect  usage?, Hi [~xinwei],
In that case its expected to come through ApplicationMasterService , so may be its sufficient to rectify the test case with default label "" . 
[~sunilg] & [~wangda]
But as we are coming across this more frequently, how about correcting it with setting with Default Label when using other overloaded methods or even in the main overloaded method we can check for null and set to Default i.e. "" ?
, Thanks [~Naganarasimha] for your suggestion, the test case passed with this modification., meant => ??how about correcting it in *ResourceRequest* with setting Default Label when using other overloaded methods or in the main overloaded method we can check for null and set to Default label i.e. ""??, Thanks for comments: [~sunilg]/[~Naganarasimha].

[~xinwei], I would prefer to keep main logic as-is and fix tests, the major concern is people may think node label expression required to check null in CS logic, which could reduce code readability. I'm OK with common code (such as AppSchedulingInfo) check null for nodeLabelExpression. Could you fix tests of YARN-2618 instead of updating RegularContainerAllocator?, Hi [~wangda],
How about setting Default Label in ResourceRequest when not set ?
, I don't know what's the impact of it, since we're leveraging nodeLabelExpression=="null" to represent "unset" in ResourceRequest. I think some code path will fail if ResourceRequest.getNodeLabelExpression returns "" if it == null/, IMHO, i think its worth a try as anyway null is treated as default Label so funcationally its fine. Even if it fails I expect some test cases failing but it will prevent future testcases not require to handle this explicitly. Thoughts ?
, IMHO, i think its worth a try as anyway null is treated as default Label so funcationally its fine. Even if it fails I expect some test cases failing but it will prevent future testcases not require to handle this explicitly. Thoughts ?
, IMHO, i think its worth a try as anyway null is treated as default Label so funcationally its fine. Even if it fails I expect some test cases failing but it will prevent future testcases not require to handle this explicitly. Thoughts ?
]