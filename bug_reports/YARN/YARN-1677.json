{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": null,
        "components": [{
            "id": "12319323",
            "name": "nodemanager",
            "self": "https://issues.apache.org/jira/rest/api/2/component/12319323"
        }],
        "created": "2014-01-30T12:31:25.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Ding Yuan",
            "key": "d.yuan",
            "name": "d.yuan",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=d.yuan",
            "timeZone": "Etc/UTC"
        },
        "customfield_10010": null,
        "customfield_12310191": null,
        "customfield_12310192": null,
        "customfield_12310220": "2014-04-10T17:15:29.181+0000",
        "customfield_12310222": null,
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "1.0",
        "customfield_12310320": null,
        "customfield_12310420": "370859",
        "customfield_12310920": "371164",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i1rwzr:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Fri May 01 21:53:10 UTC 2015",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "Hi Yarn developers,\nWe are a group of researchers on software reliability, and recently we did a study and found that majority of the most severe failures in hadoop are caused by bugs in exception handling logic. Therefore we built a simple checking tool that automatically detects some bug patterns that have caused some very severe failures. I am reporting some of the results for Yarn here. Any feedback is much appreciated!\n\n==========================\nCase 1:\nLine: 551, File: \"org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java\"\n\n{noformat}\n    switch (monitoringEvent.getType()) {\n    case START_MONITORING_CONTAINER:\n      .. ..\n    default:\n      // TODO: Wrong event.\n    }\n{noformat}\n\nThe switch fall-through (handling any potential unexpected event) is empty. Should we at least print an error message here?\n==========================\n\n==========================\nCase 2:\n  Line: 491, File: \"org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java\"\n{noformat}\n          } catch (Throwable e) {\n\n            // TODO Better error handling. Thread can die with the rest of the\n            // NM still running.\n            LOG.error(\"Caught exception in status-updater\", e);\n          }\n{noformat}\n\nThe handler of this very general exception only logs the error. The TODO seems to indicate it is not sufficient.\n==========================\n\n==========================\nCase 3:\nLine: 861, File: \"org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java\"\n\n   for (LocalResourceStatus stat : remoteResourceStatuses) {\n        LocalResource rsrc = stat.getResource();\n        LocalResourceRequest req = null;\n        try {\n          req = new LocalResourceRequest(rsrc);\n        } catch (URISyntaxException e) {\n          // TODO fail? Already translated several times...\n        }\n\nThe handler for URISyntaxException is empty, and the TODO seems to indicate it is not sufficient.\nThe same code pattern can also be found at:\nLine: 901, File: \"org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java\"\nLine: 838, File: \"org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java\"\nLine: 878, File: \"org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java\"\nAt line: 803, File: org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java, the handler of URISyntaxException also seems not sufficient:\n{noformat}\n       try {\n          shellRsrc.setResource(ConverterUtils.getYarnUrlFromURI(new URI(\n              shellScriptPath)));\n        } catch (URISyntaxException e) {\n          LOG.error(\"Error when trying to use shell script path specified\"\n              + \" in env, path=\" + shellScriptPath);\n          e.printStackTrace();\n\n          // A failure scenario on bad input such as invalid shell script path\n          // We know we cannot continue launching the container\n          // so we should release it.\n          // TODO\n          numCompletedContainers.incrementAndGet();\n          numFailedContainers.incrementAndGet();\n          return;\n        }\n{noformat}\n==========================\n\n==========================\nCase 4:\nLine: 627, File: \"org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java\"\n\n{noformat}\n      try {\n        /* keep the master in sync with the state machine */\n        this.stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.error(\"Can't handle this event at current state\", e);\n        /* TODO fail the application on the failed transition */\n      }\n{noformat}\n\nThe handler of this exception only logs the error. The TODO seems to indicate it is not sufficient.\n\nThis exact same code pattern can also be found at:\nLine: 573, File: \"org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java\"\n==========================\n\n==========================\nCase 5: empty handler for exception: java.lang.InterruptedException\n  Line: 123, File: \"org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java\"\n\n{noformat}\n  public void join() {\n    if(proxyServer != null) {\n      try {\n        proxyServer.join();\n      } catch (InterruptedException e) {\n      }\n    }\n  }\n{noformat}\n\nThe InterruptedException is completely ignored. As a result, any events causing this interrupt will be lost.\n\nMore info on why InterruptedException shouldn't be ignored: http://stackoverflow.com/questions/1087475/when-does-javas-thread-sleep-throw-interruptedexception\n\nThis pattern of handling InterruptedException can be found in a few other places:\nLine: 434, File: org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java\n{noformat}\n          try {\n            event = eventQueue.take();\n          } catch (InterruptedException e) {\n            LOG.error(\"Returning, interrupted : \" + e);\n            return; // TODO: Kill RM.\n          }\n{noformat}\nLine: 722, File: \"org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java\"\nLine: 191, File: \"org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java\"\nLine: 393, File: \"org/apache/hadoop/yarn/util/LinuxResourceCalculatorPlugin.java\"\nLine: 258, File: \"org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalizedResource.java\"\n==========================\n\n==========================\nCase 6: potential divide by zero\nline: 581, File: org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java\n{noformat}\n    int availableContainers =\n      node.getAvailableResource().getMemory() / capability.getMemory(); \n  // TODO: A buggy\n   // application\n    // with this\n    // zero would\n    // crash the\n    // scheduler.\n{noformat}\n\nShould this potential divide by zero be handled?\n==========================\n\n==========================\nCase 7:\n  Line: 260, File: \"org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalizedResource.java\"\n{noformat}\n      } catch (YarnException e) {\n        // TODO cleanup\n        return;\n      }\n{noformat}\n\nThe error handler simply returns without proper clean up.\n==========================",
        "duedate": null,
        "environment": null,
        "fixVersions": [],
        "issuelinks": [],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "id": "3",
            "name": "Major",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12313722&avatarId=15135",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12313722&avatarId=15135",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12313722&avatarId=15135",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12313722&avatarId=15135"
            },
            "id": "12313722",
            "key": "YARN",
            "name": "Hadoop YARN",
            "projectCategory": {
                "description": "Scalable Distributed Computing",
                "id": "10292",
                "name": "Hadoop",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/10292"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12313722"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Ding Yuan",
            "key": "d.yuan",
            "name": "d.yuan",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=d.yuan",
            "timeZone": "Etc/UTC"
        },
        "resolution": null,
        "resolutiondate": null,
        "status": {
            "description": "The issue is open and ready for the assignee to start work on it.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
            "id": "1",
            "name": "Open",
            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
            "statusCategory": {
                "colorName": "blue-gray",
                "id": 2,
                "key": "new",
                "name": "To Do",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2"
            }
        },
        "subtasks": [],
        "summary": "Potential bugs in exception handlers",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2015-05-01T21:53:10.000+0000",
        "versions": [{
            "archived": false,
            "description": "2.2.0 release",
            "id": "12325051",
            "name": "2.2.0",
            "releaseDate": "2013-10-15",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12325051"
        }],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/YARN-1677/votes",
            "votes": 0
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/YARN-1677/watchers",
            "watchCount": 8
        },
        "workratio": -1
    },
    "id": "12692264",
    "key": "YARN-1677",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12692264"
}