{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12658526","self":"https://issues.apache.org/jira/rest/api/2/issue/12658526","key":"YARN-937","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12313722","id":"12313722","key":"YARN","name":"Hadoop YARN","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12313722&avatarId=15135","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12313722&avatarId=15135","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12313722&avatarId=15135","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12313722&avatarId=15135"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12324029","id":"12324029","description":"2.1.0-beta release","name":"2.1.0-beta","archived":false,"released":true,"releaseDate":"2013-08-22"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2013-07-19T17:56:34.090+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Sat Jul 27 20:18:20 UTC 2013","customfield_12310420":"338720","customfield_12312320":null,"customfield_12310222":"10002_*:*_2_*:*_269475962_*|*_1_*:*_3_*:*_530752124_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2013-07-27T20:18:20.263+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/YARN-937/watchers","watchCount":7,"isWatching":false},"created":"2013-07-18T14:01:12.204+0000","customfield_12310192":null,"customfield_12310191":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10343","value":"Reviewed","id":"10343"}],"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/1","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/blocker.svg","name":"Blocker","id":"1"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"6.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12324029","id":"12324029","description":"2.1.0-beta release","name":"2.1.0-beta","archived":false,"released":true,"releaseDate":"2013-08-22"}],"issuelinks":[{"id":"12372280","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12372280","type":{"id":"10032","name":"Blocker","inward":"is blocked by","outward":"blocks","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10032"},"inwardIssue":{"id":"12648378","key":"YARN-701","self":"https://issues.apache.org/jira/rest/api/2/issue/12648378","fields":{"summary":"ApplicationTokens should be used irrespective of kerberos","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/1","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/blocker.svg","name":"Blocker","id":"1"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/7","id":"7","description":"The sub-task of the issue","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype","name":"Sub-task","subtask":true,"avatarId":21146}}}},{"id":"12423817","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12423817","type":{"id":"12310000","name":"Duplicate","inward":"is duplicated by","outward":"duplicates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"},"outwardIssue":{"id":"12599948","key":"YARN-255","self":"https://issues.apache.org/jira/rest/api/2/issue/12599948","fields":{"summary":"Support secure AM launch for unmanaged AM's","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype","name":"Improvement","subtask":false,"avatarId":21140}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2015-05-06T19:51:09.774+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12327002","id":"12327002","name":"applications/unmanaged-AM-launcher"}],"timeoriginalestimate":null,"description":"Fix unmanaged AM in non-secure/secure setup post YARN-701 since app-tokens will be used in both scenarios.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12324029","id":"12324029","description":"2.1.0-beta release","name":"2.1.0-beta","archived":false,"released":true,"releaseDate":"2013-08-22"}],"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12594203","id":"12594203","filename":"YARN-937.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"created":"2013-07-25T17:03:28.198+0000","size":37218,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12594203/YARN-937.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12594043","id":"12594043","filename":"YARN-937.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"created":"2013-07-24T21:59:11.821+0000","size":34339,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12594043/YARN-937.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12593993","id":"12593993","filename":"YARN-937.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"created":"2013-07-24T18:28:22.469+0000","size":32670,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12593993/YARN-937.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12593695","id":"12593695","filename":"YARN-937.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"created":"2013-07-23T13:27:50.572+0000","size":35427,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12593695/YARN-937.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12593641","id":"12593641","filename":"YARN-937.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"created":"2013-07-23T04:02:45.231+0000","size":31049,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12593641/YARN-937.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12593610","id":"12593610","filename":"YARN-937.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"created":"2013-07-22T22:58:29.388+0000","size":31077,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12593610/YARN-937.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"339040","customfield_12312823":null,"summary":"Fix unmanaged AM in non-secure/secure setup post YARN-701","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=acmurthy","name":"acmurthy","key":"acmurthy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arun C Murthy","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=acmurthy","name":"acmurthy","key":"acmurthy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arun C Murthy","active":true,"timeZone":"America/Los_Angeles"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13713243","id":"13713243","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=acmurthy","name":"acmurthy","key":"acmurthy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arun C Murthy","active":true,"timeZone":"America/Los_Angeles"},"body":"Hey [~tucu00], is there a chance you can get to this one quickly? Much appreciated, thanks!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=acmurthy","name":"acmurthy","key":"acmurthy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arun C Murthy","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-07-19T01:43:19.321+0000","updated":"2013-07-19T01:43:19.321+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13713880","id":"13713880","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"body":"I'll start with it this afternoon, thx","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"created":"2013-07-19T17:56:34.090+0000","updated":"2013-07-19T17:56:34.090+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13714321","id":"13714321","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"body":"[~acmurthy], [~vinodkv], the approach I'm taking is adding to {{ApplicationReport}} a {{getAmToRmToken()}} method. Then the {{RMAppIMpl}} during {{createAndGetApplicationReport()}}, in case of unmanaged AMs only, adds the token from {{currentAttempt.getAMRMToken()}} if available (if i got things right it will have it once the app is running). Still I have to iron out a few details. Does this approach seems reasonable?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"created":"2013-07-20T03:41:03.323+0000","updated":"2013-07-20T03:41:03.323+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13714334","id":"13714334","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"body":"questioning myself, why do we need an unmanaged AM to get RM tokens? the uAM has always direct contact with the RM, so it can authenticate itself if needed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"created":"2013-07-20T05:11:15.589+0000","updated":"2013-07-20T05:11:15.589+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13715431","id":"13715431","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"body":"After a bit of more digging, my current thinking for this is:\n\nAM to RM communication should require tokens ONLY when dealing with managed AMs.\n\nFor unmanaged AMs, AMRM tokens are not necessary because all the interactions with the RM -from creating the APP, registering it, doing allocations and finishing- are always from the same process. And, in a secure setup, kerberos will be required for the same.\n\nThe changes introduced in YARN-701 configure the RPC server to always require token auth.\n\nI think we should revert that change in the {{ApplicationMasterService}} {{serviceStart()}} method and instead in the {{authorizeRequest()}} method we should check for the {{UGI.getAuthenticationMethod()}} to be {{TOKEN}} only if the AM is managed.\n\n[~vinodkv], [~acmurthy], [~sandyr], thoughts?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"created":"2013-07-22T17:40:27.902+0000","updated":"2013-07-22T17:40:27.902+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13715486","id":"13715486","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinodkv","name":"vinodkv","key":"vinodkv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinod Kumar Vavilapalli","active":true,"timeZone":"America/Los_Angeles"},"body":"The thing is throughout YARN, and from my other conversations with [~daryn] on other tickets in larger Hadoop, we are trying to move to digest auth irrespective of kerberos. In your latest solution, unmanaged AMs in unsecure mode will not need any auth, which will regress that path. Your first solution of sending across AMRMToken seems fine to me, we should just mark that API as @Private.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinodkv","name":"vinodkv","key":"vinodkv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinod Kumar Vavilapalli","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-07-22T18:21:26.689+0000","updated":"2013-07-22T18:21:26.689+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13715811","id":"13715811","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"body":"Patch that adds to the YarnClient a method to retrieve the AMRM token from an application (giving an appId).\n\nThe AMRM token is only returned when:\n\n* the AM is unmanaged\n* the AM is owned by the current user\n* the AM is RUNNING\n\ntestcases verifies the first 2 conditions, the last condition cannot be verified easily.\n\nI've also verified that this patch fixed my unmanaged AM.\n\nThe {{TestUnnmanagedAMLauncher}} is still commented out because the {{UnmanagedAMLauncher}} requires additional work (it launches a different JVM, and we need to propagate the tokens to it). I'll open a JIRA to fix this.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"created":"2013-07-22T22:58:29.391+0000","updated":"2013-07-22T22:58:29.391+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13715870","id":"13715870","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinodkv","name":"vinodkv","key":"vinodkv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinod Kumar Vavilapalli","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. The TestUnnmanagedAMLauncher is still commented out because the UnmanagedAMLauncher requires additional work (it launches a different JVM, and we need to propagate the tokens to it). I'll open a JIRA to fix this.\nThat's part of the reason why I didn't fix it all in YARN-701. This JIRA is the right place to fix it. We can write the tokens to a file and set the env ApplicationConstants.CONTAINER_TOKEN_FILE_ENV_NAME. Once we do that the actual AM can pick up the credentials just like it does in an managed AM. One big problem is where we store this file, it is the unmanaged AMs responsibility to store it in a secure manner and delete it (on process exit?).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinodkv","name":"vinodkv","key":"vinodkv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinod Kumar Vavilapalli","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-07-22T23:46:09.491+0000","updated":"2013-07-22T23:46:09.491+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13715886","id":"13715886","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"body":"I still don't understand why UnmanagedAMLauncher forks in to a new JVM instead doing everything in process.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"created":"2013-07-23T00:03:28.750+0000","updated":"2013-07-23T00:03:28.750+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13715896","id":"13715896","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"{color:red}-1 overall{color}.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12593610/YARN-937.patch\n  against trunk revision .\n\n    {color:green}+1 @author{color}.  The patch does not contain any @author tags.\n\n    {color:green}+1 tests included{color}.  The patch appears to include 4 new or modified test files.\n\n    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.\n\n    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.\n\n    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.\n\n    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.\n\n    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.\n\n    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:\n\n                  org.apache.hadoop.mapreduce.security.TestMRCredentials\n                  org.apache.hadoop.mapreduce.security.TestBinaryTokenFile\n                  org.apache.hadoop.yarn.client.cli.TestYarnCLI\n                  org.apache.hadoop.yarn.client.api.impl.TestYarnClient\n                  org.apache.hadoop.yarn.api.TestApplicatonReport\n                  org.apache.hadoop.yarn.server.resourcemanager.TestClientRMService\n                  org.apache.hadoop.yarn.server.resourcemanager.rmapp.TestRMAppTransitions\n                  org.apache.hadoop.yarn.server.resourcemanager.TestApplicationACLs\n                  org.apache.hadoop.yarn.server.resourcemanager.security.TestClientToAMTokens\n\n    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-YARN-Build/1545//testReport/\nConsole output: https://builds.apache.org/job/PreCommit-YARN-Build/1545//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2013-07-23T00:14:22.461+0000","updated":"2013-07-23T00:14:22.461+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13715915","id":"13715915","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bikassaha","name":"bikassaha","key":"bikassaha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=bikassaha&avatarId=29845","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bikassaha&avatarId=29845","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bikassaha&avatarId=29845","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bikassaha&avatarId=29845"},"displayName":"Bikas Saha","active":true,"timeZone":"America/Los_Angeles"},"body":"The decision to launch it in a new process was to simulate exactly what happens in the cluster. The env is setup and a process is forked just like it is inside the cluster. Trying to keep the AM JVM internals clean from any pre-loading/statics etc that already happened in the launcher code.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bikassaha","name":"bikassaha","key":"bikassaha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=bikassaha&avatarId=29845","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bikassaha&avatarId=29845","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bikassaha&avatarId=29845","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bikassaha&avatarId=29845"},"displayName":"Bikas Saha","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-07-23T00:26:54.383+0000","updated":"2013-07-23T00:26:54.383+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13715918","id":"13715918","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bikassaha","name":"bikassaha","key":"bikassaha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=bikassaha&avatarId=29845","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bikassaha&avatarId=29845","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bikassaha&avatarId=29845","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bikassaha&avatarId=29845"},"displayName":"Bikas Saha","active":true,"timeZone":"America/Los_Angeles"},"body":"We could optionally launch it in process but the launching it separately seemed more important.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bikassaha","name":"bikassaha","key":"bikassaha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=bikassaha&avatarId=29845","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bikassaha&avatarId=29845","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bikassaha&avatarId=29845","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bikassaha&avatarId=29845"},"displayName":"Bikas Saha","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-07-23T00:27:39.731+0000","updated":"2013-07-23T00:27:39.731+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13716023","id":"13716023","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"body":"fixing failure in {{TestApplicatonReport}}.\n\nAll other YARN testcases failing in jenkins are passing locally with the patch.\n\nThe 2 MAPREDUCE testcases failing in jenkins also fail locally without the patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"created":"2013-07-23T04:02:45.234+0000","updated":"2013-07-23T04:02:45.234+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13716062","id":"13716062","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"{color:red}-1 overall{color}.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12593641/YARN-937.patch\n  against trunk revision .\n\n    {color:green}+1 @author{color}.  The patch does not contain any @author tags.\n\n    {color:green}+1 tests included{color}.  The patch appears to include 4 new or modified test files.\n\n    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.\n\n    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.\n\n    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.\n\n    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.\n\n    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.\n\n    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:\n\n                  org.apache.hadoop.mapreduce.security.TestMRCredentials\n                  org.apache.hadoop.mapreduce.security.TestBinaryTokenFile\n\n    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-YARN-Build/1549//testReport/\nConsole output: https://builds.apache.org/job/PreCommit-YARN-Build/1549//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2013-07-23T05:26:41.606+0000","updated":"2013-07-23T05:26:41.606+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13716159","id":"13716159","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bikassaha","name":"bikassaha","key":"bikassaha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=bikassaha&avatarId=29845","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bikassaha&avatarId=29845","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bikassaha&avatarId=29845","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bikassaha&avatarId=29845"},"displayName":"Bikas Saha","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. We can write the tokens to a file and set the env ApplicationConstants.CONTAINER_TOKEN_FILE_ENV_NAME. Once we do that the actual AM can pick up the credentials just like it does in an managed AM.\nI like this idea because it keeps the AM logic/code identical in managed and unmanaged modes wrt tokens. The unmanagedAMLauncher could write the file out and delete the file when it exits. The unamanagedAMLauncher currently monitors the AM for exit and can delete the token file after the AM has exited. In fact it could delete the file after the AM is reported to be running by the RM since by that time the AM has already loaded the token and contacted the RM using the token.\nIt would be great if the unmanagedAMLauncher would continue to function like it did earlier.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bikassaha","name":"bikassaha","key":"bikassaha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=bikassaha&avatarId=29845","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bikassaha&avatarId=29845","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bikassaha&avatarId=29845","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bikassaha&avatarId=29845"},"displayName":"Bikas Saha","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-07-23T06:40:24.130+0000","updated":"2013-07-23T06:40:24.130+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13716368","id":"13716368","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"The RM also provides the AM with a secret.  Does the unmanaged AM also receive the secret?  It's almost as if the unmanaged AM launcher needs to construct or obtain the launch context from the RM.  I haven't reviewed the AM launcher code so perhaps it already does this.\n\nI'm not sure why a token file needs to be written out?  Technically it shouldn't be necessary anymore since the tokens are passed in the launch context.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2013-07-23T13:02:06.521+0000","updated":"2013-07-23T13:02:06.521+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13716372","id":"13716372","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"body":"[~bikassaha], in the way I've using unmanaged AM I have a running service that hosts the AM without forking a process. IMO, this is the powerful thing about unmanaged AMs. If I would be to fork a new process to run the AM, why would I just use a managed AM.\n\n[~daryn], the AM launcher, after creating an APP, forks a process to register it to the schedulers, the new process does not have the launch context thus we need the token file in this case.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"created":"2013-07-23T13:11:46.888+0000","updated":"2013-07-23T13:11:46.888+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13716382","id":"13716382","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"body":"new patch passing the token in  a file as Bikas suggested for the UnmanagedAMLauncher. Uncommenting the TestUnmanagedAMLauncher as now works.\n\nThe 2 MR testcases failures are unrelated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"created":"2013-07-23T13:27:50.575+0000","updated":"2013-07-23T13:27:50.575+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13716440","id":"13716440","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"{color:red}-1 overall{color}.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12593695/YARN-937.patch\n  against trunk revision .\n\n    {color:green}+1 @author{color}.  The patch does not contain any @author tags.\n\n    {color:green}+1 tests included{color}.  The patch appears to include 5 new or modified test files.\n\n    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.\n\n    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.\n\n    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.\n\n    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.\n\n    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.\n\n    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-unmanaged-am-launcher hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:\n\n                  org.apache.hadoop.mapreduce.security.TestMRCredentials\n                  org.apache.hadoop.mapreduce.security.TestBinaryTokenFile\n\n    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-YARN-Build/1550//testReport/\nConsole output: https://builds.apache.org/job/PreCommit-YARN-Build/1550//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2013-07-23T14:47:07.515+0000","updated":"2013-07-23T14:47:07.515+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13716450","id":"13716450","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"body":"Test failures are unrelated, they are also failing in trunk.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"created":"2013-07-23T14:53:35.720+0000","updated":"2013-07-23T14:53:35.720+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13717632","id":"13717632","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=acmurthy","name":"acmurthy","key":"acmurthy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arun C Murthy","active":true,"timeZone":"America/Los_Angeles"},"body":"[~tucu00] Are there jiras open for TestMRCredentials & TestBinaryTokenFile?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=acmurthy","name":"acmurthy","key":"acmurthy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arun C Murthy","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-07-23T21:15:18.433+0000","updated":"2013-07-23T21:15:18.433+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13717635","id":"13717635","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"body":"[~acmurthy], [~vinodkv] or [~bikassaha], given that there are other JIRAs (YARN-945) that may impact this, it will be eaiser to have this in so if changes are needed we have only one moving target. It would be great if you can review this patch and if ready we can get it in. THX","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"created":"2013-07-23T21:18:57.473+0000","updated":"2013-07-23T21:18:57.473+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13717639","id":"13717639","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"body":"[~acmurthy], just created YARN-960.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"created":"2013-07-23T21:22:40.464+0000","updated":"2013-07-23T21:22:40.464+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13717772","id":"13717772","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bikassaha","name":"bikassaha","key":"bikassaha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=bikassaha&avatarId=29845","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bikassaha&avatarId=29845","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bikassaha&avatarId=29845","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bikassaha&avatarId=29845"},"displayName":"Bikas Saha","active":true,"timeZone":"America/Los_Angeles"},"body":"Sorry I am little caught up. I will get to this by EOD.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bikassaha","name":"bikassaha","key":"bikassaha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=bikassaha&avatarId=29845","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bikassaha&avatarId=29845","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bikassaha&avatarId=29845","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bikassaha&avatarId=29845"},"displayName":"Bikas Saha","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-07-23T23:40:14.081+0000","updated":"2013-07-23T23:40:14.081+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13717980","id":"13717980","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinodkv","name":"vinodkv","key":"vinodkv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinod Kumar Vavilapalli","active":true,"timeZone":"America/Los_Angeles"},"body":"Tx for the patch. Quick comments:\n - ApplicationReport.getAmRmToken() -> getAMRMToken and similarly the setter?\n - We should document the above API(s) in ApplicationReport similar to what you did in YarnClient.\n - YarnClientImpl.getAMRMToken(): The  formatting is a little weird, can you fix? Otherwise I can do it at commit time.\n - Clearly the token is only returned in selective cases. So we can have another API in ApplicationReport.newInstance() which doesn't take in a token. It will reduce the patch changes too I think.\n - RMAppImpl.createAndGetApplicationReport()\n    -- currentAttempt can be null depending on when the API is called.\n    -- token variable can be typed to be Token<AMRMTokenIdentifier> token\n    -- You should use BuilderUtils.newToken instead of new newClientToAMToken. Or may be just create the token method itself, the main problem is calling newClientToAMToken for AMRMToken.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinodkv","name":"vinodkv","key":"vinodkv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinod Kumar Vavilapalli","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-07-24T04:58:53.351+0000","updated":"2013-07-24T04:58:53.351+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13718018","id":"13718018","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bikassaha","name":"bikassaha","key":"bikassaha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=bikassaha&avatarId=29845","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bikassaha&avatarId=29845","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bikassaha&avatarId=29845","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bikassaha&avatarId=29845"},"displayName":"Bikas Saha","active":true,"timeZone":"America/Los_Angeles"},"body":"Not quite sure why we have manually use the RM address to re-create the token. YarnClient uses ClientRMProxy that will automatically switch between RM instances. Hence, the RM address might change after a failover.\n{code}\n+  public org.apache.hadoop.security.token.Token<AMRMTokenIdentifier> \n+    getAMRMToken(ApplicationId appId) throws YarnException, IOException {\n+    org.apache.hadoop.security.token.Token<AMRMTokenIdentifier> amrmToken = null;\n+    ApplicationReport report = getApplicationReport(appId);\n+    Token token = report.getAmRmToken();\n+    if (token != null) {\n+    InetSocketAddress address = getConfig().getSocketAddr(\n+      YarnConfiguration.RM_SCHEDULER_ADDRESS,\n+      YarnConfiguration.DEFAULT_RM_SCHEDULER_ADDRESS,\n+      YarnConfiguration.DEFAULT_RM_SCHEDULER_PORT);\n+      amrmToken = ConverterUtils.convertFromYarn(token, address);\n{code}\n\ntypo in name?\n{code}\npublic void testMRAMTokens() throws Exception {\n{code}\n\ntypo in comment? same exists in the user=foo case.\n{code}\n+      //managed AMs do return AMRM token\n+      Assert.assertNotNull(rmClient.getAMRMToken(appId));\n{code}\n\nIf the queue ACL's give identical access to a different user then why should that user not be allowed to obtain the AMRM token?\n\nShould we return AMRMToken in getApplicationReport() only if the currentAppAttempt is in a waiting to register state? Once the attempt is registered, is there a need to provide the token to the client?\nSimilarly the AMLauncher could delete the token file after the app has entered running state based on getApplicationReport()?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bikassaha","name":"bikassaha","key":"bikassaha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=bikassaha&avatarId=29845","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bikassaha&avatarId=29845","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bikassaha&avatarId=29845","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bikassaha&avatarId=29845"},"displayName":"Bikas Saha","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-07-24T05:55:25.268+0000","updated":"2013-07-24T05:55:25.268+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13718671","id":"13718671","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"body":"Updated patch fixing typos and making sure the jobtoken file written by the UnmanagedAMLauncher is readonly by the current user (in addition to the original behavior of being deleted on JVM exit).\n\nbq. Not quite sure why we have manually use the RM address to re-create the token....\n\nWe need to get the scheduler HOST:PORT to set the service name, from the ClientRMProxy we can not get it, can we? In the case of failover, if we use the same patterns/logic as HDFS failover, instead having concrete HOST:PORT services, we will have logical names that will be resolve appropriately (commented on similar topic in YARN-701 earlier today).\n\nbq. If the queue ACL's give identical access...\n\nWe can do that. However, as I see it, being able to schedule resources should be done by the AM process itself and only it. the ACLs are for who/what can manage the AM. (while we can not prevent an AM to to pass the token to another process and then have 2 processes doing scheduling for the same AM, this will definitely break the AMs. But we cannot stop this from happening if somebody is doing something stupid. The best we can do is to check it the same user).\n\nbq. Should we return AMRMToken in getApplicationReport() only if the currentAppAttempt is in a waiting to register state? ...\n\nUnless I'm missing something, these initial AM state transitions happen in the RM without interaction from the AM, we cannot guarantee the AM will query the RM on that particular state. Thus returning it when in RUNNING is safe. We could return it only once, but that would mean we have to keep track of that on the RMAppImpl. And what is there is a failure on the AM before it manages to 'save' it, and the AM needs to re-get it?\n\nbq. Similarly the AMLauncher could delete the token file after the app has entered running state based on getApplicationReport()?\n\nThis would mean the AMLauncher would have to have a callback from the forked AM process. And still the window of existence of the file is there, so you are still 'vulnerable' to that file being stolen. The current patch, as mentioned above makes this file user readable only.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"created":"2013-07-24T18:28:22.471+0000","updated":"2013-07-24T18:28:22.471+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13718713","id":"13718713","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bikassaha","name":"bikassaha","key":"bikassaha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=bikassaha&avatarId=29845","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bikassaha&avatarId=29845","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bikassaha&avatarId=29845","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bikassaha&avatarId=29845"},"displayName":"Bikas Saha","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. We need to get the scheduler HOST:PORT to set the service name, \nUnless I am missing something, the MR AM code did not have to change to make this translation. The token is transparently read from the env located file by UGI and populated into the currentUser's UGI. Then the proxy is opened to the RM using that token. If this is a correct understanding, then I dont follow why the code in YARNClient needs to make this translation?\n\nbq. Unless I'm missing something, these init\nThe AMRMToken is used by the AM attempt to register with the RM and on further calls to the RM. So once the unmanaged AM attempt has registered with the RM, there is no need for the RM to supply AMRMToken in getApplicationReport(). Correct? If yes, then doing this will limit the time for which the AMRMToken is externally available and may be better for security.\n\nIsnt there a race condition here? The token may be null right? Refer to Vinods comment above about currentAppAttempt being null.\nLets use FileUtil.chmod instead of setReadable etc because those dont work on Windows.\nIs the System.print still necessary?\n{code}\n+  public void launchAM(ApplicationAttemptId attemptId) \n+    throws IOException, YarnException {\n+    Credentials credentials = new Credentials();\n+    Token<AMRMTokenIdentifier> token = rmClient.getAMRMToken(attemptId.getApplicationId());\n+    credentials.addToken(token.getService(), token);\n+    File tokenFile = File.createTempFile(\"unmanageAMToken\",\"\");\n+    tokenFile.setReadable(true, true);\n+    tokenFile.setWritable(true, true);\n+    System.out.println(\"#####\" + tokenFile.getAbsolutePath());\n+    tokenFile.deleteOnExit();\n{code}\n\n+1 for renaming from AmRm to AMRM. Should the API be marked @Private?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bikassaha","name":"bikassaha","key":"bikassaha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=bikassaha&avatarId=29845","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bikassaha&avatarId=29845","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bikassaha&avatarId=29845","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bikassaha&avatarId=29845"},"displayName":"Bikas Saha","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-07-24T19:01:31.475+0000","updated":"2013-07-24T19:01:31.475+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13718900","id":"13718900","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"body":"Oops, sorry missed Vinod's comments before, uploading new patch that addresses them (and Bikas' latest comments as well).\n\nA couple things to note:\n\n* On adding a new ApplicationReport.newInstance() signature for this. This method is only used from testcases, I'd rather not proliferate on @Private methods when one is enough.\n\n* Changed the jobtoken file creation to do use FileUtils.chmod() and the file creation to be an append (the temp is created with zero bytes). Then we don't have a race condition.\n\n* Limiting the return window of the AMRM token to when the application is in ACCEPTED state. This is a stable state before the uAM registers with the scheduler, thus the uAM can save the tokens for failover logic if desired.\n\nI think the only outstanding comment is Bikas' \"Unless I am missing something, the MR AM code did not have to change to make this translation.... \"\n\nManaged AMs do something a bit incorrect, from {{RMAppAttemptImpl}}:\n\n{code}\n      // normally the client should set the service after acquiring the\n      // token, but this token is directly provided to the AMs\n      SecurityUtil.setTokenService(amRmToken, serviceAddr);\n{code}\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"created":"2013-07-24T21:59:11.824+0000","updated":"2013-07-24T21:59:11.824+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13719009","id":"13719009","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"{color:red}-1 overall{color}.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12594043/YARN-937.patch\n  against trunk revision .\n\n    {color:green}+1 @author{color}.  The patch does not contain any @author tags.\n\n    {color:green}+1 tests included{color}.  The patch appears to include 5 new or modified test files.\n\n    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.\n\n    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.\n\n    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.\n\n    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.\n\n    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.\n\n    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-unmanaged-am-launcher hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:\n\n                  org.apache.hadoop.mapreduce.security.TestMRCredentials\n                  org.apache.hadoop.mapreduce.v2.TestNonExistentJob\n                  org.apache.hadoop.mapreduce.security.TestBinaryTokenFile\n                  org.apache.hadoop.yarn.client.api.impl.TestNMClient\n\n    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-YARN-Build/1578//testReport/\nConsole output: https://builds.apache.org/job/PreCommit-YARN-Build/1578//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2013-07-24T23:28:10.813+0000","updated":"2013-07-24T23:28:10.813+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13719089","id":"13719089","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"body":"test failures seem unrelated, those failures happen in a clean trunk build as well.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"created":"2013-07-25T00:22:26.389+0000","updated":"2013-07-25T00:22:26.389+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13719343","id":"13719343","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bikassaha","name":"bikassaha","key":"bikassaha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=bikassaha&avatarId=29845","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bikassaha&avatarId=29845","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bikassaha&avatarId=29845","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bikassaha&avatarId=29845"},"displayName":"Bikas Saha","active":true,"timeZone":"America/Los_Angeles"},"body":"Token can be null at this point, right? \nAlso, any particular reason the token file is create in temp dir rather than current dir? I am guessing that current dir might be better since usually it will not even be visible to everyone.\n{code}\n+    Token<AMRMTokenIdentifier> token = rmClient.getAMRMToken(attemptId.getApplicationId());\n+    credentials.addToken(token.getService(), token);\n+    File tokenFile = File.createTempFile(\"unmanageAMToken\",\"\");\n{code}\n\nIt might be better to compare currentAttempt.getState() == RMAppAttemptState.LAUNCHED. That is the stable state of the attempt when the RM expects the AM to register. RMAppImpl will not return to ACCEPTED state for a retry (it remains in RUNNING state). The unmanagedAM is currently restricted to not allow retry but that may be relaxed and this code will be future proof if we compare attempt state instead of app state. For the single retry case, this is equivalent to the current check since app will be in ACCEPTED only after attempt is in LAUNCHED state.\n{code}\n+        if (currentAttempt != null && getState() == RMAppState.ACCEPTED) {\n+          try {\n{code}\n\nMinor comments\n\nFormatting discrepancies\n{code}\n+          FinalApplicationStatus.SUCCEEDED, null, \"N/A\", 0.63789f, \"NON-YARN\", \n+        null);\n{code}\n\nTest timeout? I thought our testpatch warned for new tests with no timeout.\n{code}\n+  @Test\n+  public void testAMMRTokens() throws Exception {\n{code}\n\n\"of the\" current user?\n{code}\n+   * Applications Masters, the token must be obtained via this method and set\n+   * in the {@link org.apache.hadoop.security.UserGroupInformation} current \n+   * user.\n{code}\n\nThe deletes \"-\" in this javadoc diff dont make sense??? Only net additions are expected right?\n{code}\n   /**\n-   * <p>\n-   * Get a report (ApplicationReport) of all Applications in the cluster.\n-   * </p>\n+   * Get the AMRM token of the application.\n+   * <p/>\n+   * The AMRM token is required for AM to RM scheduling operations. For \n.....\n+   * </li>\n+   * Else this method returns NULL.\n    * \n-   * <p>\n-   * If the user does not have <code>VIEW_APP</code> access for an application\n-   * then the corresponding report will be filtered as described in\n-   * {@link #getApplicationReport(ApplicationId)}.\n-   * </p>\n-   * \n-   * @return a list of reports of all running applications\n+   * @param appId {@link ApplicationId} of the application to get the AMRM token\n+   * @return the AMRM token if available\n{code}\n\nRest looks good except for the followin about which I am not sure. [~vinodkv] Can you please take a look? Pasting inline for convenience. Does the RM scheduler address thing need to happen here. I am particular about this because we have added an RMProxy layer specifically to avoid having clients look up RM address on their own. This will help with RM HA when the actual current address can change. This change makes YARNClient aware of RM address.\n{code}\n+  public org.apache.hadoop.security.token.Token<AMRMTokenIdentifier>\n+      getAMRMToken(ApplicationId appId) throws YarnException, IOException {\n+    org.apache.hadoop.security.token.Token<AMRMTokenIdentifier> amrmToken = null;\n+    ApplicationReport report = getApplicationReport(appId);\n+    Token token = report.getAMRMToken();\n+    if (token != null) {\n+      InetSocketAddress address = getConfig().getSocketAddr(\n+          YarnConfiguration.RM_SCHEDULER_ADDRESS,\n+          YarnConfiguration.DEFAULT_RM_SCHEDULER_ADDRESS,\n+          YarnConfiguration.DEFAULT_RM_SCHEDULER_PORT);\n+      amrmToken = ConverterUtils.convertFromYarn(token, address);\n+    }\n+    return amrmToken;\n+  }\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bikassaha","name":"bikassaha","key":"bikassaha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=bikassaha&avatarId=29845","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bikassaha&avatarId=29845","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bikassaha&avatarId=29845","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bikassaha&avatarId=29845"},"displayName":"Bikas Saha","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-07-25T07:43:48.029+0000","updated":"2013-07-25T07:43:48.029+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13719778","id":"13719778","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"body":"Thanks Bikas, addressed your comments:\n\nbq. Token can be null at this point, right? ....\n\nNow adding a precondition check that fails if the AM state is not in ACCEPTED state.\n\nbq. Also, any particular reason the token file is create in temp dir rather than current dir?...\n\nDone.\n\nbq. It might be better to compare currentAttempt.getState() == RMAppAttemptState.LAUNCHED...\n\nDone.\n\nStill I don't think unmanaged AM retries should be a concern of the RM. if the uAM supports that, it should be completely transparent to the RM even from state perspective. In other words, the RM should not be aware the uAM has failed and is retrying if the application is still valid.\n\nbq. Rest looks good except for the followin about which I am not sure.\n\nThis could be avoided if the ApplicationReport returns the scheduler port, which it does not today. Because of this, the clien must pick up from its configuration the scheduler port.\n\nRegarding RM HA, as I mentioned before, if we follow the same pattern used by HDFS HA, then all HOSTNAME:PORT entries in the configurations will become logical names that are resolved to the active HOSTNAME:PORT transparently by the RPC client retry policy for HA (if I remember correctly).\n\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"created":"2013-07-25T17:03:28.200+0000","updated":"2013-07-25T17:03:28.200+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13719884","id":"13719884","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"{color:red}-1 overall{color}.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12594203/YARN-937.patch\n  against trunk revision .\n\n    {color:green}+1 @author{color}.  The patch does not contain any @author tags.\n\n    {color:green}+1 tests included{color}.  The patch appears to include 5 new or modified test files.\n\n    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.\n\n    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.\n\n    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.\n\n    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.\n\n    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.\n\n    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-unmanaged-am-launcher hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:\n\n                  org.apache.hadoop.mapreduce.v2.TestNonExistentJob\n                  org.apache.hadoop.mapreduce.security.TestMRCredentials\n                  org.apache.hadoop.mapreduce.security.TestBinaryTokenFile\n                  org.apache.hadoop.yarn.client.api.impl.TestNMClient\n\n    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-YARN-Build/1585//testReport/\nConsole output: https://builds.apache.org/job/PreCommit-YARN-Build/1585//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2013-07-25T18:28:12.921+0000","updated":"2013-07-25T18:28:12.921+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13719890","id":"13719890","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"body":"test failures, as before, seem to be unrelated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"created":"2013-07-25T18:36:02.796+0000","updated":"2013-07-25T18:36:02.796+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13720483","id":"13720483","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"body":"[~bikassaha], [~vinodkv], anything else to be addressed? ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"created":"2013-07-26T07:14:04.011+0000","updated":"2013-07-26T07:14:04.011+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13721069","id":"13721069","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bikassaha","name":"bikassaha","key":"bikassaha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=bikassaha&avatarId=29845","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bikassaha&avatarId=29845","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bikassaha&avatarId=29845","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bikassaha&avatarId=29845"},"displayName":"Bikas Saha","active":true,"timeZone":"America/Los_Angeles"},"body":"Vinod and I looked at the token code and translation logic a fair bit and the URI solution for the name node is actually slightly misleading. The URI is just used as a dummy placeholder. Internally, ConfiguredProxyProvider does some magic to populate the token cache with the real ip address after looking up the token using the dummy URI entry.\nAnyways, that is a perhaps orthogonal to the code here. After looking at the code, I think we dont need to look up the addres from config in yarnclientimpl. When the RM creates the token is populates the service field and so applicationReport.getAMRMToken() returns a token that has all fields already populated. So we can simply call \n{code}amrmToken = ConverterUtils.convertFromYarn(token, null);{code}\nThe helper utility populates the service field of the token from the protoToken and then overrides it with the user supplied addr. Since the AMRMToken already has the service field populated we dont need to override anything. So we dont need to lookup any address from config in the YARNClient code. Later, for HA if we need to do some translation, then it should probably happen via the RMProxy layer. Does that work for you?\n\nRest of the patch looks good to me. Thanks for taking all the minor comments!\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bikassaha","name":"bikassaha","key":"bikassaha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=bikassaha&avatarId=29845","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bikassaha&avatarId=29845","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bikassaha&avatarId=29845","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bikassaha&avatarId=29845"},"displayName":"Bikas Saha","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-07-26T18:58:58.878+0000","updated":"2013-07-26T18:58:58.878+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13721074","id":"13721074","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinodkv","name":"vinodkv","key":"vinodkv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinod Kumar Vavilapalli","active":true,"timeZone":"America/Los_Angeles"},"body":"bq.  org.apache.hadoop.mapreduce.v2.TestNonExistentJob\nFiled MAPREDUCE-5424","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinodkv","name":"vinodkv","key":"vinodkv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinod Kumar Vavilapalli","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-07-26T19:01:12.793+0000","updated":"2013-07-26T19:01:12.793+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13721228","id":"13721228","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"body":"bq. Since the AMRMToken already has the service field populated we dont need to override anything. So we dont need to lookup any address from config in the YARNClient code. Later, for HA if we need to do some translation, then it should probably happen via the RMProxy layer. Does that work for you?\n\nWell, [~daryn] has been doing lot of work to ensure the service of a token is not set by the server but by the client. Doing what you suggest is going opposite to that.\n\nThis has to be done in the client (for example in the case of a multi-homing setup, it would not work otherwise as the RM does not know the hostname/IP visible to the user).\n\nAlso, looking at the conf is exactly what the {{ClientRMProxy}} is doing within the {{getRMAddress()}}.\n\nI think the current patch it is the right approach.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"created":"2013-07-26T21:25:44.212+0000","updated":"2013-07-26T21:25:44.212+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13721327","id":"13721327","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bikassaha","name":"bikassaha","key":"bikassaha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=bikassaha&avatarId=29845","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bikassaha&avatarId=29845","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bikassaha&avatarId=29845","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bikassaha&avatarId=29845"},"displayName":"Bikas Saha","active":true,"timeZone":"America/Los_Angeles"},"body":"We are on the same page that this translation should happen on the client side. We tried our best to remove static RM address translation code from all clients and NM code and moved the logic into a common RMProxy layer. Hence, I am trying to avoid putting static RM address lookup back into YarnClient code. At some point in the near future, we may be doing the address translation for tokens inside the RMProxy layer like HDFS already does. My suggestion was a compromise that allows things to work correctly as of now while at the same time not regressing on the effort we made to remove RM static address translation code. I hope this clarifies my concerns. Thoughts?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bikassaha","name":"bikassaha","key":"bikassaha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=bikassaha&avatarId=29845","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bikassaha&avatarId=29845","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bikassaha&avatarId=29845","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bikassaha&avatarId=29845"},"displayName":"Bikas Saha","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-07-26T22:47:34.455+0000","updated":"2013-07-26T22:47:34.455+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13721349","id":"13721349","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinodkv","name":"vinodkv","key":"vinodkv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinod Kumar Vavilapalli","active":true,"timeZone":"America/Los_Angeles"},"body":"Let's move, folks. Either\n - Keep it on the server side for now (which was always the case) and fix it separately to be in RMProxy later.\n - Or fix it now itself in RMProxy.\n - Or just leave it as is in the patch.\n\nWe all agree it needs to be on the client side, and that to in RMProxy. It's okay to compromise in any of the above ways to move this blocker ahead. Tx.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinodkv","name":"vinodkv","key":"vinodkv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinod Kumar Vavilapalli","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-07-26T23:07:24.488+0000","updated":"2013-07-26T23:07:24.488+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13721362","id":"13721362","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bikassaha","name":"bikassaha","key":"bikassaha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=bikassaha&avatarId=29845","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bikassaha&avatarId=29845","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bikassaha&avatarId=29845","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bikassaha&avatarId=29845"},"displayName":"Bikas Saha","active":true,"timeZone":"America/Los_Angeles"},"body":"Alejandro, \nWe can keep my suggestion and remove the translation code from YARNClient now. Things should continue to work if we simply remove that code since the token already has the address and there is no need to re-populate it. \n\nOr we can continue to keep the config address lookup code in YarnClientImpl. Later, when we improve RMProxy to do the right thing, we will have to remember to come back and remove this code.\n\nYour call.\n\n+1\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bikassaha","name":"bikassaha","key":"bikassaha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=bikassaha&avatarId=29845","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bikassaha&avatarId=29845","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bikassaha&avatarId=29845","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bikassaha&avatarId=29845"},"displayName":"Bikas Saha","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-07-26T23:18:05.029+0000","updated":"2013-07-26T23:18:05.029+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13721389","id":"13721389","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bikassaha","name":"bikassaha","key":"bikassaha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=bikassaha&avatarId=29845","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bikassaha&avatarId=29845","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bikassaha&avatarId=29845","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bikassaha&avatarId=29845"},"displayName":"Bikas Saha","active":true,"timeZone":"America/Los_Angeles"},"body":"Another option is to add a \"getRMCurrentAddress()\" to RMProxy and use that instead of statically reading from config. We keep the client side address logic while still maintaining the RMProxy as the source of truth.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bikassaha","name":"bikassaha","key":"bikassaha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=bikassaha&avatarId=29845","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bikassaha&avatarId=29845","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bikassaha&avatarId=29845","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bikassaha&avatarId=29845"},"displayName":"Bikas Saha","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-07-26T23:43:22.872+0000","updated":"2013-07-26T23:43:22.872+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13721403","id":"13721403","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"body":"\n{{getRMCurrentAddress()}}, we would have to pass the config and a more appropriate name would be {{getRMSchedulerAddress()}}.\n\nAlso, shouldn't be the {{ApplicationClientProtocol}} instance the one returning the address?\n\nAnd this seems like it will affect other things as well. I think we should take care of this in another JIRA.\n\nAre you OK on committing the current patch and following up with another JIRA (making it a blocker for the release after 2.1.0)?\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"created":"2013-07-26T23:59:07.571+0000","updated":"2013-07-26T23:59:07.571+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13721538","id":"13721538","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bikassaha","name":"bikassaha","key":"bikassaha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=bikassaha&avatarId=29845","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bikassaha&avatarId=29845","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bikassaha&avatarId=29845","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bikassaha&avatarId=29845"},"displayName":"Bikas Saha","active":true,"timeZone":"America/Los_Angeles"},"body":"Yes, RMProxy methods take conf and protocol class as arguments. \nI have already +1'd. We can make changes later on as appropriate.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bikassaha","name":"bikassaha","key":"bikassaha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=bikassaha&avatarId=29845","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bikassaha&avatarId=29845","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bikassaha&avatarId=29845","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bikassaha&avatarId=29845"},"displayName":"Bikas Saha","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-07-27T06:01:20.675+0000","updated":"2013-07-27T06:01:20.675+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12658526/comment/13721740","id":"13721740","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"body":"Committed to trunk, branch-2 and branch-2.1. Also, created YARN-982 to add method to get address from client proxy instead re-reading config.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tucu00","name":"tucu00","key":"tucu00","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alejandro Abdelnur","active":true,"timeZone":"Europe/Madrid"},"created":"2013-07-27T20:18:20.284+0000","updated":"2013-07-27T20:18:20.284+0000"}],"maxResults":46,"total":46,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/YARN-937/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1mf7z:"}}