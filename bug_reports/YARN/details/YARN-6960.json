{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13092835","self":"https://issues.apache.org/jira/rest/api/2/issue/13092835","key":"YARN-6960","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12313722","id":"12313722","key":"YARN","name":"Hadoop YARN","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12313722&avatarId=15135","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12313722&avatarId=15135","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12313722&avatarId=15135","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12313722&avatarId=15135"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2017-08-07T16:40:10.806+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Tue Aug 22 21:38:14 UTC 2017","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/YARN-6960/watchers","watchCount":3,"isWatching":false},"created":"2017-08-07T09:59:38.205+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"2.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12335742","id":"12335742","description":"2.8.1 release","name":"2.8.1","archived":false,"released":true,"releaseDate":"2017-06-08"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12339182","id":"12339182","name":"3.0.0-alpha4","archived":false,"released":true,"releaseDate":"2017-07-07"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Steven+Rand","name":"Steven Rand","key":"steven rand","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Steven Rand","active":true,"timeZone":"America/New_York"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2017-08-22T21:38:14.211+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12322906","id":"12322906","name":"fairscheduler","description":"Fair Scheduler"}],"timeoriginalestimate":null,"description":"YARN-2026 introduced the notion of only considering active queues when computing the fair share of each queue. The definition of an active queue is a queue with at least one runnable app:\n\n{code}\n  public boolean isActive() {\n    return getNumRunnableApps() > 0;\n  }\n{code}\n\nOne case that this definition of activity doesn't account for is that of long-running applications that scale dynamically. Such an application might request many containers when jobs are running, but scale down to very few containers, or only the AM container, when no jobs are running.\n\nEven when such an application has scaled down to a negligible amount of demand and utilization, the queue that it's in is still considered to be active, which defeats the purpose of YARN-2026. For example, consider this scenario:\n\n1. We have queues {{root.a}}, {{root.b}}, {{root.c}}, and {{root.d}}, all of which have the same weight.\n2. Queues {{root.a}} and {{root.b}} contain long-running applications that currently have only one container each (the AM).\n3. An application in queue {{root.c}} starts, and uses the whole cluster except for the small amount in use by {{root.a}} and {{root.b}}. An application in {{root.d}} starts, and has a high enough demand to be able to use half of the cluster. Because all four queues are active, the app in {{root.d}} can only preempt the app in {{root.c}} up to roughly 25% of the cluster's resources, while the app in {{root.c}} keeps about 75%.\n\nIdeally in this example, the app in {{root.d}} would be able to preempt the app in {{root.c}} up to 50% of the cluster, which would be possible if the idle apps in {{root.a}} and {{root.b}} didn't cause those queues to be considered active.\n\nOne way to address this is to update the definition of an active queue to be a queue containing 1 or more non-AM containers. This way if all apps in a queue scale down to only the AM, other queues' fair shares aren't affected.\n\nThe benefit of this approach is that it's quite simple. The downside is that it doesn't account for apps that are idle and using almost no resources, but still have at least one non-AM container.\n\nThere are a couple of other options that seem plausible to me, but they're much more complicated, and it seems to me that this proposal makes good progress while adding minimal extra complexity.\n\nDoes this seem like a reasonable change? I'm certainly open to better ideas as well.\n\nThanks,\nSteve","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12882776","id":"12882776","filename":"YARN-6960.001.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Steven+Rand","name":"Steven Rand","key":"steven rand","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Steven Rand","active":true,"timeZone":"America/New_York"},"created":"2017-08-20T12:50:57.613+0000","size":3439,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12882776/YARN-6960.001.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12882788","id":"12882788","filename":"YARN-6960.002.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Steven+Rand","name":"Steven Rand","key":"steven rand","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Steven Rand","active":true,"timeZone":"America/New_York"},"created":"2017-08-20T16:22:53.390+0000","size":4750,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12882788/YARN-6960.002.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"definition of active queue allows idle long-running apps to distort fair shares","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Steven+Rand","name":"Steven Rand","key":"steven rand","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Steven Rand","active":true,"timeZone":"America/New_York"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Steven+Rand","name":"Steven Rand","key":"steven rand","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Steven Rand","active":true,"timeZone":"America/New_York"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13092835/comment/16116837","id":"16116837","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=templedf","name":"templedf","key":"templedf","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=templedf&avatarId=24879","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=templedf&avatarId=24879","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=templedf&avatarId=24879","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=templedf&avatarId=24879"},"displayName":"Daniel Templeton","active":true,"timeZone":"America/Los_Angeles"},"body":"I'd be curious to understand the use case where you're running into this issue. My main concern which that fix is that an app that's entering an inactive queue will not be able to preempt its way into running. In your example, assume we kill the jobs in root.a and root.b, so that the apps in root.c and root.d share the cluster 50/50.  Now we submit a new app to root.a. Since all we have is an AM until the AM can run and request other containers, root.a's fair share will remain 0, and the app in root.a will never be able to preempt the apps in root.c or root.d.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=templedf","name":"templedf","key":"templedf","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=templedf&avatarId=24879","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=templedf&avatarId=24879","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=templedf&avatarId=24879","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=templedf&avatarId=24879"},"displayName":"Daniel Templeton","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-08-07T16:40:10.806+0000","updated":"2017-08-07T16:40:10.806+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13092835/comment/16118146","id":"16118146","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Steven+Rand","name":"Steven Rand","key":"steven rand","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Steven Rand","active":true,"timeZone":"America/New_York"},"body":"Yep, that concern is definitely valid. I wrote a patch that implements this definition of activity, and ran into exactly the problem you're describing while testing it. A new proposal then would be that a leaf queue is active if either of these conditions is met:\n\n* There is at least one non-AM container running in the queue\n* The cumulative demand of applications in the queue is greater than zero\n\nThat way, in the example you give above, the fair share of {{root.a}} becomes 1/3 as soon as it attempts to run another job.\n\nBacking up a step to the use case, we have interactive Spark applications the expectation for which is that results are returned to the user on the order of seconds, or at worst a few minutes (assuming that the query is reasonable). We don't want to have to create a new {{SparkContext}} and upload + localize JARs for each query, since that would inflate query execution time, so one of these applications will keep the same {{SparkContext}} around indefinitely, and will thus be a long-running YARN application. When one of these apps isn't running any queries/jobs, it'll scale down its executor count to make room for other YARN applications. So sometimes we wind up with multiple YARN applications with minimal resource usage and no demand, and we've observed that this causes unequal distribution of resources between other running applications, even though they're in equally weighted queues. The example in the description is kind of silly/simplistic, but it's essentially what we see happen.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Steven+Rand","name":"Steven Rand","key":"steven rand","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Steven Rand","active":true,"timeZone":"America/New_York"},"created":"2017-08-08T10:25:40.568+0000","updated":"2017-08-08T10:25:40.568+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13092835/comment/16134416","id":"16134416","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Steven+Rand","name":"Steven Rand","key":"steven rand","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Steven Rand","active":true,"timeZone":"America/New_York"},"body":"[~daniel@cloudera.com], I've uploaded a patch proposing a new definition of queue activity. It also needs tests, but I wanted to first see how the community feels about this change, and revise it as necessary based on feedback before writing tests for it.\n\nMy understanding of a queue's demand is that it's the cumulative current usage of all apps in the queue plus the cumulative requested additional resources for all apps in the queue. Therefore if no apps are requesting additional resources, the demand will be equal to the usage of the AMs. Then, as soon as any app attempts to do anything, it's demand will be greater than the AM usage, and the queue will become active.\n\nI've tested this patch and it seems to have the desired effect. Going back to the example in the description, {{root.c}} and {{root.d}} have equal fair shares despite the idle applications in {{root.a}} and {{root.b}}.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Steven+Rand","name":"Steven Rand","key":"steven rand","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Steven Rand","active":true,"timeZone":"America/New_York"},"created":"2017-08-20T12:58:35.640+0000","updated":"2017-08-20T12:58:35.640+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13092835/comment/16134490","id":"16134490","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Steven+Rand","name":"Steven Rand","key":"steven rand","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Steven Rand","active":true,"timeZone":"America/New_York"},"body":"Attaching a slightly modified patch that sets the fair share of an inactive queue equal to its current utilization. This doesn't change the behavior for queues with no running applications, since the fair share before the patch and with the patch are both equal to zero. It does protect AM containers in queues that are inactive by the new definition from being preempted though, since queues containing those AMs are no longer over their fair shares.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Steven+Rand","name":"Steven Rand","key":"steven rand","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Steven Rand","active":true,"timeZone":"America/New_York"},"created":"2017-08-20T16:25:02.225+0000","updated":"2017-08-20T16:25:02.225+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13092835/comment/16137152","id":"16137152","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=templedf","name":"templedf","key":"templedf","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=templedf&avatarId=24879","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=templedf&avatarId=24879","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=templedf&avatarId=24879","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=templedf&avatarId=24879"},"displayName":"Daniel Templeton","active":true,"timeZone":"America/Los_Angeles"},"body":"I'll take a look when I get a chance.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=templedf","name":"templedf","key":"templedf","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=templedf&avatarId=24879","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=templedf&avatarId=24879","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=templedf&avatarId=24879","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=templedf&avatarId=24879"},"displayName":"Daniel Templeton","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-08-22T18:24:46.018+0000","updated":"2017-08-22T18:24:46.018+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13092835/comment/16137446","id":"16137446","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Steven+Rand","name":"Steven Rand","key":"steven rand","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Steven Rand","active":true,"timeZone":"America/New_York"},"body":"Thanks, Daniel. Having thought about this some more, I don't think that either of the two patches I've posted is a good solution. In the first patch, inactive queues have fair shares of zero, and AM containers are subject to preemption even when running in high-priority queues. And in the second patch, applications running in idle queues define what their fair shares are irrespective of cluster-side settings, which doesn't make sense.\n\nI'll think about this some more and try to come up with a better idea, but I'd also be quite interested in hearing your opinion and those of others. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Steven+Rand","name":"Steven Rand","key":"steven rand","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Steven Rand","active":true,"timeZone":"America/New_York"},"created":"2017-08-22T21:38:14.211+0000","updated":"2017-08-22T21:38:14.211+0000"}],"maxResults":6,"total":6,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/YARN-6960/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i3ihf3:"}}