{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12712927","self":"https://issues.apache.org/jira/rest/api/2/issue/12712927","key":"YARN-2026","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12313722","id":"12313722","key":"YARN","name":"Hadoop YARN","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12313722&avatarId=15135","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12313722&avatarId=15135","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12313722&avatarId=15135","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12313722&avatarId=15135"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12327197","id":"12327197","description":"2.6.0 release","name":"2.6.0","archived":false,"released":true,"releaseDate":"2014-11-18"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2014-05-23T22:25:24.186+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Sat Aug 09 14:57:04 UTC 2014","customfield_12310420":"391243","customfield_12312320":null,"customfield_12310222":"10002_*:*_5_*:*_6671701377_*|*_1_*:*_5_*:*_1386543415_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2014-08-09T02:17:24.299+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/YARN-2026/watchers","watchCount":13,"isWatching":false},"created":"2014-05-07T19:53:19.557+0000","customfield_12310192":null,"customfield_12310191":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10343","value":"Reviewed","id":"10343"}],"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":["scheduler"],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"5.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"issuelinks":[{"id":"12392625","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12392625","type":{"id":"10001","name":"dependent","inward":"is depended upon by","outward":"depends upon","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"},"inwardIssue":{"id":"12729956","key":"YARN-2360","self":"https://issues.apache.org/jira/rest/api/2/issue/12729956","fields":{"summary":"Fair Scheduler: Display dynamic fair share for queues on the scheduler page","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/2","id":"2","description":"A new feature of the product, which has yet to be developed.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype","name":"New Feature","subtask":false,"avatarId":21141}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2014-12-01T03:10:28.557+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12319325","id":"12319325","name":"scheduler"}],"timeoriginalestimate":null,"description":"Problem1- While using hierarchical queues in fair scheduler,there are few scenarios where we have seen a leaf queue with least fair share can take majority of the cluster and starve a sibling parent queue which has greater weight/fair share and preemption doesn’t kick in to reclaim resources.\n\nThe root cause seems to be that fair share of a parent queue is distributed to all its children irrespective of whether its an active or an inactive(no apps running) queue. Preemption based on fair share kicks in only if the usage of a queue is less than 50% of its fair share and if it has demands greater than that. When there are many queues under a parent queue(with high fair share),the child queue’s fair share becomes really low. As a result when only few of these child queues have apps running,they reach their *tiny* fair share quickly and preemption doesn’t happen even if other leaf queues(non-sibling) are hogging the cluster.\n\nThis can be solved by dividing fair share of parent queue only to active child queues.\n\nHere is an example describing the problem and proposed solution:\nroot.lowPriorityQueue is a leaf queue with weight 2\nroot.HighPriorityQueue is parent queue with weight 8\nroot.HighPriorityQueue has 10 child leaf queues : root.HighPriorityQueue.childQ(1..10)\n\nAbove config,results in root.HighPriorityQueue having 80% fair share\nand each of its ten child queue would have 8% fair share. Preemption would happen only if the child queue is <4% (0.5*8=4). \n\nLets say at the moment no apps are running in any of the root.HighPriorityQueue.childQ(1..10) and few apps are running in root.lowPriorityQueue which is taking up 95% of the cluster.\nUp till this point,the behavior of FS is correct.\n\nNow,lets say root.HighPriorityQueue.childQ1 got a big job which requires 30% of the cluster. It would get only the available 5% in the cluster and preemption wouldn't kick in since its above 4%(half fair share).This is bad considering childQ1 is under a highPriority parent queue which has *80% fair share*.\n\nUntil root.lowPriorityQueue starts relinquishing containers,we would see the following allocation on the scheduler page:\n*root.lowPriorityQueue = 95%*\n*root.HighPriorityQueue.childQ1=5%*\n\nThis can be solved by distributing a parent’s fair share only to active queues.\n\nSo in the example above,since childQ1 is the only active queue\nunder root.HighPriorityQueue, it would get all its parent’s fair share i.e. 80%.\nThis would cause preemption to reclaim the 30% needed by childQ1 from root.lowPriorityQueue after fairSharePreemptionTimeout seconds.\n\nProblem2 - Also note that similar situation can happen between root.HighPriorityQueue.childQ1 and root.HighPriorityQueue.childQ2,if childQ2 hogs the cluster. childQ2 can take up 95% cluster and childQ1 would be stuck at 5%,until childQ2 starts relinquishing containers. We would like each of childQ1 and childQ2 to get half of root.HighPriorityQueue  fair share ie 40%,which would ensure childQ1 gets upto 40% resource if needed through preemption.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12327197","id":"12327197","description":"2.6.0 release","name":"2.6.0","archived":false,"released":true,"releaseDate":"2014-11-18"}],"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12646588","id":"12646588","filename":"YARN-2026-v1.txt","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-05-23T19:53:32.526+0000","size":16381,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12646588/YARN-2026-v1.txt"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12652693","id":"12652693","filename":"YARN-2026-v2.txt","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-06-26T21:28:01.187+0000","size":26508,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12652693/YARN-2026-v2.txt"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12657909","id":"12657909","filename":"YARN-2026-v3.txt","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-07-25T21:44:15.640+0000","size":39189,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12657909/YARN-2026-v3.txt"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12660479","id":"12660479","filename":"YARN-2026-v4.txt","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-08-07T21:45:32.632+0000","size":23026,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12660479/YARN-2026-v4.txt"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12660716","id":"12660716","filename":"YARN-2026-v5.txt","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-08-08T21:12:39.251+0000","size":21268,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12660716/YARN-2026-v5.txt"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"391463","customfield_12312823":null,"summary":"Fair scheduler: Consider only active queues for computing fairshare","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14007635","id":"14007635","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"body":"Attached patch addresses this issue by setting fair share of inactive parent and leaf queues(queues which have no running apps) to zero.\nPatch contains unit tests to illustrate the behavior. I manually tested in pseudo distributed cluster and verified that fair share are distributed to only active queues and found that preemption behavior/fairness is much better.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-05-23T20:05:53.761+0000","updated":"2014-05-23T20:05:53.761+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14007787","id":"14007787","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"{color:green}+1 overall{color}.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12646588/YARN-2026-v1.txt\n  against trunk revision .\n\n    {color:green}+1 @author{color}.  The patch does not contain any @author tags.\n\n    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.\n\n    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.\n\n    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.\n\n    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.\n\n    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.\n\n    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.\n\n    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.\n\n    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-YARN-Build/3809//testReport/\nConsole output: https://builds.apache.org/job/PreCommit-YARN-Build/3809//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2014-05-23T22:25:24.186+0000","updated":"2014-05-23T22:25:24.186+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14011523","id":"14011523","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sandyr","name":"sandyr","key":"sandyr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sandy Ryza","active":true,"timeZone":"America/Los_Angeles"},"body":"The nice thing about fair share currently is that it's interpretable as an amount of resources that, as long as you stay under, you won't get preempted.   Changing it to depend on the running apps in the cluster severely complicates this.  It used to be that each app and queue's fair share was min'd with its resource usage+demand, which is sort of a continuous analog to what you're suggesting, but we moved to the current definition when we added multi-resource scheduling.\n\nI'm wondering if the right way to solve this problem is to allow preemption to be triggered at higher levels in the queue hierarchy.  I.e. suppose we have the following situation:\n* root has two children - parentA and parentB\n* each of root's children has two children - childA1, childA2, childB1, and childB2\n* the parent queues' minShares are each set to half of the cluster resources\n* the child queue' minShares are each set to a quarter of the cluster resources \n* childA1 has a third of the cluster resources\n* childB1 and childB2 each have a third of the cluster resources\n\nEven though childA1 is above its fair/minShare, We would see that parentA is below its minShare, so we would preempt resources on its behalf.  Once we have YARN-596 in, these resources would end up coming from parentB, and end up going to childA1.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sandyr","name":"sandyr","key":"sandyr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sandy Ryza","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-05-28T20:17:06.350+0000","updated":"2014-05-28T20:17:06.350+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14011907","id":"14011907","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"body":"Hi [~sandyr],\nbq. We would see that parentA is below its minShare, so we would preempt resources on its behalf. \nminShare preemption at parent queue is not yet implemented ,FairScheduler.resToPreempt() is not recursive(YARN-596 doesn't address this).\nI had created YARN-1961 for this purpose,which I plan to work on.\nBut yes you are right,if YARN-1961 is in place, we can set minShare and minShareTimeout at parentA,which would\nreclaim resource from parentB.\n\nThis solves problem-1 in the description,but what about problem-2 ?\nWhen we have many leaf queues under a parent,say using NestedUserQueue rule.\nEg.\n - parentA has 100 user queues under it\n - fair share of each user queue is 1% of parentA(assuming weight=1)\n - Say user queue parentA.user1 is taking up 100% of cluster since its the only active queue.\n - parentA.user2 which was inactive till now ,submits a job and needs say 20%.\n - parentA.user2 would get only 1% through preemption and parentA.user1 would have 99%.\n  This seems unfair considering users have equal weight. Eventually,as user1 releases its containers,\n  it would go to user2,but until that happens user1 can hog the cluster.\n\nIn our cluster we have about 200 users(so 200 user queues),but only about 20%(avg) are active\nat a point in time. Fair share for each user becomes really low (1/200)*parent and can causes\nthis 'unfairness' mentioned in above example.\nThis can be solved by dividing fair share only to active queues.\n\nHow about this,can we have a new property say 'fairShareForActiveQueues' which turns on/off this feature,that way people\nwho need it can use it and other's can turn it off and would get the usual static fair share behavior.\nThoughts ?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-05-29T00:58:37.957+0000","updated":"2014-05-29T00:58:37.957+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14016050","id":"14016050","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"body":"Hi [~sandyr], did you have any comments ? \nbasically in the above scenario fair share policy tends to look like fifo,\nsince the users who submitted apps first, hog the cluster, although all users have same fair share.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-06-02T23:43:01.797+0000","updated":"2014-06-02T23:43:01.797+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14016155","id":"14016155","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sandyr","name":"sandyr","key":"sandyr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sandy Ryza","active":true,"timeZone":"America/Los_Angeles"},"body":"Hi Ashwin, have been busy with other stuff and probably will be for the next week or two.  I see your point.  I need to think about it a little more - the main aim of preemption is to provide enforce guarantees for purposes like maintaining SLAs.  While converging towards fairness more quickly in user queues could be a nice property, it satisfies a slightly different goal.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sandyr","name":"sandyr","key":"sandyr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sandy Ryza","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-06-03T02:34:43.460+0000","updated":"2014-06-03T02:34:43.460+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14016191","id":"14016191","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"body":"[~sandyr], \nSure Sandy I'll patiently wait for your response. \nAlso if you prefer ,please feel free to point me to some other committer who knows the FS code base well.\nWe are very interested to get this jira and YARN-1961 committed this month since its affecting our query cluster. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-06-03T03:48:11.995+0000","updated":"2014-06-03T03:48:11.995+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14036890","id":"14036890","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sandyr","name":"sandyr","key":"sandyr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sandy Ryza","active":true,"timeZone":"America/Los_Angeles"},"body":"[~ashwinshankar77], can we implement this as a separate SchedulingPolicy with a different computeShares implementation?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sandyr","name":"sandyr","key":"sandyr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sandy Ryza","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-06-19T03:01:58.927+0000","updated":"2014-06-19T03:01:58.927+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14037647","id":"14037647","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"body":"[~sandyr], Sure. Just to be on the same page,I'd like to iron out design details upfront to avoid rework and minimize boilerplate code.\nHere is my design proposal,feel free to change anything :\n1. FairShareBase,DominantResourceFairnessBase would contain all the common code. Their parent class would be the existing SchedulingPolicy class.\n2. FairShareBase would have two subclasses - FairSharePolicy(which is the existing one) and FairShareActiveQueuesPolicy.\nThe difference between the subclasses would be that they would be using different ComputeShare class.\n3. Similarly DominantResourceFairnessBase would have two subclasses - DominantResourceFairnessPolicy(existing one) and DominantResourceActiveQueuesPolicy.\n4. A new ComputeShareActiveQueues which computes fair share for active queues and used by FairShareActiveQueuesPolicy and DominantResourceActiveQueuesPolicy.\n\nThoughts ?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-06-19T18:36:45.002+0000","updated":"2014-06-19T18:36:45.002+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14038029","id":"14038029","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sandyr","name":"sandyr","key":"sandyr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sandy Ryza","active":true,"timeZone":"America/Los_Angeles"},"body":"I think it might be simpler to just:\n* Create FairShareActiveOnlyPolicy and DominantResourceFairnessActiveOnlyPolicy that extend FairSharePolicy and DominantResourceFairnessPolicy\n* In those, override SchedulingPolicy.computeShares to set the fair shares for inactive apps to 0 and just call ComputeFairShares.computeShares on the active schedulables.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sandyr","name":"sandyr","key":"sandyr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sandy Ryza","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-06-19T22:33:35.537+0000","updated":"2014-06-19T22:33:35.537+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14038047","id":"14038047","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"body":"[~sandyr], makes sense. I'll post a patch soon.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-06-19T22:50:37.539+0000","updated":"2014-06-19T22:50:37.539+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14045214","id":"14045214","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"body":"Attached patch implements two new scheduling policies - FairShareActiveOnlyPolicy(fair-active) and DominantResourceFairnessActiveOnlyPolicy(drf-active). Added unit tests and updated the doc. Manually tested both the policies and could see queues converge towards fairness quickly through preemption.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-06-26T21:28:01.205+0000","updated":"2014-06-26T21:28:01.205+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14045275","id":"14045275","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"{color:red}-1 overall{color}.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12652693/YARN-2026-v2.txt\n  against trunk revision .\n\n    {color:green}+1 @author{color}.  The patch does not contain any @author tags.\n\n    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.\n\n    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.\n\n    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.\n\n    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.\n\n    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.\n\n    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.\n\n    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:\n\n                  org.apache.hadoop.yarn.server.resourcemanager.webapp.TestRMWebServicesAppsModification\n                  org.apache.hadoop.yarn.server.resourcemanager.ahs.TestRMApplicationHistoryWriter\n                  org.apache.hadoop.yarn.server.resourcemanager.TestWorkPreservingRMRestart\n                  org.apache.hadoop.yarn.server.resourcemanager.applicationsmanager.TestAMRestart\n                  org.apache.hadoop.yarn.server.resourcemanager.TestSubmitApplicationWithRMHA\n\n    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-YARN-Build/4099//testReport/\nConsole output: https://builds.apache.org/job/PreCommit-YARN-Build/4099//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2014-06-26T22:28:56.239+0000","updated":"2014-06-26T22:28:56.239+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14045401","id":"14045401","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"body":"Test failures are unrelated to the patch.First two are known test failures - YARN-2158,YARN-2216.\nRemaining three are intermittent(they pass on my laptop) and don't have jiras. \nCreated jiras for those : YARN-2218, YARN-2219, YARN-2220\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-06-27T01:01:32.749+0000","updated":"2014-06-27T01:01:32.749+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14051954","id":"14051954","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"body":"[~sandyr], did you have any comments ?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-07-03T21:56:45.729+0000","updated":"2014-07-03T21:56:45.729+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14054629","id":"14054629","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sandyr","name":"sandyr","key":"sandyr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sandy Ryza","active":true,"timeZone":"America/Los_Angeles"},"body":"I had a conversation with [~kkambatl] about this, and he convinced me that we should turn this on in all cases - i.e. modify FairSharePolicy and DominantResourceFairnessPolicy instead of creating additional policies.  Sorry to vacillate on this.\n\nSome additional comments on the code:\n{code}\n+    return this.getNumRunnableApps() > 0;\n{code}\n\n{code}\n+          || (sched instanceof FSQueue && ((FSQueue) sched).isActive())) {\n{code}\nInstead of using instanceof, can we add an isActive method to Schedulable, and always return true for it in AppSchedulable?\n\n{code}\n+    out.println(\"       <queue name=\\\"childA1\\\" />\");\n+    out.println(\"       <queue name=\\\"childA2\\\" />\");\n+    out.println(\"       <queue name=\\\"childA3\\\" />\");\n+    out.println(\"       <queue name=\\\"childA4\\\" />\");\n+    out.println(\"       <queue name=\\\"childA5\\\" />\");\n+    out.println(\"       <queue name=\\\"childA6\\\" />\");\n+    out.println(\"       <queue name=\\\"childA7\\\" />\");\n+    out.println(\"       <queue name=\\\"childA8\\\" />\");\n{code}\nDo we need this many children?\n\n{code}\n+    out.println(\"</queue>\");\n+\n+    out.println(\"</allocations>\");\n{code}\nUnnecessary newline\n\n{code}\n+  public void testFairShareActiveOnly_ShareResetsToZeroWhenAppsComplete()\n{code}\nTake out underscore.\n\n{code}\n+  private void setupCluster(int mem, int vCores) throws IOException {\n{code}\nGive this method a name that's more descriptive of the kind of configuration it's setting up.\n\n{code}\n+  private void setupCluster(int nodeMem) throws IOException {\n{code}\nCan this call the setupCluster that takes two arguments?\n\nTo help with the fight against TestFairScheduler becoming a monstrosity, the tests should go into a new test file.  TestFairSchedulerPreemption is a good example of how to do this.\n\n{code}\n+    int nodeVcores = 10;\n{code}\nNit: \"nodeVCores\"","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sandyr","name":"sandyr","key":"sandyr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sandy Ryza","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-07-08T08:05:15.457+0000","updated":"2014-07-08T08:05:15.457+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14055142","id":"14055142","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"body":"Yes. Per discussions with [~sandyr] and [~rkanter], it might make sense to have two notions of fairshare - (1) a dynamic fairshare that considers only Active queues to be used by the scheduler for allocating and preempting resources and a (2) static fairshare that considers all queues and is displayed to the user. This way, the values shown in the webui set the expectations for users, but the scheduler is more aggressive about allocations. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"created":"2014-07-08T17:12:46.144+0000","updated":"2014-07-08T17:12:46.144+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14055146","id":"14055146","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"body":"Can we follow up on the first patch in this JIRA, and work on adding a static fairshare in another? ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"created":"2014-07-08T17:13:21.485+0000","updated":"2014-07-08T17:13:21.485+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14055326","id":"14055326","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"body":"[~sandyr],[~kasha]\nSure, we can incorporate fair share for active queues in FairSharePolicy and DominantResourceFairnessPolicy rather than creating new ones.\n\nHowever regarding having two notions of fairness, I have couple of concerns :\n1. Confusion/Debugging inconvenience : users looking at the UI would be confused since fair share preemption would be happening randomly(based on\ninternal dynamic fair share) rather than when usage is below \"half fair share\" shown on the UI. Also it might become a nightmare to debug when we have lots of preemption happening and we have two notions of fair share.\n2. Code becomes kind of complicated - we would call ComputeFairShares twice at each node in the queue hierarchy,one with active child queues and other with all child queues. OR if you are thinking of changing ComputeFairShares itself rather than calling it twice, it still would look kinda messy with\nsetting dynamic/static fair shares inside it based on active queues.\n\nI hope I'm making sense here. Thoughts ?\nIs there a strong reason why we can't just show the dynamic fair share on the UI,which is the reality ?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-07-08T19:05:06.822+0000","updated":"2014-07-08T19:05:06.822+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14055343","id":"14055343","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"body":"bq. Confusion/Debugging inconvenience : users looking at the UI would be confused since fair share preemption would be happening randomly\nDynamic fairshare is always greater than or equal to Static fairshare. If we preempt resources from queues over their dynamic fairshare, they are strictly over their static fairshare as well. This shouldn't be confusing.\n\nbq. Code becomes kind of complicated - we would call ComputeFairShares twice at each node in the queue hierarchy\nComputeFairShares should only compute the real/dynamic fairshare. Only the web ui should use the static fairshare. The static fairshare should change only when we add/remove queues or change the weights. \n\nbq. Is there a strong reason why we can't just show the dynamic fair share on the UI,which is the reality ?\nThe only reason is - the real fairshare keeps fluctuating and is hard to track. Looking at the real fairshare, the user can not predict a guaranteed finish time for his applications. \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"created":"2014-07-08T19:19:26.219+0000","updated":"2014-07-08T19:19:26.219+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14055861","id":"14055861","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"body":"[~kasha],\nI see your point. I had a quick chat with couple of ops and dev guys in my team and here is the concern they have with your proposal and they had a suggestion -\nthey want to be able to look at queues in the scheduler page, and be able to say that *queue X should kickoff preemption since its starving for fair share*.\nWe won't be able to infer that with your proposal since preemption is happening based on internal dynamic fair share, rather than what is displayed on the UI. \nQuick example describing the concern :\nqueue1 : static fair share=10% dynamic fair share=50% usage=20% demand=50%\nqueue2 : static fair share=10 % dynamic fair share=50% usage=80%\nBoth queues would appear ORANGE(above static fair share) on the scheduler page,which seems like preemption will not happen,but actually it would,\nsince queue1's usage is below half dynamic fair share. We couldn't have inferred this by looking at the UI. \n\n*Suggestion* : If we do not want to replace static fair share by dynamic on the UI,can we show both ?\nbasically there would be an extra line indicating dynamic fair share,apart from the existing dotted line\nwhich indicates static fair share. Also the usage would turn ORANGE only when we go beyond dynamic fair share \ninstead of static.\n\nThoughts ?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-07-09T05:29:10.139+0000","updated":"2014-07-09T05:29:10.139+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14056442","id":"14056442","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"body":"I see how showing both improves predictability, but I am slightly concerned about exposing another value adding more complexity to what the users see. \n\nLet us wait to hear from others. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"created":"2014-07-09T16:51:45.145+0000","updated":"2014-07-09T16:51:45.145+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14058009","id":"14058009","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sandyr","name":"sandyr","key":"sandyr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sandy Ryza","active":true,"timeZone":"America/Los_Angeles"},"body":"I think Ashwin makes a good point.\n\nI think displaying both is reasonable if we present it in a careful way.  For example, it might make sense to add tooltips that explain the difference.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sandyr","name":"sandyr","key":"sandyr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sandy Ryza","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-07-10T21:47:28.122+0000","updated":"2014-07-10T21:47:28.122+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14061296","id":"14061296","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks [~sandyr],[~kasha] - I'll create a separate jira to track the UI changes. I'll post a patch for this one soon.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-07-14T21:39:42.517+0000","updated":"2014-07-14T21:39:42.517+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14075011","id":"14075011","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"body":"Incorporated [~kasha] suggestion of having two notions of fairness.\nAlso incorporated [~sandyr] unit test comments.\nPlease let me know if you have any other comments.\n\nCreated YARN-2360 to deal with UI changes to display dynamic fair share on scheduler page.\nI've not added dynamic fair share in FSQueueMetrics . Could you please let me know how these metrics are used and if we want to add dynamic fair share to it ?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-07-25T22:02:58.948+0000","updated":"2014-07-25T22:02:58.948+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14075084","id":"14075084","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"{color:green}+1 overall{color}.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12657909/YARN-2026-v3.txt\n  against trunk revision .\n\n    {color:green}+1 @author{color}.  The patch does not contain any @author tags.\n\n    {color:green}+1 tests included{color}.  The patch appears to include 4 new or modified test files.\n\n    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.\n\n    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.\n\n    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.\n\n    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.\n\n    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.\n\n    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.\n\n    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-YARN-Build/4438//testReport/\nConsole output: https://builds.apache.org/job/PreCommit-YARN-Build/4438//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-25T22:44:35.051+0000","updated":"2014-07-25T22:44:35.051+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14077218","id":"14077218","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"body":"[~kasha],[~sandyr] , did you have any comments on the latest patch ?\nI also made UI changes and attached screenshot which shows static/dynamic fair share in YARN-2360.\nCan you please take a look at that also ?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-07-29T00:49:16.626+0000","updated":"2014-07-29T00:49:16.626+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14089907","id":"14089907","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"body":"Based on an offline discussion with [~kasha], the plan is to change the present fair share implementation\nby making it dynamic i.e. calculate fair share only for active queues. We would implement static fair share in YARN-2393 and Web UI changes in YARN-2360.\n\n[~kasha],\nIn my latest(v4) patch, you would find that I’ve abstracted out the fair share calculation\nto a method ComputeFairShares#getWeightToResourceRatio and I invoke this with \nactive schedulables. I’ve implemented it this way for two reasons :\n1. When we do static fair share in YARN-2360, we can just reuse that method by passing all\nschedulables.\n2. It didn’t seem clean to me to mix “active queue” logic inside fair share computation.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-08-07T21:51:53.123+0000","updated":"2014-08-07T21:51:53.123+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14090026","id":"14090026","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"{color:green}+1 overall{color}.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12660479/YARN-2026-v4.txt\n  against trunk revision .\n\n    {color:green}+1 @author{color}.  The patch does not contain any @author tags.\n\n    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.\n\n    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.\n\n    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.\n\n    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.\n\n    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.\n\n    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.\n\n    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.\n\n    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-YARN-Build/4553//testReport/\nConsole output: https://builds.apache.org/job/PreCommit-YARN-Build/4553//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2014-08-07T23:29:08.598+0000","updated":"2014-08-07T23:29:08.598+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14091037","id":"14091037","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"body":"Thanks for bearing with us on this JIRA, Ashwin. That patch looks mostly good. Minor comments:\n# This is a very subjective opinion. In ComputeFairShares, would it be cleaner/simpler to rename existing {{public computeShares}} to {{private computeSharesInternal}}, and add a new {{public computeShares}} that calls the internal version only with active queues? \n# Thanks for adding a bunch of tests in TestFairSchedulerFairShare. Post YARN-1474, \n## setup() need not call {{scheduler.setRMContext(resourceManager.getRMContext());}}\n## configureClusterWithQueuesAndOneNode need not call the following:\n{code}\n    scheduler.init(conf);\n    scheduler.start();\n    scheduler.reinitialize(conf, resourceManager.getRMContext());\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"created":"2014-08-08T17:54:06.476+0000","updated":"2014-08-08T17:54:24.246+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14091308","id":"14091308","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks [~kasha]. All comments addressed in v5 patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-08-08T21:14:05.347+0000","updated":"2014-08-08T21:14:05.347+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14091516","id":"14091516","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"{color:green}+1 overall{color}.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12660716/YARN-2026-v5.txt\n  against trunk revision .\n\n    {color:green}+1 @author{color}.  The patch does not contain any @author tags.\n\n    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.\n\n    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.\n\n    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.\n\n    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.\n\n    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.\n\n    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.\n\n    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.\n\n    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-YARN-Build/4564//testReport/\nConsole output: https://builds.apache.org/job/PreCommit-YARN-Build/4564//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2014-08-09T00:48:50.749+0000","updated":"2014-08-09T00:48:50.749+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14091577","id":"14091577","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"body":"+1. Checking this in..","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"created":"2014-08-09T01:56:50.487+0000","updated":"2014-08-09T01:56:50.487+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14091597","id":"14091597","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"body":"Thanks for the contribution and your patience through reviews, Ashwin.\n\nJust committed this to trunk and branch-2. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"created":"2014-08-09T02:17:24.333+0000","updated":"2014-08-09T02:17:24.333+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14091609","id":"14091609","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks a lot [~kasha], [~sandyr] for reviewing and committing my patch !","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-08-09T02:45:46.213+0000","updated":"2014-08-09T02:45:46.213+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14091610","id":"14091610","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"FAILURE: Integrated in Hadoop-trunk-Commit #6041 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6041/])\nYARN-2026. Fair scheduler: Consider only active queues for computing fairshare. (Ashwin Shankar via kasha) (kasha: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1616915)\n* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt\n* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/Schedulable.java\n* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/ComputeFairShares.java\n* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/TestFairScheduler.java\n* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/TestFairSchedulerFairShare.java\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2014-08-09T02:55:26.262+0000","updated":"2014-08-09T02:55:26.262+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14091726","id":"14091726","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"SUCCESS: Integrated in Hadoop-Yarn-trunk #639 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/639/])\nYARN-2026. Fair scheduler: Consider only active queues for computing fairshare. (Ashwin Shankar via kasha) (kasha: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1616915)\n* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt\n* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/Schedulable.java\n* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/ComputeFairShares.java\n* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/TestFairScheduler.java\n* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/TestFairSchedulerFairShare.java\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2014-08-09T11:30:14.317+0000","updated":"2014-08-09T11:30:14.317+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14091759","id":"14091759","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"SUCCESS: Integrated in Hadoop-Hdfs-trunk #1832 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1832/])\nYARN-2026. Fair scheduler: Consider only active queues for computing fairshare. (Ashwin Shankar via kasha) (kasha: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1616915)\n* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt\n* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/Schedulable.java\n* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/ComputeFairShares.java\n* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/TestFairScheduler.java\n* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/TestFairSchedulerFairShare.java\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2014-08-09T14:04:10.428+0000","updated":"2014-08-09T14:04:10.428+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12712927/comment/14091779","id":"14091779","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"SUCCESS: Integrated in Hadoop-Mapreduce-trunk #1858 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1858/])\nYARN-2026. Fair scheduler: Consider only active queues for computing fairshare. (Ashwin Shankar via kasha) (kasha: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1616915)\n* /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt\n* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/Schedulable.java\n* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/ComputeFairShares.java\n* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/TestFairScheduler.java\n* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/TestFairSchedulerFairShare.java\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2014-08-09T14:57:04.954+0000","updated":"2014-08-09T14:57:04.954+0000"}],"maxResults":39,"total":39,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/YARN-2026/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1vdun:"}}