{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12743641","self":"https://issues.apache.org/jira/rest/api/2/issue/12743641","key":"YARN-2592","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12313722","id":"12313722","key":"YARN","name":"Hadoop YARN","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12313722&avatarId=15135","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12313722&avatarId=15135","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12313722&avatarId=15135","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12313722&avatarId=15135"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/6","id":"6","description":"The problem isn't valid and it can't be fixed.","name":"Invalid"},"customfield_12312322":null,"customfield_12310220":"2014-09-24T14:52:20.418+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Fri Feb 27 15:09:39 UTC 2015","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_13539001012_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2015-02-27T15:09:56.651+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/YARN-2592/watchers","watchCount":9,"isWatching":false},"created":"2014-09-23T22:19:55.683+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12327748","id":"12327748","description":"2.5.1 release","name":"2.5.1","archived":false,"released":true,"releaseDate":"2014-09-05"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12335735","id":"12335735","description":"3.0.0-alpha1 release","name":"3.0.0-alpha1","archived":false,"released":true,"releaseDate":"2016-09-03"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2016-05-12T18:30:13.167+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[],"timeoriginalestimate":null,"description":"There are scenarios in which one over-capacity queue can cause preemption of another over-capacity queue. However, since killing containers may lose work, it doesn't make sense to me to kill containers to feed an already over-capacity queue.\n\nConsider the following:\n\n{code}\nroot has A,B,C, total capacity = 90\nA.guaranteed = 30, A.pending = 5, A.current = 40\nB.guaranteed = 30, B.pending = 0, B.current = 50\nC.guaranteed = 30, C.pending = 0, C.current = 0\n{code}\n\nIn this case, the queue preemption monitor will kill 5 resources from queue B so that queue A can pick them up, even though queue A is already over its capacity. This could lose any work that those containers in B had already done.\n\nIs there a use case for this behavior? It seems to me that if a queue is already over its capacity, it shouldn't destroy the work of other queues. If the over-capacity queue needs more resources, that seems to be a problem that should be solved by increasing its guarantee.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Preemption can kill containers to fulfil need of already over-capacity queue.","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12743641/comment/14146391","id":"14146391","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"+1 for at least allowing users to configure no preemption to satisfy over capacity queues.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2014-09-24T14:52:20.418+0000","updated":"2014-09-24T14:52:20.418+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12743641/comment/14146728","id":"14146728","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=curino","name":"curino","key":"curino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=curino&avatarId=21704","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=curino&avatarId=21704","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=curino&avatarId=21704","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=curino&avatarId=21704"},"displayName":"Carlo Curino","active":true,"timeZone":"Etc/UTC"},"body":"Preemption is trying to enforce the scheduler invariants. One of which is how over-capacity is distributed among queues (weighted fairly on rightful capacity).  \n\nI understand the desire to \"protect\" individual containers, and there will be many specific examples we can come up with in which killing a container is a pity as it loses some work (unless it handles the preemption message correctly and checkpoint its state), but long term I think enforcing the invariants is more important (fair and predictable for users). The opposite argument one can make is \"why is queue B allowed to retain more over capacity than A?\" if this happens systematically or for long period of time is unnerving for users as much as some lost work. \n\nAlso note that preemption already has few built-in mechanisms (deadzones, and grace-periods) designed to limit the impact on running tasks, are we sure that proper tuning of capacity/max-capcity/dead-zones/grace-periods is not enough to remove 99% of the problem? This would be only an issue for long-running tasks (exceeding 2x the grace periods), when run above the capacity + dead-zone of a queue but within max-capacity. And only trigger, for a queue that is more over capacity than any other peer queue, when the peer queue also has over-capacity needs exceeding free space, AND no under-capacity queue is demanding the same resources.... we should make sure this is significant enough of a scenario in practice to justify complexity of new configurables.\n\nI am definitely opposed to make this the default behavior, but I agree with Jason that we could add config parameters that allow to prevent preemption for over-capacity balancing. I feel though this is a slippery slope, which I think might lead to many loopholes (protecting AM being another one), that eventually will make configuring preemption and understanding what is happening for the users very hard. \n\nI think promoting proper handling of preemption on the app side (i.e., checkpoint your state, or redistributed your computation) is overall a healthier direction. \n\nMy 2 cents..\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=curino","name":"curino","key":"curino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=curino&avatarId=21704","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=curino&avatarId=21704","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=curino&avatarId=21704","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=curino&avatarId=21704"},"displayName":"Carlo Curino","active":true,"timeZone":"Etc/UTC"},"created":"2014-09-24T18:58:17.425+0000","updated":"2014-09-24T18:58:17.425+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12743641/comment/14146757","id":"14146757","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"IMHO users shouldn't be complaining if they are getting their guarantees (i.e.: the capacity of the queue).  Anything over capacity is \"bonus\" and they shouldn't rely on the scheduler going out of its way to give it more.  If they can't get their stuff done within their configured capacity then they need more capacity.\n\nbq. I think promoting proper handling of preemption on the app side (i.e., checkpoint your state, or redistributed your computation) is overall a healthier direction. \n\nI agree with the theory.  If preempting is \"cheap\" then we should leverage it more often to solve resource contention.  The problem in practice is that it's often outside the hands of ops and even the users.  YARN is becoming more and more general, including app frameworks that aren't part of the core Hadoop stack, and I think it will be commonplace for quite some time that at least some apps won't have checkpoint/migration support.  That makes preemption not-so-cheap, which means we don't want to use it unless really necessary.  Killing containers to give another queue more \"bonus\" resources is unnecessary and therefore preferable to avoid when preemption isn't cheap.  If those resources really are necessary then the queue should have more guaranteed capacity rather than expect the scheduler to kill other containers when it's beyond capacity.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2014-09-24T19:22:54.711+0000","updated":"2014-09-24T19:22:54.711+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12743641/comment/14146790","id":"14146790","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=curino","name":"curino","key":"curino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=curino&avatarId=21704","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=curino&avatarId=21704","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=curino&avatarId=21704","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=curino&avatarId=21704"},"displayName":"Carlo Curino","active":true,"timeZone":"Etc/UTC"},"body":"I hear you, and I agree we will need to cope with non-cheap preemption for a while, and even long term not everyone will be nicely preemptable (our work on YARN-1051 is for example designed to allow people to get very guaranteed and protected resources when needed). \n\nHowever, the compromise you propose means that the over-capacity \"zone\" is weirdly policed... on one side we expect the \"giving\" of containers to respect a notion of fairness (proportional to your rightful capacity), which is in turns not enforce by preemption. I find this inconsistent.\n\nMoreover, as I was saying, I think this will only spare containers in a rather narrow band (when imbalance happened among over capacity queues, and no under-capacity queues are requesting resources yet, and we are above the dead-zone, and tasks run longer than 2x the grace period). Is this a large enough use case to require special-casing?\nIf this is important in practice and an adoption show-stopper I am fine with compromises, but we should make sure this is the case. \n\nA way to do this is to enable preemption but run it in \"observe-only\" mode, where the policy logs what he would like to do without actually doing it... We can see whether on a real cluster we are often/ever in the scenario you are trying to address.\n\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=curino","name":"curino","key":"curino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=curino&avatarId=21704","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=curino&avatarId=21704","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=curino&avatarId=21704","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=curino&avatarId=21704"},"displayName":"Carlo Curino","active":true,"timeZone":"Etc/UTC"},"created":"2014-09-24T19:45:27.063+0000","updated":"2014-09-24T19:45:27.063+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12743641/comment/14340241","id":"14340241","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"body":"Closing this, since it is expected that as long as there are available resources, queue usage should grow evenly based on percentage of absolute capacity, even when preemption can happen to fill this growth as long as the absolute max capacity is not reached and the queues are growing evenly.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2015-02-27T15:09:39.215+0000","updated":"2015-02-27T15:09:39.215+0000"}],"maxResults":5,"total":5,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/YARN-2592/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i20ex3:"}}