{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13049967","self":"https://issues.apache.org/jira/rest/api/2/issue/13049967","key":"YARN-6320","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12313722","id":"12313722","key":"YARN","name":"Hadoop YARN","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12313722&avatarId=15135","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12313722&avatarId=15135","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12313722&avatarId=15135","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12313722&avatarId=15135"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2017-03-11T00:03:23.709+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Thu Jun 01 05:09:54 UTC 2017","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/YARN-6320/watchers","watchCount":7,"isWatching":false},"created":"2017-03-10T08:34:21.024+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2017-06-01T05:09:54.522+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[],"timeoriginalestimate":null,"description":"In FairScheduler today, we have 1)UpdateThread that update queue/app status, fairshare, starvation info, 2)nodeUpdate triggered by NM heartbeat that do the scheduling. When we handle one nodeUpdate, we will top-down from the root queue to the leafqueues and find the most needy application to allocate container according to queue's fairshare. Also we should sort children at each hierarchy level.\nMy thought is that we have a global sorted {{candidateAppList}} which keeps apps need to assign, and move the logic that \"find app that should allocate resource to\" from nodeUpdate to UpdateThread. In UpdateThread, we find candidate apps to assign and put them into {{candidateAppList}}. In nodeUpdate, we consume the list and allocate containers to apps. \nAs far as I see, we can have 3 benifits:\n1, nodeUpdate() is invoked much more frequently than update() in UpdateThread, especially in a large cluster. As a result we can reduce much unnecessary sorting.\n2, It will have better coordination with YARN-5829, we can indicate apps to assign more directly rather than let nodes find the best apps to assign.\n3, It seems to be easier to introduce scheduling restricts such as nodelabel, affinity/anti-affinity into FS, since we can pre-allocate containers asynchronously.\n[~kasha], [~templedf], [~yufeigu] like to hear your thoughts.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"FairScheduler:Identifying apps to assign in updateThread","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Tao+Jie","name":"Tao Jie","key":"tao jie","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tao Jie","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Tao+Jie","name":"Tao Jie","key":"tao jie","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tao Jie","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13049967/comment/15905903","id":"15905903","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=templedf","name":"templedf","key":"templedf","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=templedf&avatarId=24879","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=templedf&avatarId=24879","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=templedf&avatarId=24879","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=templedf&avatarId=24879"},"displayName":"Daniel Templeton","active":true,"timeZone":"America/Los_Angeles"},"body":"Excellent idea. That's something we've been kicking around for a while.  YARN-5139 proposes that model for the capacity scheduler.  Have a look at the specs there for a sense of scope.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=templedf","name":"templedf","key":"templedf","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=templedf&avatarId=24879","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=templedf&avatarId=24879","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=templedf&avatarId=24879","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=templedf&avatarId=24879"},"displayName":"Daniel Templeton","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-03-11T00:03:23.709+0000","updated":"2017-03-11T00:03:23.709+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13049967/comment/15923043","id":"15923043","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kasha","name":"kasha","key":"kasha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":true,"timeZone":"America/Los_Angeles"},"body":"As Daniel mentioned, we have been thinking about something like this for a while now.\n\nOne thing to watch out for is the list of apps maintained needs to be sorted appropriately. If this list is not sorted, we might end up giving the same app multiple containers probably ignoring a more deserving app. In a queue hierarchy with FAIR, DRF and FIFO policies, this global sorting of apps is hard. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kasha","name":"kasha","key":"kasha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-03-13T21:59:14.948+0000","updated":"2017-03-13T21:59:14.948+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13049967/comment/15923469","id":"15923469","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Tao+Jie","name":"Tao Jie","key":"tao jie","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tao Jie","active":true,"timeZone":"Etc/UTC"},"body":"[~kasha] thank you for sharing your comment.\nI try to do like that, we compute resource deficit for every app considering policies in updateThread. In the list of apps maintained, we sort apps by the amount of resource deficit.  And generally we try to assign container to apps with the most resource deficit in each nodeUpdate.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Tao+Jie","name":"Tao Jie","key":"tao jie","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tao Jie","active":true,"timeZone":"Etc/UTC"},"created":"2017-03-14T03:00:39.932+0000","updated":"2017-03-14T03:00:39.932+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13049967/comment/16032452","id":"16032452","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daemon","name":"daemon","key":"daemon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"YunFan Zhou","active":true,"timeZone":"Etc/UTC"},"body":"I think I have solved the problem and in my test environment the scheduler can assign over 5000 containers per second.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daemon","name":"daemon","key":"daemon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"YunFan Zhou","active":true,"timeZone":"Etc/UTC"},"created":"2017-06-01T05:09:54.522+0000","updated":"2017-06-01T05:09:54.522+0000"}],"maxResults":4,"total":4,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/YARN-6320/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i3b8bz:"}}