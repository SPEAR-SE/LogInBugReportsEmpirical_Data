{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13030678","self":"https://issues.apache.org/jira/rest/api/2/issue/13030678","key":"YARN-6029","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12313722","id":"12313722","key":"YARN","name":"Hadoop YARN","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12313722&avatarId=15135","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12313722&avatarId=15135","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12313722&avatarId=15135","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12313722&avatarId=15135"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12329059","id":"12329059","description":"2.8.0 release","name":"2.8.0","archived":false,"released":true,"releaseDate":"2017-03-22"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2016-12-27T19:00:28.154+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Wed Jan 04 00:23:54 UTC 2017","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_530548304_*|*_5_*:*_1_*:*_0_*|*_10002_*:*_1_*:*_120149407","customfield_12312321":null,"resolutiondate":"2017-01-04T00:23:53.676+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/YARN-6029/watchers","watchCount":11,"isWatching":false},"created":"2016-12-27T11:38:56.517+0000","customfield_12310192":null,"customfield_12310191":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10343","value":"Reviewed","id":"10343"}],"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.svg","name":"Critical","id":"2"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"4.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12329059","id":"12329059","description":"2.8.0 release","name":"2.8.0","archived":false,"released":true,"releaseDate":"2017-03-22"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Tao+Yang","name":"Tao Yang","key":"tao yang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tao Yang","active":true,"timeZone":"Asia/Shanghai"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2017-01-04T00:23:54.170+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12319324","id":"12319324","name":"capacityscheduler"}],"timeoriginalestimate":null,"description":"When ParentQueue#getQueueUserAclInfo is called (e.g. a client calls YarnClient#getQueueAclsInfo) just at the moment that LeafQueue#assignContainers is called and before notifying parent queue to release resource (should release a reserved container), then ResourceManager can deadlock. I found this problem on our testing environment for hadoop2.8.\n\nReproduce the deadlock in chronological order\n* 1. Thread A (ResourceManager Event Processor) calls synchronized LeafQueue#assignContainers (got LeafQueue instance lock of queue root.a)\n* 2. Thread B (IPC Server handler) calls synchronized ParentQueue#getQueueUserAclInfo (got ParentQueue instance lock of queue root), iterates over children queue acls and is blocked when calling synchronized LeafQueue#getQueueUserAclInfo (the LeafQueue instance lock of queue root.a is hold by Thread A)\n* 3. Thread A wants to inform the parent queue that a container is being completed and is blocked when invoking synchronized ParentQueue#internalReleaseResource method (the ParentQueue instance lock of queue root is hold by Thread B)\n\nI think the synchronized modifier of LeafQueue#getQueueUserAclInfo can be removed to solve this problem, since this method appears to not affect fields of LeafQueue instance.\n\nAttach patch with UT for review.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12329059","id":"12329059","description":"2.8.0 release","name":"2.8.0","archived":false,"released":true,"releaseDate":"2017-03-22"}],"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12844752","id":"12844752","filename":"deadlock.jstack","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Tao+Yang","name":"Tao Yang","key":"tao yang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tao Yang","active":true,"timeZone":"Asia/Shanghai"},"created":"2016-12-27T11:41:35.170+0000","size":191197,"mimeType":"application/octet-stream","content":"https://issues.apache.org/jira/secure/attachment/12844752/deadlock.jstack"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12844753","id":"12844753","filename":"YARN-6029.001.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Tao+Yang","name":"Tao Yang","key":"tao yang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tao Yang","active":true,"timeZone":"Asia/Shanghai"},"created":"2016-12-27T11:41:35.176+0000","size":9437,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12844753/YARN-6029.001.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12845011","id":"12845011","filename":"YARN-6029.002.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Tao+Yang","name":"Tao Yang","key":"tao yang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tao Yang","active":true,"timeZone":"Asia/Shanghai"},"created":"2016-12-29T03:25:24.535+0000","size":10103,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12845011/YARN-6029.002.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12845143","id":"12845143","filename":"YARN-6029-branch-2.8.001.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Tao+Yang","name":"Tao Yang","key":"tao yang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tao Yang","active":true,"timeZone":"Asia/Shanghai"},"created":"2016-12-30T02:53:13.563+0000","size":11526,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12845143/YARN-6029-branch-2.8.001.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"CapacityScheduler deadlock when ParentQueue#getQueueUserAclInfo is called by one thread and LeafQueue#assignContainers is releasing excessive reserved container by another thread","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Tao+Yang","name":"Tao Yang","key":"tao yang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tao Yang","active":true,"timeZone":"Asia/Shanghai"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Tao+Yang","name":"Tao Yang","key":"tao yang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tao Yang","active":true,"timeZone":"Asia/Shanghai"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13030678/comment/15781054","id":"15781054","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Naganarasimha","name":"Naganarasimha","key":"naganarasimha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naganarasimha G R","active":true,"timeZone":"Asia/Kolkata"},"body":"Thanks for working on the patch [~Tao Yang], Actually whats happening is inversion of the lock order, in one flow we are holding the lock of the Leaf and trying to get the lock of the parent (completedContainer flow) and in the other we are holding the lock of the Parent and then trying to get the lock of the Leaf (getQueueUserAclInfo flow) . Better solution to this would be to have as per the 2.9/trunk where in read locks are introduced such that *getQueueUserAclInfo* uses read lock and *completedContainer* uses write lock. so that we can avoid the this inversion. This would be a big change but i am not completely sure about your fix as you are only removing from the LeafQueue","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Naganarasimha","name":"Naganarasimha","key":"naganarasimha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naganarasimha G R","active":true,"timeZone":"Asia/Kolkata"},"created":"2016-12-27T19:00:28.154+0000","updated":"2016-12-27T19:00:28.154+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13030678/comment/15781407","id":"15781407","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djp","name":"djp","key":"djp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=djp&avatarId=16954","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=djp&avatarId=16954","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=djp&avatarId=16954","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=djp&avatarId=16954"},"displayName":"Junping Du","active":true,"timeZone":"Asia/Shanghai"},"body":"Thanks [~Tao Yang] for reporting the issue. I think this issue is valid given existing code flow and your jstack shows. For your current patch, I am a little concern that totally removing synchronized in getQueueUserAclInfo could cause other concurrent issues. \nHowever, [~Naganarasimha],  I don't quite understand your proposed solution here - if we do exactly the same change as trunk/branch-2.9, thread A (completedContainer flow) can hold write lock on queue of Root.A and pending on write lock on queue of Root, while thread B (getQueueUserAclInfo flow) may hold read lock on queue of Root and pending on read lock on queue of Root.A. Nothing becomes better. Do I miss anything here?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=djp","name":"djp","key":"djp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=djp&avatarId=16954","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=djp&avatarId=16954","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=djp&avatarId=16954","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=djp&avatarId=16954"},"displayName":"Junping Du","active":true,"timeZone":"Asia/Shanghai"},"created":"2016-12-27T22:25:40.383+0000","updated":"2016-12-27T22:25:40.383+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13030678/comment/15781593","id":"15781593","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks [~Tao Yang] for reporting this issue.\n\n[~Naganarasimha], branch-2/trunk solves the problem after YARN-5706. \n\nHowever to fix the issue, backporting of YARN-5706 needs huge effort. I don't think it is even a plan. \n\nWe can make some changes to LeafQueue:\n\n1. Remove synchronized lock of assignContainers\n2. Make changes:\n\n{code}\n# BEGINNING of LeafQueue#assignContainers\nsynchronized {\n   // do stuffs\n}\n\ncall-complete-containers (which locks parent) \n\nsynchronized {\n   // do rest stuffs\n}\n# END of LeafQueue#assignContainers\n{code}\n\nRemoving synchronized will cause data inconsistency issue when fetch, and there're some other possible methods with the same pattern need change as well. (Grab LeafQueue lock while holding ParentQueue lock and do not grab CapacityScheduler's lock). ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-12-28T00:11:03.625+0000","updated":"2016-12-28T00:11:03.625+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13030678/comment/15781644","id":"15781644","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Naganarasimha","name":"Naganarasimha","key":"naganarasimha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naganarasimha G R","active":true,"timeZone":"Asia/Kolkata"},"body":"Thanks [~djp] & [~wangda], for correcting me, missed to realize earlier that write lock needs to wait till all read read locks are finished.\nBut [~wangda] agree your solution solves the problem but current flow is {{CapacityScheduler.allocateContainersToNode \\-> LeafQueue.assignContainers (hold the lock on leaf) \\-> LeafQueue.handleExcessReservedContainer \\-> LeafQueue.completedContainer \\-> ParentQueue.completedContainer  (try to get the lock here)}}\nAgree that we need to fix in this flow but simpler temporary correction in *ParentQueue* (assuming that 2.9/ trunk avoids the issue) could be \n{code}\n@Override\n  public List<QueueUserACLInfo> getQueueUserAclInfo(\n      UserGroupInformation user) {\n    List<QueueUserACLInfo> userAcls = new ArrayList<QueueUserACLInfo>();\n    synchronized (this) {\n      // Add parent queue acls\n      userAcls.add(getUserAclInfo(user));\n    }\n    // Add children queue acls\n    for (CSQueue child : childQueues) {\n      userAcls.addAll(child.getQueueUserAclInfo(user));\n    }\n\n    return userAcls;\n  }\n{code}\n\nThoughts ?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Naganarasimha","name":"Naganarasimha","key":"naganarasimha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naganarasimha G R","active":true,"timeZone":"Asia/Kolkata"},"created":"2016-12-28T00:36:39.672+0000","updated":"2016-12-28T00:36:39.672+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13030678/comment/15781969","id":"15781969","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Tao+Yang","name":"Tao Yang","key":"tao yang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tao Yang","active":true,"timeZone":"Asia/Shanghai"},"body":"Thanks [~Naganarasimha] [~djp] [~leftnoteasy] for your suggestions. \n[~Naganarasimha] I think there maybe have a problem when iterating childQueues and at the same time ParentQueue#setChildQueues is called.\n[~leftnoteasy] I agree your solution solves the problem. But I still think synchronized modifier of LeafQueue#getQueueUserAclInfo is not required. In my opinion, This method doesn't affect the data structure of LeafQueue instance (check permissions of the given user, create new QueueUserACLInfo instance then return.), and it's only called by ParentQueue#getQueueUserAclInfo. By the way, take FairScheduler as a reference, FSLeafQueue#getQueueUserAclInfo is not synchronized.\nMaybe I haven't realized the potential problem, Please correct me if I am wrong.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Tao+Yang","name":"Tao Yang","key":"tao yang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tao Yang","active":true,"timeZone":"Asia/Shanghai"},"created":"2016-12-28T03:51:39.207+0000","updated":"2016-12-28T03:51:39.207+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13030678/comment/15782007","id":"15782007","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtCarrera9","name":"gtCarrera9","key":"gtcarrera9","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Li Lu","active":true,"timeZone":"America/Los_Angeles"},"body":"I'm not a scheduler expert, but \"not affecting any data structure\" sounds like a wrong reason to not to synchronize. [~wangda] will there be any potential data races according to Java memory model[1]? If not we can safely remove those synchronize keywords. Otherwise we have to stick to it no matter how appealing it appears to be. \n\n[1]:  http://www.cs.umd.edu/~pugh/java/memoryModel/","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtCarrera9","name":"gtCarrera9","key":"gtcarrera9","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Li Lu","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-12-28T04:19:36.081+0000","updated":"2016-12-28T04:19:36.081+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13030678/comment/15782067","id":"15782067","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Tao+Yang","name":"Tao Yang","key":"tao yang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tao Yang","active":true,"timeZone":"Asia/Shanghai"},"body":"Thanks [~gtCarrera9] for correcting me. There is something wrong in my words, sorry about that. I have already considered data races but not found, maybe missed somewhere.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Tao+Yang","name":"Tao Yang","key":"tao yang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tao Yang","active":true,"timeZone":"Asia/Shanghai"},"created":"2016-12-28T05:06:54.210+0000","updated":"2016-12-28T05:06:54.210+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13030678/comment/15782098","id":"15782098","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks all for comments,\n\n[~Tao Yang] / [~gtCarrera9].\n\nYes removing synchronized lock will not damage internal data structure. But it could cause inconsistency read data, for example, queue acl could be updated while it being updated. So I will not in favor of this solution.\n\n[~Naganarasimha],\n\nI still prefer to fix the issue in scheduling logic, there're some other similar logics like GetQueueInfo, etc. We need to identify all these issues and again it could cause inconsistency of read data when queue is being refreshed at the same time.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-12-28T05:25:10.736+0000","updated":"2016-12-28T05:25:10.736+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13030678/comment/15782102","id":"15782102","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtCarrera9","name":"gtCarrera9","key":"gtcarrera9","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Li Lu","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks [~wangda]! \nbq. But it could cause inconsistency read data, for example, queue acl could be updated while it being updated.\nMakes sense to me. Let's keep and fix the synchronized blocks then... ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtCarrera9","name":"gtCarrera9","key":"gtcarrera9","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Li Lu","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-12-28T05:28:01.099+0000","updated":"2016-12-28T05:28:01.099+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13030678/comment/15782324","id":"15782324","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Naganarasimha","name":"Naganarasimha","key":"naganarasimha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naganarasimha G R","active":true,"timeZone":"Asia/Kolkata"},"body":"Thanks [~wangda] &  [~Tao Yang]\nbq.  I think there maybe have a problem when iterating childQueues and at the same time ParentQueue#setChildQueues is called\nYes you are right this happens during CS initialize or reinitialize and during this time if {{getQueueUserAclInfo}} is called then some anamolies can happen as getQueueUserAclInfo is not holding lock on CS. \n\nbq. But it could cause inconsistency read data, for example, queue acl could be updated while it being updated. So I will not in favor of this solution.\nAgree but IIUC based on 2.8 code its less dependent on locking of child queue as acls are updated during reinitialization all the  queues at one shot, So to ensure acls are returned appropriately i presume we should be holding the lock on CS.getQueueUserAclInfo which is not happening currently in 2.8. \n\nbq. I still prefer to fix the issue in scheduling logic, there're some other similar logics like GetQueueInfo, etc. \nHmm so you are suggesting to apply 2.9/trunk's patch  or reorganize the flow in CS with synchronized blocks itself ? \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Naganarasimha","name":"Naganarasimha","key":"naganarasimha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naganarasimha G R","active":true,"timeZone":"Asia/Kolkata"},"created":"2016-12-28T07:42:53.938+0000","updated":"2016-12-28T07:42:53.938+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13030678/comment/15782578","id":"15782578","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Tao+Yang","name":"Tao Yang","key":"tao yang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tao Yang","active":true,"timeZone":"Asia/Shanghai"},"body":"Thanks [~wangda] & [~Naganarasimha] !\n{quote}\nAgree but IIUC based on 2.8 code its less dependent on locking of child queue as acls are updated during reinitialization all the queues at one shot\n{quote}\nWe also noticed that it doesn't hold the lock of LeafQueue instance when updating acls (CapacityScheduler#setQueueAcls) so that current logic doesn't guarantee the consistency of acls.\n{quote}\nSo to ensure acls are returned appropriately i presume we should be holding the lock on CS.getQueueUserAclInfo which is not happening currently in 2.8.\n{quote}\nI'm not clear about this. Is it worth to ensure consistency of acls through reducing the efficiency of scheduler? ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Tao+Yang","name":"Tao Yang","key":"tao yang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tao Yang","active":true,"timeZone":"Asia/Shanghai"},"created":"2016-12-28T10:21:32.967+0000","updated":"2016-12-28T10:21:32.967+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13030678/comment/15784099","id":"15784099","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. I'm not clear about this. Is it worth to ensure consistency of acls through reducing the efficiency of scheduler?\nIt gonna be inefficient, previously getQueueInfo hold scheduler lock and that causes problems.\n\nbq. We also noticed that it doesn't hold the lock of LeafQueue instance when updating acls (CapacityScheduler#setQueueAcls) so that current logic doesn't guarantee the consistency of acls.\nYeah you're correct... \nI think we could directly get queue ACL info from CS by invoking authorizer#checkPermissions, and we can have a separate lock to protect permission get/set. cc: [~jianhe]\nBut this is should be a separated patch, since we need to fix getQueueInfo as well.\n\nI think we can go ahead to fix locks inside LQ#assignContainers, thoughts?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-12-29T00:35:48.834+0000","updated":"2016-12-29T00:35:48.834+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13030678/comment/15784103","id":"15784103","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"body":"And in addition, I suggest to downgrade severity to critical to unblock 2.8, since this only happens rarely.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-12-29T00:36:40.326+0000","updated":"2016-12-29T00:36:40.326+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13030678/comment/15784388","id":"15784388","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Tao+Yang","name":"Tao Yang","key":"tao yang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tao Yang","active":true,"timeZone":"Asia/Shanghai"},"body":"Thanks [~wangda].\nUpdated priority to Critical and Attached new patch for review.\nThis patch needs add indentation in synchronized block. Diff code without changing space like this:\n{code}\n   @Override\n-  public synchronized CSAssignment assignContainers(Resource clusterResource,\n+  public CSAssignment assignContainers(Resource clusterResource,\n       FiCaSchedulerNode node, ResourceLimits currentResourceLimits,\n       SchedulingMode schedulingMode) {\n+    synchronized (this) {\n       updateCurrentResourceLimits(currentResourceLimits, clusterResource);\n\n       if (LOG.isDebugEnabled()) {\n@@ -906,6 +907,7 @@ public synchronized CSAssignment assignContainers(Resource clusterResource,\n       }\n\n       setPreemptionAllowed(currentResourceLimits, node.getPartition());\n+    }\n\n     // Check for reserved resources\n     RMContainer reservedContainer = node.getReservedContainer();\n@@ -923,6 +925,7 @@ public synchronized CSAssignment assignContainers(Resource clusterResource,\n       }\n     }\n\n+    synchronized (this) {\n       // if our queue cannot access this node, just return\n       if (schedulingMode == SchedulingMode.RESPECT_PARTITION_EXCLUSIVITY\n           && !accessibleToPartition(node.getPartition())) {\n@@ -1019,6 +1022,7 @@ public synchronized CSAssignment assignContainers(Resource clusterResource,\n\n       return CSAssignment.NULL_ASSIGNMENT;\n     }\n+  }\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Tao+Yang","name":"Tao Yang","key":"tao yang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tao Yang","active":true,"timeZone":"Asia/Shanghai"},"created":"2016-12-29T03:27:15.839+0000","updated":"2016-12-29T03:27:15.839+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13030678/comment/15785874","id":"15785874","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks [~Tao Yang], generally looks good, but we need to wrap application.assignContainers with leafqueue's synchronized lock as well. So how about changing first part of synchronized lock like this:\n\n{code}\n    FiCaSchedulerApp reservedApp = null;\n    CSAssignment reservedCSAssignment = null;\n\n    synchronized (this) {\n      updateCurrentResourceLimits(currentResourceLimits, clusterResource);\n\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\n            \"assignContainers: node=\" + node.getNodeName() + \" #applications=\"\n                + orderingPolicy.getNumSchedulableEntities());\n      }\n\n      setPreemptionAllowed(currentResourceLimits, node.getPartition());\n\n      // Check for reserved resources\n      RMContainer reservedContainer = node.getReservedContainer();\n      if (reservedContainer != null) {\n        reservedApp = getApplication(\n            reservedContainer.getApplicationAttemptId());\n        synchronized (reservedApp) {\n          reservedCSAssignment = reservedApp.assignContainers(\n              clusterResource, node, currentResourceLimits, schedulingMode,\n              reservedContainer);\n        }\n      }\n    }\n\n    // Handle possible completedContainer out of synchronized lock to avoid\n    // deadlock.\n    if (reservedCSAssignment != null) {\n      handleExcessReservedContainer(clusterResource, reservedCSAssignment, node,\n          reservedApp);\n      killToPreemptContainers(clusterResource, node, reservedCSAssignment);\n      return reservedCSAssignment;\n    }\n    \n   synchronized(this) { ... }\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-12-29T18:54:23.928+0000","updated":"2016-12-29T18:54:23.928+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13030678/comment/15785882","id":"15785882","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"body":"And the patch need to be renamed to \"YARN-6029-branch-2.8.(version).patch to make Jenkins to test it with correct branch name.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-12-29T18:58:43.347+0000","updated":"2016-12-29T18:58:43.347+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13030678/comment/15786636","id":"15786636","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Naganarasimha","name":"Naganarasimha","key":"naganarasimha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naganarasimha G R","active":true,"timeZone":"Asia/Kolkata"},"body":"Thanks [~wangda] and [~Tao Yang],\nYes agree with [~wangda] that this is where we need to fix as the cause for the deadlock is the reverse locking rather than ParentQueue calling the child queue (as it can be happen in other flows too). And solution looks much simpler than i initially thought !\n\nbq. And in addition, I suggest to downgrade severity to critical to unblock 2.8, since this only happens rarely.\nAs solution looks simple and can go in quickly, hope it can get in by 2.8 itself. Based on your previous comment, i presume you also plan the same.\n\nAlso checked other places where *getParent()* is called in the LeafQueue and its call hierarchy, seems like there is no other similar issues causing deadlock.\n\n\n\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Naganarasimha","name":"Naganarasimha","key":"naganarasimha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naganarasimha G R","active":true,"timeZone":"Asia/Kolkata"},"created":"2016-12-30T01:58:49.574+0000","updated":"2016-12-30T01:58:49.574+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13030678/comment/15786683","id":"15786683","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Tao+Yang","name":"Tao Yang","key":"tao yang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tao Yang","active":true,"timeZone":"Asia/Shanghai"},"body":"Thanks [~wangda] for correcting me. I missed to realize that application.assignContainers without the lock of LeafQueue instance can cause data inconsistency issue for apps (applicationAttemptMap). I'll adopt your suggestion and update the patch later.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Tao+Yang","name":"Tao Yang","key":"tao yang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tao Yang","active":true,"timeZone":"Asia/Shanghai"},"created":"2016-12-30T02:32:40.925+0000","updated":"2016-12-30T02:32:40.925+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13030678/comment/15786715","id":"15786715","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Tao+Yang","name":"Tao Yang","key":"tao yang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tao Yang","active":true,"timeZone":"Asia/Shanghai"},"body":"Patch updated.\nUpdate Assignee to [~leftnoteasy] since I have made little contribution for the final solution. Thanks.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Tao+Yang","name":"Tao Yang","key":"tao yang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tao Yang","active":true,"timeZone":"Asia/Shanghai"},"created":"2016-12-30T02:56:32.945+0000","updated":"2016-12-30T02:56:32.945+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13030678/comment/15791403","id":"15791403","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Naganarasimha","name":"Naganarasimha","key":"naganarasimha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naganarasimha G R","active":true,"timeZone":"Asia/Kolkata"},"body":"Thanks [~Tao Yang] and [~wangda],\nOverall i am ok with the patch but just one last clarification with above comments :\nbq.  but we need to wrap application.assignContainers with leafqueue's synchronized lock as well. \nbq.  missed to realize that application.assignContainers without the lock of LeafQueue instance can cause data inconsistency issue for apps applicationAttemptMap).\nI missed to understand that why we exactly require Leaf Queue's lock while calling {{application.assignContainers}} and neither i could understand data inconsistency issue for apps (applicationAttemptMap). Can you please elaborate ?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Naganarasimha","name":"Naganarasimha","key":"naganarasimha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naganarasimha G R","active":true,"timeZone":"Asia/Kolkata"},"created":"2017-01-01T17:29:57.581+0000","updated":"2017-01-01T17:29:57.581+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13030678/comment/15792507","id":"15792507","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunilg","name":"sunilg","key":"sunilg","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sunil Govindan","active":true,"timeZone":"Asia/Kolkata"},"body":"May be I did not understand correctly what [~naganarasimha_gr@apache.org] has mentioned. As far I understood, {{application.assignContainers}} is been invoked from one node heartbeat and is under writelock of LeafQueue. If another node heartbeat is happening at same time which may be operating on same leaf queue, we need to hold off such invocations, correct? So i think we need that lock while operating in apps allocation as well. Pls add if I missed something.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunilg","name":"sunilg","key":"sunilg","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sunil Govindan","active":true,"timeZone":"Asia/Kolkata"},"created":"2017-01-02T08:51:26.608+0000","updated":"2017-01-02T08:51:26.608+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13030678/comment/15793006","id":"15793006","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Naganarasimha","name":"Naganarasimha","key":"naganarasimha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naganarasimha G R","active":true,"timeZone":"Asia/Kolkata"},"body":"submitting the patch to trigger jenkins\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Naganarasimha","name":"Naganarasimha","key":"naganarasimha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naganarasimha G R","active":true,"timeZone":"Asia/Kolkata"},"created":"2017-01-02T15:01:24.694+0000","updated":"2017-01-02T15:01:24.694+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13030678/comment/15794011","id":"15794011","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Tao+Yang","name":"Tao Yang","key":"tao yang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tao Yang","active":true,"timeZone":"Asia/Shanghai"},"body":"Hi，[~Naganarasimha]\nI thought the application could be finished in another thread which is calling LQ#finishApplicationAttempt meanwhile. Perhaps app will still assign container after finished.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Tao+Yang","name":"Tao Yang","key":"tao yang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tao Yang","active":true,"timeZone":"Asia/Shanghai"},"created":"2017-01-03T03:25:43.329+0000","updated":"2017-01-03T03:25:43.329+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13030678/comment/15794204","id":"15794204","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"body":"Just reassigned back. [~Tao Yang], Typically no need to reassign if you're still actively working on it, and your help to report and analysis the problem itself is the key to the final solution. :) \n\nLatest patch looks good to me as well. \n\n[~naganarasimha_gr@apache.org], I understand there could be some potential improvements that we can make for lockings of queues / apps. I was trying to keep the original logic as much as possible while I was working on YARN-3140/3141/5706 just to make it safe. Unless it becomes performance bottleneck, I don't suggest to make big changes to these logics.\n\nNow Jenkins has some issues, will rekick Jenkins once it back to normal.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-01-03T05:31:11.289+0000","updated":"2017-01-03T05:31:11.289+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13030678/comment/15794865","id":"15794865","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Naganarasimha","name":"Naganarasimha","key":"naganarasimha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naganarasimha G R","active":true,"timeZone":"Asia/Kolkata"},"body":"Agree with you [~wangda], lesser the modification now is better and agree that trunk has optimizations for the same already.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Naganarasimha","name":"Naganarasimha","key":"naganarasimha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naganarasimha G R","active":true,"timeZone":"Asia/Kolkata"},"created":"2017-01-03T11:43:47.836+0000","updated":"2017-01-03T11:43:47.836+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13030678/comment/15796606","id":"15796606","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 14m 13s{color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  8m 45s{color} | {color:green} branch-2.8 passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 28s{color} | {color:green} branch-2.8 passed with JDK v1.8.0_111 {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 31s{color} | {color:green} branch-2.8 passed with JDK v1.7.0_121 {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 19s{color} | {color:green} branch-2.8 passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 38s{color} | {color:green} branch-2.8 passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 18s{color} | {color:green} branch-2.8 passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 11s{color} | {color:green} branch-2.8 passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 20s{color} | {color:green} branch-2.8 passed with JDK v1.8.0_111 {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 23s{color} | {color:green} branch-2.8 passed with JDK v1.7.0_121 {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 30s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 25s{color} | {color:green} the patch passed with JDK v1.8.0_111 {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 25s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 29s{color} | {color:green} the patch passed with JDK v1.7.0_121 {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 29s{color} | {color:green} the patch passed {color} |\n| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 16s{color} | {color:orange} hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager: The patch generated 4 new + 52 unchanged - 2 fixed = 56 total (was 54) {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 34s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 13s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 17s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 17s{color} | {color:green} the patch passed with JDK v1.8.0_111 {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 20s{color} | {color:green} the patch passed with JDK v1.7.0_121 {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 73m 57s{color} | {color:red} hadoop-yarn-server-resourcemanager in the patch failed with JDK v1.7.0_121. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 19s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black}180m 34s{color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| JDK v1.8.0_111 Failed junit tests | hadoop.yarn.server.resourcemanager.TestClientRMTokens |\n|   | hadoop.yarn.server.resourcemanager.TestAMAuthorization |\n| JDK v1.7.0_121 Failed junit tests | hadoop.yarn.server.resourcemanager.TestClientRMTokens |\n|   | hadoop.yarn.server.resourcemanager.TestAMAuthorization |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:5af2af1 |\n| JIRA Issue | YARN-6029 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12845143/YARN-6029-branch-2.8.001.patch |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux df9293be45a2 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | branch-2.8 / d61af93 |\n| Default Java | 1.7.0_121 |\n| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_111 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_121 |\n| findbugs | v3.0.0 |\n| checkstyle | https://builds.apache.org/job/PreCommit-YARN-Build/14530/artifact/patchprocess/diff-checkstyle-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |\n| unit | https://builds.apache.org/job/PreCommit-YARN-Build/14530/artifact/patchprocess/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager-jdk1.7.0_121.txt |\n| JDK v1.7.0_121  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/14530/testReport/ |\n| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager |\n| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/14530/console |\n| Powered by | Apache Yetus 0.5.0-SNAPSHOT   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2017-01-03T23:57:39.401+0000","updated":"2017-01-03T23:57:39.401+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13030678/comment/15796631","id":"15796631","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"body":"Committing ...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-01-04T00:07:09.740+0000","updated":"2017-01-04T00:07:09.740+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13030678/comment/15796673","id":"15796673","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"body":"Committed to branch-2.8, thanks [~Tao Yang] for working on the patch and thanks reviews from [~Naganarasimha]/[~gtCarrera9]/[~djp]!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-01-04T00:23:54.032+0000","updated":"2017-01-04T00:23:54.032+0000"}],"maxResults":28,"total":28,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/YARN-6029/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i3819b:"}}