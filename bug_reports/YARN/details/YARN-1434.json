{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12680607","self":"https://issues.apache.org/jira/rest/api/2/issue/12680607","key":"YARN-1434","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12313722","id":"12313722","key":"YARN","name":"Hadoop YARN","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12313722&avatarId=15135","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12313722&avatarId=15135","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12313722&avatarId=15135","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12313722&avatarId=15135"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2013-11-22T07:38:03.750+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Mon Nov 25 05:17:42 UTC 2013","customfield_12310420":"359872","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/YARN-1434/watchers","watchCount":4,"isWatching":false},"created":"2013-11-21T21:30:26.977+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.svg","name":"Minor","id":"4"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2013-11-25T05:17:42.785+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12319322","id":"12319322","name":"resourcemanager"}],"timeoriginalestimate":null,"description":"A job receiving containers and deciding not to use them and yielding them back in the next heartbeat could significantly affect the amount of resources given to other jobs. \n\nThis is because by yielding containers back the job appears always to be under-capacity (more than others) so it is picked to be the next to receive containers.\n\nObserved by Robert Grandl, to be independently confirmed.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"360171","customfield_12312823":null,"summary":"Single Job can affect fairshare of others","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=curino","name":"curino","key":"curino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=curino&avatarId=21704","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=curino&avatarId=21704","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=curino&avatarId=21704","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=curino&avatarId=21704"},"displayName":"Carlo Curino","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=curino","name":"curino","key":"curino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=curino&avatarId=21704","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=curino&avatarId=21704","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=curino&avatarId=21704","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=curino&avatarId=21704"},"displayName":"Carlo Curino","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12680607/comment/13829377","id":"13829377","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=curino","name":"curino","key":"curino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=curino&avatarId=21704","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=curino&avatarId=21704","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=curino&avatarId=21704","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=curino&avatarId=21704"},"displayName":"Carlo Curino","active":true,"timeZone":"Etc/UTC"},"body":"This has been observed while modifying the mapreduce AM behavior for other reasons. If the AM aggressively returns containers, it seems to be able to create the illusion to be under-capacity while wasting resources for everyone. A second job running in a separate queue (which was supposed to receive 50% of the cluster resources) was starved (only getting about 30% of the resources). This should be confirmed independently as the environment we observed this in had too much going on (i.e., this might be a false positive). \n\nIf confirmed, this might be quite bad, as a single malevolent AM could affect the cluster utilization possibly by a lot.\n  \n[~sandyr], [~acmurthy]  thoughts?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=curino","name":"curino","key":"curino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=curino&avatarId=21704","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=curino&avatarId=21704","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=curino&avatarId=21704","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=curino&avatarId=21704"},"displayName":"Carlo Curino","active":true,"timeZone":"Etc/UTC"},"created":"2013-11-21T21:36:29.469+0000","updated":"2013-11-21T21:36:29.469+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12680607/comment/13829761","id":"13829761","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sandyr","name":"sandyr","key":"sandyr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sandy Ryza","active":true,"timeZone":"America/Los_Angeles"},"body":"This seems possible.  To further spell this out:\nImagine an AM that, by fairness, receives a container on an NM heartbeat.  If it retrieves the container from the RM and gives it back before any other NM can heartbeat, it will also, by fairness, receive the next container that the RM allocates.  In this way, it could starve all the other applications on the cluster.  An AM that deserves more than a single container could do this with a slower heartbeat interval.\n\nFor the Fair Scheduler, YARN-1010, which decouples container allocations from node heartbeats, should solve this in most cases.  With it, it is nearly impossible for an AM to return containers before the RM allocates other free space to other applications.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sandyr","name":"sandyr","key":"sandyr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sandy Ryza","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-11-22T07:38:03.750+0000","updated":"2013-11-22T07:38:03.750+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12680607/comment/13830129","id":"13830129","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=srikanthkandula","name":"srikanthkandula","key":"srikanthkandula","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Srikanth Kandula","active":true,"timeZone":"Etc/UTC"},"body":"Sandy Ryza,\n\nI get it up to the \"receive the next container that the RM allocates\".  But, why would this starve other AMs? Shouldn't the RM offer some other containers to these other jobs if the cluster is idle? \n\nI can see how some containers may be just tossing back and forth between the RM and the picky job. But do not see why other jobs receive less share than they would because of the picky job.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=srikanthkandula","name":"srikanthkandula","key":"srikanthkandula","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Srikanth Kandula","active":true,"timeZone":"Etc/UTC"},"created":"2013-11-22T17:26:20.082+0000","updated":"2013-11-22T17:26:20.082+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12680607/comment/13830368","id":"13830368","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=curino","name":"curino","key":"curino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=curino&avatarId=21704","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=curino&avatarId=21704","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=curino&avatarId=21704","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=curino&avatarId=21704"},"displayName":"Carlo Curino","active":true,"timeZone":"Etc/UTC"},"body":"Srikanth, what we observed (again in a noise environment, so to be validated) is that the AM returning containers is maintaining is position as \"under capacity\" w.r.t. other machines, since it returned a bunch of containers, so it will be picked again as highest in priority. As a consequence it is wasting containers in a way that in our small setup was harming other jobs opportunity to get access to containers. \n\nIf Robert has few spare cycles, he will try to make a minimal patch to the MR AM that make it behave maliciously and try again on the CapacityScheduler, and maybe Sandy could try it with the fair scheduler? \n\nIf we confirm this is indeed a problem, and that is substantial for non-trivial scenarios (we noticed it for 2 jobs in 2 queues on 10 machines, not sure whether has impact at scale), we might need to tweak the schedulers logics to penalize users that yield back lots of containers (e.g., accounting for those containers against the user quota for n seconds or something).\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=curino","name":"curino","key":"curino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=curino&avatarId=21704","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=curino&avatarId=21704","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=curino&avatarId=21704","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=curino&avatarId=21704"},"displayName":"Carlo Curino","active":true,"timeZone":"Etc/UTC"},"created":"2013-11-22T22:29:58.214+0000","updated":"2013-11-22T22:29:58.214+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12680607/comment/13831180","id":"13831180","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sandyr","name":"sandyr","key":"sandyr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sandy Ryza","active":true,"timeZone":"America/Los_Angeles"},"body":"Srikanth, this would happen if the AM can return containers faster than the RM can assign them.  The AM would then, as Carlo said, continually be the one that \"deserves\" a container.\n\nIt should definitely be possible to make this problem show up under the right circumstances.  When I have time I will try to verify whether YARN-1010 fully eliminates the problem.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sandyr","name":"sandyr","key":"sandyr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sandy Ryza","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-11-25T05:17:42.785+0000","updated":"2013-11-25T05:17:42.785+0000"}],"maxResults":5,"total":5,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/YARN-1434/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1q1cv:"}}