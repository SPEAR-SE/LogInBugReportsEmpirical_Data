{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12736026","self":"https://issues.apache.org/jira/rest/api/2/issue/12736026","key":"YARN-2440","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12313722","id":"12313722","key":"YARN","name":"Hadoop YARN","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12313722&avatarId=15135","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12313722&avatarId=15135","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12313722&avatarId=15135","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12313722&avatarId=15135"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12327197","id":"12327197","description":"2.6.0 release","name":"2.6.0","archived":false,"released":true,"releaseDate":"2014-11-18"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2014-08-22T14:25:59.860+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Thu Sep 11 14:04:30 UTC 2014","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"10002_*:*_7_*:*_1698582225_*|*_1_*:*_7_*:*_3767668_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2014-09-11T02:25:04.190+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/YARN-2440/watchers","watchCount":17,"isWatching":false},"created":"2014-08-22T09:32:34.334+0000","customfield_12310192":null,"customfield_12310191":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10343","value":"Reviewed","id":"10343"}],"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"8.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2014-12-01T03:11:32.273+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[],"timeoriginalestimate":null,"description":"The current cgroups implementation does not limit YARN containers to the cores allocated in yarn-site.xml.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12327197","id":"12327197","description":"2.6.0 release","name":"2.6.0","archived":false,"released":true,"releaseDate":"2014-11-18"}],"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12663636","id":"12663636","filename":"apache-yarn-2440.0.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"created":"2014-08-22T09:39:05.164+0000","size":7206,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12663636/apache-yarn-2440.0.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12663704","id":"12663704","filename":"apache-yarn-2440.1.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"created":"2014-08-22T18:10:27.226+0000","size":8296,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12663704/apache-yarn-2440.1.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12664090","id":"12664090","filename":"apache-yarn-2440.2.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"created":"2014-08-25T04:34:13.540+0000","size":24545,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12664090/apache-yarn-2440.2.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12664596","id":"12664596","filename":"apache-yarn-2440.3.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"created":"2014-08-27T08:41:49.967+0000","size":22322,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12664596/apache-yarn-2440.3.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12664653","id":"12664653","filename":"apache-yarn-2440.4.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"created":"2014-08-27T14:51:51.348+0000","size":23480,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12664653/apache-yarn-2440.4.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12667461","id":"12667461","filename":"apache-yarn-2440.5.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"created":"2014-09-09T19:18:07.523+0000","size":21964,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12667461/apache-yarn-2440.5.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12667797","id":"12667797","filename":"apache-yarn-2440.6.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"created":"2014-09-10T18:11:21.168+0000","size":22365,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12667797/apache-yarn-2440.6.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12663635","id":"12663635","filename":"screenshot-current-implementation.jpg","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"created":"2014-08-22T09:36:23.025+0000","size":364765,"mimeType":"image/jpeg","content":"https://issues.apache.org/jira/secure/attachment/12663635/screenshot-current-implementation.jpg"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Cgroups should allow YARN containers to be limited to allocated cores","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14106667","id":"14106667","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"body":"Screenshot with the CPU usage in the current implementation. In my yarn-site.xml, I had set yarn.nodemanager.resource.cpu-vcores to 2. The python script is taking up as many cores as it can.\n\nThe quota for the yarn group was set to -1.\n\nvarun@ubuntu:/var/hadoop/hadoop-3.0.0-SNAPSHOT$ cat /cgroup/cpu/yarn/cpu.cfs_quota_us\n-1","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"created":"2014-08-22T09:36:23.029+0000","updated":"2014-08-22T09:36:23.029+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14106670","id":"14106670","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"body":"Attached patch with fix.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"created":"2014-08-22T09:39:05.167+0000","updated":"2014-08-22T09:39:05.167+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14106671","id":"14106671","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"body":"After applying the patch, the quota is set correctly.\n\n{noformat}\nvarun@ubuntu:/var/hadoop/hadoop-3.0.0-SNAPSHOT$ cat /cgroup/cpu/yarn/cpu.cfs_quota_us\n200000\n{noformat}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"created":"2014-08-22T09:40:39.574+0000","updated":"2014-08-22T09:40:39.574+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14106889","id":"14106889","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=nroberts","name":"nroberts","key":"nroberts","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nathan Roberts","active":true,"timeZone":"America/Chicago"},"body":"Thanks Varun for the patch. I'm wondering if it would be possible to make this configurable at the system level and per-app. For example, I'd like an application to be able to specify that it wants to run with strict container limits (to verify SLA's for example), but in general I don't want these limits in place (why not let a container use additional CPU if it's available?). ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=nroberts","name":"nroberts","key":"nroberts","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nathan Roberts","active":true,"timeZone":"America/Chicago"},"created":"2014-08-22T14:25:59.860+0000","updated":"2014-08-22T14:25:59.860+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14106893","id":"14106893","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"body":"[~nroberts] there's already a ticket for your request - YARN-810. That's next on my todo list. I've left a comment there asking if I can take it over.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"created":"2014-08-22T14:29:23.449+0000","updated":"2014-08-22T14:29:23.449+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14107005","id":"14107005","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ywskycn","name":"ywskycn","key":"ywskycn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Wei Yan","active":true,"timeZone":"America/Los_Angeles"},"body":"[~vvasudev], for general cases, we shouldn't strictly limit the cfs_quota_us. We always want to let co-located containers to share the cpu resource in a proportional way, not strictly follow the container_vcores/NM_vcores ratio. We have one runnable patch in YARN-810. I'll check with Sandy for the reviewing.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ywskycn","name":"ywskycn","key":"ywskycn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Wei Yan","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-08-22T15:53:27.658+0000","updated":"2014-08-22T15:53:27.658+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14107012","id":"14107012","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"body":"[~ywskycn] this patch doesn't limit containers to container_vcores/NM_vcores ratio. What it does do is limit the overall YARN usage to the yarn.nodemanager.resource.cpu-vcores. If you have 4 cores on a machine and set yarn.nodemanager.resource.cpu-vcores 2, we don't restrict the YARN containers to 2 cores. The containers can create threads and use up as many cores as they want, which defeats the purpose of setting yarn.nodemanager.resource.cpu-vcores.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"created":"2014-08-22T15:58:42.636+0000","updated":"2014-08-22T15:58:42.636+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14107025","id":"14107025","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ywskycn","name":"ywskycn","key":"ywskycn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Wei Yan","active":true,"timeZone":"America/Los_Angeles"},"body":"[~vvasudev], I misunderstood this jira. Will post comment later.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ywskycn","name":"ywskycn","key":"ywskycn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Wei Yan","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-08-22T16:12:00.101+0000","updated":"2014-08-22T16:12:00.101+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14107057","id":"14107057","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"I think cfs_quota_us has a maximum value of 1000000, so we may have an issue if vcores>10.\n\nI don't see how this takes into account the mapping of vcores to actual CPUs.   It's not safe to assume 1 vcore == 1 physical CPU, as some sites will map multiple vcores to a physical core to allow fractions of a physical CPU to be allocated or to account for varying CPU performance across a heterogeneous cluster.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2014-08-22T16:41:27.993+0000","updated":"2014-08-22T16:41:27.993+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14107068","id":"14107068","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"body":"[~jlowe] does it make sense to get the number of physical cores on the machine and derive the vcore to physical cpu ratio?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"created":"2014-08-22T16:48:37.043+0000","updated":"2014-08-22T16:48:37.043+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14107069","id":"14107069","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"body":"I'll update the patch to limit cfs_quota_us.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"created":"2014-08-22T16:49:13.181+0000","updated":"2014-08-22T16:49:13.181+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14107093","id":"14107093","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"bq. does it make sense to get the number of physical cores on the machine and derive the vcore to physical cpu ratio?\n\nOnly if the user can specify the multiplier between a vcore and a physical CPU.  Not all physical CPUs are created equal, and as I mentioned earlier, some sites will want to allow fractions of a physical CPU to be allocated.  Otherwise we're limiting the number of containers to the number of physical cores, and not all tasks require a full core.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2014-08-22T17:06:31.411+0000","updated":"2014-08-22T17:06:31.411+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14107101","id":"14107101","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"body":"There used to be a variable for that ratio but it was removed in YARN-782.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"created":"2014-08-22T17:10:45.931+0000","updated":"2014-08-22T17:10:45.931+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14107141","id":"14107141","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"Interesting.  [~sandyr] could you comment?  I'm wondering how we're going to support automatically setting a node's vcore value based on the node's physical characteristics without some kind of property to specify how to convert from physical core to vcore.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2014-08-22T17:32:33.835+0000","updated":"2014-08-22T17:32:33.835+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14107216","id":"14107216","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"body":"Uploaded a new patch to address the issue raised by [~jlowe] on the max value of cfs_quota_us. I'll upload further versions once there's clarity on vcore to physical core mapping.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"created":"2014-08-22T18:10:27.232+0000","updated":"2014-08-22T18:10:27.232+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14107248","id":"14107248","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sandyr","name":"sandyr","key":"sandyr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sandy Ryza","active":true,"timeZone":"America/Los_Angeles"},"body":"We removed it because it wasn't consistent with the vmem-pmem-ratio and was an unnecessary layer of indirection. If automatically configuring a node's vcore resource based on its physical characteristics is a goal, I wouldn't be opposed to adding something back in.\n\nFor the purposes of this JIRA, might it be simpler to express a config in terms of the % of the node's CPU power that YARN gets?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sandyr","name":"sandyr","key":"sandyr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sandy Ryza","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-08-22T18:29:12.699+0000","updated":"2014-08-22T18:29:12.699+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14107275","id":"14107275","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"body":"It might make things easier to go with [~sandyr] idea to add a configuration to add a config which expresses a % of node's CPU that is used by YARN. [~jlowe] would that address your concerns?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"created":"2014-08-22T18:41:46.295+0000","updated":"2014-08-22T18:41:46.295+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14107331","id":"14107331","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"Sure for this JIRA we can go with a percent of total CPU to limit YARN.  For something like YARN-160 we'd need the user to specify some kind of relationship between vcores and  physical cores.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2014-08-22T19:19:01.099+0000","updated":"2014-08-22T19:19:01.099+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14107429","id":"14107429","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"{color:green}+1 overall{color}.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12663704/apache-yarn-2440.1.patch\n  against trunk revision .\n\n    {color:green}+1 @author{color}.  The patch does not contain any @author tags.\n\n    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.\n\n    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.\n\n    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.\n\n    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.\n\n    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.\n\n    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.\n\n    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.\n\n    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-YARN-Build/4694//testReport/\nConsole output: https://builds.apache.org/job/PreCommit-YARN-Build/4694//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2014-08-22T20:22:58.926+0000","updated":"2014-08-22T20:22:58.926+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14108718","id":"14108718","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"body":"Update title to reflect what this patch is doing.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"created":"2014-08-25T04:30:33.825+0000","updated":"2014-08-25T04:30:33.825+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14108719","id":"14108719","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"body":"Uploaded a new patch. It adds two new parameters to the YARN configuration.\n1. yarn.nodemanager.containers-cpu-cores - can be set to the number of cores admins want YARN containers to use.\n2. yarn.nodemanager.containers-cpu-percentage - can be set a percentage of overall CPU that admins want YARN containers to use.\n\nBy  default, we use all cores.\n\nI've also updated the description of yarn.nodemanager.resource.cpu-vcores to what I think is a more accurate version.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"created":"2014-08-25T04:34:13.545+0000","updated":"2014-08-25T04:34:13.545+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14108751","id":"14108751","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"{color:green}+1 overall{color}.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12664090/apache-yarn-2440.2.patch\n  against trunk revision .\n\n    {color:green}+1 @author{color}.  The patch does not contain any @author tags.\n\n    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.\n\n    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.\n\n    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.\n\n    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.\n\n    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.\n\n    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.\n\n    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.\n\n    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-YARN-Build/4714//testReport/\nConsole output: https://builds.apache.org/job/PreCommit-YARN-Build/4714//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2014-08-25T05:15:49.656+0000","updated":"2014-08-25T05:15:49.656+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14109801","id":"14109801","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"Thanks for updating the patch, Varun.\n\nI don't see why we need both a containers-cpu-cores and containers-cpu-percentage, and I think it leads to confusion when both exist.  At first I did not realize that one overrode the other.  Instead I assumed that if you set cpu-cores to X and cpu-percentage to Y then you were requesting Y% of X cores.  Then there's the additional question of whether container usage is pinned to those cores, etc.  Only having cpu-percentage is a simpler model that still allows the user to specify cores indirectly (e.g.: 25% of an 8 core system is 2 cores).  Maybe I'm missing the use case where we really need containers-cpu-cores and the confusing (to me at least) override behavior between the two properties.\n\nOther comments on the patch:\n\n- I'm not thrilled about the name template \"containers-cpu-*\" since it could easily be misinterpreted as a per-container thing as well, but I'm currently at a loss for a better prefix.  Suggestions welcome.\n- Does getOverallLimits need to check for a quotaUS that's too low as well?\n- I think minimally we need to log a warning if we're going to ignore setting up cgroups to limit CPU usage across all containers if the user specified to do so.\n- Related to the previous comment, I think it would be nice if we didn't try to setup any limits if none were specified.  That way if there's some issue with correctly determining the number of cores on a particular system it can still work in the default, \"use everything\" scenario.\n- NodeManagerHardwareUtils.getContainerCores should be getContainersCores (the per-container vs. all-containers confusion again)\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2014-08-25T21:49:49.588+0000","updated":"2014-08-25T21:49:49.588+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14109856","id":"14109856","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sjlee0","name":"sjlee0","key":"sjlee0","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=sjlee0&avatarId=16831","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sjlee0&avatarId=16831","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sjlee0&avatarId=16831","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sjlee0&avatarId=16831"},"displayName":"Sangjin Lee","active":true,"timeZone":"America/Los_Angeles"},"body":"It might be good to use several fairly representative scenarios and see how we can satisfy them with clear configuration.\n\nOne scenario I can see pretty common is this (just for illustration):\n- 8-core system\n- want to use only 6 cores for containers (reserving 2 for NM and DN, etc.)\n- want to allocate 1/2 core per container by default\n\nIMO, the simplest config is\n{panel}\nyarn.nodemanager.resource.cpu-vcores = 60\nyarn.nodemanager.containers-cores-to-vcores = 10\neach container asks 5 vcores\n{panel}\n\nOr I could have\n{panel}\nyarn.nodemanager.resource.cpu-vcores = 60\nyarn.nodemanager.containers-cpu-cores = 6 (core-to-vcore ratio understood as the ratio of these two)\neach container asks 5 vcores\n{panel}\n\nI'm not sure how I can use containers-cpu-percentage to describe this scenario...\n\nDoes this help? Are there other types of use cases that we should review this with?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sjlee0","name":"sjlee0","key":"sjlee0","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=sjlee0&avatarId=16831","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sjlee0&avatarId=16831","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sjlee0&avatarId=16831","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sjlee0&avatarId=16831"},"displayName":"Sangjin Lee","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-08-25T22:18:58.633+0000","updated":"2014-08-25T22:18:58.633+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14110227","id":"14110227","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=beckham007","name":"beckham007","key":"beckham007","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Beckham007","active":true,"timeZone":"Asia/Shanghai"},"body":"Hi, all\nWhy not use the cpuset subsystem of cgroups? \nThe cpuset could make container to run on allocated cores, and reserving some cores for system.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=beckham007","name":"beckham007","key":"beckham007","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Beckham007","active":true,"timeZone":"Asia/Shanghai"},"created":"2014-08-26T03:36:58.969+0000","updated":"2014-08-26T03:36:58.969+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14110555","id":"14110555","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"body":"[~jlowe] the example provided by [~sjlee0] is the one I wanted to address when I added support for both percentage and absolute cores. Would it make more sense if I picked the lower value instead of one overriding the other. Something like -\n\n1. Evaluate cores allocated by yarn.nodemanager.containers-cpu-cores and yarn.nodemanager.containers-cpu-percentage.\n2. Pick the lower of the two values\n3. Log a warning/info message that both were specified and that we're picking the lower value.\n\n{quote}\nI'm not thrilled about the name template \"containers-cpu-*\" since it could easily be misinterpreted as a per-container thing as well, but I'm currently at a loss for a better prefix. Suggestions welcome.\n{quote}\n\nHow about yarn.nodemanager.all-containers-cpu-cores and yarn.nodemanager.all-containers-cpu-percentage?\n\n{quote}\nDoes getOverallLimits need to check for a quotaUS that's too low as well?\n{quote}\n\nThanks for catching this; I'll fix it in the next patch.\n\n{quote}\nI think minimally we need to log a warning if we're going to ignore setting up cgroups to limit CPU usage across all containers if the user specified to do so.\n{quote}\nI'll add in the logging message.\n\n{quote}\nRelated to the previous comment, I think it would be nice if we didn't try to setup any limits if none were specified. That way if there's some issue with correctly determining the number of cores on a particular system it can still work in the default, \"use everything\" scenario.\n{quote}\nWill do.\n\n{quote}\nNodeManagerHardwareUtils.getContainerCores should be getContainersCores (the per-container vs. all-containers confusion again)\n{quote}\nI'll rename the function.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"created":"2014-08-26T09:46:56.057+0000","updated":"2014-08-26T09:46:56.057+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14110556","id":"14110556","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"body":"[~beckham007] the current implementation of Cgroups uses cpu instead of cpuset, probably due to the flexibility offered(sharing the cores is handled by the kernel). Is there any particular benefit to cpuset?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"created":"2014-08-26T09:48:35.024+0000","updated":"2014-08-26T09:48:35.024+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14110566","id":"14110566","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=beckham007","name":"beckham007","key":"beckham007","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Beckham007","active":true,"timeZone":"Asia/Shanghai"},"body":"hi, [~vvasudev] “Cpusets provide a mechanism for assigning a set of CPUs and Memory\nNodes to a set of tasks.” https://www.kernel.org/doc/Documentation/cgroups/cpusets.txt\nFor a NM has 24 pcores, we can use cpuset subsystem to make hadoop-yarn use cpu core 0-21, and left the others((22,23) for system. And then using cpu.shares to share the pcore 0-21. What's more, we can assign a pcore(such as core 21) to run a long-running container, and other containers only share  pcore 0-20.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=beckham007","name":"beckham007","key":"beckham007","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Beckham007","active":true,"timeZone":"Asia/Shanghai"},"created":"2014-08-26T10:02:51.371+0000","updated":"2014-08-26T10:02:51.371+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14110567","id":"14110567","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=beckham007","name":"beckham007","key":"beckham007","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Beckham007","active":true,"timeZone":"Asia/Shanghai"},"body":"In addition, mesos uses cpuset for default. https://github.com/apache/mesos/blob/master/src/linux/cgroups.cpp","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=beckham007","name":"beckham007","key":"beckham007","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Beckham007","active":true,"timeZone":"Asia/Shanghai"},"created":"2014-08-26T10:05:02.529+0000","updated":"2014-08-26T10:05:02.529+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14111471","id":"14111471","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"For the case presented by [~sjlee0] the user has an 8 core system and wants to use at most 6 cores for YARN containers. That can be done by simply setting containers-cpu-percentage to 75.  I don't see why we need a separate containers-cpu-cores parameter here, and I think it causes more problems than it solves per my previous comment.  If we only want to support whole-core granularity then I can see containers-cpu-cores as a better choice, but otherwise containers-cpu-percentage is more flexible.\n\nAlso I don't see vcores being relevant for this JIRA.  The way vcores map to physical cores is node-dependent, but apps ask for vcores in a node-independent fashion.  IIUC this JIRA is focused on simply limiting the amount of CPU all YARN containers on the node can possibly use in aggregate.  Changing the vcore-to-core ratio on the node will change how many containers the node might run simultaneously, but it shouldn't impact how much of the physical CPU the user wants reserved for non-container processes.\n\nOn a related note, it's interesting to step back and see if this is really what most users will want in practice.  If the intent is to ensure the NM, DN, and other system processes get enough CPU time then I think a better approach is to put those system processes in a peer cgroup to the YARN containers cgroup and set their relative CPU shares accordingly.  Then YARN containers can continue to use any spare CPU if desired (i.e.: no CPU \"fragmentation\") but the system processes are guaranteed not to be starved out by the YARN containers.  Some users may want a hard limit and hence why this feature would be useful for them, but I suspect most users will not want to leave spare CPU lying around when containers need it.\n\nbq. How about yarn.nodemanager.all-containers-cpu-cores and yarn.nodemanager.all-containers-cpu-percentage?\n\nI'm indifferent on adding \"all\" as a prefix.  Something like yarn.nodemanager.containers-limit-cpu-percentage might be more clear that this is a hard limit and CPUs can go idle even if containers are demanding more from the machine than this limit.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2014-08-26T22:28:38.597+0000","updated":"2014-08-26T22:28:38.597+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14112043","id":"14112043","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"body":"Uploaded new patch which addresses [~jlowe] comments. \n1. Dropped yarn.nodemanager.containers-cpu-cores, only percentage can be specified.\n2. Renamed yarn.nodemanager.containers-cpu-percentage to yarn.nodemanger.containers-limit-cpu-percentage\n3. Added log message if we are unable to use Cgroups because the values  for period or quota are too low.\n4. Added check for minimum value of quota\n5. Don't set any period or quota settings if all CPUs are being used.\n6. Renamed getContainerCores to getContainersCores","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"created":"2014-08-27T08:41:49.973+0000","updated":"2014-08-27T08:41:49.973+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14112084","id":"14112084","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"{color:green}+1 overall{color}.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12664596/apache-yarn-2440.3.patch\n  against trunk revision .\n\n    {color:green}+1 @author{color}.  The patch does not contain any @author tags.\n\n    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.\n\n    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.\n\n    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.\n\n    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.\n\n    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.\n\n    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.\n\n    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.\n\n    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-YARN-Build/4739//testReport/\nConsole output: https://builds.apache.org/job/PreCommit-YARN-Build/4739//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2014-08-27T09:25:50.339+0000","updated":"2014-08-27T09:25:50.339+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14112302","id":"14112302","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"body":"Uploaded a new patch that missed use case where usage was reset to 100% after being lowered.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"created":"2014-08-27T14:51:51.355+0000","updated":"2014-08-27T14:51:51.355+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14112350","id":"14112350","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"{color:green}+1 overall{color}.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12664653/apache-yarn-2440.4.patch\n  against trunk revision .\n\n    {color:green}+1 @author{color}.  The patch does not contain any @author tags.\n\n    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.\n\n    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.\n\n    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.\n\n    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.\n\n    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.\n\n    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.\n\n    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.\n\n    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-YARN-Build/4742//testReport/\nConsole output: https://builds.apache.org/job/PreCommit-YARN-Build/4742//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2014-08-27T15:35:49.815+0000","updated":"2014-08-27T15:35:49.815+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14126140","id":"14126140","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinodkv","name":"vinodkv","key":"vinodkv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinod Kumar Vavilapalli","active":true,"timeZone":"America/Los_Angeles"},"body":"Just caught up with the discussion. I can get behind an absolute limit too. Specifically in the context of heterogeneous clusters where uniform % configurations can go really bad where the only resort will then be to do per-node configuration - not ideal. Would that be a valid use-case for putting in the absolute limit? [~jlowe]? Even if it were, I am okay punting that off to a separate JIRA.\n\nComments on the patch:\n - containers-limit-cpu-percentage -> {{yarn.nodemanager.resource.percentage-cpu-limit}} to be consistent? Similarly NM_CONTAINERS_CPU_PERC? I don't like the tag  'resource', it should have been 'resources' but it is what it is.\n - You still have refs to YarnConfiguration.NM_CONTAINERS_CPU_ABSOLUTE in the patch. Similarly the javadoc in NodeManagerHardwareUtils needs to be updated if we are not adding the absolute cpu config. It should no longer refer to \"number of cores that should be used for YARN containers\"\n - TestCgroupsLCEResourcesHandler: You can use mockito if you only want to override num-processors in TestResourceCalculatorPlugin. Similarly in TestNodeManagerHardwareUtils.\n - The tests may fail on a machine with > 4 cores? :)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinodkv","name":"vinodkv","key":"vinodkv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinod Kumar Vavilapalli","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-09-08T21:30:14.551+0000","updated":"2014-09-08T21:30:14.551+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14127086","id":"14127086","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"bq. Specifically in the context of heterogeneous clusters where uniform % configurations can go really bad where the only resort will then be to do per-node configuration - not ideal.\n\nYes, I could see the heterogenous cluster being a case where specifying absolute instead of relative may be desirable.  My biggest concern is that it's confusing when trying to combine the absolute and relative concepts -- it's not obvious if one overrides the other or if one is relative to the other.\n\nPart of my concern to keep this as simple as possible and the configuration burden to an absolute minimum is that I'm missing the real-world use case.  As I mentioned before, I think most users would rather not use the functionality proposed by this JIRA but instead setup peer cgroups for other systems and set their relative cgroup shares appropriately.  With this JIRA the CPUs could sit idle despite demand from YARN containers, while a peer cgroup setup allows CPU guarantees without idle CPUs if the demand is there.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2014-09-09T15:15:40.410+0000","updated":"2014-09-09T15:15:40.410+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14127420","id":"14127420","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"body":"Uploaded new patch to address Vinod's concerns.\n\nbq.    containers-limit-cpu-percentage -> yarn.nodemanager.resource.percentage-cpu-limit to be consistent? Similarly NM_CONTAINERS_CPU_PERC? I don't like the tag 'resource', it should have been 'resources' but it is what it is.\n\nI'm worried that calling it that will lead users to think it's a percentage of the vcores that they specify. In the patch I've changed it to yarn.nodemanager.resource.percentage-physical-cpu-limit but if you or Jason feel strongly about it, I can change it to yarn.nodemanager.resource.percentage-cpu-limit.\n\nbq.    You still have refs to YarnConfiguration.NM_CONTAINERS_CPU_ABSOLUTE in the patch. Similarly the javadoc in NodeManagerHardwareUtils needs to be updated if we are not adding the absolute cpu config. It should no longer refer to \"number of cores that should be used for YARN containers\"\n\nFixed.\n\nbq.    TestCgroupsLCEResourcesHandler: You can use mockito if you only want to override num-processors in TestResourceCalculatorPlugin. Similarly in TestNodeManagerHardwareUtils.\n\nSwitched to mockito.\n\nbq.    The tests may fail on a machine with > 4 cores?\nDon't think so. The tests mock the getNumProcessors() function so we should be fine.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"created":"2014-09-09T19:18:07.529+0000","updated":"2014-09-09T19:18:07.529+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14127467","id":"14127467","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"{color:green}+1 overall{color}.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12667461/apache-yarn-2440.5.patch\n  against trunk revision 2749fc6.\n\n    {color:green}+1 @author{color}.  The patch does not contain any @author tags.\n\n    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.\n\n    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.\n\n    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.\n\n    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.\n\n    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.\n\n    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.\n\n    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.\n\n    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-YARN-Build/4860//testReport/\nConsole output: https://builds.apache.org/job/PreCommit-YARN-Build/4860//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2014-09-09T19:55:40.682+0000","updated":"2014-09-09T19:55:40.682+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14128772","id":"14128772","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinodkv","name":"vinodkv","key":"vinodkv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinod Kumar Vavilapalli","active":true,"timeZone":"America/Los_Angeles"},"body":"This looks close. Some more comments\n{code}\n   <property>\n  +    <description>Percentage of CPU that can be allocated\n  +    for containers. This setting allows users to limit the number of\n  +    physical cores that YARN containers use. Currently functional only\n  +    on Linux using cgroups. The default is to use 100% of CPU.\n  +    </description>\n  +    <name>yarn.nodemanager.resource.percentage-physical-cpu-limit</name>\n  +    <value>100</value>\n  +  </property>\n{code}\n\"the number of physical cores\" part isn't really right. It actually is 75% across all cores, for e.g. We have this sort of \"number of physical cores\" description in multiple places, let's fix that? For instance, in NodeManagerHardwareUtils, yarn-default.xml etc.\n\nAlso,\n - NM_CONTAINERS_CPU_PERC -> NM_RESOURCE_PHYSICAL_CPU_LIMIT\n - Similarly rename DEFAULT_NM_CONTAINERS_CPU_PERC","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinodkv","name":"vinodkv","key":"vinodkv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinod Kumar Vavilapalli","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-09-10T17:30:33.939+0000","updated":"2014-09-10T17:30:33.939+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14128837","id":"14128837","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"body":"Uploaded new patch to address Vinod's comments.\n\n{quote}\n{noformat}\n   <property>\n  +    <description>Percentage of CPU that can be allocated\n  +    for containers. This setting allows users to limit the number of\n  +    physical cores that YARN containers use. Currently functional only\n  +    on Linux using cgroups. The default is to use 100% of CPU.\n  +    </description>\n  +    <name>yarn.nodemanager.resource.percentage-physical-cpu-limit</name>\n  +    <value>100</value>\n  +  </property>\n{noformat}\n\n\"the number of physical cores\" part isn't really right. It actually is 75% across all cores, for e.g. We have this sort of \"number of physical cores\" description in multiple places, let's fix that? For instance, in NodeManagerHardwareUtils, yarn-default.xml etc.\n\n{quote}\n\nFixed.\n\n{quote}\nAlso,\n    NM_CONTAINERS_CPU_PERC -> NM_RESOURCE_PHYSICAL_CPU_LIMIT\n    Similarly rename DEFAULT_NM_CONTAINERS_CPU_PERC\n{quote}\n\nDone, I'd prefer to have percentage as part of the name. I've changed it to NM_RESOURCE_PERCENTAGE_PHYSICAL_CPU_LIMIT and DEFAULT_NM_RESOURCE_PERCENTAGE_PHYSICAL_CPU_LIMIT.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vvasudev","name":"vvasudev","key":"vvasudev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Varun Vasudev","active":true,"timeZone":"Asia/Kolkata"},"created":"2014-09-10T18:11:21.181+0000","updated":"2014-09-10T18:11:21.181+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14128842","id":"14128842","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"{color:red}-1 overall{color}.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12667797/apache-yarn-2440.6.patch\n  against trunk revision b67d5ba.\n\n    {color:red}-1 patch{color}.  Trunk compilation may be broken.\n\nConsole output: https://builds.apache.org/job/PreCommit-YARN-Build/4871//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2014-09-10T18:12:27.832+0000","updated":"2014-09-10T18:12:27.832+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14128843","id":"14128843","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinodkv","name":"vinodkv","key":"vinodkv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinod Kumar Vavilapalli","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. As I mentioned before, I think most users would rather not use the functionality proposed by this JIRA but instead setup peer cgroups for other systems and set their relative cgroup shares appropriately. With this JIRA the CPUs could sit idle despite demand from YARN containers, while a peer cgroup setup allows CPU guarantees without idle CPUs if the demand is there.\n[~jlowe], agree with the general philosophy. Though we are not yet there in practice - datanodes, region servers don't yet live in cgroups in many sites. Looking back at this JIRA, I see a good use for this. Having the overall YARN limit will help ensure that apps' containers don't thrash cpu once we start enabling cgroups support.\n\nThe other dimension to this is determinism w.r.t performance. Limiting to allocated cores overall (as well as per container later) helps orgs run workloads and reason about them deterministically. One of the examples is benchmarking apps, but deterministic execution is a desired option beyond benchmarks too.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinodkv","name":"vinodkv","key":"vinodkv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinod Kumar Vavilapalli","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-09-10T18:12:41.431+0000","updated":"2014-09-10T18:16:41.457+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14129020","id":"14129020","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinodkv","name":"vinodkv","key":"vinodkv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinod Kumar Vavilapalli","active":true,"timeZone":"America/Los_Angeles"},"body":"The build machine ran into an issue which [~gkesavan] helped fixing on my offline request. Rekicked the build manually..","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinodkv","name":"vinodkv","key":"vinodkv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinod Kumar Vavilapalli","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-09-10T20:08:31.404+0000","updated":"2014-09-10T20:08:31.404+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14129058","id":"14129058","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"{color:green}+1 overall{color}.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12667797/apache-yarn-2440.6.patch\n  against trunk revision cbfe263.\n\n    {color:green}+1 @author{color}.  The patch does not contain any @author tags.\n\n    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.\n\n    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.\n\n    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.\n\n    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.\n\n    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.\n\n    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.\n\n    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.\n\n    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-YARN-Build/4875//testReport/\nConsole output: https://builds.apache.org/job/PreCommit-YARN-Build/4875//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2014-09-10T20:41:23.364+0000","updated":"2014-09-10T20:41:23.364+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14129533","id":"14129533","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinodkv","name":"vinodkv","key":"vinodkv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinod Kumar Vavilapalli","active":true,"timeZone":"America/Los_Angeles"},"body":"This looks good, +1. Checking this in..","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinodkv","name":"vinodkv","key":"vinodkv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinod Kumar Vavilapalli","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-09-11T02:20:50.837+0000","updated":"2014-09-11T02:20:50.837+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14129536","id":"14129536","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinodkv","name":"vinodkv","key":"vinodkv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinod Kumar Vavilapalli","active":true,"timeZone":"America/Los_Angeles"},"body":"Committed this to trunk and branch-2. Thanks Varun!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinodkv","name":"vinodkv","key":"vinodkv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinod Kumar Vavilapalli","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-09-11T02:25:04.216+0000","updated":"2014-09-11T02:25:04.216+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14129906","id":"14129906","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"SUCCESS: Integrated in Hadoop-Yarn-trunk #677 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/677/])\nYARN-2440. Enabled Nodemanagers to limit the aggregate cpu usage across all containers to a preconfigured limit. Contributed by Varun Vasudev. (vinodkv: rev 4be95175cdb58ff12a27ab443d609d3b46da7bfa)\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/util/TestNodeManagerHardwareUtils.java\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/YarnConfiguration.java\n* hadoop-yarn-project/CHANGES.txt\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/util/TestCgroupsLCEResourcesHandler.java\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/resources/yarn-default.xml\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/NodeManagerHardwareUtils.java\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2014-09-11T11:28:42.146+0000","updated":"2014-09-11T11:28:42.146+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14130028","id":"14130028","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"FAILURE: Integrated in Hadoop-Mapreduce-trunk #1893 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1893/])\nYARN-2440. Enabled Nodemanagers to limit the aggregate cpu usage across all containers to a preconfigured limit. Contributed by Varun Vasudev. (vinodkv: rev 4be95175cdb58ff12a27ab443d609d3b46da7bfa)\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/resources/yarn-default.xml\n* hadoop-yarn-project/CHANGES.txt\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/util/TestCgroupsLCEResourcesHandler.java\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/NodeManagerHardwareUtils.java\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/util/TestNodeManagerHardwareUtils.java\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/YarnConfiguration.java\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2014-09-11T13:45:01.098+0000","updated":"2014-09-11T13:45:01.098+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12736026/comment/14130051","id":"14130051","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"SUCCESS: Integrated in Hadoop-Hdfs-trunk #1868 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1868/])\nYARN-2440. Enabled Nodemanagers to limit the aggregate cpu usage across all containers to a preconfigured limit. Contributed by Varun Vasudev. (vinodkv: rev 4be95175cdb58ff12a27ab443d609d3b46da7bfa)\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/YarnConfiguration.java\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/NodeManagerHardwareUtils.java\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/util/TestNodeManagerHardwareUtils.java\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/resources/yarn-default.xml\n* hadoop-yarn-project/CHANGES.txt\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/util/TestCgroupsLCEResourcesHandler.java\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2014-09-11T14:04:30.427+0000","updated":"2014-09-11T14:04:30.427+0000"}],"maxResults":49,"total":49,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/YARN-2440/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1z83b:"}}