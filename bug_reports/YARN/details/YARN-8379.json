{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13163023","self":"https://issues.apache.org/jira/rest/api/2/issue/13163023","key":"YARN-8379","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12313722","id":"12313722","key":"YARN","name":"Hadoop YARN","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12313722&avatarId=15135","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12313722&avatarId=15135","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12313722&avatarId=15135","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12313722&avatarId=15135"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12342758","id":"12342758","name":"3.2.0","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12342982","id":"12342982","description":"3.1.1 Release","name":"3.1.1","archived":false,"released":true,"releaseDate":"2018-08-07"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2018-05-31T15:29:27.985+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Wed Jul 04 12:17:06 UTC 2018","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_532043531_*|*_3_*:*_1_*:*_82066273_*|*_5_*:*_1_*:*_0_*|*_10002_*:*_1_*:*_1872863387","customfield_12312321":null,"resolutiondate":"2018-06-28T17:25:16.366+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/YARN-8379/watchers","watchCount":10,"isWatching":false},"created":"2018-05-30T22:35:43.216+0000","customfield_12310192":null,"customfield_12310191":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10343","value":"Reviewed","id":"10343"}],"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"7.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2018-07-04T12:33:47.707+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[],"timeoriginalestimate":null,"description":"Existing capacity scheduler only supports preemption for an underutilized queue to reach its guaranteed resource. In addition to that, there’s an requirement to get better balance between queues when all of them reach guaranteed resource but with different fairness resource.\r\n\r\nAn example is, 3 queues with capacity, queue_a = 30%, queue_b = 30%, queue_c = 40%. At time T. queue_a is using 30%, queue_b is using 70%. Existing scheduler preemption won't happen. But this is unfair to queue_a since queue_a has the same guaranteed resources.\r\n\r\nBefore YARN-5864, capacity scheduler do additional preemption to balance queues. We changed the logic since it could preempt too many containers between queues when all queues are satisfied.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12927719","id":"12927719","filename":"ericpayne.confs.tgz","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2018-06-13T21:25:13.341+0000","size":4994,"mimeType":"application/x-gzip","content":"https://issues.apache.org/jira/secure/attachment/12927719/ericpayne.confs.tgz"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12926669","id":"12926669","filename":"YARN-8379.001.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-06-06T02:23:14.010+0000","size":24683,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12926669/YARN-8379.001.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12926819","id":"12926819","filename":"YARN-8379.002.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-06-07T01:10:41.662+0000","size":24701,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12926819/YARN-8379.002.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12927626","id":"12927626","filename":"YARN-8379.003.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-06-13T09:58:43.477+0000","size":40794,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12927626/YARN-8379.003.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12929105","id":"12929105","filename":"YARN-8379.004.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-06-25T23:13:51.434+0000","size":51249,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12929105/YARN-8379.004.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12929299","id":"12929299","filename":"YARN-8379.005.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-06-27T00:48:27.345+0000","size":56900,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12929299/YARN-8379.005.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12929459","id":"12929459","filename":"YARN-8379.006.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-06-27T19:09:16.930+0000","size":61605,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12929459/YARN-8379.006.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Improve balancing resources in already satisfied queues by using Capacity Scheduler preemption","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16495817","id":"16495817","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"body":"To make better resource balances between queues, we propose to make the additional preemption between queues configurable. And admin can set a different kill-before-wait timeout to control the pace of the additional queue balance preemption.\r\n\r\ncc: [~jlowe], [~eepayne], [~sunilg] for suggestions.\r\n\r\nThanks [~clayb]/[~Zian Chen] for offline suggestions and feedbacks.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-05-30T22:37:20.274+0000","updated":"2018-05-30T22:37:20.274+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16496715","id":"16496715","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"body":"Thanks [~leftnoteasy] for bringing this up. Yes, our use case would benefit from this feature. We are currently running 2.8, which does the balancing, so this would help us in moving to 3.x in the future.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-31T15:29:27.985+0000","updated":"2018-05-31T15:29:27.985+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16502751","id":"16502751","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks, [~leftnoteasy] for bringing up this feature. I worked on this Jira and finish an initial patch for the first stage of this feature which enables fairness balance after all queues beyond its guarantee. What I did is,\r\n # Release the constraint in TempQueuePerPartition#offer to let queues can continue to grows its ideal assigned resource after it satisfied it's guaranteed. \r\n # Make fairness balance preemption can be configurable through capacity-scheduler.xml\r\n # Add several test cases in PCPP to make sure this part of logic works for DRF and defaultResourceCalculator.\r\n\r\nWhat I plan to do in the second stage is,\r\n # Add timeout to candidateSelector and make fairness balance selector has its different timeout.\r\n # Figure out the list of containers each candidateSelector selected since we need this information to set the different timeout for selected containers from fairness balance selector \r\n\r\nCurrently, in each step of candidate selection, selector always make changes in the same \"toPreempt\" set of RMContainer and only stores aggregated results, besides this information, we also need individual results from each selector as well.\r\n\r\n \r\n\r\n[~eepayne] , could you help review the patch for the first stage and see if there is any potential issue for changing the tempQueuePerPartition part? Also, could you share how you accomplished the fairness feature in 2.8 as you mentioned? Thanks!\r\n\r\n  ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-06-06T02:23:02.614+0000","updated":"2018-06-06T02:23:02.614+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16503282","id":"16503282","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"body":"Thanks [~Zian Chen] for working on this and providing an initial patch. The patch does not apply cleanly, so can you please provide an update?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2018-06-06T13:24:48.852+0000","updated":"2018-06-06T13:24:48.852+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16503635","id":"16503635","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"Sure, Eric, I see the conflict while applying the patch in latest trunk. Let me update it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-06-06T17:32:01.488+0000","updated":"2018-06-06T17:32:01.488+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16504115","id":"16504115","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"Hi [~eepayne] , updated the patch based on latest trunk. Could you please help review it? Thanks","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-06-07T01:11:26.276+0000","updated":"2018-06-07T01:11:26.276+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16504195","id":"16504195","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 25s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 27m 35s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 41s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 39s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 50s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 19s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  1m  8s{color} | {color:red} hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager in trunk has 1 extant Findbugs warnings. {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 26s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 41s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 38s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 38s{color} | {color:green} the patch passed {color} |\r\n| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 39s{color} | {color:orange} hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager: The patch generated 34 new + 526 unchanged - 0 fixed = 560 total (was 526) {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 42s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m  2s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  1m 15s{color} | {color:red} hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager generated 1 new + 1 unchanged - 0 fixed = 2 total (was 1) {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 24s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green} 66m 52s{color} | {color:green} hadoop-yarn-server-resourcemanager in the patch passed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 23s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}127m  9s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Reason || Tests ||\r\n| FindBugs | module:hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager |\r\n|  |  Null passed for non-null parameter of CapacitySchedulerPreemptionUtils.deductPreemptableResourcesBasedSelectedCandidates(CapacitySchedulerPreemptionContext, Map) in org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.FifoCandidatesSelector.selectCandidates(Map, Resource, Resource)  Method invoked at FifoCandidatesSelector.java:of CapacitySchedulerPreemptionUtils.deductPreemptableResourcesBasedSelectedCandidates(CapacitySchedulerPreemptionContext, Map) in org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.FifoCandidatesSelector.selectCandidates(Map, Resource, Resource)  Method invoked at FifoCandidatesSelector.java:[line 91] |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |\r\n| JIRA Issue | YARN-8379 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12926819/YARN-8379.002.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux e9ac8e8b15b3 3.13.0-137-generic #186-Ubuntu SMP Mon Dec 4 19:09:19 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / db81f85 |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_171 |\r\n| findbugs | v3.1.0-RC1 |\r\n| findbugs | https://builds.apache.org/job/PreCommit-YARN-Build/20967/artifact/out/branch-findbugs-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager-warnings.html |\r\n| checkstyle | https://builds.apache.org/job/PreCommit-YARN-Build/20967/artifact/out/diff-checkstyle-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |\r\n| findbugs | https://builds.apache.org/job/PreCommit-YARN-Build/20967/artifact/out/new-findbugs-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.html |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/20967/testReport/ |\r\n| Max. process+thread count | 875 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager |\r\n| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/20967/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-06-07T03:27:58.973+0000","updated":"2018-06-07T03:27:58.973+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16504207","id":"16504207","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinodkv","name":"vinodkv","key":"vinodkv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinod Kumar Vavilapalli","active":true,"timeZone":"America/Los_Angeles"},"body":"Why is this a preemption only concept? To avoid unnecessary thrash between the allocation doing one thing and the preemption doing another, we should also have a corresponding queue ordering-policy, right?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinodkv","name":"vinodkv","key":"vinodkv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinod Kumar Vavilapalli","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-06-07T03:50:31.302+0000","updated":"2018-06-07T03:50:31.302+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16504630","id":"16504630","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"body":"{quote}\r\nWhy is this a preemption only concept? To avoid unnecessary thrash between the allocation doing one thing and the preemption doing another, we should also have a corresponding queue ordering-policy, right?\r\n{quote}\r\nThis is only related to preemption because the capacity scheduler already balances if resources become available. However, currently, if preemption is enabled on all queues, preemption will stop freeing resources once all pending queues are over their queue capacity.\r\n\r\nThe example in this JIRA's description outlines the current behavior. In that example, if resources free up naturally from queue_b, the capacity scheduler will assign them to queue_a. However, the preemption monitor will not preempt them because queue_a is at its 30% queue capacity.\r\n\r\nIn 2.8 and prior releases, the preemption monitor does balance. As pointed out above, the balancing behavior was changed as part of YARN-5864","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2018-06-07T12:50:18.509+0000","updated":"2018-06-07T12:50:18.509+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16508524","id":"16508524","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"{color:#333333}Thanks, [Eric Payne|https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eepayne] for the explanation. Let me share my understanding about Vinod's question as well.{color}\r\n \r\nSince this involves with both allocation and preemption, also for this change, we should provide crispy semantic associated with all the other combinations of our features - like queue priority, application priority, user limit, inter-queue preemption, intra-queue preemption, etc. \r\n \r\nLet's talk about queue priority in details,\r\n \r\nfor resource-allocation # For two queues with the same priority\r\n ** The queue with less relative used-capacity goes first. This won’t make conflicts with our change. For example two queues A and B, used/ guaranteed percent of A is 20 / 50 = 0.4, B is 30 / 50 = 0.6, The overall process of allocation here is filling the queue with as much resource as possible until less relative used-capacity queue (queue A) get used / guaranteed percent equal or larger than B, then allocation will fill B and continue this process to balance utilization of A and B until there is no more available resource to allocate.\r\n # For two queues with different priorities\r\n ** Our change will respect this part since priority should come first in allocation point of view. fairness should be a concept within priority, not across different queue priorities. - today’s behavior\r\n\r\n \r\nFor resource-preemption\r\n * We need to release the constraint that prevents queue to further accept available resource when beyond its guaranteed resources. Achieve fairness by calculating ideal assigned capacity based on proportional assignment.\r\n \r\nRelation to other scheduler features\r\n \r\n|Feature|Relationship|\r\n|Queue capacity / max capacity|This feature still honors queue configured capacity and queue’s max-capacity as usual.|\r\n|Application priority|Since application priority is an intra-queue property, this feature doesn’t impact application-priorities.|\r\n|User limit|Same as above|\r\n|Inter-queue proportional capacity preemption|After YARN-5864, queue priority already been handled while calculating ideal assigned capacity for each queue level. The only change we need to make is to release the constraint that queue accepted capacity should not beyond max(guaranteed, used) - assigned, this constraint will make queue imbalanced and prevent further preemption when all queues are beyond its guaranteed.|\r\n|Queue preemption disable|Fairness should not violate this constraint if current queue is disabled preemption|\r\n|Intra-queue preemption|No impact, queue fairness only apply across the queues.|\r\n \r\nWill we encounter a case that preemption will try to preempt a queue while allocation try to give the available resource to this queue after my change? No, because preemption calculation always has delays(kill before wait timeout), if allocation happens during this timeout, preemption will re-calculate the ideal assignment before really kill containers. And the overall preemption purpose of selecting containers and the process of allocation are the same, which is make relatively less utilized queue (apply to both under-utilized case and beyond guaranteed case) and make them “balance” in the end. \r\n \r\nCurrent logic is allocation will make all queues balance while choose who should be next queue to give resource, while preemption prevents this balance further happen after all queues beyond its guarantee, after my change, preemption will release the constraint and let further preemption happen to ensure this balance also achieve on preemption side.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-06-11T18:46:09.106+0000","updated":"2018-06-11T18:46:09.106+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16508526","id":"16508526","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"Hi [~eepayne] , could you help review my first stage patch and share your comments and thoughts on this? I'm working on the second stage of the patch and the work will depend on the first stage. Thanks!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-06-11T18:47:21.009+0000","updated":"2018-06-11T18:47:21.009+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16509992","id":"16509992","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"body":"[~Zian Chen], I will review the patch but it may take a couple of days.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2018-06-12T18:25:53.600+0000","updated":"2018-06-12T18:25:53.600+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16510225","id":"16510225","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"Sure, [~eepayne] , no problem. Really appreciate your help for reviewing the patch!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-06-12T21:23:30.592+0000","updated":"2018-06-12T21:23:30.592+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16510896","id":"16510896","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"Update patch 003 for stage 2. Add configured timeout for fairness balance selector and add UTs for this.\r\n\r\n[~eepayne] , [~sunilg] , could you help review the patch 003 please? this patch should complete the full feature as required in the description. Thanks!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-06-13T09:56:03.725+0000","updated":"2018-06-13T09:56:03.725+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16510996","id":"16510996","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 21s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 24m 42s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 40s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 13s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 43s{color} | {color:green} trunk passed {color} |\r\n| {color:red}-1{color} | {color:red} shadedclient {color} | {color:red}  2m 34s{color} | {color:red} branch has errors when building and testing our client artifacts. {color} |\r\n| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  1m 11s{color} | {color:red} hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager in trunk has 1 extant Findbugs warnings. {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 22s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 38s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 33s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 33s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 10s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 39s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:red}-1{color} | {color:red} shadedclient {color} | {color:red}  2m 20s{color} | {color:red} patch has errors when building and testing our client artifacts. {color} |\r\n| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  1m 11s{color} | {color:red} hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager generated 1 new + 1 unchanged - 0 fixed = 2 total (was 1) {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 23s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 69m  8s{color} | {color:red} hadoop-yarn-server-resourcemanager in the patch failed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 20s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}106m  9s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Reason || Tests ||\r\n| FindBugs | module:hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager |\r\n|  |  Null passed for non-null parameter of CapacitySchedulerPreemptionUtils.deductPreemptableResourcesBasedSelectedCandidates(CapacitySchedulerPreemptionContext, Map) in org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.FifoCandidatesSelector.selectCandidates(Map, Resource, Resource)  Method invoked at FifoCandidatesSelector.java:of CapacitySchedulerPreemptionUtils.deductPreemptableResourcesBasedSelectedCandidates(CapacitySchedulerPreemptionContext, Map) in org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.FifoCandidatesSelector.selectCandidates(Map, Resource, Resource)  Method invoked at FifoCandidatesSelector.java:[line 91] |\r\n| Failed junit tests | hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacitySchedulerSurgicalPreemption |\r\n|   | hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacitySchedulerAutoCreatedQueuePreemption |\r\n|   | hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacitySchedulerLazyPreemption |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |\r\n| JIRA Issue | YARN-8379 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12927626/YARN-8379.003.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux f9023d2bf54f 4.4.0-64-generic #85-Ubuntu SMP Mon Feb 20 11:50:30 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / f4c7c91 |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_171 |\r\n| findbugs | v3.1.0-RC1 |\r\n| findbugs | https://builds.apache.org/job/PreCommit-YARN-Build/21020/artifact/out/branch-findbugs-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager-warnings.html |\r\n| findbugs | https://builds.apache.org/job/PreCommit-YARN-Build/21020/artifact/out/new-findbugs-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.html |\r\n| unit | https://builds.apache.org/job/PreCommit-YARN-Build/21020/artifact/out/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/21020/testReport/ |\r\n| Max. process+thread count | 905 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager |\r\n| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/21020/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-06-13T11:47:06.196+0000","updated":"2018-06-13T11:47:06.196+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16511469","id":"16511469","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"body":"[~Zian Chen], thank you for the work on this issue and for the new patch. I am still working through the patch, but I have the following concerns so far.\r\n- Cross-queue preemption does not work when this patch is applied.\r\nMy test environment simulates a 6-node pseudo YARN cluster. I use the same queue configs with and without this patch. With this patch, no cross-queue preemption happens at all.\r\n- Please address the failed unit tests, failed findbugs, and failed shadedclient warnings. I think they are related to this patch.\r\n- {{ProportionalCapacityPreemptionPolicy#updateConfigIfNeeded}}\r\nThis code adds {{FifoCandidatesSelector}} to candidatesSelectionPolicies twice, which will cause it to be called twice since candidatesSelectionPolicies is an {{ArrayList}}. If I understand correctly, the reason for this is so that the first time {{FifoCandidatesSelector#selectCandidates}} is called, it will preempt up to the requesting queue's guarantee, and the second time it will not preempt until the requsting queue is above its guarantee AND the {{allowQueuesBalanceAfterAllQueuesSatisfied}} variable is set.\r\nWhy can't {{FifoCandidatesSelector}} just be added once and do all the processing it needs to based on whether or not {{allowQueuesBalanceAfterAllQueuesSatisfied}} is set?\r\n- {{FifoCandidatesSelector#selectCandidates}}\r\nIf the skip logic is necessary (depending on answer to my first question), I think the return needs to be moved up above the previous curly brace (}). The way it is now, it returns whether containers is empty or not empty.\r\n{code:title=FifoCandidatesSelector#selectCandidates}\r\n        for (Set<RMContainer> containers : selectedCandidates.values()) {\r\n          if (!containers.isEmpty()) {\r\n            if (LOG.isDebugEnabled()) {\r\n              LOG.debug(...);\r\n            }\r\n          }\r\n          return selectedCandidates;\r\n        }\r\n{code}\r\n- {{FifoCandidatesSelector#selectCandidates}}\r\nFor the debug log statement, I would not use the word \"Fairness\" because the word \"Fair\" has a lot of different meanings when it comes to schedulers and policies. To make it more grammatically correct (and to remove the confusion surrounding \"fairness\"), I would say, \"The preemption-to-balance feature is on. Some containers were chosen for preemption by previous selectors. Skipping container selection for FifoCandidatesSelector\");\r\n- General. For the same reason as above, I think we can just remove the workd \"Fair\" or \"Fairness\" from all method and variable names and the meaning would remain.\r\n- {{AbstractPreemptableResourceCalculator#getIdealPctOfGuaranteed}}\r\nbq. Should we allow queues continue grow after queues satisfied?\r\nThis could be misinterpreted to mean that the capacity scheduler doesn't allow a queue to grow over its capacity guarantee. It may be better to modify this to make it clear that we are talking about preemption: \"Should resources be preempted from an over-served queue when the requesting queues are all at or over their guarantees?\"\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2018-06-13T17:42:51.401+0000","updated":"2018-06-13T17:42:51.401+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16511522","id":"16511522","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"Thank you [~eepayne] for your suggestions. I'm totally agreed for the concerns of misleading by naming this feature using \" fair\" or \"fairness\". For your concerns, please check my questions and comments below,\r\n\r\n1. Which patch were you used for the cross queue preemption test? Patch 003? Could you share your queue settings (like queue hierarchy, each queue's guarantee, used and pending resources, queue priority) so that I can reproduce the case and see what the issue is?\r\n\r\n2. Will address failed UTs, find bugs, etc.\r\n\r\n3. The reason we add {{FifoCandidatesSelector}} to candidatesSelectionPolicies twice is that we want to make conservative preemption when we do the balance. The balance preemption (which is FifoCandidatesSelector with allowQueuesBalanceAfterAllQueuesSatisfied set to true) will only happen when all queues are meet or beyond its guarantee if any of the queues is underutilized, this balance will not be triggered. The reason we implement like this is we don't want balance and preempt queue to satisfy its guarantee not conflict with each other and preempt containers back and forth. \r\n\r\n4. The reason for this code is explained in item 3.\r\n{code:java|title=FifoCandidatesSelector#selectCandidates}\r\n        for (Set<RMContainer> containers : selectedCandidates.values()) {\r\n          if (!containers.isEmpty()) {\r\n            if (LOG.isDebugEnabled()) {\r\n              LOG.debug(...);\r\n            }\r\n          }\r\n          return selectedCandidates;\r\n        }\r\n{code}\r\n5. Agree for the log statement.\r\n6. Agree to remove \"Fair\" or \"Fairness\"\r\n7. Agree\r\n\r\n[~leftnoteasy] , [~cheersyang] , any concerns or suggestions on the latest patch? Thanks!\r\n\r\n ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-06-13T18:32:46.246+0000","updated":"2018-06-13T18:32:46.246+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16511694","id":"16511694","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"body":"[~Zian Chen], I attached the confs I used to create my pseudo cluster. I was using patch 003.\r\n{quote}3. The reason we add FifoCandidatesSelector to candidatesSelectionPolicies twice is that we want to make conservative preemption when we do the balance.\r\n{quote}\r\nI don't see why this is necessary. In 2.8 (and earlier 3.x releases prior to YARN-5864), the balancing was done all at once inside the {{FifoCandidatesSelector}} by properly adjusting the ideal assigned values per queue and the values of offered resources to each queue. Why can't we adjust these values to either 1) keep the same behavior or 2) balance queues, depending on the setting of the new property ({{fairness-balance-queue-after-satisfied.enabled}}).\r\n{quote}4. The reason for this code is explained in item 3.\r\n{quote}\r\nMy question here is why is {{selectedCandidates}} always returned after the first time through the for loop? If this was the intention, a for loop is not necessary. It looks like the intention was to only return if containers exist in {{selectedCandidates}} (the for loop) AND {{if (!containers.isEmpty())}}. Did you want the return to be inside of the {{if (!containers.isEmpty())}}?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2018-06-13T21:43:04.313+0000","updated":"2018-06-13T21:43:04.313+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16514383","id":"16514383","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"Hi [~eepayne] , thank you for the latest comments, I'll think it through and fix the failed UTs first.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-06-15T21:37:09.265+0000","updated":"2018-06-15T21:37:09.265+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16522930","id":"16522930","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"Fixed all the failed cases and re-upload the patch.[~eepayne], could you please help review the newest patch and share your comments? Thanks!\r\n\r\n \r\n\r\n[~leftnoteasy], [~sunilg], could you also share your thoughts on the latest patch please?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-06-25T23:16:09.004+0000","updated":"2018-06-25T23:16:09.004+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16522977","id":"16522977","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"[~eepayne], for the suggestions you mentioned before which is make the balancing was done all at once instead of add FifoSelector twice. Let me explain this in two aspects,\r\n\r\n1. in TempQueuePerPartition#offer. When we calculate ideal assignment, first time we calculate accepted using this,\r\n{code:java}\r\n// accepted = min{avail,\r\n//               max - assigned,\r\n//               current + pending - assigned,\r\n//               # Make sure a queue will not get more than max of its\r\n//               # used/guaranteed, this is to make sure preemption won't\r\n//               # happen if all active queues are beyond their guaranteed\r\n//               # This is for leaf queue only.\r\n//               max(guaranteed, used) - assigned}\r\n{code}\r\n \r\nThe second time, we calculate accepted without check max(guaranteed, used), as far as I can see, this two steps should be done sequentially instead of in one shot.\r\n2. Another reason is we add an option to set configureable timeout for preempt-to-balance selected containers (selected by fifo2) which can let user set custom timeout for these preempt-to-balance containers and actually kill them faster/slower based on user needs, which leads to control the balance process to be faster or slower. But this timeout should only be affects containers selected for balance, not for an underutilized queue to reach its guaranteed resource. So we need to separate these two process.\r\n \r\nAll other comments should be handled by the latest patch already. Thanks!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-06-26T00:09:11.262+0000","updated":"2018-06-26T00:09:11.262+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16523086","id":"16523086","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 22s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 30m 37s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 51s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 20s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 58s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 58s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 12s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 28s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 44s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 38s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 38s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m  9s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 42s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 27s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 21s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 27s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 69m 12s{color} | {color:red} hadoop-yarn-server-resourcemanager in the patch failed. {color} |\r\n| {color:red}-1{color} | {color:red} asflicense {color} | {color:red}  0m 36s{color} | {color:red} The patch generated 1 ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}133m 54s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Reason || Tests ||\r\n| Failed junit tests | hadoop.yarn.server.resourcemanager.monitor.capacity.TestProportionalCapacityPreemptionPolicyPreemptToBalance |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |\r\n| JIRA Issue | YARN-8379 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12929105/YARN-8379.004.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux ae8d5c30f508 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / 7a3c6e9 |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_171 |\r\n| findbugs | v3.1.0-RC1 |\r\n| unit | https://builds.apache.org/job/PreCommit-YARN-Build/21101/artifact/out/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/21101/testReport/ |\r\n| asflicense | https://builds.apache.org/job/PreCommit-YARN-Build/21101/artifact/out/patch-asflicense-problems.txt |\r\n| Max. process+thread count | 939 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager |\r\n| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/21101/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-06-26T02:19:09.030+0000","updated":"2018-06-26T02:19:09.030+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16523691","id":"16523691","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"body":"[~Zian Chen] , I probably won't be able to get to this for a couple of weeks.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2018-06-26T13:02:17.384+0000","updated":"2018-06-26T13:02:17.384+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16524088","id":"16524088","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"Quickly checked the failed UT, it's a rounding cap issue which makes one container difference for the selected to preempt candidates. Tested in local works as expected. \r\n\r\n ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-06-26T18:26:51.505+0000","updated":"2018-06-26T18:26:51.505+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16524091","id":"16524091","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"[~eepayne], thank you for the notice. Let me ask Wangda and Sunil to review it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-06-26T18:27:26.007+0000","updated":"2018-06-26T18:27:26.007+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16524263","id":"16524263","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunilg","name":"sunilg","key":"sunilg","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sunil Govindan","active":true,"timeZone":"Asia/Kolkata"},"body":"Thanks [~eepayne]. I will be having bandwidth to check this. So I ll help in this.\r\n\r\nFew comments in this patch.\r\n # I think its better to rename PREEMPTION_TO_BALANCE_QUEUES_AFTER_SATISFIED to PREEMPTION_TO_BALANCE_QUEUES_BEYOND_GUARANTEED and similar variables.\r\n # PREEMPTION_TO_BALANCE_QUEUES_AFTER_SATISFIED_MAX_WAIT_BEFORE_KILL to MAX_WAIT_BEFORE_KILL_FOR_QUEUE_BALANCE_PREEMPTION and other similar variables.\r\n # Could we move this one as the list selector.\r\n{code:java}\r\n263\tif (isPreemptionToBalanceRequired) {\r\n264\tPreemptionCandidatesSelector selector = new FifoCandidatesSelector(this,\r\n265\tfalse, true);\r\n266\tselector.setMaximumKillWaitTime(maximumKillWaitTimeForPreemptionToQueueBalance);\r\n267\tcandidatesSelectionPolicies.add(selector);\r\n268\t}{code}\r\n\r\n # I have some doubt about below code\r\n{code:java}\r\ncurCandidates = selector.selectCandidates(toPreempt, curCandidates,\r\n      clusterResources, totalPreemptionAllowed);\r\n{code}\r\n{code:java}\r\ntoPreempt = selector.selectCandidates(toPreempt,\r\n      clusterResources, totalPreemptionAllowed);\r\n{code}\r\n\r\n          Earlier selector know what the selectedCandidates from toPreempt. Now i dnt this we will get this","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunilg","name":"sunilg","key":"sunilg","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sunil Govindan","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-06-26T22:10:51.176+0000","updated":"2018-06-26T22:10:51.176+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16524393","id":"16524393","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"[~sunilg], thanks for the comments. here is the updates for the latest patch.\r\n # I fixed the variable naming as you suggested.\r\n # For the failed UT. I also tuned the queue config to avoid the cap issue.\r\n # I add a data structure named \"toPreemptPerSelector\" and the reason we need this along with curCandidates is because in ProportionalCapacityPreemptionPolicy#preemptOrkillSelectedContainerAfterWait,  when we check each container and see if it can be killed or not, we need to get custom timeout interval based on the selector, so we need matching between list of candidates and selector here. I also added appropriate comments to help people understand the logic for this.\r\n # Add a surgical UT and make sure custom timeout works as expected.\r\n\r\nCould you help review the latest patch? Thanks!\r\n\r\n ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-06-27T00:48:12.186+0000","updated":"2018-06-27T00:48:12.186+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16524550","id":"16524550","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 21s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 3 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 24m 37s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 41s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 10s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 38s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m 23s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m  6s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 23s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 45s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 41s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 41s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m  8s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 37s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m 45s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 10s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 24s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green} 68m 59s{color} | {color:green} hadoop-yarn-server-resourcemanager in the patch passed. {color} |\r\n| {color:red}-1{color} | {color:red} asflicense {color} | {color:red}  0m 19s{color} | {color:red} The patch generated 1 ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}122m 20s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |\r\n| JIRA Issue | YARN-8379 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12929299/YARN-8379.005.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux 5753e1ea0879 4.4.0-64-generic #85-Ubuntu SMP Mon Feb 20 11:50:30 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / 62d83ca |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_171 |\r\n| findbugs | v3.1.0-RC1 |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/21124/testReport/ |\r\n| asflicense | https://builds.apache.org/job/PreCommit-YARN-Build/21124/artifact/out/patch-asflicense-problems.txt |\r\n| Max. process+thread count | 883 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager |\r\n| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/21124/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-06-27T04:06:00.257+0000","updated":"2018-06-27T04:06:00.257+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16524583","id":"16524583","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"body":"[~Zian Chen], \r\n\r\nThanks for updating the patch,\r\n\r\nFew comments: \r\n\r\n1) testPreemptionToBalanceWithCustomTimeout is better to move to a separate class. (Maybe something like TestCapacitySchedulerQueueBalancePreemption. The test looks not testing this feature, could u check it? I might misunderstand what you did here. \r\n\r\n2) For interface of {{selectCandidates}}, I think we can avoid passing the curCandidates, correct? According to semantics of curCandidates, it should be candidates selected *with in the selector*. \r\n\r\nAn additional comment is:\r\n- Now all selectors need to update two maps, curCandidates and selectedCandidates, this causes confusion and developers could forget updating both of them in some cases. Instead of doing this, I think we should refactor this part of code to simplify the logic. This can be done in a separated JIRA.  [~Zian Chen], could u create a JIRA for this?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-06-27T04:59:39.259+0000","updated":"2018-06-27T04:59:39.259+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16524608","id":"16524608","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"Hi [~leftnoteasy]. thanks for the comments.\r\n # This test case was intend to demonstrate selected candidates will be actually killed after custom timeout was reached. This part of code is the intention.\r\n{code:java}\r\neditPolicy.editSchedule();\r\nAssert.assertEquals(4, editPolicy.getToPreemptContainers().size());\r\n\r\n// check live containers immediately, nothing happen\r\nAssert.assertEquals(39, schedulerApp1.getLiveContainers().size());\r\n\r\nThread.sleep(20*1000);\r\n// Call editSchedule again: selected containers are killed\r\neditPolicy.editSchedule();\r\nwaitNumberOfLiveContainersFromApp(schedulerApp1, 35);{code}\r\n\r\n # Totally understand your suggestion here, actually I was define a private member variable inside interface PreemptionCandidatesSelector so that we don't need to pass curCandidates for every selector instance. However I found TestCapacitySchedulerSurgicalPreemption#testPriorityPreemptionFromHighestPriorityQueueAndOldestContainer() get failed which helped me realize that curCandidates is a \"per round reinitialize thing\" rather than a \"per selector\" thing, we should give a clean curCandidates HashMap every time we call editSchedule, otherwise like this UT, we call editschedule multiple times but the selector remain the same instance, then curCandidates will contains old selected containers the second time we call the editSchedule, we could definitely make a method inside PreemptionCandidatesSelector, and call it explicitly to reset curCandidates per round, but this way it makes the code even harder to read. Any better suggestions here?\r\n # Your suggestion is not updating toPreempt on the fly but only update curCandidates, then after each round, update toPreempt right after selectCandidates is finished? If this is the correct understanding, I think from time complexity point of view, these two strategy should be same since we always need to go through each temp selected candidates and add it into toPreempt with duplicate check, but it helps with maintaining status of selected containers in one place(curCandidates) and avoid inconsistency. We can further discuss this part.\r\n\r\nI'll address the asflicense issue with the next patch. Thanks!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-06-27T05:52:26.931+0000","updated":"2018-06-27T05:52:41.405+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16525285","id":"16525285","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunilg","name":"sunilg","key":"sunilg","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sunil Govindan","active":true,"timeZone":"Asia/Kolkata"},"body":"Hi [~Zian Chen]\r\n\r\nFew more comments\r\n # In {{preemptOrkillSelectedContainerAfterWait}} could we avoid computing toPreemptCount. Instead we can use toPreempt.size or something similar. Ideally no: of containers in toPreempt and toPreemptPerSelector should be same.\r\n # \r\n{quote} we should give a clean curCandidates HashMap every time we call editSchedule, otherwise like this UT, we call editschedule multiple times but the selector remain the same instance\r\n{quote}\r\nTo me, this is more likely a UT bug. As per the semantics, we do not need to pass curCandidates and rather consider the return value alone.\r\n\r\n # I think in line with above comments, we can try to rename updateCurCandidates to updatePerSelectorCandidates and curCandidates to something similar?\r\n # May be more cleaner solution is to handle curCandidates map updates inside CapacitySchedulerPreemptionUtils#addToPreemptMap method. All duplicate checks are done before this method is called, so we can just add container to curCandidates inside this method which avoid a lot of external handling and cause more bugs later for new selector etc.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunilg","name":"sunilg","key":"sunilg","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sunil Govindan","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-06-27T16:52:22.254+0000","updated":"2018-06-27T16:52:22.254+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16525328","id":"16525328","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. we could definitely make a method inside PreemptionCandidatesSelector, and call it explicitly to reset curCandidates per round, but this way it makes the code even harder to read. Any better suggestions here?\r\nCan we simply new the curCandidates map inside {{selectCandidates}} for each selector? \r\n\r\nbq. This test case was intend to demonstrate selected candidates will be actually killed after custom timeout was reached. This part of code is the intention.\r\nWhat I can see from the UT is, queue1 gets all containers (39G) and queue2 asks a 4G container. After wait the 4G containers will be preempted from queue1. I think our purpose is: both queue1 / queue2 are overutilized, we need to balance resources from queue1 to queue2 and only after X secs, containers from queue1 will be preempted. correct? It will be similar to follow the example {{testPreemptionToBalanceUsedPlusPendingLessThanGuaranteed}}.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-06-27T17:25:43.621+0000","updated":"2018-06-27T17:25:43.621+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16525476","id":"16525476","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"[~leftnoteasy] [~sunilg], thanks for the comments. Just updated the patch to fix curCandidates and refactor all selector to use addToPreemptMap to update both toPreempt and curCandidates. Also fixed other minor issues. Could you help review it?  Thanks!\r\n\r\n ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-06-27T19:09:02.295+0000","updated":"2018-06-27T19:09:02.295+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16525636","id":"16525636","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 44s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 3 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 31m 23s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 54s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 16s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 55s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 13m 25s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 28s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 31s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 50s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 50s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 50s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 12s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 52s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 13m 16s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 41s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 31s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 69m 27s{color} | {color:red} hadoop-yarn-server-resourcemanager in the patch failed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 24s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}137m 44s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Reason || Tests ||\r\n| Failed junit tests | hadoop.yarn.server.resourcemanager.applicationsmanager.TestAMRestart |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |\r\n| JIRA Issue | YARN-8379 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12929459/YARN-8379.006.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux a1d04630eec8 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / fbaff36 |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_171 |\r\n| findbugs | v3.1.0-RC1 |\r\n| unit | https://builds.apache.org/job/PreCommit-YARN-Build/21131/artifact/out/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/21131/testReport/ |\r\n| Max. process+thread count | 853 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager |\r\n| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/21131/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-06-27T21:27:46.139+0000","updated":"2018-06-27T21:27:46.139+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16525676","id":"16525676","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"Quickly checked the failed UTs, TestAMRestart.testPreemptedAMRestartOnRMRestart[FAIR], passed in local environment, don't get timeout failure. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Zian+Chen","name":"Zian Chen","key":"zian chen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Zian Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-06-27T22:15:21.007+0000","updated":"2018-06-27T22:15:31.213+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16525713","id":"16525713","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunilg","name":"sunilg","key":"sunilg","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sunil Govindan","active":true,"timeZone":"Asia/Kolkata"},"body":"Thanks [~Zian Chen]. Latest patch looks good to me. +1","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunilg","name":"sunilg","key":"sunilg","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sunil Govindan","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-06-27T23:00:42.024+0000","updated":"2018-06-27T23:00:42.024+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16526585","id":"16526585","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunilg","name":"sunilg","key":"sunilg","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sunil Govindan","active":true,"timeZone":"Asia/Kolkata"},"body":"Thank you very much [~Zian Chen] for the contribution, really appreciate the same. Thanks [~leftnoteasy] and [~eepayne] for reviews.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunilg","name":"sunilg","key":"sunilg","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sunil Govindan","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-06-28T17:25:16.396+0000","updated":"2018-06-28T17:25:16.396+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16526603","id":"16526603","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"SUCCESS: Integrated in Jenkins build Hadoop-trunk-Commit #14497 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/14497/])\nYARN-8379. Improve balancing resources in already satisfied queues by (sunilg: rev 291194302cc1a875d6d94ea93cf1184a3f1fc2cc)\n* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/PreemptableResourceCalculator.java\n* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/CapacitySchedulerPreemptionContext.java\n* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/CapacitySchedulerPreemptionUtils.java\n* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java\n* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/FifoCandidatesSelector.java\n* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/AbstractPreemptableResourceCalculator.java\n* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/QueuePriorityContainerCandidateSelector.java\n* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfiguration.java\n* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TestPreemptionForQueueWithPriorities.java\n* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TempQueuePerPartition.java\n* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/IntraQueueCandidatesSelector.java\n* (add) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TestProportionalCapacityPreemptionPolicyPreemptToBalance.java\n* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/PreemptionCandidatesSelector.java\n* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ReservedContainerCandidatesSelector.java\n* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/TestCapacitySchedulerSurgicalPreemption.java\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2018-06-28T17:46:39.758+0000","updated":"2018-06-28T17:46:39.758+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16528143","id":"16528143","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinodkv","name":"vinodkv","key":"vinodkv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinod Kumar Vavilapalli","active":true,"timeZone":"America/Los_Angeles"},"body":"This looks like a new feature. Why is this in the 3.1.1 point release?!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinodkv","name":"vinodkv","key":"vinodkv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinod Kumar Vavilapalli","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-06-29T19:47:14.145+0000","updated":"2018-06-29T19:47:14.145+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16528146","id":"16528146","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunilg","name":"sunilg","key":"sunilg","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sunil Govindan","active":true,"timeZone":"Asia/Kolkata"},"body":"In 2.9, we have added Queue Priorities and post that the balancing preemption was not cleanly working. This improvement helps to cover the same and hence we pushed to 3.1","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunilg","name":"sunilg","key":"sunilg","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sunil Govindan","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-06-29T19:52:11.236+0000","updated":"2018-06-29T19:52:11.236+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16532643","id":"16532643","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=XiandongQI","name":"XiandongQI","key":"xiandongqi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=34045","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"},"displayName":"XiandongQI","active":true,"timeZone":"Etc/UTC"},"body":"Thanks [~Zian Chen],  [~leftnoteasy], [~sunilg].\r\n\r\n \r\n\r\nI am unclear about the \"definition\" of \"used-capacity\". In version 3.1.0, when calculating \"used-capacity\", it only considers the number of the total occupied containers in of each LeafQueue and does not consider the relative percentages of occupied containers on each \"partition/NodewithLables\", right? \r\n\r\n \r\n\r\nThe comment (\"For two queues with the same priority: - \") in the source code is not clear enough.\r\n\r\n ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=XiandongQI","name":"XiandongQI","key":"xiandongqi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=34045","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"},"displayName":"XiandongQI","active":true,"timeZone":"Etc/UTC"},"created":"2018-07-04T11:35:26.747+0000","updated":"2018-07-04T11:35:26.747+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13163023/comment/16532677","id":"16532677","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=XiandongQI","name":"XiandongQI","key":"xiandongqi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=34045","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"},"displayName":"XiandongQI","active":true,"timeZone":"Etc/UTC"},"body":"if a container with a label is released, the current \"PriorityUtilizationQueueOrderingPolicy.java\" will give it to the user(leafquque) who has the access to this partition and has a lower absolute used capacity if all users have the same priority.\r\n\r\n \r\n\r\nThat is to say, the policy will prepare an assignmentIterator for each partition. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=XiandongQI","name":"XiandongQI","key":"xiandongqi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=34045","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"},"displayName":"XiandongQI","active":true,"timeZone":"Etc/UTC"},"created":"2018-07-04T12:17:06.953+0000","updated":"2018-07-04T12:33:47.688+0000"}],"maxResults":42,"total":42,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/YARN-8379/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i3uc27:"}}