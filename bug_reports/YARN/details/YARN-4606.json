{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12932362","self":"https://issues.apache.org/jira/rest/api/2/issue/12932362","key":"YARN-4606","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12313722","id":"12313722","key":"YARN","name":"Hadoop YARN","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12313722&avatarId=15135","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12313722&avatarId=15135","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12313722&avatarId=15135","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12313722&avatarId=15135"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12341684","id":"12341684","description":"2.10.0 release","name":"2.10.0","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12342758","id":"12342758","name":"3.2.0","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12343007","id":"12343007","description":"2.9.2 release","name":"2.9.2","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12343415","id":"12343415","name":"3.0.4","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12343433","id":"12343433","description":"","name":"3.1.2","archived":false,"released":false}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2016-01-19T09:50:52.221+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Wed Jul 25 16:45:52 UTC 2018","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_2_*:*_77740355941_*|*_5_*:*_1_*:*_0_*|*_10002_*:*_2_*:*_1609089627","customfield_12312321":null,"resolutiondate":"2018-07-25T19:13:51.103+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/YARN-4606/watchers","watchCount":10,"isWatching":false},"created":"2016-01-19T09:43:05.576+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.svg","name":"Critical","id":"2"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"11.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12329059","id":"12329059","description":"2.8.0 release","name":"2.8.0","archived":false,"released":true,"releaseDate":"2017-03-22"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12331976","id":"12331976","description":"2.7.1 release","name":"2.7.1","archived":false,"released":true,"releaseDate":"2015-07-06"}],"issuelinks":[{"id":"12540950","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12540950","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"13178772","key":"YARN-8660","self":"https://issues.apache.org/jira/rest/api/2/issue/13178772","fields":{"summary":"Fair/FIFOSchedulers: applications could get starved because computation of #activeUsers considers pending apps","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2018-08-14T05:40:31.231+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12327621","id":"12327621","name":"capacity scheduler"},{"self":"https://issues.apache.org/jira/rest/api/2/component/12319324","id":"12319324","name":"capacityscheduler"}],"timeoriginalestimate":null,"description":"Currently, if all applications belong to same user in LeafQueue are pending (caused by max-am-percent, etc.), ActiveUsersManager still considers the user is an active user. This could lead to starvation of active applications, for example:\n- App1(belongs to user1)/app2(belongs to user2) are active, app3(belongs to user3)/app4(belongs to user4) are pending\n- ActiveUsersManager returns #active-users=4\n- However, there're only two users (user1/user2) are able to allocate new resources. So computed user-limit-resource could be lower than expected.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12921418","id":"12921418","filename":"YARN-4606.001.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-05-01T17:20:44.141+0000","size":23577,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12921418/YARN-4606.001.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12923920","id":"12923920","filename":"YARN-4606.002.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-05-17T13:00:15.806+0000","size":22318,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12923920/YARN-4606.002.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12925910","id":"12925910","filename":"YARN-4606.003.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-05-31T13:34:21.265+0000","size":32451,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12925910/YARN-4606.003.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12927994","id":"12927994","filename":"YARN-4606.004.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-06-15T14:26:32.618+0000","size":40783,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12927994/YARN-4606.004.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12930945","id":"12930945","filename":"YARN-4606.005.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-07-10T04:59:11.883+0000","size":16363,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12930945/YARN-4606.005.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12931034","id":"12931034","filename":"YARN-4606.006.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-07-10T16:58:04.082+0000","size":16295,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12931034/YARN-4606.006.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12932447","id":"12932447","filename":"YARN-4606.007.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-07-20T17:23:56.057+0000","size":11035,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12932447/YARN-4606.007.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12783317","id":"12783317","filename":"YARN-4606.1.poc.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-01-20T09:34:57.110+0000","size":13916,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12783317/YARN-4606.1.poc.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12919688","id":"12919688","filename":"YARN-4606.POC.2.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-18T20:46:31.470+0000","size":19196,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12919688/YARN-4606.POC.2.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12928829","id":"12928829","filename":"YARN-4606.POC.3.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2018-06-22T22:10:05.676+0000","size":2758,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12928829/YARN-4606.POC.3.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12912882","id":"12912882","filename":"YARN-4606.POC.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-03-03T12:22:16.291+0000","size":14841,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12912882/YARN-4606.POC.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"CapacityScheduler: applications could get starved because computation of #activeUsers considers pending apps ","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=karams","name":"karams","key":"karams","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karam Singh","active":true,"timeZone":"Asia/Kolkata"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=karams","name":"karams","key":"karams","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karam Singh","active":true,"timeZone":"Asia/Kolkata"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/15106507","id":"15106507","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=karams","name":"karams","key":"karams","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karam Singh","active":true,"timeZone":"Asia/Kolkata"},"body":"From offline discussion with [~wangda]:\nAfter looked at log & code, I think I understand what happened:\nThe root cause is: we shouldn't activate application when it's in pending state. This is not a new issue, at least branch-2.6 contains this issue.\nThis leads to #active-users in a queue increased, but new added active user cannot get resource (because application is in pending state) and old user hits user-limit (new added user lowers user-limits).\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=karams","name":"karams","key":"karams","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karam Singh","active":true,"timeZone":"Asia/Kolkata"},"created":"2016-01-19T09:45:07.505+0000","updated":"2016-01-19T09:45:07.505+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/15106519","id":"15106519","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks [~karams], assigned it to me.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-01-19T09:50:52.221+0000","updated":"2016-01-19T09:50:52.221+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/15108183","id":"15108183","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"body":"Updated description of the JIRA, originally it is found by [~karams] while doing fairness ordering policy tests, pasting original test cases here just for reference:\n{code}\nEncountered while studying behaviour fairness with UserLimitPercent and UserLimitFactor during following test:\nRan GridMix with Queue settings: Capacity=10, MaxCap=80, UserLimit=25 UserLimitFactor=32, FairOrderingPolicy only. Encountered a application starving situation where 33 application (190 apps completed out of 761 apps, queue can 345 containers) are running with total of 45 containers running, and that 12 extra only one app(the app was having around 18000 tasks) , all other apps were having AM running only no other containers were given any apps. After that app finished, there were 32 AMs that kept running without any containers for task being launched\nGridMix was run with following settings:\ngridmix.client.pending.queue.depth=10, gridmix.job-submission.policy=REPLAY, gridmix.client.submit.threads=5, gridmix.submit.multiplier=0.0001, gridmix.job.type=SLEEPJOB, mapreduce.framework.name=yarn, mapreduce.job.queuename=hive1, mapred.job.queue.name=hive1, gridmix.sleep.max-map-time=5000, gridmix.sleep.max-reduce-time=5000, gridmix.user.resolve.class=org.apache.hadoop.mapred.gridmix.RoundRobinUserResolver With Users file containing 4 users for RoundRobinUserResolver\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-01-20T07:56:15.087+0000","updated":"2016-01-20T07:56:15.087+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/15108196","id":"15108196","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"body":"Proposed solution: \nWe should only consider a user is \"active\" if any of its application is active. And CS will use the \"#active-user-which-has-at-least-one-active-app\" to compute user-limit.\n\nComputation of max-am-resource-per-user needs to be updated as well. We should get a #users-which-has-pending-apps to compute max-am-resource-per-user.\n\nThis looks like a major behavior change to existing scheduler logic. Thoughts? [~vinodkv]/[~jlowe]/[~jianhe].\n\nI'm not sure if FairScheduler needs similar changes as well, if a user in FSLeafQueue doesn't have any runnable apps, should we increase #active-users of QueueMetrics? [~kasha]","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-01-20T08:11:15.108+0000","updated":"2016-01-20T08:16:08.807+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/15108267","id":"15108267","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Naganarasimha","name":"Naganarasimha","key":"naganarasimha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naganarasimha G R","active":true,"timeZone":"Asia/Kolkata"},"body":"Hi [~wangda],\nThanks for sharing the proposal, Just to clarify whether my understanding is correct : \n* While calculating user limit for assigning containers to a app we take the #activeusers = #users who have apps in activated stage and has outstanding requests. \n* And while calculating userAMlimit for activating a app we take #activeusers = #unique users who are having apps in the pending order policy?\n ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Naganarasimha","name":"Naganarasimha","key":"naganarasimha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naganarasimha G R","active":true,"timeZone":"Asia/Kolkata"},"created":"2016-01-20T09:21:59.474+0000","updated":"2016-01-20T09:21:59.474+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/15108284","id":"15108284","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"body":"Uploaded poc patch to demonstrate for the changes for #active-users computation.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-01-20T09:34:57.114+0000","updated":"2016-01-20T09:34:57.114+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/15108290","id":"15108290","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"body":"Hi [~Naganarasimha],\nbq. While calculating user limit for assigning containers to a app we take the #activeusers = #users who have apps in activated stage and has outstanding requests.\nYes\n\nbq. And while calculating userAMlimit for activating a app we take #activeusers = #unique users who are having apps in the pending order policy?\nYes","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-01-20T09:38:00.283+0000","updated":"2016-01-20T09:38:00.283+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16286883","id":"16286883","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"body":"[~jlowe], as we discussed offline, this is a (known) potential issue of fair ordering policy. Please let me know if you have any thoughts on this.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-12-12T00:50:47.297+0000","updated":"2017-12-12T00:50:47.297+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16345536","id":"16345536","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"body":"[~leftnoteasy] Based on my understanding, as of now {{ActiveUsersManager#getNumActiveUsers}} has been used only in {{LeafQueue#getUserAMResourceLimitPerPartition}} to compute the userAMLimit. Given this, ensuring active users count increments only after app activation is sufficient to fix this JIRA? Something like,\r\n\r\n 1. Introduce a new method {{activeApplication()}} in {{AppSchedulingInfo}} to set new private boolean variable \"isActivated\" to true.\r\n 2. Call #1 from {{LeafQueue#activateApplications}} after {{application.updateAMContainerDiagnostics(AMState.ACTIVATED, null);}} similar to changes in earlier POC patch.\r\n 3. Ensure {{abstractUsersManager.activateApplication(user, applicationId);}} in {{AppSchedulingInfo#updatePendingResources}} executes only when isActivate is true.\r\n\r\nPlease share your views.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-01-30T18:07:13.520+0000","updated":"2018-01-30T18:07:13.520+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16346808","id":"16346808","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunilg","name":"sunilg","key":"sunilg","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sunil Govindan","active":true,"timeZone":"Asia/Kolkata"},"body":"[~manirajv06@gmail.com]\r\n\r\nYou can look into {{SchedulerApplicationAttempt.isWaitingForAMContainer()}} to know an app is pending for its AM container. Hence  new method {{activeApplication()}} in {{AppSchedulingInfo is not needed.}}\r\n\r\nIdeally we have {{ActiveUsersManager}} which has all the active users in that cluster (including apps which are pending). I thin we can have {{activeUsersOfPendingApps along with}} {{activeUsers}} . Hence in case of scheduling we can depend only on activeUsers. And when we need to know all active users in cluster (for user-limit computation etc) we might need to use activeUsers+activeUsersOfPendingApps.\r\n\r\n \r\n\r\ncc/ [~leftnoteasy] [~jlowe] [~eepayne] Could you please help to check this and share your thoughts.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunilg","name":"sunilg","key":"sunilg","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sunil Govindan","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-01-31T13:24:42.447+0000","updated":"2018-01-31T13:24:42.447+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16347209","id":"16347209","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"body":"Thanks everyone for the thoughtful analysis.\r\n\r\nI am still analyzing in more depth, but I have a couple of thoughts:\r\n{quote}this is a (known) potential issue of fair ordering policy.\r\n{quote}\r\nThis can happen for fifo ordering policy as well.\r\n{quote}have {{activeUsersOfPendingApps}} along with {{activeUsers}}. Hence in case of scheduling we can depend only on {{activeUse}}\r\n{quote}\r\nWe need to be careful with these counts because a user can have both active and pending apps. I think the definitions should be:\r\n - {{activeUsers}}: users that have at least one active app\r\n - {{activeUsersOfPendingApps}}: users that have only pending apps.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2018-01-31T17:16:11.485+0000","updated":"2018-01-31T17:16:11.485+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16347220","id":"16347220","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunilg","name":"sunilg","key":"sunilg","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sunil Govindan","active":true,"timeZone":"Asia/Kolkata"},"body":"Thanks [~eepayne]. You are correct. \r\n - {{activeUsers}}: users that have at least one active app\r\n - {{activeUsersOfPendingApps}}: users that have only pending apps\r\n\r\nThis is the correct definition.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sunilg","name":"sunilg","key":"sunilg","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sunil Govindan","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-01-31T17:20:37.407+0000","updated":"2018-01-31T17:20:37.407+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16347236","id":"16347236","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"body":"Thanks [~eepayne] [~sunilg] for your comments. \r\n{quote}And when we need to know all active users in cluster (for user-limit computation etc) we might need to use activeUsers+activeUsersOfPendingApps.{quote}\r\nShouldn't we use activeUsersOfPendingApps only for user limit calculation? Otherwise, based on the example given in the description, Won't we end up in same situation (2+2 == 4 )? Please correct my understanding.\r\n\r\n ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-01-31T17:30:51.153+0000","updated":"2018-01-31T17:31:35.296+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16347329","id":"16347329","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"body":"My understanding is that user limit would use {{activeUsers}} and things like max AM limit per user, we'd use {{activeUsers}} + {{activeUsersOfPendingApps}}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2018-01-31T18:25:55.006+0000","updated":"2018-01-31T18:25:55.006+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16384645","id":"16384645","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"body":"[~eepayne] [~sunilg] Thanks for your inputs. Sorry for the delay.\r\n\r\nAttached POC patch to confirm it is in line with our discussions. Please review the approach. Will need to make it as robust patch by adding tests etc and also have to cover FS, FIFO as well after the feedback.\r\n\r\nApproach:\r\n\r\n1. Introduce activeUsersOfPendingApps in users manager and increment this count as and when apps are accepted.\r\n 2. After activating the application, increment activeUsers and decrement activeUsersOfPendingApps in {{UsersManager#activateApplication}} from {{AppSchedulingInfo#updatePendingResources}} only when app is no more waiting for AM container.\r\n 3. To calculate max AM limit per user, use activeUsers + activeUsersOfPendingApps.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-03-03T12:21:04.652+0000","updated":"2018-03-03T12:21:04.652+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16391802","id":"16391802","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"body":"[~manirajv06@gmail.com], thank you for the patch. The overall approach looks fine, but I have a couple of concerns.\r\n - The behavior of assigning resources to schedulable applications has changed. With this patch, in the following use case, resources are not assigned to the second app when they should be. I have not analyzed the behavior closely enough to debug the issue, but I wish to document the behavior:\r\n -- Queue1 total resources: 40\r\n -- Queue1 Max Application Master Resources: 2\r\n -- Container sizes are all 1 resource\r\n|*User Name*|*Applicatiton ID*|*Used AM resources*|*Total Used Resources*|*Pending Resources*|\r\n|User1|App1|1|39|20|\r\n|User2|App2|0|0|1 (waiting for AM)|\r\n\r\n -- In this scenario, User2 wants to start App2 but User1 is consuming all resources in the queue with App1. When App1 releases a resource, however, it is not given to App2. The resource is given back to App1, which brings its Pending value down to 19. This is incorrect behavior since Queue1 has room for 2 AMs.\r\n\r\n - I think the {{TestRMHA}} unit test needs to be modified to adjust to this patch:\r\n{code:java}\r\nTestRMHA\r\nTestRMHA.testFailoverAndTransitions:219->verifyClusterMetrics:754 Incorrect value for metric activeApplications expected:<1> but was:<0>\r\nTestRMHA.testFailoverClearsRMContext:550->verifyClusterMetrics:754 Incorrect value for metric activeApplications expected:<1> but was:<0>\r\n{code}\r\n\r\n - A couple of minor things:\r\n -- IIUC, the value stored in {{activeUsersOfPendingApps}} represents the number of suers that do not have any active applications. Is that correct? If so, I think it would be more clear if it were called {{usersWithOnlyPendingApps}}.\r\n -- In {{AbstractUsersManager}} and {{ActiveUsersManager}}, *atleast* should be \"at least*.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2018-03-08T19:31:30.282+0000","updated":"2018-03-08T19:31:30.282+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16396094","id":"16396094","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"body":"bq. resources are not assigned to the second app when they should be\r\nI'm unsure about the appropriate way to fix this. My original thinking was that we could do something similar to the following:\r\n{code:title=AppSchedulingInfo#updatePendingResources}\r\n        if( Not Waiting For AM Container\r\n            || (Queue Used AM Resources < Queue Max AM Resources) {\r\n          abstractUsersManager.activateApplication(user, applicationId);\r\n        }\r\n{code}\r\n\r\nHowever, I'm not sure  of the best way to get the values for a queue's {{Used AM Resources}} and {{Max AM Resources}} from this context. Those may be capacity scheduler-specific values.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2018-03-12T21:45:51.432+0000","updated":"2018-03-12T21:45:51.432+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16418782","id":"16418782","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"body":"[~eepayne] Thanks for your detailed explanation. Sorry for the delay.\r\n{quote}In this scenario, User2 wants to start App2 but User1 is consuming all resources in the queue with App1. When App1 releases a resource, however, it is not given to App2. The resource is given back to App1, which brings its Pending value down to 19. This is incorrect behavior since Queue1 has room for 2 AMs.{quote}\r\nI was trying to understand this behaviour in current code (without my patch) and come to know that AM container is being allocated to App2 only after App1 completion when cluster is running full.\r\n\r\nIn my single node pseudo setup, total cluster resources is 8192M, 8 vcores, only 1 queue (default) with 100% allocation and max am resources is 2048MB, 2 vcores as max am resource percent is 0.2. I submitted an app (say App1) through DS with num_containers as 20. While App1 is running and its pending containers is around 15, submitted second app (say App2) with num_containers as 10. I can see AM container for App2 is being allocated only after App1 completion, which is not in line with your earlier comments. Am I missing anything here?\r\n{quote}However, I'm not sure of the best way to get the values for a queue's Used AM Resources and Max AM Resources from this context. Those may be capacity scheduler-specific values.\r\n{quote}\r\nYes. But I do see some equivalents available in {{FSQueueMetrics}}.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-03-29T11:18:52.883+0000","updated":"2018-03-29T11:18:52.883+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16422631","id":"16422631","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"body":"{quote}AM container is being allocated to App2 only after App1 completion when cluster is running full.\r\n{quote}\r\n[~manirajv06@gmail.com], In the current implementation (that is, without the patch), there are a couple of things that can affect whether or not App2 will be given the freed container:\r\n - In the running queue, if {{Configured Minimum User Limit Percent}} is set to 100%, only one user can run in the queue at a time. If this is so, then the Capacity Scheduler will only assign new containers to App1 (owned by User1). However, if {{Configured Minimum User Limit Percent}} is 50% or less, the Capacity Scheduler will assign new containers to App2 (owned by User2) until they both have 50% of the queue or one stops asking for new resources.\r\n - In the running queue, if {{Used Application Master Resources}} equals {{Max Application Master Resources}}, the Capacity Scheduler will not assign an AM to App2.\r\n - The same thing happens if {{Num Schedulable Applications}} is equal to {{Max Applications}}, but that's probably not the case here.\r\n\r\nI suspect it may be the first case. Please check to make sure your queue configuration is set to allow multiple running users in the queue.\r\n{quote}{quote}However, I'm not sure of the best way to get the values for a queue's Used AM Resources and Max AM Resources from this context. Those may be capacity scheduler-specific values.\r\n{quote}\r\nYes. But I do see some equivalents available in FSQueueMetrics.\r\n{quote}\r\nThe concern is that even though they may be in both FSQueueMetrics, and CSQueueMetrics, they are not accessible at the abstract {{QueueMetrics}} layer because they have different accessors. It should be possible to add a new, abstract accessor in {{QueueMetrics}} that is implemented in FS/CS QueueMetrics.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-02T15:37:53.113+0000","updated":"2018-04-02T15:37:53.113+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16423059","id":"16423059","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"body":"{code:title=AppSchedulingInfo#updatePendingResources}\r\n        if(! this.schedulerApplicationAttempt.isWaitingForAMContainer()) {\r\n          abstractUsersManager.activateApplication(user, applicationId);\r\n        }\r\n{code}\r\nSorry for backtracking, but after thinking about this some more, I think the question that needs to be asked by {{AppSchedulingInfo#updatePendingResources}} is not \"Is this application attempt asking for an AM?\", but rather I think the question is \"Does this user have schedulable apps (including this attempt)?\"\r\n\r\nI'd like [~sunilg]'s and [~leftnoteasy]'s input on this design suggestion.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-02T20:07:27.085+0000","updated":"2018-04-02T20:07:27.085+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16423456","id":"16423456","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"body":"[~eepayne], thanks for pinging me about this, I'm a bit lost contexts of above question, could you briefly summary what is the current issue and solution being discussed?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-04-03T04:32:00.054+0000","updated":"2018-04-03T04:32:00.054+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16425249","id":"16425249","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"body":"{quote}I suspect it may be the first case. Please check to make sure your queue configuration is set to allow multiple running users in the queue.\r\n{quote}\r\nYes, you are right. I can able to run App2 by User 2 after making the config changes. On the other hand, With the patch, container is not getting allocated to App2's AM while App1 is running.\r\n{quote}The concern is that even though they may be in both FSQueueMetrics, and CSQueueMetrics, they are not accessible at the abstract QueueMetrics layer because they have different accessors. It should be possible to add a new, abstract accessor in QueueMetrics that is implemented in FS/CS QueueMetrics.\r\n{quote}\r\nYes, something similar can be done in Abstract class level to achieve this if required.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-04-04T09:37:24.471+0000","updated":"2018-04-04T09:37:24.471+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16425736","id":"16425736","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"body":"bq. could you briefly summary what is the current issue and solution being discussed?\r\n[~leftnoteasy], the latest patch ({{YARN-4606.POC.patch}}) changed the behavior of the capacity scheduler so that it would never give a container to the second app for its AM as long as the first app consumed the entire queue and had pending requests, even when the AM used is lower than AM max. I described it in more detail [above|https://issues.apache.org/jira/browse/YARN-4606?focusedCommentId=16391802&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16391802].\r\n\r\n[I suggested that one solution|https://issues.apache.org/jira/browse/YARN-4606?focusedCommentId=16396094&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16396094] would be to modify the code as follows as long as there is a way to do it in an abstract way:\r\n{code:title=AppSchedulingInfo#updatePendingResources}\r\n        if( Not Waiting For AM Container\r\n            || (Queue Used AM Resources < Queue Max AM Resources) {\r\n          abstractUsersManager.activateApplication(user, applicationId);\r\n        }\r\n{code}\r\n\r\nI suggested a way to do that, but it seems a little cumbersome.\r\n\r\nSo then I started wondering if there was a way to leverage the {{Schedulable Apps}} and {{Non-Schedulable Apps}} user info in the {{AppSchedulingInfo#updatePendingResources}} code. I looked more closely, however, and it is too early within {{AppSchedulingInfo#updatePendingResources}} to tell whether or not a new app is destined to be schedulable.\r\n\r\nSo, I think the best suggestion I have is the pseudo-code I posted above.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-04T15:42:33.155+0000","updated":"2018-04-04T15:42:33.155+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16432474","id":"16432474","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"body":"[~leftnoteasy] [~sunilg] Can you please share your views?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-04-10T15:32:37.498+0000","updated":"2018-04-10T15:32:37.498+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16443176","id":"16443176","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"body":"[~manirajv06@gmail.com], I am attaching {{YARN-4606.POC.2.patch}} that demonstrates what I am suggesting. I have teste4d it in my pseudo cluster and it will only activate a new AM if the used queue AM resources are less than the queue max AM resources, but it also fixes the problem of starvation.\r\n\r\nI have only tested this on Capacity Scheduler, not Fair Scheduler.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-18T20:49:58.174+0000","updated":"2018-04-18T20:49:58.174+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16449075","id":"16449075","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks [~eepayne] / [~manirajv06@gmail.com] for working on the fix. I just unassigned myself, please feel free to assign to you if you plan to do that.\r\n\r\nI'm going to check the patch / approach in the next two days.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-04-24T00:16:50.726+0000","updated":"2018-04-24T00:16:50.726+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16449383","id":"16449383","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"body":"Thanks [~eepayne] for the patch explaining your suggestions. I took the delta changes and started working on the Junits and testing in my pseudo cluster. I am encountering a situation where in activeUsersOfPendingApps is -ve at times (probably because of couple of calls to UsersManager#activeApplication() as part of the flow). May be, we need to take out decrement activeUsersOfPendingApps code from UsersManager#activeApplication() and can be called separately from clients. Will need to think through in detail and provide the patch.\r\n\r\nIn the meantime, [~leftnoteasy] can also share his thoughts. Thanks.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-04-24T06:39:18.612+0000","updated":"2018-04-24T06:39:18.612+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16453297","id":"16453297","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks [~eepayne] / [~manirajv06@gmail.com],\r\n\r\nHere's my understanding of the proposed approach: \r\n\r\n1) When we compute {{max-am-resource-per-user}}, we uses #active-users + #pending-users.\r\n2) When we compute {{max-user-limit}}, we use #active-users only. \r\n\r\nTo me this is correct and (seems) same as what I proposed previously:\r\n{code}\r\nWe should only consider a user is \"active\" if any of its application is active. And CS will use the \"#active-user-which-has-at-least-one-active-app\" to compute user-limit.\r\n\r\nComputation of max-am-resource-per-user needs to be updated as well. We should get a #users-which-has-pending-apps to compute max-am-resource-per-user.\r\n{code}\r\n\r\nI haven't checked very much details of the patch since [~manirajv06@gmail.com] is working on update the tests, etc. Just one suggestion is: AppSchedulingInfo is supports to cache status for pending resource, it might be better to avoid invoking SchedulerAppAttempt's method from AppSchedulingInfo.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-04-26T00:41:06.416+0000","updated":"2018-04-26T00:41:06.416+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16459882","id":"16459882","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"body":"Attaching .001 patch containing test case for CS and changes required to fix the problem (activeUsersOfPendingApps being-ve issue) mentioned in my previous comment. Also, tested the patch in my pseudo setup for CS. I am planning to run all junits (locally) after the review.\r\n\r\n{quote}AppSchedulingInfo is supports to cache status for pending resource, it might be better to avoid invoking SchedulerAppAttempt's method from AppSchedulingInfo.{quote}\r\n\r\n[~leftnoteasy] As of now, {{AppSchedulingInfo}} calls only {{SchedulerAppAttempt#isWaitingForAMContainer}} to take some decision, for which I don't see any cache. Can you please explain?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-05-01T17:20:04.457+0000","updated":"2018-05-01T17:23:18.529+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16463324","id":"16463324","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks [~manirajv06@gmail.com], \r\nSome questions: \r\n\r\n1) Does this patch handles the case that one user has multiple pending apps? (Since it doesn't store user to apps information).\r\n\r\n2) \r\n{code}\r\nabstractUsersManager.decrNumActiveUsersOfPendingApps(); \r\n{code}\r\nShould we call this inside {{SchedulerApplicationAttempt#pullNewlyUpdatedContainers}}? \r\nI think we should remove active user from pending apps once AM container get allocated.\r\n\r\n3)\r\n{code} \r\nResources.lessThan(rc, cr,\r\n                metrics.getUsedAMResources(), metrics.getMaxAMResources())\r\n{code} \r\nInstead of using metrics, it might be better to use {{SchedulerApplicationAttempt#getAppAttemptResourceUsage}} instead. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-05-04T03:29:00.342+0000","updated":"2018-05-04T03:29:00.342+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16466136","id":"16466136","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"body":"Thanks [~manirajv06@gmail.com] for your consistent and continuing efforts to fix this problem.\r\n\r\nI am doing an in-depth review, but I would like to address a few things first regarding method names and comments. I feel that it is important to be accurate in these areas in order to eliminate confusion for those maintaining this code.\r\n\r\n- All occurrences of \"atleast\" should be \"at least\"\r\n- Comment for {{AbstractUsersManager#getNumActiveUsers}}:\r\n{code:title=AbstractUsersManager#getNumActiveUsers}\r\n-   * Get number of active users i.e. users with applications which have pending\r\n-   * resource requests.\r\n+   * Get number of active users i.e. users with atleast 1 active applications\r\n{code}\r\nFor this comment, I would say \"Get number of active users i.e. users with at least 1 running application and and applications requesting resources\"\r\n- I would prefer it if the name of {{ActiveUsersOfPendingApps}} was changed everywhere to {{ActiveUsersWithOnlyPendingApps}}. This is kind of a nit, but I do feel that the rename would be more descriptive.\r\n- {{AbstractUsersManager#incrNumActiveUsersOfPendingApps}}, {{decrNumActiveUsersOfPendingApps}}, and {{getNumActiveUsersOfPendingApps}}\r\nChange description to \"number of users with only pending apps\"\r\n- {{UsersManager#activateApplication}} and {{deactivateApplication}}\r\nChange \"Active users which has atleast 1 pending apps:\" to \"Active users which have at least 1 pending app:\"\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-07T16:43:57.732+0000","updated":"2018-05-07T16:43:57.732+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16466541","id":"16466541","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"body":"{code:title=AppSchedulingInfo#updatePendingResources}\r\nif(! hasActiveUsersOfPendingAppsDecremented.get()) {\r\n    abstractUsersManager.decrNumActiveUsersOfPendingApps();\r\n    hasActiveUsersOfPendingAppsDecremented.set(true);\r\n}\r\n{code}\r\n\r\nDoes {{hasActiveUsersOfPendingAppsDecremented}} need to be atomic? What is the benefit?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-07T22:18:29.794+0000","updated":"2018-05-07T22:18:29.794+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16468872","id":"16468872","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"body":"{quote}1) Does this patch handles the case that one user has multiple pending apps? (Since it doesn't store user to apps information).{quote}\r\nPatch doesn't do anything about this case. As and when user submits an app, CS keeps increasing activeUsersOfPendingApps count as part of accepting the application irrespective of whether app has been submitted by same or different user.\r\n\r\n{quote}Should we call this inside SchedulerApplicationAttempt#pullNewlyUpdatedContainers? \r\nI think we should remove active user from pending apps once AM container get allocated{quote}\r\n\r\nWhile trying to understand this through a real testing, encountered a situation where in {{SchedulerApplicationAttempt#pullNewlyUpdatedContainers}} returns empty {{updatedContainers}} always. I was just thinking whether can we call {{abstractUsersManager.decrNumActiveUsersOfPendingApps()}} inside {{SchedulerApplicationAttempt#pullNewlyAllocatedContainers}} something like\r\n\r\n{code}\r\nif(! this.isWaitingForAMContainer() && \r\n            ! hasActiveUsersOfPendingAppsDecremented.get()) {\r\n          this.queue.getAbstractUsersManager().decrNumActiveUsersOfPendingApps();\r\n          hasActiveUsersOfPendingAppsDecremented.set(true);\r\n        }\r\n{code}\r\n\r\nIf we are planning to move calling {{decrNumActiveUsersOfPendingApps}} from {{AppSchedulingInfo#updatePendingResources}} to {{SchedulerApplicationAttempt}}, then do we still need to am usage check against max am limit? I don't think so. We faced the issue of accepting second app when we were calling {{decrNumActiveUsersOfPendingApps}} inside {{abstractUsersManager.activateApplication()}} and that too from {{AppSchedulingInfo#updatePendingResources}}. I dont think it is required anymore?\r\n\r\n{quote}Does hasActiveUsersOfPendingAppsDecremented need to be atomic? What is the benefit?{quote}\r\n\r\nNot required, I guess. Was trying to be too defensive :)\r\n\r\nWill address names and comments related review points once we conclude the flow.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-05-09T13:56:31.895+0000","updated":"2018-05-09T13:56:31.895+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16479016","id":"16479016","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"body":"Attaching .002 patch for review.\r\n\r\n{quote}Does this patch handles the case that one user has multiple pending apps? (Since it doesn't store user to apps information).{quote}\r\nStarted handling this case.\r\n{quote}Should we call this inside {{SchedulerApplicationAttempt#pullNewlyUpdatedContainers}}? \r\nI think we should remove active user from pending apps once AM container get allocated{quote}\r\nYes, inside {{SchedulerApplicationAttempt#pullNewlyAllocatedContainers}} and that too after updating containers with tokens as {{SchedulerApplicationAttempt#pullNewlyUpdatedContainers}} does takes care of INCREASE, DECREASE, PROMOTE, DEMOTE cases etc not the regular cases.\r\n{quote}Instead of using metrics, it might be better to use SchedulerApplicationAttempt#getAppAttemptResourceUsage instead.{quote}\r\nNot required, I guess as explained in previous comment.\r\n{quote}I am doing an in-depth review, but I would like to address a few things first regarding method names and comments. I feel that it is important to be accurate in these areas in order to eliminate confusion for those maintaining this code.{quote}\r\nTaken care of all related comments.\r\n\r\nIn addition to above changes, We have taken care of app being in ACCEPTED state with all AM attempts has been failed because of some reasons. We would like to decrement the count even in this case and handles this case via signalling scheduler using new event type. \r\n\r\nAlso, I am assuming app MOVE from one queue to another doesn't require changes as it happen only when app is running?\r\n\r\nThanks [~sunilg] for providing suggestions in some of the above steps.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-05-17T12:59:44.373+0000","updated":"2018-05-17T12:59:44.373+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16480628","id":"16480628","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"body":"{quote}If we are planning to move calling decrNumActiveUsersOfPendingApps from AppSchedulingInfo#updatePendingResources to SchedulerApplicationAttempt, then do we still need to am usage check against max am limit? I don't think so.{quote}\r\n\r\nI was wrong here. We need this check. Missed related changes in patch, will incorporate and update patch shortly. Please ignore .002.patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-05-18T13:14:47.418+0000","updated":"2018-05-18T13:14:47.418+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16495656","id":"16495656","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"body":"[~manirajv06@gmail.com], do you have a status on updating this patch? Do you need any help from the community?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-30T20:50:00.128+0000","updated":"2018-05-30T20:50:00.128+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16496118","id":"16496118","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"body":"[~eepayne] Thanks for reaching out proactively.\r\n\r\nSorry for the delay, was completely offline little more than a week for personal work. I resumed activities on this yesterday and facing some issues in extracting am limit using SchedulerApplicationAttempt#getAppAttemptResourceUsage. I am in touch with [~sunilg] on this particular issue. Will upload patch as early as possible.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-05-31T05:20:18.971+0000","updated":"2018-05-31T05:20:18.971+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16496539","id":"16496539","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"body":"Attached .003 patch for review.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-05-31T13:35:10.726+0000","updated":"2018-05-31T13:35:10.726+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16497232","id":"16497232","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"body":"Thanks [~manirajv06@gmail.com] for the updated patch. Here are my comments so far:\r\n- I am concerned that this implementation adds code that is specific to {{CapacityScheduler}} inside of {{AppSchedulingInfo}}. I feel that this sets a precedent that makes it hard to maintain a clean separation between abstract and specific scheduler code. Also, this only fixes the problem for the {{CapacityScheduler}}. The previous fix in patch 001 was relying on metrics and I realize that is risky, but it was a more generic fix. I would be interested to hear thoughts from [~sunilg] and [~leftnoteasy].\r\n- Only the {{CapacityScheduler}} has been changed to handle the new {{AppAMAttemptsFailedSchedulerEvent}}. Should the other schedulers handle that as well? If they don't handle it, don't we risk them getting unhandled event exceptions?\r\n- In all places where new {{LOG.debug(...)}} statementes are added, please also enclose them with {{if (LOG.isDebugEnabled())}}. This is for the sake of performance, so that the strings are not built, passed to {{LOG.debug()}}, and then thrown away if log debugging is not enabled.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-31T21:48:41.437+0000","updated":"2018-05-31T21:48:41.437+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16513874","id":"16513874","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"body":"Thanks [~eepayne] for your reviews. I was trying to address \"move app\" flow also in addition to your review comments, but stuck with it and took more time than expected. Sorry for the delay.\r\n\r\nI stuck with a case, admin trying to move an app (waiting for am container) from Queue A to Queue B. As part of this, control reaches {{AppScheduling#move}} through {{CapacityScheduler#moveApplication}}. As a first step, we will need to handle activeUsersWithPendingApps count for both queues. For example, After submitting the app to queue inside {{CapacityScheduler#moveApplication}}, we will need to do something like\r\n{quote}//Handle activeUsersWithOnlyPendingApps count appropriately\r\n if (app.isPending()) {\r\n this.getQueue(sourceQueueName).getAbstractUsersManager().\r\n decrNumActiveUsersWithOnlyPendingApps(user);\r\n this.getQueue(destQueueName).getAbstractUsersManager().\r\n incrNumActiveUsersWithOnlyPendingApps(user);\r\n }\r\n{quote}\r\nThen, Inside, {{AppScheduling#move}}, we will need to follow the logic similar to changes in {{AppScheduling#updatePendingResources}} to call {{UsersManager#activateApplications}}. Call to {{AppScheduling#updatePendingResources}} happens as part of Allocate flow every now and then. There is no such periodic calls for Move App. At some point, waitingForAMContainer become false for a given app and call to {{UsersManager#activateApplications}} happens and user got activated in normal app flow. We will need to handle the same even in Move App flow. I was thinking of waiting for some duration (possibly based on average am container allocation time? ) so that chance of getting container for am likely to happen. I am not sure. Attached patch contains this change as well. Please advise.\r\n\r\nNow, coming back to review comments:\r\n # Yes, it is scheduler specific. [~leftnoteasy] and [~sunilg] Please share your views.\r\n 2. For the first cut, I was thinking of fixing this JIRA for CS from end to end. Once fix has been ensured for CS, can apply similar changes to FS as well either with this jira or a different jira. If we are going to address FS related changes in different jira, is it ok to carry the risk you mentioned earlier? Please advise. Either, I can take help from folks who are familiar with FS flow or can hand over to them. Which ever is fine with us.\r\n 3. Addressed.\r\n\r\nAlso added Junit to check APP_AM_ATTEMPTS_FAILED flow.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-06-15T14:21:10.344+0000","updated":"2018-06-15T14:24:56.139+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16517557","id":"16517557","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"body":"I put this Jira into PATCH AVAILABLE mode so that it would kick the pre-commit build.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2018-06-19T21:26:42.022+0000","updated":"2018-06-19T21:26:42.022+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16517635","id":"16517635","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 35s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 3 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 27m 36s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 53s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 14s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 54s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 28s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  1m 15s{color} | {color:red} hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager in trunk has 1 extant Findbugs warnings. {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 28s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 46s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 43s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 43s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m  9s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 42s{color} | {color:green} the patch passed {color} |\r\n| {color:red}-1{color} | {color:red} whitespace {color} | {color:red}  0m  0s{color} | {color:red} The patch has 51 line(s) that end in whitespace. Use git apply --whitespace=fix <<patch_file>>. Refer https://git-scm.com/docs/git-apply {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 39s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  1m 31s{color} | {color:red} hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager generated 1 new + 1 unchanged - 0 fixed = 2 total (was 1) {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 28s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 70m 59s{color} | {color:red} hadoop-yarn-server-resourcemanager in the patch failed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 23s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}132m 40s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Reason || Tests ||\r\n| FindBugs | module:hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager |\r\n|  |  Switch statement found in org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler.handle(SchedulerEvent) where one case falls through to the next case  At CapacityScheduler.java:where one case falls through to the next case  At CapacityScheduler.java:[lines 1832-1838] |\r\n| Failed junit tests | hadoop.yarn.server.resourcemanager.TestRMHA |\r\n|   | hadoop.yarn.server.resourcemanager.scheduler.capacity.TestContainerAllocation |\r\n|   | hadoop.yarn.server.resourcemanager.scheduler.TestAppSchedulingInfo |\r\n|   | hadoop.yarn.server.resourcemanager.reservation.TestCapacityOverTimePolicy |\r\n|   | hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |\r\n| JIRA Issue | YARN-4606 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12927994/YARN-4606.004.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux f153c4028f72 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / 2d87592 |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_171 |\r\n| findbugs | v3.1.0-RC1 |\r\n| findbugs | https://builds.apache.org/job/PreCommit-YARN-Build/21054/artifact/out/branch-findbugs-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager-warnings.html |\r\n| whitespace | https://builds.apache.org/job/PreCommit-YARN-Build/21054/artifact/out/whitespace-eol.txt |\r\n| findbugs | https://builds.apache.org/job/PreCommit-YARN-Build/21054/artifact/out/new-findbugs-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.html |\r\n| unit | https://builds.apache.org/job/PreCommit-YARN-Build/21054/artifact/out/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/21054/testReport/ |\r\n| Max. process+thread count | 909 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager |\r\n| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/21054/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-06-20T00:07:32.359+0000","updated":"2018-06-20T00:07:32.359+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16517812","id":"16517812","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"body":"Ok, [~eepayne]. I thought of doing it once we settled down few more open issues and after thorough check on junits. anyways, not a problem. Can you share your thoughts on move app flow?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-06-20T05:28:19.267+0000","updated":"2018-06-20T05:28:19.267+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16519562","id":"16519562","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"body":"[~manirajv06@gmail.com], I am fine with using this JIRA to fix the {{CapacityScheduler}} and then using follow-on JIRAs to fix the other schedulers. However, I'm not comfortable putting {{CapacityScheduler}}-specific code in {{AppSchedulingInfo}}. I'm hoping that most of this code can be pushed down into the {{ActiveUsersManager}} (for {{FairScheduler}}) and {{UsersManager}} (for {{CapacityScheduler}}) code.\r\n\r\nI am investigating this now and should know if this is possible by early next week.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2018-06-21T16:31:45.331+0000","updated":"2018-06-21T16:31:45.331+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16520822","id":"16520822","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"body":"[~manirajv06@gmail.com], we can fix the queue application starvation problem by making most of the changes in the scheduler-specific users managers. For {{CapacityScheduler}}, all the changes can be done in the {{UsersManager}} class. For the other schedulers (FIfo, Fair, etc.), I think there needs to be some amount of changes in the scheduler infrastructure classes to support retrieving iformation such as number of pending and active apps per user, amount of queue's AM limit resources, amount of a user's used AM resources, etc. But I think that most of the changes can be done in {{ActiveUsersManager}} for other schedulers as well.\r\n\r\nI am attaching a POC patch that only modifies {{UsersManager}}. The {{UsersManager}} already keeps track of all users in the queue. Each user object keeps the number of active apps and the number of pending apps. here is the sequence of events plus proposed change:\r\n - When an application is submitted, the user object's pending apps count is incremented\r\n - If limits are not exceeded, {{LeafQueue}} activates the app\r\n -- {{Leafqueue#activateApplications}} already checks whether or not activation of an application will go over the queue's AM limit.\r\n -- If activating the application will not go over the queue's AM limit, {{Leafqueue#activateApplications}} will increment the user object's active app count and decrement the pending app count.\r\n -- However, if activating the application will go over the queue's AM limit, the user's pending app count remains the same.\r\n - The change made in {{YARN-4606.POC.3.patch}} is that {{UsersManager#activateApplication}} will check whether or not the user object has any active apps. If not, it will not continue (thus not putting the user in the {{activeUsers}} list).\r\n\r\nI have not yet analyzed the problem you pointed out above regarding moving apps to different queues.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2018-06-22T22:14:29.196+0000","updated":"2018-06-22T22:14:29.196+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16522599","id":"16522599","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"body":"[~eepayne] Thanks for the patch.\r\n\r\nAt a high level, POC is very simple from implementation perspective and changes would be minimal with this approach. At the same time, this patch is less \"strict\" in terms of updates (specifically on when? ) compared to approaches discussed in our earlier patches. For example, In earlier approach, numActiveUsersWithOnlyPendingApps would be incremented as soon as app gets activated and gets decremented as soon as AM container gets allocated. In addition, all of these things happens immediately and only after the dependent steps gets completed for sure. Whereas, new POC patch depends on the values (pendingApplications, activeApplications etc of User object), conditions before the actual work (for example, assuming AM container would be allocated successfully based on checks in LeafQueue#activateApplications) and updates numActiveUsersWithOnlyPendingApps as part of regular computeUserLimits flow. All these things is creating a slight discomfort and lead to some of the questions like\r\n\r\nWhat is the time frame that we are seeing between accepting the app and updating numActiveUsersWithOnlyPendingApps? Is this time frame acceptable? Aren't we running little slower in doing updates? Is there any chance by which AM container has been failed to allocate? Lets say, If AM container allocation goes through successfully, Would be there any delay in allocating AM containers? During this delayed duration, we are considering the user as active user rather than treating the user as \"activeUsersWithOnlyPendingApps\". Is this acceptable? I am interested in understanding your thoughts behind this tradeoff.\r\n\r\nAlso, based on our earlier discussions, We need to depend on {{activeUsers.get()}} only in certain context and sum of {{activeUsers.get()}} and {{activeUsersWithOnlyPendingApps.get()}} in some other places. But POC patch always depends on later value. I didn't understand this part.\r\n\r\nOn the other hand, We can avoid {{AppAMAttemptsFailedSchedulerEvent}} related changes completely with this new patch as anyway {{User.finishApplication()}} would be called for sure even when max AM attempts has been reached.\r\n\r\nPlease share your thoughts.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-06-25T17:48:36.576+0000","updated":"2018-06-25T17:48:36.576+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16522811","id":"16522811","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"body":"{quote}At the same time, this patch is less \"strict\" in terms of updates (specifically on when? ) compared to approaches discussed in our earlier patches.\r\n{quote}\r\nThe value for number of active apps per user used to be calculated every time through the scheduler loop, which was a performance problem. In order to avoid this heavy calculation, YARN-5889 created the {{UsersManager}}. Instead of doing the calculation every time through the loop, YARN-5889 only recalculates these values when events occurs that could affect this count like new application, app completes, new container request, completed container, etc. In the latest POC patch, {{activeUsersWithOnlyPendingApps}} is part of this flow, so it will always be updated whenever anything happens that could affect this value.\r\n{quote}Also, based on our earlier discussions, We need to depend on activeUsers.get() only in certain context and sum of activeUsers.get() and activeUsersWithOnlyPendingApps.get() in some other places. But POC patch always depends on later value. I didn't understand this part.\r\n{quote}\r\nI think you are referencing this comment from above:\r\n{quote}My understanding is that user limit would use activeUsers and things like max AM limit per user, we'd use activeUsers + activeUsersOfPendingApps\r\n{quote}\r\n{{LeafQueue#activateApplications}} is the only thing that calls {{UsersManager#getNumActiveUsers}}, which it uses to calculate the user-specific AM limit, so it's the one that needs both activeusers + {{activeUsersWithOnlyPendingApps}}.\r\n {{UsersManager#computeUserLimit}} uses only activeUsers to calculate the headroom and user limit, which is what we decided in the comment above. Is that your understanding of these comments?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2018-06-25T21:04:26.107+0000","updated":"2018-06-25T21:04:26.107+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16526328","id":"16526328","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"body":"[~eepayne] Thank you for great explanation. I am able to understand the flow better now.\r\n\r\nI revisited \"move apps\" problem which i raised earlier based on new patch and don't think it requires any changes as variables required to calculate numActiveUsersWithOnlyPendingApps are already being set through submitApplication, finishApplication etc calls. However, I am seeing an minor update issue as described below:\r\n\r\nLets say, We want to move all apps from queue, A1 to queue, B1. A1 has 4 apps (Only 2 were accommodated because of max am limit constraint. So, remaining 2 not yet activated). All these 4 apps are triggered by different users from u1 to u4. For example app1 by u1 and so on. Only for app 1 & app2, there is an allocate request in pipeline. At this point, {{numActiveUsers}} is 4 and {{numActiveUsersWithOnlyPendingApps}} is 2 in Queue, A1. Now move has been triggered. Since there were running containers for both app 1 and app 2, app3 and app4 has been activated before app 1 and app 2 in Queue, B1 as both these apps were busy in detaching and attaching containers. After the move operation and thread sleep of 5s, pulled these counts expecting u1 and u2 as ActiveUsersWithOnlyPendingApps, but couldn't able to see it. {{numActiveUsers}} is 2 as u3 and u4 had become active users and {{numActiveUsersWithOnlyPendingApps}} is 0 in Queue B1. Then, introduced an NodeUpdate event after the move operation just to force the user limit computation to see the impact on these counts. Now, can able to ActiveUsersWithOnlyPendingApps as 2 and ActiveUsers as 0 (as both u3 and u4 had become non active users by this time as there are no pending allocate request).\r\n\r\nSo, after move app operation and if there is no events (which can trigger user limit computation) for brief amount of time, am seeing incorrect {{numActiveUsersWithOnlyPendingApps}} count. Is this acceptable? or Should we trigger user limit computation after move operation like how we are doing it in other places? Please share your thoughts and correct my understanding if you see a gap","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-06-28T14:01:52.130+0000","updated":"2018-06-28T14:01:52.130+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16537497","id":"16537497","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"body":"{quote}\r\nSo, after move app operation and if there is no events (which can trigger user limit computation) for brief amount of time, am seeing incorrect numActiveUsersWithOnlyPendingApps count. Is this acceptable? or Should we trigger user limit computation after move operation like how we are doing it in other places?\r\n{quote}\r\n[~manirajv06@gmail.com], moving the apps to the other queue does trigger a recalculation of user limits since it is adding a new app to the queue and potentially a new user. Also, since it fixes itself after the nodemanager heartbeat of a few seconds (default is 1), I think that is fine.\r\n\r\nI noticed that there is another bug related to moving apps to a different queue that could affect the above use case. See YARN-8421","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2018-07-09T20:07:19.828+0000","updated":"2018-07-09T20:07:19.828+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16538043","id":"16538043","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"body":"[~eepayne] Thanks for the explanation.\r\n\r\nI've attached .005 patch containing changes and its related test cases for your review. Test cases covers the above discussed use cases as well, can be removed before committing the changes.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-07-10T04:58:22.226+0000","updated":"2018-07-10T04:58:22.226+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16538156","id":"16538156","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 39s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 26m 40s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 53s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 14s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 48s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 35s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m  9s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 27s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 43s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 39s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 39s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 10s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 41s{color} | {color:green} the patch passed {color} |\r\n| {color:red}-1{color} | {color:red} whitespace {color} | {color:red}  0m  0s{color} | {color:red} The patch has 23 line(s) that end in whitespace. Use git apply --whitespace=fix <<patch_file>>. Refer https://git-scm.com/docs/git-apply {color} |\r\n| {color:red}-1{color} | {color:red} whitespace {color} | {color:red}  0m  0s{color} | {color:red} The patch 4 line(s) with tabs. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 16s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 15s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 26s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green} 73m 35s{color} | {color:green} hadoop-yarn-server-resourcemanager in the patch passed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 23s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}133m 40s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |\r\n| JIRA Issue | YARN-4606 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12930945/YARN-4606.005.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux c6a1cccc1600 3.13.0-153-generic #203-Ubuntu SMP Thu Jun 14 08:52:28 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / 9bd5bef |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_171 |\r\n| findbugs | v3.1.0-RC1 |\r\n| whitespace | https://builds.apache.org/job/PreCommit-YARN-Build/21198/artifact/out/whitespace-eol.txt |\r\n| whitespace | https://builds.apache.org/job/PreCommit-YARN-Build/21198/artifact/out/whitespace-tabs.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/21198/testReport/ |\r\n| Max. process+thread count | 926 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager |\r\n| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/21198/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-07-10T07:16:24.062+0000","updated":"2018-07-10T07:16:24.062+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16538949","id":"16538949","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"body":"Fixed whitespace related issues.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-07-10T16:57:48.111+0000","updated":"2018-07-10T16:57:48.111+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16539156","id":"16539156","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (/) *{color:green}+1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 22s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  1s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 26m 57s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 43s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 14s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 46s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 58s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 10s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 28s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 44s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 39s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 39s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m  9s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 41s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 18s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 16s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 26s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green} 71m 42s{color} | {color:green} hadoop-yarn-server-resourcemanager in the patch passed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 24s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}131m  6s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |\r\n| JIRA Issue | YARN-4606 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12931034/YARN-4606.006.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux 0c5bd39eeee6 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / d503f65 |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_171 |\r\n| findbugs | v3.1.0-RC1 |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/21204/testReport/ |\r\n| Max. process+thread count | 912 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager |\r\n| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/21204/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-07-10T19:42:19.706+0000","updated":"2018-07-10T19:42:19.706+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16547161","id":"16547161","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"body":"Thank you, [~manirajv06@gmail.com], for the latest patch.\r\n\r\nThe code changes look good. However, I have a couple of points with the tests.\r\n\r\n- I have a general concern that these tests are not testing the fix to the starvation problem outlined in the description of this JIRA. I'm trying to determine if there is a clean way to unit test that use case.\r\n- {TestCapacityScheduler#testMoveAppWithActiveUsersWithOnlyPendingApps}}: I am concerned about new tests that take longer than necessary because the unit tests keep taking longer and longer to run. I think that the following things can be done to reduce this test time (in my build environment) from 1min 17sec to 24 sec.\r\n-- In the following code, the sleep(5000) outside of the for loop is not necessary.\r\n-- In the following code, the sleep(5000) inside of the for loop could be cut down to sleep(500).\r\n{code:title=TestCapacityScheduler#testMoveAppWithActiveUsersWithOnlyPendingApps}\r\n    Thread.sleep(5000);\r\n\r\n    //Triggering this event so that user limit computation can\r\n    //happen again\r\n    for (int i = 0; i < 10; i++) {\r\n      cs.handle(new NodeUpdateSchedulerEvent(rmNode1));\r\n      Thread.sleep(5000);\r\n   }\r\n{code}\r\n\r\n- {{TestCapacityScheduler#testMoveAppWithActiveUsersWithOnlyPendingApps1}}: I don't think this test is necessary. It takes more than 1:20 to run in my build environment, and as far as I can tell, it is verifying that the active users count is not ever updated after a move if node heartbeats are not received. However, in a running YARN installation, node heartbeats are received every second (by default). Unless I'm missing something, this isn't a use case that one would encounter in a running Hadoop system.\r\n- {{TestCapacityScheduler#setupQueueConfigurationForActiveUsersChecks}}: The parameters to {{conf.setUserLimitFactor(...)}} don't need to be 100.0f. User limit factor can be thought of as the multiplier for the amount of a queue that one user can consume. So, if the user limit factor is 1.0f, one user can use the capacity of the queue. If it is 2.0f, one user can use twice the capacity of the queue, and so forth. Since these queues have a capacity of 50%, I would set this to 2.0f.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2018-07-17T22:21:23.851+0000","updated":"2018-07-17T22:21:23.851+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16548093","id":"16548093","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"body":"Thanks [~eepayne] for your comments.\r\n\r\n \r\n{quote} I have a general concern that these tests are not testing the fix to the starvation problem outlined in the description of this JIRA. I'm trying to determine if there is a clean way to unit test that use case.\r\n{quote}\r\nOk. \r\n Since Active app starvation happens because of less resource allocation based on incorrect active users count, in addition to checking active users count, Can we check allocated resources for each user? Is it good enough? Earlier, resource allocation (amount of memory, vcores) should be lesser (half of the allocation with this patch based on the example given in jira description). Whereas, with this patch, it should be higher. \r\n (or) \r\n With this patch, app should complete faster than before because of proper resource allocation as expected. Can we simulate this in test cases and check the app completion time?\r\n\r\nWill take care of #2, #3 & #4.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-07-18T17:05:59.512+0000","updated":"2018-07-18T17:05:59.512+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16549772","id":"16549772","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"body":"bq. Will take care of #2, #3 & #4.\r\n[~manirajv06@gmail.com]. I think that once you make these changes the unit tests will be fine as they are.\r\n\r\nI tried to create a unit test that would starve the queue without this patch, but the only way I could come up with was to start a MiniYarnCluster. I think that extra overhead will not give us enough extra code coverage to justify the complexity.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2018-07-19T20:00:15.619+0000","updated":"2018-07-19T20:00:15.619+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16551016","id":"16551016","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"body":"[~eepayne] Attaching .007 patch containing #2, #3 & #4. Please check.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-07-20T17:23:19.455+0000","updated":"2018-07-20T17:23:19.455+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16551179","id":"16551179","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 29s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 25m 29s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 43s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 11s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 46s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m  0s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 12s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 26s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 44s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 37s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 37s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m  8s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 40s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 11s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 19s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 25s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 77m 35s{color} | {color:red} hadoop-yarn-server-resourcemanager in the patch failed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 25s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}133m 23s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Reason || Tests ||\r\n| Failed junit tests | hadoop.yarn.server.resourcemanager.metrics.TestSystemMetricsPublisher |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:ba1ab08 |\r\n| JIRA Issue | YARN-4606 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12932447/YARN-4606.007.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux c122c2c6bdac 4.4.0-130-generic #156-Ubuntu SMP Thu Jun 14 08:53:28 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / 5c19ee3 |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_171 |\r\n| findbugs | v3.1.0-RC1 |\r\n| unit | https://builds.apache.org/job/PreCommit-YARN-Build/21320/artifact/out/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/21320/testReport/ |\r\n| Max. process+thread count | 921 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager |\r\n| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/21320/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-07-20T19:43:49.069+0000","updated":"2018-07-20T19:43:49.069+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16552698","id":"16552698","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"body":"Unit test failure is not related to this patch","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manirajv06%40gmail.com","name":"manirajv06@gmail.com","key":"manirajv06@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manikandan R","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-07-23T11:44:31.097+0000","updated":"2018-07-23T11:44:31.097+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16553038","id":"16553038","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"body":"+1\r\nThanks for all of your work on this JIRA, [~manirajv06@gmail.com]. I will be committing this later today or tomorrow.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eepayne","name":"eepayne","key":"eepayne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10444","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10444","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10444","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10444"},"displayName":"Eric Payne","active":true,"timeZone":"Etc/UTC"},"created":"2018-07-23T16:10:19.092+0000","updated":"2018-07-23T16:10:19.092+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12932362/comment/16555962","id":"16555962","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"SUCCESS: Integrated in Jenkins build Hadoop-trunk-Commit #14641 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/14641/])\nYARN-4606. CapacityScheduler: applications could get starved because (ericp: rev 9485c9aee6e9bb935c3e6ae4da81d70b621781de)\n* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java\n* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/TestCapacityScheduler.java\n* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/TestContainerAllocation.java\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2018-07-25T16:45:52.615+0000","updated":"2018-07-25T16:45:52.615+0000"}],"maxResults":61,"total":61,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/YARN-4606/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i2rodj:"}}