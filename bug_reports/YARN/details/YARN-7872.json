{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13135414","self":"https://issues.apache.org/jira/rest/api/2/issue/13135414","key":"YARN-7872","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12313722","id":"12313722","key":"YARN","name":"Hadoop YARN","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12313722&avatarId=15135","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12313722&avatarId=15135","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12313722&avatarId=15135","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12313722&avatarId=15135"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12332791","id":"12332791","description":"2.7.2 release","name":"2.7.2","archived":false,"released":true,"releaseDate":"2016-01-25"}],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2018-02-01T13:46:00.324+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Fri Mar 23 03:23:14 UTC 2018","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/YARN-7872/watchers","watchCount":10,"isWatching":false},"created":"2018-02-01T13:16:30.547+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/1","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/blocker.svg","name":"Blocker","id":"1"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12332791","id":"12332791","description":"2.7.2 release","name":"2.7.2","archived":false,"released":true,"releaseDate":"2016-01-25"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yqwang","name":"yqwang","key":"yqwang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuqi Wang","active":true,"timeZone":"Etc/UTC"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2018-03-23T03:23:14.823+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/10002","description":"A patch for this issue has been uploaded to JIRA by a contributor.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/document.png","name":"Patch Available","id":"10002","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/4","id":4,"key":"indeterminate","colorName":"yellow","name":"In Progress"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12327621","id":"12327621","name":"capacity scheduler"},{"self":"https://issues.apache.org/jira/rest/api/2/component/12319324","id":"12319324","name":"capacityscheduler"},{"self":"https://issues.apache.org/jira/rest/api/2/component/12319322","id":"12319322","name":"resourcemanager"}],"timeoriginalestimate":null,"description":"*Issue summary:*\r\n\r\nlabeled node (i.e. node with 'not empty' node label) cannot be used to satisfy locality specified request (i.e. container request with 'not ANY' resource name and the relax locality is false).\r\n\r\n \r\n\r\n*For example:*\r\n\r\nThe node with available resource:\r\n\r\n[Resource: [MemoryMB: [100] CpuNumber: [12]] {color:#14892c}NodeLabel: [persistent]{color} {color:#f79232}HostName: \\{SRG}{color} RackName: \\{/default-rack}]\r\n\r\nThe container request:\r\n [Priority: [1] Resource: [MemoryMB: [1] CpuNumber: [1]] {color:#14892c}NodeLabel: [null]{color} {color:#f79232}HostNames: \\{SRG}{color} RackNames: {} {color:#59afe1}RelaxLocality: [false]{color}]\r\n\r\nCurrent RM capacity scheduler's behavior is that (at least for version 2.7 and 2.8), the node cannot allocate container for the request, because the node label is not matched when the leaf queue assign container.\r\n\r\n \r\n\r\n*Possible solution:*\r\n\r\nHowever, node locality and node label should be two orthogonal dimensions to select candidate nodes for container request. And the node label matching should only be executed for container request with ANY resource name, since only this kind of container request is allowed to have 'not empty' node label.\r\n\r\nSo, for container request with 'not ANY' resource name (so, we clearly know it should not have node label), we should use the requested resource name to match with the node instead of using the requested node label to match with the node. And this resource name matching should be safe, since the node whose node label is not accessible for the queue will not be sent to the leaf queue.\r\n\r\n \r\n\r\n*Discussion:*\r\n\r\nAttachment is the fix according to this principle, please help to review.\r\n\r\nWithout it, we cannot use locality to request container within these labeled nodes.\r\n\r\nIf the fix is acceptable, we should also recheck whether the same issue happens in trunk and other hadoop versions.\r\n\r\nIf not acceptable (i.e. the current behavior is by designed), so, how can we use locality to request container within these labeled nodes?","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12332791","id":"12332791","description":"2.7.2 release","name":"2.7.2","archived":false,"released":true,"releaseDate":"2016-01-25"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12341435","id":"12341435","description":"3.0.0 GA release","name":"3.0.0","archived":false,"released":true,"releaseDate":"2017-12-13"}],"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12908800","id":"12908800","filename":"YARN-7872-branch-2.7.2.001.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yqwang","name":"yqwang","key":"yqwang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuqi Wang","active":true,"timeZone":"Etc/UTC"},"created":"2018-02-01T13:24:25.159+0000","size":2736,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12908800/YARN-7872-branch-2.7.2.001.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"labeled node cannot be used to satisfy locality specified request","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yqwang","name":"yqwang","key":"yqwang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuqi Wang","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yqwang","name":"yqwang","key":"yqwang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuqi Wang","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13135414/comment/16348571","id":"16348571","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yqwang","name":"yqwang","key":"yqwang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuqi Wang","active":true,"timeZone":"Etc/UTC"},"body":"Just a init to trigger Jenkins.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yqwang","name":"yqwang","key":"yqwang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuqi Wang","active":true,"timeZone":"Etc/UTC"},"created":"2018-02-01T13:25:49.085+0000","updated":"2018-02-01T13:26:34.894+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13135414/comment/16348591","id":"16348591","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  8m 15s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |\r\n|| || || || {color:brown} branch-2.7.2 Compile Tests {color} ||\r\n| {color:red}-1{color} | {color:red} mvninstall {color} | {color:red}  1m 51s{color} | {color:red} root in branch-2.7.2 failed. {color} |\r\n| {color:red}-1{color} | {color:red} compile {color} | {color:red}  0m 29s{color} | {color:red} hadoop-yarn-server-resourcemanager in branch-2.7.2 failed with JDK v1.8.0_151. {color} |\r\n| {color:red}-1{color} | {color:red} compile {color} | {color:red}  0m 10s{color} | {color:red} hadoop-yarn-server-resourcemanager in branch-2.7.2 failed with JDK v9-internal. {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 31s{color} | {color:green} branch-2.7.2 passed {color} |\r\n| {color:red}-1{color} | {color:red} mvnsite {color} | {color:red}  0m 17s{color} | {color:red} hadoop-yarn-server-resourcemanager in branch-2.7.2 failed. {color} |\r\n| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  0m 10s{color} | {color:red} hadoop-yarn-server-resourcemanager in branch-2.7.2 failed. {color} |\r\n| {color:red}-1{color} | {color:red} javadoc {color} | {color:red}  0m 10s{color} | {color:red} hadoop-yarn-server-resourcemanager in branch-2.7.2 failed with JDK v1.8.0_151. {color} |\r\n| {color:red}-1{color} | {color:red} javadoc {color} | {color:red}  0m 10s{color} | {color:red} hadoop-yarn-server-resourcemanager in branch-2.7.2 failed with JDK v9-internal. {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:red}-1{color} | {color:red} mvninstall {color} | {color:red}  0m  9s{color} | {color:red} hadoop-yarn-server-resourcemanager in the patch failed. {color} |\r\n| {color:red}-1{color} | {color:red} compile {color} | {color:red}  0m  9s{color} | {color:red} hadoop-yarn-server-resourcemanager in the patch failed with JDK v1.8.0_151. {color} |\r\n| {color:red}-1{color} | {color:red} javac {color} | {color:red}  0m  9s{color} | {color:red} hadoop-yarn-server-resourcemanager in the patch failed with JDK v1.8.0_151. {color} |\r\n| {color:red}-1{color} | {color:red} compile {color} | {color:red}  0m 10s{color} | {color:red} hadoop-yarn-server-resourcemanager in the patch failed with JDK v9-internal. {color} |\r\n| {color:red}-1{color} | {color:red} javac {color} | {color:red}  0m 10s{color} | {color:red} hadoop-yarn-server-resourcemanager in the patch failed with JDK v9-internal. {color} |\r\n| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 25s{color} | {color:orange} hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager: The patch generated 2 new + 816 unchanged - 1 fixed = 818 total (was 817) {color} |\r\n| {color:red}-1{color} | {color:red} mvnsite {color} | {color:red}  0m 11s{color} | {color:red} hadoop-yarn-server-resourcemanager in the patch failed. {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  0m 10s{color} | {color:red} hadoop-yarn-server-resourcemanager in the patch failed. {color} |\r\n| {color:red}-1{color} | {color:red} javadoc {color} | {color:red}  0m  9s{color} | {color:red} hadoop-yarn-server-resourcemanager in the patch failed with JDK v1.8.0_151. {color} |\r\n| {color:red}-1{color} | {color:red} javadoc {color} | {color:red}  0m 10s{color} | {color:red} hadoop-yarn-server-resourcemanager in the patch failed with JDK v9-internal. {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red}  0m 10s{color} | {color:red} hadoop-yarn-server-resourcemanager in the patch failed with JDK v9-internal. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 22s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black} 15m 17s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:date2018-02-01 |\r\n| JIRA Issue | YARN-7872 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12908800/YARN-7872-branch-2.7.2.001.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux 96c5df8dad1b 4.4.0-64-generic #85-Ubuntu SMP Mon Feb 20 11:50:30 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | branch-2.7.2 / b165c4f |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 9-internal |\r\n| Multi-JDK versions |  /usr/lib/jvm/java-8-openjdk-amd64:1.8.0_151 /usr/lib/jvm/java-9-openjdk-amd64:9-internal |\r\n| mvninstall | https://builds.apache.org/job/PreCommit-YARN-Build/19564/artifact/out/branch-mvninstall-root.txt |\r\n| compile | https://builds.apache.org/job/PreCommit-YARN-Build/19564/artifact/out/branch-compile-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager-jdk1.8.0_151.txt |\r\n| compile | https://builds.apache.org/job/PreCommit-YARN-Build/19564/artifact/out/branch-compile-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager-jdk9-internal.txt |\r\n| mvnsite | https://builds.apache.org/job/PreCommit-YARN-Build/19564/artifact/out/branch-mvnsite-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |\r\n| findbugs | https://builds.apache.org/job/PreCommit-YARN-Build/19564/artifact/out/branch-findbugs-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |\r\n| javadoc | https://builds.apache.org/job/PreCommit-YARN-Build/19564/artifact/out/branch-javadoc-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager-jdk1.8.0_151.txt |\r\n| javadoc | https://builds.apache.org/job/PreCommit-YARN-Build/19564/artifact/out/branch-javadoc-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager-jdk9-internal.txt |\r\n| mvninstall | https://builds.apache.org/job/PreCommit-YARN-Build/19564/artifact/out/patch-mvninstall-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |\r\n| compile | https://builds.apache.org/job/PreCommit-YARN-Build/19564/artifact/out/patch-compile-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager-jdk1.8.0_151.txt |\r\n| javac | https://builds.apache.org/job/PreCommit-YARN-Build/19564/artifact/out/patch-compile-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager-jdk1.8.0_151.txt |\r\n| compile | https://builds.apache.org/job/PreCommit-YARN-Build/19564/artifact/out/patch-compile-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager-jdk9-internal.txt |\r\n| javac | https://builds.apache.org/job/PreCommit-YARN-Build/19564/artifact/out/patch-compile-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager-jdk9-internal.txt |\r\n| checkstyle | https://builds.apache.org/job/PreCommit-YARN-Build/19564/artifact/out/diff-checkstyle-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |\r\n| mvnsite | https://builds.apache.org/job/PreCommit-YARN-Build/19564/artifact/out/patch-mvnsite-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |\r\n| findbugs | https://builds.apache.org/job/PreCommit-YARN-Build/19564/artifact/out/patch-findbugs-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |\r\n| javadoc | https://builds.apache.org/job/PreCommit-YARN-Build/19564/artifact/out/patch-javadoc-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager-jdk1.8.0_151.txt |\r\n| javadoc | https://builds.apache.org/job/PreCommit-YARN-Build/19564/artifact/out/patch-javadoc-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager-jdk9-internal.txt |\r\n| unit | https://builds.apache.org/job/PreCommit-YARN-Build/19564/artifact/out/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager-jdk9-internal.txt |\r\n| JDK v9-internal  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/19564/testReport/ |\r\n| Max. process+thread count | 147 (vs. ulimit of 5000) |\r\n| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager |\r\n| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/19564/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-02-01T13:46:00.324+0000","updated":"2018-02-01T13:46:00.324+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13135414/comment/16351675","id":"16351675","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yqwang","name":"yqwang","key":"yqwang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuqi Wang","active":true,"timeZone":"Etc/UTC"},"body":"[~leftnoteasy], could you please take a look at this? :)\r\n\r\nAppreciate your insights!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yqwang","name":"yqwang","key":"yqwang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuqi Wang","active":true,"timeZone":"Etc/UTC"},"created":"2018-02-04T08:16:40.128+0000","updated":"2018-02-04T08:16:40.128+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13135414/comment/16406156","id":"16406156","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yqwang","name":"yqwang","key":"yqwang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuqi Wang","active":true,"timeZone":"Etc/UTC"},"body":"[~jlowe], could you please also take a look at this?\r\nOnly a little change and seems trunk also has the same issue.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yqwang","name":"yqwang","key":"yqwang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuqi Wang","active":true,"timeZone":"Etc/UTC"},"created":"2018-03-20T11:19:08.841+0000","updated":"2018-03-20T11:19:08.841+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13135414/comment/16407094","id":"16407094","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"[~leftnoteasy] would be better at answering this, as he knows node labels far better than I do.  As I understand it, node labels are effectively hard-partitioning the cluster (especially back in 2.7).  For the simple case of a single node label, it's like smashing two clusters together where one cluster's nodes have the label and the other cluster's nodes do not.  If you want to allocate on the unlabeled nodes, you don't specify any label with your request.  If you want to allocate on the labeled nodes, you specify the label with your request.\r\n\r\nIn that case node locality and node label are _not_ orthogonal.  For example, a node label can be used to reserve nodes for certain apps.  If any other app comes along with an ANY request and plunks down containers on those nodes, that totally defeats the purpose of that node label.  So I believe this is working as designed.\r\n\r\nbq. If not acceptable (i.e. the current behavior is by designed), so, how can we use locality to request container within these labeled nodes?\r\n\r\nIt's like I stated above.  If you want the resource to be placed on the labeled nodes, put the label in your request.  If you want the request to be placed on unlabeled nodes, omit the label from your request.  If you want the request to go anywhere, labeled or not, I don't think exclusive node labels allow for that functionality, but I may be missing something there.  I do know that allowing apps asking for ANY resource without a label to start using resources on labeled nodes will break some setups.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2018-03-20T21:31:26.149+0000","updated":"2018-03-20T21:31:26.149+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13135414/comment/16407433","id":"16407433","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yqwang","name":"yqwang","key":"yqwang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuqi Wang","active":true,"timeZone":"Etc/UTC"},"body":"Thanks [~jlowe] for the reply :)\r\n\r\nI agree that node label is used to partition nodes in the cluster. \r\n\r\nThis patch does not break it, since user still can use *node label* to select nodes he wants.\r\n\r\nWhat the patch provides more is that, it can also allow user to use *node locality* (such as a specific node) to select nodes within a specific nodelabel.\r\n\r\nFor example, we have 2 nodes, \r\n\r\n[Resource: [MemoryMB: [100] CpuNumber: [12]] {color:#14892c}NodeLabel: [persistent]{color} {color:#f79232}HostName: \\{A}{color} RackName: \\{/default-rack}]\r\n\r\n[Resource: [MemoryMB: [100] CpuNumber: [12]] {color:#14892c}NodeLabel: [persistent]{color} {color:#f79232}HostName: \\{B}{color} RackName: \\{/default-rack}]\r\n\r\nBefore this patch, user cannot ask for only A node, since A node has a nodelabel persistent and YARN does not allow to specify locality with nodelabel.\r\n\r\nAfter this patch, use can ask for only A node.\r\n\r\nSo node locality and node label can be orthogonal, and this can provide more controllability to select nodes for user.\r\n\r\n \r\n\r\nBesides, queue is used to control which user can access which node label in how much capacity. This patch does not break it, since only the nodes (nodelabel) which can be accessed by target queue can be sent in to LeafQueue#assignContainer.\r\n\r\nSo the ACL is still under controlled, and the patch just breaks that \"labeled nodes can only be allocated for labeled request\". \r\n\r\nOverall, my point is that, node locality and node label can be orthogonal for user to select nodes.\r\n\r\n.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yqwang","name":"yqwang","key":"yqwang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuqi Wang","active":true,"timeZone":"Etc/UTC"},"created":"2018-03-21T04:11:48.215+0000","updated":"2018-03-21T04:11:48.215+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13135414/comment/16407438","id":"16407438","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yqwang","name":"yqwang","key":"yqwang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuqi Wang","active":true,"timeZone":"Etc/UTC"},"body":"{quote}If not acceptable (i.e. the current behavior is by designed), so, how can we use locality to request container within these labeled nodes?\r\n{quote}\r\nWhat my problem here is that, given the 2 nodes in my previous comment, how can I just ask for only Node A (NodeLocality = HostName A and RelaxLocality= false) instead of ask for both A and B (NodeLabel = persistent)?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yqwang","name":"yqwang","key":"yqwang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuqi Wang","active":true,"timeZone":"Etc/UTC"},"created":"2018-03-21T04:21:23.717+0000","updated":"2018-03-21T04:22:45.446+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13135414/comment/16407448","id":"16407448","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"body":"[~yqwang], \r\n\r\nLike [~jlowe] mentioned, currently we don't have an option to say \"I don't care about node partition\". Non-exclusive node partition has different semantics. The reason why we don't have it is, we need to calculate total pending resource to each partition to make sure preemption can work properly. \r\n\r\nExisting the patch is not backward compatible: it breaks behavior of an app requests locality + node partition. Before your patch, the behavior is, if requested locality is under requested partition, it can be allocated, otherwise it will keep in pending state. After your patch, requested partition will be silently ignored, which is not ideal. And it breaks how we calculate pending resource of each partition.\r\n\r\nUnfortunately I cannot think of a way to make it work. The good thing is, In practice it may not be that bad:\r\n * For traditional batch jobs, like MR/Spark, it will downgrade to rack/offswitch read.\r\n * For hard locality (relax locality == false), this causes task cannot get allocated. This happens under misconfiguration, which is not normal case as well.\r\n\r\nThoughts?\r\n\r\n ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-03-21T04:31:28.821+0000","updated":"2018-03-21T04:31:28.821+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13135414/comment/16407493","id":"16407493","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yqwang","name":"yqwang","key":"yqwang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuqi Wang","active":true,"timeZone":"Etc/UTC"},"body":"Thanks [~leftnoteasy].\r\n{quote}Existing the patch is not backward compatible: it breaks behavior of an app requests locality + node partition. Before your patch, the behavior is, if requested locality is under requested partition, it can be allocated, otherwise it will keep in pending state. After your patch, requested partition will be silently ignored, which is not ideal. And it breaks how we calculate pending resource of each partition.\r\n{quote}\r\nSeems the behavior is that YARN just *do not allow* to specify node locality + node partition together, so it is meaningless to talk about \"ignore one and take another\". Please check below code in both 2.7 and trunk:\r\n\r\n \r\n{code:java}\r\n// we don't allow specify label expression other than resourceName=ANY now\r\nif (!ResourceRequest.ANY.equals(resReq.getResourceName())\r\n    && labelExp != null && !labelExp.trim().isEmpty()) {\r\n  throw new InvalidLabelResourceRequestException(\r\n      \"Invalid resource request, queue=\" + queueInfo.getQueueName()\r\n          + \" specified node label expression in a \"\r\n          + \"resource request has resource name = \"\r\n          + resReq.getResourceName());\r\n}\r\n{code}\r\n \r\n\r\n \r\n\r\nSo, I think the behavior is the same before and after the patch, i.e.:\r\n\r\nIf an app requests locality + node partition, an InvalidLabelResourceRequestException will be throw (request failed).\r\n\r\n \r\n\r\nWhat the patch does is that, it allow user to just specify locality and without specify nodelabel to request one specific labeled node.\r\n\r\n \r\n\r\nThe pending resource of each partition is really a good concern.\r\n\r\nAny plan to totally support node locality to work with node label?\r\n\r\n \r\n\r\nThanks again :)\r\n\r\n \r\n\r\n ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yqwang","name":"yqwang","key":"yqwang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuqi Wang","active":true,"timeZone":"Etc/UTC"},"created":"2018-03-21T05:54:23.676+0000","updated":"2018-03-21T05:56:05.321+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13135414/comment/16407500","id":"16407500","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yqwang","name":"yqwang","key":"yqwang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuqi Wang","active":true,"timeZone":"Etc/UTC"},"body":"For deep learning jobs, the performance is very important, so the locality (such as Infiniband) is also very important.\r\n\r\nBut these jobs also want to use labeled nodes, such as labeled with FPGA (Type), GPU (Type) etc.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yqwang","name":"yqwang","key":"yqwang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuqi Wang","active":true,"timeZone":"Etc/UTC"},"created":"2018-03-21T06:01:11.894+0000","updated":"2018-03-21T06:02:39.266+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13135414/comment/16410158","id":"16410158","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"body":"[~yqwang], \r\n{code:java}\r\n// we don't allow specify label expression other than resourceName=ANY now\r\nif (!ResourceRequest.ANY.equals(resReq.getResourceName())\r\n    && labelExp != null && !labelExp.trim().isEmpty()) {\r\n  throw new InvalidLabelResourceRequestException(\r\n      \"Invalid resource request, queue=\" + queueInfo.getQueueName()\r\n          + \" specified node label expression in a \"\r\n          + \"resource request has resource name = \"\r\n          + resReq.getResourceName());\r\n}{code}\r\n\r\nActually this is a misunderstanding, we may need to improve comment a bit: \r\nCurrently we support using locality + partition at the same time. But the partition (nodeLabelExpression) should be only set on resourceName == *. Let's say:\r\n{code}\r\nPriority = 1\r\n  ResourceName = ANY, labelExpression = \"A\" \r\n  ResourceName = \"/rack1\", labelExpression = null\r\n  ResourceName = \"host1\", labelExpression = null, relaxLocality = false\r\n{code} \r\n\r\nIn this case, the \"host1\" hard locality will be respected when host1 is under partition==A. \r\n\r\nWe should not silently ignore fields in ResourceRequest, for your requirement, you may take a look at YARN-6592 (which plans to support node attribute YARN-3409), delayed_or (Reference to YARN-6592 design doc), etc. If user specified conflict requirement (like hard locality to a node, but the node is not under specified node partition), scheduler should either reject the resource request (ideal) or keep it pending (current behavior). \r\n\r\nPlease let me know your thoughts.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-03-22T19:24:21.384+0000","updated":"2018-03-22T19:24:21.384+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13135414/comment/16410161","id":"16410161","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"body":"For above behavior, you can take a look at {{LocalityAppPlacementAllocator#updateNodeLabels}}:\r\n\r\n{code}\r\n  private void updateNodeLabels(ResourceRequest request) {\r\n    String resourceName = request.getResourceName();\r\n    if (resourceName.equals(ResourceRequest.ANY)) {\r\n      ResourceRequest previousAnyRequest =\r\n          getResourceRequest(resourceName);\r\n\r\n      // When there is change in ANY request label expression, we should\r\n      // update label for all resource requests already added of same\r\n      // priority as ANY resource request.\r\n      if ((null == previousAnyRequest) || hasRequestLabelChanged(\r\n          previousAnyRequest, request)) {\r\n        for (ResourceRequest r : resourceRequestMap.values()) {\r\n          if (!r.getResourceName().equals(ResourceRequest.ANY)) {\r\n            r.setNodeLabelExpression(request.getNodeLabelExpression());\r\n          }\r\n        }\r\n      }\r\n    } else{\r\n      ResourceRequest anyRequest = getResourceRequest(ResourceRequest.ANY);\r\n      if (anyRequest != null) {\r\n        request.setNodeLabelExpression(anyRequest.getNodeLabelExpression());\r\n      }\r\n    }\r\n  }\r\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-03-22T19:26:03.248+0000","updated":"2018-03-22T19:26:03.248+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13135414/comment/16410746","id":"16410746","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yqwang","name":"yqwang","key":"yqwang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuqi Wang","active":true,"timeZone":"Etc/UTC"},"body":"Thanks [~leftnoteasy] for YARN-6592.\r\n\r\nDoes the \"Rich placement constraints\" can also be worked for the labeled nodes?\r\n\r\nIf yes, I think it may also help on this JIRA.\r\n\r\nI will take a look in details later.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yqwang","name":"yqwang","key":"yqwang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuqi Wang","active":true,"timeZone":"Etc/UTC"},"created":"2018-03-23T03:23:14.823+0000","updated":"2018-03-23T03:23:14.823+0000"}],"maxResults":13,"total":13,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/YARN-7872/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i3pnhr:"}}