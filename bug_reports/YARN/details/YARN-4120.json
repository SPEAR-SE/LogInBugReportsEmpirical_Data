{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12862083","self":"https://issues.apache.org/jira/rest/api/2/issue/12862083","key":"YARN-4120","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12313722","id":"12313722","key":"YARN","name":"Hadoop YARN","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12313722&avatarId=15135","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12313722&avatarId=15135","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12313722&avatarId=15135","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12313722&avatarId=15135"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/3","id":"3","description":"The problem is a duplicate of an existing issue.","name":"Duplicate"},"customfield_12312322":null,"customfield_12310220":"2015-09-06T14:28:08.746+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Thu Mar 10 18:37:30 UTC 2016","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_31085811234_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2016-08-31T03:45:05.056+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/YARN-4120/watchers","watchCount":10,"isWatching":false},"created":"2015-09-06T08:48:15.383+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"issuelinks":[{"id":"12479123","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12479123","type":{"id":"12310010","name":"Incorporates","inward":"is part of","outward":"incorporates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310010"},"inwardIssue":{"id":"12946005","key":"YARN-4752","self":"https://issues.apache.org/jira/rest/api/2/issue/12946005","fields":{"summary":"FairScheduler should preempt for a ResourceRequest and all preempted containers should be on the same node","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}},{"id":"12437092","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12437092","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12862645","key":"YARN-4134","self":"https://issues.apache.org/jira/rest/api/2/issue/12862645","fields":{"summary":"FairScheduler preemption stops at queue level that all child queues are not over their fairshare","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}},{"id":"12436870","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12436870","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12859613","key":"YARN-4090","self":"https://issues.apache.org/jira/rest/api/2/issue/12859613","fields":{"summary":"Make Collections.sort() more efficient by caching resource usage","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/7","id":"7","description":"The sub-task of the issue","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype","name":"Sub-task","subtask":true,"avatarId":21146}}}}],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2016-08-31T03:49:02.767+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12322906","id":"12322906","name":"fairscheduler","description":"Fair Scheduler"}],"timeoriginalestimate":null,"description":"When compute resource usage for Schedulables, the following code is envolved,\n{{FSAppAttempt.getResourceUsage}},\n{code}\npublic Resource getResourceUsage() {\n  return Resources.subtract(getCurrentConsumption(), getPreemptedResources());\n}\n{code}\nand this value is aggregated to FSLeafQueues and FSParentQueues. In my opinion, taking {{preemptedResource}} into account here is not reasonable, there are two main reasons,\n# it is something in future, i.e., even though these resources are marked as preempted, it is currently used by app, and these resources will be subtracted from {{currentCosumption}} once the preemption is finished. it's not reasonable to make arrange for it ahead of time. \n# there's another problem here, consider following case,\n{code}\n            root\n           /    \\\n      queue1   queue2\n      /    \\\nqueue1.3, queue1.4\n{code}\nsuppose queue1.3 need resource and it can preempt resources from queue1.4, the preemption happens in the interior of queue1. But when compute resource usage of queue1, {{queue1.resourceUsage = it's_current_resource_usage - preemption}} according to the current code, which is unfair to queue2 when doing resource allocating.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"FSAppAttempt.getResourceUsage() should not take preemptedResource into account","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xinxianyin","name":"xinxianyin","key":"xinxianyin","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Xianyin Xin","active":true,"timeZone":"Asia/Shanghai"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xinxianyin","name":"xinxianyin","key":"xinxianyin","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Xianyin Xin","active":true,"timeZone":"Asia/Shanghai"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12862083/comment/14732394","id":"14732394","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kasha","name":"kasha","key":"kasha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":true,"timeZone":"America/Los_Angeles"},"body":"Good catch, [~xinxianyin]. \n\nI believe the reason we are subtracting preempted resources is so we don't preempt more resources from the same queue. We might have to track that information separately. [~asuresh], [~ashwinshankar77] - thoughts? ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kasha","name":"kasha","key":"kasha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-09-06T14:28:08.746+0000","updated":"2015-09-06T14:28:08.746+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12862083/comment/14733235","id":"14733235","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xinxianyin","name":"xinxianyin","key":"xinxianyin","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Xianyin Xin","active":true,"timeZone":"Asia/Shanghai"},"body":"Thanks [~kasha]. How about distinguishing getResourceUsage() (the current gross resource usage) and getNetResourceUsage() (the current gross resource usage minus preempted)? The latter are used for preemption related calculations and the former for others?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xinxianyin","name":"xinxianyin","key":"xinxianyin","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Xianyin Xin","active":true,"timeZone":"Asia/Shanghai"},"created":"2015-09-07T04:15:29.059+0000","updated":"2015-09-07T04:15:29.059+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12862083/comment/14733916","id":"14733916","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"body":"[~kasha@cloudera.com], tracking usage and (usage - preemption) information separately makes sense to me.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashwinshankar77","name":"ashwinshankar77","key":"ashwinshankar77","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashwin Shankar","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-09-07T16:57:13.475+0000","updated":"2015-09-07T16:57:13.475+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12862083/comment/14735952","id":"14735952","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xinxianyin","name":"xinxianyin","key":"xinxianyin","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Xianyin Xin","active":true,"timeZone":"Asia/Shanghai"},"body":"Hi [~kasha], there's another issue in the current preemption logic, it's in {{FSParentQueue.java}} and {{FSLeafQueue.java}},\n{code}\n  public RMContainer preemptContainer() {\n    RMContainer toBePreempted = null;\n\n    // Find the childQueue which is most over fair share\n    FSQueue candidateQueue = null;\n    Comparator<Schedulable> comparator = policy.getComparator();\n\n    readLock.lock();\n    try {\n      for (FSQueue queue : childQueues) {\n        if (candidateQueue == null ||\n            comparator.compare(queue, candidateQueue) > 0) {\n          candidateQueue = queue;\n        }\n      }\n    } finally {\n      readLock.unlock();\n    }\n\n    // Let the selected queue choose which of its container to preempt\n    if (candidateQueue != null) {\n      toBePreempted = candidateQueue.preemptContainer();\n    }\n    return toBePreempted;\n  }\n{code}\n{code}\n  public RMContainer preemptContainer() {\n    RMContainer toBePreempted = null;\n\n    // If this queue is not over its fair share, reject\n    if (!preemptContainerPreCheck()) {\n      return toBePreempted;\n    }\n{code}\nIf the queue's hierarchy like that in the *Description*, suppose queue1 and queue2 have the same weight, and the cluster has 8 containers, 4 occupied by queue1.1 and 4 occupied by queue2. If new app was added in queue1.2, 2 containers should be preempted from queue1.1. However, according the above code, queue1 and queue2 are both at their fairshare, so the preemption will not happen.\n\nSo if all of the childqueues at any level are at their fairshare, preemption will not happen even though there is/are resource deficit in some leafqueues.\n\nI think we have to drop this logic in this case. As a candidate, we can calculates an ideal preemption distribution by traversing the queues. Any thoughts?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xinxianyin","name":"xinxianyin","key":"xinxianyin","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Xianyin Xin","active":true,"timeZone":"Asia/Shanghai"},"created":"2015-09-09T01:26:54.326+0000","updated":"2015-09-09T01:26:54.326+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12862083/comment/14736100","id":"14736100","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kasha","name":"kasha","key":"kasha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":true,"timeZone":"America/Los_Angeles"},"body":"That is also a valid concern. Can we track it in a separate JIRA? \n\nThe preemption logic definitely needs revisiting. YARN-2154 is a starting point. [~asuresh] and I have been considering significant logic changes to better accommodate both preemption and future features like node-labeling, but haven't found the time to write it up and post here. \n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kasha","name":"kasha","key":"kasha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-09-09T03:42:43.696+0000","updated":"2015-09-09T03:42:43.696+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12862083/comment/14736130","id":"14736130","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xinxianyin","name":"xinxianyin","key":"xinxianyin","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Xianyin Xin","active":true,"timeZone":"Asia/Shanghai"},"body":"Create YARN-4134 to track it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xinxianyin","name":"xinxianyin","key":"xinxianyin","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Xianyin Xin","active":true,"timeZone":"Asia/Shanghai"},"created":"2015-09-09T04:12:41.188+0000","updated":"2015-09-09T04:12:41.188+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12862083/comment/14739974","id":"14739974","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xinxianyin","name":"xinxianyin","key":"xinxianyin","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Xianyin Xin","active":true,"timeZone":"Asia/Shanghai"},"body":"Link to YARN-4134, the two can be solved together.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xinxianyin","name":"xinxianyin","key":"xinxianyin","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Xianyin Xin","active":true,"timeZone":"Asia/Shanghai"},"created":"2015-09-11T01:14:45.291+0000","updated":"2015-09-11T01:14:45.291+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12862083/comment/14741974","id":"14741974","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=asuresh","name":"asuresh","key":"asuresh","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arun Suresh","active":true,"timeZone":"America/Los_Angeles"},"body":"Currently, pre-emption happens in two passes:\n\n1) Iterate through the leaf Queues, find resource deficits (sum of resources to be preempted to from other apps to allow apps below share to run)\n2) iterate through Schedulables and pre-empt enough containers to match the resource collected in 1.\n\nOne goal of YARN-2154 (when its ready) is to try to address the issue brought up here, wherein, instead of asking a root queue to find Schedulables within its hierarchy that can pre-empt containers, it tries to match an actual resource ask (by an app below fair share) with containers from apps (above fair share).\n\nI believe the above logic might solve both issues raised here.. thoughts ?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=asuresh","name":"asuresh","key":"asuresh","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arun Suresh","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-09-12T08:41:11.581+0000","updated":"2015-09-12T08:41:11.581+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12862083/comment/14742793","id":"14742793","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xinxianyin","name":"xinxianyin","key":"xinxianyin","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Xianyin Xin","active":true,"timeZone":"Asia/Shanghai"},"body":"hi [~asuresh], thanks for your comment. I've go through YARN-2154, i believe it is a nice solution for the problems of current preemption logic. But i think the current patch of YARN-2154 could not solve the issue raised in this jira (please correct me if i wrongly understood YARN-2154.). We should distinguish {{usage}} and {{usage - preemption}} in {{getResourceUsgae}}, because {{getResourceUsage}} is used both by the preemption logic and the resource allocation logic. Of course we can consider this in the new implemention in YARN-2154 and solve them together.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xinxianyin","name":"xinxianyin","key":"xinxianyin","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Xianyin Xin","active":true,"timeZone":"Asia/Shanghai"},"created":"2015-09-14T01:55:37.922+0000","updated":"2015-09-14T01:55:37.922+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12862083/comment/14742812","id":"14742812","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xinxianyin","name":"xinxianyin","key":"xinxianyin","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Xianyin Xin","active":true,"timeZone":"Asia/Shanghai"},"body":"Hi [~kasha], [~asuresh], [~ashwinshankar77], now both the preemption logic and resource allocation logic uses {{comparator}} to sort the {{Schedulables}}. I think we have to introduce a different comparator to separate {{usage}} and {{usage - preemption}}, just as the patch in YARN-4134. There're also some discussion on changing {{Comparator.compare()}} in YARN-3453. I think for a collection of comparables, we can use different comparators to compare different attributes for different purpose. Any thoughts?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xinxianyin","name":"xinxianyin","key":"xinxianyin","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Xianyin Xin","active":true,"timeZone":"Asia/Shanghai"},"created":"2015-09-14T02:29:53.561+0000","updated":"2015-09-14T02:29:53.561+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12862083/comment/15189695","id":"15189695","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kasha","name":"kasha","key":"kasha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":true,"timeZone":"America/Los_Angeles"},"body":"[~xinxianyin] - splitting out getResourceUsage and getNetResourceUsage makes sense, but can we wait until YARN-4752 is done? ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kasha","name":"kasha","key":"kasha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-03-10T18:37:30.020+0000","updated":"2016-03-10T18:37:30.020+0000"}],"maxResults":11,"total":11,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/YARN-4120/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i2jtzr:"}}