{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13157660","self":"https://issues.apache.org/jira/rest/api/2/issue/13157660","key":"YARN-8255","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12313722","id":"12313722","key":"YARN","name":"Hadoop YARN","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12313722&avatarId=15135","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12313722&avatarId=15135","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12313722&avatarId=15135","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12313722&avatarId=15135"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2018-05-07T18:13:02.874+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Fri May 25 16:34:13 UTC 2018","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/YARN-8255/watchers","watchCount":4,"isWatching":false},"created":"2018-05-07T17:53:00.391+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"issuelinks":[{"id":"12533471","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12533471","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"13148386","key":"YARN-8080","self":"https://issues.apache.org/jira/rest/api/2/issue/13148386","fields":{"summary":"YARN native service should support component restart policy","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.svg","name":"Critical","id":"2"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/3","id":"3","description":"A task that needs to be done.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21148&avatarType=issuetype","name":"Task","subtask":false,"avatarId":21148}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=suma.shivaprasad","name":"suma.shivaprasad","key":"suma.shivaprasad","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suma Shivaprasad","active":true,"timeZone":"Asia/Kolkata"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2018-05-25T16:34:13.544+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12331058","id":"12331058","name":"yarn-native-services"}],"timeoriginalestimate":null,"description":"YARN-8080 implements restart capabilities for service component instances. YARN service components should add an option to disallow flexing to support workloads which are essentially batch/iterative jobs which terminate with restart_policy=NEVER/ON_FAILURE. This could be disabled by default for components where restart_policy=NEVER/ON_FAILURE and enabled by default when restart_policy=ALWAYS(which is the default restart_policy) unless explicitly set at the service spec.\r\n\r\nThe option could be exposed as part of the component spec as \"allow_flexing\". \r\n\r\ncc [~billie.rinaldi] [~gsaha] [~eyang] [~csingh] [~wangda]\r\n\r\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Allow option to disable flex for a service component ","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=suma.shivaprasad","name":"suma.shivaprasad","key":"suma.shivaprasad","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suma Shivaprasad","active":true,"timeZone":"Asia/Kolkata"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=suma.shivaprasad","name":"suma.shivaprasad","key":"suma.shivaprasad","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suma Shivaprasad","active":true,"timeZone":"Asia/Kolkata"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157660/comment/16466268","id":"16466268","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=billie.rinaldi","name":"billie.rinaldi","key":"billie.rinaldi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=billie.rinaldi&avatarId=30233","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=billie.rinaldi&avatarId=30233","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=billie.rinaldi&avatarId=30233","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=billie.rinaldi&avatarId=30233"},"displayName":"Billie Rinaldi","active":true,"timeZone":"America/New_York"},"body":"I'm not sure this configuration parameter is necessary. Only the launching user can flex the service, so this user should know whether flexing makes sense for components of their service. I am also not sure about having different defaults for different policies; it seems like this will be confusing and require complex documentation.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=billie.rinaldi","name":"billie.rinaldi","key":"billie.rinaldi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=billie.rinaldi&avatarId=30233","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=billie.rinaldi&avatarId=30233","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=billie.rinaldi&avatarId=30233","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=billie.rinaldi&avatarId=30233"},"displayName":"Billie Rinaldi","active":true,"timeZone":"America/New_York"},"created":"2018-05-07T18:13:02.874+0000","updated":"2018-05-07T18:13:02.874+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157660/comment/16466423","id":"16466423","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=billie.rinaldi","name":"billie.rinaldi","key":"billie.rinaldi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=billie.rinaldi&avatarId=30233","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=billie.rinaldi&avatarId=30233","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=billie.rinaldi&avatarId=30233","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=billie.rinaldi&avatarId=30233"},"displayName":"Billie Rinaldi","active":true,"timeZone":"America/New_York"},"body":"If people disagree with me and we do allow this to be configured, it should be through a configuration property read with YarnServiceConf.getBoolean rather than a new field. I'd prefer it to default to true (allowing flexing) for all types, but am flexible on its default for the NEVER type.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=billie.rinaldi","name":"billie.rinaldi","key":"billie.rinaldi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=billie.rinaldi&avatarId=30233","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=billie.rinaldi&avatarId=30233","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=billie.rinaldi&avatarId=30233","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=billie.rinaldi&avatarId=30233"},"displayName":"Billie Rinaldi","active":true,"timeZone":"America/New_York"},"created":"2018-05-07T20:17:52.695+0000","updated":"2018-05-07T20:17:52.695+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157660/comment/16466448","id":"16466448","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eyang","name":"eyang","key":"eyang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Yang","active":true,"timeZone":"America/Los_Angeles"},"body":"Instead of introduce another field to enable or disable flex.  We can identify if the workload can perform flex operation base on restart_policy.\r\n\r\nWhen restart_policy=ON_FAILURE or ALWAYS, this means the data can be recomputed, or the process can resume from failure.  Flex operation can be enabled.\r\n\r\nWhen restart_policy=NEVER, this means the data is stateful, and can not reprocess.  (i.e. mapreduce writes to HBase without transaction property.) . This type of containers are not allowed to have flexing operation.\r\n\r\nBy reasoning deduction, it is possible to reduce combinations that will be supported.  This also implies that restart_policy=NEVER doesn't have to support upgrade.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eyang","name":"eyang","key":"eyang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Yang","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-05-07T20:43:55.054+0000","updated":"2018-05-07T20:43:55.054+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157660/comment/16466462","id":"16466462","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks [~suma.shivaprasad] for filing the JIRA and suggestions from [~eyang] / [~billie.rinaldi], \r\n\r\nI think the service flexing is different from restart policy: As mentioned by [~eyang], restart policy = on_failure / always means some part of the job can be *recomputed*. *Recomputable* is different from *Expandable*, an example is map-reduce, # of mappers and reducers are determined by InputFormat, which is determined before job get launched. Allocating more mappers or reducers than pre-calculated while job is running doesn't helpful. Many computation frameworks are in this pattern, such as Tensorflow/OpenMPI, etc. adding tasks while job is running isn't helpful.\r\n\r\nConsidering this, I would prefer what Suma suggested, allow user to specify allow_flexing, sometimes adding a new instance to a component could lead task or even master failure because it is unexpected. I tend to agree making allow_flexing=false by default, but I'm also fine with the opposite.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-05-07T20:52:47.850+0000","updated":"2018-05-07T20:52:47.850+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157660/comment/16466800","id":"16466800","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eyang","name":"eyang","key":"eyang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Yang","active":true,"timeZone":"America/Los_Angeles"},"body":"[~leftnoteasy] Recompute and expandable are intertwined.  They are not the same thing.  At conceptual level, teragen has no dependency of input format.  You can add more partitions to get more data generated.  Hadoop's own implementation limited this from happening, but this does not mean docker containers should be imposed by the same initialization time limitation.  On the other hand, we must optimize the framework for general purpose usage and prevent ourselves from giving too many untested and unsupported options.  I think it make sense to reduce the flex options to 2 main types instead of giving all 6 options.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eyang","name":"eyang","key":"eyang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Yang","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-05-08T03:07:56.174+0000","updated":"2018-05-08T03:08:15.220+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157660/comment/16466857","id":"16466857","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"body":"[~eyang], \r\n\r\nThanks for commenting, your suggestion makes sense, and has less dev/testing overhead. I think we can do as you suggested: allow flexing when restart-policy  = always / on-failure; and disallow flexing when restart-policy = never.\r\n\r\nWe can add a separate allow_flexing flag to spec if once we see solid requirements from users.\r\n\r\n[~suma.shivaprasad], does this make sense to you, please feel free to share your opinions.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-05-08T04:47:53.301+0000","updated":"2018-05-08T04:47:53.301+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157660/comment/16467635","id":"16467635","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=billie.rinaldi","name":"billie.rinaldi","key":"billie.rinaldi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=billie.rinaldi&avatarId=30233","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=billie.rinaldi&avatarId=30233","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=billie.rinaldi&avatarId=30233","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=billie.rinaldi&avatarId=30233"},"displayName":"Billie Rinaldi","active":true,"timeZone":"America/New_York"},"body":"I agree with Eric's suggestion as well.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=billie.rinaldi","name":"billie.rinaldi","key":"billie.rinaldi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=billie.rinaldi&avatarId=30233","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=billie.rinaldi&avatarId=30233","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=billie.rinaldi&avatarId=30233","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=billie.rinaldi&avatarId=30233"},"displayName":"Billie Rinaldi","active":true,"timeZone":"America/New_York"},"created":"2018-05-08T16:12:31.275+0000","updated":"2018-05-08T16:12:31.275+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157660/comment/16490231","id":"16490231","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=suma.shivaprasad","name":"suma.shivaprasad","key":"suma.shivaprasad","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suma Shivaprasad","active":true,"timeZone":"Asia/Kolkata"},"body":"One usecase I can think of is in the case of Spark applications which have Dynamic Allocation enabled on the Spark driver and executors need to flex up and down based on driver's discretion. There could two be components here - one for Spark Driver and one for Spark Executor and the driver needs to flex the executor component instances up and down based on workload at that point in time /idle timeout. \r\n\r\nThoughts [~eyang] [~leftnoteasy] [~billie.rinaldi]","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=suma.shivaprasad","name":"suma.shivaprasad","key":"suma.shivaprasad","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Suma Shivaprasad","active":true,"timeZone":"Asia/Kolkata"},"created":"2018-05-25T04:52:32.761+0000","updated":"2018-05-25T04:52:32.761+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157660/comment/16490979","id":"16490979","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eyang","name":"eyang","key":"eyang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Yang","active":true,"timeZone":"America/Los_Angeles"},"body":"[~suma.shivaprasad] Restart_policy = ON_FAILURE covers Spark use case to start more executor base on workload demand, no?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eyang","name":"eyang","key":"eyang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Yang","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-05-25T16:34:13.544+0000","updated":"2018-05-25T16:34:13.544+0000"}],"maxResults":9,"total":9,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/YARN-8255/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i3tfhb:"}}