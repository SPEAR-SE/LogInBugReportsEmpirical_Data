{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13157147","self":"https://issues.apache.org/jira/rest/api/2/issue/13157147","key":"YARN-8248","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12313722","id":"12313722","key":"YARN","name":"Hadoop YARN","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12313722&avatarId=15135","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12313722&avatarId=15135","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12313722&avatarId=15135","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12313722&avatarId=15135"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12342758","id":"12342758","name":"3.2.0","archived":false,"released":false}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2018-05-06T19:22:57.110+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Tue May 22 06:13:01 UTC 2018","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_24324_*|*_3_*:*_1_*:*_186194000_*|*_5_*:*_1_*:*_0_*|*_10002_*:*_1_*:*_1290056504","customfield_12312321":null,"resolutiondate":"2018-05-21T15:10:36.787+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/YARN-8248/watchers","watchCount":4,"isWatching":false},"created":"2018-05-04T13:06:02.812+0000","customfield_12310192":null,"customfield_12310191":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10343","value":"Reviewed","id":"10343"}],"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"14.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2018-05-22T06:13:01.428+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12322906","id":"12322906","name":"fairscheduler","description":"Fair Scheduler"}],"timeoriginalestimate":null,"description":"Job hangs when mapreduce.job.queuename is specified and the queue has 0 of any resource (vcores / memory / other)\r\n\r\nIn this scenario, the job should be immediately rejected upon submission since the specified queue cannot serve the resource needs of the submitted job.\r\n\r\n \r\n\r\nCommand to run:\r\n{code:java}\r\nbin/yarn jar \"./share/hadoop/mapreduce/hadoop-mapreduce-examples-$MY_HADOOP_VERSION.jar\" pi -Dmapreduce.job.queuename=sample_queue 1 1000;{code}\r\nfair-scheduler.xml queue config (excerpt):\r\n\r\n \r\n{code:java}\r\n <queue name=\"sample_queue\">\r\n    <minResources>10000 mb,0vcores</minResources>\r\n    <maxResources>90000 mb,0vcores</maxResources>\r\n    <maxRunningApps>50</maxRunningApps>\r\n    <maxAMShare>-1.0f</maxAMShare>\r\n    <weight>2.0</weight>\r\n    <schedulingPolicy>fair</schedulingPolicy>\r\n  </queue>\r\n{code}\r\nDiagnostic message from the web UI: \r\n{code:java}\r\nWed May 02 06:35:57 -0700 2018] Application is added to the scheduler and is not yet activated. (Resource request: <memory:1536, vCores:1> exceeds current queue or its parents maximum resource allowed).{code}","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12342758","id":"12342758","name":"3.2.0","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12342982","id":"12342982","description":"3.1.1 Release","name":"3.1.1","archived":false,"released":true,"releaseDate":"2018-08-07"}],"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12922078","id":"12922078","filename":"YARN-8248-001.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"created":"2018-05-04T16:16:11.270+0000","size":15196,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12922078/YARN-8248-001.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12922195","id":"12922195","filename":"YARN-8248-002.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"created":"2018-05-06T19:42:35.526+0000","size":15245,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12922195/YARN-8248-002.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12922643","id":"12922643","filename":"YARN-8248-003.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"created":"2018-05-09T14:26:50.885+0000","size":28806,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12922643/YARN-8248-003.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12922693","id":"12922693","filename":"YARN-8248-004.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"created":"2018-05-09T18:39:41.968+0000","size":28831,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12922693/YARN-8248-004.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12922783","id":"12922783","filename":"YARN-8248-005.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"created":"2018-05-10T04:55:53.235+0000","size":27446,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12922783/YARN-8248-005.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12923072","id":"12923072","filename":"YARN-8248-006.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"created":"2018-05-11T18:13:05.107+0000","size":22554,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12923072/YARN-8248-006.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12923947","id":"12923947","filename":"YARN-8248-007.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"created":"2018-05-17T16:12:10.518+0000","size":34764,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12923947/YARN-8248-007.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12924111","id":"12924111","filename":"YARN-8248-008.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"created":"2018-05-18T11:48:11.343+0000","size":42212,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12924111/YARN-8248-008.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12924112","id":"12924112","filename":"YARN-8248-009.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"created":"2018-05-18T11:54:00.361+0000","size":42371,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12924112/YARN-8248-009.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12924135","id":"12924135","filename":"YARN-8248-010.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"created":"2018-05-18T15:08:19.406+0000","size":42369,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12924135/YARN-8248-010.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12924161","id":"12924161","filename":"YARN-8248-011.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"created":"2018-05-18T18:11:53.184+0000","size":41302,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12924161/YARN-8248-011.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12924202","id":"12924202","filename":"YARN-8248-012.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"created":"2018-05-18T21:31:36.567+0000","size":41433,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12924202/YARN-8248-012.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12924314","id":"12924314","filename":"YARN-8248-013.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"created":"2018-05-21T07:24:19.318+0000","size":40503,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12924314/YARN-8248-013.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12924323","id":"12924323","filename":"YARN-8248-014.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"created":"2018-05-21T09:43:11.775+0000","size":40507,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12924323/YARN-8248-014.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Job hangs when a job requests a resource that its queue does not have","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16465264","id":"16465264","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 31s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 3 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 11s{color} | {color:blue} Maven dependency ordering for branch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 25m 40s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  8m 32s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 25s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 40s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 13m 42s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 41s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 24s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 12s{color} | {color:blue} Maven dependency ordering for patch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 21s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  7m 15s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  7m 15s{color} | {color:green} the patch passed {color} |\r\n| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  1m 23s{color} | {color:orange} hadoop-yarn-project/hadoop-yarn: The patch generated 2 new + 251 unchanged - 0 fixed = 253 total (was 251) {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 35s{color} | {color:green} the patch passed {color} |\r\n| {color:red}-1{color} | {color:red} whitespace {color} | {color:red}  0m  0s{color} | {color:red} The patch has 2 line(s) that end in whitespace. Use git apply --whitespace=fix <<patch_file>>. Refer https://git-scm.com/docs/git-apply {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 23s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 54s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 20s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  3m 11s{color} | {color:green} hadoop-yarn-common in the patch passed. {color} |\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green} 66m 29s{color} | {color:green} hadoop-yarn-server-resourcemanager in the patch passed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 35s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}152m 19s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |\r\n| JIRA Issue | YARN-8248 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12922078/YARN-8248-001.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux 519eddf3b63c 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / e9159db |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_162 |\r\n| findbugs | v3.1.0-RC1 |\r\n| checkstyle | https://builds.apache.org/job/PreCommit-YARN-Build/20609/artifact/out/diff-checkstyle-hadoop-yarn-project_hadoop-yarn.txt |\r\n| whitespace | https://builds.apache.org/job/PreCommit-YARN-Build/20609/artifact/out/whitespace-eol.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/20609/testReport/ |\r\n| Max. process+thread count | 871 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn |\r\n| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/20609/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-06T19:22:57.110+0000","updated":"2018-05-06T19:22:57.110+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16465305","id":"16465305","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (/) *{color:green}+1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 32s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 3 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 12s{color} | {color:blue} Maven dependency ordering for branch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 25m  8s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  8m 28s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 25s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 40s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 13m 54s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 43s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 23s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 12s{color} | {color:blue} Maven dependency ordering for patch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 21s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  7m 15s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  7m 15s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 23s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 35s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 11s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 54s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 20s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  3m 11s{color} | {color:green} hadoop-yarn-common in the patch passed. {color} |\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green} 67m  3s{color} | {color:green} hadoop-yarn-server-resourcemanager in the patch passed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 36s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}152m 19s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |\r\n| JIRA Issue | YARN-8248 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12922195/YARN-8248-002.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux 210707dc5da0 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / e9159db |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_162 |\r\n| findbugs | v3.1.0-RC1 |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/20610/testReport/ |\r\n| Max. process+thread count | 882 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn |\r\n| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/20610/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-06T22:22:58.684+0000","updated":"2018-05-06T22:22:58.684+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16467091","id":"16467091","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=grepas","name":"grepas","key":"grepas","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=grepas&avatarId=35295","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=grepas&avatarId=35295","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=grepas&avatarId=35295","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=grepas&avatarId=35295"},"displayName":"Gergo Repas","active":true,"timeZone":"Etc/UTC"},"body":"[~snemeth] Thanks for working on this. In the Resources class the patch introduces a new method ({{hasAnyZeroRequestedResource()}}), which seems to be very specific to this usecase. It may be worth to check if you can achieve the same logic by using existing methods of this class (e.g. {{fitsIn()}}, {{isAnyMajorResourceZero()}}).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=grepas","name":"grepas","key":"grepas","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=grepas&avatarId=35295","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=grepas&avatarId=35295","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=grepas&avatarId=35295","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=grepas&avatarId=35295"},"displayName":"Gergo Repas","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-08T08:46:21.517+0000","updated":"2018-05-08T08:46:21.517+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16468911","id":"16468911","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"body":"Hi [~grepas]!\r\n\r\nThanks for your comments.\r\n\r\nIt is a very good point what you have brought up, I fixed the code accordingly and removed my newly introduced Resource method.\r\n\r\nPlease also note that the 2nd part of this issue fix is also included in the patch, which fixes the same issue but with task attempt RM container allocations in the scheduler.\r\n\r\nPlease check the updated patch!\r\n\r\n \r\n\r\nThanks!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"created":"2018-05-09T14:28:12.826+0000","updated":"2018-05-09T14:29:25.624+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16468961","id":"16468961","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=grepas","name":"grepas","key":"grepas","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=grepas&avatarId=35295","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=grepas&avatarId=35295","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=grepas&avatarId=35295","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=grepas&avatarId=35295"},"displayName":"Gergo Repas","active":true,"timeZone":"Etc/UTC"},"body":"[~snemeth] Thanks for the new patch! I can see you introduced FairScheduler.rejectApplicationWithMessage() which logs the rejection message with error level. However I don't think rejections should be logged with error level, since that's rather normal behaviour and doesn't indicate an error in the scheduler's operation. Also, in some cases you removed the logging before the rejectApplicationWithMessage() call, sometimes you kept it, I think it should be consistent.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=grepas","name":"grepas","key":"grepas","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=grepas&avatarId=35295","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=grepas&avatarId=35295","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=grepas&avatarId=35295","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=grepas&avatarId=35295"},"displayName":"Gergo Repas","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-09T15:25:59.159+0000","updated":"2018-05-09T15:25:59.159+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16469175","id":"16469175","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 25s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  1m  9s{color} | {color:blue} Maven dependency ordering for branch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 25m 28s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  8m 22s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 23s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 35s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 13m 12s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 38s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 18s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 12s{color} | {color:blue} Maven dependency ordering for patch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 19s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  7m 15s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  7m 15s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 20s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 31s{color} | {color:green} the patch passed {color} |\r\n| {color:red}-1{color} | {color:red} whitespace {color} | {color:red}  0m  0s{color} | {color:red} The patch has 1 line(s) that end in whitespace. Use git apply --whitespace=fix <<patch_file>>. Refer https://git-scm.com/docs/git-apply {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m 56s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 47s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 16s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  3m  7s{color} | {color:green} hadoop-yarn-common in the patch passed. {color} |\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 67m 20s{color} | {color:red} hadoop-yarn-server-resourcemanager in the patch failed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 36s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}152m  3s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Reason || Tests ||\r\n| Failed junit tests | hadoop.yarn.server.resourcemanager.TestWorkPreservingRMRestart |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |\r\n| JIRA Issue | YARN-8248 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12922643/YARN-8248-003.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux ad0fcc00d334 3.13.0-137-generic #186-Ubuntu SMP Mon Dec 4 19:09:19 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / 343b51d |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_162 |\r\n| findbugs | v3.1.0-RC1 |\r\n| whitespace | https://builds.apache.org/job/PreCommit-YARN-Build/20660/artifact/out/whitespace-eol.txt |\r\n| unit | https://builds.apache.org/job/PreCommit-YARN-Build/20660/artifact/out/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/20660/testReport/ |\r\n| Max. process+thread count | 822 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn |\r\n| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/20660/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-09T17:38:56.262+0000","updated":"2018-05-09T17:38:56.262+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16469291","id":"16469291","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"body":"Hey [~grepas]!\r\n\r\nBoth are valid points, I was thinking about the pros and cons of logging with error level but basically I agree, from the scheduler's point of view it's not an error so I changed the level back to info.\r\n\r\nAlso fixed the remained duplicated loggings as well.\r\n\r\nPlease check the updated patch!\r\n\r\nThanks!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"created":"2018-05-09T18:50:24.306+0000","updated":"2018-05-09T18:50:24.306+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16469549","id":"16469549","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 13s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 12s{color} | {color:blue} Maven dependency ordering for branch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 25m 51s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  8m 15s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 25s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 47s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 13m 57s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m  3s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 28s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 13s{color} | {color:blue} Maven dependency ordering for patch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 29s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  7m 16s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  7m 16s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 24s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 38s{color} | {color:green} the patch passed {color} |\r\n| {color:red}-1{color} | {color:red} whitespace {color} | {color:red}  0m  0s{color} | {color:red} The patch has 1 line(s) that end in whitespace. Use git apply --whitespace=fix <<patch_file>>. Refer https://git-scm.com/docs/git-apply {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 14s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m  2s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 21s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  3m 14s{color} | {color:green} hadoop-yarn-common in the patch passed. {color} |\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 68m 28s{color} | {color:red} hadoop-yarn-server-resourcemanager in the patch failed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 40s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}154m 57s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Reason || Tests ||\r\n| Failed junit tests | hadoop.yarn.server.resourcemanager.TestWorkPreservingRMRestart |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |\r\n| JIRA Issue | YARN-8248 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12922693/YARN-8248-004.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux acfac7dd87bc 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / af4fc2e |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_162 |\r\n| findbugs | v3.1.0-RC1 |\r\n| whitespace | https://builds.apache.org/job/PreCommit-YARN-Build/20665/artifact/out/whitespace-eol.txt |\r\n| unit | https://builds.apache.org/job/PreCommit-YARN-Build/20665/artifact/out/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/20665/testReport/ |\r\n| Max. process+thread count | 861 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn |\r\n| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/20665/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-09T21:38:42.367+0000","updated":"2018-05-09T21:38:42.367+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16469925","id":"16469925","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"body":"Fixed the unit test failure and last whitespace style check with patch 005, at least this patch should fix those issues.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"created":"2018-05-10T04:57:02.103+0000","updated":"2018-05-10T04:57:02.103+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16470013","id":"16470013","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (/) *{color:green}+1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 24s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 12s{color} | {color:blue} Maven dependency ordering for branch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 23m 44s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  7m 49s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m  5s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 19s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 10s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 19s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m  5s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 10s{color} | {color:blue} Maven dependency ordering for patch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 13s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  6m 45s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  6m 45s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m  8s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 18s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green}  9m 51s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 37s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m  1s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  3m  7s{color} | {color:green} hadoop-yarn-common in the patch passed. {color} |\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green} 68m 29s{color} | {color:green} hadoop-yarn-server-resourcemanager in the patch passed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 28s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}144m 29s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |\r\n| JIRA Issue | YARN-8248 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12922783/YARN-8248-005.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux 6567c5ba196a 4.4.0-64-generic #85-Ubuntu SMP Mon Feb 20 11:50:30 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / cc0310a |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_162 |\r\n| findbugs | v3.1.0-RC1 |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/20673/testReport/ |\r\n| Max. process+thread count | 844 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn |\r\n| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/20673/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-10T07:25:07.258+0000","updated":"2018-05-10T07:25:07.258+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16470210","id":"16470210","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=grepas","name":"grepas","key":"grepas","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=grepas&avatarId=35295","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=grepas&avatarId=35295","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=grepas&avatarId=35295","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=grepas&avatarId=35295"},"displayName":"Gergo Repas","active":true,"timeZone":"Etc/UTC"},"body":"[~snemeth] Thanks for the updated patch, LGTM.\r\n\r\n+1 (non-binding)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=grepas","name":"grepas","key":"grepas","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=grepas&avatarId=35295","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=grepas&avatarId=35295","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=grepas&avatarId=35295","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=grepas&avatarId=35295"},"displayName":"Gergo Repas","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-10T10:43:57.088+0000","updated":"2018-05-10T10:43:57.088+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16471309","id":"16471309","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=haibochen","name":"haibochen","key":"haibochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Haibo Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks [~snemeth] for the patch. I have some questions.\r\n\r\n1) Why the change in Resources.java? I don't see how it helps resolve the issue targeted in this jira.\r\n\r\n2) There are many debug messages added to this patch. Again, are they necessary to solve this issue?\r\n\r\n3) In FairScheduler.addApplication(), we are adding more code to the write lock. I think it is safe to reduce the write lock scope to just the mutation part.\r\n\r\n ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=haibochen","name":"haibochen","key":"haibochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Haibo Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-05-11T00:08:06.707+0000","updated":"2018-05-11T00:08:06.707+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16472258","id":"16472258","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"body":"Thanks [~haibochen] for your comments!\r\n # I added some code in one of the earlier version of this patch to Resources. Then when I removed that code since it turned out it's unnecessary, I realized the IDE showed that the continue statements are not required, so it's a simple code cleanup. If it is discouraged in general to touch anything other than the bare minimum needed to fix the issue, I will remove those changes. But I'm still curious what's the correct way of working if I detect something minor code fix like that later on. Creating a separate Jira task for that seems overkill.\r\n # Those debug logs still are not strictly necessary, but these logs helped me to understand why the FS hangs, so in the end I kept those logs because I think it could save a lot of time for anyone if such an edge case happens what I fixed. If you don't agree with this, I can remove the logs.\r\n # Good catch, I will fix this.\r\n\r\nPlease check 1 and 2 and decide how to go forward with those, the 3rd is rather trivial to fix.\\\r\n\r\nThanks!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"created":"2018-05-11T16:50:17.165+0000","updated":"2018-05-11T16:50:17.165+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16472335","id":"16472335","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=haibochen","name":"haibochen","key":"haibochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Haibo Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks [~snemeth] for the clarification.\r\n\r\nI think in general it's okay for fix some minor code/style cleanup around the same area while working on a patch. It becomes however, overhead if the minor changes cause confusion, or is to remote to your core change. Folks reading the commit history would also have questions, without digging into the Jira discussion. Hence, I'd prefer, in this case, to leave Resources as is. If there are many cleanup issues you can find, a separate patch is justifiable.\r\n\r\nI agree with you debug logs help debugging, especially on the unhappy/abnormal code  path. However, if we add too much logging on the happy hot code path, the logs will be flooded.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=haibochen","name":"haibochen","key":"haibochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Haibo Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-05-11T17:41:29.467+0000","updated":"2018-05-11T17:41:29.467+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16472399","id":"16472399","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"body":"Thanks [~haibochen] for your answers.\r\n\r\nIt makes sense now why you wanted to remove changes from Resources.\r\n\r\nAlso changed the scope of the debug logs and just kept those that are \"edge\" cases and come up more rarely.\r\n\r\nAbout the 3rd point: I checked the writeLock's scope but it cannod be reduced since the following 2 lines should be called when lock was called on the writeLock: \r\n{code:java}\r\nRMApp rmApp = rmContext.getRMApps().get(applicationId); \r\nFSLeafQueue queue = assignToQueue(rmApp, queueName, user);\r\n{code}\r\n \r\n\r\nPlease check my updated patch!\r\n\r\nThanks!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"created":"2018-05-11T18:16:39.766+0000","updated":"2018-05-11T18:16:39.766+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16472587","id":"16472587","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (/) *{color:green}+1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 39s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 24m 23s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 40s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 34s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 42s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m 39s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m  6s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 23s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 42s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 39s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 39s{color} | {color:green} the patch passed {color} |\r\n| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 31s{color} | {color:orange} hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager: The patch generated 1 new + 246 unchanged - 0 fixed = 247 total (was 246) {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 42s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m 35s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 17s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 25s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green} 70m 57s{color} | {color:green} hadoop-yarn-server-resourcemanager in the patch passed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 22s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}124m 55s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |\r\n| JIRA Issue | YARN-8248 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12923072/YARN-8248-006.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux 8d5e00debded 4.4.0-64-generic #85-Ubuntu SMP Mon Feb 20 11:50:30 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / c1d64d6 |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_162 |\r\n| findbugs | v3.1.0-RC1 |\r\n| checkstyle | https://builds.apache.org/job/PreCommit-YARN-Build/20704/artifact/out/diff-checkstyle-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/20704/testReport/ |\r\n| Max. process+thread count | 874 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager |\r\n| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/20704/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-11T20:20:12.275+0000","updated":"2018-05-11T20:20:12.275+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16472598","id":"16472598","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=haibochen","name":"haibochen","key":"haibochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Haibo Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks [~snemeth] for updating the patch. I have a few more comments/questions\r\n\r\n1) The AMResourceRequests of an application is already verified in RMAppManager. validateAndCreateResourceRequest(). We don't need to check what if it is null, inside fair scheduler any more, IMO. Effectively, what I am suggesting is\r\n\r\nremoving\r\n{code:java}\r\n      if (rmApp == null || rmApp.getAMResourceRequests() == null) {\r\n        LOG.debug(\"rmApp or rmApp.AMResourceRequests was null!\");\r\n      }\r\n{code}\r\n2) Isn't Resources.isAnyMajorResourceZero(DOMINANT_RESOURCE_CALCULATOR, queueMaxShare)), already included in !Resources.fitsIn(amResourceRequest.getCapability(),queueMaxShare)? That is, if the queue max resource is 0, Resources.fitsIn(amResourceRequest.getCapability(),queueMaxShare) would always return false. We'd also need to update the diagnostic message accordingly.\r\n\r\n3) We don't need to check again in FairScheduler.allocate() because it is always called after the APP is accepted, which would imply the check already passed.\r\n\r\n4) It is not clear to me how  testAppRejectedToQueueZeroCapacityOfResource() is different from  testSchedulingRejectedToQueueZeroCapacityOfResource().  The former case includes the latter, doesn't it? If so, I'd propose we get rid of testSchedulingRejectedToQueueZeroCapacityOfResource() and associated tests. There is one other case not covered in unit tests. What if max Resource of a queue is not zero, but the AM resource request is larger than the maxResource?\r\n\r\n5) Some minor issues:\r\n\r\nThere is an unused import in FairScheduler.java;\r\n\r\nLet's rename  processEvents()-> addApplication(),  processAttempAddedEvent() -> addAppAttempt();\r\n\r\nSome debug messages tend to describe what the code does. Interpreting the debug log without the code aside can be hard.  A few suggestions:\r\n\r\nLOG.debug(\"Assignment of container on node \" + node+ \" is zero!\");  -> LOG.debug(\"No container is allocated on node\" + node);\r\n\r\n\"Resource ask %s fits in available node resources %s, but the allocated container was null!\" -> \"Resource ask %s fits in available node resources %s, but no container was allocated\"\r\n\r\nLOG.debug(\"Assign container precheck was false on node: \" + node); -> LOG.debug(\"Assign container precheck on node \" + node + \" failed\" );\r\n\r\n ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=haibochen","name":"haibochen","key":"haibochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Haibo Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-05-11T20:28:42.684+0000","updated":"2018-05-11T20:28:42.684+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16473426","id":"16473426","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"body":"Hi [~haibochen]\r\n\r\nThanks for your comments!\r\n\r\n1. I'm fine with removing the first null check:\r\n{code:java}\r\n if (rmApp == null || rmApp.getAMResourceRequests() == null) {\r\n        LOG.debug(\"rmApp or rmApp.AMResourceRequests was null!\");\r\n      }\r\n{code}\r\nbut as {{RMAppManager.validateAndCreateResourceRequest()}} can return a null value for the AM requests, I would leave the second null check that is just before the loop on amRequests:\r\n{code:java}\r\nif (rmApp != null && rmApp.getAMResourceRequests() != null) {\r\n{code}\r\nMaybe it could be just if\r\n{code:java}\r\n(rmApp.getAMResourceRequests != null) \r\n{code}\r\nsince rmApp should be non-null at this point.\r\n What do you prefer?\r\n\r\n \r\n\r\n2. It is true that {{Resources.fitsIn(amResourceRequest.getCapability(),queueMaxShare)}} would always return false when the {{queueMaxShare}} is 0 for any resource, but the problem with just using {{Resources.fitsIn}} is that it would return false for such cases when the requested resource is smaller than the max resource but that max resource is not zero, e.g. requested vCores = 2, max vCores = 1.\r\n With this check, I only wanted to catch those cases where there is a resource request of any resource type but the queue has 0 of that resource in {{queueMaxShare}}.\r\n In this sense, in the if condition this check would be enough:\r\n{code:java}\r\nResources.isAnyMajorResourceZero(DOMINANT_RESOURCE_CALCULATOR, queueMaxShare)\r\n{code}\r\nbut it is not perfectly fine since only using this check does not check whether a resource is really requested. For example, an application does not request any vCores (maybe this cannot happen in reality) and we have 0 of vCores as maximum then it is a perfectly reasonable request so we don't need to reject the application. On the other hand if an app requests 1 vCores and we have 0 vCores as maximum then rejection should happen.\r\n Is this explanation makes it cleaner?\r\n Do you think some comments need to be added to the code above the if condition?\r\n How would you update the diagnostic message?\r\n\r\n \r\n\r\n3. My overall intention of my changes in {{Fairscheduler}} was the following: \r\n Essentially, in {{addApplication()}}, the AM resource requests are checked against the queue's max resources.\r\n In {{allocate()}}, I check whether any container allocation (e.g. map/reduce) resource request is happened against a queue that has 0 of any resource configured as max resource.\r\n So in my understanding, it can happen that in {{addApplication()}} the app was not rejected, for example AM does not request vCores and we have 0 vCores configure as max resources, but for a map container, 1 vCores is requested. \r\n Please tell me whether this is clear.\r\n\r\n \r\n\r\n4. \r\n {{testAppRejectedToQueueZeroCapacityOfResource()}}: Tests if rejection of an application happens when AM resource request is exceeding the queue's maximum resources. (tests code added to {{FairScheduler.addApplication}})\r\n\r\n{{testSchedulingRejectedToQueueZeroCapacityOfResource()}}: Tests if rejection of an application happens when map / reduce container request is exceeding the queue's maximum resources (tests code added to {{FairScheduler.allocate}})\r\n Please check my comment for 3. as I explained such a case when an application will not be rejected immadiately upon submission but only when map/reduce container request happens.\r\n\r\nAbout the uncovered unit test: Good point and I was thinking about that if we can reject an application only if the AM request is greater than 0 and we have 0 configured as max resource or simply in any case where the requested resource is greater than max resource, regardless if it is 0 or not.\r\n\r\nIf the latter is true, then I agree, unit tests and the if-conditions in the production code needs to be changed accordingly (using just {{Resources.fitsIn}} will work I guess).\r\n\r\nI'm fine with either way as well and as you have competence with FairScheduler please advise which way I should go.\r\n\r\n5.\r\n - Removed the unused import.\r\n - Renamed those methods what you suggested\r\n - Thanks for the log change suggestions, you were right about those, it's way more understandable that way.\r\n\r\n \r\n\r\nPlease note that I haven't uploaded a new patch as it does not makes sense until we discussed all of the bullet points and now I only did some minor fixes.\r\n\r\nThanks!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"created":"2018-05-13T10:17:46.501+0000","updated":"2018-05-13T10:22:34.162+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16475058","id":"16475058","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=haibochen","name":"haibochen","key":"haibochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Haibo Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"{quote}as {{RMAppManager.validateAndCreateResourceRequest()}} can return a null value for the AM requests,\r\n{quote}\r\nGood catch! It does indeed return null if the AM is unmanaged. But I am not sure how the debug message helps diagnose this issue. I'd prefer we remove the debug message\r\n{quote} Is this explanation makes it cleaner?\r\n{quote}\r\nYes. That makes sense. Comments would be very help in this case. We could also maybe reverse the order of the two conditions. The current diagnostic message seems good to me now that I understand what the condition means.\r\n{quote} So in my understanding, it can happen that in {{addApplication()}} the app was not rejected, for example AM does not request vCores and we have 0 vCores configure as max resources, but for a map container, 1 vCores is requested.\r\n{quote}\r\nIndeed, that can happen to custom resource types. In FairScheduler.allocate(), instead of rejecting an application if any request is rejected, we can just filtering out the ones that should be rejected by removing them from the ask list (with warning log) and proceed. Rejecting an application after it has starting running (FairScheduler.allocate() is called remotely by AM) seems counter-intuitive. I think we can signal AM by throwing a SchedulerInvalidResoureRequestException, which is propagated to AM. What do you think?\r\n{quote}About the uncovered unit test: Good point and I was thinking about that if we can reject an application only if the AM request is greater than 0 and we have 0 configured as max resource or simply in any case where the requested resource is greater than max resource, regardless if it is 0 or not.\r\n{quote}\r\nNever mind comment 4). That's based on my previous misunderstanding. If AM request is large than than the non-zero max-resource (steady fair share), we should not reject, because the queue may get instantaneous fair share that is large enough. That's not related to this patch.\r\n\r\n \r\n\r\nLet me know if something does not make sense.\r\n\r\n \r\n\r\n \r\n\r\n ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=haibochen","name":"haibochen","key":"haibochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Haibo Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-05-14T23:50:41.194+0000","updated":"2018-05-14T23:50:41.194+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16479338","id":"16479338","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"body":"Thanks [~haibochen] for your comments.\r\n # Deleted the debug message.\r\n # Comments are added.\r\n # I have added code that filters invalid asks and throws SchedulerInvalidResourceRequestException if at least one invalid resource request was found. I added the throw statement to the very end of the allocate() method, not sure if this is correct this way.\r\n\r\nThanks!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"created":"2018-05-17T16:36:15.657+0000","updated":"2018-05-17T16:37:49.210+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16479499","id":"16479499","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (/) *{color:green}+1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 28s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 23m 39s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 37s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 30s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 40s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green}  9m 34s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m  2s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 27s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 41s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 35s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 35s{color} | {color:green} the patch passed {color} |\r\n| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 28s{color} | {color:orange} hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager: The patch generated 6 new + 257 unchanged - 1 fixed = 263 total (was 258) {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 37s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green}  9m 42s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m  7s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 24s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green} 66m 42s{color} | {color:green} hadoop-yarn-server-resourcemanager in the patch passed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 25s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}117m 26s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |\r\n| JIRA Issue | YARN-8248 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12923947/YARN-8248-007.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux 099ce6398c93 4.4.0-89-generic #112-Ubuntu SMP Mon Jul 31 19:38:41 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / 59bde09 |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_162 |\r\n| findbugs | v3.1.0-RC1 |\r\n| checkstyle | https://builds.apache.org/job/PreCommit-YARN-Build/20768/artifact/out/diff-checkstyle-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/20768/testReport/ |\r\n| Max. process+thread count | 921 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager |\r\n| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/20768/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-17T18:18:11.990+0000","updated":"2018-05-17T18:18:11.990+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16479664","id":"16479664","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=haibochen","name":"haibochen","key":"haibochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Haibo Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks [~snemeth] for the update! I have a few follow-up comments.\r\n\r\n1)  We can do a few renames: testAppRejectedToQueueZeroCapacityOfResourceVcores() =>  testAppRejectedToQueue*With*ZeroCapacityOfVcores();  testAppRejectedToQueueZeroCapacityOfResourceMemory() =>  testAppRejectedToQueue*With*ZeroCapacityOfMemory();  testAppRejectedToQueueZeroCapacityOfResource()  => testAppRejectedToQueue*With*ZeroCapacityOfResource();  testSchedulingRejectedToQueueZeroCapacityOfMemory*() => testSchedulingRejectedToQueue*With*ZeroCapacityOfMemory*();  testSchedulingRejectedToQueueZeroCapacityOfVcores*() =>  testSchedulingRejectedToQueue*With*ZeroCapacityOfVcores*();  testSchedulingRejectedToQueueZeroCapacityOfResource() => testSchedulingRejectedToQueue*With*ZeroCapacityOfResource()\r\n\r\n2) How is  testSchedulingRejectedToQueueZeroCapacityOfMemory1() different from  testSchedulingRejectedToQueueZeroCapacityOfMemory2()? They are calling the same function with the same parameters, hence identical as far as I can see. Am I missing something? If they are indeed identical, we just need to keep one. Similarly for  testSchedulingRejectedToQueueZeroCapacityOfVcores1 and  testSchedulingRejectedToQueueZeroCapacityOfVcores2.\r\n\r\n3) We are expecting SchedulerInvalidResoureRequestException  in  testSchedulingRejectedToQueueZeroCapacityOfResource. But it does not fail currently if no exception. We need to add Assert.fail() after createSchedulingRequest().\r\n\r\n4) In FairScheduler.allocate(), right now, it tries to be tolerant against invalid resource request in that it only throws an exception right before returning the Allocation instance.  Thinking more about this, this is problematic however because execution stops when the exception is thrown and the AM won't be able to get that allocation. All the tokens and promoted/demoted containers in that allocation will be lost, because the scheduler clears them all right away, but AM won't get the information. When AM tries next time, it won't see them because they have been cleared last time.     I think it's fine to  fail fast by throwing the exception right after validateAndFilterAsks() is called so that AM can retry safely without losing information.\r\n\r\n5) The  validateAndFilterAsks() method is a bit too complicated. I think it suffices to do something along the lines of\r\n{code:java}\r\n// Make sure this application exists\r\nFSAppAttempt application = getSchedulerApp(appAttemptId);\r\n...\r\n\r\nfinal Resource queueMaxShare = queue.getMaxShare();\r\n\r\nfor (ResourceRequest req: ask) {\r\n   if (Resources.isAnyMajorResourceZero(DOMINANT_RESOURCE_CALCULATOR, queueMaxShare)\r\n      && !Resources.fitsIn(amResourceRequest.getCapability(), queueMaxShare)) {\r\n      throw new SchedulerInvalidResoureRequestException(String.format(\r\n          \"Resource request %s of application %s is invalid because it asks\r\n           for a resource that the queue %s does not have \", req, appId, queue.getName()));\r\n   }\r\n}\r\n\r\n...\r\nhandleContainerUpdates(application, updateRequests);\r\n\r\n{code}\r\nI believe the if check above is also shared in FairScheduler.addApplication(), probably we can extract that out as a function and call it in both places. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=haibochen","name":"haibochen","key":"haibochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Haibo Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-05-17T20:32:27.780+0000","updated":"2018-05-17T20:32:27.780+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16480469","id":"16480469","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"body":"Thanks [~haibochen] for your comments!\r\n # Thanks, testcase names are indeed better this way.\r\n # Good point. I modified the arguments then some testcases turned out to be doing essentially the same. \r\n # Thanks for spotting this. Added Assert.fail().\r\n # Very good point, this was the part I was unsure about as indicated, I mean where I should throw an exception inside allocate(). Modified the code to be fail-fast and modified the testcases accordingly. Please note that from now the testcases also check the correctness of the fail-fast behavior.\r\n # My intentions with validateAndFilterAsks() were:\r\n\r\n - Collect all the invalid resource requests.\r\n - In validateResourceRequestsAgainstQueueMaxResource(): collect all the invalid resource informations (invalid resource requests).\r\n - Remove invalid resource requests from the original asks collection. This one turned out to be unnecessary as per the fail-fast behaviour.\r\n The code block you mentioned would throw SchedulerInvalidResoureRequestException when the first invalid resource is found without checking the rest of them.\r\n Moreover, isAnyMajorResourceZero(...) actually checks if any resource is 0, but if you don't request that resource it's not an invalid resource request situation I think. E.g. memory configured as max resources for queue is 0 but you don't request memory. This is why I collect all the resources with 0 amount and check whether those resources are requested or not.\r\n I think what I described with the first 2 points are useful as the AM will exactly know which resource requests are invalid from all the resource requests and will exactly know which resource type caused the problem in those requests.\r\n I would vote for this method stay as it is but if you still have concerns we should talk about this offline.\r\n\r\nIf you don't think that collecting invalid resource request gives too much value, I can align my code how you suggested, to throw exception on the first found invalid one.\r\n\r\nPlease check my updated patch!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"created":"2018-05-18T10:28:33.964+0000","updated":"2018-05-18T11:50:31.386+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16480684","id":"16480684","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 41s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 26m 56s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 43s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 39s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 46s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 14s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 22s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 31s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 52s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 43s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 43s{color} | {color:green} the patch passed {color} |\r\n| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 37s{color} | {color:orange} hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager: The patch generated 7 new + 257 unchanged - 1 fixed = 264 total (was 258) {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 43s{color} | {color:green} the patch passed {color} |\r\n| {color:red}-1{color} | {color:red} whitespace {color} | {color:red}  0m  0s{color} | {color:red} The patch has 1 line(s) that end in whitespace. Use git apply --whitespace=fix <<patch_file>>. Refer https://git-scm.com/docs/git-apply {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 40s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 18s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 27s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green} 67m 40s{color} | {color:green} hadoop-yarn-server-resourcemanager in the patch passed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 23s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}127m 53s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |\r\n| JIRA Issue | YARN-8248 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12924111/YARN-8248-008.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux c44eea93bc22 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / 6e99686 |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_162 |\r\n| findbugs | v3.1.0-RC1 |\r\n| checkstyle | https://builds.apache.org/job/PreCommit-YARN-Build/20786/artifact/out/diff-checkstyle-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |\r\n| whitespace | https://builds.apache.org/job/PreCommit-YARN-Build/20786/artifact/out/whitespace-eol.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/20786/testReport/ |\r\n| Max. process+thread count | 839 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager |\r\n| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/20786/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-18T13:58:32.122+0000","updated":"2018-05-18T13:58:32.122+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16480689","id":"16480689","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (/) *{color:green}+1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 29s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 23m  8s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 36s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 32s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 38s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m  7s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m  1s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 25s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 38s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 35s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 35s{color} | {color:green} the patch passed {color} |\r\n| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 30s{color} | {color:orange} hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager: The patch generated 6 new + 257 unchanged - 1 fixed = 263 total (was 258) {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 37s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green}  9m 48s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 10s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 25s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green} 68m 46s{color} | {color:green} hadoop-yarn-server-resourcemanager in the patch passed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 25s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}119m 50s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |\r\n| JIRA Issue | YARN-8248 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12924112/YARN-8248-009.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux 089c88ea293d 4.4.0-64-generic #85-Ubuntu SMP Mon Feb 20 11:50:30 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / 6e99686 |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_162 |\r\n| findbugs | v3.1.0-RC1 |\r\n| checkstyle | https://builds.apache.org/job/PreCommit-YARN-Build/20787/artifact/out/diff-checkstyle-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/20787/testReport/ |\r\n| Max. process+thread count | 863 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager |\r\n| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/20787/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-18T14:00:45.060+0000","updated":"2018-05-18T14:00:45.060+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16480781","id":"16480781","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"body":"fixed checkstyle issues","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"created":"2018-05-18T15:08:30.815+0000","updated":"2018-05-18T15:08:30.815+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16480931","id":"16480931","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=haibochen","name":"haibochen","key":"haibochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Haibo Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks [~snemeth] for updating the patch! I agree that it's valuable to provide detailed information as to what resource types in the request are invalid.  I have some more comments on the latest patch.\r\n\r\n1) The new class RequestedAvailableResourceValues  seems unnecessary. We could return a boolean from checkResource() instead\r\n\r\n2) In FairScheduler.addApplication() `Resources.isAnyMajorResourceZero(DOMINANT_RESOURCE_CALCULATOR,queueMaxShare)` is called to check if some resource types of the queue capacity are zero. The dominant resource calculator is involved. In SchedulerUtil.getZeroResources(), we don't involve the dominant resource calculator. Aren't they supposed to do the same thing?\r\n\r\n3) I feel like we could simply reuse SchedulerUtil. validateResourceRequestsAgainstQueueMaxResource() in FairScheduler.addApplication(), no?\r\n\r\n4) 'informations' => 'information'\r\n\r\n5) In  testSchedulingRejectedToQueueZeroCapacityOfResource(), can you explain what the fail() statement in the catch block is ?\r\n\r\n \r\n\r\n ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=haibochen","name":"haibochen","key":"haibochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Haibo Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-05-18T17:07:25.950+0000","updated":"2018-05-18T17:07:25.950+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16480943","id":"16480943","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (/) *{color:green}+1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 35s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 27m 24s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 50s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 44s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 50s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 54s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 14s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 30s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 53s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 41s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 41s{color} | {color:green} the patch passed {color} |\r\n| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 39s{color} | {color:orange} hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager: The patch generated 2 new + 257 unchanged - 1 fixed = 259 total (was 258) {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 50s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 35s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 19s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 26s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green} 67m 31s{color} | {color:green} hadoop-yarn-server-resourcemanager in the patch passed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 23s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}127m 46s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |\r\n| JIRA Issue | YARN-8248 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12924135/YARN-8248-010.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux 312eccb0c91d 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / 6e99686 |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_162 |\r\n| findbugs | v3.1.0-RC1 |\r\n| checkstyle | https://builds.apache.org/job/PreCommit-YARN-Build/20789/artifact/out/diff-checkstyle-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/20789/testReport/ |\r\n| Max. process+thread count | 847 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager |\r\n| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/20789/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-18T17:18:30.567+0000","updated":"2018-05-18T17:18:30.567+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16481001","id":"16481001","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"body":"Thanks [~haibochen] for your comments again!\r\n # Indeed, I removed this class\r\n # 3. Fair enough, in both methods I was able to use SchedulerUtils.validateResourceRequests() so the code is consistent now.\r\n\r\n4. Fixed\r\n\r\n5. As per our discussion offline, we agreed on a cleaner way so no exception expectations or fail() is required in the catch block.\r\n\r\n \r\n\r\nPlease check the new patch and let me know if it looks good!\r\n\r\nThanks!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"created":"2018-05-18T18:14:47.808+0000","updated":"2018-05-18T18:42:53.131+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16481009","id":"16481009","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=haibochen","name":"haibochen","key":"haibochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Haibo Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"+1 pending Jenkins.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=haibochen","name":"haibochen","key":"haibochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Haibo Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-05-18T18:25:57.509+0000","updated":"2018-05-18T18:25:57.509+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16481187","id":"16481187","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 41s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 26m 48s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 52s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 41s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 56s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m  3s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 24s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 29s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 50s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 45s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 45s{color} | {color:green} the patch passed {color} |\r\n| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 36s{color} | {color:orange} hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager: The patch generated 5 new + 257 unchanged - 1 fixed = 262 total (was 258) {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 50s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 39s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 34s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 29s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 68m 19s{color} | {color:red} hadoop-yarn-server-resourcemanager in the patch failed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 24s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}128m 51s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Reason || Tests ||\r\n| Failed junit tests | hadoop.yarn.server.resourcemanager.scheduler.fair.TestFairScheduler |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |\r\n| JIRA Issue | YARN-8248 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12924161/YARN-8248-011.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux dc7c5e4e9de9 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / 89f5911 |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_162 |\r\n| findbugs | v3.1.0-RC1 |\r\n| checkstyle | https://builds.apache.org/job/PreCommit-YARN-Build/20790/artifact/out/diff-checkstyle-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |\r\n| unit | https://builds.apache.org/job/PreCommit-YARN-Build/20790/artifact/out/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/20790/testReport/ |\r\n| Max. process+thread count | 934 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager |\r\n| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/20790/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-18T20:56:25.697+0000","updated":"2018-05-18T20:56:25.697+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16481223","id":"16481223","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"body":"patch 012 fixes 2 failed testcases in FairScheduler","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"created":"2018-05-18T21:31:58.377+0000","updated":"2018-05-18T21:31:58.377+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16481351","id":"16481351","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 35s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 27m 15s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 46s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 39s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 46s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 34s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 15s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 29s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 50s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 46s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 46s{color} | {color:green} the patch passed {color} |\r\n| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 37s{color} | {color:orange} hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager: The patch generated 5 new + 257 unchanged - 1 fixed = 262 total (was 258) {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 46s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 57s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 17s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 26s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 68m 54s{color} | {color:red} hadoop-yarn-server-resourcemanager in the patch failed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 25s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}129m  4s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Reason || Tests ||\r\n| Failed junit tests | hadoop.yarn.server.resourcemanager.scheduler.capacity.TestContainerResizing |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |\r\n| JIRA Issue | YARN-8248 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12924202/YARN-8248-012.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux 5c5e7c8f8730 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / a23ff8d |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_162 |\r\n| findbugs | v3.1.0-RC1 |\r\n| checkstyle | https://builds.apache.org/job/PreCommit-YARN-Build/20796/artifact/out/diff-checkstyle-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |\r\n| unit | https://builds.apache.org/job/PreCommit-YARN-Build/20796/artifact/out/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/20796/testReport/ |\r\n| Max. process+thread count | 933 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager |\r\n| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/20796/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-18T23:42:48.336+0000","updated":"2018-05-18T23:42:48.336+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16481414","id":"16481414","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (/) *{color:green}+1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 40s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 26m 17s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 54s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 38s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 44s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 44s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m  9s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 27s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 43s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 38s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 38s{color} | {color:green} the patch passed {color} |\r\n| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 35s{color} | {color:orange} hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager: The patch generated 5 new + 257 unchanged - 1 fixed = 262 total (was 258) {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 41s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 30s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 16s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 25s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green} 67m 10s{color} | {color:green} hadoop-yarn-server-resourcemanager in the patch passed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 22s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}125m 39s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |\r\n| JIRA Issue | YARN-8248 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12924202/YARN-8248-012.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux 4c50985b66c3 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / a23ff8d |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_162 |\r\n| findbugs | v3.1.0-RC1 |\r\n| checkstyle | https://builds.apache.org/job/PreCommit-YARN-Build/20798/artifact/out/diff-checkstyle-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/20798/testReport/ |\r\n| Max. process+thread count | 922 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager |\r\n| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/20798/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-19T01:50:51.234+0000","updated":"2018-05-19T01:50:51.234+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16482168","id":"16482168","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=haibochen","name":"haibochen","key":"haibochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Haibo Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"[~snemeth] Can you please address the checkstyle issues?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=haibochen","name":"haibochen","key":"haibochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Haibo Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-05-21T04:04:17.013+0000","updated":"2018-05-21T04:04:17.013+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16482255","id":"16482255","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"body":"Hi [~haibochen]!\r\n\r\nFixed those with patch013, except the first that complains about SchedulerUtils.recordFactory as I haven't modified that one and uppercase naming for this field does not make sense I guess.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"created":"2018-05-21T07:25:18.404+0000","updated":"2018-05-21T07:25:30.630+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16482328","id":"16482328","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (/) *{color:green}+1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 35s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 26m 14s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 43s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 39s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 46s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 38s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 10s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 27s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 46s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 38s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 38s{color} | {color:green} the patch passed {color} |\r\n| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 35s{color} | {color:orange} hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager: The patch generated 2 new + 257 unchanged - 1 fixed = 259 total (was 258) {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 44s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 32s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 17s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 26s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green} 67m 30s{color} | {color:green} hadoop-yarn-server-resourcemanager in the patch passed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 26s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}125m 45s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |\r\n| JIRA Issue | YARN-8248 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12924314/YARN-8248-013.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux ea2c3aae2b4c 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / a23ff8d |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_162 |\r\n| findbugs | v3.1.0-RC1 |\r\n| checkstyle | https://builds.apache.org/job/PreCommit-YARN-Build/20804/artifact/out/diff-checkstyle-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/20804/testReport/ |\r\n| Max. process+thread count | 870 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager |\r\n| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/20804/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-21T09:36:35.520+0000","updated":"2018-05-21T09:36:35.520+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16482427","id":"16482427","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (/) *{color:green}+1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 32s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 26m 56s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 48s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 41s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 48s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 54s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 13s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 28s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 48s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 45s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 45s{color} | {color:green} the patch passed {color} |\r\n| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 38s{color} | {color:orange} hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager: The patch generated 1 new + 257 unchanged - 1 fixed = 258 total (was 258) {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 47s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 50s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 24s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 26s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green} 68m 28s{color} | {color:green} hadoop-yarn-server-resourcemanager in the patch passed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 23s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}128m 26s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |\r\n| JIRA Issue | YARN-8248 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12924323/YARN-8248-014.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux b9cdbcec529c 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / a23ff8d |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_162 |\r\n| findbugs | v3.1.0-RC1 |\r\n| checkstyle | https://builds.apache.org/job/PreCommit-YARN-Build/20807/artifact/out/diff-checkstyle-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/20807/testReport/ |\r\n| Max. process+thread count | 819 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager U: hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager |\r\n| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/20807/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-21T11:59:07.338+0000","updated":"2018-05-21T11:59:07.338+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16482576","id":"16482576","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=haibochen","name":"haibochen","key":"haibochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Haibo Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"I'm okay with not fixing this one. But it is indeed a convention to cap static variables, IIRC.\r\n\r\n+1 checking it in.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=haibochen","name":"haibochen","key":"haibochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Haibo Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-05-21T14:56:23.266+0000","updated":"2018-05-21T14:56:23.266+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16482603","id":"16482603","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=haibochen","name":"haibochen","key":"haibochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Haibo Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks [~snemeth] for the contribution and [~grepas] for additional review. I have committed the patch to trunk","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=haibochen","name":"haibochen","key":"haibochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Haibo Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-05-21T15:10:36.815+0000","updated":"2018-05-21T15:10:36.815+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16482627","id":"16482627","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"SUCCESS: Integrated in Jenkins build Hadoop-trunk-Commit #14244 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/14244/])\nYARN-8248. Job hangs when a job requests a resource that its queue does (haibochen: rev f48fec83d0f2d1a781a141ad7216463c5526321f)\n* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java\n* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java\n* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/TestFairScheduler.java\n* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerUtils.java\n* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSParentQueue.java\n* (edit) hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerTestBase.java\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-21T15:32:40.131+0000","updated":"2018-05-21T15:32:40.131+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13157147/comment/16483546","id":"16483546","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"body":"Thanks [~haibochen] for the reviews!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=snemeth","name":"snemeth","key":"snemeth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=snemeth&avatarId=33743","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=snemeth&avatarId=33743","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=snemeth&avatarId=33743","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=snemeth&avatarId=33743"},"displayName":"Szilard Nemeth","active":true,"timeZone":"Europe/Budapest"},"created":"2018-05-22T06:13:01.428+0000","updated":"2018-05-22T06:13:01.428+0000"}],"maxResults":42,"total":42,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/YARN-8248/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i3tcnb:"}}