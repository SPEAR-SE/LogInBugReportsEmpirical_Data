[log4j gives preference to system properties over properties in log4j.properties
zookeeper.root.logger is configured in log4j.properties as well as it is being passed as system property from zkServer.sh
{code}
nohup "$JAVA" $ZOO_DATADIR_AUTOCREATE "-Dzookeeper.log.dir=${ZOO_LOG_DIR}" "-Dzookeeper.log.file=${ZOO_LOG_FILE}" \
    "-Dzookeeper.root.logger=${ZOO_LOG4J_PROP}" \
{code} 
This is the reason {color:red}zookeeper.root.logger{color} property in {color:red}log4j.properties{color} is never used., Hello [~arshad.mohammad].

As you noted, a system property will override the default value in the log4j.properties file.  If you're launching ZooKeeper through its scripts (zkServer.sh/zkCli.sh), then libExec/zkEnv.sh will set the {{ZOO_LOG4J_PROP}} to {{INFO}} level:

{code}
    ZOO_LOG4J_PROP="INFO,CONSOLE"
{code}

Because of that, editing the value in log4j.properties directly won't change the logging level.  Instead, we can control it by changing the {{ZOO_LOG4J_PROP}} environment variable, either by setting it in your environment before launching the script or by editing libexec/zkEnv.sh.

Another thing to note is that in addition to the loggers, there are separate properties controlling thresholds on the appenders too.  I see from the description that you want {{DEBUG}} level, but the default thresholds are {{INFO}}:

{code}
zookeeper.console.threshold=INFO
zookeeper.log.threshold=INFO
log4j.appender.CONSOLE.Threshold=${zookeeper.console.threshold}
log4j.appender.ROLLINGFILE.Threshold=${zookeeper.log.threshold}
{code}

These settings don't map directly to their own environment variables like {{ZOO_LOG4J_PROP}}.  Instead, you can use {{SERVER_JVMFLAGS}} and {{CLIENT_JVMFLAGS}} to override them.

Putting all of that together, you can get {{DEBUG}} logging on both the server and client side by making the following changes in libexec/zkEnv.sh:

{code}
if [ "x${ZOO_LOG4J_PROP}" = "x" ]
then
    ZOO_LOG4J_PROP="DEBUG,CONSOLE"
fi
{code}

{code}
# default heap for zookeeper server
ZK_SERVER_HEAP="${ZK_SERVER_HEAP:-1000}"
export SERVER_JVMFLAGS="-Xmx${ZK_SERVER_HEAP}m -Dzookeeper.console.threshold=DEBUG $SERVER_JVMFLAGS"

# default heap for zookeeper client
ZK_CLIENT_HEAP="${ZK_CLIENT_HEAP:-256}"
export CLIENT_JVMFLAGS="-Xmx${ZK_CLIENT_HEAP}m -Dzookeeper.console.threshold=DEBUG $CLIENT_JVMFLAGS"
{code}

Alternatively, you can set these environment variables before launching the scripts, or you could write a completely different log4j.properties file if you prefer a different setup that doesn't rely on these environment variables.

I just tested this on a fresh trunk distro build, and it worked.  ZOOKEEPER-980 originally introduced these settings, inspired by similar scripts in Hadoop.  It appears this is all working by design, so I'm going to resolve the issue as Not a Problem.  If you still think there is a bug, please feel free to reopen it and add more details in the comments.

Thanks!
, Thanks [~cnauroth] for looking into the issue.
It is good that we have option for customizing the logging behaviour through various ways.

But I think that default behaviour should come from log4j.properties because this is the place where any user by default will go for changing the log.
If ZOO_LOG4J_PROP values is not set then{color:red} we should not set any default value{color}, which is being set in zkEnv.sh, also we should not pass as system property.
Same thing should be done for other such variables like ZOO_LOG_DIR, Thank you, Arshad.  I know existing deployments are dependent on the current setup with these environment variables and system properties, so I'm inclined to leave it mostly intact.  However, I also think needing to set 2 separate properties to achieve debug logging is a bit cumbersome.

Maybe one thing we could safely do here is to set the thresholding to {{ALL}}.  (Patch attached.)  With that in place, you could set just {{ZOO_LOG4J_PROP}} to achieve debug logging.  ZOOKEEPER-980 states that the goal was consistency with Hadoop's logging configuration, and Hadoop sets thresholding to {{ALL}}.

This could still be seen as a backwards-incompatible change if admins were dependent on the existing thresholding.  Maybe this change still can go into trunk though.  I'm not familiar with ZooKeeper's versioning and compatibility guidelines, so I'll need to defer to established contributors to make that call.

BTW, if your goal is just to get the debug logging on with a small simple log4j.properties change, then maybe the simplest thing is just to change the root logger setting completely so that it bypasses the environment variables and system properties:

{code}
#log4j.rootLogger=${zookeeper.root.logger}
log4j.rootLogger=DEBUG, CONSOLE
{code}
, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12728464/ZOOKEEPER-2170.001.patch
  against trunk revision 1672934.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2651//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2651//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2651//console

This message is automatically generated., bq. -1 tests included. The patch doesn't appear to include any new or modified tests.

No new tests were added, because it's a configuration change only., Thanks [~cnauroth] for looking into the issue again.

The patch ZOOKEEPER-2170.001.patch is slightly in different direction.

My concern is simply that default logging should be as per the log4j.properties.

{quote}
BTW, if your goal is just to get the debug logging on with a small simple log4j.properties change, then maybe the simplest thing is just to change the root logger setting completely so that it bypasses the environment variables and system properties:
{code}
#log4j.rootLogger=${zookeeper.root.logger}
log4j.rootLogger=DEBUG, CONSOLE
{code}
{quote}
This issue is not about how to make it work. But it is about how it should be be by default.

{color:red}If other people also feel the same then lets modify the default behavior otherwise leave as it is. {color}, [~arshad.mohammad], [~cnauroth]: any conclusions here?, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12728464/ZOOKEEPER-2170.001.patch
  against trunk revision 1686767.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2777//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2777//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2777//console

This message is automatically generated., Hi [~rgs].

My own opinion is that the existing configurability is sufficient and consistent with other Apache projects like Hadoop.  We can consider committing the patch I attached, which makes things a bit easier to tune by relaxing the thresholding.  Any further changes beyond that would risk backwards-incompatibility with the configurations in existing deployments.  For more details, see my prior comment here:

https://issues.apache.org/jira/browse/ZOOKEEPER-2170?focusedCommentId=14514522&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14514522

Of course, this is a matter of opinion, but that's what I'm currently thinking.

Thanks!, Aligning our configs with Hadoop sounds like a good direction. What do you think of the patch proposed [~arshad.mohammad]?, Lets me further clarify what are the problems with the current default configuration as per my understanding

Suppose I downloaded latest zookeeper, installed and run it without any configuration change
Log will go to console logger and console is redirected to file zookeeper-root-server-host-name.out
{color:red}Problem 1:{color} This file keeps on growing, if zookeeper runs many number of days or logging frequency is high(in case errors), this file will grow in GBs, big enough that it can not be open
{color:red}Problem 2:{color} When I restart the zookeeper, it will overwrite the previous zookeeper-root-server-host-name.out file and create new file, all the log history is gone
{color:red}Problem 3:{color}  after observing Problem 1 and Problem 2 any user would go and modify the log4.properties but it would not do any effect, as I explained in my earlier comments

you are right [~rgs], [~cnauroth] 's patch in a way to align with hadoop's configuration.
But it is different form what is the expectation of this JIRA. May be [~cnauroth] 's patch can be committed as part of different JIRA

Expectation of this JIRA is: 
1) Default logging behaviour should come from log4.properties
2) It is good if we can make ROLLINGFILE as the default logger, Sounds sensible to me, could you provide a patch for that?, yes, i will provide patch soon, Submitted the patch ZOOKEEPER-2170-002.patch.

1) Changed default logger to ROLLINGFILE  in log4j.properteis
2) Removed the default value assignment to ZOO_LOG4J_PROP, so that default logger from log4j.properties are used

3) Default values for ZOO_LOG_FILE and ZOO_LOG_DIR  are not removed because these default values make more sense than those which are specified in log4j.properties. Log file name has some dynamic portion in it. If default used for log directory from log4j.properties then it is location will depend on from where the command is being executed, which is not correct.

  , -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12742498/ZOOKEEPER-2170-002.patch
  against trunk revision 1688041.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2786//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2786//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2786//console

This message is automatically generated., {quote}
{color:red}-1{color}  tests included. The patch doesn't appear to include any new or modified tests.
{quote}
No new tests were added, because it's a configuration and shell script change only., Thank you for the patch, Arshad.  Since you are working on this, I have unassigned it from myself.  I couldn't assign it to you though.  Maybe you're not listed in jira as a ZooKeeper contributor.  A committer would be able to help add your account as a contributor and get this assigned to you.

I applied this patch and built a distro locally with {{ant clean tar}}.  I saw a few potential problems.

# {{zkServer.sh start-foreground}} no longer logs to console.  Seeing the logs in the console is one of the primary reasons to run {{start-foreground}}.
# Running {{zkCli.sh}}, the logs are no longer going to the console.
# It looks like {{ZOO_LOG_FILE}} now can be user-specified in the environment, and the scripts only override if it's not set.  Is that required?  If so, then is the same change needed in {{zkCli.sh}}?
# Ideally, the same changes would be applied to the cmd scripts so that it's consistent on Windows.
, Thanks [~cnauroth] for reviewing the patch. Worked on your comments and submitting the patch again

# It is not working becuase now defualt appender is ROLLINGFILE. It will not work even if ROLLINGFILE appender is set through ZOO_LOG4J_PROP
To make it work, used another environment variable ZOO_FOREGROUND_LOG4J_PROP, defualt vlaue is 
{code}
ZOO_FOREGROUND_LOG4J_PROP=INFO,CONSOLE
{code}
User can set this envrironment variable to change the log level
# {{zkCli.sh}}  should not ncessarity log on console. So I think it is OK, if it is logging in file.
There was another problem that even it was not logging in file. I have corrected that
# Same changes done in {{zkCli.sh}} also.
# Currenlty in windows scripts are not in place to show the proper running status of the server at the time of starup. Console log is the only immediate information to user to know the running status. 
If we make ROLLINGFILE appender as default the user will be clueless about what is going on. He has to look into log file even for run status. 
So if we sync these changes with Windows scripts, user experience will not be good, that is why not syncing with Windows., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12742725/ZOOKEEPER-2170-003.patch
  against trunk revision 1688041.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2789//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2789//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2789//console

This message is automatically generated., Hi [~rgs], [~cnauroth]
Please review and give your comments., If I am not mistaken, 3.4.6 has this issue as well.

When can I expect this to be fixed ?

Thanks, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12742725/ZOOKEEPER-2170-003.patch
  against trunk revision 1705794.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2902//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2902//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2902//console

This message is automatically generated., Hi [~yuzhihong@gmail.com].

There is not consensus yet on a way to make this change in a backwards-compatible way.  Please see the prior comments for full details.  If we cannot achieve backwards-compatibility, then that would prevent the change from ever entering the 3.4 code line.

[~arshad.mohammad], thank you for updating the patch.  I'll bump this up in my queue to review and retest., Any update on when this can be merged? , Thanks [~yuzhihong@gmail.com], [~neha.bathra] for showing interest in this functionality.
I will soon submit new patch., Submitting new patch ZOOKEEPER-2170-004.patch
# Default logger is changed to ROLLINGFILE
# On Winodws default logger is still kept as CONSOLE. On windows zookeeper server, by default, always starts in foreground. So it is OK to keep the default logger CONSOLE in windows
# Included content form the patch given by [~cnauroth] as it will in help easily changing and reflecting the log levels., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12742725/ZOOKEEPER-2170-003.patch
  against trunk revision 1750025.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3250//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3250//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3250//console

This message is automatically generated., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12813638/ZOOKEEPER-2170-004.patch
  against trunk revision 1750025.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3251//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3251//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3251//console

This message is automatically generated., Previous patch failed unit tests. Failed test case was using CONSOLE appender. Having separate log4.properties is common practice and need.
Corrected the test cases by adding log4.properties in test config., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12813671/ZOOKEEPER-2170-005.patch
  against trunk revision 1750025.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 4 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3252//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3252//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3252//console

This message is automatically generated., ping [~cnauroth], [~rgs]]