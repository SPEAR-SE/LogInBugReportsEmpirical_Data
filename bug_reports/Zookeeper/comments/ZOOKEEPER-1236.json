[Eugene - could you take a look at resolving this?, This issue was discussed in course of ZOOKEEPER-938 also, beginning here:

https://issues.apache.org/jira/browse/ZOOKEEPER-938?focusedCommentId=13080545&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13080545, 
{quote}
Unfortunately I couldn't find support for obtaining the default Kerberos realm in 
java.security or javax.security.

(In fact, it seems that javax.security uses sun.security internally, for example: http://www.java2s.com/Open-Source/Java-Document/6.0-JDK-Core/security/javax/security/auth/kerberos/KerberosPrincipal.java.htm.
(see "import sun.security.krb5.Asn1Exception;" in the source code)).

So I don't see any way around using the sun.* classes.

{quote}

https://issues.apache.org/jira/browse/ZOOKEEPER-938?focusedCommentId=13081866&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13081866, Hadoop core also throws the same warnings, from src/core/org/apache/hadoop/security/KerberosName.java, src/core/org/apache/hadoop/security/SecurityUtil.java, org/apache/hadoop/security/authentication/client/KerberosAuthenticator.java, and other places. You need a JRE fix or to avoid Kerberos entirely I think Patrick., That's unfortunate. What about HADOOP-6941 ? That seemed to be on the road to resolving this for Hadoop. No?
, Or does HADOOP-6941 only allow you to plug in other implementations? but not get rid of the warnings?

Could we separate this code out into a separately releasable artifact? Something that could be reused by the many projects that are now integrating with kerberos? Then only one build would have the warnings. ;-), Thanks to Patrick Hunt for the mention of HADOOP-6941., Looking at HADOOP-6941 patch, they created a KerberosUtil.java class that uses reflect and chooses between IBM or Sun jvm. KerberosName.java in ZK is similar to the one in Hadoop. 
Since there were no more comments lately, I'm adding a patch to fix this issue based on hadoop common, built under zk branch-3.4 . Please, take a look., My bad, I used the Submit Patch button, instead of the Attach Files. Attaching the patch now., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12531825/zookeeper-1236.patch
  against trunk revision 1337029.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1093//console

This message is automatically generated., Hi Adalberto,
 
Please add 
{code}
[diff]
    noprefix = true
{code}

to your $HOME/.gitconfig and re-create your patch so that the Hadoop QA process can use it.

(I encountered the same problem back when I first started submitting JIRA patches), Fixed git prefix, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12531980/zookeeper-1236-v2.patch
  against trunk revision 1337029.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1095//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1095//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1095//console

This message is automatically generated., -1 tests included. The patch doesn't appear to include any new or modified tests.
Please justify why no new tests are needed for this patch.
Also please list what manual steps were performed to verify this patch.

This was tested for both ibm jvm and sun jvm. I think the unit tests already created for testing the KerberosName.java are enough here. Is there anything else needed?, Thanks Adalberto!, Integrated in ZooKeeper-trunk #1600 (See [https://builds.apache.org/job/ZooKeeper-trunk/1600/])
    ZOOKEEPER-1236. Security uses proprietary Sun APIs (Adalberto Medeiros via phunt) (Revision 1355651)

     Result = SUCCESS
phunt : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1355651
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/auth/KerberosName.java
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/util/KerberosUtil.java
]