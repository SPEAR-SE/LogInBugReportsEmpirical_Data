[[~andorm] I'm trying to go through this problem to see if this is a real correctness issue or by designed behavior.

So first, let's see if we're on the same page about the designed behavior. The setWatches request is treated as a read request in Zeus, ZK only guarantees read after write for the same session on the same server, if it reconnects to a different server, that server might be slow, either slow syncing with leader or slow due to GC, it may not get the commits from leader on time, so it doesn't guarantee you'll see it unless issuing sync request. So this is not a follower/leader syncing time problem, this exists during broadcasting time as well.

To me, this seems to be a test problem, not the code, and we should check if we can issue sync before setWatches to fix the flaky test here., Got it. That was pretty much my other thinking: I wasn't sure about that the problem didn't exist before and whether the unit test actually makes sense.
I'm not sure if we can issue sync, because reconnection / setWatches logic is automatic and built into the client. Maybe we should just remove this test or remove the shutdown / restart part, because it's not clear to me what exactly are we trying to test here by restarting the follower., [~andorm] the change in the updated PR looks good to me, I've approved it., Is this fix needed for 3.5.5?]