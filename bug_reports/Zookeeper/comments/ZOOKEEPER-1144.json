[Vishal Kher writes to dev list:
"Error looks similar to what I have been seeing. I reported the cause of the problem here: https://issues.apache.org/jira/browse/ZOOKEEPER-1144
"., Thanks Vishal, hopefully this is the same problem with the same solution., adding links to test failures likely caused by this bugs, Fix looks to be very simple. Running tests now, will submit patch if tests succeed., Attaching patch. All tests passed for me after this fix., Submitting patch for trunk., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12489635/ZOOKEEPER-1144.patch
  against trunk revision 1152141.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/437//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/437//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/437//console

This message is automatically generated., Existing tests were enough to catch the problem and also to verify the fix., Vishal, can you just explain quickly why moving the ackSet.add to its new location (above waitForEpochAck but below the LearnerCnxAcceptor start) will fix the bug as you described it in the bug report? I'm not super familiar with this part of the code, but if you can just point it out to me I'm happy to +1 this and check it in asap so our builds will stop failing., Actually I think I see. If we set up the epoch first, the LearnerHandler thread can complete to processAck before the leader thread completes to add itself to the ack set, causing the bug. Good fix. +1 from me, will check this in., Committed to trunk, rev 115664, Integrated in ZooKeeper-trunk #1261 (See [https://builds.apache.org/job/ZooKeeper-trunk/1261/])
    ZOOKEEPER-1144: ZooKeeperServer not starting on leader due to a race condition (Vishal K via camille)

camille : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1156649
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/Leader.java
, {quote}Actually I think I see. If we set up the epoch first, the LearnerHandler thread can complete to processAck before the leader thread completes to add itself to the ack set, causing the bug. Good fix. +1 from me, will check this in.{quote}

Yes, in addition, per my understanding, waitForEpochAck() which is called by LearnerHandler before calling processAck() ensures correctness per the ZAB 1.0 design.]