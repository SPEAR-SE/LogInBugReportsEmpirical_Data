[+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12849650/ZOOKEEPER-2680-01.patch
  against trunk revision 8771ffdaacb87126a485ae740558f6a288ab980b.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3571//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3571//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3571//console

This message is automatically generated., A few comments:

{code}
private static Set<String> EMPTY_SET = Collections.unmodifiableSet(new HashSet<String>(0));
{code}

is lacking the *final* modifier. Also, it can be:

{code}
private static final Set<String> EMPTY_SET = Collections.emptySet();
{code}

About {{DataNode.setChildren()}} (would love the comments of [~breed] and [~fpj], as I can be about to write something utterly stupid :o) ): 

{code}
    public synchronized void setChildren(HashSet<String> children) {
        this.children = children;
    }
{code}

The code above could potentially pass a null. Is this behaviour expected? Say, instead of providing a {{DataNode.clear()}} method we just pass {{DataNode.setChildren(null)}} to reset all the children? Also, passing an alien reference (children) that can be changed outside the scope of {{DataNode}} seems potentially dangerous too. IMHO, {{DataNode.setChildren}} could have been coded more defensively. I would have done something akin the code below, but *of course* performance considerations should be taken into account. 

{code}
    public synchronized void setChildren(Set<String> children) {
        if (children == null || children.isEmpty()) // isEmpty() is optional
           return;
        if (this.children == null)
           this.children = new HashSet<>(8);
        this.children.addAll(children);
    }

    // new method
    public synchronized void clear() {
         children.clear();
    }
{code}

All in all, I am +1 with this patch. :) Only took the opportunity to clarify this {{DataNode.setChildren}} method use, but I think we can commit this patch without changing the method just cited., GitHub user arshadmohammad opened a pull request:

    https://github.com/apache/zookeeper/pull/160

    ZOOKEEPER-2680:Correct DataNode.getChildren() inconsistent behaviour.

    DataNode.getChildren() API behavior should be changed and it should always return empty set if the node does not have any child. Currently this API returns some times null some times empty set.


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/arshadmohammad/zookeeper ZOOKEEPER-2680-DataNode-getChildren

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/160.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #160
    
----

----
, Thanks [~eribeiro] for your review comments.
# Handled first comments
# For second comment, I think it is not required to check null in setChildren api, null is already handled gracefully in getChildren API.

I raised a PR, please have a look., Github user eribeiro commented on the issue:

    https://github.com/apache/zookeeper/pull/160
  
    +1. LGTM. :+1: 
, [~arshad.mohammad], I agree with you: it's not required to deal with null in setChildren. Nevermind, my comment was just out of curiosity if clearing a collection by passing null was a design decision. Say, instead of providing a {{DataNode.clear()}} method.

+1 IMO., +1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/266//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/266//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/266//console

This message is automatically generated., Github user afine commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/160#discussion_r98578122
  
    --- Diff: src/java/test/org/apache/zookeeper/server/DataNodeTest.java ---
    @@ -0,0 +1,54 @@
    +/**
    + * Licensed to the Apache Software Foundation (ASF) under one
    + * or more contributor license agreements.  See the NOTICE file
    + * distributed with this work for additional information
    + * regarding copyright ownership.  The ASF licenses this file
    + * to you under the Apache License, Version 2.0 (the
    + * "License"); you may not use this file except in compliance
    + * with the License.  You may obtain a copy of the License at
    + *
    + *     http://www.apache.org/licenses/LICENSE-2.0
    + *
    + * Unless required by applicable law or agreed to in writing, software
    + * distributed under the License is distributed on an "AS IS" BASIS,
    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    + * See the License for the specific language governing permissions and
    + * limitations under the License.
    + */
    +package org.apache.zookeeper.server;
    +
    +import static org.junit.Assert.*;
    +
    +import java.util.Set;
    +
    +import org.junit.Test;
    +
    +public class DataNodeTest {
    +
    +    @Test
    +    public void testGetChildrenShouldReturnEmptySetWhenThereAreNoChidren() {
    +        // create DataNode and call getChildren
    +        DataNode dataNode = new DataNode();
    +        Set<String> children = dataNode.getChildren();
    +        assertNotNull(children);
    +        assertEquals(0, children.size());
    +
    +        // add child,remove child and then call getChildren
    +        String child = "child";
    +        dataNode.addChild(child);
    +        dataNode.removeChild(child);
    +        children = dataNode.getChildren();
    +        assertNotNull(children);
    +        assertEquals(0, children.size());
    +
    +        // Returned empty set must not be modifiable
    --- End diff --
    
    nit: make this a separate test
, Github user eribeiro commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/160#discussion_r98662079
  
    --- Diff: src/java/test/org/apache/zookeeper/server/DataNodeTest.java ---
    @@ -0,0 +1,54 @@
    +/**
    + * Licensed to the Apache Software Foundation (ASF) under one
    + * or more contributor license agreements.  See the NOTICE file
    + * distributed with this work for additional information
    + * regarding copyright ownership.  The ASF licenses this file
    + * to you under the Apache License, Version 2.0 (the
    + * "License"); you may not use this file except in compliance
    + * with the License.  You may obtain a copy of the License at
    + *
    + *     http://www.apache.org/licenses/LICENSE-2.0
    + *
    + * Unless required by applicable law or agreed to in writing, software
    + * distributed under the License is distributed on an "AS IS" BASIS,
    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    + * See the License for the specific language governing permissions and
    + * limitations under the License.
    + */
    +package org.apache.zookeeper.server;
    +
    +import static org.junit.Assert.*;
    +
    +import java.util.Set;
    +
    +import org.junit.Test;
    +
    +public class DataNodeTest {
    +
    +    @Test
    +    public void testGetChildrenShouldReturnEmptySetWhenThereAreNoChidren() {
    +        // create DataNode and call getChildren
    +        DataNode dataNode = new DataNode();
    +        Set<String> children = dataNode.getChildren();
    +        assertNotNull(children);
    +        assertEquals(0, children.size());
    +
    +        // add child,remove child and then call getChildren
    +        String child = "child";
    +        dataNode.addChild(child);
    +        dataNode.removeChild(child);
    +        children = dataNode.getChildren();
    +        assertNotNull(children);
    +        assertEquals(0, children.size());
    +
    +        // Returned empty set must not be modifiable
    --- End diff --
    
    I usually would agree with separating in two methods, but I think we can leave those in same method as they are so closely related... Aestetically pleasant, I mean. But just my opinion. :smile:
, Github user eribeiro commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/160#discussion_r98709271
  
    --- Diff: src/java/test/org/apache/zookeeper/server/DataNodeTest.java ---
    @@ -0,0 +1,54 @@
    +/**
    + * Licensed to the Apache Software Foundation (ASF) under one
    + * or more contributor license agreements.  See the NOTICE file
    + * distributed with this work for additional information
    + * regarding copyright ownership.  The ASF licenses this file
    + * to you under the Apache License, Version 2.0 (the
    + * "License"); you may not use this file except in compliance
    + * with the License.  You may obtain a copy of the License at
    + *
    + *     http://www.apache.org/licenses/LICENSE-2.0
    + *
    + * Unless required by applicable law or agreed to in writing, software
    + * distributed under the License is distributed on an "AS IS" BASIS,
    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    + * See the License for the specific language governing permissions and
    + * limitations under the License.
    + */
    +package org.apache.zookeeper.server;
    +
    +import static org.junit.Assert.*;
    --- End diff --
    
    FIY, ZK codebase usually don't put the static import in `Assert` methods, so the methods below are like `Assert.assertNotNull()`
    
    Of course, this is not consistent across the whole codebase and I myself prefer the static import, but usually the wildcard is frowned upon here, afaik.
, Github user eribeiro commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/160#discussion_r98710030
  
    --- Diff: src/java/test/org/apache/zookeeper/server/DataNodeTest.java ---
    @@ -0,0 +1,54 @@
    +/**
    + * Licensed to the Apache Software Foundation (ASF) under one
    + * or more contributor license agreements.  See the NOTICE file
    + * distributed with this work for additional information
    + * regarding copyright ownership.  The ASF licenses this file
    + * to you under the Apache License, Version 2.0 (the
    + * "License"); you may not use this file except in compliance
    + * with the License.  You may obtain a copy of the License at
    + *
    + *     http://www.apache.org/licenses/LICENSE-2.0
    + *
    + * Unless required by applicable law or agreed to in writing, software
    + * distributed under the License is distributed on an "AS IS" BASIS,
    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    + * See the License for the specific language governing permissions and
    + * limitations under the License.
    + */
    +package org.apache.zookeeper.server;
    +
    +import static org.junit.Assert.*;
    +
    +import java.util.Set;
    +
    +import org.junit.Test;
    +
    +public class DataNodeTest {
    +
    +    @Test
    +    public void testGetChildrenShouldReturnEmptySetWhenThereAreNoChidren() {
    +        // create DataNode and call getChildren
    +        DataNode dataNode = new DataNode();
    +        Set<String> children = dataNode.getChildren();
    +        assertNotNull(children);
    +        assertEquals(0, children.size());
    +
    +        // add child,remove child and then call getChildren
    +        String child = "child";
    +        dataNode.addChild(child);
    +        dataNode.removeChild(child);
    +        children = dataNode.getChildren();
    +        assertNotNull(children);
    +        assertEquals(0, children.size());
    +
    +        // Returned empty set must not be modifiable
    --- End diff --
    
    Ignore my previous comment. +1 about putting this in a separate method.
, Github user arshadmohammad commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/160#discussion_r98743925
  
    --- Diff: src/java/test/org/apache/zookeeper/server/DataNodeTest.java ---
    @@ -0,0 +1,54 @@
    +/**
    + * Licensed to the Apache Software Foundation (ASF) under one
    + * or more contributor license agreements.  See the NOTICE file
    + * distributed with this work for additional information
    + * regarding copyright ownership.  The ASF licenses this file
    + * to you under the Apache License, Version 2.0 (the
    + * "License"); you may not use this file except in compliance
    + * with the License.  You may obtain a copy of the License at
    + *
    + *     http://www.apache.org/licenses/LICENSE-2.0
    + *
    + * Unless required by applicable law or agreed to in writing, software
    + * distributed under the License is distributed on an "AS IS" BASIS,
    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    + * See the License for the specific language governing permissions and
    + * limitations under the License.
    + */
    +package org.apache.zookeeper.server;
    +
    +import static org.junit.Assert.*;
    --- End diff --
    
    I think it is OK to have one import instead of multiple imports. Not changing any thing here.
, Github user arshadmohammad commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/160#discussion_r98743966
  
    --- Diff: src/java/test/org/apache/zookeeper/server/DataNodeTest.java ---
    @@ -0,0 +1,54 @@
    +/**
    + * Licensed to the Apache Software Foundation (ASF) under one
    + * or more contributor license agreements.  See the NOTICE file
    + * distributed with this work for additional information
    + * regarding copyright ownership.  The ASF licenses this file
    + * to you under the Apache License, Version 2.0 (the
    + * "License"); you may not use this file except in compliance
    + * with the License.  You may obtain a copy of the License at
    + *
    + *     http://www.apache.org/licenses/LICENSE-2.0
    + *
    + * Unless required by applicable law or agreed to in writing, software
    + * distributed under the License is distributed on an "AS IS" BASIS,
    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    + * See the License for the specific language governing permissions and
    + * limitations under the License.
    + */
    +package org.apache.zookeeper.server;
    +
    +import static org.junit.Assert.*;
    +
    +import java.util.Set;
    +
    +import org.junit.Test;
    +
    +public class DataNodeTest {
    +
    +    @Test
    +    public void testGetChildrenShouldReturnEmptySetWhenThereAreNoChidren() {
    +        // create DataNode and call getChildren
    +        DataNode dataNode = new DataNode();
    +        Set<String> children = dataNode.getChildren();
    +        assertNotNull(children);
    +        assertEquals(0, children.size());
    +
    +        // add child,remove child and then call getChildren
    +        String child = "child";
    +        dataNode.addChild(child);
    +        dataNode.removeChild(child);
    +        children = dataNode.getChildren();
    +        assertNotNull(children);
    +        assertEquals(0, children.size());
    +
    +        // Returned empty set must not be modifiable
    --- End diff --
    
    Done
, +1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/269//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/269//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/269//console

This message is automatically generated., Github user eribeiro commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/160#discussion_r98745304
  
    --- Diff: src/java/test/org/apache/zookeeper/server/DataNodeTest.java ---
    @@ -0,0 +1,66 @@
    +/**
    + * Licensed to the Apache Software Foundation (ASF) under one
    + * or more contributor license agreements.  See the NOTICE file
    + * distributed with this work for additional information
    + * regarding copyright ownership.  The ASF licenses this file
    + * to you under the Apache License, Version 2.0 (the
    + * "License"); you may not use this file except in compliance
    + * with the License.  You may obtain a copy of the License at
    + *
    + *     http://www.apache.org/licenses/LICENSE-2.0
    + *
    + * Unless required by applicable law or agreed to in writing, software
    + * distributed under the License is distributed on an "AS IS" BASIS,
    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    + * See the License for the specific language governing permissions and
    + * limitations under the License.
    + */
    +package org.apache.zookeeper.server;
    +
    +import static org.junit.Assert.*;
    +
    +import java.util.Set;
    +
    +import org.junit.Test;
    +
    +public class DataNodeTest {
    +
    +    @Test
    +    public void testGetChildrenShouldReturnEmptySetWhenThereAreNoChidren() {
    +        // create DataNode and call getChildren
    +        DataNode dataNode = new DataNode();
    +        Set<String> children = dataNode.getChildren();
    +        assertNotNull(children);
    +        assertEquals(0, children.size());
    +
    +        // add child,remove child and then call getChildren
    +        String child = "child";
    +        dataNode.addChild(child);
    +        dataNode.removeChild(child);
    +        children = dataNode.getChildren();
    +        assertNotNull(children);
    +        assertEquals(0, children.size());
    +
    +        // Returned empty set must not be modifiable
    +        children = dataNode.getChildren();
    +        try {
    +            children.add("new child");
    +            fail("UnsupportedOperationException is expected");
    +        } catch (UnsupportedOperationException e) {
    +            // do nothing
    +        }
    +    }
    +
    +    @Test
    +    public void testGetChildrenRetrunsImmutableEmptySet() {
    +        // Returned empty set must not be modifiable
    --- End diff --
    
    IMO, the method name makes this comment unnecessary
, Github user eribeiro commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/160#discussion_r98745143
  
    --- Diff: src/java/test/org/apache/zookeeper/server/DataNodeTest.java ---
    @@ -0,0 +1,66 @@
    +/**
    + * Licensed to the Apache Software Foundation (ASF) under one
    + * or more contributor license agreements.  See the NOTICE file
    + * distributed with this work for additional information
    + * regarding copyright ownership.  The ASF licenses this file
    + * to you under the Apache License, Version 2.0 (the
    + * "License"); you may not use this file except in compliance
    + * with the License.  You may obtain a copy of the License at
    + *
    + *     http://www.apache.org/licenses/LICENSE-2.0
    + *
    + * Unless required by applicable law or agreed to in writing, software
    + * distributed under the License is distributed on an "AS IS" BASIS,
    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    + * See the License for the specific language governing permissions and
    + * limitations under the License.
    + */
    +package org.apache.zookeeper.server;
    +
    +import static org.junit.Assert.*;
    +
    +import java.util.Set;
    +
    +import org.junit.Test;
    +
    +public class DataNodeTest {
    +
    +    @Test
    +    public void testGetChildrenShouldReturnEmptySetWhenThereAreNoChidren() {
    +        // create DataNode and call getChildren
    +        DataNode dataNode = new DataNode();
    +        Set<String> children = dataNode.getChildren();
    +        assertNotNull(children);
    +        assertEquals(0, children.size());
    +
    +        // add child,remove child and then call getChildren
    +        String child = "child";
    +        dataNode.addChild(child);
    +        dataNode.removeChild(child);
    +        children = dataNode.getChildren();
    +        assertNotNull(children);
    +        assertEquals(0, children.size());
    +
    +        // Returned empty set must not be modifiable
    +        children = dataNode.getChildren();
    +        try {
    +            children.add("new child");
    +            fail("UnsupportedOperationException is expected");
    +        } catch (UnsupportedOperationException e) {
    +            // do nothing
    +        }
    +    }
    +
    +    @Test
    +    public void testGetChildrenRetrunsImmutableEmptySet() {
    --- End diff --
    
    Typo: retruns
, Github user eribeiro commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/160#discussion_r98745482
  
    --- Diff: src/java/test/org/apache/zookeeper/server/DataNodeTest.java ---
    @@ -0,0 +1,54 @@
    +/**
    + * Licensed to the Apache Software Foundation (ASF) under one
    + * or more contributor license agreements.  See the NOTICE file
    + * distributed with this work for additional information
    + * regarding copyright ownership.  The ASF licenses this file
    + * to you under the Apache License, Version 2.0 (the
    + * "License"); you may not use this file except in compliance
    + * with the License.  You may obtain a copy of the License at
    + *
    + *     http://www.apache.org/licenses/LICENSE-2.0
    + *
    + * Unless required by applicable law or agreed to in writing, software
    + * distributed under the License is distributed on an "AS IS" BASIS,
    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    + * See the License for the specific language governing permissions and
    + * limitations under the License.
    + */
    +package org.apache.zookeeper.server;
    +
    +import static org.junit.Assert.*;
    --- End diff --
    
    Fair enough.
, Github user eribeiro commented on the issue:

    https://github.com/apache/zookeeper/pull/160
  
    @arshadmohammad My two last questions (really!):
     
    * Is this change supposed to be applied to branch-3.4 and branch-3.5? 
    
    * I see that `DataNode.getChildren()` is called in half a dozen places with more or less the logic below:
    
    ```
                Set<String> childs = node.getChildren();
                if (childs != null) {
                    children = childs.toArray(new String[childs.size()]);
                }
                // children size is zero
    
               if (children != null) {
                   for (String child : children) {
                       // DO LOGIC
                   }
               }
    ```
    
    As `children` is zero length the for-each loop is not executed. I am fine with leaving this code as-is. Otherwise, we could remove the now useless `if (children != null)` calls. Wdyt?
, +1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/271//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/271//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/271//console

This message is automatically generated., Github user arshadmohammad commented on the issue:

    https://github.com/apache/zookeeper/pull/160
  
    1. yes, changes should be applied to branch-3.4 and branch-3.5 also. I will raise merge request for branch-3.4 and branch-3.5 after it is committed to master
    2. This is very much needed. Thanks :-). I removed Null check from all references of getChildren and corrected the code as per the need

, -1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/274//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/274//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/274//console

This message is automatically generated., Github user arshadmohammad commented on the issue:

    https://github.com/apache/zookeeper/pull/160
  
    checking the CI failure.
, +1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/275//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/275//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/275//console

This message is automatically generated., Github user edwardoliveira commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/160#discussion_r98967876
  
    --- Diff: src/java/main/org/apache/zookeeper/server/DataTree.java ---
    @@ -1045,18 +1046,16 @@ private void getCounts(String path, Counts counts) {
             if (node == null) {
                 return;
             }
    -        Set<String> children = null;
    +        String[] children = null;
             int len = 0;
             synchronized (node) {
    -            children = node.getChildren();
    +            Set<String> childs = node.getChildren();
    +            children = childs.toArray(new String[childs.size()]);
    --- End diff --
    
    FYI (only): I *guess* some tests broke 'cause `toArray` copies the contents of `childs` to `children` while `node.getChildren()` returns a internal reference (subject to underneath change) to `children`. So, it would need to be something like `children = new HashSet<>(childs);`
, Github user eribeiro commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/160#discussion_r98968169
  
    --- Diff: src/java/main/org/apache/zookeeper/server/DataTree.java ---
    @@ -1045,18 +1046,16 @@ private void getCounts(String path, Counts counts) {
             if (node == null) {
                 return;
             }
    -        Set<String> children = null;
    +        String[] children = null;
             int len = 0;
             synchronized (node) {
    -            children = node.getChildren();
    +            Set<String> childs = node.getChildren();
    --- End diff --
    
    @arshadmohammad FYI (only): I guess some tests broke 'cause toArray copies the contents of childs to children while node.getChildren() returns a internal reference (subject to underneath change) to children. So, it would need to be something like children = new HashSet<>(childs);
, Github user eribeiro commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/160#discussion_r98973726
  
    --- Diff: src/java/main/org/apache/zookeeper/server/DataTree.java ---
    @@ -1045,18 +1046,16 @@ private void getCounts(String path, Counts counts) {
             if (node == null) {
                 return;
             }
    -        Set<String> children = null;
    +        String[] children = null;
             int len = 0;
             synchronized (node) {
    -            children = node.getChildren();
    +            Set<String> childs = node.getChildren();
    --- End diff --
    
    But as all tests are passing, that's fine. :smiley: Congrats! 
, Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/160
  
    +1, merging to master (the jira mentioned patch to 3.4 and 3.5 will be sent separately).
, Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/160
, GitHub user arshadmohammad opened a pull request:

    https://github.com/apache/zookeeper/pull/161

    ZOOKEEPER-2680: Correct DataNode.getChildren() inconsistent behaviour. :branch-3.5

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/arshadmohammad/zookeeper ZOOKEEPER-2680-br-3.5

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/161.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #161
    
----
commit 8b9721b69497adf1de9a6a741a44cf11c5d5f986
Author: Mohammad Arshad <arshad@apache.org>
Date:   2017-02-05T07:27:37Z

    ZOOKEEPER-2680: Correct DataNode.getChildren() inconsistent behaviour.

----
, FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3263 (See [https://builds.apache.org/job/ZooKeeper-trunk/3263/])
ZOOKEEPER-2680: Correct DataNode.getChildren() inconsistent behaviour. (hanm: rev 26aee2228451257f3b0b5093bc0c101822e06bc8)
* (edit) src/java/main/org/apache/zookeeper/server/DataNode.java
* (edit) src/java/main/org/apache/zookeeper/server/SnapshotFormatter.java
* (add) src/java/test/org/apache/zookeeper/server/DataNodeTest.java
* (edit) src/java/main/org/apache/zookeeper/server/DataTree.java
* (edit) src/java/main/org/apache/zookeeper/server/ContainerManager.java
* (edit) src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java
, GitHub user arshadmohammad opened a pull request:

    https://github.com/apache/zookeeper/pull/162

    ZOOKEEPER-2680: Correct DataNode.getChildren() inconsistent behaviour. :branch-3.4

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/arshadmohammad/zookeeper ZOOKEEPER-2680-br-3.4

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/162.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #162
    
----
commit 30c1d1bc89ed142975205ca7d75cd71a077b7f72
Author: Mohammad Arshad <arshad@apache.org>
Date:   2017-02-05T08:10:03Z

    ZOOKEEPER-2680: Correct DataNode.getChildren() inconsistent behaviour.

----
, Github user arshadmohammad commented on the issue:

    https://github.com/apache/zookeeper/pull/161
  
    CI failure is because of qa-test-pullrequest is not present in branch-3.5
, Github user arshadmohammad commented on the issue:

    https://github.com/apache/zookeeper/pull/162
  
    CI failure is because of qa-test-pullrequest is not present in branch-3.4
, Thanks [~arshad.mohammad] for the code improvement. It would be good if you could run test cases locally against {{branch-3.4}}, {{branch-3.5}} and comment status here. I'm +1 for including this to 3.4.10 release as this task is almost completed., I wanted to run test cases in my local CI. I need one patch to be committed to complete my CI setup. Can you please have a look on ZOOKEEPER-2682 and commit it., bq. I wanted to run test cases in my local CI. I need one patch to be committed to complete my CI setup. Can you please have a look on ZOOKEEPER-2682 and commit it.
[~arshad.mohammad], ZOOKEEPER-2682 improvement is merged. Please go ahead with your testing., Thanks [~rakeshr].
branch-3.5 all tests are passing.
branch-3.4 has following failures which are not related to this patch.
{noformat}
org.apache.zookeeper.server.quorum.auth.MiniKdcTest
org.apache.zookeeper.server.quorum.auth.QuorumKerberosAuthTest
org.apache.zookeeper.server.quorum.auth.QuorumKerberosHostBasedAuthTest
{noformat}
with error message
{noformat}
org/apache/kerby/kerberos/kerb/KrbException : Unsupported major.minor version 51.0
{noformat}

I have run branch-3.5 on jdk1.7.0_80 branch-3.4 on jdk1.6.0_45, The "Unsupported major.minor version 51.0" usually happens 'cause the code was compiled with a higher version JDK and run on a lower version JRE. In this particular case, looks like {{org/apache/kerby/kerberos/kerb}} was compiled on JDK7 and run on JRE6. Further info:

http://stackoverflow.com/questions/10382929/how-to-fix-java-lang-unsupportedclassversionerror-unsupported-major-minor-versi

http://stackoverflow.com/questions/20690143/java-unsupported-major-minor-version-51-0



, Good catch [~arshad.mohammad] and thanks [~eribeiro] for the analysis. Presently {{MiniKdc}} uses Apache Kerby which has a [build requirement of jdk1.7+|http://directory.apache.org/kerby/developer-guide.html]. Since branch-3.4.x support Java 1.6 or higher, Apache Kerby binding is causing trouble.

One solution is to rewrite {{MiniKdc}} test using old style of Kerberos implementation in Apache Directory Server project, {{org.apache.directory.*}} packages. Please refer {{ivy.xml}} file to understand the {{org.apache.directory.server}} dependencies in the [ZOOKEEPER-1045-br-3-4.patch|https://issues.apache.org/jira/secure/attachment/12805119/ZOOKEEPER-1045-br-3-4.patch#file-1], which I had implemented initially., I created ZOOKEEPER-2689 to track the branch-3.4 test failures. I will be happy to review if any patch given.
, Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/162
  
    +1.
, Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/161
  
    +1.
, Issue resolved by pull request 162
[https://github.com/apache/zookeeper/pull/162], Thanks [~arshad.mohammad] for the improvement.

Committed to branch-3.4: https://git-wip-us.apache.org/repos/asf?p=zookeeper.git;a=commit;h=07a12868bbfc16308b7bf192ac3abda77d1f2846
Committed to branch-3.5: https://git-wip-us.apache.org/repos/asf?p=zookeeper.git;a=commit;h=91c400829ef92110d17ca1f328dda4749aae57b0
Committed to master: https://git-wip-us.apache.org/repos/asf?p=zookeeper.git;a=commit;h=26aee2228451257f3b0b5093bc0c101822e06bc8, Github user eribeiro commented on the issue:

    https://github.com/apache/zookeeper/pull/162
  
    Hi @arshadmohammad, this PR was merged, right? 
    
    For whatever reason it was not closed. Could you close it, please? :) 
, Github user eribeiro commented on the issue:

    https://github.com/apache/zookeeper/pull/161
  
    Hi @arshadmohammad, this PR was merged, right? 
    
    For whatever reason it was not closed. Could you close it, please? :) 
, Github user arshadmohammad closed the pull request at:

    https://github.com/apache/zookeeper/pull/162
, Github user arshadmohammad closed the pull request at:

    https://github.com/apache/zookeeper/pull/161
]