[We have a fix internally at Microsoft for this issue--it's similar to what you've done.

Recommending adding ifndef guards to the defines, to prevent redefinition in all cases, not just Visual Studio.

{code}
#ifndef EWOULDBLOCK
#define EWOULDBLOCK WSAEWOULDBLOCK
#endif
 
#ifndef EINPROGRESS
#define EINPROGRESS WSAEINPROGRESS
#endif
{code}, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12688387/ZOOKEEPER-2096.patch
  against trunk revision 1646345.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2468//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2468//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2468//console

This message is automatically generated., According to MSDN documentation, winsock connect() function returns WSAEWOULDBLOCK and WSAEINPROGRESS among other error values. However inside zookeeper_interest(), the code after zookeeper_connect() call checks for posix error values EWOULDBLOCK and EINPROGRESS. In VisualStudio 2010+ this is not the same!

So we have two problems here: redefinition of EWOULDBLOCK and EINPROGRESS, and checking for wrong values after zookeeper_connect(). These can be solved by returning posix values from zookeeper_connect().

It would be nice to hear from authors of this code. Such fix can (but should not) alter the behavior of nonblocking sockets. Is there a unit test for this(C++, Windows) ?, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12688543/ZOOKEEPER-2096.patch
  against trunk revision 1646992.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2471//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2471//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2471//console

This message is automatically generated., Resubmitted, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12729772/ZOOKEEPER-2096.patch
  against trunk revision 1676359.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2666//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2666//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2666//console

This message is automatically generated., Not sure how to respond to this, so I put it here:

This patch affects only Windows. It builds fine on MSVC++ 2010, 2013.
And there were no complaints from automated builds.

As for the runtime behavior, I can tell from experience that without this fix the code would not work at all.
This could be established immediately should there be any automated tests for Windows.
, Hi [~vvs],

Please add the guards as recommended above:
{code}
#ifndef EWOULDBLOCK
#define EWOULDBLOCK WSAEWOULDBLOCK
#endif
 
#ifndef EINPROGRESS
#define EINPROGRESS WSAEINPROGRESS
#endif
{code}
, Done as advised, +1

[~fpj] have a look or point to relevant stakeholders?, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12730339/ZOOKEEPER-2096.patch
  against trunk revision 1677724.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2678//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2678//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2678//console

This message is automatically generated., resubmitted, +1, thanks [~vvs], [~iandi]. I'll merge this. , [~vvs], [~iandi]: merged for 3.5 and trunk (respectively):

https://github.com/apache/zookeeper/commit/87c7a0c71bac8b30b84777680ae0cc91aea930b2
https://github.com/apache/zookeeper/commit/98a3cabfa279833b81908d72f1c10ee9f598a045

Thought it doesn't apply cleanly to the 3.4 branch â€” do you mind backporting this for that branch? Thanks!


, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12736987/ZOOKEEPER-2096.patch
  against trunk revision 1683042.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2742//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2742//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2742//console

This message is automatically generated., I just learned that there is actually an automated build: https://builds.apache.org/job/ZooKeeper-trunk-WinVS2008/ .
Somehow it is not shown in the usual report. It was failing for a long time (see ZOOKEEPER-2178).
Would it be possible to set up similar build for MSVC2010+ ? And actually run it ?, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12737000/ZOOKEEPER-2096.patch.branch34
  against trunk revision 1683163.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2743//console

This message is automatically generated., Merged for 3.4:

https://github.com/apache/zookeeper/commit/9ff5643e8108a0446f46cf24e0f13a511510cfb2, I think so, could we follow-up in another ticket?, SUCCESS: Integrated in ZooKeeper-trunk #2714 (See [https://builds.apache.org/job/ZooKeeper-trunk/2714/])
ZOOKEEPER-2096: C client builds with incorrect error codes in VisualStudio 2010+
(Vitaly Stakhovsky via rgs) (rgs: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1683163)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/c/include/winconfig.h
* /zookeeper/trunk/src/c/src/zookeeper.c
]