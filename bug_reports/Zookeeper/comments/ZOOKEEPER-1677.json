[Additional bugs:

a) Since grow() does not zero the memory, these comparisons will fail in any case, as the outstanding bytes of a sockaddr_storage over (say) a sockaddr_in will be nondeterministic (unless caller also zeros the passed-in ram, which never happens)
b) addrvec_append_addrinfo only copies part of the buffer, which exposes the non-zeroing locally.

So there are two different code paths where the trailing bytes of the _storage will be nondeterministic; one fixable locally and one not., This patch adds a new sockaddr_struct_eq function that properly compares two sockaddr_struct pointers taking into account if it's IPV4 or IPV6.

I think this solves all the problems Shavek identified. If you disagree, please let me know., Looks kosher to me. Note: I found this bug by reading source, not by occurrence, so I don't have an actual test.

The casts within the memcmp are unnecessary, and of no benefit, since they aren't checked., Updated patch with Shevek's good observation that casts unnecessary in memcmp., Unfortunately this patch doesn't apply cleanly to trunk. Can someone fix and resubmit?, Updated patch to trunk r1484371., trying to trigger build, Looks like this is actually causing the build to fail but for whatever reason the build bot is broken and won't post results. Here is the build console tail:
https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1489/console


     [exec]      [exec] /bin/bash: line 5: 26182 Terminated              ZKROOT=/home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-Build/trunk/src/c/../.. CLASSPATH=$CLASSPATH:$CLOVER_HOME/lib/clover.jar ${dir}$tst
     [exec]      [exec] Zookeeper_simpleSystem::testIPV6FAIL: zktest-mt
     [exec]      [exec] ==========================================
     [exec]      [exec] 1 of 2 tests failed

Due to a timeout? Can one of you take a look, it looks like it is related to this patch., It's interesting that testIPV6FAIL fails because that has always failed for me on my system. I don't have IPV6 enabled on my system so I always assumed that was the reason it failed for me locally. Has anyone (who does have IPV6 enabled) ran this locally to see if it's reproducible?, I'm wondering now if it's an issue with the fact that we time these builds out after 62 minutes no matter what. I've upped the precommit build timeout to 75 minutes to see if it still fails., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12583865/ZOOKEEPER-1677.patch
  against trunk revision 1484527.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1492//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1492//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1492//console

This message is automatically generated., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12583865/ZOOKEEPER-1677.patch
  against trunk revision 1484527.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1493//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1493//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1493//console

This message is automatically generated., Woo hoo -- results! Looks like what failed is

>>> org.apache.zookeeper.server.TruncateCorruptionTest.testTransactionLogCorruption 

Which is ZOOKEEPER-1629 and seems to fail VERY frequently. , Yes it is failing a LOT these days which is annoying. Unfortunately when it fails it blocks the C tests from running so I don't know what this patch is doing to the C portion of the build. I will look at 1629 again and see if we can get some resolution there., Now that ZOOKEEPER-1629 is fixed can we re-try this ?, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12583865/ZOOKEEPER-1677.patch
  against trunk revision 1576127.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1944//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1944//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1944//console

This message is automatically generated., -1

Sorry it took me so long to get to this. The change looks good to me, but I think we should add a test for this. Marshall, let me know if you have time to add a test for this change.

Thanks!
--Michi, This patch doesn't seem to work with ipv6 (TestAddrVec::testAddrVecContainsIPv6 is failing). Any idea?, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12646152/ZOOKEEPER-1677.patch
  against trunk revision 1596684.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 7 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2110//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2110//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2110//console

This message is automatically generated., The zookeeper client was offline for me until I found this patch, without it the client was stuck in a continuous reconfigure cycle without ever connecting to the server.

A possible alternative (architecture-independent) approach is simply to zero out the buffer inside of addrvec_append_addrinfo.  This is the only entrypoint into the vector, so one could simply memcmp the entire thing.

In any case, neither INET_ADDRSTRLEN or INET6_ADDRSTRLEN are in used by the client after this point (and are rather well documented).  Can we drop the #defines as part of this patch?, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12646152/ZOOKEEPER-1677.patch
  against trunk revision 1608648.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 7 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2179//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2179//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2179//console

This message is automatically generated., [~marshall] and [~michim] is this patch ready or do we still need to address the recent comments? (might be good to cancel if it's not ready, although it sounds like a good one to get into 3.5.0 if we can...) Thanks., Ok let me cancel this patch. I agree we should get this fixed in 3.5.0.]