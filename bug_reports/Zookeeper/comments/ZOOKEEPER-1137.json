[Following piece of code in AuthFLE class looks to be problematic.

{code}
            for (QuorumServer server : self.getVotingView().values()) {
                InetSocketAddress saddr = new InetSocketAddress(server.addr
                        .getAddress(), port);
                addrChallengeMap.put(saddr, new ConcurrentHashMap<Long, Long>());
            }
{code}

We are populating the addrChallengeMap with same port all the times.

Ideally, this should be 

{code}
            for (QuorumServer server : self.getVotingView().values()) {
                addrChallengeMap.put(server.electionAddr, new ConcurrentHashMap<Long, Long>());
            }
{code}

Any other thoughts?, Hi Laxman, We haven't been maintaining the AuthFLE implementation, and we have been talking about deprecating it for a long time. Do you have any particular reason why you'd like to fix it, like a use case, or you're simply exploring? , Thanks for the info Flavio. I really don't have a specific use case. We found this problem while exploring different features. I've a patch to fix this problem as I mentioned in earlier comments and currently verifying the same.

Even if this is going to be deprecated we can't have a NPE. no?

Please let me know if I can upload the patch., Sure, go ahead and upload a patch. Having a test for AuthFLE would also be useful., @Flavio : I failed to write a reliably passing test for this as this depends on UDP. Manually verified the patch. This causes no test failures., The modification is minor, and I'm ok with committing it without a test. Does anyone else have an opinion?

I was actually suggesting a general test for AuthFLE. We have no test exercising AuthFLE currently. If you have one, it would be great. , On a second thought about it, if we get an NPE when using different ports, then perhaps we could adapt the FLE test to use AuthFLE and then be able to reproduce the problem?, 
Hi Flavio, quorum always fails to start if we configure different election ports. Also, I already tried to adapt FLE Test to use Auth FLE but its failing randomly [May be due to UDP]. That was the reason for not adding a test. Patch has been verified manually by configuring different ports. Quorum started with no issues after fix.

I will upload the patch including test case I've added. Please review and let me know what I'm missing. So that I can correct it., Flavio, attached the patch including the test for AuthFLE. This test is intermittently failing in my env. Please review and let me know if you have any suggestions. Check if we can proceed with committing the changes without test if we are not able to find out the actual problem.

As I already mentioned, patch has been tested manually., uploading patch again to get tested by qa bot., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12490410/ZOOKEEPER-1137.patch
  against trunk revision 1157698.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/458//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/458//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/458//console

This message is automatically generated., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12490410/ZOOKEEPER-1137.patch
  against trunk revision 1172406.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/576//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/576//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/576//console

This message is automatically generated., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12490410/ZOOKEEPER-1137.patch
  against trunk revision 1185994.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/632//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/632//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/632//console

This message is automatically generated., What's the status on this? I think we should just have one version of the patch - which includes a test of the change. Can you update appropriately? thanks., Thanks for taking a look at it Pat.
As mentioned in my earlier comments I failed to write a test which passes consistently.

Following are the patches already attached.

ZOOKEEPER-1137.patch - Patch without testcase - Ready to commit - Verified manually
ZOOKEEPER-1137.WithTest.patch - Patch with testcase - Test is failing intermittently

Any suggestions?, Bug Flavio more? ;-)

Seriously, discuss with Flavio and come up with a patch & test that is deterministic.

Another option would be to refactor to allow the code in question to be tested as a true unit test, rather than as a system test (we need to work on that in general in ZK).

Mockito?
]