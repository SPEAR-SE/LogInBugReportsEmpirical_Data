[https://issues.apache.org/jira/browse/ZOOKEEPER-1667, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12573703/ZOOKEEPER-1667.patch
  against trunk revision 1455387.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 7 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1434//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1434//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1434//console

This message is automatically generated., Is this a blocker for 3.4.6 as well?, I think it is. Do we need a patch for 3.4.6?, Sounds like a good idea to have a patch for 3.4.6. Marking it for 3.4.6 as well., Add a patch against 3.4-branch. [~fpj]  Would you please review the patch？, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12584011/ZOOKEEPER-1667-r34.patch
  against trunk revision 1484527.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 7 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1491//console

This message is automatically generated., This is a pretty good issue to discuss, [~fanster.z], but I'm not sure I entirely agree with the modifications you're proposing. First, I went back to the documentation to see what we have to say about it and we are not very precise, so I think we need to also work on documentation for this issue because it changes semantics, right?

The patch you're proposing changes the behavior of data watches and exists watches, but not of children watches. It changes the structure of child watches loop, but functionally it is the same. 

For data watches, you're getting rid of NodeCreated events because you feel that it should be NodeDataChanged. I actually can see us going either way, although I feel that a NodeCreated event can be informative even for a data watch. It is telling the application that the data has changed because the znode was recreated. You may want to know it in situations like master changes. Also, I'm not sure it makes sense to remove NodeCreated but not NodeDeleted. Deleting a znode is also a way of changing its data.

For exists watches, sending a NodeDataChanged gives some additional information to the application in the case it has been disconnected. Not only the znode already exists, but its data also changed in the meanwhile. But, the current code seems to always return NodeDataChanged because czxid and mzxid are set to the same value upon creation. We need to fix at least that by perhaps checking if mzxid == czxid., I get the definition in zookeeper.h
{quote}
/**
 * @name Watch Types
 * These constants indicate the event that caused the watch event. They are
 * possible values of the first parameter of the watcher callback.
 */
// @{
/**
 * \brief a node has been created.
 *
 * This is only generated by watches on non-existent nodes. These watches
 * are set using \ref zoo_exists.
 */
extern ZOOAPI const int ZOO_CREATED_EVENT;
/**
 * \brief a node has been deleted.
 *
 * This is only generated by watches on nodes. These watches
 * are set using \ref zoo_exists and \ref zoo_get.
 */
extern ZOOAPI const int ZOO_DELETED_EVENT;
/**
 * \brief a node has changed.
 *
 * This is only generated by watches on nodes. These watches
 * are set using \ref zoo_exists and \ref zoo_get.
 */
extern ZOOAPI const int ZOO_CHANGED_EVENT;
/**
 * \brief a change as occurred in the list of children.
 *
 * This is only generated by watches on the child list of a node. These watches
 * are set using \ref zoo_get_children or \ref zoo_get_children2.
 */
extern ZOOAPI const int ZOO_CHILD_EVENT;
{quote}
The only missing one is zoo_get_children /foo will get a ZOO_DELETED_EVENT if /foo is deleted.

Now, if zk1 set an exists watch on /foo (not exists), we may get a ZOO_CHANGED_EVENT. I agree with it will have some additional information, but it is too hard to understand, use or document.

Actually, I prefer to believe it is the original semantics. 
, I'm fine with following the description in zookeeper.h. Do you think you can add some documentation about it to the programmer's guide, [~fanster.z]? Otherwise, this is good for me. , [~fanster.z], do you think you can generate the documentation for this?, Sorry, I'll do it in the weekend., [~fanster.z], let me know if you need any help., Hi, Flavio, could you generate a patch for it？ There isn't an easy way for
me to do that...


2013/10/14 Flavio Junqueira (JIRA) <jira@apache.org>

, [~fanster.z], could you please have a look at the b3.4 patch I have uploaded to make sure that the content I have added corresponds to the semantics we should expect? Once we converge on the doc changes, I can generate a trunk patch as well., LGTM, thanks [~fpj], Nice work. I'm having few comments, please see:

# If use node.stat.getCzxid(), could be chance of missing 'NodeDataChanged' while setting watches. 
IMHO should compare relativeZxid with 'node.stat.getMzxid()'.
{code}
            } else if (node.stat.getCzxid() > relativeZxid) {
                watcher.process(new WatchedEvent(EventType.NodeDataChanged,
                            KeeperState.SyncConnected, path));
{code}
# Apache License is missing in tests - WatchEventWhenAutoReset.java
# In tests, logger is LoggerFactory.getLogger(ClientBase.class). Can we use WatchEventWhenAutoReset.class ?, Thanks for the comments, [~rakeshr]. Uploading a new patches., Trunk patch., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12609443/ZOOKEEPER-1667-trunk.patch
  against trunk revision 1533161.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 7 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1712//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1712//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1712//console

This message is automatically generated., +1 - the patch looks good to me., Thanks, Mahadev.

Branch 3.4: Committed revision 1534598.
Trunk: Committed revision 1534599., SUCCESS: Integrated in ZooKeeper-trunk #2098 (See [https://builds.apache.org/job/ZooKeeper-trunk/2098/])
ZOOKEEPER-1667. Watch event isn't handled correctly when a client reestablish to a server (jacky007, fpj via fpj) (fpj: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1534599)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/docs/src/documentation/content/xdocs/zookeeperProgrammers.xml
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/DataTree.java
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/test/WatchEventWhenAutoReset.java
, Closing issues after releasing 3.4.6., The test suite {{WatchEventWhenAutoReset}} that was introduced in this patch has not been running during pre-commit, because the build's test inclusion pattern looks for classes ending in "Test".  I filed a patch on ZOOKEEPER-2182 to rename it to {{WatchEventWhenAutoResetTest}}., Good catch. Thanks [~cnauroth]]