[2015-03-27 15:28:50,966 | ERROR | regionserver21302-EventThread | Error while calling watcher  | org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:527)
java.lang.NullPointerException
        at org.apache.zookeeper.KeeperException.create(KeeperException.java:91)
        at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
        at org.apache.zookeeper.ZooKeeper.getChildren(ZooKeeper.java:1476)
        at org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper.getChildren(RecoverableZooKeeper.java:273)
, Thanks for the bug report [~surendrasingh]. With what specific version of the 3.4.0 branch is this happening? Besides asserting code != null, it would be nice to understand what's triggering it., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12708466/ZOOKEEPER-2154.patch
  against trunk revision 1669825.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2598//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2598//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2598//console

This message is automatically generated., Thanks [~rgs] for looking in to this issue.

Sorry for my late reply. I am using 3.4.6 zk.  This I got when I was testing network abnormal scenario (loss packet 5%, error packet 5%, Wrong order packet 5%, and repeat packet 10%).   	, I could see similar case of packet malformation in another jira ZOOKEEPER-2175, any suggestion to handle these kinda issues?, Wow, that's weird. Do you have an example test program that triggers this under bad network conditions?, In the future, it could be a well-formed packet but with an error code that is new and unknown to the client.

How about instead of raising an IllegalArgumentException we mask it SystemError or APIError and log it?, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12708466/ZOOKEEPER-2154.patch
  against trunk revision 1686767.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2776//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2776//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2776//console

This message is automatically generated., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12708466/ZOOKEEPER-2154.patch
  against trunk revision 1728577.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3038//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3038//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3038//console

This message is automatically generated., [~surendrasingh] thanks for the patch. Since we already throw that same exception in the default case of the switch, would it make sense to not duplicate? I was thinking that we could have a code for NULL, check for null, and assign code to NULL. Another idea is to use {{assert code != null;}}.

Let me know what you think, please., I am moving this out to 3.4.10 for now. [~surendrasingh], hope will be able sort out this.]