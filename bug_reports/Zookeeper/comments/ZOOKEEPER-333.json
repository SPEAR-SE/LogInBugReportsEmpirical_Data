[i found some more while running helgrind... attacching the filtered output., Some of these look to be innocuous on a first glance, such as "wait called with un-held mutex" in wait_sync_completion().  I suppose the issue here might be that wait_sync_completion() doesn't check the return value from pthread_mutex_lock() before proceeding, but in practice I believe one can reasonably assume it always succeeds.

One thing that might help a bit would be to have a reference to the C code which produced this output because it refers to line numbers in the code.  Was the run against 3.1.0 or against a snapshot from trunk?  If the latter, do you know the SVN revision number?, chris,
 the run was from the trunk. I dont have a revision number but i think their hasnt been any code change to the source files after I uploaded the traces. So the line numbers should match., This latest gzip'd helgrind output file is from svn trunk:

At revision 751008.

Note: the tests hang at the following step:

Zookeeper_operations::testOperationsAndDisconnectConcurrently1^CKilled

I had to ctrl-c the test to stop. Perhaps this means helgrind is tickling a bad problem(s)? We should re run helgrind after resolving the basic issues currently in the log, and see if this hang still occurrs. Perhaps you guys could also look at the test in question to see if anything catches your eye? The test should not be failing.
, ps. I'm on ubuntu intrepid ibex latest, single core cpu.
, Helgrind: Fatal internal error -- cannot continue.
Helgrind: mk_SHVAL_ShR(tset=8192,lset=1): FAILED
Helgrind: max allowed tset=8191, lset=131071
Helgrind: program has too many thread sets or lock sets to track.


this is the error generated by helgrind when it hangs with the tests and is not able to run all of the tests., most of the traces in the helgrind output seem harmless to me. This patch has some minor changes (declaring the head pointers of lists as volatile, which we keep checking in different threads without locking), which might cause some problems. the others I think is fine., Looks good, +1.

Committed revision 752711.
Committed revision 752726., Integrated in ZooKeeper-trunk #253 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/253/])
    ]