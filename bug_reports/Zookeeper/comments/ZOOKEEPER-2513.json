[After ZOOKEEPER-2172 fix, there is no problem with majorChange = true scenario. 
# yes, transaction is not processed, but this does not cause any problem. 
After exception, follower enters into leader election phase, then registers itself with the leader and then syncs with the leader. While syncing with leader it receives the failed transaction in the DIFF message. So reconfig was processed before the exception and transaction's PROPOSAL and COMMIT are processed after the exception. 
#  Learner is able to continue where it left off in the process of syncing with the leader, In Learner.java, there are 3 different places where majorChange is set to true and an exception is thrown. The main intention for this JIRA was to verify 
for each such instance that the learner can recover from an exception being thrown, ideally by adding a test case for each instance, similar to what you 
were doing for ZK-2172. This will probably show whether the server can recover.

Anyway, it seems a bit wasteful not to process an operation and require the leader to send the diff again after recovering. Also the reconfig isn't considered committed
while it has been already processed by the learner. It may be ok, but its easy to avoid since we can choose when to throw an exception.]