[Thanks for reporting this issue. The 60 seconds you're referring to is the worst case. Making the top interval configurable is not a bug, so it should go into 3.5.0. If you want to bump the test case timeout value because it causes failures, then please do it in a different jira. In any case, it is odd that the test even hits the 60s limit. I think it is premature to blame the 60s limit for the test failure., I attached a patch where the parameter maxNotificationInterval keeps its default value defined in FastLeaderElection source file, but also it is possible to configure the value of this parameter by using the configuration file.

It is possible to find in the patch: source code modifications; a new test case that proves the configuration of the parameter (it can be tested that the test case fails if the source code modifications are deleted); a modification in the QuorumPeerMain test case which failed from time to time due to the value of this parameter; and the modifications in the Administration's Guide indicating the configurable parameter., I think I attached the file with a wrong name., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12618200/ZOOKEEPER-1814.patch
  against trunk revision 1550005.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1825//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1825//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1825//console

This message is automatically generated., It seems that I created a warning.

I'm going to correct it and upload a new patch., New patch created after solving the warning., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12618381/ZOOKEEPER-1814.patch
  against trunk revision 1550213.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1827//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1827//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1827//console

This message is automatically generated., Test case indentation was wrong. Additionally the sleep was avoided by adding countDownLatch mechanism., Uploaded new patch with correct test case indentation and CountDownLatch wait for the test case instead of sleep., Sorry I didn't catch this before, but if you need to update the patch again, perhaps it would make sense to set a smaller maxFleNotificationInterval time in the test (say 200 milliseconds instead of 5000), so that the test is faster and it doesn't add time to the already very long ZooKeeper regression., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12618428/ZOOKEEPER-1814.patch
  against trunk revision 1550213.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1828//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1828//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1828//console

This message is automatically generated., That's right, I should have thought about that before. Right now the test case is introducing around 20 seconds to the execution and it is not necessary. I'm going to change it and upload the new patch., The test time is long and it can be reduced., In the test case, maxFleNotificationInterval parameter has been reduced., Wrong indentation in one line in the test case., Updated with the right indentation in one line in the test case., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12618436/ZOOKEEPER-1814.patch
  against trunk revision 1550213.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1829//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1829//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1829//console

This message is automatically generated., Some nits and simplifications:

{noformat}
+              <para><emphasis role="bold">New in 3.3.0:</emphasis>Maximum notifications
{noformat}

3.3.0 doesn't seem right.

Nit:

{noformat}
-     * should not be taken into account in the comparison 
-     * (electionEpoch and zxid). 
+     * should not be taken into account in the comparison
+     * (electionEpoch and zxid).
{noformat}

those lines didn't really change, you just introduced a trailing space.

Instead of:

{noformat}
+        if (System.getProperty("zookeeper.maxFleNotificationInterval") != null){
+            maxNotificationInterval = Integer.parseInt(System.getProperty("zookeeper.maxFleNotificationInterval"));
+        } else {
+            maxNotificationInterval = 60000;
+        }
{noformat}

you can just have:

{noformat}
maxNotificationInterval = Integer.getInteger("zookeeper.maxFleNotificationInterval", 60000);
{noformat}

Nit: for all the LOG.info/LOG.debug statements, I think it's cleaner to use string extrapolation as opposed to concatenating strings. i.e.: instead of:

{noformat}
LOG.info("Two equal notification intervals measured [" + counter + " of "
+                                + numEqualIntervalsNeeded + "]");
{noformat}

just:

{noformat}
LOG.info("Two equal notification intervals measured [{} of {}]", counter, numEqualIntervalsNeeded);
{noformat}

Instead of:

{noformat}
+        maxFleNotificationInterval = Integer.parseInt(System.getProperty("zookeeper.maxFleNotificationInterval"));
{noformat}

just:

{noformat}
+        maxFleNotificationInterval = Integer.getInteger("zookeeper.maxFleNotificationInterval");
{noformat}

you probably want to make "zookeeper.maxFleNotificationInterval" a public constant somewhere. 

Instead of:

{noformat}
+        if (thread.isAlive()) {
+            Assert.fail("Should not be alive");
+        }
{noformat}

maybe just:

{noformat}
+          Assert.assertFalse("Should not be alive", thread.isAlive());
{noformat}, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12618438/ZOOKEEPER-1814.patch
  against trunk revision 1550213.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1830//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1830//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1830//console

This message is automatically generated., Thanks for the comments. I'm generating a new patch file with the suggested changes. The only issue is:

{quote}
Nit:
-     * should not be taken into account in the comparison 
-     * (electionEpoch and zxid). 
+     * should not be taken into account in the comparison
+     * (electionEpoch and zxid).
those lines didn't really change, you just introduced a trailing space.
{quote}

When I download the trunk version of the code, those spaces at the end of those 2 lines appear. Thus, Review Board complains if I do not delete them when I created the diff file., Applying suggested comments., Few changes applied from recent comments:

-Docummentation has been corrected.
-The way to get the value from properties has been simplified.
-Corrections in test case: LOG and assert statements., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12618561/ZOOKEEPER-1814.patch
  against trunk revision 1550213.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1833//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1833//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1833//console

This message is automatically generated., Corrected suggested changes in Review Board (extra spaces, extra fflush and string concatenation)., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12618872/ZOOKEEPER-1814.patch
  against trunk revision 1551119.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1840//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1840//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1840//console

This message is automatically generated., This patch doesn't apply anymore. It seems like the latest patch addressed all the feedback. I'll check this in once the patch is rebased., It is fine if you want to make this configurable, but I'd say that we need to do a better job explaining the impact of changing it. For example, we could start by saying that servers keep sending batches until they are able to make progress with leader election. We keep increasing the time between batches so that we don't keep sending messages unnecessarily, and we increase the time between batches until we reach a threshold, which is what this parameter sets. 

Actually, the choice of 60s was somewhat arbitrary. Is there a reason for having a different threshold?, Hi,

Reason of modification:
----------------------------
When the FastLeaderElection process reaches a big timeout, the process waits until that timeout before taking control. Thus, if a shutdown happens during that waiting time, the process doesn't realize of the shutdown until the timeout, which is so long. Reducing the maximum time to a reasonable value (2-5 seconds) we are not sending a heavy traffic, but we can detect a shutdown in few seconds instead of 1 minute in the worst case.

Reason of configurable parameter:
-------------------------------------------
We may have chosen a fixed value, but the reason of making maxFleNotificationInterval a configurable parameter is backward compatibility. If someone's deployment is already working by using that 60 seconds maximum time for any reason, I didn't want to modify the default behavior.

Regards., I possibly haven't made it clear that I'm suggesting we do a better job in the change to the documentation. I think the text there is a bit thin and not really explaining how it affects a deployment and why one should care about it. 

bq. but we can detect a shutdown in few seconds instead of 1 minute in the worst case.

Is this referring to tests or something else? If this is not referring to tests, then I'm not sure how it helps to detect a shutdown faster.

bq.  If someone's deployment is already working by using that 60 seconds maximum time for any reason, I didn't want to modify the default behavior.

It makes sense., Sorry, I read your comment too fast. Now it is clear. I'm going to update the documentation with more details like you suggested.

, Modified the documentation according the provided comments. Documentation of the introduced configurable parameter was poor and it is explained better in this version., Modified the documentation according the provided comments. Documentation of the introduced configurable parameter was poor and it is explained better in this version., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12638212/ZOOKEEPER-1814.patch
  against trunk revision 1583783.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2020//console

This message is automatically generated., The patch cannot be applied properly due to the revision when it has been generated. A new one is being generated., Previos patch cannot be applied due to a conflict in the merge., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12638226/ZOOKEEPER-1814.patch
  against trunk revision 1583783.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2021//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2021//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2021//console

This message is automatically generated., Flavio, could you take a look at the updated patch when you get a chance?

Thanks!, fwiw +1, this looks great to me. , -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12638226/ZOOKEEPER-1814.patch
  against trunk revision 1615240.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2254//console

This message is automatically generated., Hi!

Just to confirm, how many +1 are needed for a patch to be ready?

Thanks and regards., Hi again,

After the +1 received by Raul, I didn't realize about the error reported by Hadoop QA. The patch cannot be applied to trunk. I tried to apply it directly to the today's trunk and it is not possible due to there are a lot of changes since I created the patch.

Should I correct it for trunk or should I generate the patch for 3.4.5 release where I found the issue?

Thanks in advance and regards., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12638226/ZOOKEEPER-1814.patch
  against trunk revision 1634776.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2403//console

This message is automatically generated., After starting to adapt my patch to the current trunk version, I've realized that the test case that I created uses the LEThread static class. Previously this class was in the same package (org.apache.zookeeper.test.FLETestUtils.LEThread) but currently it is in a different package (org.apache.zookeeper.server.quorum.FLETestUtils.LEThread).

Since it is not in the same package, it is not accesible by my testcase. Is there any specific reason why the static class LEThread extends Thread is declared without visibility modifier? Is it possible to change the visibility to public?, if we are going to include this feature at all, then I'd say that having a trunk patch makes sense (a 3.5 branch patch as well). Could you check with svn blame which jira caused the modification you observed? , Ok, I'll adapt the patch to trunk branch and I'll test it for 3.5 branch also.

The change that I commented above about the FLETestUtils.java file corresponds to the revision: 1608648

>>Revision: 1608648
>>Author: michim
>>Date: martes, 08 de julio de 2014 5:25:56
>>Message:
>>ZOOKEEPER-1810. Add version to FLE notifications for trunk Germán Blanco via michim)

If I can change the visibility of the class it will be easy the adaption of the test case.

Thanks in advance and regards.
, Patch cannot be applied to current trunk version due to there have been a lot of changes since the patch was uploaded.

A new ann adapted patch is going to be uploaded., Please find attached the following files:

-ZOOKEEPER-1814_trunk.patch
-ZOOKEEPER-1814_release_3_5_0.patch

I've uploaded those patches with a non-standard naming due to they have been created for trunk and release_3_5_0 branches respectively. Let me know if I did wrong and if I should upload with different names.

Regards., Patch is available for review both for trunk and 3.5.0 branches., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12678142/ZOOKEEPER-1814_release_3_5_0.patch
  against trunk revision 1634776.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 9 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2408//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2408//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2408//console

This message is automatically generated., Hi,

Is the "testCurrentServersAreObserversInNextConfig" test in the file "ReconfigRecoveryTest.java" sometimes failing? I ran the regression on my machine several times and I got a 100% passed all the times. Is there any known issue about it?

Thanks and regards., Hi again,

I've found out what happened. The patch which has been tested is the one uploaded for 3.5.0 release.

How can I deal with these two patches in order to be tested by Hadoop QA in their corresponding branches? Or should I upload the 3.5.0 patch to other place/ticket?, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12678142/ZOOKEEPER-1814_release_3_5_0.patch
  against trunk revision 1672934.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 9 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2612//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2612//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2612//console

This message is automatically generated., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12678142/ZOOKEEPER-1814_release_3_5_0.patch
  against trunk revision 1748630.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 9 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    -1 javac.  The patch appears to cause tar ant target to fail.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3216//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3216//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3216//console

This message is automatically generated.]