[valgrind output for zkpython bindings running zk-smoketest scripts (smoketest and latencytest)
, here's something additional from the zkpython unit tests (many of these):

==6532== Conditional jump or move depends on uninitialised value(s)
==6532==    at 0x807D692: PyInt_FromLong (intobject.c:89)
==6532==    by 0x80F8C30: do_mkvalue (modsupport.c:333)
==6532==    by 0x80F8DC1: do_mkvalue (modsupport.c:179)
==6532==    by 0x80F9534: va_build_value (modsupport.c:536)
==6532==    by 0x80F95B2: Py_BuildValue (modsupport.c:484)
==6532==    by 0x40360BE: build_stat (zookeeper.c:209)
==6532==    by 0x403980F: pyzoo_get (zookeeper.c:870)
==6532==    by 0x8061119: PyObject_Call (abstract.c:2492)
==6532==    by 0x80DB1CC: PyEval_EvalFrameEx (ceval.c:4005)
==6532==    by 0x80E00B7: PyEval_EvalCodeEx (ceval.c:2968)
==6532==    by 0x80DE5F7: PyEval_EvalFrameEx (ceval.c:3802)
==6532==    by 0x80E00B7: PyEval_EvalCodeEx (ceval.c:2968)
==6532== 
==6532== Use of uninitialised value of size 4
==6532==    at 0x807D6C8: PyInt_FromLong (intobject.c:91)
==6532==    by 0x80F8C30: do_mkvalue (modsupport.c:333)
==6532==    by 0x80F8DC1: do_mkvalue (modsupport.c:179)
==6532==    by 0x80F9534: va_build_value (modsupport.c:536)
==6532==    by 0x80F95B2: Py_BuildValue (modsupport.c:484)
==6532==    by 0x40360BE: build_stat (zookeeper.c:209)
==6532==    by 0x403980F: pyzoo_get (zookeeper.c:870)
==6532==    by 0x8061119: PyObject_Call (abstract.c:2492)
==6532==    by 0x80DB1CC: PyEval_EvalFrameEx (ceval.c:4005)
==6532==    by 0x80E00B7: PyEval_EvalCodeEx (ceval.c:2968)
==6532==    by 0x80DE5F7: PyEval_EvalFrameEx (ceval.c:3802)
==6532==    by 0x80E00B7: PyEval_EvalCodeEx (ceval.c:2968)
, This is probably indicating a bug, but it shouldn't block 3.3.0., Can we make this a duplicate of 792?, Per request closing as a dup of ZOOKEEPER-559]