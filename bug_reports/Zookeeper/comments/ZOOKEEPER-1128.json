[While implementing the lock recipe, I interpreted "the next lowest sequence number" correctly. I feel this phrase is not ambiguous and don't need to correct it.

Any suggestions?, bq. It shouldn't be the "the next lowest sequence number". It should be the "current lowest path".

this seems incorrect to me as the intent is to eliminate a herd effect on write locking. Using the "current lowest path" would result in all waiting writers waking up each time the lock is free'd. By using the next lowest this doesn't happen

A creates write-1 and holds lock
B creates write-2, watches 1 (next lowest to it's own write-2)
C creates write-3, watches 2
A releases the lock
B wakes up
B releases lock
C wakes up

If B drops out before A releases the lock C will wake up and see that A still has the lock.

Is there a particular scenario that you can point out not handled here?
, ops, I got it.
I just misunderstood the term "the next lowest sequence number". 
It means "next" to MY number while is not "next" to the current lock number.
It solves my problem and it's way better than "current lock" solution I'm using now.

But some more suggestion is to just add your comments here in the tutorial. I don't know if I'm the only one to misunderstand it. 
 


, With Hunt's comments, it's clear to me. I feel this issue resolved with the explanation. It will be good to add these comments to the tutorial to help the newbies like me. , Updating the docs to clarify this sounds reasonable to me. I'd encourage you to create a new jira for this (and a patch would be great too! :-) ). Perhaps as an example similar to what I gave in my comment? thanks.
]