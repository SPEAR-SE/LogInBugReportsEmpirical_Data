[I think there are two stages to fixing this problem. First we should make that line of code use BinaryInputArchive.maxBuffer, so that it can be configured. Then we should probably add a version of getChildren that takes and returns an offset, so that getChildren could be called multiple times to get all of the children., returning an offset for getchildren is a good suggestion.... should we just fix the limit in this jira and open another one for getchildren returning an offset ? fixing the limit would be easir to do and can be a part of 3.1 release.
, i think the limit should be fixed in 3.1 release and we can open a new jira for getchildren api.... , this patch allows tthe user to set java property jute.maxbuffer at the client. This value is used at the client to throw an error if the read len of value exceeds the set value. By default its set to 4MB.
if the user wants to cahnge this value, he can do it via setting java property 
-Djute.maxbuffer=someintvalue
, What about having getChildren() return an Iterator<String> instead of a List<String>? Using such an abstraction allows us to put the implementation details of what "walking the list children" mean inside ZooKeeper instead of client code. With an Iterator we can make the next() call handle the multiple offset getChildren() calls under the hood, rather than put this burden on the client. Furthermore, if we have, say, some compressed protocol, a lot of space/cpu can be saved by only decompressing/storing the current child being worked on., sorry i should have mentioned this earlier. I planned to open a jira for exactly what you mentioned above.  Thsi fix is a quick fix for the upcoming release., Consider returning Iterable<String> instead of Iterator<String> so you can take advantage of Java 5 foreach idiom

for (String child : foo.getChildren()) {
    
// Something done with child

}

http://java.sun.com/j2se/1.5.0/docs/api/java/lang/Iterable.html

, This is a good comment, but it should be tracked in a separate Jira., i just committed this. Ill open a new jira for the above discussion.
, Integrated in ZooKeeper-trunk #217 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/217/])
    ]