[Uploading log file., This test case was introduced in ZOOKEEPER-1551. [~thawan], any thoughts here?, My current suspicion is that this is due to the fact that we are passing the request to SyncRP and CommitP concurrently in ObserverZooKeeperServer. This change has been introduced in ZOOKEEPER-1552. , This is a patch for branch 3.4. It essentially commits a request only after sync processor. To be able to do it without changing SyncRequestProcessor, I have added a straightforward request processor (ObserverCommitProcessor)., The current patch is for the 3.4 branch. I think we will need one for trunk as well if there is agreement on the fix., Remove unnecessary log messages I was using for debugging purposes. , -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12609338/ZOOKEEPER-1798-b3.4.patch
  against trunk revision 1533161.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1711//console

This message is automatically generated., The observer don't need to wait for a request to be persisted on disk before applying to the db right?   

Currently, the test is failing because of timing issue but this shouldn't affect the correctness of the system.  So we just add some delay in the test or some mechanism to make sure that request get flushed before we do the verify step instead.  So we don't have to pay for the cost of extra latency on running system. 

, Thanks for commenting, [~thawan].

bq. The observer don't need to wait for a request to be persisted on disk before applying to the db right?

Correct, but the test tries to make sure that the change has been persisted to disk, which contradicts the fact that persistent is not strictly necessary. I think the goal of the test case was to test functionality rather than checking that it is strictly enforce. I was thinking of having some way to have SyncRequestProcessor indicate that a request has gone through, but I thought that the approach I proposed in the patch was simpler.

bq. Currently, the test is failing because of timing issue but this shouldn't affect the correctness of the system.

Agreed, but we shouldn't have a release with tests failing. We need to either fix the test or the code base.

bq.  So we just add some delay in the test or some mechanism to make sure that request get flushed before we do the verify step instead.

In general, I don't like the idea of adding delays. They are difficult to calibrate and prone to false positives.

 bq. So we don't have to pay for the cost of extra latency on running system.

I'm not convinced that the performance penalty would be that bad. If the system is not saturated, then the latency is under control and it should be a few milliseconds., If you are ok with approach that fixing just the test itself (may be checking with the sync processor that all request is flushed) I will come up with a diff. 

, It'd be great if you could generate a fix for the test, [~thawan]. This is pretty much the only blocker left at the moment for 3.4.6. The other blocker is related to publishing artifacts., Make shutdown sequence flush all pending txn to disk, [~fpj] I am planing to apply this patch to both trunk and 3.4.  If you are OK with the current implementation, I will also create a 3.4 patch as well and commit them., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12609804/ZOOKEEPER-1798.patch
  against trunk revision 1534844.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1716//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1716//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1716//console

This message is automatically generated., Find bug warning is due to exit() call when IO exception is caught.  I added this because sync request processor already invoke exit() if exception is thrown during its normal operation., The fix you propose is good for me, +1. About the system exit call, I'm not sure it is strictly necessary to have it there, although in some other part of the class we do something similar. In the case we keep it, we might want to add one of those findbugs exceptions., Remove exit call and add 3.4 version of the patch, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12609985/ZOOKEEPER-1798.patch
  against trunk revision 1535251.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1721//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1721//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1721//console

This message is automatically generated., Committed

trunk 1535491
b3.4 1535497, FAILURE: Integrated in ZooKeeper-trunk #2100 (See [https://builds.apache.org/job/ZooKeeper-trunk/2100/])
ZOOKEEPER-1798. Fix race condition in testNormalObserverRun (thawan, fpj via thawan) (thawan: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1535491)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/SyncRequestProcessor.java
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java
, I'm afraid I'm still seeing this issue, even after this patch was applied.

This is on my internal jenkins, latest trunk (revision says 1535491) using jdk7.

{noformat}
Error Message

expected:<data[2]> but was:<data[1]>
Stacktrace

	at org.apache.zookeeper.server.quorum.Zab1_0Test$8.converseWithObserver(Zab1_0Test.java:1105)
	at org.apache.zookeeper.server.quorum.Zab1_0Test.testObserverConversation(Zab1_0Test.java:542)
	at org.apache.zookeeper.server.quorum.Zab1_0Test.testNormalObserverRun(Zab1_0Test.java:976)
{noformat}
, That's odd, the problem should be fixed, I don't see how it could happen. Any thoughts, [~thawan]?, Just for the record, this test is not known to be flaky in our internal Jenkins (that test our internal branch).  

I am able to repro this on my mac.  (Java 1.7.0_15, OSX 10.7.5).  When this happen, it looks txnlog doesn't have any valid content in it.  So the zkdb that we loaded after shutting down the observer never have txn that its znodes to "data2".   I also modified the test to leave the data files around and try to load it manually after the test fail. The txnlog is loaded successfully with the right content. 

I am thinking that the data flushed to disk by one thread is not visible by the other thread even after thread.join() is called in between. However, this really seem unlikely. But I ran the same test in our production host, I cannot repro the issue (yet)

In Patrick log, this is slightly different. The test failed at line 1105, this means that the first txn in txnlog is read correctly, but not the second one. , I'm  a bit confused here. SyncRequestProcessor is not part of the chain of RPs for an observer. When we call shutdown on the ObserverZooKeeperServer, it will start with the ObserverRequestProcessor and will cascade to FinalRP, but I don't see where we actually shut it down. Could you shed some light here, please, [~thawan]?, Yeah, you are right.  I will create another patch to fix this , Attach a patch that also shutdown sync request processor as part of observer shutdown, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12612782/ZOOKEEPER-1798-2.patch
  against trunk revision 1539529.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1752//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1752//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1752//console

This message is automatically generated., The test failure is due to ZOOKEEPER-1805, +1., Committed
trunk: 1541810
3.4: 1541814, SUCCESS: Integrated in ZooKeeper-trunk #2119 (See [https://builds.apache.org/job/ZooKeeper-trunk/2119/])
ZOOKEEPER-1798. Fix race condition in testNormalObserverRun (Part 2) (thawan, fpj via thawan) (thawan: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1541810)
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/ObserverZooKeeperServer.java
, Closing issues after releasing 3.4.6.]