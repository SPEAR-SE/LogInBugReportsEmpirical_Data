[Changes to add more error messages which can help with debugging JAAS file related issues., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12790657/ZOOKEEPER-2365.patch
  against trunk revision 1729259.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3054//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3054//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3054//console

This message is automatically generated., [~dgfitch] could you please review the changes and provide your feedback?, Biju Nair: I'm a user of the project, not a developer, so I can't really do a review.

* It appears to output separate messages which distinguish if the file exists or not. That's good.
* The change loses the portion of code which checked `loginContextName` - I'm not sure if that was important or not. Bad?
* At the end of the function, I'm not sure why it's throwing a new exception entirely instead of wrapping the existing `securityException` with the custom message maybe.

Again, not a developer on this project or at all familiar with the codebase... hope this helps though., The last point [~danfitch] raised ins the most important for me, why are you not propagating the message in the original {{SecurityException}}?

I suspect that the reason we throw an IOException is that we have tried to make it common practice to propagate up IOException when there is any issues that involves IO (e.g., accessing a file), but it doesn't mean we should be swallowing the original error message.

[~gsbiju] could you please produce a new patch to address the comments? , Also, please have a look at ZOOKEEPER-2345. It is pretty much the same issue, but has more information., [~danfitch] We appreciate you taking your time to review and help, thanks!, bq. why are you not propagating the message in the original SecurityException?

As you mentioned, left the current code as it is which throws a [new IOException|https://github.com/apache/zookeeper/blob/acf732eafbe0e64a0259418cc82bb3448c2f626c/src/java/main/org/apache/zookeeper/server/ServerCnxnFactory.java#L228-L229].

[~fpj] Thanks for the comments. Will submit a new patch , In the patch, the message from the original exception is being added to the start of the {{errorMessage}} before passing to the IOException.
{code}
...
String errorMessage = securityException.getMessage();
...
{code}
Was something else missed [~fpj]? Thx, Attaching a new patch to address the review comments. [~fpj] [~danfitch] Let me know if any further changes are required., You need to add double-quotes to your keyTab line in JAAS config:

keyTab="/keytabs/vdev-solr-01.keytab"

Missing or wrong double-quotes cause java.io.IOException: No JAAS configuration section named 'Server' was foundin, You also missing semicolon in the end of JAAS config. It also causes java.io.IOException: No JAAS configuration section named 'Server' was foundin]