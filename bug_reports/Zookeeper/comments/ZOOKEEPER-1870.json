[recent failure:

https://builds.apache.org/job/ZooKeeper-trunk-jdk7/767/, looks like this was introduced by ZOOKEEPER-1691, [~shralex], could you take a look?, Reassigning it to Helen., I see a lot of log messages like this whenever this test fails:

{noformat}
2014-03-10 23:51:28,550 [myid:1] - INFO  [WorkerSender[myid=1]:QuorumCnxManager@195] - Have smaller server identifier, so dropping the connection: (2, 1)
{noformat}

From the recent mailing list discussion, it looks like this is related to ZOOKEEPER-1805 and ZOOKEEPER-1810.

http://mail-archives.apache.org/mod_mbox/zookeeper-user/201402.mbox/%3CCAEH-zfq4uxUqi9D4KrD8EvPaU3MxDUt7WHQKDPNCPDQoYAbP6g@mail.gmail.com%3E, Unassigned this ticket from Helen since it doesn't seem like the failure is directly caused by the disable-standalone mode., Thanks Michi.  However, I also see this error happen every once in a while when the test succeeds. I believe the reason it happens more often when the test fails is because over 50 seconds are spent trying to get servers 1 and 2 to connect (we get all the way to here):

2014-02-28 02:30:39,673 [myid:2] - INFO  [QuorumPeer[myid=2]/127.0.0.1:11227:FastLeaderElection@846] - Notification time out: 51200

so there is just more time/opportunity for the error to happen, as opposed to the success case when the servers are able to connect within a second or faster.

This could still be related even though it happens in both the success and failure case.  Either way I'll continue looking into it on my own as well., Does this test fail even with ZOOKEEPER-1805 applied?, Hi Michi,

On my setup StandaloneDisabledTest fails even without 1805 patch.
I checkout revision 1574686 and build shows StandaloneDisabledTest consitently fails.
It also fails with 1805 patch applied.

Thanks & Regards,
Deepak, Ok thank you for the update Deepak. I was hoping ZOOKEEPER-1805 would fix this issue. I'm assigning this back to Helen., Ok I think I know what the problem is. There is race between QuorumCnxManager.Listener.run() and QuorumCnxManager.Listener.halt() that causes the socket to leak.

1. {{QuorumCnxManager.Listener.run()}} goes into the while loop {{while((!shutdown) && (numRetries < 3))}}
2. {{QuorumCnxManager.halt()}} gets called, sets {{shutdown}} to {{true}} and calls {{QuorumCnxManager.Listener.halt()}}.
3. {{QuorumCnxManager.Listener.halt()}} closes the socket.
4. {{QuorumCnxManager.Listener.run()}} binds the socket and breaks out of the while loop since the shutdown flag is set.

I'll upload a patch., fwiw I'm still seeing this alot on my setup (once a day at least, it's the most common cause of CI job failure for me). Thanks for making it a priority!, There is another problem: QuorumPeer.restartLeaderElection() doesn't clear the shuttingDownLE flag., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12635000/ZOOKEEPER-1870.patch
  against trunk revision 1577756.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1964//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1964//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1964//console

This message is automatically generated., https://reviews.apache.org/r/19269/, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12635000/ZOOKEEPER-1870.patch
  against trunk revision 1577756.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1965//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1965//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1965//console

This message is automatically generated., +1, thanks Michi!

if possible, please update the description of the jira to reflect the problems you found (as you did on reviewboard), on second thought it looks like some C tests are failing ?, I think it's another flaky test that's not related to this patch. I ran the test on my box like 100 times and they all passed. Let me run the build again to see if it fails again., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12635000/ZOOKEEPER-1870.patch
  against trunk revision 1577756.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1966//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1966//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1966//console

This message is automatically generated., Ran it here 100 times as well and they all passed.  Thank you Michi, +1!, I just got a failure with this patch after 44 iterations:

{noformat}
junit.run:
    [junit] WARNING: multiple versions of ant detected in path for junit 
    [junit]          jar:file:/usr/share/java/ant/ant.jar!/org/apache/tools/ant/Project.class
    [junit]      and jar:file:/usr/share/ant/lib/ant.jar!/org/apache/tools/ant/Project.class
    [junit] Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=utf8
    [junit] Running org.apache.zookeeper.server.quorum.StandaloneDisabledTest
    [junit] Tests run: 2, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 61.398 sec
{noformat}

I was running without -Dtest.output=yes, alas :-(. Will run again with -Dtest.output=yes. , Also, I was *only* running that test not the whole suite. I.e.:

{noformat}
while :; do ant -Dtestcase=StandaloneDisabledTest test-core-java ; done | tee test.log
{noformat}, Thanks for running the test Raul. It seems like there are more things to fix. The log file should be under build/test/logs/ even without the -Dtest.output=yes option. Which platform are you using?

--Michi, Hi Michi,

Platform is Fedora Linux, with 3.13 Kernel on x86_64:

{noformat}
$ uname -r
3.13.6-200.fc20.x86_64
$ arch
x86_64
$ cat /etc/fedora-release 
Fedora release 20 (Heisenbug)
{noformat}

This is mostly out of trunk plus some other patches that I had (but mostly unrelated). I'll run again out of pure trunk. , Oh, and it fails with:

{noformat}
    [junit] 2014-03-19 17:50:42,869 [myid:] - INFO  [main:ZKTestCase$1@66] - FAILED startSingleServerTest
    [junit] java.lang.AssertionError: Server 1 is not up
    [junit] 	at org.junit.Assert.fail(Assert.java:93)
    [junit] 	at org.junit.Assert.assertTrue(Assert.java:43)
  ....
{noformat}, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12635699/test.log
  against trunk revision 1577756.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 15 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1967//console

This message is automatically generated., [~shralex], it looks like the problem is in FastLeaderElection. WorkerReceiver.run() doesn't get out of the while loop after calling self.getElectionAlg().shutdown(), and the node 1 is becoming the leader when it shouldn't. Should we put break after self.getElectionAlg().shutdown() so that the rest of the logic doesn't get executed when restarting the leader election?, yes, looks like you're right. It sets stop to true but then there's a bunch of code that may still be executed in the remainder of the loop, so break sounds like a good idea. , Another change I added was to reset proposedLeader to -1 in FastLeaderElection.shutdown(). I'll run the test 200 times before uploading the patch this time :), thanks Michi!, 3 additional changes:

- Reset proposedLeader to -1 in FastLeaderElection.shutdown().
- Get out of the WorkerReceiver.run() loop after calling self.getElectionAlg().shutdown().
- Make FastLeaderElection.getVote() public for unit test. Let me know if making this method public is ok with you guys., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12635811/ZOOKEEPER-1870.patch
  against trunk revision 1577756.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1970//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1970//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1970//console

This message is automatically generated., The last patch is passing every time so far (66 runs thus far). , Thank you for running the test again Raul. , [~phunt] / [~fpj], could one of you take a look at the patch?, I'll have a look today., This looks good to me. I was just wondering if there is a concrete reason for setting proposedLeader to -1 when we shut it down. Is it necessary or just good to have?

I was also wondering if we should check this into the 3.4 branch as well as trunk., I can't reproduce it now, but I think there was a case where the quorum peer incorrectly became a leader after shutdown got called if the proposedLeader wasn't set to -1. I'm guessing it could happen if shutdown() gets called right before this block of code gets executed. Maybe there is a way to shutdown the leader election more cleanly?

{noformat}
/*
 * This predicate is true once we don't read any new
 * relevant message from the reception queue
 */
if (n == null) {
    self.setPeerState((proposedLeader == self.getId()) ?
            ServerState.LEADING: learningState());

    Vote endVote = new Vote(proposedLeader,
            proposedZxid, proposedEpoch);
    leaveInstance(endVote);
    return endVote;
}
{noformat}

Yes, I think we should fix this in 3.4. I'll upload a separate patch for 3.4., +1, committed to trunk: Committed revision 1605380., I've made a minor change to the patch... We are missing the 3.4 patch, that's why I haven't resolved this issue., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12652411/ZOOKEEPER-1870.patch
  against trunk revision 1605380.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2147//console

This message is automatically generated., SUCCESS: Integrated in ZooKeeper-trunk #2347 (See [https://builds.apache.org/job/ZooKeeper-trunk/2347/])
ZOOKEEPER-1870. flakey test in StandaloneDisabledTest.startSingleServerTest (Helen Hastings via fpj) (fpj: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1605380)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/test/CnxManagerTest.java
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/test/FLETest.java
]