[Fortify identified this as a critical issue (it identified 5 in our code base but I evaluated this one as the only possibly serious issue). 

My sense is that this is not particularly serious, given it's only output in debug mode, however I still think we should address it. We can either cut down the details on what's output (the toString of KerberosTicket is pretty verbose), or we can just indicate whether it's null or not, or we could keep what we have and introduce another "kerberos verbose logging/debug" type configuration parameter in order to get this detail. 

We should also investigate what kerberos itself it outputting when you set "debug=true" in jaas.conf and setting of "-Dsun.security.krb5.debug=true" on the JVM. Perhaps that's sufficient information and we don't gain much from this debug output? In which case perhaps logging an identifier (which can be tracked back to the kerberos debug information) might be sufficient instead., fwiw here's the toString of KerberosTicket

{noformat}
    public String toString() {
        if (destroyed)
            throw new IllegalStateException("This ticket is no longer valid");
        StringBuffer caddrBuf = new StringBuffer();
        if (clientAddresses != null) {
            for (int i = 0; i < clientAddresses.length; i++) {
                caddrBuf.append("clientAddresses[" + i + "] = " +
                                 clientAddresses[i].toString());
            }
        }
        return ("Ticket (hex) = " + "\n" +
                 (new HexDumpEncoder()).encodeBuffer(asn1Encoding) + "\n" +
                "Client Principal = " + client.toString() + "\n" +
                "Server Principal = " + server.toString() + "\n" +
                "Session Key = " + sessionKey.toString() + "\n" +
                "Forwardable Ticket " + flags[FORWARDABLE_TICKET_FLAG] + "\n" +
                "Forwarded Ticket " + flags[FORWARDED_TICKET_FLAG] + "\n" +
                "Proxiable Ticket " + flags[PROXIABLE_TICKET_FLAG] + "\n" +
                "Proxy Ticket " + flags[PROXY_TICKET_FLAG] + "\n" +
                "Postdated Ticket " + flags[POSTDATED_TICKET_FLAG] + "\n" +
                "Renewable Ticket " + flags[RENEWABLE_TICKET_FLAG] + "\n" +
                "Initial Ticket " + flags[RENEWABLE_TICKET_FLAG] + "\n" +
                "Auth Time = " + String.valueOf(authTime) + "\n" +
                "Start Time = " + String.valueOf(startTime) + "\n" +
                "End Time = " + endTime.toString() + "\n" +
                "Renew Till = " + String.valueOf(renewTill) + "\n" +
                "Client Addresses " +
                (clientAddresses == null ? " Null " : caddrBuf.toString() +
                "\n"));
    }
{noformat}
, I am leaning towards removing the LOG.debug call, it's probably just a left over of when this feature was being added. , I'd rather not remove it entirely, it seems like reasonable debug level information. Perhaps we can print whether it's null or not and the client/server principal if not null?, Attach a patch for the fix. I think it is reasonable to log client and server principal for debugging as these should not be considered as sensitive information (comparing to other fields in TGT such as the ticket session key.), and log them might be helpful than completely remove them from a debugging point of view.

Regarding the debug output from Kerberos itself when debugging is enabled (by setting debug to true in both jaas.conf and in JVM), the output does not contain anything specific related to TGT, except the client / server principals. 

[~phunt] PTAL, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12801855/ZOOKEEPER-2405.patch
  against trunk revision 1742002.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3147//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3147//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3147//console

This message is automatically generated., Update patch to satisfy FindBug, which has a valid catch of a redundant null check. Add the null check at the beginning of loop and warn if null ticket is found, as nothing would prevent the implementation of the credential provider to add a null element in the set, even though it rarely happens in practice, so it seems to me a good check to add. , -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12802027/ZOOKEEPER-2405.patch
  against trunk revision 1742171.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3150//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3150//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3150//console

This message is automatically generated., My bad, it looks like the original code always assumed the set contained valid tickets (which seems reasonable). Based on that the null ticket check is not necessary afaict. Does that make sense? In checking the code from openjdk it looks like the client/server for a ticket can never be null (the docs are not clear). So no null check is necessary for the getName calls:

http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/javax/security/auth/kerberos/KerberosTicket.java#KerberosTicket.init%28byte%5B%5D%2Cjavax.security.auth.kerberos.KerberosPrincipal%2Cjavax.security.auth.kerberos.KerberosPrincipal%2Cbyte%5B%5D%2Cint%2Cboolean%5B%5D%2Cjava.util.Date%2Cjava.util.Date%2Cjava.util.Date%2Cjava.util.Date%2Cjava.net.InetAddress%5B%5D%29

Michael can you update the patch?, Update patch to remove the null check against tickets retrieved from subject credential set. There was an issue in JDK which states there were legal actions to make the credential set in a bad state (e.g. null element in the set) [1], and now it looks like the contract has been fixed [2], so it's safe to remove the null check in application code.

[1] https://bugs.openjdk.java.net/browse/JDK-8015081
[2] http://hg.openjdk.java.net/jdk9/dev/jdk/rev/36a0438a6631, [~phunt] I agree, just updated the patch. I think the credential set does not allow null element, please refer to my findings below for more details., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12802292/ZOOKEEPER-2405.patch
  against trunk revision 1742171.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3156//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3156//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3156//console

This message is automatically generated., [~hanm] - the patch is not applying cleanly to branch 3.4. Can you provide a patch for that branch as well (separate file)., I tested it out and the results look good:

{noformat}
2016-05-17 21:32:51,707 [myid:] - DEBUG [Thread-4:Login@339] - Client principal is zookeeper/kerberos.example.com@EXAMPLE.COM.
2016-05-17 21:32:51,707 [myid:] - DEBUG [Thread-4:Login@340] - Server principal is krbtgt/EXAMPLE.COM@EXAMPLE.COM.
{noformat}

However I'd recommend that you delineate the principal value. e.g. wrap it in double quotes so it's easier to identify exactly what is the principal. In the log output above the trailing "." is not really part of the value., Attach patch for 3.4 branch which is using an older version of logger that leads to previous patch target trunk does not apply cleanly., Re submit patch target trunk, make it consistent for the patch that targeting with branch 3.4. Previously I explicitly check LOG.isDebugEnabled to avoid construct the log message whenever we can, but the rest of ZK codebase looks like not using this approach and the overhead of constructing the object in this case is trivial so I removed the check and rely on LOG.debug only., Thanks [~phunt] for your suggestion, I agree and just uploaded two patches for trunk and 3.4 respectively., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12804533/ZOOKEEPER-2405.patch
  against trunk revision 1745279.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3174//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3174//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3174//console

This message is automatically generated., Thanks Michael! Committed to 3.4.9/3.5.2/trunk.
, SUCCESS: Integrated in ZooKeeper-trunk #2937 (See [https://builds.apache.org/job/ZooKeeper-trunk/2937/])
ZOOKEEPER-2405: getTGT() in Login.java mishandles confidential information (Michael Han via phunt) (phunt: [http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1745534])
* trunk/CHANGES.txt
* trunk/src/java/main/org/apache/zookeeper/Login.java
]