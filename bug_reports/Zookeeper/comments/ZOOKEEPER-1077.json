[Sounds like you've figured out the issues, would you care to submit a patch? Thanks!, Here's a patch that implements the proposed fixes.

I fixed by passing some command line options to configure, rather than messing autoconf (which I am not sufficiently comfortable with the propose a patch):

CPPFLAGS=-D_POSIX_PTHREAD_SEMANTICS LDFLAGS="-lnsl -lsocket" ./configure

LDFLAGS fixes the link requirement.

Defining _POSIX_PTHREAD_SEMANTICS chooses compatible versions of ctime_r and getpwuid_r.

I added the casts to (int) in zk_log.c

There was also a conflict because Illumos defines htonll in one of its system include files.  That function also has a different signature (uint64_t => uint64_t, which might actually be more correct).  Trying to #undef htonll doesn't work because of include order, so instead I renamed htonll to zk_htonll to avoid conflicts.  I think renaming is the right thing to do (although I'm not sure what the correct prefix should be - maybe _zk_ to indicate that it is private?), Patch for building on Illumos, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12510920/zookeeper.patch
  against trunk revision 1231809.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/910//console

This message is automatically generated., In order for our automated processes to work properly the diff needs to be rooted in the "trunk" directory (ie the directory holding src). See: https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute

Please re-submit the patch properly formatted (also notice the naming scheme we like to use is ZOOKEEPER-####.patch where #### is the jira number).

Thanks, Looks like issue on solaris with the c client as well. ZOOKEEPER-1077 & ZOOKEEPER-1742, The solaris build on Jenkins is failing because of java tests and it seems to be a different one every time, so it is quite flaky. Any thoughts about how we fix it for 3.4.6 and trunk? , I'm moving this to 3.4.7., I'm attaching a patch that gets the trunk native code building on Solaris.  In addition to the issues already mentioned, I found another problem introduced by ZOOKEEPER-827.
# configure.ac now uses the {{AC_CANONICAL_HOST}} macro to determine if it's running on Solaris.
# Makefile.am uses that OS detection to add the extra compiler and linker flags required on Solaris.
# In zk_log.c, cast the pid to {{long}} for use by the {{snprintf}} format string.
# In zookeeper.c, set the socket {{send}} flags to 0, because neither {{MSG_NOSIGNAL}} nor {{SO_NOSIGPIPE}} is defined.  This part isn't entirely correct, because it means an application on Solaris could fall victim to {{SIGPIPE}} generated from within the ZooKeeper library.  I believe the only full solution for Solaris is to conditionally compile in some extra code to do our own signal handling.  (See links below for examples of how other projects have done this.)  Before I go down the path of adding signal handling code, I'd like to gauge if there is general community interest in this approach.

https://redmine.openinfosecfoundation.org/issues/862

https://github.com/kroki/XProbes/blob/1447f3d93b6dbf273919af15e59f35cca58fcc23/src/libxprobes.c#L156

There is an earlier patch attached here to deal with a naming conflict on the {{htonll}} function.  At this point, that conflict has been fixed in ZOOKEEPER-2049.
, Thanks [~cnauroth] - could you backport this to the 3.4 branch as well? It would be nice to have this for the upcoming 3.4.7 release., A few comments about the patch:

* "cast the pid to long for use by the snprintf format string." - do we we want to do this on all platforms?
* why is:

{noformat}
#define MSG_NOSIGNAL SO_NOSIGPIPE
{noformat}

dropped for Apple?, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12729722/ZOOKEEPER-1077.001.patch
  against trunk revision 1676359.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 1 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2663//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2663//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2663//console

This message is automatically generated., @Raul, thank you for the code review.

bq. "cast the pid to long for use by the snprintf format string." - do we we want to do this on all platforms?

I expect this is fine cross-platform, but let me know if you prefer to have it wrapped in an {{#ifdef}}.  POSIX dicates that the width of {{pid_t}} is no more than {{long}}.

http://pubs.opengroup.org/onlinepubs/009696699/basedefs/sys/types.h.html
{quote}
...the widths of ..., pid_t, ... are no greater than the width of type long.
{quote}

I checked the BSD and Linux source.  It looks like BSD can use either {{int}} or {{long}} depending on options.  I see Linux using 32-bit signed as well.  For the 32-bit case, this code would store the 32-bit value in a 64-bit field just for printing.

bq. dropped for Apple?

The patch keeps using {{SO_NOSIGPIPE}} on Apple, but the diff makes it difficult to read.  Here is what it looks like after applying the patch:

{code}
#ifdef _WIN32
typedef SOCKET socket_t;
typedef int sendsize_t;
#define SEND_FLAGS  0
#else
#ifdef __APPLE__
#define SEND_FLAGS SO_NOSIGPIPE
#endif
#ifdef __linux__
#define SEND_FLAGS MSG_NOSIGNAL
#endif
#ifndef SEND_FLAGS
#define SEND_FLAGS 0
#endif
typedef int socket_t;
typedef ssize_t sendsize_t;
#endif
{code}

I'm attaching a v002 patch.  This fixes some additional compilation problems I found in the tests.  We need to use the same extra compiler and linker flags for the cppunit tests.  The {{$(shell)}} construct in makefiles is a GNU-ism, so I needed to do that differently on Solaris.  The {{realloc}} stub declaration needed to be wrapped like the others to avoid a symbol redefinition error.  I'm not sure why this one wasn't triggering on Linux.  I'm guessing there is some subtle difference in the Solaris standard headers that this file includes so that it walks back to an earlier {{realloc}} declaration.

I'll provide a branch-3.4 patch too later.
, Here is the branch-3.4 patch.  There were no changes required in zookeeper.c for this one, because the {{MSG_NOSIGNAL}} stuff is handled differently there.  zk_log.c on this branch has an extra conditional for {{WIN32}}.  I didn't bother with casting the pid there, because {{getpid}} on Windows is documented to return {{int}}.

https://msdn.microsoft.com/en-us/library/t2y34y40.aspx, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12729828/ZOOKEEPER-1077-branch-3.4.002.patch
  against trunk revision 1676359.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 15 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2668//console

This message is automatically generated., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12729821/ZOOKEEPER-1077.002.patch
  against trunk revision 1676359.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 14 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2667//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2667//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2667//console

This message is automatically generated., Thanks for the clarifying - makes sense. , +1, lgtm. 

[~michim], [~rakeshr], [~fpj]: could i get another review/+1 pls? i'll push to all branches afterwards. thanks!, Sorry for the slowness [~cnauroth] - will get this merged today (after another +1). , Merged:

svn.apache.org/viewvc?view=revision&revision=1679951
svn.apache.org/viewvc?view=revision&revision=1679952
svn.apache.org/viewvc?view=revision&revision=1679953

Thanks [~cnauroth]! , FAILURE: Integrated in ZooKeeper-trunk #2695 (See [https://builds.apache.org/job/ZooKeeper-trunk/2695/])
ZOOKEEPER-1077: C client lib doesn't build on Solaris (Chris Nauroth via rgs) (rgs: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1679951)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/c/Makefile.am
* /zookeeper/trunk/src/c/configure.ac
* /zookeeper/trunk/src/c/src/zk_log.c
* /zookeeper/trunk/src/c/src/zookeeper.c
* /zookeeper/trunk/src/c/tests/LibCMocks.cc
* /zookeeper/trunk/src/c/tests/wrappers.opt
, Thanks for the commit, Raul.  No worries about slowness.  I know committers are busy.  :-), Thanks [~rgs] and [~cnauroth] for the good work!

I've one observation about {{CHANGES.txt}} file entry. Its added the details under {{Release 3.5.1 - 5/15/2015}} section, but this jira is marked for 3.5.2 and not part of {{zookeeper-3.5.1-alpha}} release, right?.

[~michim], [~phunt], [~fpj], For setting up {{3.5.2}} development activities in {{CHANGES.txt}}, should we wait for the release to be completed and then update the {{CHANGES.txt}} by moving these resolved jira details over there ?]