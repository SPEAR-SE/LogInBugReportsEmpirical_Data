[Those lines are definitely wrong. Example:

* byte buffer 20 bytes in length
* current position is 10 (halfway)

Calling skip(5) should move the position to 15. However, since the new position = 15 > remaining = 10, the call moves all the way to the end of the buffer.

The simpler alternative suggested in the ticket description works., While testing, I noticed that the skip() method also behaves incorrectly for a negative argument. It should not skip at all for a negative argument, but instead it backs the position up. This can lead to an {{IllegalArgumentException}} if it backs up before the beginning of the buffer., The patch also fixes the skip() behavior, which is technically out of scope for this ticket. Let me know if that should be done under a separate ticket., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12641985/ZOOKEEPER-1843.patch
  against trunk revision 1589949.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2066//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2066//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2066//console

This message is automatically generated., Thank you for the patch Bill. It looks great overall with good set of tests. I just have 2 minor comments:

- Add a license header to ByteBufferInputStreamTest.java. The license header should look something like this: https://github.com/apache/zookeeper/blob/trunk/src/java/test/org/apache/zookeeper/server/CRCTest.java
- Wrap long lines around 80 characters., Here's the second version of the patch with the missing license header and lines wrapped to 80 columns. Thanks!, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12642079/ZOOKEEPER-1843.v2.patch
  against trunk revision 1590157.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2068//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2068//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2068//console

This message is automatically generated., trunk: http://svn.apache.org/viewvc?view=revision&revision=1590298

Thank you Bill!, FAILURE: Integrated in ZooKeeper-trunk #2304 (See [https://builds.apache.org/job/ZooKeeper-trunk/2304/])
]