[GitHub user enixon opened a pull request:

    https://github.com/apache/zookeeper/pull/333

    ZOOKEEPER-2872: Interrupted snapshot sync causes data loss

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/enixon/zookeeper snap-sync

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/333.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #333
    
----
commit 39bd1a3eb9171a014845fff97648341cbfb40a11
Author: Brian Nixon <nixon@fb.com>
Date:   2017-08-01T20:25:51Z

    ZOOKEEPER-2872: Interrupted snapshot sync causes data loss

----
, -1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/937//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/937//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/937//console

This message is automatically generated., Github user enixon commented on the issue:

    https://github.com/apache/zookeeper/pull/333
  
    AtomicFileOutputStream performs an fsync when the stream is closed with the following.
    "((FileOutputStream) out).getFD().sync();"

, -1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/938//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/938//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/938//console

This message is automatically generated., +1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/939//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/939//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/939//console

This message is automatically generated., Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/333
  
    I am now wondering why we should not fsync snapshot taking at all cases. It seems to be a useful property to have for snapshot serialization, and will make code simpler. Any performance considerations that lead to the conclusion of only applying fsync snapshot when it's a SNAP sync?
, Github user hanm commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/333#discussion_r132832594
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/Learner.java ---
    @@ -364,6 +364,7 @@ protected void syncWithLeader(long newLeaderZxid) throws Exception{
             readPacket(qp);
             LinkedList<Long> packetsCommitted = new LinkedList<Long>();
             LinkedList<PacketInFlight> packetsNotCommitted = new LinkedList<PacketInFlight>();
    +        boolean syncSnapshot = false;
    --- End diff --
    
    We can level this variable definition up so it's clustered with `snapshotNeed` boolean.
    
    Another possibility is to get ride of this variable and use existing `snapshotNeeded` - but that will do fysnc snapshot for TRUNC sync, which the existing patch will not. 
, Github user hanm commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/333#discussion_r132832602
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/Learner.java ---
    @@ -364,6 +364,7 @@ protected void syncWithLeader(long newLeaderZxid) throws Exception{
             readPacket(qp);
             LinkedList<Long> packetsCommitted = new LinkedList<Long>();
             LinkedList<PacketInFlight> packetsNotCommitted = new LinkedList<PacketInFlight>();
    +        boolean syncSnapshot = false;
    --- End diff --
    
    Another possibility as I just commented is to get rid of this variable and always Fsync snapshot serialization.
, Github user enixon commented on the issue:

    https://github.com/apache/zookeeper/pull/333
  
    We contemplated doing an fsync for every snapshot and decided against. You're taking a guaranteed io spike each time. That's fine when you're just syncing with the quorum but during normal operation, it seems best to keep snapshot taking a lighter weight operation.
, -1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/942//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/942//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/942//console

This message is automatically generated., Github user enixon commented on the issue:

    https://github.com/apache/zookeeper/pull/333
  
    I am unable to reproduce the test failure in Zab1_0Test
, Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/333
  
    >> it seems best to keep snapshot taking a lighter weight operation.
    
    Sounds reasonable.
    
    >> I am unable to reproduce the test failure in Zab1_0Test
    
    I think it's a flaky test. Filed ZOOKEEPER-2877 for this.
, Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/333
, Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/333
  
    Committed to master: 0706b40afad079f19fe9f76c99bbb7ec69780dbd
    
    Pending JIRA resolve after fixing merge conflicts and commit into branch-3.4 and 3.5.
, SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3503 (See [https://builds.apache.org/job/ZooKeeper-trunk/3503/])
ZOOKEEPER-2872: Interrupted snapshot sync causes data loss (hanm: rev 0706b40afad079f19fe9f76c99bbb7ec69780dbd)
* (edit) src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java
* (edit) src/java/test/org/apache/zookeeper/test/TruncateTest.java
* (edit) src/java/main/org/apache/zookeeper/server/quorum/Learner.java
* (edit) src/java/main/org/apache/zookeeper/server/persistence/SnapShot.java
* (edit) src/java/main/org/apache/zookeeper/server/persistence/FileSnap.java
* (edit) src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java
* (edit) src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
]