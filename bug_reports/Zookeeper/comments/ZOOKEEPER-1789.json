[thanks once again Raul. Yeah, I guess it should be getView instead of getVotingView, or something similar. It is possible, however, that the sid is not there so the following code should deal with the case that electionAddr is null, perhaps by calling connectOne(sid) instead of connectOne(sid, electionAddr), but I'm not completely sure.

You may also want to look at ZK-1633. CnxManagerTest.java is where to look for test examples for this one.

There seems to be a related bug - observers may not be declared in the view and have a special id (although if they fall within this "if" like you describe they have positive id so they should be in getView).  See the code below the one you quote in how it deals with special ObserverId = -1. 

It would be great if you can fix and test the bug you identified, dealing also with the case that electionAddr may be end up being null if the id is not in the view. I can then fix the remaining issue of special ObserverId., Revert unwarranted change by 3rd party, [~rgs], can you please take this one ?, Added a test and verified that it fails without the fix.

Although this should resolve the current JIRA I still don't know whether or not there is a problem with anonymous observers that connect with id  OBSERVER_ID = Long.MAX_VALUE. Looking at the code of receiveConnection and connectOne in 3.4.6, I don't understand how a server receiving the connection attempt from such an observer would be able to connect back (is it in the view ? if not how where is its address coming from ?) , -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12656705/ZOOKEEPER-1789.patch
  against trunk revision 1611846.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 87 new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2201//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2201//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2201//console

This message is automatically generated., failure is testHammer, unrelated to the patch, Thanks for the patch, [~shralex]. One small question in:

{noformat}
+     * Tests a bug in QuorumCnxManager that causes a NPE when a negative 3.4.6
+     * observer connects to a 3.5.0 server. 
{noformat}

what does negative mean in that context? or you meant < 3.4.6?

Besides that, looks great to me., Thanks Raul, it was a typo, leftover from another test's description where a negative value is sent. Removed this word, otherwise the patch is identical., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12656740/ZOOKEEPER-1789.patch
  against trunk revision 1611846.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 87 new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2203//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2203//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2203//console

This message is automatically generated., awesome [~shralex], +1.

[~phunt]: would be great to have this for the upcoming alpha release., What's with the "sleep(1000)" in the test? (as well as some pretty low timeouts for other statements in that same test) That's usually a red flag. - meaning that tends to cause flakey tests on slow/underprovisioned hardware., This is actually how most of the CnxManagerTest tests work - they start the QuorumConnectionManager and wait for a second before attempting to connect. I guess its because there are multiple threads running in QCM., I think those sleep calls are there so that we are sure that the listener is listening before proceeding (it's a separate thread). Alex is right that other tests do the same. I'm not sure how to check if the listener is already blocked on the accept before proceeding. Even if we use a boolean flag it isn't totally reliable.  , Looks good to me, thanks Alex! Committed to trunk., SUCCESS: Integrated in ZooKeeper-trunk #2384 (See [https://builds.apache.org/job/ZooKeeper-trunk/2384/])
ZOOKEEPER-1789. 3.4.x observer causes NPE on 3.5.0 (trunk) participants (Alex Shraer via phunt) (phunt: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1612885)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/test/CnxManagerTest.java
]