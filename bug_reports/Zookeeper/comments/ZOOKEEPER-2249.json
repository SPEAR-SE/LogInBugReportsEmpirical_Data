[Something to consider is adding a way to bypass the CRC check to be able to start ZK even if there is a transaction that failed, so that part of the rest of the data can be recovered.
I'm thinking about a magical system property like -Dskip.crc.check=true, There is something wrong on the FileTxnLog#append code path while padding the file, but we have starting to see this more frequently on very large HBase cluster when HBase needs to recovery very large replication queues and does massive Multi op (10s of MBs). , GitHub user afine opened a pull request:

    https://github.com/apache/zookeeper/pull/436

    [WIP] ZOOKEEPER-2249: CRC check failed when preAllocSize smaller than node data

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/afine/zookeeper ZOOKEEPER-2249

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/436.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #436
    
----
commit 99236e2ddb10de6d20e5afea7e79751404ae48c6
Author: Abraham Fine <afine@apache.org>
Date:   2017-12-19T02:33:11Z

    ZOOKEEPER-2249: CRC check failed when preAllocSize smaller than node data

----
, Github user phunt commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/436#discussion_r157918305
  
    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/Util.java ---
    @@ -211,7 +211,7 @@ public static long padLogFile(FileOutputStream f,long currentSize,
                 long preAllocSize) throws IOException{
             long position = f.getChannel().position();
             if (position + 4096 >= currentSize) {
    -            currentSize = currentSize + preAllocSize;
    +            currentSize = position + preAllocSize;
    --- End diff --
    
    Nice catch Abe! This looks like a reasonable fix, however it results in the doc'd invariant not being followed
    
    "allocates space in the transaction log file in blocks of preAllocSize kilobytes"
    
    I believe in this case you want something which will maintain the file as a multiple of this value.
    
    Perhaps a while loop inside the conditional, replacing "currentSize = currentSize + preAllocSize;" with:
    
    while (position + 4096 >= currentSize) {
      currentSize = currentSize + preAllocSize
    }
, Github user afine commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/436#discussion_r158392075
  
    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/Util.java ---
    @@ -211,7 +211,7 @@ public static long padLogFile(FileOutputStream f,long currentSize,
                 long preAllocSize) throws IOException{
             long position = f.getChannel().position();
             if (position + 4096 >= currentSize) {
    -            currentSize = currentSize + preAllocSize;
    +            currentSize = position + preAllocSize;
    --- End diff --
    
    Fixed
, -1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 4 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1385//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1385//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1385//console

This message is automatically generated., -1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 4 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1386//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1386//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1386//console

This message is automatically generated., -1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 4 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1387//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1387//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1387//console

This message is automatically generated., +1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 4 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1388//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1388//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1388//console

This message is automatically generated., Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/436
, Issue resolved by pull request 436
[https://github.com/apache/zookeeper/pull/436], Github user phunt commented on the issue:

    https://github.com/apache/zookeeper/pull/436
  
    LGTM +1. Thanks @afine . Committed to 3.4/3.5/trunk.
, SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3697 (See [https://builds.apache.org/job/ZooKeeper-trunk/3697/])
ZOOKEEPER-2249: CRC check failed when preAllocSize smaller than node (phunt: rev 4d629d289fc4b1079fff2244b92a337e4068e240)
* (add) src/java/test/org/apache/zookeeper/server/persistence/FileTxnLogTest.java
* (edit) src/java/main/org/apache/zookeeper/server/persistence/Util.java
* (edit) src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java
]