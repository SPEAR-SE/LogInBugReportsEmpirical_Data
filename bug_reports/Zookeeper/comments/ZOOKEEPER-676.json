[Thanks for the report!

Can you let me know what version of zkpython you're using - is it from ZK trunk or an official release? There is another JIRA related to segfaults on watchers, I wonder if this is related...

Henry, Sorry - I just realised you gave that information. I'll dig into the problem and see what's up.
, Josh - 

I think I've identified a case in which this could happen. Could you share a minimal script that reproduces the problem? I'll test it against my fix to make sure I'm solving the problem you're seeing.

Thanks,

Henry, Test script demonstrating the issue, Henry -- I've attached the script, and just pasted here in its entirety just in case you have issues downloading or displaying.  Thank you so much for your attention to this issue! :)  Addtionally, this same script, and all others I'm working on, work flawlessly on our RedHat 5.x boxes, just not on our developer's Macs.

#!/usr/bin/env python

import zookeeper
zkserver='localhost:2181'
zk = zookeeper.init(zkserver)
acl = {"perms":0x1f, "scheme":"world", "id" :"anyone"}

node = "/foo"
value = "bar"

if not zookeeper.exists(zk, node):
  zookeeper.create(zk, node, value, [acl])
  print "created: %s with value: %s" % (node, value)
else:
  zookeeper.set(zk, node, value)
  print "updated: %s with value: %s" % (node, value)
, Also, I think I may have just figured it out.  I changed from using a name (zookeeper.local.twitter.com) to 127.0.0.1 and cannot reproduce the errors.  Possibly this is some weird resolver problem using localhost, maybe compounded with some ipv6 weirdness.  Here's my /etc/hosts:

Joshs-MacBook-Air:zktools josh$ cat /etc/hosts
##
# Host Database
#
# localhost is used to configure the loopback interface
# when the system is booting.  Do not change this entry.
##
127.0.0.1	localhost zookeeper.local.twitter.com
255.255.255.255	broadcasthost
::1             localhost 
fe80::1%lo0	localhost

Additionally, changing the first two lines to:

127.0.0.1 localhost
127.0.0.1 zookeeper.local.twitter.com

fixes it when I use zookeeper.local.twitter.com, but I still have the errors when I use localhost as the hostname

Not sure if my update makes any sense; feel free to ask for clarification and I'll be able to provide it in the morning :)
, OK -- more info, and this makes me think this is due to the zookeeper binding not specifically allowing for the ipv6 address family.  I commented out both of these lines out of /etc/hosts:

::1 localhost 
fe80::1%lo0	localhost

and after doing so, can run the connection_test.py script thousands of time without a single error, using localhost as the hostname.  I verified that python itself can bind to the ::1 address:

Joshs-MacBook-Air:zktools josh$ python
Python 2.5.1 (r251:54863, Feb  6 2009, 19:02:12) 
[GCC 4.0.1 (Apple Inc. build 5465)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> import socket
>>> sock = socket.socket(socket.AF_INET6)
>>> sock.bind(("::1", 21432))
>>> sock.close()
>>> 
, I have a feeling it's related to 
src/c/zookeeper.c 

zhandle_t *zookeeper_init(const char *host, watcher_fn watcher,
  int recv_timeout, const clientid_t *clientid, void *context, int flags)

*host shouldn't be hostname:port and then split on : because an ipv6 address might be passed to it, and that seems to the problem.  I'd offer a patch, but my C knowledge is limited to reading and comprehension :) 


, re use of ipv6 numeric address - I fixed a similar issue with java on this recently ZOOKEEPER-667, looking at the c code now it seems that we are looking for the first occurrence of ':' rather than the last. I've opened an issue ZOOKEEPER-677 to track this.

One issue we've had with this is very little access to ipv6 machines on which to do dev/testing. Also few ipv6 users. Thanks for the report!, Awesome!  Thanks for the attention to the issue, and thanks Patrick for your talk at our offices last week.]