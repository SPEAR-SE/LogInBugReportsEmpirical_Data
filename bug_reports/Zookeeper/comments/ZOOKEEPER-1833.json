[I tried to assign this to [~something], but it didn't let me., Thanks for starting this. I think that some of these failures will go away with ZOOKEEPER-1459. I'll commit it shortly., Most of the tests pass on my machine (Windows 8.1, jdk 1.7.0_21), and only BufferSizeTest fails consistently. The failure is still due to the temporary directory not being deleted, which has been resolved with ZOOKEEPER-1459 for a number of tests, but apparently not this one., There are less number of failures now:

{noformat}
[myid:] - INFO  [main:ZKTestCase$1@65] - FAILED testBehindLeader
[myid:] - INFO  [main:ZKTestCase$1@65] - FAILED testBindByAddress
[myid:] - INFO  [main:ZKTestCase$1@65] - FAILED testEarlyLeaderAbandonment
[myid:] - INFO  [main:ZKTestCase$1@65] - FAILED testHammer
[myid:] - INFO  [main:ZKTestCase$1@65] - FAILED testHighestZxidJoinLate
[myid:] - INFO  [main:ZKTestCase$1@65] - FAILED testLateLogs
[myid:] - INFO  [main:ZKTestCase$1@65] - FAILED testLE
[myid:] - INFO  [main:ZKTestCase$1@65] - FAILED testNoLogBeforeLeaderEstablishment
[myid:] - INFO  [main:ZKTestCase$1@65] - FAILED testSequentialNodeNames
[myid:] - INFO  [main:ZKTestCase$1@65] - FAILED testStartupFailureCreate
[myid:] - INFO  [main:ZKTestCase$1@65] - FAILED testStartupFailureSet
[myid:] - INFO  [main:ZKTestCase$1@65] - FAILED testStartupFailureSnapshot
[myid:] - INFO  [main:ZKTestCase$1@65] - FAILED testUpdatingEpoch
[myid:] - INFO  [main:ZKTestCase$1@65] - FAILED testWatcherAutoResetWithGlobal
[myid:] - INFO  [main:ZKTestCase$1@65] - FAILED testWatcherAutoResetWithLocal
[myid:] - INFO  [main:ZKTestCase$1@65] - FAILED testZeroWeightQuorum
{noformat}

https://builds.apache.org/job/ZooKeeper-3.4-WinVS2008_java/372/, To add more detail, this is the problem I'm seeing with BufferSizeTest:

{noformat}
Testcase: testCreatesReqs took 3.57 sec
Testcase: testStartupFailureSet took 1.773 sec
	FAILED
delete .\build\test\data\buffersize\set\version-2\log.1
junit.framework.AssertionFailedError: delete .\build\test\data\buffersize\set\version-2\log.1
	at org.apache.zookeeper.test.ClientBase.recursiveDelete(ClientBase.java:501)
	at org.apache.zookeeper.test.ClientBase.recursiveDelete(ClientBase.java:501)
	at org.apache.zookeeper.test.ClientBase.tearDown(ClientBase.java:489)

Testcase: testStartupFailureCreate took 1.762 sec
	FAILED
delete .\build\test\data\buffersize\create\version-2\log.1
junit.framework.AssertionFailedError: delete .\build\test\data\buffersize\create\version-2\log.1
	at org.apache.zookeeper.test.ClientBase.recursiveDelete(ClientBase.java:501)
	at org.apache.zookeeper.test.ClientBase.recursiveDelete(ClientBase.java:501)
	at org.apache.zookeeper.test.ClientBase.tearDown(ClientBase.java:489)

Testcase: testStartupFailureSnapshot took 1.914 sec
	FAILED
delete .\build\test\data\buffersize\snapshot\version-2\log.1
junit.framework.AssertionFailedError: delete .\build\test\data\buffersize\snapshot\version-2\log.1
	at org.apache.zookeeper.test.ClientBase.recursiveDelete(ClientBase.java:501)
	at org.apache.zookeeper.test.ClientBase.recursiveDelete(ClientBase.java:501)
	at org.apache.zookeeper.test.ClientBase.tearDown(ClientBase.java:489)

Testcase: testStartup took 3.182 sec
Testcase: testSetReqs took 3.956 sec
{noformat}, With ZOOKEEPER-1834 in, tests pass fine on Windows for me. Are you guys able to run fine as well? It would be also nice to know why the windows build is failing on jenkins. , I haven't looked into this. [~something]?, The following tests failed on my local windows box:

- org.apache.zookeeper.test.FLETest
Testcase: testLE took 7.8 sec
        FAILED
Leader hasn't joined: 5
junit.framework.AssertionFailedError: Leader hasn't joined: 5
        at org.apache.zookeeper.test.FLETest.testLE(FLETest.java:313)
        at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:52)

- org.apache.zookeeper.test.ClientPortBindTest
java.net.SocketException: Address family not supported by protocol family: bind
        at sun.nio.ch.Net.bind(Native Method)
        at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:126)
        at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:59)
        at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:52)
        at org.apache.zookeeper.server.NIOServerCnxnFactory.configure(NIOServerCnxnFactory.java:95)
        at org.apache.zookeeper.server.ServerCnxnFactory.createFactory(ServerCnxnFactory.java:126)
        at org.apache.zookeeper.test.ClientPortBindTest.testBindByAddress(ClientPortBindTest.java:84)
        at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:52)

- org.apache.zookeeper.test.NioNettySuiteHammerTest
- org.apache.zookeeper.test.NioNettySuiteTest
- org.apache.zookeeper.test.SaslAuthFailNotifyTest
Timeout., ClientPortBindTest error seems to be a known issue. NIO in java6 doesn't work with IPv6 on windows., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12618502/ZOOKEEPER-1833.patch
  against trunk revision 1550213.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1831//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1831//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1831//console

This message is automatically generated., {quote}
-1 tests included. The patch doesn't appear to include any new or modified tests.
Please justify why no new tests are needed for this patch.
Also please list what manual steps were performed to verify this patch.
{quote}

This patch only modifies build.xml. I manually ran ClientPortBindTest on a windows box and verified that this patch fixes the test., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12618502/ZOOKEEPER-1833.patch
  against trunk revision 1550213.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1832//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1832//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1832//console

This message is automatically generated., It works for me, but I wonder if this change is problematic to anyone:

{noformat}
<sysproperty key="java.net.preferIPv4Stack" value="true" />
{noformat}, Here are the tests currently failing for me (NioNettySuiteTest):

{noformat}
2013-12-14 10:51:50,680 [myid:] - INFO  [main:JUnit4ZKTestRunner$LoggedInvokeMethod@54] - TEST METHOD FAILED testObserversHammer
java.lang.AssertionError: waiting for server up
	at org.junit.Assert.fail(Assert.java:91)
	at org.junit.Assert.assertTrue(Assert.java:43)
	at org.apache.zookeeper.test.QuorumBase.startServers(QuorumBase.java:188)
	at org.apache.zookeeper.test.QuorumBase.setUp(QuorumBase.java:101)
	at org.apache.zookeeper.test.AsyncHammerTest.setUp(AsyncHammerTest.java:52)
	at org.apache.zookeeper.test.AsyncHammerTest.testObserversHammer(AsyncHammerTest.java:203)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:52)
	at org.junit.rules.TestWatchman$1.evaluate(TestWatchman.java:48)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:1060)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:911)
2013-12-14 10:51:50,680 [myid:] - INFO  [main:ZKTestCase$1@65] - FAILED testObserversHammer
java.lang.AssertionError: waiting for server up
	at org.junit.Assert.fail(Assert.java:91)
	at org.junit.Assert.assertTrue(Assert.java:43)
	at org.apache.zookeeper.test.QuorumBase.startServers(QuorumBase.java:188)
	at org.apache.zookeeper.test.QuorumBase.setUp(QuorumBase.java:101)
	at org.apache.zookeeper.test.AsyncHammerTest.setUp(AsyncHammerTest.java:52)
	at org.apache.zookeeper.test.AsyncHammerTest.testObserversHammer(AsyncHammerTest.java:203)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:52)
	at org.junit.rules.TestWatchman$1.evaluate(TestWatchman.java:48)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:1060)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:911)
2013-12-14 10:51:50,680 [myid:] - INFO  [main:ZKTestCase$1@55] - FINISHED testObserversHammer
------------- ---------------- ---------------
------------- Standard Error -----------------
Dec 14, 2013 10:49:50 AM org.jboss.netty.channel.socket.nio.AbstractNioSelector
WARNING: Unexpected exception in the selector loop.
java.io.IOException: A non-blocking socket operation could not be completed immediately
	at sun.nio.ch.SocketDispatcher.close0(Native Method)
	at sun.nio.ch.SocketDispatcher.close(SocketDispatcher.java:63)
	at sun.nio.ch.SocketChannelImpl.kill(SocketChannelImpl.java:854)
	at sun.nio.ch.WindowsSelectorImpl.implDereg(WindowsSelectorImpl.java:585)
	at sun.nio.ch.SelectorImpl.processDeregisterQueue(SelectorImpl.java:150)
	at sun.nio.ch.WindowsSelectorImpl.doSelect(WindowsSelectorImpl.java:141)
	at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:87)
	at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:98)
	at org.jboss.netty.channel.socket.nio.SelectorUtil.select(SelectorUtil.java:68)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.select(AbstractNioSelector.java:409)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:206)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:90)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)

------------- ---------------- ---------------

Testcase: testHammer took 49.529 sec
Testcase: testObserversHammer took 120.195 sec
	FAILED
waiting for server up
junit.framework.AssertionFailedError: waiting for server up
	at org.apache.zookeeper.test.QuorumBase.startServers(QuorumBase.java:188)
	at org.apache.zookeeper.test.QuorumBase.setUp(QuorumBase.java:101)
	at org.apache.zookeeper.test.AsyncHammerTest.setUp(AsyncHammerTest.java:52)
	at org.apache.zookeeper.test.AsyncHammerTest.testObserversHammer(AsyncHammerTest.java:203)
	at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:52)
{noformat}

The IOException is a bit odd, no? 

And QuorumTest:

{noformat}
Testcase: testNoLogBeforeLeaderEstablishment took 45.16 sec
	FAILED
Not following
junit.framework.AssertionFailedError: Not following
	at org.apache.zookeeper.test.QuorumTest.testNoLogBeforeLeaderEstablishment(QuorumTest.java:413)
	at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:52)
{noformat}
, Could this [http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6179351] be the issue for the first one?

For the second, I think the full log will be required in order to see something else., Sound like a good guess for the IOException. I haven't checked if the exception is actually what is causing the test failure, but it could be.

I'll upload a log file for the second one., Setting java.net.preferIPv4Stack to true shouldn't cause any problem since we already have some tests that use ipv4 explicitly (e.g. src/java/test/org/apache/zookeeper/test/QuorumBase.java). We can file a separate jira to infra to upgrade java version., ... or how about we move to 1.7?, I ran the build with 1.7 just to see. There are much less number of failures:

https://builds.apache.org/job/ZooKeeper-trunk-WinVS2008_java/624/#showFailuresLink, I don't see a problem with using 1.7, +1. It would be nice to try the b3.4 queue as well., QuorumTest failure, fails consistently for me., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12618815/TEST-org.apache.zookeeper.test.QuorumTest.zip
  against trunk revision 1550213.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1839//console

This message is automatically generated., I updated ZooKeeper-3.4-WinVS2008_java to use jdk 1.7. Now there are 2 failures:

{noformat}
    [junit] 2013-12-15 19:22:14,475 [myid:] - INFO  [main:JUnit4ZKTestRunner$LoggedInvokeMethod@54] - TEST METHOD FAILED testFourLetterWords
    [junit] 2013-12-15 19:22:15,595 [myid:] - INFO  [main:ZKTestCase$1@65] - FAILED testFourLetterWords
    [junit] Test org.apache.zookeeper.test.NioNettySuiteTest FAILED
    [junit] 2013-12-15 19:31:10,554 [myid:] - INFO  [main:JUnit4ZKTestRunner$LoggedInvokeMethod@54] - TEST METHOD FAILED testNoLogBeforeLeaderEstablishment
    [junit] 2013-12-15 19:31:19,521 [myid:] - INFO  [main:ZKTestCase$1@65] - FAILED testNoLogBeforeLeaderEstablishment
    [junit] Test org.apache.zookeeper.test.QuorumTest FAILED
{noformat}
, I am looking at the one in testNoLogBeforeLeaderEstablishment.
Should we open two sub-tasks for each of these?
, This is the last blocker for 3.4.6. It would be great if the tests passed on the windows 3.4 jenkins queue before we close this issue. I can't access the builds.a.o site, though, it sounds like it has been down for the past day or so., I checked the latest run of b3.4 (https://builds.apache.org/job/ZooKeeper-3.4-WinVS2008_java/387/) and there are three tests that failed:

{noformat}
[junit] 2013-12-22 09:09:14,937 [myid:] - INFO  [main:ZKTestCase$1@55] - FINISHED testWatcherCount
[junit] Tests run: 68, Failures: 40, Errors: 1, Time elapsed: 852.937 sec
[junit] Test org.apache.zookeeper.test.NioNettySuiteTest FAILED
{noformat}

and 

{noformat}
[junit] Tests run: 2, Failures: 1, Errors: 0, Time elapsed: 185.755 sec
[junit] Test org.apache.zookeeper.test.NioNettySuiteHammerTest FAILED
[junit] Running org.apache.zookeeper.test.NioNettySuiteTest
{noformat}

and

{noformat}
[junit] Tests run: 1, Failures: 1, Errors: 0, Time elapsed: 23.697 sec
[junit] Test org.apache.zookeeper.test.LETest FAILED
{noformat}, It seems they are more or less at the same point of the tests, which means there could still be some clean up to do in one of the tests that affects the three or four after that. I will take a look., Yeah German, I'm also thinking in the same line. I ran these test cases several times independently and is passing for me. There could be a chance of cleanups and causing these test failures., A couple of shutdowns more included. I don't know if it will be enough, but they won't hurt anyway.
SessionTrackerTest seems to need a shutdown in the end of the two tests, but if included it fails with a null pointer exception, any idea of how to solve that?, Agreed, it sounds like a good idea to include the shutdown calls, but it doesn't look like they will affect the tests that failed in any way, right? Interestingly, two of the tests that failed are netty-related, I wonder if it has anything to do with any of the netty issues we have been discussing recently., Shutdowns may affect the tests running after the one that doesn't do the shutdown, since there will be a running ZooKeeper server using resources when the other tests run. Would it be possible to launch a Jenkins task with these three tests? if they fail separately from other tests, then we know there is an issue with Netty, or anything else strictly in those tests. If they don't fail, then we know the problem is somewhere else.
One other thing we could try is relaxing the timeouts for e.g. server startup. I have seen at least a failure in the logs of "Waiting for server up". That is actually not related with the functionality of the test, it is not being able to complete the preparation for the test., Hi Flavio/German,  

I closely looked at the NioNettySuiteHammerTest failure logs and took sometime to realize the cause. Could you please go through the below analysis/observation. 

Following is small part of the log messages which has been taken from https://builds.apache.org/job/ZooKeeper-3.4-WinVS2008_java/387/ build and I  think this will help us to understand more.

From the log I could see - after the server restarts, four letter stat command has been submitted to know the server status. After issuing the command, the call is not coming out (please see timestamp between 08:53:32,004 and 08:55:00) and then it is failing. When I searched the netty bug list, there is an open issue which is talking about hanging case, please see NETTY-412. Also, we have an open jira ZOOKEEPER-1179, here the description says similar issue. IMHO, it would be good to skip the duplicate closure in NettyServerCnxn#exceptioncaught and I had updated a patch in that jira. Please review ZOOKEEPER-1179 patch.

{code}
    [junit] 2013-12-22 08:53:00,613 [myid:] - INFO  [New I/O worker #51:NettyServerCnxn$StatCommand@469] - Stat command output
    [junit] 2013-12-22 08:53:00,613 [myid:] - INFO  [main:QuorumBase@191] - 127.0.0.1:11233 is accepting client connections
    [junit] 2013-12-22 08:53:00,614 [myid:] - INFO  [main:FourLetterWordMain@43] - connecting to 127.0.0.1 11234
    [junit] 2013-12-22 08:53:00,614 [myid:] - INFO  [New I/O worker #56:NettyServerCnxn@632] - Processing stat command from /127.0.0.1:49539
    [junit] 2013-12-22 08:53:00,615 [myid:] - INFO  [New I/O worker #56:NettyServerCnxn$StatCommand@469] - Stat command output
    [junit] 2013-12-22 08:53:00,615 [myid:] - WARN  [New I/O worker #56:NettyServerCnxnFactory$CnxnChannelHandler@111] - Exception caught [id: 0x59e87fb5, /127.0.0.1:49539 => /127.0.0.1:11234] EXCEPTION: java.io.IOException: A non-blocking socket operation could not be completed immediately
    [junit] java.io.IOException: A non-blocking socket operation could not be completed immediately
    [junit] 	at sun.nio.ch.SocketDispatcher.close0(Native Method)
    [junit] 	at sun.nio.ch.SocketDispatcher.preClose(SocketDispatcher.java:62)
    [junit] 	at sun.nio.ch.SocketChannelImpl.implCloseSelectableChannel(SocketChannelImpl.java:819)
    [junit] 	at java.nio.channels.spi.AbstractSelectableChannel.implCloseChannel(AbstractSelectableChannel.java:228)
    [junit] 	at java.nio.channels.spi.AbstractInterruptibleChannel.close(AbstractInterruptibleChannel.java:115)
    [junit] 	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.close(AbstractNioWorker.java:354)
    [junit] 	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.handleAcceptedSocket(NioServerSocketPipelineSink.java:81)
    [junit] 	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.eventSunk(NioServerSocketPipelineSink.java:36)
    [junit] 	at org.jboss.netty.channel.Channels.close(Channels.java:812)
    [junit] 	at org.jboss.netty.channel.AbstractChannel.close(AbstractChannel.java:197)
    [junit] 	at org.apache.zookeeper.server.NettyServerCnxn.close(NettyServerCnxn.java:114)
    [junit] 	at org.apache.zookeeper.server.NettyServerCnxn.cleanupWriterSocket(NettyServerCnxn.java:242)
    [junit] 	at org.apache.zookeeper.server.NettyServerCnxn.access$000(NettyServerCnxn.java:57)
    [junit] 	at org.apache.zookeeper.server.NettyServerCnxn$CommandThread.run(NettyServerCnxn.java:315)
    [junit] 	at org.apache.zookeeper.server.NettyServerCnxn$CommandThread.start(NettyServerCnxn.java:306)
    [junit] 	at org.apache.zookeeper.server.NettyServerCnxn.checkFourLetterWord(NettyServerCnxn.java:678)
    [junit] 	at org.apache.zookeeper.server.NettyServerCnxn.receiveMessage(NettyServerCnxn.java:791)
    [junit] 	at org.apache.zookeeper.server.NettyServerCnxnFactory$CnxnChannelHandler.processMessage(NettyServerCnxnFactory.java:211)
    [junit] 	at org.apache.zookeeper.server.NettyServerCnxnFactory$CnxnChannelHandler.messageReceived(NettyServerCnxnFactory.java:135)
    [junit] 	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
    [junit] 	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
    [junit] 	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
    [junit] 	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:109)
    [junit] 	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:312)
    [junit] 	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:90)
    [junit] 	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
    [junit] 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
    [junit] 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
    [junit] 	at java.lang.Thread.run(Thread.java:722)
    [junit] 2013-12-22 08:53:32,001 [myid:] - INFO  [SessionTracker:ZooKeeperServer@347] - Expiring session 0x343198163eb0000, timeout of 30000ms exceeded
    [junit] 2013-12-22 08:53:32,001 [myid:] - INFO  [ProcessThread(sid:5 cport:-1)::PrepRequestProcessor@494] - Processed session termination for sessionid: 0x343198163eb0000
    [junit] 2013-12-22 08:53:32,002 [myid:] - INFO  [SyncThread:5:FileTxnLog@199] - Creating new log file: log.200000001
    [junit] 2013-12-22 08:53:32,002 [myid:] - WARN  [QuorumPeer[myid=1]0.0.0.0/0.0.0.0:11233:Follower@118] - Got zxid 0x200000001 expected 0x1
    [junit] 2013-12-22 08:53:32,002 [myid:] - INFO  [SyncThread:1:FileTxnLog@199] - Creating new log file: log.200000001
    [junit] 2013-12-22 08:53:32,003 [myid:] - WARN  [QuorumPeer[myid=3]0.0.0.0/0.0.0.0:11235:Follower@118] - Got zxid 0x200000001 expected 0x1
    [junit] 2013-12-22 08:53:32,003 [myid:] - WARN  [QuorumPeer[myid=4]0.0.0.0/0.0.0.0:11236:Follower@118] - Got zxid 0x200000001 expected 0x1
    [junit] 2013-12-22 08:53:32,003 [myid:] - INFO  [SyncThread:4:FileTxnLog@199] - Creating new log file: log.200000001
    [junit] 2013-12-22 08:53:32,003 [myid:] - INFO  [SyncThread:3:FileTxnLog@199] - Creating new log file: log.200000001
    [junit] 2013-12-22 08:53:32,003 [myid:] - WARN  [QuorumPeer[myid=2]0.0.0.0/0.0.0.0:11234:Follower@118] - Got zxid 0x200000001 expected 0x1
    [junit] 2013-12-22 08:53:32,004 [myid:] - INFO  [SyncThread:2:FileTxnLog@199] - Creating new log file: log.200000001
    [junit] 2013-12-22 08:55:00,605 [myid:] - INFO  [main:ClientBase@238] - server 127.0.0.1:11234 not up java.net.SocketTimeoutException: Read timed out
    [junit] 2013-12-22 08:55:00,605 [myid:] - INFO  [main:JUnit4ZKTestRunner$LoggedInvokeMethod@62] - TEST METHOD FAILED testHammer
    [junit] java.lang.AssertionError: waiting for server up
    [junit] 	at org.junit.Assert.fail(Assert.java:91)
    [junit] 	at org.junit.Assert.assertTrue(Assert.java:43)
    [junit] 	at org.apache.zookeeper.test.QuorumBase.startServers(QuorumBase.java:188)
    [junit] 	at org.apache.zookeeper.test.QuorumBase.startServers(QuorumBase.java:113)
    [junit] 	at org.apache.zookeeper.test.AsyncHammerTest.restart(AsyncHammerTest.java:61)
    [junit] 	at org.apache.zookeeper.test.AsyncHammerTest.testHammer(AsyncHammerTest.java:193)
    .....
    .....
    [junit] 2013-12-22 08:55:00,606 [myid:] - INFO  [main:ZKTestCase$1@65] - FAILED testHammer
    .....
    .....
    [junit] 2013-12-22 08:55:00,696 [myid:] - INFO  [main:ZKTestCase$1@55] - FINISHED testHammer
    [junit] Tests run: 2, Failures: 1, Errors: 0, Time elapsed: 185.755 sec
    [junit] Test org.apache.zookeeper.test.NioNettySuiteHammerTest FAILED
    [junit] Running org.apache.zookeeper.test.NioNettySuiteTest
{code}, Right now regression on Windows on branch 3.4 fails for me (QuorumPeerMainTest fails) without this patch, and it works with it. The patch corrects the cleanup in PrepRequestProcessorTest which runs before QuorumPeerMainTest., For some reason, I missed that there is a patch available under the umbrella jira. I'll review this one shortly, but please create sub tasks for new patches.

While looking into the #392 build, I noticed something strange. It seems that the test cases in WatcherTest are running twice and I don't know if I'm overlooking something, but I don't think they are supposed to. Here is an example:

{noformat}
[junit] 2013-12-29 20:26:57,573 [myid:] - INFO  [main:ZKTestCase$1@50] - STARTING testWatcherAutoResetWithGlobal
    [junit] 2013-12-29 20:26:57,598 [myid:] - INFO  [main:JUnit4ZKTestRunner$LoggedInvokeMethod@50] - RUNNING TEST METHOD testWatcherAutoResetWithGlobal
    [junit] 2013-12-29 20:27:03,681 [myid:] - INFO  [main:JUnit4ZKTestRunner$LoggedInvokeMethod@62] - TEST METHOD FAILED testWatcherAutoResetWithGlobal
    [junit] 	at org.apache.zookeeper.test.WatcherTest.testWatcherAutoResetWithGlobal(WatcherTest.java:233)
    [junit] 2013-12-29 20:27:10,631 [myid:] - INFO  [main:ZKTestCase$1@65] - FAILED testWatcherAutoResetWithGlobal
    [junit] 2013-12-29 20:27:10,632 [myid:] - INFO  [main:ZKTestCase$1@55] - FINISHED testWatcherAutoResetWithGlobal
    [junit] 	at org.apache.zookeeper.test.WatcherTest.testWatcherAutoResetWithGlobal(WatcherTest.java:233)
    [junit] 2013-12-29 20:43:00,716 [myid:] - INFO  [main:ZKTestCase$1@50] - STARTING testWatcherAutoResetWithGlobal
    [junit] 2013-12-29 20:43:00,731 [myid:] - INFO  [main:JUnit4ZKTestRunner$LoggedInvokeMethod@50] - RUNNING TEST METHOD testWatcherAutoResetWithGlobal
    [junit] 2013-12-29 20:43:06,798 [myid:] - INFO  [main:JUnit4ZKTestRunner$LoggedInvokeMethod@65] - FINISHED TEST METHOD testWatcherAutoResetWithGlobal
    [junit] 2013-12-29 20:43:07,802 [myid:] - INFO  [main:ZKTestCase$1@60] - SUCCEEDED testWatcherAutoResetWithGlobal
    [junit] 2013-12-29 20:43:07,803 [myid:] - INFO  [main:ZKTestCase$1@55] - FINISHED testWatcherAutoResetWithGlobal
{noformat}, Hi Flavio, I've seen WatcherTest is executing twice,
- one with NioNettySuiteTest which will take NettyServerCnxnFactory. 
- another one is executing directly which will take NIOServerCnxnFactory., Makes sense, thanks for pointing it out! The tests that failed in build #393 are these, in the case anyone is interested in having a look and helping out:

{noformat}
TEST METHOD FAILED testHighestZxidJoinLate
TEST METHOD FAILED testUpdatingEpoch
TEST METHOD FAILED testAcls
TEST METHOD FAILED testHammerBasic
TEST METHOD FAILED testFourLetterWords
TEST METHOD FAILED testQuotaWithQuorum
{noformat}, [~abranzyck], let's create a subtask for the PrepRequestProcessotTest issue., After looking at the logs in [https://builds.apache.org/job/ZooKeeper-3.4-WinVS2008_java/396/console], at least in the testLE case, there seem to be a lot of timeouts receiving leader election messages. Would it be possible to review the TCP parameters in the server when these tests are running?
I would first look at the current statistics and see if there is a big number of e.g. dropped packets, and then increase the buffers and see if that improves the dropped packets and the tests results.
I can't be sure, but the fact that the regression seems to run ok for many people and it fails in Jenkins seems to point to some system issue., yeah, I tried to access the latest build, but it seems that jenkins is down. we have made a lot of progress here, which is excellent. I certainly don't discard the possibility that some tests are failing because jenkins is a bit flaky, and if this is the case, then we should just move on and cut a release., it seems that in the last run [https://builds.apache.org/job/ZooKeeper-3.4-WinVS2008_java/399/] there is only one failure, or?
This failure might be related with the Netty socket block on close issue. The "RESTARTING" phase of testHammer fails after many of those exceptions when closing the sockets in the previous phase., Yes German, I'm also thinking in the same line. Also, we could push the open subtasks(ZOOKEEPER-1857, ZOOKEEPER-1414, ZOOKEEPER-1858) to avoid intermittent failures in future., I just checked build 405 and if I'm reading it right, there is one failure and one error:

{noformat}
    [junit] Tests run: 2, Failures: 1, Errors: 0, Time elapsed: 185.349 sec
    [junit] Test org.apache.zookeeper.test.NioNettySuiteHammerTest FAILED
{noformat}

{noformat}
    [junit] Tests run: 1, Failures: 0, Errors: 1, Time elapsed: 0 sec
    [junit] Test org.apache.zookeeper.test.NioNettySuiteTest FAILED (timeout)
{noformat}

Both are in netty tests... odd., Hi Flavio, I had few doubts with netty channel options and compared both Netty implementations in trunk and 3.4. I could see ZOOKEEPER-1238 is not merged to 3.4 branch, is there any particular reason for not doing. Otw I think its good to merge it to branch 3.4. What is your opinion ?, Do you think that the linger option is the one causing problems? I don't see any particular reason for not checking in ZOOKEEPER-1238 to b3.4., bq.Do you think that the linger option is the one causing problems?
I'm not very much sure and still am investigating about this. But one thing I observed in trunk build is, there is no ' A non-blocking socket operation could not be completed immediately' exceptions.
bq.I don't see any particular reason for not checking in ZOOKEEPER-1238 to b3.4.
In that case, could you please merge this issue and then will observe the build result again., I agree ZOOKEEPER-1238 could be at least part of the problem.
Those exceptions (... "non-blocking socket operation could not be completed" ...) happen in the first test suite that failed in run 405 and only in that one. , It sounds like we got a lot more failures in the 407 build., In 407 build, around 10 test cases are failing with the following pattern. I have observed the same pattern in previous build also, I was thinking about the same for few days, but couldn't find the reason.
{code}
    [junit] junit.framework.AssertionFailedError: expected [0x1438aca88410001] expected:<1> but was:<0>
    [junit] 	at junit.framework.Assert.fail(Assert.java:47)
    [junit] 	at junit.framework.Assert.failNotEquals(Assert.java:283)
    [junit] 	at junit.framework.Assert.assertEquals(Assert.java:64)
    [junit] 	at junit.framework.Assert.assertEquals(Assert.java:195)
    [junit] 	at org.apache.zookeeper.test.JMXEnv.ensureAll(JMXEnv.java:115)
    [junit] 	at org.apache.zookeeper.test.ClientBase.createClient(ClientBase.java:191)
{code}

I think, 'A non-blocking socket operation could not be completed immediately' exceptions has gone after ZK-1238 in. But will wait and observe some more builds to confirm this., I believe this could be solved if we allow some time for JMX environment to be updated in ensureAll and ensureNone as it was done for ensureOnly in ZOOKEEPER-1837.
Should I open a new sub-task for that? Or would it be better to re-open ZOOKEEPER-1837?, Well spotted, [~abranzyck], [~rakeshr]. I think it is ok to reopen ZOOKEEPER-1837., I can see fewer failures now in build 417 after ZOOKEEPER-1858 got in. Are the remaining ones due to ZOOKEEPER-1866? , To answer my own question, I think it isn't due to ZOOKEEPER-1866 alone:

{noformat}
[junit] 2014-01-25 09:33:33,565 [myid:] - INFO  [main:ZKTestCase$1@65] - FAILED testCorruption
    [junit] java.lang.AssertionError: waiting for server up
    [junit] 	at org.junit.Assert.fail(Assert.java:91)
    [junit] 	at org.junit.Assert.assertTrue(Assert.java:43)
    [junit] 	at org.apache.zookeeper.test.ZkDatabaseCorruptionTest.testCorruption(ZkDatabaseCorruptionTest.java:126)
{noformat}, One strange thing I noticed while analyzing the logs of build 417 is that the format seems to be wrong:

{noformat}
 [WorkerReceiver[myid=3]:FastLeaderElection@597] - Notification: 73657276 (message format version),...
{noformat}

I haven't observed this while running on unix and from the code it doesn't seem possible, unless some messages are being sent partially., Here is one. It gets stuck when connecting., 
Normally after the quorumpeer shutdown, test is expecting to get the connection exception when trying to connect to this server:
{code}
'java.net.ConnectException: Connection refused: connect' when executing Socket sock = new Socket(host, port); 
{code}
and after that move on to the next. But as mentioned its stuck over there, it would be helpful if we have the thread dump to analyse more.

Also, this 'qu.startAll() or qu.startQuorum()' flow is common to many test cases like WatchEventWhenAutoReset, ReconfigTest et. I'm just thinking in your env whether all these tests are getting stuck at this point., I'm sorry for posting the log here. For some reason, jira comes back to this issue when I log in. I'll post it in the right place., ZOOKEEPER-1872 had a pretty good effect, there much fewer failures and errors on build 433. Good job, [~rakeshr]!, Is story summary/title still correct? It seems to me that some of the test issues/fixes were not Windows platform specific., Sure, they might not be windows specific, but they are manifesting on windows. Tests seem to pass on linux fine, otherwise., I'm closing this umbrella jira as all the identified sub-tasks has been completed. Please re-open if anyone has a different opinion.

Thanks everyone for the good support!]