[I've got approximately the same case under the JBoss AS 7.1.1.Final., I got the same issue for a long time, anyone konws how to solve it?, We use the patch is described here (http://comments.gmane.org/gmane.comp.java.zookeeper.user/2897, https://gist.github.com/barkbay/4153107), it works in Weblogic, Since there is no reliable way to determine if SASL setting is set, the patch catches RuntimeException to see if SASL setting is configured. Please let me know if there is any better way., I've submitted a patch which worked in tests for the issue. Let me know if you have better idea. Thanks., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12597225/zookeeper-1696.patch
  against trunk revision 1522079.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1583//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1583//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1583//console

This message is automatically generated., Running the zk unit tests again. [~fpj] do you see any issues this going into 3.4.6 release? Thsi is a good change to have and is causing ZK embedding to cause issues in web logic., The same patch applies to 3.4 and trunk. , +1 for the patch. Given it ran through jenkins we can commit this to 3.4 and trunk., I don't see a problem with this one getting in, but I was wondering about ZOOKEEPER-1554, if it needs to get in as well, and if this one impacts ZOOKEEPER-1657 at all., [~fpj] It seems the patch for this JIRA also addresses the ZOOKEEPER-1554. Once it detects that SASL isn't configured, we have the following code in function to prevent the issue of ZOOKEEPER-1554 from happening. Thanks.     

{code}
public boolean clientTunneledAuthenticationInProgress() {
+    	if (!isSASLConfigured) {
+    	    return false;
+        }
{code}, I haven't thought too deeply about this issue, so if you guys could help me out here, I would appreciate it. First, what's the precise reason for not being able to reliably determine if SASL is set? Second, in the case we need to catch a runtime exception, can we catch illegal argument exception instead of runtime?, {quote}
First, what's the precise reason for not being able to reliably determine if SASL is set
{quote}
Seems to me there is no other exposed API to check if SASL is set instead of the getAppConfigurationEntry. The IllegalArgumentException is thrown from BEA com.bea.common.security.jdkutils.JAASConfiguration.getAppConfigurationEntry code. In other words, if other third party code decides to throw different exceptions then we have to fix the same issue again., Ok, got it. My understanding is that one reason for proposing that we catch runtime exception because we also need to catch security exception. I'd rather catch both explicitly instead of catching runtime exception, to be conservative with respect to the exceptions we catch and for readability. Another reason seems to be that other applications might throw a different exception. Given that we don't know what other applications will do, I'd rather not speculate. Does it sound reasonable? , {quote}
I'd rather catch both explicitly instead of catching runtime exception, to be conservative with respect to the exceptions we catch and for readability.
{quote}
That's a good point. Let me make a updated patch. Thanks., Incorporate [~fpj]'s comments to catch security & runtime exception separately into v1 patch. Thanks.
, Thanks for uploading a new patch, Jeffrey. I just realized that my comment was a bit ambiguous. I was actually proposing to catch security exception and illegal argument exception, rather than security exception and runtime exception. Are you also ok with security and illegal argument?, [~fpj] Ok. In the v2 patch, only Security(existing) and IllegalArgumentException are handled without catching other types of runtime exception to be conservative for now. Thanks., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12604691/zookeeper-1696-v2.patch
  against trunk revision 1524398.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1597//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1597//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1597//console

This message is automatically generated., Thanks for bearing with me, [~jeffreyz]. It looks good to me now., Thanks Jeffrey. Just committed this to trunk and branch-3.4., SUCCESS: Integrated in ZooKeeper-trunk #2068 (See [https://builds.apache.org/job/ZooKeeper-trunk/2068/])
ZOOKEEPER-1696. Fail to run zookeeper client on Weblogic application server. (Jeffrey Zhong via mahade. (mahadev: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1526337)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/client/ZooKeeperSaslClient.java
, Reopening looks like I committed the wrong patch., Committed the right patch. Thanks Jeffrey!, SUCCESS: Integrated in ZooKeeper-trunk #2070 (See [https://builds.apache.org/job/ZooKeeper-trunk/2070/])
ZOOKEEPER-1696. Fail to run zookeeper client on Weblogic application server. (Jeffrey Zhong via mahade (mahadev: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1527129)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/client/ZooKeeperSaslClient.java
Reverting ZOOKEEPER-1696 patch that was committed. (mahadev: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1527122)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/client/ZooKeeperSaslClient.java
, Closing issues after releasing 3.4.6.]