[For background/reference see:

https://issues.apache.org/jira/browse/ZOOKEEPER-1666
https://issues.apache.org/jira/browse/ZOOKEEPER-1506, Thanks Raul. We should replace getHostName() with getHostString(), and also remove src/java/main/org/apache/zookeeper/common/HostNameUtils.java. I don't think the code relies on getHostName() performing a reverse dns lookup, so replacing it with getHostString() shouldn't cause any correctness issues., Good catch! Thanks [~rgs] and [~michim]. Could you please post a patch for the same. I'm happy to help you in reviews., I see a bunch of references throughout the project beyond QCM. Is it just QCM that needs updating?, Yeah, so git grep says:

{noformat}
src/java/main/org/apache/zookeeper/ClientCnxn.java:                    "(" + addr.getHostName() + ":" + addr.getPort() + ")"));
src/java/main/org/apache/zookeeper/ClientCnxn.java:                                principalUserName+"/"+addr.getHostName());
src/java/main/org/apache/zookeeper/ClientCnxn.java:                sock = new Socket(addr.getHostName(), addr.getPort());
src/java/main/org/apache/zookeeper/ClientCnxn.java:                        + addr.getHostName() + ":" + addr.getPort());
src/java/main/org/apache/zookeeper/client/StaticHostProvider.java:                                             address.getHostName();
src/java/main/org/apache/zookeeper/client/StaticHostProvider.java:                            .getHostName().equals(myServer.getHostName()))) {
src/java/main/org/apache/zookeeper/client/ZooKeeperSaslClient.java:                final String serviceHostname = serviceKerberosName.getHostName();
src/java/main/org/apache/zookeeper/common/HostNameUtils.java:               socketAddress.getHostName();
src/java/main/org/apache/zookeeper/server/auth/KerberosName.java:  public String getHostName() {
src/java/main/org/apache/zookeeper/server/auth/SaslServerCallbackHandler.java:                userNameBuilder.append("/").append(kerberosName.getHostN
src/java/main/org/apache/zookeeper/server/auth/SaslServerCallbackHandler.java:        return !isSystemPropertyTrue(SYSPROP_REMOVE_HOST) && kerberosNam
src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:            String addr = self.getElectionAddress().getHostName() + ":" + self.
src/java/main/org/apache/zookeeper/server/quorum/RemotePeerBean.java:        return peer.addr.getHostName()+":"+peer.addr.getPort();
src/java/main/org/apache/zookeeper/server/util/ConfigUtils.java:             sb.append(qs.clientAddr.getHostName() + ":" + qs.clientAddr.getPort());
src/java/systest/org/apache/zookeeper/test/system/QuorumPeerInstance.java:            String report = clientAddr.getHostName() + ':' + clientAddr.getP
src/java/systest/org/apache/zookeeper/test/system/QuorumPeerInstance.java:            ',' + quorumLeaderAddr.getHostName() + ':' + quorumLeaderAddr.ge
src/java/test/org/apache/zookeeper/test/CnxManagerTest.java:        String addr = otherAddr.getHostName()+ ":" + otherAddr.getPort();
src/java/test/org/apache/zookeeper/test/ConnectStringParserTest.java:        Assert.assertEquals("10.10.10.1", parser.getServerAddresses().get(0).getH
src/java/test/org/apache/zookeeper/test/ConnectStringParserTest.java:        Assert.assertEquals("10.10.10.2", parser.getServerAddresses().get(1).getH
src/java/test/org/apache/zookeeper/test/ConnectStringParserTest.java:        Assert.assertEquals("10.10.10.1", parser.getServerAddresses().get(0).getH
src/java/test/org/apache/zookeeper/test/ConnectStringParserTest.java:        Assert.assertEquals("10.10.10.2", parser.getServerAddresses().get(1).getH
src/java/test/org/apache/zookeeper/test/ReconfigTest.java:      Assert.assertEquals(qs.clientAddr.getHostName(), "0.0.0.0");
src/java/test/org/apache/zookeeper/test/ReconfigTest.java:                        qs.addr.getHostName() + ":"
src/java/test/org/apache/zookeeper/test/StaticHostProviderTest.java:            String hostname = next.getHostName();
src/recipes/election/src/java/org/apache/zookeeper/recipes/leader/LeaderElectionSupport.java:      return leaderOffers.get(0).getHostName();
src/recipes/election/src/java/org/apache/zookeeper/recipes/leader/LeaderElectionSupport.java:  public String getHostName() {
src/recipes/election/src/java/org/apache/zookeeper/recipes/leader/LeaderOffer.java:  public String getHostName() {
{noformat}

Though I think it's only in the QCM where it's specially annoying, because a failed DNS lookup could prevent a peer from joining the cluster after a partitioning. I feel less strong about the other cases, though we could change them in the same patch too.
, Why is it that we can remove src/java/main/org/apache/zookeeper/common/HostNameUtils.java? Is Java 6 not supported anymore?, This only fixes the calls in QCM. There are many other places where this happens (as mentioned by [~fournc]), though  doing it in the QCM is specially bad because it could prevent a quorum from forming if DNS is unavailable during that time.

Also, it does not remove src/java/main/org/apache/zookeeper/common/HostNameUtils.java so that we can keep commits that break Java 6 self-contained. , -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12729021/ZOOKEEPER-2171.patch
  against trunk revision 1676359.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2656//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2656//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2656//console

This message is automatically generated., Thanks Raul for quick turnaround! We dropped support for java6 in ZOOKEEPER-1963. I prefer to use gethoststring consistently throughout the code base to avoid future confusions/issues. What do you think?, Ah - great! I'll update the patch to use getHostString everywhere and drop the utility method for java6., This replaces all getHostName calls for getHostString (which does not perform reverse lookups).

In addition to that, it removes HostNameUtils since Java 6 isn't supported anymore (ZOOKEEPER-1963).

cc: [~michim], [~rakeshr]    
, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12729272/ZOOKEEPER-2171.patch
  against trunk revision 1676359.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 11 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2658//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2658//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2658//console

This message is automatically generated., Hmm, ant test-core-java passes locally for me but we get this in CI:

{noformat}
Error Message

Address already in use

Stacktrace

java.net.BindException: Address already in use
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:344)
	at sun.nio.ch.Net.bind(Net.java:336)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:199)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:67)
	at org.apache.zookeeper.server.NIOServerCnxnFactory.configure(NIOServerCnxnFactory.java:687)
	at org.apache.zookeeper.server.ServerCnxnFactory.configure(ServerCnxnFactory.java:75)
	at org.apache.zookeeper.server.ServerCnxnFactory.createFactory(ServerCnxnFactory.java:152)
	at org.apache.zookeeper.server.ServerCnxnFactory.createFactory(ServerCnxnFactory.java:145)
	at org.apache.zookeeper.test.ACLCountTest.testAclCount(ACLCountTest.java:73)
	at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:52)
{noformat}

I'll have it run one more time. , Re-attaching the previous patch again to trigger one more build. [~rgs] could you please change the status to {{PatchAvailable}}, this button is not showing for me., done - thanks [~rakeshr]!, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12729463/ZOOKEEPER-2171.patch
  against trunk revision 1676359.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 11 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2659//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2659//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2659//console

This message is automatically generated., Hmmm, failed again, thought at a different place:

{noformat}
Error Message

waiting for server 2 being up

Stacktrace

junit.framework.AssertionFailedError: waiting for server 2 being up
	at org.apache.zookeeper.server.quorum.ReconfigRecoveryTest.testCurrentObserverIsParticipantInNewConfig(ReconfigRecoveryTest.java:529)
	at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:52)
{noformat}

Could this be a bad CI box? Any ideas? cc: [~michim], [~rakeshr], Oh well, passes for me locally (again):

{noformat}
...

BUILD SUCCESSFUL
Total time: 47 minutes 44 seconds
{noformat}

So it does sound more like flaky CI :-(, That was test-core-java, ant test (the full suite) passes too:

{noformat}
...

BUILD SUCCESSFUL
Total time: 52 minutes 9 seconds

{noformat}

I'll resubmit the patch, cancel & submit and trigger the build again. Is there an easier way to re-kick the build?, trying to restart the build , +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12729616/ZOOKEEPER-2171.patch
  against trunk revision 1676359.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 11 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2660//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2660//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2660//console

This message is automatically generated., Thanks a lot [~rgs] for taking care this. Also, its nice to see a clean build with the changes/patch:).

+1 latest patch looks pretty good to me apart from the below comments.

I could see few more occurrences of {{.getHostName}} in unit tests and leader-election recipe, IMHO its good to consider these also.
{code}
org.apache.zookeeper.test.StaticHostProviderTest.java
String hostname = next.getHostName();

org.apache.zookeeper.test.ReconfigTest.java
Assert.assertEquals("Mismatches QuorumAddress!",
                getNumericalAddrPort(qs.addr.getHostName() + ":" + qs.addr.getPort()),
                getAddrPortFromBean(beanName, "QuorumAddress") );

org.apache.zookeeper.recipes.leader.LeaderElectionSupport.java
return leaderOffers.get(0).getHostName();
{code}, Thanks for the review [~rakeshr]. Though the getHostName calls in the LeaderElection recipe are not InetSocketAddress#getHostName calls:

https://github.com/apache/zookeeper/blob/trunk/src/recipes/election/src/java/org/apache/zookeeper/recipes/leader/LeaderOffer.java#L63

Yeah, I'll cleanup the calls in those tests as well. , Replace the remaining getHostName calls in the tests.

cc: [~michim], [~rakeshr], -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12730042/ZOOKEEPER-2171.patch
  against trunk revision 1677460.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 17 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2670//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2670//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2670//console

This message is automatically generated., The failure happens in a test that's not related the updates in the latest patch (i.e.: it changed some tests, but not ReconfigRecoveryTest.testCurrentObserverIsParticipantInNewConfig which is the one that failed).

I'll re-kick the process. , uploading same patch, to trigger tests, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12730100/ZOOKEEPER-2171.patch
  against trunk revision 1677460.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 17 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2671//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2671//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2671//console

This message is automatically generated., another try given that ReconfigRecoveryTest.testCurrentObserverIsParticipantInNewConfig fails in CI, but passes locally for me. , -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12730118/ZOOKEEPER-2171.patch
  against trunk revision 1677460.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 17 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2673//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2673//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2673//console

This message is automatically generated., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12730118/ZOOKEEPER-2171.patch
  against trunk revision 1677460.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 17 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2674//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2674//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2674//console

This message is automatically generated., +1 Thanks Raul!, trunk: http://svn.apache.org/viewvc?view=revision&revision=1678529
branch-3.5: http://svn.apache.org/viewvc?view=revision&revision=1678530, SUCCESS: Integrated in ZooKeeper-trunk #2687 (See [https://builds.apache.org/job/ZooKeeper-trunk/2687/])
ZOOKEEPER-2171 avoid reverse lookups in QuorumCnxManager (rgs via michim) (michim: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1678529)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/ClientCnxn.java
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/client/StaticHostProvider.java
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/common/HostNameUtils.java
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/LocalPeerBean.java
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/RemotePeerBean.java
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/util/ConfigUtils.java
* /zookeeper/trunk/src/java/systest/org/apache/zookeeper/test/system/QuorumPeerInstance.java
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/common/HostNameUtilsTest.java
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/test/CnxManagerTest.java
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/test/ConnectStringParserTest.java
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/test/ReconfigTest.java
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/test/StaticHostProviderTest.java
, Great work folks!

Just mention one discrepancy I found in 'CHANGE.txt':
1. in branch-3.5, it shows in bug fixes
2. in trunk, it shows in improvement.]