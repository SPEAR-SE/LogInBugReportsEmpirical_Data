[Comments imported from the former ticket ZOOKEEPER-2189

----

[~shralex] 31/May/15 19:44 GMT
{panel}
Verifying acks as proposed in this JIRA will not solve this issue. Acks from observers are not required to elect a leader. If standaloneenabled=false server 3 can be elected without seeing any other messages.
Also, suppose you wrote the wrong ports for the other servers ?
It seems that to fix such errors one needs some kind of config registry.
{panel}

----

[~suda] 1/Jun/15 9:27 GMT
{panel}
Hi [~shralex],
Thank you for the feedback.
I understood we cannot solve the issue by verifying acks, 
but could you tell me what config registry stands for?
(something like "discovery.etcd.io" or Consul's Atlas integration?)
{panel}

----

 [~shralex] 3/Jun/15 21:45 GMT
{panel}
Hi [~suda],
On second thought, although its not going to solve the specific scenario you describe, it may still be a good idea to add some check(s). For example, if a server receives a configuration from another server (in FastLeaderElection.java) with the same configuration version, the configuration itself must be identical. The check should only be for non-initial configs (see ZOOKEEPER-1783), so probably (rqv.getVersion() > 0x100000000 and rqv.getVersion() == curQV.getVersion()). 
If you still think its a good idea, would you like to propose a patch ?
Regarding the config registry, I didn't have any specific system in mind, perhaps others can advise. [~phunt] [~rgs]
Thanks,
Alex
{panel}

----

[~phunt] 3/Jun/15 4:59 GMT
{panel}
Not sure re config registry. What would that entail? Git? :)
{panel}

----

[~hdeng] 3/Jun/15 5:05 GMT
{panel}
I think they are talking about a central registry to contain server list. Just like "discovery.etcd.io" or DMV...
However, this is like asking the root of root. ZK is the root of knowledge for most distributed systems. Are we expecting a root for ZK too?
Anyway, JIRA is moved to ZOOKEEPER-2203. Let's move discussion there. Do me a favor and let me clean up the mess caused by my mistake...
{panel}, I propose to close this jira. The described issue is an expected behaviour -- server 3 is the only participant as far as it knows so it cannot wait for any info from the others that may just as well be down. If there is any proposal for a better bootstrapping method this is probably an "improvement" and not a bug and should have an appropriate Jira. If anyone objects, feel free to reopen.]