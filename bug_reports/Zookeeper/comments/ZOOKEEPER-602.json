[i think the best strategy to address this would be to create a ZooKeeperThread that all the code must use with the following properties:

1) it has a single constructor ZooKeeperThread(String threadName, long sid, boolean isUnhandledExceptionFatal), where threadName is a descriptive string, sid is the server id or -1 if not relevant,

2) exceptions will be logged as errors unless isUnhandledExceptionFatal is true, then an unhandle exception on that thread will be logged as fatal and cause a shutdown.
, moving this issue to 3.4, not a blocker. Moving it out of 3.4 release., Attached the patch for review, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12495070/ZOOKEEPER-602.patch
  against trunk revision 1172406.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    -1 javac.  The patch appears to cause tar ant target to fail.

    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/560//testReport/
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/560//console

This message is automatically generated., Looks like a case sensitivity issue:

     [exec]     [javac] /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-Build/trunk/src/java/main/org/apache/zookeeper/server/ZookeeperThread.java:6: class ZooKeeperThread is public, should be declared in a file named ZooKeeperThread.java
, Following are the threads severity I've considered.
If a thread is a Critical thread, then any unexpected exceptions (i.e., exceptions not handled by the thread) are considered as Fatal and JVM will shutdown.

||ZooKeeper Threads||Critical Thread||
|PrepRequestProcessor|TRUE|
|SessionTrackerImpl|TRUE|
|SyncRequestProcessor |TRUE|
|CommitProcessor|TRUE|
|FollowerRequestProcessor|TRUE|
|ObserverRequestProcessor|TRUE|
|ReadOnlyRequestProcessor|TRUE|
|RecvWorker |FALSE|
|EventThread|FALSE|
|SendThread|FALSE|
|CommandThread|FALSE|
|WorkerReceiver|FALSE|
|WorkerSender|FALSE|
|LearnerCnxAcceptor|FALSE|
|Listener|FALSE|
|LearnerHandler|FALSE|
|QuorumPeer|FALSE|
|SendWorker|FALSE|
|ResponderThread|FALSE|, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12496990/ZOOKEEPER-602.patch
  against trunk revision 1177432.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/599//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/599//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/599//console

This message is automatically generated., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12496990/ZOOKEEPER-602.patch
  against trunk revision 1188033.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/642//console

This message is automatically generated., I'd like to see this go in - seems the patch needs to be updated for conflicts, also some findbugs issues., Thanks for the interest Pat.
I will refresh the patch on latest trunk.

{quote}also some findbugs issues{quote}
One System.exit is introduced which is part of the fix.

Can you please take a look at my previous comments about criticality of threads.
https://issues.apache.org/jira/browse/ZOOKEEPER-602?focusedCommentId=13117887&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13117887, Attached patch, which contains ZooKeeperThread and ZooKeeperCriticalThread to handle the uncaught exceptions. I've added fix version 3.4.6 also, because I have seen many discussions related to missing threads and this will be helpful to know about the reason of thread exit. Please feel free to change the versions if anyone has different thoughts:)

This will cause findbug warning as it has System.exit() call in ZooKeeperCriticalThread and done exclusion of this., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12615124/ZOOKEEPER-602.patch
  against trunk revision 1543281.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1795//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1795//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1795//console

This message is automatically generated., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12615139/ZOOKEEPER-602.patch
  against trunk revision 1543281.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1796//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1796//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1796//console

This message is automatically generated., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12615143/ZOOKEEPER-602.patch
  against trunk revision 1543281.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1797//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1797//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1797//console

This message is automatically generated., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12615151/ZOOKEEPER-602.patch
  against trunk revision 1543281.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1798//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1798//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1798//console

This message is automatically generated., Two nits:

{noformat}
+    class LearnerCnxAcceptor extends ZooKeeperThread{
{noformat}

space missing (ZooKeeperThread {)

Typo:
{noformat}
+            // When there is no worker thread pool, do the work directly 
+            // and waiting for its completion
{noformat}

"and wait for its completion"

, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12615275/ZOOKEEPER-602.patch
  against trunk revision 1543281.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1799//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1799//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1799//console

This message is automatically generated., Thank you [~rgs] for the review. Attached latest patch addressing the comments., Hi folks,
Could someone help me to review the patch/changes and would appreciate the efforts. Thanks in advance:), Could you put this on the review board, please?, Thank you [~fpj] for the interest. Please find the review at https://reviews.apache.org/r/16202/, I took a pass and this seems reasonable. I'm not sure I like the idea of modifying all the threads to extend our own thread type, but it gets the job done. I don't think we should commit this for 3.4, trunk would be better IMO., Thank you [~phunt] for looking at this. I agree its not a blocker for 3.4.6. 
I've added fix version 3.4.6, because I have seen many cases related to missing threads. I thought this fix doesn't affect compatibility and will be helpful to know about the reason of thread exit., No worries [~rakeshr], I could see it going into 3.4, but since it's touching so many files, and it's difficult to verify, I thought it best to target trunk instead.

Do you think the benefit outweighs the risk?, yeah..ok, I got your point. I also feel its best to target trunk:), It seems like this patch is good to go in to trunk. I'm checking this in tomorrow unless somebody complains., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12615275/ZOOKEEPER-602.patch
  against trunk revision 1577756.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1976//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1976//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1976//console

This message is automatically generated., trunk: http://svn.apache.org/viewvc?view=revision&revision=1580436

Thanks Rakesh!, SUCCESS: Integrated in ZooKeeper-trunk #2263 (See [https://builds.apache.org/job/ZooKeeper-trunk/2263/])
ZOOKEEPER-602. log all exceptions not caught by ZK threads (Rakesh R via michim) (michim: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1580436)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/ClientCnxn.java
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/NIOServerCnxnFactory.java
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/SessionTrackerImpl.java
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/SyncRequestProcessor.java
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/WorkerService.java
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/ZooKeeperCriticalThread.java
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/ZooKeeperThread.java
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/AuthFastLeaderElection.java
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/CommitProcessor.java
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/FollowerRequestProcessor.java
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/Leader.java
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/LearnerHandler.java
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/ObserverRequestProcessor.java
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/ReadOnlyRequestProcessor.java
* /zookeeper/trunk/src/java/test/config/findbugsExcludeFile.xml
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/server/ZooKeeperThreadTest.java
, Reopening based on this Pagerduty article makes a good case for backporting this jira to 3.4.x:
http://www.pagerduty.com/blog/the-discovery-of-apache-zookeepers-poison-packet/

Thoughts?, I am, initially, -1 on the backport. It's too big and it's a distraction to not keep pushing forward with making 3.5.0 stable enough. More thoughts would be nice though :-), Yes, I agree the patch is bigger one, but considering the importance of this issue I think it would be good to backport these changes to 3.4.x branch(if possible). I will take a look at 3.4.x code base and try to merge the changes in the coming week. Any comments?, Attached patch based on {{branch3.4}}. Could you please have a look at it. Thanks!, +1, thanks for backporting this [~rakeshr] (i re-read the patch, although i had reviewed it for trunk as well).

one note though (applicable to trunk as well):

in ZooKeeperThread#handleException:

{code}
    protected void handleException(String thName, Throwable e) {
        LOG.warn("Exception occured from thread {}", thName, e);
    }
{code}

i think that should be LOG.error, given it's unhandled. what do you think?

happy to merge this, unless someone else wants to have another look (cc: [~phunt], [~hdeng]).
, Thank you [~rgs] for the reviews.

bq. i think that should be LOG.error, given it's unhandled. what do you think?
Since {{ZooKeeperThread}} is not a critical thread, added the log message with {{warn}} log level. Could you please look at {{ZooKeeperCriticalThread}}, it has overridden {{#handleException}} and adding message with {{error}} log level because the service will go down if the critical thread dies. If requires we can do the changes, no issues., ah - fair enough. , [~fpj], [~hdeng]: could i get another +1 here so i can merge this? thx!, I'm not entirely sure we should be exiting in the case there is error that stops a critical thread in a request processor. Why not stopping the instance and restart election for the server rather than calling system.exit on the server?
, Thanks [~fpj] for the comments. In 3.5/trunk we had done few more improvements to handle this case using another jira ZOOKEEPER-1907, can we push this also into the 3.4 branch. Any thoughts?, Hi Rakesh, Agreed, the patch of ZOOKEEPER-1907 shuts down the server rather than exiting, right? That would do..., Thanks [~fpj] for the reply. Once this is pushed into 3.4 branch, I will try backporting ZK-1907 issue also to 3.4 branch., [~rgs], [~fpj] Any more comments on the attached 3.4 branch patch. Thanks!, Patch lgtm, +1. Thanks Rakesh!

[~fpj], [~hdeng]: any last comments before I merge?, +1
Thanks Rakesh and Raul!, Merged:

https://github.com/apache/zookeeper/commit/697d77ff65b746cc05049e73007cef5ba9fe7e5d

Thanks [~rakeshr]!, Thank you [~rgs] for the reviews and commit. Also, thank you [~fpj], [~hdeng] for the help in reviews. As per the [discussions in this jira|https://issues.apache.org/jira/browse/ZOOKEEPER-602?focusedCommentId=14547208&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14547208], I will re-open ZOOKEEPER-1907 for backporting it to {{branch-3.4}}.]