[testSeekForRwServer is failing because it waits only to be connected, not connected in RW mode. This means that if the client connects back to the RO server, The fix is to have the watcher wait for RW connected. I can submit a patch for this later., However, I see ReadOnlyModeTest.testConnectionEvents regularly failing in my env, not sure what's up with that., Camille/Vishal,
  Any of you working on a patch for this? or volunteering to? :), I have a patch for the rw failure that I can submit tonight. Don't have time right now to look at the other failure though., Actually an update that this is still failing on my home machine, so I need to dig a little deeper., I am going to help with this. Feeling the core test failure angst., A script to repeatedly run a single test: usage: 


 src/repeat.sh ZooKeeperTest
, attachment is not a fix for the issue; just for helping diagnose., Eugene/Camille/Vishal,
 Any updates on the tests?, Hi Mahadev, Camille and Vishal, 
I'm getting an eventual test failure on trunk@296d940f for CnxManagerTest:

{quote}
java.lang.AssertionError: Mon Aug 15 19:14:02 UTC 2011 Incorrect number of Worker threads for sid=0 expected 4 found 2
    [junit] 	at org.junit.Assert.fail(Assert.java:91)
    [junit] 	at org.apache.zookeeper.test.CnxManagerTest.testWorkerThreads(CnxManagerTest.java:332)
    [junit] 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    [junit] 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    [junit] 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    [junit] 	at java.lang.reflect.Method.invoke(Method.java:616)
    [junit] 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
    [junit] 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
    [junit] 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
    [junit] 	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
    [junit] 	at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:52)
    [junit] 	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
    [junit] 	at org.junit.rules.TestWatchman$1.evaluate(TestWatchman.java:48)
    [junit] 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
    [junit] 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
    [junit] 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
    [junit] 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
    [junit] 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
    [junit] 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
    [junit] 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
    [junit] 	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
    [junit] 	at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)
    [junit] 	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:420)
    [junit] 	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:911)
    [junit] 	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:768)
    [junit] 2011-08-15 19:14:02,708 [myid:] - INFO  [main:ZKTestCase$1@65] - FAILED testWorkerThreads
{quote}, 
Mahadev,
all tests passed for me for several runs.

Euguene, looks like you are having some timing issues in the test. Can you attach test logs? Are you running this on EC2?, Hi Vishal,
Yes, I am running on on an EC2 m2.xlarge. I'm still seeing the eventual failure on CnxManagerTest. I've attached the log file as zk1125.txt.gz (it's large because I set the logging level to DEBUG and there there's 43 successful iterations before the failure)., result of running "src/repeat.sh CnxManagerTest > zk1125.log 2>&1" on an Amazon EC2 m2.xlarge., Also I should post my "ulimit -a":


[ec2-user@ip-10-167-22-217 ~]$ ulimit -a
core file size          (blocks, -c) 0
data seg size           (kbytes, -d) unlimited
scheduling priority             (-e) 0
file size               (blocks, -f) unlimited
pending signals                 (-i) 136932
max locked memory       (kbytes, -l) 64
max memory size         (kbytes, -m) unlimited
open files                      (-n) 1000000
pipe size            (512 bytes, -p) 8
POSIX message queues     (bytes, -q) 819200
real-time priority              (-r) 0
stack size              (kbytes, -s) 8192
cpu time               (seconds, -t) unlimited
max user processes              (-u) 1000000
virtual memory          (kbytes, -v) unlimited
file locks                      (-x) unlimited
, Thanks, I will look at the logs., I think the test is failing beacuse of:
a) the test is waiting for only a minute after it restarts a peer to verify the correctess of cnx manager threads on the peer. It should wait a little longer.
b) the EC2 environment is introducing some additional variant. I think the timer is expiring before it reaches a minute.

I have attached a patch that will wait for max 4 minutes. The test sleeps for 500 ms before calling the method that checks the number of threads on the peer. For fast peers the test will exit immediately and for slow peers it will wait for max 4 minutes.

Eugene, can you please see if the patch works for you? Thanks., Submitting patch with increased timeout., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12493956/ZOOKEEPER-1125.patch
  against trunk revision 1166970.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/521//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/521//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/521//console

This message is automatically generated., Unfortunately CnxManagerTest failed on the 27th iteration (please see attached log)., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12494344/fail_on_27th_iteration.log.gz
  against trunk revision 1170365.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/532//console

This message is automatically generated., Just for some additional detail on my own testing. CnxManagerTest is failing in testWorkerThreads(). This test starts , when the test shuts down members of its set of Quorum Peers, one at a time, and restarts replacements for them. Apparently sometimes, these replacements apparently are not coming up in a timely fashion., Sorry, the second sentence in the above should read: "This test starts a set of Quorum Peers and then shuts them down, one at a time, and starts replacements for the ones that were shut down.", Just committed the patch. Thanks Vishal. I am downgrading the jira to a Major one. I dont think we should block the release with a test case failure that happens rarely., Ill leave this open since the issue isnt entirely fixed., Integrated in ZooKeeper-trunk #1304 (See [https://builds.apache.org/job/ZooKeeper-trunk/1304/])
    ZOOKEEPER-1125. Intermittent java core test failures. (Vishar Kher via mahadev)

mahadev : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1170433
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/test/CnxManagerTest.java
, I am not sure whats going on. I will investigate further. 
Eugene - thanks for trying out the patch., I am moving this out to 3.5.0, we can keep this open for further investigation. We dont really need to wait on this for 3.4., Running into this exact problem - any update on this track?
Thanks. 
Eugen. , This still and issue with 3.4/trunk? Or should we close this?, We haven't seen these failures for a while now. I'm closing this.]