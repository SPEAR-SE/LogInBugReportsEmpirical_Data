[Hi,

Recently I also got the same issue. From the initial analysis, I felt the problem could be : 'The Leader ZK is leading with the support of the Observer.'

+Detailed Description:+
Scenario: I have Started 3 ZKs(1 Leader ,1 Observer and 1 Follower) and shutdown the Follower.

Leader has created 2 LearnerHandlers(1=Observer  and 1=Follower) and added to 'learners'. Now I have shutdown the Follower server, but the Leader is still in the LEADING state. When I have gone through the suporting logic, it is considering the 'learners' which contains Followers as well as Observers. As far as I know, the Leader shouldn't be in a Leading state with the support of Observer.

{noformat}
// lock on the followers when we use it.
syncedSet.add(self.getId());
synchronized (learners) {
     for (LearnerHandler f : learners) {
{noformat}

I feel it will be resolved, instead iterating using the learners, if use 'forwardingFollowers'. , Glancing at the code, I think you might be right. Are you planning on writing a test and a fix for this or should I?, Hi Cam,

Sorry for the delay.i have uploaded the patch please review it and 
let me know the modification if any?

Thanks, Resubmit the patch with fix version as 3.5 (because build was not triggered for the previously uploaded patch), Hi Kavita - 

Patch looks good to me, thanks! I like the test particularly. 

I've taken the liberty of moving the test to its own class. The reasoning is that starting the ensemble, then shutting down the servers, then starting them again is an avoidable time sink, and the tests take long enough to run already. Setting up the ensemble the way we want it in the first place saves about 10s on my machine. 

I also added an extra assertion, a comment and simplified building the server list. If you're happy with this, I'll go ahead and commit it. 

Thanks,
Henry, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12510273/ZOOKEEPER-1294-1.patch
  against trunk revision 1227927.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 5 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    -1 release audit.  The applied patch generated 25 release audit warnings (more than the trunk's current 24 warnings).

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/900//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/900//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/900//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/900//console

This message is automatically generated., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12510273/ZOOKEEPER-1294-1.patch
  against trunk revision 1227927.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 5 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    -1 release audit.  The applied patch generated 25 release audit warnings (more than the trunk's current 24 warnings).

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/901//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/901//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/901//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/901//console

This message is automatically generated., These failures are legit; I'm looking into them now. , So, after some investigation, I've found out what's happening with testNoLogBeforeLeaderEstablishment.

The patch changes the locking in Leader.java; now the lock around the sync-and-ping loop is on the forwardingFollowers set. The call to ping() with that lock held then takes the lock on the leader object. 

In the failing test runs, at the same time the ProposalRequestProcessor has locked the leader object in order to make a proposal in Leader.propose(). This then calls sendPacket, which (tries to) lock on forwardingFollowers. 

This is a classic deadlock - the threads try to take the same locks in a different order. Although there are a few options, I think actually the patch *shouldn't* be changing the set to forwardingFollowers, but should be using learners as before. This is because observers should be pinged as well, I think, so that they don't think they're dead. Instead, the code should explicitly test whether a learner is a PARTICIPANT as below:

{code}
synchronized (learners) {
                    for (LearnerHandler f : learners) {
                        if (f.synced() && f.getLearnerType() == LearnerType.PARTICIPANT) {
                            syncedCount++;
                            syncedSet.add(f.getSid());
                        }
                        f.ping();
                    }
                }
{code}

So only learners get added to the sync set, but everyone gets pinged. This seems to fix the problem with this test, at least, for me. Any thoughts?, H Henry , yes u r correct....!!!, This patch fixes the deadlock issue, and passes all tests locally for me. I also cleaned up the syncedCount variable that was redundant. , -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12510532/ZOOKEEPER-1294-2.patch
  against trunk revision 1227927.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 5 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    -1 release audit.  The applied patch generated 25 release audit warnings (more than the trunk's current 24 warnings).

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/903//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/903//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/903//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/903//console

This message is automatically generated., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12510532/ZOOKEEPER-1294-2.patch
  against trunk revision 1227927.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 5 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    -1 release audit.  The applied patch generated 25 release audit warnings (more than the trunk's current 24 warnings).

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/904//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/904//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/904//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/904//console

This message is automatically generated., Ugh, forgot to switch from Cloudera copyright to Apache copyright header in Eclipse, which caused the RAT warning.

This patch fixes that, and then we should be to go since all tests pass. Assuming this comes back clean again, I'll commit this. , +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12510535/ZOOKEEPER-1294-3.patch
  against trunk revision 1227927.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 5 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/905//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/905//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/905//console

This message is automatically generated., I just committed this. Thanks Kavita!, Integrated in ZooKeeper-trunk #1427 (See [https://builds.apache.org/job/ZooKeeper-trunk/1427/])
    ZOOKEEPER-1294. One of the zookeeper server is not accepting any requests (Kavita Sharma via henryr)

henry : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1231389
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/Leader.java
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/test/ClientBase.java
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/test/ObserverLETest.java
, Thanks Henry., more detail here: http://axa.vn]