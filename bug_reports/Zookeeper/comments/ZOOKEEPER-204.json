[This patch has a test case for the condition. It also fixes the problem by queuing the SetWatches right after the auth packets and before any other packets. While fixing the problem I also fixed the problem of exceptions that happen in callbacks killing the dispatch thread.,  the patch is missing the class TestableZookeeper. Ben can you upload the class with the patch?, Sorry Mahadev, added missing file., There is one point I don't understand. In the following:


{code:java}
@@ -702,6 +703,20 @@
             bb.putInt(bb.capacity() - 4);
             bb.rewind();
             synchronized (outgoingQueue) {
+                // We add backwards since we are pushing into the front
+                if (!disableAutoWatchReset) {
+                    SetWatches sw = new SetWatches(lastZxid,
+                            zooKeeper.getDataWatches(),
+                            zooKeeper.getExistWatches(),
+                            zooKeeper.getChildWatches());
+                    RequestHeader h = new RequestHeader();
+                    h.setType(ZooDefs.OpCode.setWatches);
+                    h.setXid(-8);
+                    Packet packet = new Packet(h, new ReplyHeader(), sw, null, null,
+                                null);
+                    outgoingQueue.add(packet);
+                }
+
{code}

From the description of the jira, it sounds like you want to do "outgoingQueue.addFirst(packet);" instead. Am I missing anything?, Good catch Flavio. Uploaded a fixed version., made a few changes regarding logging and formatting .... otherwise +1 , Committed revision 718925 to trunk 
and Committed revision 718926 to 3.0 branch. 

Thanks ben., Integrated in ZooKeeper-trunk #149 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/149/])
    ]