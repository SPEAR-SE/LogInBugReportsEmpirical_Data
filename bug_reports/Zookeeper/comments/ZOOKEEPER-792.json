[Plug memory leak in pyzoo_get() and pyzoo_create()., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12447995/ZOOKEEPER-792.patch
  against trunk revision 953041.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/120/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/120/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/120/console

This message is automatically generated., henry, can you take a look at this?
, We've been using this patch in production (16-node cluster) for over a month. I'd like to have it go into never release. Can somebody please code review?, Hi - 

Sorry for the slow response! I just took a look over the patch - good catches.

+1. I'll commit within the day. 

Henry, Just to update - I've found that zkpython tests are failing in trunk, and I don't want to commit a patch when the tests are broken. I'll be creating a JIRA shortly to address the problem once I've looked into it slightly further., Aha - I think I have found the problem, and it was related to this patch.


   PyObject *ret = Py_BuildValue( "(s#,N)", buffer,buffer_len, stat_dict );
+  free_pywatcher(pw);
   free(buffer);

We shouldn't free the pywatcher_t object here because it may be called later. This was what was causing the segfault I was seeing. I'll upload a new patch with this line removed; I hope it will still fix your memory consumption issues. , Updated patch to remove that bug. , I forgot --no-prefix. Plus ca change, plus c'est la meme chose. , Thanks a lot.
, I just committed this! Thanks Lei Zhang!, Integrated in ZooKeeper-trunk #936 (See [https://hudson.apache.org/hudson/job/ZooKeeper-trunk/936/])
    ]