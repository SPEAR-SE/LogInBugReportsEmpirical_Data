[Soon will upload patch with the below approach. Please let me know if we have any other better solution to apply.

*Approach:*
IMO better the LES f/w can handle these events ('Disconnected', 'SyncConnected' and 'Expiry' ZooKeeper events), rather than be silent. It will help the users be in a safe state instead of be in the same state (ELECTED/READY). 

Provide 'EventProcessor-Thread', one thread per LES. This service will execute the events with a time bounded delay. After choosing the first event, the processor will wait for the configured ‘eventDelayTimeout’ and again pick the latest event present in the queue (if exists). Finally the processor will execute the most recent event. This delay is given in order to avoid slight network fluctuations, wait for some grace period say ‘eventDelayTimeout’ default value could be ‘sessionTimeOut/2’.

All the watchevents (‘Disconnected’, ‘SyncConnected’, ‘Expiry’ events ) from the ZooKeeper server and will be given to this processor. It will have the following logic

+Disconnected logic:+
Introduce new state NEUTRAL to represent the disconnection and the clients will see the node has disconnected from the ZooKeeper can be in a safe mode.
1)If the LeaderElectionSupport state is not STOP, dispatch NEUTRAL event to the user. So the user application can act upon it. This will help to go to a safe state rather than in the ELECTED state.

+SyncConnected logic:+
1)Check if my ephemeral node ‘leaderOffer.getnodePath()’ is present in the ZooKeeper or not
2)If Yes, go to determineElectionStatus(). This will decide the state ELECTED/READY.
3)If No, makeOffer() and determineElectionStatus(). This will first create ephemeral node and go to leader determination phase.

+Expiry logic:+
The serving cluster or standalone ZooKeeper has expired this session. This implies, user must create a new client connection (instantiate a new ZooKeeper instance) if you with to access the ensemble.

1) On receival of Expiry, dispatch STOP event to the client. This will notifies the client and they can restart the LeaderElectionSupport with new ZooKeeper client session.

Thanks,
Rakesh, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12497779/ZOOKEEPER-1209.patch
  against trunk revision 1177432.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/604//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/604//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/604//console

This message is automatically generated., 
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/2213/
-----------------------------------------------------------

Review request for zookeeper and Mahadev Konar.


Summary
-------

The attached patch handles Syncconnected, Disconnected, Expired connection events. Tries to make client to neutral after disconnection and stop after session expiration, rather than in Active mode.


This addresses bug ZOOKEEPER-1209.
    https://issues.apache.org/jira/browse/ZOOKEEPER-1209


Diffs
-----

  ./src/recipes/election/test/org/apache/zookeeper/recipes/leader/LeaderElectionAwareTest.java PRE-CREATION 
  ./src/recipes/election/src/java/org/apache/zookeeper/recipes/leader/LeaderElectionSupport.java 1179108 

Diff: https://reviews.apache.org/r/2213/diff


Testing
-------

See test program and description on https://issues.apache.org/jira/browse/ZOOKEEPER-1209


Thanks,

Rakesh

, Hi,

I have attached the initial patch (with test cases) which will make the client node to 'neutral' mode after disconnection and stop after session expiration, rather than in Elected mode. 

The attached patch tries to handle Syncconnected, Disconnected, Expired connection events.

Any review help would be appreciated..

Thanks,
Rakesh, Hi folks,

I would like to point out one more difficulty in using the existing ‘LeaderElectionSupport' (LES) recipe.

*Ordered execution of the events is not guaranteed*. The f/w has the logical classification of events (for ex: *_START, *_COMPLETE), but it is not ensuring the execution order of these logical events. This makes the usage of the recipe more complex and may result in erroneous client/user implementation.


*Scenario:*
Consider the scenario where the user node is determined as READY state, now the LES f/w first dispatches the READY_START event to the user node and then watcher will get added to the ELECTED node. Say just before dispatching the READY_COMPLETE event, ELECTED has become expired or stopped. So the 'NodeDeleted' event will be notified to the f/w and will go to the leader determination phase by dispatching the DETERMINE_START and DETERMINE_COMPLETE events. 

In this case, there is high chance of dispatching the READY_COMPLETE during the leader determination time or even later.

+Following shows the sample output of Ready node events:+
START
OFFER_START
OFFER_COMPLETE
DETERMINE_START
DETERMINE_COMPLETE
READY_START
DETERMINE_START
DETERMINE_COMPLETE
ELECTED_START
READY_COMPLETE
ELECTED_COMPLETE



+*Proposal*+
The patch which I have uploaded contains the *‘LES-EventProcessor’* service and this will help the recipe to ensure the ordered execution of the events.



Thanks,
Rakesh
, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12497779/ZOOKEEPER-1209.patch
  against trunk revision 1615240.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2256//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2256//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2256//console

This message is automatically generated., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12497779/ZOOKEEPER-1209.patch
  against trunk revision 1748630.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    -1 javac.  The patch appears to cause tar ant target to fail.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3230//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3230//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3230//console

This message is automatically generated.]