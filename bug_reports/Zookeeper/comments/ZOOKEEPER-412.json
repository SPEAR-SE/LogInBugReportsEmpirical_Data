[Can this issue be closed? It's not really clear what it is about., 
This still happens in trunk.

{panel}
$ rm -rf build
$ ant ivy-retrieve-test
$ ls -l build/test/lib/checkstyle-5.0.jar 
-rw-rw-r-- 1 suda suda 616230 Apr 18  2009 build/test/lib/checkstyle-5.0.jar
$ ant -v -Dcheckstyle.home=$(pwd)/build/test/lib checkstyle
..
checkstyle:
    [mkdir] Skipping /home/suda/WORK/zookeeper/build/test because it already exists.
[checkstyle] checkstyle version 5.0
[checkstyle] compiled on Sat April 18 2009, 11:45 EST
[checkstyle] log4j:WARN No appenders could be found for logger (org.apache.commons.beanutils.BeanUtils).
[checkstyle] log4j:WARN Please initialize the log4j system properly.
[checkstyle] log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
[checkstyle] Total execution took 97 ms.

BUILD FAILED
/home/suda/WORK/zookeeper/build.xml:1707: Unable to create a Checker: cannot initialize module PackageHtml - Unabl
e to instantiate PackageHtml
        at com.puppycrawl.tools.checkstyle.CheckStyleTask.createChecker(CheckStyleTask.java:383)
        at com.puppycrawl.tools.checkstyle.CheckStyleTask.realExecute(CheckStyleTask.java:300)
        at com.puppycrawl.tools.checkstyle.CheckStyleTask.execute(CheckStyleTask.java:262)
        at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:293)
        at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:606)
        at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
...
{panel}

The bug is caused by {{PackageHtml}}, which has been removed since Checkstyle 5.0.
https://github.com/apache/zookeeper/blob/554e2997a0436f5f734ab9585ed88a63353d125b/src/java/test/checkstyle.xml#L38
http://sourceforge.net/p/eclipse-cs/discussion/274377/thread/9d8d3212/

I can come up with two possible solutions:

1. Keep current {{checkstyle.xml}}; use some old Checkstyle. (not sure which version is appropriate. it is not written in ZOOKEEPER-351)
2. Rewrite a new {{checkstyle.xml}}; switch to latest Checkstyle (6.13 at the moment)

I attached a patch ({{ZOOKEEPER-412.patch}}) for the latter one.

The {{checkstyle.xml}} included in {{ZOOKEEPER-412.patch}} is just copied from the latest Hadoop,
but I fear this may not comply with the original manner of ZooKeeper.

I also attached {{checkstyle-errors-trunk-20151211.html}} generated with the {{ZOOKEEPER-412.patch}}.
(over 60k style errors!)

Any thoughts?
, Note: When {{Indentation/basicOffset}} is changed from 2 to 4, the number of errors decreases to 11,850.
, [~suda] thanks a lot for looking at this. I also prefer the option of upgrading to a more recent version. We also should actually be running check style with the precommit build.

We should be using four spaces per indentation level:

https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12777010/checkstyle-errors-trunk-20151211.html.gz
  against trunk revision 1719204.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2994//console

This message is automatically generated., Thanks for working on this [~suda]. I agree with [~fpj], we should use:

{code}
<property name="basicOffset" value="4" />
{code}

I also agree that we should upgrade to a recent version. Mind changing the basicOffset and resubmitting? Thanks!, Hi [~fpj] and [~rgs],

Thank you for comments.

I attached {{ZOOKEEPER-412-v2.patch}} with 4-space indentation.
I think the patch now comply with the original manner of Zookeeper.
(Note that {{DoubleCheckedLocking}} and {{RedundantThrows}} are not available in latest Checkstyle.)

I will also submit a patch that actually fixes style errors after {{ZOOKEEPER-412-v2.patch}} gets merged.

For precommit checking, of course it is possible to add the feature in {{test-patch.sh}}.
However, perhaps this is a good chance to adopt Apache Yetus as in Hadoop.
I would like to hear your comments. (Cc: [~cnauroth])

Thanks!
, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12777294/ZOOKEEPER-412-v2.patch
  against trunk revision 1719528.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2995//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2995//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2995//console

This message is automatically generated., Patch lgtm, +1. 

[~fpj], [~cnauroth]: could you take one more look?

Adopting Apache Yetus for precommit checks sounds good too.

Thanks [~suda]!, This is very timely, because I had been in the process of writing a proposal for a migration to Yetus for our pre-commit.  I just posted my proposal to the dev list.

I recommend that any additional pre-commit enhancement be deferred until after that discussion settles.  If everyone agrees on migrating to Yetus, then it would be wasted effort to fix the current ZooKeeper test-patch.sh script to run Checkstyle.

I haven't quite had a chance to review this patch, but I'll put it into my queue.  Thanks!, [~suda], thank you for the patch.  Here are a few small comments.

{code}
    <target name="checkstyle" depends="ivy-retrieve-test" description="Run optional third-party tool targets">
      <taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties" uri="antlib:com.puppycrawl.tools.checkstyle.ant">
	<classpath path="${ivy.test.lib}/checkstyle-6.13.jar"/>
{code}

# The description isn't accurate.  I see this was taken from the existing code, but could you take the opportunity to change it to something like "Run Checkstyle coding standard checks"?
# It looks like there are tab characters in the {{<classpath>}} lines.  Would you please switch to spaces?
# Do you think it makes sense to use a wildcard to put all of {{ivy.test.lib}} on the classpath?  Would this be more resilient to change if the dependencies ever change in the future?, [~cnauroth], thank you for the comments.

I revised the patch according to your comments ({{ZOOKEEPER-412-v3.patch}}).

As discussed in dev ML, the community is now becoming interested in mvn/gradle.
I'd be glad to migrate my patch to mvn/gradle if the community adopts either of them.
, +1 for patch v3.  I have committed this to trunk and branch-3.5.  [~suda], thank you for the contribution.  [~rgs] and [~fpj], thank you for the code reviews., FAILURE: Integrated in ZooKeeper-trunk #2829 (See [https://builds.apache.org/job/ZooKeeper-trunk/2829/])
ZOOKEEPER-412: checkstyle target fails trunk build (Akihiro Suda via cnauroth) (cnauroth: [http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1720227])
* trunk/CHANGES.txt
* trunk/build.xml
* trunk/ivy.xml
* trunk/src/java/test/checkstyle.xml
, Thank you for the merging!]