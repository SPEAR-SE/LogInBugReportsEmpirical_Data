[The leader will not start responding to client requests from followers until a quorum of followers has ACKed for the leader's zxid so this is not a problem., Let's mark this one as not a problem for now and reopen it if Jiangwen (or someone else) disagrees., TO Camille Fournier:
 what you said is right, but it does not solve this problem.
 follower don't need forward the read requests to leader, the read requests don't need leader's response.

REVALIDATE don't count on a quorum of servers have synced with leader. 
REVALIDATED session may see the messages that not exits in a quorum of servers in this case.

for more information, please look into the LeanerHandler class that will handle the REVALIDATE request from followers  , Jiangwen, It is accurate what you say about read requests, but I'm not convinced by your argument on REVALIDATE requests. A leader creates a new session tracker when it executes startup(), and startup() is only called once the leader has a quorum of supporters. At least this is what I see when I look at the Leader class. Is there anything I'm missing? , OK, do you mean REVALIDATE session will fail before the new leader come up, because sessionTracker in LeaderZooKeeperServer is NULL., LeaderZooKeeperServer should not be null, but the session tracker should be. Note that the call to touch(...) in LearnerHandler makes a call to the session tracker object, which is created upon calling startup() on ZooKeeperServer. The method startup() is only called upon getting an ack from a quorum.

But, it does sound like we are not expecting a null pointer there in LearnerHandler when we process a revalidate message, and a null pointer might cause us trouble there. It sounds like we need to check if the session tracker exists, and if it doesn't, then either we fail the request or wait until it becomes available. Waiting is an option if the session tracker being null only happens at startup, which seems to be the case., Uncovered some more evidence that there could be a bug here, so reopening it., LearnerHandler will not even try to handle REVALIDATE until the leader has seen a quorum of acks for its last zxid. Until that point, the leader will not have started, and the handler thread will wait. See lines 367-371 in LearnerHandler: 
 /*
             * Wait until leader starts up
             */
            synchronized(leader.zk){
                while(!leader.zk.isRunning() && !this.isInterrupted()){
                    leader.zk.wait(20);
                }
            }


This also means you won't get a NPE because we don't set running to be true until the end of the startup call, which creates the session tracker., Good point, Camille. I missed that the handler was processing REVALIDATE requests (along with other requests) only after the loop, so I agree that there should be no NPE there. , Sounds like we have converged. Closing again.]