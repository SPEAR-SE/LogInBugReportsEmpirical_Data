[GitHub user bitgaoshu opened a pull request:

    https://github.com/apache/zookeeper/pull/342

    ZOOKEEPER-2488: Synchronized access to shuttingDownLE in QuorumPeer

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/bitgaoshu/zookeeper ZOOKEEPER-2488

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/342.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #342
    
----
commit 478ba42dbb41ca7895255e4661bfd081d84c88d1
Author: bitgaoshu <bitgaoshu@gmail.com>
Date:   2017-08-23T09:12:53Z

    ZOOKEEPER-2488: Synchronized access to shuttingDownLE in QuorumPeer

----
, +1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/958//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/958//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/958//console

This message is automatically generated., Github user DanBenediktson commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/342#discussion_r134784530
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java ---
    @@ -1155,6 +1134,19 @@ public void run() {
             }
         }
     
    +    private void electionAndSetCurVote() {
    +        reconfigFlagClear();
    +        if (shuttingDownLE) {
    +            startLeaderElection();
    --- End diff --
    
    How come we don't need to set shuttingDownLE back to false here?
, Github user bitgaoshu commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/342#discussion_r134908373
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java ---
    @@ -1155,6 +1134,19 @@ public void run() {
             }
         }
     
    +    private void electionAndSetCurVote() {
    +        reconfigFlagClear();
    +        if (shuttingDownLE) {
    +            startLeaderElection();
    --- End diff --
    
    oh, sorry. it's my negligence. i will fix
, -1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/961//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/961//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/961//console

This message is automatically generated., Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/342
  
    To provide some context here regarding this JIRA issue - it was found as part of work on ZOOKEEPER-2080: https://issues.apache.org/jira/browse/ZOOKEEPER-2080?focusedCommentId=15391189&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15391189
, Github user maoling commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/342#discussion_r135038449
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java ---
    @@ -1155,6 +1134,19 @@ public void run() {
             }
         }
     
    +    private void electionAndSetCurVote() {
    --- End diff --
    
    IMHO,If you really want to refactor the code block(**Line1137-Line1149**)  **,throws Exception** may be better than catching exception in this function!
, Github user bitgaoshu closed the pull request at:

    https://github.com/apache/zookeeper/pull/342
, Github user bitgaoshu commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/342#discussion_r135168943
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java ---
    @@ -1155,6 +1134,19 @@ public void run() {
             }
         }
     
    +    private void electionAndSetCurVote() {
    --- End diff --
    
    enen, i think the exception can be appropriately handled in this function, why need to throw the exception to  caller?  :)  thanks
, Hi, [~hanm] I don't understand why need to protect the entire state of QuorumPeer. I looked through the code. In my view, the QuorumPeer contains two important state,  QV and FLE. The FLE will be restarted when the QV changed whatever the server state is, namely  reconfig op. If the QuorumPeer is LEADER or FOLLOWER, QuorumPeer state will be updated in function QuorumPeer::processReconfig. But if QuorumPeer is LOOKING, shuttingDownLE may be changed to true and QV updated, and then a new FLE object is created in main loop of QuorumPeer.  So I think  the shuttingDownLE is only used by FLE to inform QuorumPeer to create a new FLE object under the condition of self.getServerState() == LOOKING. And it is  sufficient to add volatile alone.  Please point our my errors, thank you very much.]