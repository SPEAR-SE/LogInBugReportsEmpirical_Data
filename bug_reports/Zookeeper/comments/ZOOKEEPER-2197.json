[[~fpj] could you try this patch? I don't get this error on my machine., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12736371/ZOOKEEPER-2197.patch
  against trunk revision 1682623.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2725//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2725//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2725//console

This message is automatically generated., [~michim], [~fpj]: hmm, how about using -Dfile.encoding=utf8?, that sounds fine. i guess we can set the encoding in build.xml?, yup. something like (untested) this:

{code}
    <target name="compile" depends="ivy-retrieve,clover,build-generated">
        <javac srcdir="${java.src.dir}" destdir="${build.classes}" includeantruntime="false"
               target="${javac.target}" source="${javac.source}" debug="on">
            <classpath refid="java.classpath"/>
            <compilerarg value="-Xlint:all"/>
            <compilerarg value="-Xlint:-path"/>
            <compilerarg value="-Dfile.encoding=utf8"/>
        </javac>
    </target>
{code}, yup. something like (untested) this:

{code}
    <target name="compile" depends="ivy-retrieve,clover,build-generated">
        <javac srcdir="${java.src.dir}" destdir="${build.classes}" includeantruntime="false"
               target="${javac.target}" source="${javac.source}" debug="on">
            <classpath refid="java.classpath"/>
            <compilerarg value="-Xlint:all"/>
            <compilerarg value="-Xlint:-path"/>
            <compilerarg value="-Dfile.encoding=utf8"/>
        </javac>
    </target>
{code}, yup. something like (untested) this:

{code}
    <target name="compile" depends="ivy-retrieve,clover,build-generated">
        <javac srcdir="${java.src.dir}" destdir="${build.classes}" includeantruntime="false"
               target="${javac.target}" source="${javac.source}" debug="on">
            <classpath refid="java.classpath"/>
            <compilerarg value="-Xlint:all"/>
            <compilerarg value="-Xlint:-path"/>
            <compilerarg value="-Dfile.encoding=utf8"/>
        </javac>
    </target>
{code}, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12736412/ZOOKEEPER-2197.patch
  against trunk revision 1682623.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2728//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2728//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2728//console

This message is automatically generated., Hmm, I tried what you suggested but ant/javac complains:

{noformat}
compile:
    [javac] Compiling 210 source files to /home/fpj/code/zookeeper-3.5.1-alpha/build/classes
    [javac] javac: invalid flag: -Dfile.encoding=utf8
{noformat}

This change worked instead for me:

{noformat}
<target name="compile" depends="ivy-retrieve,clover,build-generated">
        <javac srcdir="${java.src.dir}" destdir="${build.classes}" includeantruntime="false"
               target="${javac.target}" source="${javac.source}" debug="on" encoding="UTF-8">
            <classpath refid="java.classpath"/>
            <compilerarg value="-Xlint:all"/>
            <compilerarg value="-Xlint:-path"/>
        </javac>
    </target>
{noformat}

In general, is everyone happy that we change the encoding to utf-8? I personally don't see a big problem, but perhaps we should send a separate note to the dev list to see if anyone has a concern. What do you think? 
, Yeah, I think it should be fine. I'll start a quick thread. , The 2nd uploaded patch added the new encoding, but remove the the â€” utf-8 char (which should stay). , If we set the source encoding, then I recommend making it consistent across all invocations of {{<javac>}}.  That would involve making the same change for targets like jute and compile-test.  Under contrib, we also have {{<javac>}} invocations in src/contrib/rest/build.xml and src/contrib/zooinspector/build.xml., yup, that makes sense. maybe we should update this ticket description to 'use utf-8 everywhere' then?, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12736463/ZOOKEEPER-2197.patch
  against trunk revision 1682701.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2729//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2729//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2729//console

This message is automatically generated., This is looking good to me.  I tested a build locally.  Do we also want to include the contrib changes that I mentioned in my last comment?, Addressed Chris's comment., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12736503/ZOOKEEPER-2197.patch
  against trunk revision 1682823.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2734//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2734//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2734//console

This message is automatically generated., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12736503/ZOOKEEPER-2197.patch
  against trunk revision 1682823.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2735//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2735//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2735//console

This message is automatically generated., the failure was zktest-mt (add TestReconfig.cc:183), so we can probably ignore it. , lgtm, except that i'd leave the utf-8 char in:

{code}
--- src/java/main/org/apache/zookeeper/server/FinalRequestProcessor.java	(revision 1682822)
+++ src/java/main/org/apache/zookeeper/server/FinalRequestProcessor.java	(working copy)
@@ -131,7 +131,7 @@
 
         // ZOOKEEPER-558:
         // In some cases the server does not close the connection (e.g., closeconn buffer
-        // was not being queued â€” ZOOKEEPER-558) properly. This happens, for example,
+        // was not being queued - ZOOKEEPER-558) properly. This happens, for example,
{code}

That way, we'll actually know this works :-) Other than that, +1. Thanks [~michim]!, +1 (non-binding) for the patch, pending resolution of the last feedback from RaÃºl.  I tested a full build locally.  The test failure from the last Jenkins run is unrelated.  The {{TestReconfig}} CPPUnit test failed, and this one has been failing intermittently already on trunk.

Thank you for addressing the feedback, Michi!, Addressed Raul's comment., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12736736/ZOOKEEPER-2197.patch
  against trunk revision 1682823.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2740//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2740//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2740//console

This message is automatically generated., Merged:

trunk: https://github.com/apache/zookeeper/commit/06b1a5cf6f5e6fc4ace12f0aec3cadea488f6c3b
3.5: https://github.com/apache/zookeeper/commit/d9fcded48d4663367def142a2efacb55be0b3112

Thanks [~michim]!, SUCCESS: Integrated in ZooKeeper-trunk #2713 (See [https://builds.apache.org/job/ZooKeeper-trunk/2713/])
ZOOKEEPER-2197 non-ascii character in FinalRequestProcessor.java

To be able to use utf-8 in .java source files we now use utf-8
encoding to build them (Michi Mutsuzaki via rgs). (rgs: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1683042)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/build.xml
* /zookeeper/trunk/src/contrib/build-contrib.xml
* /zookeeper/trunk/src/contrib/rest/build.xml
* /zookeeper/trunk/src/contrib/zooinspector/build.xml
* /zookeeper/trunk/src/recipes/build-recipes.xml
* /zookeeper/trunk/src/recipes/election/build.xml
* /zookeeper/trunk/src/recipes/lock/build.xml
* /zookeeper/trunk/src/recipes/queue/build.xml
]