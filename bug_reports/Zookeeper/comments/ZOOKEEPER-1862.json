[I think , the testcase should handle the IOException becuase there is a race between socket closure in the server side and the reading text in the client side. Attached patch handling the exception., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12622573/ZOOKEEPER-1862.patch
  against trunk revision 1556976.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1877//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1877//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1877//console

This message is automatically generated., Nice patch [~rakeshr]. LGTM, +1. Some small grammar nits though:

{noformat}
+            // During connection expiry server will close the connection.
+            // After the socket closure, when the client tries to read a
+            // line of text will throw java.net.SocketException.
{noformat}

could be:


{noformat}
+            // During connection expiry the server will close the connection.
+            // After the socket is closed, when the client tries to read a
+            // line of text it will throw java.net.SocketException.
{noformat}

which you can take if you think it makes sense. Thanks!, Thank you [~rgs] for the comments. Attached latest patch addressing the same., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12634682/ZOOKEEPER-1862.patch
  against trunk revision 1577317.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1961//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1961//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1961//console

This message is automatically generated., +1 Thanks Rakesh!, trunk: http://svn.apache.org/viewvc?view=revision&revision=1577756, FAILURE: Integrated in ZooKeeper-trunk #2254 (See [https://builds.apache.org/job/ZooKeeper-trunk/2254/])
ZOOKEEPER-1862. ServerCnxnTest.testServerCnxnExpiry is intermittently failing (Rakesh R via michim) (michim: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1577756)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/test/ServerCnxnTest.java
, Thanks [~rgs], [~michim] for the reviews and push this in. One good news we have got a clean build after fixing this:)
, https://builds.apache.org/job/ZooKeeper-trunk-solaris/850/, This is awesome! Thanks Rakesh!]