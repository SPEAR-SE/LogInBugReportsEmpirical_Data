[Thanks for reporting this [~deepeshreja]. Are you working on tthis [~enis]? Happy to help with reviews. , -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12830500/ZOOKEEPER-2230.patch
  against trunk revision ec20c5434cc8a334b3fd25e27d26dccf4793c8f3.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3456//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3456//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3456//console

This message is automatically generated., Hi [~rgs],

I've figured out the issue and the came up with the attached patch. Can you please review it and push it further?

Thanks,
Deepesh

, >> -1 tests included. The patch doesn't appear to include any new or modified tests.
I don't think this needs a new tests because it doesn't really include a new function/class or change a lot in the function., Hi [~rgs],

Can you please review the patch and merge it?, Hi [~ekoontz]/[~mahadev],

From ZOOKEEPER-938, I feel that you might be interested in this patch. Can you please review and merge this?

Thanks,
Deepesh

, cc [~cnauroth]. ,  I have hit this issue too, but the proposed patch did not work (caused the server to fail to authenticate all connections). The reason is that in my case, upon instantiation of the subject, it gets an initial (invalid, I believe) entry in the Private Credentials list that stringifies to:

/path/to/keytab/file for username/host.name@DOMAIN.COM

so the isEmpty() check never evaluates to true. I had to allow it to add one additional cred (which looks like this in the logs):

 [GSSCredential: \nusername@host.name.com 1.2.840.113554.1.2.2 Accept [class sun.security.jgss.wrapper.GSSCredElement]]

It then works a charm., I am not sure why the first credential in Private Credentials set is keytab file name. We are running proposed patch in Production and we are not seeing any issues., [~fittey] Can you provide us your zookeeper configurations like jaas.conf, Java properties set while starting ZooKeeper, etc.? I'll try to reproduce it in my environment and see if I can come to a conclusion., [~deepeshreja]: sure. See below. I am working on a different patch that should be more compatible though. When using native Kerberos, the subject.doAs() is entirely unnecessary. The required SaslServer can be simply created and returned. The native libs will do the right thing, and find the correct principal from the available tickets (or request one if necessary).

Invocation line:

{quote}
/path/to/jdk_1_8_0_91/bin/java
 -Dzookeeper.log.dir=/path/to/logfile 
 -Dzookeeper.root.logger=INFO,CONSOLE 
 -cp /path/to/jars:/more/jars: 
 -Dvisualvm.display.name=friendly_name
 -Xmx4G
 -XX:+UseG1GC
 -Dcom.sun.management.jmxremote.port=<jmxport>
 -Dcom.sun.management.jmxremote.authenticate=false
 -Dcom.sun.management.jmxremote.rmi.port=<port>
 -Dcom.sun.management.jmxremote.ssl=false
 -Dlog4j.configuration=file:/path/to/log4j.properties
 -Dzookeeper.superUser=user/this.host.com@KERB.DOM
-Dzookeeper.DigestAuthenticationProvider.superDigest=user:<DIGEST>=
 -Dcom.sun.management.jmxremote
 -Dcom.sun.management.jmxremote.local.only=false 
 org.apache.zookeeper.server.quorum.QuorumPeerMain /path/to/zoo.cfg
{quote}

Relevant envvars:

{quote}
KRB5_KTNAME="/path/to/keytab/file"
KRB5_TRACE=/dev/stdout
{quote}


Jaas config file:

{quote}
Server \{
    com.sun.security.auth.module.Krb5LoginModule required
    useKeyTab=true
    storeKey=true
    isInitiator=false
    keyTab="/path/to/keytab/file"
    principal="user/qualifited.hostname.com@KERB_REALM";
\};

Client \{
    com.sun.security.auth.module.Krb5LoginModule required
    useTicketCache=true;
\};
{quote}, [~fittey] I think you are seeing different behavior because of setting "storeKey" to true which adds principal's key in the Subject's private credentials set. Due to this, there is always an entry in the set.

I'll see if I can come up with something so that this also work when "storeKey" is set to True.

Also, please let me know if you have something or need help on the patch you are working on., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12830500/ZOOKEEPER-2230.patch
  against trunk revision cd0e323831c8b4cde64976325bfc79bb53cdd9b7.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3548//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3548//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3548//console

This message is automatically generated., GitHub user yvf opened a pull request:

    https://github.com/apache/zookeeper/pull/166

    ZOOKEEPER-2230: fix ever-increasing auth times when using jgss native Kerberos lib

    This is a more generic fix for the issue reported in ZOOKEEPER-2230. The patch already proposed in the issue did not work for me, but this does, and should work for all use cases with the native Kerberos libs. In particular, I do not specify the serverName in the createSaslServer, so that any service principal present in the keytab may be used. 

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/yvf/zookeeper ZOOKEEPER-2230-3.4

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/166.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #166
    
----
commit 84d1259a47ca37e4351a2824bc6a40011acd2da3
Author: Yan Fitterer <yan.fitterer@twosigma.com>
Date:   2017-02-08T02:50:42Z

    ZOOKEEPER-2230: fixed ever-increasing auth times when using jgss native Kerberos libraries

----
, [~deepeshreja] See my change in the PR above. That patch works for us, and I'm hoping it's good for all. If folks are happy with merging this, I will do an equivalent patch on the 3.5 branch, and master. When I last looked, 3.5 had the same issue.]