[Dependency in POM now generated as:
{code}
    <dependency>
      <groupId>jline</groupId>
      <artifactId>jline</artifactId>
      <version>0.9.94</version>
      <optional>true</optional>
    </dependency>
{code}, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12571355/ZOOKEEPER-1655.patch
  against trunk revision 1448007.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1414//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1414//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1414//console

This message is automatically generated., I'm trying to understand the implications of this patch. One of the concerns in HADOOP-9342 was the version of jline. Should we bump up the version here? Otherwise it sounds good to make it optional. , Thanks for the feedback, Thomas. Could you update the patch to upgrade the jline version number, please? If you haven't done it, please make sure it applies to both trunk and 3.4 branch., Cancelling patch to upgrade the jline version., [~isnogood], Do you think you can update the patch to upgrade the jline version? , I'm not sure it is a drop in replacement, need to try it. Would prefer to separate this from the leaking dependency though. Even if we manage to bump the version, we should still not export the dependency via the Maven pom. , I'm concerned about this change for 3.4. It's less of a bug fix and more of an improvement imo - a change which could destabilize existing downstream users. It's easy enough to specify an exclude if you don't want.

I'm good for changing this in trunk, but I don't see this for a fix release on a stable branch. (just my opinion though, lmk if you feel strongly otw).

If this is ok lmk and I'll commit to trunk., If JLine gets upgraded in the 3.x line (ZOOKEEPER-1718), then I would suggest to also make the change to the pom to not export the dependency since downstream would be affected in any case. Commit to trunk would be great in any case., Great. Let's shoot for trunk then (3.5.0)., Updated the patch for ZOOKEEPER-1718 (upgrade to jline2), Committed to trunk. Thanks Thomas!, SUCCESS: Integrated in ZooKeeper-trunk #2076 (See [https://builds.apache.org/job/ZooKeeper-trunk/2076/])
ZOOKEEPER-1655. Make jline dependency optional in maven pom (Thomas Weise via phunt) (phunt: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1528224)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/ivy.xml
, Adding deleted comment:

Thomas Weise (duplicate account) added a comment - 02/Sep/13 09:19

I think leaking the jline dependency is not desirable because it is only
needed to run the ZK command line tools while most projects would only use
the client API. For example, jline made its way into the
Hadoopdistribution until it was excluded explicitly.

As for upgrading jlline, that's a good idea as it would make features such
as reverse history search available in the ZK CLI.]