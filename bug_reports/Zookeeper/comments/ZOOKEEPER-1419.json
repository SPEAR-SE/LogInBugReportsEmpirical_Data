[Contains logs for each node in each run, and the data directories for all nodes., Hey Jeremy! Looks like a misconfiguration. According to the log file for node3:

2012-03-14 16:23:12,776 13309 [QuorumPeer[myid=0]/127.0.0.1:2900] DEBUG org.apache.zookeeper.server.quorum.FastLeaderElection  - id: 3, proposed id: 3, zxid: 0x0, proposed zxid: 0x0

Notice the "myid=0", should be "myid=3". Looks right on the other servers though.
, bq. Hey Jeremy! Looks like a misconfiguration.

Oops, that was actually my dumbness -- node3-run5.out actually contained data from node0's log.  I just gathered the logs incorrectly.   Attaching a corrected tarball., Fixed node3-run5.out, Oops, actually all the other node3 files were wrong too.  Sorry about that, it was very JV of me.  Attaching another fixed tarball.
, Fixed other node3 logs., Thanks for pointing to this problem, Jeremy. The parentheses are not right in fle totalOrderPredicate, which I fix in the attached patch. This is a preliminary patch, since I haven't had time to write a test yet, but it should fix this problem., Jeremy, super! Would it be possible for you to contribute your tests to us for inclusion in our ZK testing infra? (in addition to the tests flavio is going to write). 

Flavio it would be great if you could add some targeted tests to expand the coverage in the area in which this problem occurred., Thanks Flavio, we will be testing this shortly and I'll let you know if it solves our problem.

bq. Jeremy, super! Would it be possible for you to contribute your tests to us for inclusion in our ZK testing infra? (in addition to the tests flavio is going to write).

Unfortunately none of our tests are ZK unit tests, they all include our entire application.  Specifically, they contain they embedded layer we have on top of ZK to support dynamic membership, and including that would pull in so many dependencies that I don't think it would be useful for ZK's tests.  Also, I don't think open-sourcing that code is an option for us at this point.  Sorry!  Though it's obviously not an ideal solution, I'd be happy to manually run the tests on new release candidates sometimes., Patch including a test., Adding one important comment., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12518759/ZOOKEEPER-1419.patch
  against trunk revision 1301840.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/995//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/995//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/995//console

This message is automatically generated., I don't see why this is marked to 3.3.5, the logic there does not seem to be faulty at a glance.

Do we want to add a test with a 5-member quorum or do we think the unit test on the predicate logic is enough?, Hi Camille, The logic is incorrect in trunk. This case in the test I propose, inspired by Jeremy's run:

{noformat}
Assert.assertFalse (mock.predicate(4L, 0L, 0L, 3L, 0L, 2L));
{noformat}

fails with trunk code. It shouldn't return true in the case the new vote has an earlier epoch, and it does because we don't have the parentheses placed correctly. This was introduced with the ZAB 1.0 changes, btw.

About the tests, I felt was simpler and cleaner to have a more focused test instead of a test that tests the whole machinery. Do you think it is not sufficient?, Flavio this issue is only in 3.4+ right?, yes, only 3.4+, The patch seems to fix the problem our tests were hitting.  Thanks again!, I'm gonna check this in to trunk and 3.4 tonight., Integrated in ZooKeeper-trunk #1501 (See [https://builds.apache.org/job/ZooKeeper-trunk/1501/])
    ZOOKEEPER-1419. Leader election never settles for a 5-node cluster (flavio via camille) (Revision 1302736)

     Result = SUCCESS
camille : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1302736
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/test/FLEPredicateTest.java
]