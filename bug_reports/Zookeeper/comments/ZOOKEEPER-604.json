[From a developer, "the symbol was named hash, but basically they should work with the whitelist of functions in their zookeeper.h", alex,
  do you plan to upload a patch for this? , Bummer -- +1 on fixing this for 3.3.0. Alex it would be great if you could provide a patch given you can verify and also are on the cusp of the issue., I wasn't planning on it, as I a not familiar with the code base, but I will  
ask my boss if I can allocate time towards it.

On Dec 1, 2009 4:29pm, "Mahadev konar (JIRA)" <jira@apache.org> wrote:







































, Looks like I can't get it scheduled, can someone else write a patch?

On Dec 2, 2009 9:50am, "Alex Newman (JIRA)" <jira@apache.org> wrote:
























































































































, No worries, we just don't want to dup the work. thanks!, Mahadev has been working on a patch for this.

checkout this page I found recently, very useful, in particular the section detailing options. I suggest we move as much as possible to
static and then use the prioritized options listed in this paper to resolve the rest:
http://www.reddit.com/r/programming/comments/am3ze/pdf_how_to_write_shared_libraries_by_ulrich/, this patch fixes the issue by using libtool -symbols-export-regex. 

, I confirmed by using objdump -T on the .so libraries to see what symbols have been exported. I will also check it on hudson machines., checked objdump -T on hudson machines, it works!.... , +1 nice patch. simple., I just committed this., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12438642/ZOOKEEPER-604.patch
  against trunk revision 922377.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/17/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/17/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/17/console

This message is automatically generated., Integrated in ZooKeeper-trunk #738 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/738/])
    ]