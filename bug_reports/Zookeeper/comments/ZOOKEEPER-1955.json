[THis is an example of the snapshot file that a node was attempting to read before the EOF exception.  , It looks like the problem may actually be in the log file, from your report:
2014-07-04 12:58:52,896 [myid:1] - DEBUG [main:FileTxnLog$FileTxnIterator@575] - Created new input stream /var/lib/zookeeper/version-2/log.300000021
2014-07-04 12:58:52,915 [myid:1] - DEBUG [main:FileTxnLog$FileTxnIterator@578] - Created new input archive /var/lib/zookeeper/version-2/log.300000021
2014-07-04 12:59:25,870 [myid:1] - DEBUG [main:FileTxnLog$FileTxnIterator@618] - EOF excepton java.io.EOFException: Failed to read /var/lib/zookeeper/version-2/log.300000021

I can load a ZK fine with the snapshot you've provided. Do you have the log file or other data?, I've just made this comment on the user list, but we throw the exception at that point because we need to bytes for the crc computation right after:

{noformat}
try {
                long crcValue = ia.readLong("crcvalue");
                byte[] bytes = Util.readTxnBytes(ia);
                // Since we preallocate, we define EOF to be an
                if (bytes == null || bytes.length==0) {
                    throw new EOFException("Failed to read " + logFile);
                }
                // EOF or corrupted record
                // validate CRC
                Checksum crc = makeChecksumAlgorithm();
                crc.update(bytes, 0, bytes.length);
                if (crcValue != crc.getValue())
                    throw new IOException(CRC_ERROR);
                if (bytes == null || bytes.length == 0)
                    return false;
                hdr = new TxnHeader();
                record = SerializeUtils.deserializeTxn(bytes, hdr);
            } catch (EOFException e) {
{noformat}

I think one bug there is that we check again "if (bytes == null || bytes.length == 0)", but this doesn't seem to be related to you problem., I am seeing this too on ZooKeeper 3.4.6

{noformat}
2015-11-26 18:51:58,514 [myid:3] - ERROR [LearnerHandler-/54.172.221.124:57966:LearnerHandler@633] - Unexpected exception causing shutdown while sock still open
java.net.SocketTimeoutException: Read timed out
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.socketRead(Unknown Source)
        at java.net.SocketInputStream.read(Unknown Source)
        at java.net.SocketInputStream.read(Unknown Source)
        at java.io.BufferedInputStream.fill(Unknown Source)
        at java.io.BufferedInputStream.read(Unknown Source)
        at java.io.DataInputStream.readInt(Unknown Source)
        at org.apache.jute.BinaryInputArchive.readInt(BinaryInputArchive.java:63)
        at org.apache.zookeeper.server.quorum.QuorumPacket.deserialize(QuorumPacket.java:83)
        at org.apache.jute.BinaryInputArchive.readRecord(BinaryInputArchive.java:103)
        at org.apache.zookeeper.server.quorum.LearnerHandler.run(LearnerHandler.java:546)
2015-11-26 18:51:58,514 [myid:3] - WARN  [LearnerHandler-/54.172.221.124:57966:LearnerHandler@646] - ******* GOODBYE /54.172.221.124:57966 ********

{noformat}, [~kellyfj] I don't think it is the same issue, check the stack trace. In your case, it could be that you have a large snapshot to transfer and you need to increase the initLimit parameter.]