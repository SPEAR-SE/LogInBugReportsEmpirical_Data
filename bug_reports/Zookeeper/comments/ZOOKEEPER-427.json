[Attached a jstack and the zookeeper logfile., satish, can you just try strace to see which one of thread is spinning? 
also, with the log files it seems like you are doing a lot of trasactions through some other zookeeper server? , I ran: strace -o zookeeper-strace.log -p6883

So far nothing in the logfile.

less zookeeper-strace.log

futex(0x404079d0, FUTEX_WAIT, 6884, NULL
, Attached zoo.cfg file., satish for strace 

you will have to do an strace on all the pid's in

/proc/6883/tasks/

to see which of the threads is spinning and on what... , oops!  Sorry, Mahadev, I already bounced that zookeeper server, (it's a production server, so I didn't want to leave it flapping for too long)  and it's been behaving well since.  If I can reproduce the problem I will run strace as you have suggested., no worries satish,
 I hope we could have gotten that trace though... We had seen similar behavior in another jira ZOOKEEPER-287, and wanted to make sure if both are caused by similar problems. I have linked these two together. Do update the jira in case you run into this again.

, I found DIRMINA-678 which looks the same as what we are seeing.

Basically nio in the 1.6 jdk is broken and afaict it's not fixed until jdk7:
http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6403933

There's a potential work around used by grizzly/mina that recreates the selector if this
problem occurs. We should look at creating a test for this and fixing in 3.2 if we can have
high confidence in the patch.
, Hi!

I think, that problem is not in nio, but in QuorumCnxManager.

Manager start while-loop when channel is connected and start wait msgLength in read call.
At this moment process from other side stops and "read" return "-1"
But there is no checking of "read" return value, so loop become infinite.

Please, look at my patch, it works for my case., +1, great catch! As the original patch does not apply correctly and doesn't have the correct file name, I'm uploading a new patch. Unit tests pass for me just fine.

, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12411045/ZOOKEEPER-427.patch
  against trunk revision 786156.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/124/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/124/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/124/console

This message is automatically generated., +1 great catch! thanx for the patch!, Committed revision 786251., Integrated in ZooKeeper-trunk #354 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/354/])
    ]