[This is does the bare minimum (i.e.: doesn't crash when reading a bad zookeeper_limits znode). We could probably do more, i.e.: sanitize zookeeper_limits znodes as they are being created/updated (the reconfig commands do this). But since the quotas stuff might change (it's very basic currently) Maybe we don't want to set validations yet.

Thoughts?

cc: [~phunt], [~shralex], [~hdeng], Raul, could you also add a test for this ?

The parsing function checks the first split but has these two statements that can also fail, without checks:

        count = Integer.parseInt(split[0].split("=")[1]);
        bytes = Long.parseLong(split[1].split("=")[1]);

perhaps its better to use a Properties object for parsing the string or something similar, not sure.

Its also weird that updateCount and updateBytes are almost identical and yet they are two different functions, so create and delete have to call them both in a sequence doing twice the same things essentially.

, Thanks for the quick review [~shralex], I've addressed the items you mentioned., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12664289/ZOOKEEPER-2019.patch
  against trunk revision 1620111.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2300//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2300//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2300//console

This message is automatically generated., Failures seem unrelated:

{noformat}
    [exec]     [junit] 2014-08-26 02:53:32,839 [myid:] - INFO  [main:JUnit4ZKTestRunner$LoggedInvokeMethod@62] - TEST METHOD FAILED testReadArrayOffsetLength_LengthTooLarge
     [exec]     [junit] 2014-08-26 02:56:13,636 [myid:] - INFO  [main:JUnit4ZKTestRunner$LoggedInvokeMethod@62] - TEST METHOD FAILED testTooManySnapshotsNonessential
     [exec]     [junit] 2014-08-26 02:56:13,641 [myid:] - INFO  [main:JUnit4ZKTestRunner$LoggedInvokeMethod@62] - TEST METHOD FAILED testTooManySnapshotsEssential
     [exec]     [junit] 2014-08-26 02:56:13,650 [myid:] - INFO  [main:JUnit4ZKTestRunner$LoggedInvokeMethod@62] - TEST METHOD FAILED testTryWithResourceThrottle
     [exec]     [junit] Test org.apache.zookeeper.test.NioNettySuiteHammerTest FAILED (crashed)
     [exec]     [junit] 2014-08-26 03:21:37,644 [myid:] - INFO  [main:JUnit4ZKTestRunner$LoggedInvokeMethod@62] - TEST METHOD FAILED testPortChange
     [exec]     [junit] 2014-08-26 03:21:37,683 [myid:] - INFO  [main:ZKTestCase$1@70] - FAILED testPortChange
     [exec]     [junit] Test org.apache.zookeeper.test.ReconfigTest FAILED
     [exec]     [junit] 2014-08-26 03:24:11,194 [myid:] - INFO  [main:JUnit4ZKTestRunner$LoggedInvokeMethod@62] - TEST METHOD FAILED testTwoInvalidHostAddresses
     [exec] BUILD FAILED
{noformat}, Thanks Raul! I made a small change to the code that was doing the parsing, take a look. The motivation is to check not only the numbers but also the strings 'count' and 'bytes' and throw an exception if something is wrong. , This indeed reads much better, thanks [~shralex]! Much easier to extend (i.e.: I suspect we'll want to add more things like write/read rates, etc.) too. , -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12664311/ZOOKEEPER-2019-ver1.patch
  against trunk revision 1620111.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2301//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2301//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2301//console

This message is automatically generated., +1, failures look unrelated.
, [~shralex]: slightly worried about the perf implications of parsing the stats & limits znodes on *every* request (plus the costs of instantiating a Properties object, etc.)... thoughts?, well, I see that DataTree uses a trie to find the max prefix with quota before going to the znodes and doing parsing.
unfortunately the info in each trie node is just a boolean. But I guess each node could also store an object
such as StatsTrack, which could make things a bit faster., [~rgs], should I commit this ? , [~shralex]: I'd say yes, to have basic safety checks, and we can revisit afterwards - thanks Alex!, Any insight on how big an impact this is to performance? You could use zkpython for e.g. to try a few scenarios..., I do some change and also address the perf concern., Also created a RB: https://reviews.apache.org/r/25968/, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12670848/ZOOKEEPER-2019-v2.patch
  against trunk revision 1626008.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2347//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2347//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2347//console

This message is automatically generated., fix findbug warning., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12670883/ZOOKEEPER-2019-v3.patch
  against trunk revision 1626008.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2348//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2348//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2348//console

This message is automatically generated., The previous v3 was a wrong one uploaded..., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12670891/ZOOKEEPER-2019-v3.patch
  against trunk revision 1626008.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2349//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2349//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2349//console

This message is automatically generated., [~rgs][~shralex]

I made an optional quota and limit stat inside DataNode. This makes parsing only required on first time., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12670891/ZOOKEEPER-2019-v3.patch
  against trunk revision 1672934.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2621//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2621//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2621//console

This message is automatically generated., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12670891/ZOOKEEPER-2019-v3.patch
  against trunk revision 1748630.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3220//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3220//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3220//console

This message is automatically generated.]