[here is the code that seg faults:

{code}
     len = res.data.len;
1628                            } else {
1629                                len = sc->u.data.buff_len;
1630                            }
1631                            sc->u.data.buff_len = len;
1632                            memcpy(sc->u.data.buffer, res.data.buff, len);
1633                            sc->u.data.stat = res.stat;
1634                            deallocate_GetDataResponse(&res);
{code}
, ok this took me a while to figure out, since its a weird corner case. The c library as it is supports NULL. So you can do a create of a node with NULL and read it back. This will work. But the problem arises when you do a create with the java client with data as NULL and read it from the c client. The other way round works fine. The problem being that the java code serializes the NULL buffer as -1 and the c code does it with serializing as 0 and does not handle -1 on deserialization or serialization. We should fix the c recordio to handle this. Ill upload a patch soon., this patch fixes the issue with NULL being compatible in both java and c. Added a test in c as well... , you have a hard coded path that is specific to your machine mahadev., removed the path, from the patch...
, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12408622/ZOOKEEPER-402.patch
  against trunk revision 776889.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/80/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/80/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/80/console

This message is automatically generated., The specific changes look good, however I think we should include the following:

1) I don't see this documented in zookeeper.h api docs, please update the api docs for create/set/get
2) the tests should test all methods - set for example is not tested

What methods are impacted? create/get/set, that's it? Do the async versions of the methods
also need to be tested, or is that covered by the sync?
, valid points pat... 

- added comments to zookeeper.h 
- added test for zoo_set
- also, the async apis are tested via athe sync apis.
, +1 looks good. thanks Mahadev
Committed revision 777265., Integrated in ZooKeeper-trunk #321 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/321/])
    . zookeeper c library segfaults on data for a node in zookeeper being null
]