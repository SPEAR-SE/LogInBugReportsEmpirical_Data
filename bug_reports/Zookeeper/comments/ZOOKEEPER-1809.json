[Small testapp which demonstates the issue.  Depends on Curator (v1.3.3) and SLF4J (1.6+).  , complete log file (client and server in the same file) showing a run of the attached testapp when the problem occurred., This could be related or even a duplicate of ZOOKEEPER-1740. Could you please check?, The bug seems identical, execpt that ZOOKEEPER-1740 was targeted to the 3.3 branch.  This is occurring on 3.4.5., After re-running the app for 15mins, I was able to reproduce the issue against a build of 3.5.0 I made from the latest trunk source, I'm confused, the description says that the ephemeral is deleted after the session expiration. Is that a typo or the ephemeral is eventually deleted?

In any case, I remember having a discussion not too far back on the list and it might be related to this. I believe that expiring a session and deleting the ephemerals are not done atomically. The contract is that the ephemeral won't be deleted while the session is expired, not that it will be deleted at the exact time the session expires. So it is possible that you find the ephemeral still there for some short period of time. This is safe. 

We have a problem if it never goes away., No, its not a typo, but it may be a bit misleading.  The ZK log indicates that the ephemeral node has been deleted, then at a later point in time the app tries to recreate the node but gets a "NodeExists".  This can been seen in the logs from these lines

{noformat}
...
2013/11/06 13:46:03,080 DEBUG [SyncThread:0] Deleting ephemeral node /test for session 0x1422bbb36d10002
...
2013/11/06 13:46:04,475 INFO  [ProcessThread(sid:0 cport:-1):] Got user-level KeeperException when processing sessionid:0x1422bbb36d10003 type:create cxid:0x3 zxid:0xc txntype:-1 reqpath:n/a Error Path:/test Error:KeeperErrorCode = NodeExists for /test
{noformat}

Because of the ordering of these messages, I would assume the request should have succeeded.  Currently, the testapp exits as soon as the NodeExits exception is thrown so I dont know if the node eventually is deleted or not.  I suspect that it is though.

If I cannot be guarnateed that my ephemeral nodes will be deleted after a session expiry, what is the recommended practice for recreating ephemeral nodes?  Should I just keep polling the server until all of those nodes go away?, Sorry everyone, this is my bad.  I took a closer look at the ZK logs and noticed that a "create" request is made immediately after being reconnected to the ZK cluster.  My RetryPolicy is causing a recovery attempt from a previous session to create the ephemeral node immediately after reconnecting to ZK, but before the new recovery attempt is made.  I will just have to change my code to handle session expiry while in the middle of a recovery., As indicated previously, this was a problem with the way the testapp was handling reconnect and not a problem with ZK.  Closing the issue., No problem [~shauns] - for future reference (and others looking at this jira) I've found it helpful to use the LogFormatter tool to dump the logs when attempting to debug such issues. It will give insight into the operations being performed. log4j logs are great, but this can often be even better.]