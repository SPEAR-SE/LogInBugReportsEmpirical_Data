[-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12764068/ZOOKEEPER-2284-01.patch
  against trunk revision 1705482.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2894//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2894//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2894//console

This message is automatically generated., Thanks for the patch [~arshad.mohammad]! As you are doing a clean File treatment, would you mind to detect if the File is readable ({{file.canRead()}}) and/or is a file ({{file.isFile()}}), too? I think that particularly the read permissions can be quite handy in a production environment., Thanks [~eribeiro] for your review comments. Handled the comments and submitting new patch ZOOKEEPER-2284-02.patch, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12764237/ZOOKEEPER-2284-02.patch
  against trunk revision 1705794.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2900//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2900//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2900//console

This message is automatically generated., Wow, very nice addition of a helper class + unit test. Some minor observations:

1. We can use temporary files in {{testValidateInpuFile}}:

{code}
testValidateFileInput() throws IOException {
     File file = new File(testData, "file.txt");
     file.createNewFile();
{code}

can be rewritten as:
{code}
testValidateFileInput() throws IOException {
        File file = File.createTempFile("file-", "txt", testData);
        file.deleteOnExit();
{code}

2. We can add a unit test to check the readability of the file as:

{code}
testUnreadableFileInput() throws IOException {
        File file = File.createTempFile("file-", "txt", testData);
        file.setReadable(false, false);
        file.deleteOnExit();
{code}

*IMHO*, I would write {{validateFileInput}} method by throwing exceptions and returning void if everything is okay. Therefore, in the unit tests I would structure them as:

{code}
   try {
      validateFileInput(...)
      fail("Should throw IOException")
   }
   catch (IOException ie) {
         assertEquals("File file-202.txt doesn't exists", ie.getMessage());
   }
{code}

*But I am definitely okay with the current way they are, so up to you. :)*, Thanks once again [~eribeiro] for your suggestions. Submitting new patch ZOOKEEPER-2284-03.patch
# Handled as per your suggestions
# On windows, I find no way to create a file which even does not have read permission. 
So if I write test case as you suggested it would fail on windows. I think it is better to test this scenario manually., {quote}
On windows, I find no way to create a file which even does not have read permission.
So if I write test case as you suggested it would fail on windows.
{quote}

Yes, this is a persistent problem for tests in the Hadoop codebase too.  We have tests that try to simulate broken data directories by restricting permissions, but Windows has logic that the owner/creator of the file/directory always has access, regardless of the NTFS ACL entries present on the file.  I've searched many times for a solution, but I've never found a good way to get these kinds of tests to work correctly on Windows.

In Hadoop, we still write these kinds of tests, but we use JUnit's {{assumeTrue}} to skip the tests on Windows.  That way, at least we get the coverage on Linux.  It looks like we could do something similar here with {{assumeTrue(!org.apache.zookeeper.Shell.WINDOWS);}}., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12764293/ZOOKEEPER-2284-03.patch
  against trunk revision 1705794.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2903//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2903//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2903//console

This message is automatically generated., Nice JUnit feature, Thanks [~cnauroth] for introducing me to this feature. 
Added new test suggested by [~eribeiro]., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12764303/ZOOKEEPER-2284-04.patch
  against trunk revision 1705794.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2904//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2904//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2904//console

This message is automatically generated., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12764303/ZOOKEEPER-2284-04.patch
  against trunk revision 1748630.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3213//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3213//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3213//console

This message is automatically generated., [~cnauroth] how do you see the latest patch? shall we get this in? , -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12764303/ZOOKEEPER-2284-04.patch
  against trunk revision 73d6bf5353586e49740f77291d1fd98b07f916cc.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3544//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3544//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3544//console

This message is automatically generated., [~arshad.mohammad]

Are you still working on this? If not,Can I pick it up?, Please take it. Assigned to you., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12764303/ZOOKEEPER-2284-04.patch
  against trunk revision 4d7b9e8f34775261fed517d232094f0247a4d3cf.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3702//console

This message is automatically generated.]