[-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12667805/ZOOKEEPER-2033.patch
  against trunk revision 1623916.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2325//console

This message is automatically generated., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12667825/ZOOKEEPER-2033.patch
  against trunk revision 1623916.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    -1 javac.  The patch appears to cause tar ant target to fail.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2326//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2326//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2326//console

This message is automatically generated., This issue seems to be already fixed in the trunk and only affects 3.4.x series., Thanks for reporting this issue. Can we backport the change to trunk that fixed this? I haven't thought too carefully about this issue, but just removing the line that sets the last processed zxid doesn't smell right. , I am not sure why the last committed zxid is set to the new leader's zxid on startup. There has been no modification to the tree and it has not been persisted to disk.

This currently only affects peers that are getting SNAP. Peers that use the DIFF mechanism to sync will only get up till the maxCommittedLog, which will never include this fake zxid!

If we remove this set. Any new Request that comes in would up the last committed zxid properly to the the new epoch when it has been properly persisted.

From DataTree.java 
        /*
         * A snapshot might be in progress while we are modifying the data
         * tree. If we set lastProcessedZxid prior to making corresponding
         * change to the tree, then the zxid associated with the snapshot
         * file will be ahead of its contents. Thus, while restoring from
         * the snapshot, the restore method will not apply the transaction
         * for zxid associated with the snapshot file, since the restore
         * method assumes that transaction to be present in the snapshot.
         *
         * To avoid this, we first apply the transaction and then modify
         * lastProcessedZxid.  During restore, we correctly handle the
         * case where the snapshot contains data ahead of the zxid associated
         * with the file.
         */
        if (rc.zxid > lastProcessedZxid) {
        	lastProcessedZxid = rc.zxid;
        }, LearnerHandler::syncFollower was refactored out of LearnerHandler::run which seems to address this. It simply sends an empty diff now if the zxid matches, Added a patch that sends an empty diff if the zxid's match., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12667913/ZOOKEEPER-2033-3.4.patch
  against trunk revision 1623916.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2328//console

This message is automatically generated., Patch generally lgtm. Could you take a look [~fpj]? I'll try to restart CI as well. Thanks!, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12667913/ZOOKEEPER-2033-3.4.patch
  against trunk revision 1676359.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2661//console

This message is automatically generated., [~fpj]: any comments on the patch?, I'll have a closer look [~rgs]., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12667913/ZOOKEEPER-2033-3.4.patch
  against trunk revision 1697227.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2837//console

This message is automatically generated., I believe the real issue is that proposals should have be empty in this case and it isn't. It seems that the leader is populating committedLog and generating a snapshot by the end of the synchronization phase, but it is not updating the committedLog list accordingly. 

I don't know if [~asadpanda] is still interested in finishing this up after such a long time, but I can give it a shot otherwise. , On a second thought, this change looks good, +1. If no one says anything by the end of the day, I'll check this one in., Committed revision 1701146., Thanks [~fpj]!, And thanks [~asadpanda]!]