[GitHub user andschwa opened a pull request:

    https://github.com/apache/zookeeper/pull/335

    ZOOKEEPER-2874: Windows Debug builds don't link with `/MTd`

    When building in Debug configuration, this logic ensures that `/MTd` is
    used instead of just `/MT`, which on Windows means to link to the
    multi-threaded (debug) version of the standard library.
    
    When the user does not add `/MT` as a compile option manually, CMake
    would otherwise link to the correct one. Because we are overriding it
    for threaded compilations, we also must ensure that Debug configurations
    are specially handled.
    
    Furthermore, this must be done using a generator expression over
    configuration time logic because the Visual Studio CMake generators are
    "multi-configuration generators", that is, the configuration is chosen
    at build time instead of compile time. The generator expression handles
    this scenario, but checking `CMAKE_BUILD_CONFIG` would not.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/andschwa/zookeeper ZOOKEEPER-2874

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/335.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #335
    
----
commit 554e20e1f63c02e058f05010868c3f6b5a4b1f2c
Author: Andrew Schwartzmeyer <andrew@schwartzmeyer.com>
Date:   2017-08-11T22:03:28Z

    ZOOKEEPER-2874: Windows Debug builds don't link with `/MTd`
    
    When building in Debug configuration, this logic ensures that `/MTd` is
    used instead of just `/MT`, which on Windows means to link to the
    multi-threaded (debug) version of the standard library.
    
    When the user does not add `/MT` as a compile option manually, CMake
    would otherwise link to the correct one. Because we are overriding it
    for threaded compilations, we also must ensure that Debug configurations
    are specially handled.
    
    Furthermore, this must be done using a generator expression over
    configuration time logic because the Visual Studio CMake generators are
    "multi-configuration generators", that is, the configuration is chosen
    at build time instead of compile time. The generator expression handles
    this scenario, but checking `CMAKE_BUILD_CONFIG` would not.

----
, Github user andschwa commented on the issue:

    https://github.com/apache/zookeeper/pull/335
  
    @hanm This should be backported to 3.5 and 3.4 as well; it should be a trivial cherry-pick, but let me know if you'd like two more PRs.
, Github user andschwa commented on the issue:

    https://github.com/apache/zookeeper/pull/335
  
    Built on Windows:
    
    ```powershell
    > cmake --build . --config Debug
    > cmake --build . --config Release
    > rg libcmt
    cli.dir\Debug\cli.tlog\link.read.1.tlog
    17:C:\PROGRAM FILES (X86)\MICROSOFT VISUAL STUDIO\2017\COMMUNITY\VC\TOOLS\MSVC\14.10.25017\LIB\X86\LIBCMTD.LIB
    
    cli.dir\Release\cli.tlog\link.read.1.tlog
    17:C:\PROGRAM FILES (X86)\MICROSOFT VISUAL STUDIO\2017\COMMUNITY\VC\TOOLS\MSVC\14.10.25017\LIB\X86\LIBCMT.LIB
    ```
    
    As you can see from the logs, the correct library is now being linked. I've also integration tested this with Mesos, and it has eliminated the warning.
, +1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/940//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/940//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/940//console

This message is automatically generated., Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/335
, Issue resolved by pull request 335
[https://github.com/apache/zookeeper/pull/335], Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/335
  
    Committed to master: ab182d4561f1c6725af0e89e0b76d92186732195
    branch-3.5: 8f68c04838c3d034bcef7e937a3c23f3cfef8065
    branch-3.4: b903a07c4944cb0a90045e686b7c3f153aee6153
, Github user andschwa commented on the issue:

    https://github.com/apache/zookeeper/pull/335
  
    Thank you @hanm!
, SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3503 (See [https://builds.apache.org/job/ZooKeeper-trunk/3503/])
ZOOKEEPER-2874: Windows Debug builds don't link with `/MTd` (hanm: rev ab182d4561f1c6725af0e89e0b76d92186732195)
* (edit) src/c/CMakeLists.txt
]