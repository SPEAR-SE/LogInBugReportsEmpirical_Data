[GitHub user andrewgaul opened a pull request:

    https://github.com/apache/zookeeper/pull/10

    ZOOKEEPER-1890: Close FileOutputStream in FileTxnLog

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/maginatics/zookeeper close-stream-filetxnlog

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/10.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #10
    
----
commit 37b41819a8956f191f08d0414d05b0f78f83bde2
Author: Andrew Gaul <gaul@maginatics.com>
Date:   2014-02-28T01:16:08Z

    ZOOKEEPER-1890: Close FileOutputStream in FileTxnLog

----
, Attached patch, also available as a pull request:

https://github.com/apache/zookeeper/pull/10, I appreciate this patch, but I see a problem.

In SyncRequestProcessor.java::run()
After zks.getZKDatabase().rollLog(), the request being processed will be added to the toFlush list at the bottom of the loop.
At the top of the loop, toFlush will then be non-empty.  So we go into the else block, where queuedRequests.poll() can return null if there are no more waiting requests.  In that case we will try to flush.  However, because we closed the fos associated with the request the flush can fail with a ClosedChannelException.

Can we just catch and ignore the ClosedChannelException?, Github user andrewgaul closed the pull request at:

    https://github.com/apache/zookeeper/pull/10
]