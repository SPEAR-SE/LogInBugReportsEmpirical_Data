[i will soon upload the patch with testcase., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12498757/ZOOKEEPER-1220.patch
  against trunk revision 1180217.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/617//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/617//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/617//console

This message is automatically generated., thanks for the contribution, this is a good thing to fix.

A few comments on the patch before it's ready to commit:

checkPathExists should be removed, or at least only checking a single argument. Notice that this method returns true if "first+2" starts with '/', however the caller expects path to be "first+1". If you do decide to keep it you might want to change the name (implies that it's checking if the path exists as a znode, not that the argument is a path)., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12500659/ZOOKEEPER-1220.1.patch
  against trunk revision 1188523.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/661//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/661//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/661//console

This message is automatically generated., Hi Patrick,

i corrected the patch along with that
i have added some more testcases for zkcli.which i found as part of the correction.

thanks a lot.  , Thanks Kavita! Committed to trunk/3.5.0

PS. If you're interested in improving the CLI more please take a look at http://commons.apache.org/cli/ - I think it would be great to convert all of our ad-hoc cli parsing over to using this.

Regards., Thanks Patrick...!!!, Integrated in ZooKeeper-trunk #1347 (See [https://builds.apache.org/job/ZooKeeper-trunk/1347/])
    ZOOKEEPER-1220. ./zkCli.sh 'create' command is throwing ArrayIndexOutOfBoundsException (kavita sharma via phunt)

phunt : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1189823
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/ZooKeeperMain.java
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/ZooKeeperTest.java
, Thank you for your contribution. However could we change the new testcase ZooKeeperTest.testCreateNodeWithoutData() a bit?
The test asserts the exact wording of the exception message in case of an illegal Path. Therefor this test failed for me, since I'm also reworking the internal path handling of ZK and changed the message a bit.
I think the exact exception message is not part of the public API and therefor should not be asserted in a test. Only the type of the exception should be tested., Attaching patch:

- remove the assertion on the exception message
- removed two assertXYZ methods that are never evaluated, since a parameter expression throws an expected exception, like:

{code:java}
         try {
-            Assert.assertFalse(zkMain.processZKCmd(zkMain.cl));
+            zkMain.processZKCmd(zkMain.cl);
             Assert.fail("Path doesn't exists so, command should fail.");
         } catch (KeeperException e) {
{code}

code formatting:
- replaced some tabs with spaces
- removed some offending newlines, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12501286/ZOOKEEPER-1220.patch
  against trunk revision 1190073.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/716//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/716//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/716//console

This message is automatically generated., Cancelled the patch for now due to  unnecessary, incorrect reformatting of line wraps (80 char is our limit).

It's ok here, but for future reference, once a jira is resolved, unless we roll it back for some reason, you should create a new jira to make addl changes, otw it becomes confusing as to what changes the jira caused. (esp here as there are patches of differing names - typ all patches should be named ZOOKEEPER-####.patch unless multiple patches are needed to address differing branches, see how to contribute page for zk for details). For this jira feel free to update the patch in place, but for future reference just create a new jira and link to this one.
, Hi Patrick,

This patch only for correcting the line wraps(80 character) thing.If some other issues are also their plz let me know.

Thanks
, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12505084/ZOOKEEPER-1220.2.patch
  against trunk revision 1202557.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/797//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/797//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/797//console

This message is automatically generated., Kavita,
 Looks like you forgot to grant license to apache with the latest patch. Can you please do so? 

Thanks, Yes ..thank u !!, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12507330/ZOOKEEPER-1220.2.patch
  against trunk revision 1212663.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/828//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/828//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/828//console

This message is automatically generated., I committed the line formatting change. Thanks!, Hi Pat, Thanks for reviewing and committing.!!!

, Integrated in ZooKeeper-trunk #1397 (See [https://builds.apache.org/job/ZooKeeper-trunk/1397/])
    ZOOKEEPER-1220 - minor fixup (formatting) to the previously applied 1220 patch

phunt : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1214528
Files : 
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/ZooKeeperTest.java
]