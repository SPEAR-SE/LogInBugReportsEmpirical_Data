[this is the same issue as ZOOKEEPER-707. It should be very hard to reproduce. THis is surely a bug. I will upload a patch soon and we can get this in 3.3.2.
, I ran the c tests 3 times and it failed with the same error each time. Let me know if I can help you verify the fix.
, great... I cant reproduce it on my machine. I rarely see this error., I haven't been able to reproduce it, but it looks like we shouldn't assert(cptr) if zookeeper_close has been called (zookeeper.c line 1950). Can we do something like:

completion_list_t *cptr = dequeue_completion(&zh->sent_requests);
if (zh->close_requested == 1) {
    // zookeeper_close has been called. No need to assert cptr. Just free it if it's not NULL
    if (cptr) {
        destroy_completion_entry(cptr);
    }
   // some more cleanup?
   return ZINVALIDSTATE;
}

// zookeeper_close hadn't been called when we called dequeue_completion. cptr must not be NULL. 
assert(cptr);

--Michi, This patch modifies zookeeper_process() function. After dequeue_completion() is called, it checks if zookeeper_close has been called. If it has been called, it returns ZINVALIDSTATE.

--Michi, +1 for the patch. Pat can you please try it out and see it fixes the test cases? I will go ahead and commit if it passes for you., +1 -- I ran this a number of times (~10) and it passed each time. Ship it., I just committed this. thanks michi!, Integrated in ZooKeeper-trunk #958 (See [https://hudson.apache.org/hudson/job/ZooKeeper-trunk/958/])
    ZOOKEEPER-804. c unit tests failing due to "assertion cptr failed" (michi mutsuzaki via mahadev)
, Should the return statement of this patch be:

return api_epilog(zh,ZINVALIDSTATE);

Otherwise, it seems possible that the reference counting could get off in this case., Reopening due to issue raised with the patch (see earlier comment).

Is this an issue that should be addressed or ok to resolve?, It seems like zookeeper_process unnecessarily calls api_prolog() and api_epilog() to begin with.  But given that api_prolog() is called at the beginning, if this new code path executes while a close is requested, then the threads will successfully exit, but the final part of zookeeper_close that releases the memory on the last reference will not execute (since the last reference will never be reached).  Unless I'm missing something, this will leak the zkhandle., Not sure what the protocol is here, but I'm gonna go ahead and attach a revised patch., Jared, thank you for volunteering to fix this. I haven't had a chance to take care of it.

--Michi, Thanks Jared, I missed your question on IRC (you had quit before I got back). What you've submitted is fine, in general though you should  just submit a patch against the current svn (so a diff against code which already had the original patch committed to it).

Michi, can you (also ben/mahadev) review this and let me know if it's ok to commit, I'll commit it if you guys sign off. Thanks all!
, The patch looks good, but I can't seem to apply it. Has anybody seen this error?

$ cd branch-3.3
$ patch -p0 <  ZOOKEEPER-804.patch 
patching file src/c/src/zookeeper.c
Hunk #1 FAILED at 1947.
1 out of 1 hunk FAILED -- saving rejects to file src/c/src/zookeeper.c.rej

--Michi, That probably failed because the first patch is already applied, so this patch doesn't exactly apply to your trunk.  I can open a new bug and submit a patch that way if its preferred., +1.

> I can open a new bug and submit a patch that way if its preferred. 

No worry, it's not a big deal since this is a one line change. 

Thanks again, Jared!
--Michi, Updated patch to apply against latest trunk (hopefully branch too)., +1 on the second patch. Tested and it seems fine, committed to trunk/branch33 both., Integrated in ZooKeeper-trunk #973 (See [https://hudson.apache.org/hudson/job/ZooKeeper-trunk/973/])
    ZOOKEEPER-804. c unit tests failing due to "assertion cptr failed" (second patch)
]