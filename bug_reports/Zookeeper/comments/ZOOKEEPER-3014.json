[Hi [~tassemble]

Thanks for the bugreport.

Maybe I'm missing something here, but 2 things are suspicious in your explanation:
 # "it calls the exist command with watch periodically to check if it is available"

Why periodically?

Client should call the exist() method with a watcher parameter and check the return value:

if exists() returns null, the node doesn't exist, otherwise the watcher will be triggered whenever the state changes. No need to call this manually.

      2. "the code doesn't check node existence"

Which code? 

DataTree.statNode() does it indeed when checks for (n == null)., Sorry, "periodically " may be misleading. May be some other cases, for example, there are threads continually  to watcher one znode by calling exist(). And during this time, the znode is removed, can these watchers  be added to a path which znode is not exist? 

I am using curator 2.1.0 and zk is 3.4.5. The follow code is my test code. After I run this code ,i wish all the watchers at server should removed, but after all the znode are removed, some watchers stll exist. 
{code:java}
for (int i = 0; i < threadCount; i++) {
    final InterProcessMutex ipm = new InterProcessMutex(this.client, "/locks");
    final int seq = i;
    es.submit(new Runnable() {

        @Override
        public void run() {
            boolean acquire = false;
            try {
                //only one can acquire the locker
                acquire = ipm.acquire(20, TimeUnit.SECONDS);
                if (acquire) {
                    LOG.info("i am thread No.:" + seq);
                    //waiting
                    TimeUnit.SECONDS.sleep(30);
                } else {
                    LOG.info("acquired failed!, number:" + seq);
                }
            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    if (acquire) {
                        LOG.info("i am released, number:" + seq);
                        ipm.release();
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    });

}
{code}
The following picture shows the watchers are not removed. 

!image-2018-03-28-22-51-33-751.png!

 

 

 , here is the full code :https://github.com/Tassemble/zk-demo/blob/master/src/test/java/com/netease/edu/mooc/demo/zk/ZkApplicationTests.java, Thanks for the clarification. I'll look into it in more detail.

In the meantime, would you please test with the latest stable version of Curator/ZooKeeper to make sure you're not reporting an issue which is fixed already?

ZK 3.4.12 is coming soon you might want to wait for it before doing any test., Hi Andor Molnar.

I have tested these versions:

curator-recipes:2.1.0-incubating

zookeeper:3.4.3, 3.4.5,3.4.11, and the results are in the same. There are still some watchers not removed.

 

I also test these versions:

curator-recipes:4.0.1

zookeeper:3.5.3-beta

But find the problem is resolved.

 

 

 

 , I see curator 2.5.0 resolve the problem. The cause is that exists() will creates a watch regardless of whether the node exists or not, getData() will only create the watch if node exists.

https://issues.apache.org/jira/browse/CURATOR-107

 , Thanks [~tassemble]

So, CURATOR-107 is basically a workaround for an existing ZK issue, right?, I can't repro your issue for some reason.

Tested 3.4.12 with the code snippet your provided, but a few seconds after the execution finished (lock released, proc exited), all watches are removed.

Will try to compile your ZkApplicationTest.java to see if there's any difference., I've attached the console app that I was testing with., Sorry, ignore my previous comments. Now I see your point.

When you talked about exists() method, you were actually referring to Curator's checkExists(), which eventually calls exists(), so it doesn't really matter. Later Curator fixed the issue by calling getData() instead which - as you said - doesn't add watch if the node doesn't exist, so Curator doesn't leak watches anymore.

All fine.

But that's not an issue with ZooKeeper. You should be able to setup a watch on non-existent node to get notified when it gets created. That's a feature, so I think you can close this Jira as not-an-issue., Thank you [~andorm]. 

Yes, it is not a issue Of ZK, but a issue of curator before version 2.5.0.

 ]