[We have a solaris build queue on jenkins, I believe some of our users cared about it. I'm fine with Linux, but I'm not sure about removing mac os. I understand that folks don't run it in production, but many devs use macs to develop, so I think we should try to make it work on a mac. I'm not sure what to do about Windows. We don't have any committer or strong contributors to support Windows. There is even a recent jira with a .NET client that got very little attention. I personally don't have a machine to run windows tests any longer. , That solaris build on jenkins hasn't passed in years. I don't think there are many places even using solaris now. Joyent is the only one I can think off offhand. Which is a pity. 

Regarding Mac OSX, when you support something, I take it to mean, this will work in production for you and if it doesn't thats a major bug. It doesn't mean it won't work. That said I've no problem with having Mac OSX on the list. It does get plenty of testing on Mac in any case.

Windows, I think Huawei were using it on windows. Perhaps [~rakeshr] could enlighten us. , AFAIK in production both servers and clients uses Unix based systems like SuSE, RedHat, CentOS etc and not using Windows environment. But for the development and testing purpose we use Windows environment and running both servers/clients there. I feel it is OK to mention {{development platform}} in the document like today we have. I remember few people queried in the [mailing list about the Windows support|http://qnalist.com/questions/4669709/windows-support-win-64], In that case, I think Windows (and Mac) should be supported as development platform. We're clearly not supporting it in production as there's been a bug (ZOOKEEPER-2244) in 3.5 since it went out., bq. I think Windows (and Mac) should be supported as development platform
+1 from me. Will help in fixing ZooKeeper bugs reported on Windows platform. BTW I noticed [ZooKeeper|https://builds.apache.org/job/ZooKeeper-trunk-WinVS2008/] [windows build|https://builds.apache.org/computer/windows1] is not running, any one has idea about this., I know of multiple deployments running ZooKeeper in production on Windows (both client and server).  It would be great if the community can consider declaring Windows to be part of the official supported platform list.

Regarding the build, it looks like there is just a single Windows Jenkins host that can serve as executor for the job, and it appears to be offline.  This likely needs follow up with INFRA.  I'll aim to check with INFRA tomorrow, unless someone else beats me to it today., Thats really good news:), I filed INFRA-10116 to follow up on the outage with the host that was running the ZooKeeper Windows builds., Big thanks to [~ipv6guru] for resolving the Windows Jenkins host problem in INFRA-10116.  Here is a clean Windows build from 8/18:

https://builds.apache.org/job/ZooKeeper-trunk-WinVS2008/1825/
, Related to this, the Solaris build has been marked disabled.

https://builds.apache.org/job/ZooKeeper-trunk-solaris/

It has been failing on tests for a long time, even though compilation was fixed in ZOOKEEPER-1077.

I know [~alanburlison] has been driving some Solaris compatibility work over in Hadoop.  Alan, do your plans also include looking at ZooKeeper on Solaris?, I don't have any immediate plans but I can add it to the list to look at. I need to get Hadoop working first though ;-), Isn't zk support a prerequisite for hadoop on solaris? That said, zk support for solaris shouldn't be so hard. It doesn't require any jni stuff like hadoop does. However, if we do support it, we should have a build for it and we should gate commits on solaris builds passing also. , I'm happy to help/advise on the Solaris front but I'm not really clear what the problem is that needs fixing., hey [~alanburlison], you could check the jenkins build which has been failing forever., bq. Isn't zk support a prerequisite for hadoop on solaris?

ZooKeeper isn't strictly a requirement for Hadoop.  It becomes a requirement though if you want to run an HA deployment for some of the critical daemons like NameNode and ResourceManager.  Their HA architecture uses an active/standby pair coordinating on a distributed lock using ZooKeeper.  Realistic production deployments would want this functionality., It looks like we have a functional build after the ZOOKEEPER-1077 patch fixed the native code compilation problem.  However, it also looks like the Solaris build has a long history of intermittent test failures that don't repro in other environments.  I expect getting to a completely green build would require trying to repro the test failures on Solaris and then investigating further to determine if there is a bad assumption in a test or a legitimate problem in the main ZooKeeper code., The ZooKeeper codebase at this point has multiple sub-components, and I wonder if the statement of support needs a more specific breakdown per component.

As Ivan pointed out, the main client and server pieces don't have any native code requirements.  I expect it isn't too much burden to support a wide variety of platforms for the client and server, as long as we stick to some rules in the Java code, like avoiding hard-coded file path separators.

Support gets a lot trickier for the native client.  In that case, we'd need a healthy base of contributors familiar with each platform and available to field bug reports.

Then there is contrib, where it seems like contributors are sparse.  Some contrib modules like zkfuse contain native code, so they'll have the same challenges as the native client.

Based on that, I wonder if we need something more like a matrix listing client/server/native client/etc. on one axis and OS on the other axis, and yes or no in each box.  Transitioning one of those boxes from no to yes ought to require some thought and agreement about whether or not the community is capable of taking on the extra support burden.  If not, then it might require recruiting some additional contributors to help before making the commitment., I wouldn't even try to support the native client in solaris until someone explicitly asks for that support. And the contrib modules, even less so. , I am working on getting all the native parts of Hadoop working properly on Solaris, I can take a look at Zookeeper after that. Having a matrix to help identify which bits to look at first would indeed be a big help., Ok. Lets check in again once there's a release pending and update the doc at that point., I'm attaching a trunk patch that shows what I had in mind for the support matrix.  For the content of the matrix (what we're committing to support), I summarized the conversation here that a few of us came to agreement on.  Please do check that I got this information right.

The only additional thing that wasn't discussed here is FreeBSD.  I added it to the matrix with support for the Java side but not the native side or contrib., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12756122/ZOOKEEPER-2243.001.patch
  against trunk revision 1702378.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2877//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2877//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2877//console

This message is automatically generated., [~cnauroth] patch lgtm, +1.

[~ikelly], [~fpj], [~rakeshr]: thoughts?, +1 looks good.

small nit: Please remove one extra space before {{Some components}} while committing the patch.
{code}
multiple components.  Some components
{code}, I just noticed that we'll need a slightly different patch file for branch-3.4.  On that branch, we have a mention that NIO support is broken in the JVM on FreeBSD.  This slightly different text causes the trunk patch to fail to apply.  As per discussion in ZOOKEEPER-1509, this is out-dated information, so I have removed this statement.

[~rgs] or [~rakeshr], could you please review the branch-3.4 patch too?  Once I have a +1 on that, I'll commit to all relevant branches.  Thanks!, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12773117/ZOOKEEPER-2243-branch-3.4.001.patch
  against trunk revision 1713774.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2959//console

This message is automatically generated., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12773117/ZOOKEEPER-2243-branch-3.4.001.patch
  against trunk revision 1728577.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3040//console

This message is automatically generated., [~rgs] and [~rakeshr], you have already +1'd the trunk patch.  Could I also please get a +1 for the slightly different branch-3.4 patch so we can close this out?  Thank you., Thanks [~cnauroth], +1 {{branch-3.4}} patch looks good to me., I have committed this to trunk, branch-3.5 and branch-3.4.  Everyone, thank you for the discussion and reviews., FAILURE: Integrated in ZooKeeper-trunk #2833 (See [https://builds.apache.org/job/ZooKeeper-trunk/2833/])
ZOOKEEPER-2243: Supported platforms is completely out of date (cnauroth) (cnauroth: [http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1729259])
* trunk/CHANGES.txt
* trunk/src/docs/src/documentation/content/xdocs/zookeeperAdmin.xml
]