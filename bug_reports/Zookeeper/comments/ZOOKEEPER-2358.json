[Match NIOServerCnxn logic by removing watches before closing channel
Add Netty support to WatchLeakTest, Apply fix and test to branch-3.4, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12784807/ZOOKEEPER-2358-3.4.patch
  against trunk revision 1726354.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3016//console

This message is automatically generated., Need to fix patch format, Fix line endings in patch files, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12784997/ZOOKEEPER-2358-3.4.patch
  against trunk revision 1726354.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 5 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3017//console

This message is automatically generated., Thanks for the patch, [~iandi]. It looks good, but I wonder if we should make WatchLeakTest parameterized and run it against both NIO and Netty. What do you think?, Possibly. Right now they are using two different strategies due to the different ways the test can access the internals. The existing test mocks the NIO socket and selection which works for NIO, but it was easier to do the Netty test end-to-end. The end-to-end test would work for NIO too, but it may not be necessary., Yeah, it is a bit odd to set up the cnxn factory on the setup method with netty, given that it is only necessary for one test case. The two options I see are to have the test case you're adding in a new class or not use a setUp method and do all that in testWatchLeakNetty. , The ClientBase superclass setUp method needs to be called after setting the property, so the second option might not work. I'll look into it and split into a separate class if necessary., [~fpj], [~iandi]: punting this for 3.4.9 (but do ping me when this is ready for review). , I am moving this out to 3.4.10 for now. Please click {{Submit Patch}} button once ready for review. Thanks!]