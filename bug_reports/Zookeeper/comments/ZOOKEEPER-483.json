[ryan,

 can you post (attach as files) server logs in different files for all you zookeeper servers? The one exception I can see if that you had problems with your disk but I am surprised to see it took down 2 of your other servers.

also, please explain the setup --  I am assuming all the servers are on different machines, and the logs and snapshots go to different disk?,  I meant - 

The one exception I can see IS (instead of IF)  that you had problems with your disk but I am surprised to see it took down 2 of your other servers., Someone is looking at this but I realized that we don't have any docs which detail supervision of the
ZooKeeper server jvms. In particular ZOOKEEPER-485 has been created to add this detail to the
documentation. Typically (although perhaps not always) you want to have supervision of the zk server 
processes - if the JVM exists abnormally for any reason the supervisor should notify the
operator and restart the ZK server process. We'll have to see what caused this issue, but in some
cases where a ZK server sees an un-recoverable problem (say the JVM heap is exhausted, etc...) 
the jvm process will exit -- the supervisor will need to restart the jvm., here is the complete log set from all 5 of our quorum members for the entire day. note that the event happens around 12:30 pm local (PDT) time in the log.  I restarted the 3 crashed machines at about 13:30.

They were not run under supervision, but clearly they should.  The machines in question only have 1 disk, since they also run other hadoop things, and I was hoping that the quorum model would provide reliability even if the local disk isnt 100%.  Although, having said that, the local disk seems to be ok, since nothing else on them has died., sorry I misread the exception , thanks pat for pointing it out 

- it looks like the followers could not send acks back to the leader and thus exited. If you have monitoring in place, you should check for any network problems that might have happend during that time. Usually we run our zookeeper servers as daemons that are restarted autamtically if they fail. So in this case the servers that failed would have automatically restarted.
- also, http://hadoop.apache.org/zookeeper/docs/r3.2.0/zookeeperAdmin.html#sc_CrossMachineRequirements has some hints on setting up your environment (servers on different rack/switch etc.). you might want to read through it., marking it for 3.2.1 for now..., ryan,
 ben just noticed this. this is the exception from your trace - 
{code}
ava.net.SocketException: Socket closed
at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:99)
at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:65)
at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:123)
at org.apache.zookeeper.server.quorum.Follower.writePacket(Follower.java:100)
at org.apache.zookeeper.server.quorum.SendAckRequestProcessor.flush(SendAckRequestProcessor.java:52)
at org.apache.zookeeper.server.SyncRequestProcessor.flush(SyncRequestProcessor.java:131)
at org.apache.zookeeper.server.SyncRequestProcessor.run(SyncRequestProcessor.java:76)

{code}

We only put flush in SyncRequestProcessor in 3.2. Are you sure you are using 3.1.1? 




, Mahadev, we now include a bunch of environment information in the server log when it starts up, the following
can be found in a few of the logs that Ryan attached:

2009-07-23 13:27:39,363 INFO org.apache.zookeeper.server.ZooKeeperServer: Server environment:zookeeper.version=3.2.0--1, built on 05/15/2009 06:05 GMT

Looks to me like it's not an official release, afaict something between 3.1 and 3.2 (built 5/15/2009), perhaps Ryan can shed more light
on the specifics.
, This is interesting, from hbase-hadoop-zookeeper-sv2borg153.log

2009-07-23 12:29:01,661 INFO org.apache.zookeeper.server.quorum.Follower: shutdown called
java.lang.Exception: shutdown Follower
	at org.apache.zookeeper.server.quorum.Follower.shutdown(Follower.java:427)
	at org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:498)

I don't see any further quorum messages until ~11 seconds later:

2009-07-23 12:29:12,516 FATAL org.apache.zookeeper.server.SyncRequestProcessor: Severe unrecoverable error, exiting
java.net.SocketException: Socket closed
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:99)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:65)
	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:123)
	at org.apache.zookeeper.server.quorum.Follower.writePacket(Follower.java:100)
	at org.apache.zookeeper.server.quorum.SendAckRequestProcessor.flush(SendAckRequestProcessor.java:52)
	at org.apache.zookeeper.server.SyncRequestProcessor.flush(SyncRequestProcessor.java:131)
	at org.apache.zookeeper.server.SyncRequestProcessor.run(SyncRequestProcessor.java:76)
2009-07-23 12:29:12,559 WARN org.apache.zookeeper.server.NIOServerCnxn: Exception causing close of session 0x0 due to java.io.IOException: ZooKeeperServer not running

SRP should be running/active if the QP is not following the leader?
, In hbase we have a custom version, here it is:

zookeeper-r785019-hbase-1329.jar

based on that svn #, and plus a small patch from hbase-1329. This was opened as ZOOKEEPER-457.

I think the problem might have happened when someone ran a heavy duty map-reduce with a major pile of disk IO intermediate output, which may have delayed zookeeper log writes. I'm looking to move the quorum to other machines., i was able to reproduce the problem. and the patch was a missing catch for a socket exception., Cancelling patch -- I see two issues with this patch that need to be addressed:

1) in two places the following code was added:

+                } catch (IOException e1) {
+                }

notice that the exception is not being logged. It should be logged as a warning

2) the flush method is declared to throw IOException, but we are eating it. Perhaps
it's ok in this situation? Regardless, having a comment here that states why
it's ok to eat the exception would be useful.

You sure we should be eating the exception here? rather than handling upstream?

I'm esp worried given that this class sendackrequestprocessor doesn't own the socket, but
we are closing the socket here (as part of the patch). Seems like a caution signal to me. Should
this be handled by higher level code? Perhaps other RPs will have smilar issue (ioexception
on flush that needs to be handled/cleanedup etc...)

, I've addressed 1) in the attached patch.

for 2) we are not eating the IOException. we are actually shutting things down. the bug is actually that we are passing it up to the upper layer, which does not know anything about the follower thread. we need to handle it here., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12415695/ZOOKEEPER-483.patch
  against trunk revision 801839.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/176/console

This message is automatically generated., fixed patch to apply cleanly., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12415974/ZOOKEEPER-483.patch
  against trunk revision 802188.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/182/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/182/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/182/console

This message is automatically generated., the test added with the patch failed on hudson.. ben can you take a look?, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12415974/ZOOKEEPER-483.patch
  against trunk revision 803000.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/185/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/185/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/185/console

This message is automatically generated., Integrated in ZooKeeper-trunk #412 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/412/])
    reverted: . ZK fataled on me, and ugly
. ZK fataled on me, and ugly
, i ran ant test -Dtestcase=QuorumTest after applying the patch for 6 times and out of 6 it crashed with the same problems that hudson noticed. I will post the logs as soon - (it crashes the jvm so junit fails to get the logs), i meant, it crashed 2 out of 6 times., the logs of one of the QuoruMTest failures on my machine., this is the code that is causing the system.exit() in the logs that I uploaded

File: FollowerZooKeeperServer.java - line 128

{code}
 if (pendingTxns.size() == 0) {
            LOG.warn("Committing " + Long.toHexString(zxid)
                    + " without seeing txn");
            return;
        }
        long firstElementZxid = pendingTxns.element().zxid;
        if (firstElementZxid != zxid) {
            LOG.fatal("Committing zxid 0x" + Long.toHexString(zxid)
                    + " but next pending txn 0x"
                    + Long.toHexString(firstElementZxid));
            System.exit(12);

{code}, attaching the log file with trace turned on..., The test case exposed another bug: log truncation was not being done properly with the buffered inputstream. i modified the test to make it fail reliably and then fixed the bug., just to be clear. this bug isn't completely fixed and the test case should still be failing. i just want to make sure it fails reliably on the hudson machine., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12416645/ZOOKEEPER-483.patch
  against trunk revision 803300.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/186/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/186/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/186/console

This message is automatically generated., ben,
 should me make the calss positioninputstream a seperate public class under persistence? It might be helpful for other use cases... just a thought.... , also, ben I think we should create a seperate jira for truncate and link it to this. We dont have to upload seperate patches, but just for accounting sakes., included in ZOOKEEPER-508, fix included in ZOOKEEPER-508.]