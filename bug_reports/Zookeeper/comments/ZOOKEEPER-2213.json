[This bug only appears to affect Set., It seems that ZK java client does a lot of checking locally before sending the packets to server:
https://github.com/apache/zookeeper/blob/26e8dd6e90726997a37965ef469e37a96ef7085f/src/java/main/org/apache/zookeeper/common/PathUtils.java#L43

As a result, if the server receives any kind of wrong path, it breaks the assumption:
https://github.com/apache/zookeeper/blob/26e8dd6e90726997a37965ef469e37a96ef7085f/src/java/main/org/apache/zookeeper/common/PathTrie.java#L258-L260

Such a user error shouldn't break server down. We can either return an error to client or just close the connection. Let me think about it more., [~hdeng]: so in PrepRequestProcessor we call PathUtils.validatePath() on create:

https://github.com/apache/zookeeper/blob/trunk/src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java#L388

but not for anything else. We should do it for probably all ops. , There is one more thing I'm not sure.

I thought SetData should return a NoNodeException but it didn't. That's because datatree treats empty string also as the root "/".

https://github.com/apache/zookeeper/blob/71401b4842b0486716f96d9ea3060d4fba65be96/src/java/main/org/apache/zookeeper/server/DataTree.java#L292

There is inconsistent assumption because path checking thinks that empty string is invalid..

Anyway, I agree with Raul that to fix this we only need to add validatePath() for SetData and SetACL. It's more stable to add the checking.

, Some nits:

In:

{code}
+    private void validatePath(String path, long sessionId) throws BadArgumentsException {
+        try {
+            PathUtils.validatePath(path);
+        } catch(IllegalArgumentException ie) {
+            LOG.info("Invalid path {} with session 0x{}", path, Long.toHexString(sessionId));
+            throw new KeeperException.BadArgumentsException(path);
+        }
+    }
{code}

given that we import KeeperException.BadArgumentsException, you can just do throw new BadArgumentsException(path).

Grammar nit in:

{code}
+     * It tests that if PrepRequestProcessor will return BadArgument KeeperException
+     * if the request path (if existed) is not valid, e.g. empty string.
{code}

* "Tests that PrepRequestProcessor will ..."
* (if it exists)

Other than that, +1. Thanks [~hdeng]!, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12738956/ZOOKEEPER-2213.patch
  against trunk revision 1683878.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2759//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2759//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2759//console

This message is automatically generated., Addressed comments and fix findbugs warning., I will come up with a patch for 3.4 branch if there is no other comment for current patch. Thanks! , -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12738963/ZOOKEEPER-2213.patch
  against trunk revision 1683878.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2760//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2760//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2760//console

This message is automatically generated., The findbugs warnings are unrelated to this bug though (i.e.: the changes in src/java/main/org/apache/zookeeper/server/quorum/LearnerHandler.java). Should we not do that in a separate commit? Sorry for push back, but keep the commits separate is a good thing in the long run (specially when reviewing history, etc). 

What do you think?, (Other than that, +1 again. But if possible, please less do the findbugs warnings in a separate patch). , Hi [~rgs],

Thanks for the suggestion. I have created ZOOKEEPER-2214 to fix the findbugs warning.
The latest patch cleans up that part out., lgtm, +1. , -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12739075/ZOOKEEPER-2213.patch
  against trunk revision 1683878.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2762//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2762//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2762//console

This message is automatically generated., we can ignore the failure, it's our old friend TestReconfig.cc:

{code}
     [exec]      [exec] /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-Build/trunk/src/c/tests/TestReconfig.cc:183: Assertion: equality assertion failed [Expected: 1, Actual  : 0]
{code}
, Thanks for the review.

I will submit a patch for 3.4 branch shortly., I wonder if we should add validation to OpCode.check too. I thought we might have missed that. I will add the check too., Latest patch added validation to OpCode.check too.

Also submitted patch for branch-3.4, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12739084/ZOOKEEPER-2213.patch
  against trunk revision 1683878.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2764//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2764//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2764//console

This message is automatically generated., Merged:

trunk https://github.com/apache/zookeeper/commit/d54ca1467db6d6a8619a3979e02e3ffc328f75f2
3.5 https://github.com/apache/zookeeper/commit/9972e78bd6c79b4ad9523c43ccb680e43240f70d
3.4 https://github.com/apache/zookeeper/commit/e0872bc73a0ea302e0848905ff3c5a894dab2954

Thanks [~hdeng]!, SUCCESS: Integrated in ZooKeeper-trunk #2724 (See [https://builds.apache.org/job/ZooKeeper-trunk/2724/])
ZOOKEEPER-2213: Empty path in Set crashes server and prevents restart
(Hongchao Deng via rgs) (rgs: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1684956)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/server/PrepRequestProcessorTest.java
, Empty path in Set crashes server and prevent restart.]