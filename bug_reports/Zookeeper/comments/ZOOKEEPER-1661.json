[This might be a dupe of ZOOKEEPER-1652, I was able to take a full thread dump during the "wait" in order to see what was blocking.

{noformat}
"main-SendThread()" daemon prio=5 tid=7f8714142800 nid=0x112af1000 runnable [112af0000]
   java.lang.Thread.State: RUNNABLE
	at java.net.Inet6AddressImpl.getHostByAddr(Native Method)
	at java.net.InetAddress$1.getHostByAddr(InetAddress.java:853)
	at java.net.InetAddress.getHostFromNameService(InetAddress.java:533)
	at java.net.InetAddress.getHostName(InetAddress.java:476)
	at java.net.InetAddress.getHostName(InetAddress.java:448)
	at java.net.InetSocketAddress$InetSocketAddressHolder.getHostName(InetSocketAddress.java:62)
	at java.net.InetSocketAddress$InetSocketAddressHolder.access$600(InetSocketAddress.java:36)
	at java.net.InetSocketAddress.getHostName(InetSocketAddress.java:323)
	at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:940)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:993)
{noformat}

This clearly confirms the fact that it is indeed a duplicate of ZOOKEEPER-1652


, I wrote the following code (groovy)

{noformat}
def hosts = InetAddress.getAllByName("localhost")
println hosts

hosts.each { h ->
    println "${h.hostName}/${h.hostAddress}"
    def hosts2 = InetAddress.getAllByName(h.hostAddress)
    def now = System.currentTimeMillis()
    println "${hosts2.hostName} => ${System.currentTimeMillis() - now}"
}
{noformat}

which produces the following output:

{noformat}
[localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1, localhost/fe80:0:0:0:0:0:0:1%1]
localhost/127.0.0.1
[localhost] => 1
localhost/0:0:0:0:0:0:0:1
[localhost] => 1
localhost/fe80:0:0:0:0:0:0:1%1
[fe80:0:0:0:0:0:0:1%1] => 5001
{noformat}

This little program explains the following things: 

* ZooKeeper does call {{InetAddress.getAllByName}} (see {{StaticHostProvider:60}}) on the connect string {{"localhost:2181"}} => as a result it gets 3 different addresses for {{localhost}} which then get shuffled ({{Collections.shuffle(this.serverAddresses): L72}}

* Because of the shuffling (random), the call to {{StaticHostProvider.next}} will sometime return the {{fe80:0:0:0:0:0:0:1%1}} address which as you can see from this small program times out after 5s => this explains the randomness I am experiencing.

It really seems to me that what I am experiencing is a reverse dns lookup issue with IPv6. Whether this reverse dns lookup is actually useful and required by ZooKeeper, I do not know. It did not behave this way in 3.3.3.

Does anybody know how to "fix" the dns lookup issue I am experiencing on my desktop (Mac OS X).

, I think, that shuffling resolved list of ip addresses is the cause of the problem. Address list returned by {{getAllByName}} is sorted according to DNS configuration on host, e.g on linux box {{man getaddrinfo}}:
{quote}
The sorting function used within getaddrinfo() is defined in RFC 3484; the order can be tweaked for a particular system by editing /etc/gai.conf (available since glibc 2.5).
{quote}
In {{resolveAndShuffle}} incoming {{serverAddresses}} should be shuffled, not the resulting {{InetSocketAddress}} list.]