[[~anushri], please share the server configurations. From the description, I'm seeing you are using {{non-secure cluster}} but I could see  X509AuthenticationProvider in the execution path and looking for the SSL trusts. Could you please confirm that the 'secureClientPortAddress' doesn't exists in your configuration., Hi [~rakeshr], I checked this scenario, yes even when using {{non-secure cluster}} and secureClientPortAddress is not configured then also NullPointerException is being logged.
This is happening because {{X509AuthenticationProvider}} is being initialized unconditionally during {{ProviderRegistry}} initialization
Any suggestion what should be the fix?
initialize {{X509AuthenticationProvider}} only when secureClientPort is configured?, Yeah, IMHO should initialize when secureClientPort is configured. Presently this is instantiated in {{ProviderRegistry}} and is calling the default constructor., Thanks , Thanks Rakesh for looking into this issue, and sorry for late reply.'secureClientPortAddress' is not present in the configuration. , Passing information, whether secureClientPort is configured or not, to {{ProviderRegistry}} is not very straight forward.
Submitting the patch. If there is any better way to pass secureClientPort configuration status to {{ProviderRegistry}}, please share., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12768687/ZOOKEEPER-2297-01.patch
  against trunk revision 1709293.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2927//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2927//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2927//console

This message is automatically generated., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12768708/ZOOKEEPER-2297-02.patch
  against trunk revision 1709293.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2929//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2929//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2929//console

This message is automatically generated., test case failure is not related to this patch, test case failure is not related to this patch, Thanks [~arshad.mohammad] for working on this. 

It looks like {{ZKContext}} is a kind of work around for me. Instead of pre-creating {{new X509AuthenticationProvider()}} inside {{ProviderRegistry.java}}, how about suggesting administrators/installer to configure appropriate ssl AuthenticationProvider in zoo.cfg file. I could see [SASLAuthenticationProvider|https://cwiki.apache.org/confluence/display/ZOOKEEPER/Zookeeper+and+SASL] is following similar pattern.

For example, zoo.cfg
{code}
zookeeper.authProvider.x509=org.apache.zookeeper.server.auth.X509AuthenticationProvider
{code}, Thanks [~rakeshr] for your suggestion.
#  SSL configuration details are captured in  [ZooKeeper SSL User Guide |https://cwiki.apache.org/confluence/display/ZOOKEEPER/ZooKeeper+SSL+User+Guide]. There we can specify that {{zookeeper.authProvider.x509=org.apache.zookeeper.server.auth.X509AuthenticationProvider}} should be configured along with other ssl related configuration. 
# This feature is already released in 3.5.1, will this change not be backward incompatible as user has to configure x509 authentication provider explicitly now

I will try to modify the wiki and change the corresponding code and submit the patch soon,, bq. This feature is already released in 3.5.1, will this change not be backward incompatible as user has to configure x509 authentication provider explicitly now
Now, 3.5-alpha version is available and probably will release a stable version in near future. I think we have some more time to stabilize this feature, so SSL related configuration changes won't affect any backward compatibility issues., Hi [~rakeshr], I created account on cwiki.apache.org but I do not have edit rights. How to get the edit right? or is there anybody else who modifies the wiki and it is not  supposed to be modified by all?, Yes, I think the permission is granted to only few members in the board. Perhaps you can attach a text document in this jira, while resolving will do the necessary changes., I have editing rights, I can help if you upload the text here.

Also, the patch is not in it's final form right? Even so, here's a small nit. In:

{code}
 import org.slf4j.LoggerFactory;
-
+import org.apache.zookeeper.ZKContext;
{code}

Lets always leave a newline between 3rd-party imports and package local imports. Thanks [~arshad.mohammad]!, Thanks [~rgs] for your help. Submitting the new patch, which removes the default {{X509AuthenticationProvider}} initialization.
Please add following two green color lines in  [ZooKeeper SSL User Guide |https://cwiki.apache.org/confluence/display/ZOOKEEPER/ZooKeeper+SSL+User+Guide].

1) After zookeeper.clientCnxnSocket="org.apache.zookeeper.ClientCnxnSocketNetty" add
{color:green}zookeeper.authProvider.x509=org.apache.zookeeper.server.auth.X509AuthenticationProvider{color}

2) After 
export SERVER_JVMFLAGS="
-Dzookeeper.serverCnxnFactory=org.apache.zookeeper.server.NettyServerCnxnFactory
-Dzookeeper.ssl.keyStore.location=/root/zookeeper/ssl/testKeyStore.jks 
-Dzookeeper.ssl.keyStore.password=testpass 
-Dzookeeper.ssl.trustStore.location=/root/zookeeper/ssl/testTrustStore.jks 
-Dzookeeper.ssl.trustStore.password=testpass" 
add
{color:green}-Dzookeeper.authProvider.x509=org.apache.zookeeper.server.auth.X509AuthenticationProvider{color}
, lgtm, +1. Thanks [~arshad.mohammad]!

[~rakeshr]: mind taking a final look?, ping [~rakeshr], +1 for the {{ZOOKEEPER-2297-03.patch}} patch. Thanks [~arshad.mohammad]!, Committed to trunk : http://svn.apache.org/viewvc?view=revision&revision=1725872
Committed to br3.5 : http://svn.apache.org/viewvc?view=revision&revision=1725873

[~rgs], could you help in updating cwiki page [ZooKeeper SSL User Guide|https://cwiki.apache.org/confluence/display/ZOOKEEPER/ZooKeeper+SSL+User+Guide] with the [changes|https://issues.apache.org/jira/browse/ZOOKEEPER-2297?focusedCommentId=15044128&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15044128]

I'm keeping the jira open until cwiki page modification is completed. Please close this jira after that., FAILURE: Integrated in ZooKeeper-trunk #2830 (See [https://builds.apache.org/job/ZooKeeper-trunk/2830/])
ZOOKEEPER-2297: NPE is thrown while creating "key manager" and "trust manager" (Arshad Mohammad via rakeshr) (rakeshr: [http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1725872])
* trunk/CHANGES.txt
* trunk/src/java/main/org/apache/zookeeper/server/auth/ProviderRegistry.java
* trunk/src/java/test/org/apache/zookeeper/test/SSLAuthTest.java
* trunk/src/java/test/org/apache/zookeeper/test/SSLTest.java
, I'm sorry guys for chiming in late, but as it stands, I'm -1 on this change. There are two points that are bothering me here:

# If we are to change configuration, even when the branch is not yet stable like 3.5, we need to bring the issue up on the user list to collect feedback. We can't expect users to be aware of discussions in jiras like this one and it affects them.
# I don't like the configuration change. We could use the secure client port parameter to determine whether the user is trying to configure secure communication or even create a boolean parameter to make it more explicit, like having {{zookeeper.client.secure}} on the server side as well. The bottom line is that I'd rather infer from a configuration parameter that the user is trying to make it secure rather than force the user to set such a cumbersome variable.

Also, this is focusing on SSL, but this change affects SASL as well, yes?

My suggestion is to work on those points and for the second, to produce a new patch that fixes the configuration.  , Changing to blocker because we can't release without having this sorted out., bq. If we are to change configuration, even when the branch is not yet stable like 3.5, we need to bring the issue up on the user list to collect feedback. We can't expect users to be aware of discussions in jiras like this one and it affects them.
Thank you [~fpj] for the advice, I will send a mail in the user/dev mailing list about this once agree upon the changes.

To make it clear, this jira is changing zookeeper server side configuration only. Now, with this change user need to mandatory configure the SSL scheme name "x509" along with the other SSL configurations. Earlier "x509" was instantiated by default, irrespective of secure or non-secure. So user not required to configure this explicitly. The proposed change is similar to the way configuring the SASL auth mechanism. 

For SASL auth, server side configuration is,
{{authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider}}

For SSL auth, now user need to explicitly configure at server,
{{authProvider.2=org.apache.zookeeper.server.auth.X509AuthenticationProvider}}

cwiki page already described about the authProvider configuration, but this configuration is not captured at the {{Server}} configuration section. As part of this we will add this to the {{Server}} configurations.
Following quotes taken from ZooKeeper SSL User Guide page.
{code}
To configure the ZooKeeper server to use the custom provider for authentication, choose a scheme name and set the property zookeeper.authProvider.[scheme] to the fully-qualified class name of the custom implementation. This will load the provider into the ProviderRegistry. Then set the property zookeeper.ssl.authProvider=[scheme] and that provider will be used for secure authentication.
{code}

bq. Also, this is focusing on SSL, but this change affects SASL as well, yes?
Sorry I failed to find any dependency with SASL. Could you please give your thoughts to understand more about it., Part 1) is not required, please skip this change. Update cwiki page including the part 2) changes. [~arshad.mohammad] please correct me if am missing anything., bq. I will send a mail in the user/dev mailing list about this once agree upon the changes.

I'd hold on to the e-mail until we converge on a proposal.

bq. To make it clear, this jira is changing zookeeper server side configuration only. Now, with this change user need to mandatory configure the SSL scheme name "x509" along with the other SSL configurations. Earlier "x509" was instantiated by default, irrespective of secure or non-secure. So user not required to configure this explicitly. 

I got that and if we think that we will have other providers in the future, then we certainly need a way of configuring it.

bq. The proposed change is similar to the way configuring the SASL auth mechanism.

More or less. For authentication, we need to specify the provider among IP, Digest/Passwd, SASL. In that case, we do need that parameter explicitly, and if I'm passing a SaslAuthProvider parameter, then it is pretty clear that I want SASL authentication. Passing a X509AuthenticationProvider parameter doesn't make it clear the intent of the user with respect to SSL and given that we only have one option at the moment, sounds unnecessary.

bq. I failed to find any dependency with SASL

if you check the stack trace in the description of this jira, then this provider issue has arisen with a call to fixupACL in prep request processor. The ACL stuff depends on the authentication to work, and actually, I should have said authentication in general rather than just SASL. It'd be good to test both SSL and SASL together.  

, bq. I got that and if we think that we will have other providers in the future, then we certainly need a way of configuring it.
Yes, we have provided customization. If user has their own trust mechanism, they can do like, {{zookeeper.ssl.authProvider=scheme}} and define their own custom provider to this configuration {{zookeeper.authProvider.scheme=FQCN}}. These two are dependent configurations.

bq. Passing a X509AuthenticationProvider parameter doesn't make it clear the intent of the user with respect to SSL and given that we only have one option at the moment, sounds unnecessary.
I got it. Do we need to expose a new configuration to enable/disable SSL? Just a quick thought, will this confuse users if we add too many dependent configurations?

bq. It'd be good to test both SSL and SASL together.
Thanks Flavio for the detailed explanation. [~arshad.mohammad], [~anushri] it would be good to share your thoughts. Thanks! , yes, part 1 is not required, bq. Do we need to expose a new configuration to enable/disable SSL?

Is there a parameter that the user always needs to pass or set when enabling SSL? If so, then we can use it to infer that the user wants SSL. If all parameters so far are optional, then we need a switch to make it clear. There must be at least one non-optimal parameter. , That makes sense. Currently {{secureClientPortAddress=}} configuration is used to enable SSL at the server. This configuration is not described in the cwiki page, we need to add this., the mandatory configuration is {{secureClientPort}} 
{{secureClientPortAddress}} is optional, The committed patch will not impact the SASL functionality but it will not be backward compatible with 3.5.1 release for SSL feature.
If we give high importance to backward compatibility with 3.5.1 release then using {{secureClientPort}}, as the basis to initialize the {{X509AuthenticationProvider}}, is the only option., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12783924/ZOOKEEPER-2297-04.patch
  against trunk revision 1725872.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 8 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3011//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3011//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3011//console

This message is automatically generated., I just reverted my previous commit to do the changes freshly.
{code}
Commit History:

br-3.5 => revision: 1726355
trunk  => revision: 1726354
{code}

[~arshad.mohammad], you are correct {{secureClientPort}} is used for initSSL. The initialize logic is little tricky and haven't noticed {{secureClientPort}} in the code.

I could see, the latest patch adds a new internal config item, which is configured as System property. Instead of this how about using a static boolean variable in {{X509Util#secureServer}} and use this in {{ProviderRegistry}}., FAILURE: Integrated in ZooKeeper-trunk #2831 (See [https://builds.apache.org/job/ZooKeeper-trunk/2831/])
Revert ZOOKEEPER-2297 (rakeshr: [http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1726354])
* trunk/CHANGES.txt
* trunk/src/java/main/org/apache/zookeeper/server/auth/ProviderRegistry.java
* trunk/src/java/test/org/apache/zookeeper/test/SSLAuthTest.java
* trunk/src/java/test/org/apache/zookeeper/test/SSLTest.java
, submitting new patch, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12785213/ZOOKEEPER-2355-05.patch
  against trunk revision 1726354.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 2 new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3020//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3020//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3020//console

This message is automatically generated., Too many findbugs get induce this way, I think the best way is to create ZooKeeper instance level context and use it statically as it was done in ZOOKEEPER-2297-02.patch. [~rakeshr] can you have a look on the current patch and its findbugs and earlier patch ZOOKEEPER-2297-02.patch. 
I think ZOOKEEPER-2297-02.patch is the better way to handle this secenario

any other opinion??, Do we fix this in 3.4.8?, This bug doesn't exists in {{branch-3.4}}, so no need to worry about this issue. This is related to ZOOKEEPER-2125 SSL feature and is available only in {{branch-3.5}} and above., Got it, thank you., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12785213/ZOOKEEPER-2355-05.patch
  against trunk revision 1735369.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 2 new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3103//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3103//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3103//console

This message is automatically generated., [~arshad.mohammad] [~rakesh_r] where are we with this issue?, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12785213/ZOOKEEPER-2355-05.patch
  against trunk revision 1742472.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 2 new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3159//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3159//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3159//console

This message is automatically generated., initializing X509AuthenticationProvider only if {{secureClientPort}} is configured., Submitted new patch ZOOKEEPER-2297-06.patch, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12802899/ZOOKEEPER-2297-06.patch
  against trunk revision 1742472.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3160//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3160//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3160//console

This message is automatically generated., Thanks [~fpj] for the reminder. I'll look at the patch in this week., ping [~rakeshr], [~fpj], Thanks for the patch [~arshad.mohammad].

I'm wondering if creating a new class for context is justified: {{ZKServerContext}. It is called in one single place. Actually, if we are to have such a context class, then we should make all configuration parameters through such a class. I actually thought that QuorumPeer was kind of playing that role.

Don't you have to do the same for the other authentication providers here:

{noformat}
            IPAuthenticationProvider ipp = new IPAuthenticationProvider();
             DigestAuthenticationProvider digp = new DigestAuthenticationProvider();
-            X509AuthenticationProvider x509p = new X509AuthenticationProvider();
+            if (ZKServerContext.instance().isSecure()) {
+                X509AuthenticationProvider x509p = new X509AuthenticationProvider();
+                authenticationProviders.put(x509p.getScheme(), x509p);
+            }
             authenticationProviders.put(ipp.getScheme(), ipp);
             authenticationProviders.put(digp.getScheme(), digp);
-            authenticationProviders.put(x509p.getScheme(), x509p);
{noformat}

Is the second {{setSecure}} here supposed to be false:

{noformat}
         } else if (secureClientPortAddress != null) {
             this.secureClientPortAddress = new InetSocketAddress(
                     InetAddress.getByName(secureClientPortAddress), secureClientPort);
+            ZKServerContext.instance().setSecure(true);
             LOG.info("secureClientPortAddress is {}", this.secureClientPortAddress.toString());
         } else {
             this.secureClientPortAddress = new InetSocketAddress(secureClientPort);
+            ZKServerContext.instance().setSecure(true);
             LOG.info("secureClientPortAddress is {}", this.secureClientPortAddress.toString());
         }
{noformat}
, # {{QuorumPeerConfig}} is already holding secure configuration information but can not pass the {{QuorumPeerConfig}} to {{ProviderRegistry}} as {{ProviderRegistry}} is static and can be called even when {{QuorumPeerConfig}} is initialized
{{ZKServerContext}} is introduced to pass the information form  {{QuorumPeerConfig}} to {{ProviderRegistry}}
# The better way to handle this scenario was to let the user configure the authentication provider. But if we can not do this now because of backward compatibility reason.Can we grammatically configure as and when required?
{code}
//configure only if it is not configured
private void configureSSLAuth() throws ConfigException {
        String sslAuthProp = "zookeeper.authProvider."
                + System.getProperty(ZKConfig.SSL_AUTHPROVIDER, "x509");
        if (System.getProperty(sslAuthProp) == null) {
            if ("zookeeper.authProvider.x509".equals(sslAuthProp)) {
                System.setProperty("zookeeper.authProvider.x509",
                        "org.apache.zookeeper.server.auth.X509AuthenticationProvider");
            } else {
                throw new ConfigException(
                        "No auth provider confiugred for configured SSL authenticaiton scheme '"
                                + System.getProperty(ZKConfig.SSL_AUTHPROVIDER) + "'.");
            }
        }
    }
{code}
# I figured out another problem with the existing SSL authentication provider initialization.
It is always initializing {{X509AuthenticationProvider}}. If some SSL authentication provider is configured default "x509" should not be initialized.

bq. Don't you have to do the same for the other authentication providers here:
No, these authentication providers are always used irrespective of secure socket configured or not.

bq. Is the second setSecure here supposed to be false:
No, It has to be true. In this case secureClientPortAddress is initialized with port only and using 0.0.0.0 as the binding ip
In the first case it is initialized with ip and port. , Attached ZOOKEEPER-2297-07.patch patch to make it more clear what i said in above comments, [~arshad.mohammad] did you mean to submit the patch?, yes, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12812079/ZOOKEEPER-2297-07.patch
  against trunk revision 1748630.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 7 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3238//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3238//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3238//console

This message is automatically generated., bq. -1 core tests. The patch failed core unit tests.
There is no test case failure. One test case is skipped and this patch is the reason for the skip., Correction:
One test case is skipped and this patch is NOT the reason for the skip., Because of this issue there is a Null Pointer exception in each and every application's log which are using 3.5.1 zookeeper.
Can we conclude and take in for 3.5.2 release.
ping [~cnauroth], [~fpj], bq. Because of this issue there is a Null Pointer exception in each and every application's log which are using 3.5.1 zookeeper.

Perhaps I'm confused about the impact of this issue.  I thought it was a server-side only issue, so I wouldn't expect applications (ZooKeeper clients) to see the problem.  Is there really an impact on clients, or does the "application" in this statement refer to an embedded ZooKeeper server scenario?

bq. Can we conclude and take in for 3.5.2 release.

Certainly if the prior code review feedback gets resolved before the 3.5.2 release candidate deadline, then it can get committed.  That deadline is currently set at 12 noon Thursday, 6/23 PST.

If the problem only shows up in server logs, then I'm reluctant to delay 3.5.2 to wait for the fix.  If others disagree though, please comment., bq.  Is there really an impact on clients, or does the "application" in this statement refer to an embedded ZooKeeper server scenario?
There is no impact on the clients, It is only server side issue. The NPE is only in server logs not in client logs.  , [~arshad.mohammad] In the new patch, you've removed the x509p initialization from {{ProviderRegistry}} and moved the SSL auth configuration to {{QuorumPeerConfig}}. I'm not sure where we instantiate the authentication provider in this patch, though. 

Also, there is a small typo in configured in one of the log messages., # The x509 instace will be initialized  in {{ProviderRegistry}}. 
All the system properties starting with "zookeeper.authProvider." are read and their corresponding authentication schemes are initialized
{code}
 Enumeration<Object> en = System.getProperties().keys();
            while (en.hasMoreElements()) {
                String k = (String) en.nextElement();
                if (k.startsWith("zookeeper.authProvider.")) {
                    String className = System.getProperty(k);
                    try {
                        Class<?> c = ZooKeeperServer.class.getClassLoader()
                                .loadClass(className);
                        AuthenticationProvider ap = (AuthenticationProvider) c
                                .newInstance();
                        authenticationProviders.put(ap.getScheme(), ap);
                    } catch (Exception e) {
                        LOG.warn("Problems loading " + className,e);
                    }
                }
            }
{code}
# Corrected type and submitted new patch, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12812733/ZOOKEEPER-2297-08.patch
  against trunk revision 1748630.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 7 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3241//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3241//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3241//console

This message is automatically generated., bq. -1 core tests. The patch failed core unit tests.
CnxManagerTest failure is not related to this patch. Seems some env problem. It is trying to bind on 10.1.1.-38. 
Executed locally and all the test case in CnxManagerTest  are passed., I'm good with the patch, except that:

{noformat}
"No auth provider configured for configured SSL authenticaiton scheme '"
{noformat}

still has typos, I think it should be:

{noformat}
"No auth provider configured for the SSL authentication scheme "
{noformat}, Thanks [~fpj]
Submitted new patch., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12812784/ZOOKEEPER-2297-09.patch
  against trunk revision 1748630.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 7 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3243//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3243//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3243//console

This message is automatically generated., +1, Thanks for the patch [~arshad.mohammad]. We are in code freeze and this issue isn't marked for 3.5.2. If [~cnauroth] wants to reconsider, I can check this in and otherwise we leave it for 3.5.3., [~fpj], please feel free to check it in for inclusion in 3.5.2.  [~arshad.mohammad], thank you for the patch., Trunk: Committed revision 1749951.
Branch 3.5: Committed revision 1749950., SUCCESS: Integrated in ZooKeeper-trunk #2971 (See [https://builds.apache.org/job/ZooKeeper-trunk/2971/])
ZOOKEEPER-2297: NPE is thrown while creating "key manager" and "trust manager" (Arshad Mohammad via fpj) (fpj: [http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1749951])
* trunk/CHANGES.txt
* trunk/src/java/main/org/apache/zookeeper/server/auth/ProviderRegistry.java
* trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java
* trunk/src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerConfigTest.java
* trunk/src/java/test/org/apache/zookeeper/test/SSLAuthTest.java
]