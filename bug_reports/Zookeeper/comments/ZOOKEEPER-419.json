[Replace "O" with "N" for stat and acl objects passed to Py_BuildValue., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12409226/ZOOKEEPER-419.patch
  against trunk revision 777662.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/93/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/93/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/93/console

This message is automatically generated., This is hard to test for explicitly, as GC is non-deterministic and covering all the cases is difficult. I expect these kinds of error to shake out when I expand the test suite.  Hudson wouldn't pick up any new Python tests anyhow. It's a simple change without any alterations to the logic of the bindings - just correcting the parameters to a Python C API call.

However, this bug is blocking progress on a project for me, and it would be helpful to have it committed asap, if committers have time and agree. , Is there test code currently that exercises the "stat and acl objects passed to Py_BuildValue." codepath? If so then I'd say this is fine, otw
I'd suggest adding a test or two that exercise this codepath. Perhaps add a JIRA that documents we need to verify refcnt at some point? 
Is there some facility/extn/addon for python that supports test/verification of refcnt correctness?
, For future ref: I did a quick search and noticed the following which might be helpful at some point for testing ref cnts:

1) http://docs.python.org/library/gc.html

2) see class "TrackRefs"
http://cvs.zope.org/*checkout*/Zope3/test.py?rev=1.100&content-type=text/plain
, Thanks, those are good pointers. I need to expand the test coverage for the bindings beyond simply exercising the API. I'll set up another JIRA for that., > Is there test code currently that exercises the "stat and acl objects passed to Py_BuildValue." codepath?

Yes - there's a get-set test that will go through this code path. Every time an API call returns, it invokes Py_BuildValue to construct the python representation of the C data type. 
, +1, thanks Henry
Committed revision 779716., Integrated in ZooKeeper-trunk #329 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/329/])
    . Reference counting bug in Python bindings causes abort errors
]