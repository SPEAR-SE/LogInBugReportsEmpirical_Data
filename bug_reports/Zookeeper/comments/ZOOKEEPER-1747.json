[We have seen this issue also with inconsistent state between acceptedEpoch, currentEpoch and the transaction log. In that case the error is:
{noformat}
2013-09-12 12:30:51,586 [myid:10] - ERROR [main:QuorumPeer@453] - Unable to load database on disk
java.io.IOException: The current epoch, 6, is older than the last zxid, 34359738487
        at org.apache.zookeeper.server.quorum.QuorumPeer.loadDataBase(QuorumPeer.java:435)
        at org.apache.zookeeper.server.quorum.QuorumPeer.start(QuorumPeer.java:409)
        at org.apache.zookeeper.server.quorum.QuorumPeerMain.runFromConfig(QuorumPeerMain.java:151)
        at org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:111)
        at org.apache.zookeeper.server.quorum.QuorumPeerMain.main(QuorumPeerMain.java:78)
2013-09-12 12:30:51,587 [myid:10] - ERROR [main:QuorumPeerMain@89] - Unexpected exception, exiting abnormally
java.lang.RuntimeException: Unable to run quorum server
        at org.apache.zookeeper.server.quorum.QuorumPeer.loadDataBase(QuorumPeer.java:454)
        at org.apache.zookeeper.server.quorum.QuorumPeer.start(QuorumPeer.java:409)
        at org.apache.zookeeper.server.quorum.QuorumPeerMain.runFromConfig(QuorumPeerMain.java:151)
        at org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:111)
        at org.apache.zookeeper.server.quorum.QuorumPeerMain.main(QuorumPeerMain.java:78)
Caused by: java.io.IOException: The current epoch, 6, is older than the last zxid, 34359738487
        at org.apache.zookeeper.server.quorum.QuorumPeer.loadDataBase(QuorumPeer.java:435)
        ... 4 more
{noformat}
I guess "force-ignore" means that the server just ignores whatever is in the disk and starts with zxid=0, or?, Let me take my original statement about "force-ignoring" errors back. I think Zookeeper server should handle data consistency issues gracefully. This means, it needs to handle this type of errors as opposed to terminating. The reaction to an error can be controlled by the user.

# For fatal errors, such as missing {{myid}} file, ZK server server shall exit.
# For non-fatal data consistency errors (empty log, missing epoch files, etc), ZK can be instructed to:
## Come up empty
## Make "best effort" in restoring DataTree. If no data can be restored consistently, ZK can be instructed to:
### Come up empty
### Exit

This way, a system operator, who is not a ZK expert, can be given a set of work instruction on how to recover a failing ZK service., Could this be a duplicate of ZOOKEEPER-1621?, Yes, it is. Thank you for pointing this out. I marked this entry as a duplicate of 1621.]