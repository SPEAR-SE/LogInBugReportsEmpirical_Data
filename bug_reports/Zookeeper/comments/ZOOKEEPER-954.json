[The code that causes these findbugs warnings was introduced by ZOOKEEPER-794., Findbugs description for this says
"This method performs synchronization an object that implements java.util.concurrent.locks.Lock. Such an object is locked/unlocked using acquire()/release() rather than using the synchronized (...) construct."

But in our code[ClientCnxt] we used LinkedBlockingQueue [waitingEvents] which does not implement Lock. Also, from code it looks intentional and appropriate to synchronize waitingEvents explicitly to ensure no event is dropped from processing.

Any other thoughts on this?, the synchronization on waitingEvents is to protect isRunning., Added some patch to remove icky volatile fields and recklessly locking a concurrent collection., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12786452/ZOOKEEPER-954.patch
  against trunk revision 1728577.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3034//console

This message is automatically generated., Oops,  I should have stripped., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12786453/ZOOKEEPER-954-V2.patch
  against trunk revision 1728577.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3035//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3035//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3035//console

This message is automatically generated., Sorry, my added patch seems to lose exclusive control between the send thread and a user thread when the event thread is going down. That is too difficult to grasp how to establish its thread safety. I can't find the "Cancel Patch" button.]