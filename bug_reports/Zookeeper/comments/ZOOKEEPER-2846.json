[GitHub user lvfangmin opened a pull request:

    https://github.com/apache/zookeeper/pull/314

    [ZOOKEEPER-2846][Test] Leader follower sync with on disk txns can possibly leads to data inconsistency

    This is only the test case used to reproduce the issue.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/lvfangmin/zookeeper ZOOKEEPER-2846-TEST

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/314.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #314
    
----
commit c2a1ec8f989b9f799f5880a92730b75ef86164b9
Author: Fangmin Lyu <allenlyu@fb.com>
Date:   2017-07-18T19:21:02Z

    add test case to check data inconsistency issue when using on-disk txn sync

----
, -1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/887//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/887//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/887//console

This message is automatically generated., There could be txn gap when using diff sync (which won't happen in our internal branch), since we don't log txns to txn file before taking snapshot, so this issue could happen more frequently in the open source version, any suggestion except disable the on disk txn sync for now?, ZOOKEEPER-2099 sounds similar to this?

Also, I am wondering what caused the bug. Is this bug existing since the feature's introduction by ZOOKEEPER-1413, or is it a regression caused by, for example ZOOKEEPER-2678 (which was mentioned in ZOOKEEPER-2845)?, [~hanm] ZOOKEEPER-2099 is a subset of the issue I reported in this Jira, the bug of this Jira is introduced by ZOOKEEPER-1413, which is using on disk txn sync to reduce sync time.  

The issue I reported in ZOOKEEPER-2845 is a totally different one, it's introduced in ZOOKEEPER-2678, which is used to reduce unavailable time during leader election by retain the ZKDatabase, but it could lead to data inconsistency., [~lvfangmin] Do you have a plan to upload a patch that fixes the issue? The existing pull request  contains a test only., [~hanm] The challenge here is that we don't know there is txn missing or it's due to the Epoch change. We need a way to verify the zxid continuous, we're having an intern project to verify the txns integrity, but that won't be available in the near time, my suggestion is turning off the on disk txn sync for now. , There is no efficient way to detect the gap, internally, we worked around the issue by adding a gap file to indicate the gap during snap sync.

In the long term, weÂ have finished adding a real time consistency check during replay txns and syncing, it's being baked on some of our prod environment, will open a Jira for discussing the details.]