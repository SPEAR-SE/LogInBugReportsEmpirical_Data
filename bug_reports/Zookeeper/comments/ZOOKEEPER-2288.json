[This began with a discussion on the dev list.  That mail thread contains more details.

http://mail-archives.apache.org/mod_mbox/zookeeper-dev/201510.mbox/%3CD23841D1.2E7C8%25cnauroth@hortonworks.com%3E

Thank you to [~randgalt] for reporting this and showing a test case that demonstrates the problem.  To summarize, the shutdown sequence in {{ZooKeeperServerMain#shutdown}} can close out client sockets before the request processing pipeline shutdown gets a chance to ack transactions back to those clients.  This can cause a client application to retry erroneously, resulting in an unexpected  {{NoNode}} or {{NodeExists}} error.

I'm attaching a patch that fixes the shutdown sequence.  This appears to be a major contributing factor in the problem.  I adapted Jordan's example to a JUnit test.  Without my patch, this test fails within a few seconds of making repeated client calls.  After applying my patch, I can run the same repeated client calls for multiple minutes without failure.

However, this fix is incomplete and therefore isn't ready to commit.  It's still possible for this test to fail, even though it happens much less frequently.  There must be some other contributing factor.  [~fpj] has a theory that the transaction batching and flushing logic in {{SyncRequestProcessor}} might not fully flush transactions if the request of death is queued under high load., FYI - Curator now has workaround methods. You can delete "quietly" (Curator hides the NoNode exception). You can also now do a create-or-set-data whereby Curator will set the data if the node already exists., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12766001/ZOOKEEPER-2288.001.patch
  against trunk revision 1706631.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 4 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2909//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2909//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2909//console

This message is automatically generated.]