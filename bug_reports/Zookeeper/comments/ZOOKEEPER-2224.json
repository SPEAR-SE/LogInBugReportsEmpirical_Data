[my page how to work show?, four letter command hangs when network is slow., I did not get, can you please explain , -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12742771/ZOOKEEPER-2224-01.patch
  against trunk revision 1688041.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2796//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2796//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2796//console

This message is automatically generated., I guess you want to know more about this defect. 

The scenario is as follows.
We have three node zookeeper cluster, it is working fine.
We have an application which sends four letter command to one of the zookeeper servers periodically. 
We reduced the network connectivity to 1 KBps between our application and zookeeper.
The application hanged immediately after reducing the network connectivity.
Even after restoring the connectivity application has not come out. It was still hanged.

The root cause of the problem is the four letter command, it hangs while reading from the socket.
class {{org.apache.zookeeper.client.FourLetterWordMain}} has similar code as bellow
{code}
 Socket sock = new Socket(host, port);
 sock.read()
{code}

To fix this issue above code should be changed to 
{code}
 int timeout=someValue
 Socket sock = new Socket();
 sock.connect(hostaddress, timeout);
 sock.setSoTimeout(timeout);
 sock.read()
{code}




, Thanks for the patch [~arshad.mohammad]! A few comments:

In:

{code}
     public static String send4LetterWord(String host, int port, String cmd)
             throws IOException, SSLContextException {
-        return send4LetterWord(host, port, cmd, false);
+        return send4LetterWord(host, port, cmd, false, 5000);
{code}

why not use DEFAUL_SOCKET_TIMEOUT instead of 5000?

Nit in:

{code}
+    //in millisecond, socket should connect/read within this period otherwise SocketTimeoutException
{code}

*milliseconds

In:

{code}
+        }catch (SocketTimeoutException e)
+        {
+            throw new IOException(e);
{code}

please use proper spacing and { on the same line as catch:

{code}
+        } catch (SocketTimeoutException e) {
+            throw new IOException(e);
{code}

In:

{code}
+        String resp = sendRequest("isro",2000);
{code}

space between "isro", and 2000.

Thanks!, Hi Arshad.  Nice catch!  Here are a few more comments.

# The current patch is starting the SSL handshake before connecting the socket.  Is that the cause of the test failures?
# It looks like there is a small typo with {{DEFAUL_SOCKET_TIMEOUT}} missing the 'T' in "DEFAULT".
# Is the null check on {{host}} and special case for the loopback address required?  It seems {{host}} cannot be null here, because {{main}} enforces the expected number of arguments.
# The test also appears to have a small typo: {{timout}} instead of {{timeout}}.
# Is it necessary for the test to create and close {{zk1}}?  The test runs {{isro}}, which just reports server read-only state, so I don't think there is a dependency on any established client sessions.

Thank you!, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12742976/ZOOKEEPER-2224-02.patch
  against trunk revision 1688505.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2798//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2798//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2798//console

This message is automatically generated., Thanks [~rgs], [~cnauroth] for your comments. All comments handled except bellow
{quote}
Is the null check on host and special case for the loopback address required? It seems host cannot be null here, because main enforces the expected number of arguments.
{quote}
The exact same code is being used in Socket(host,port) constructor, Thanks [~arshad.mohammad] for the contribution. Few minor comments, please see:

# small typo: DEFAUL_SOCKET_TIMEOUTE, please remove extra E
# In general, it is good to follow the pattern - begin the test case name with {{test}}. Please rename the test name as {{testValidateSocketTimeout}}. Also, please add {{@Test(timeout=10000)}} in test.
{code}
     
     public void validateSocketTimeoute()
{code}
# Its good to add exception message when wrapping the actual exception like,
{code}
throw new IOException("Exception while executing four letter word: " + cmd, e);
{code}, Thanks [~rakeshr] for reviewing the patch. Worked on the comments and submitted the patch again. , +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12743009/ZOOKEEPER-2224-03.patch
  against trunk revision 1688505.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2799//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2799//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2799//console

This message is automatically generated., [~arshad.mohammad], thank you for updating the patch.  I think the only thing left is a nitpick in {{FourLetterWordsTest}}.  Please rename {{timout}} to {{timeout}}., +1 (non-binding) for patch v04.  Thank you for contributing the patch, Arshad., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12743184/ZOOKEEPER-2224-04.patch
  against trunk revision 1688505.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2802//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2802//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2802//console

This message is automatically generated., Thanks [~arshad.mohammad] for taking care this. I'll commit the patch today.
Thanks [~rgs], [~cnauroth] for the reviews.
, Committed to trunk : http://svn.apache.org/viewvc?view=revision&revision=1689211
Committed to br3.5 : http://svn.apache.org/viewvc?view=revision&revision=1689212

[~arshad.mohammad], I think the fix should go to {{branch-3.4}} as well. Could you please provide a patch on {{branch-3.4}}. Will resolve the issue once committed there., SUCCESS: Integrated in ZooKeeper-trunk #2744 (See [https://builds.apache.org/job/ZooKeeper-trunk/2744/])
ZOOKEEPER-2224: Four letter command hangs when network is slow (Arshad Mohammad via rakeshr) (rakeshr: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1689211)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/client/FourLetterWordMain.java
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/test/FourLetterWordsTest.java
, This patch is for branch 3.4. So pre-commit check will fail as it runs on trunk, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12743674/ZOOKEEPER-2224_br_3_4-04.patch
  against trunk revision 1689211.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2806//console

This message is automatically generated., Merged for 3.4: https://github.com/apache/zookeeper/commit/cb074628a38631c6c0b3843e64bd44cea5d07867

Thanks [~arshad.mohammad]!, mark]