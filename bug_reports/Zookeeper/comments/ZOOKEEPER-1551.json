[This is patch is created using --ignore-all-space flag, since my editor is configured to trim all white spaces. So the indentation is incorrect in one place.

We recently found this issue since we enabled  sync request processor in the observer (ZOOKEEPER-1552). So we saw that the snapshot is invalid in some machines.    

, The change to Leader.java is just for optimization. I don't think it break the compatibility. , +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12547189/ZOOKEEPER-1551.patch
  against trunk revision 1391526.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1198//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1198//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1198//console

This message is automatically generated., I'd like to ask a couple of quick clarifications about this patch if you don't mind:

# Given that in Learner both follower and observer need to commit transactions after the snapshot, do we really need different code for follower and observer? 
# Observers also need to receive outstanding proposals, since commits do not have the proposals themselves, so I was wondering if the last optimization introduced in Leader is actually correct.

Thanks! , 1. If we do a bit of refactoring on ObserverZookeeperServer, then it should be able to use the same logic. However, this will also require us keep track of pendingTxns like FollowerZookeeperServer which have a separate method for logRequest() and commit(). 

2. During normal operation, observers receive in-flight txns via INFORM packets which include the request itself. So the request from outstanding proposals will eventually reach the observer as INFORM packet after startForwarding() is called. There is no need for observer to receive these proposals.

I intended to have this patch on-top of ZOOKEEPER-1552., Thanks for the clarifications. I actually forgot that we send the transaction with INFORM. 

I was wondering about this part of the code:

{noformat}
+                    if (!snapshotTaken) {
+                        // Apply to db directly if we haven't taken the snapshot
+                        zk.processTxn(packet.hdr, packet.rec);
+                    } else {
+                        packetsNotCommitted.add(packet);
+                        packetsCommitted.add(qp.getZxid());
+                    }
{noformat}

INFORM is supposed to inform an observer of a committed transaction, so why keep them as not committed? I'm getting the impression that this is related to the issue of ZOOKEEPER-1549., This is to make ZOOKEEPER-1552 works correctly.  Previously, Observer only create a snapshot after sync-up and never write to disk at all. 

We need to log INFORM packets, which come after the snapshot is taken, to disk like the followers. So that on the next restart, these txns won't be missing (if the observer is restarted before the next snapshot)  

The patch has 5 lines commented in the unit test (Since it requires ZOOKEEPER-1552) which will cover this case. , I understand that this patch reflects the follower behavior. However, as per ZOOKEEPER-1549, this behavior is not correct because a snapshot at that point might contain uncommitted state. If we commit this patch, then we will need to fix it in ZOOKEEPER-1559. What do you think?

 , I think this patch is very critical and we need to fix it as soon as possible since data inconsistency occur quite frequent in our environment due to this bug. 

The current patch doesn't break the compatibility so we can commit it. Then, we can revisit/rewrite this logic as needed to fix ZOOKEEPER-1559. , Sounds fine. I'd like to have closer look at the tests, but otherwise it looks good to me., The patch looks mostly good to me. I have three comments:

# The leading spaces of Leader.java and Learner.java are not right. Also about format, there are very long lines in the test part of the patch.
# I don't understand why @Test is commented out for TestUnecessarySnap. Is it accidental?
# If this condition holds "(p.hdr.getZxid() != zxid)" it sounds like we need to do more than just logging a warn, no? What about throwing an exception here? , Also need to validate that snapshot data is correct, - Fixed indentation
- Fixed incorrect comments
- Rebase with trunk

I only print warning message since I use the same code block that we use to print warning message when we get out-of-order txn. Also, it will print false positive message when receiving the first message. Since this code block is going to be rewritten anyway in ZOOKEEPER-1549, so I don't want to put more effort on it. 

I think this patch will go to 3.4.6 only but generate patch based on trunk so that I can trigger unit test
, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12571724/ZOOKEEPER-1551.patch
  against trunk revision 1448007.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1415//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1415//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1415//console

This message is automatically generated., [~fpj] would you be able to review the latest patch?, I have generated a new version of this patch that applies to trunk. The previous patch that [~thawan] generated has also been affected by the ZOOKEEPER-107 changes. 

This patch depends on ZOOKEEPER-1552 and I verified that the patch there applies to trunk. 

Now I'm a bit confused about the fix versions of these issues. This one says 3.4.6 and 3.5.0. ZOOKEEPER-1552 says 3.5.0. This comments from Thawan:

https://issues.apache.org/jira/browse/ZOOKEEPER-1551?focusedCommentId=13591262&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13591262

says that it might be for 3.4.6 only. To me it sounds like it should be in 3.5.0, since ZOOKEEPER-1552 is an improvement, having it in 3.4.6 is optional. Any opinion here?, This patch depends on ZOOKEEPER-1552 for unit testing purpose. If we don't want to put 1552 into 3.4 branch, then we just need to modify the unit test to verify the observer via its in-memory db instead of reading from data dir.

For 3.5, this problem will be fixed as part of ZOOKEEPER-1549 I think we can also commit this to trunk as well.  , I'm really confuse about all the sequence of jiras that we need to get it. According to my bookkeeping, we have: ZOOKEEPER-1413, ZOOKEEPER-1549, ZOOKEEPER-1552, ZOOKEEPER-1642, ZOOKEEPER-1667, ZOOKEEPER-1674. Am I missing any? Now, I'd like to understand which order we need to follow to get them in. Should we have a discussion on the dev list about it?, Here is the list of dependencies and status of the blocker patch which I am involved with 
3.4.6 blocker issues:  

ZOOKEEPER-1549 -> partially fixed by ZOOKEEPER-1558
ZOOKEEPER-1551 -> fixed but depends on ZOOKEEPER-1552.  If we don't want to include ZOOKEEPER-1552,the patch need more work

3.5 blocker issues: 
ZOOKEEPER-1549 -> need rework and also depends on ZOOKEEPER-1413,ZOOKEEPER-1642
ZOOKEEPER-1551 -> fixed by ZOOKEEPER-1549 and depends on ZOOKEEPER-1552

We might need to discuss in dev list to get all the block issue resolved
, Upload 3.4 patch, Rebase and enable test that depends on ZOOKEEPER-1552, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12606039/ZOOKEEPER-1551-trunk.patch
  against trunk revision 1527775.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1610//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1610//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1610//console

This message is automatically generated., There was one test failure and it seems related to this patch. , [~thawan], I also tried to compile with the b3.4 patch and it fails. The patch applies, but it looks like a few things have changed. , yeah, I will look into it and update the patch, Testing is failing because syncEnabled is not enable by default when QuorumPeer object is created directly., I think you meant to submit this patch, yes? Also, will you update the b3.4 patch?, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12606246/ZOOKEEPER-1551-trunk.patch
  against trunk revision 1528586.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1630//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1630//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1630//console

This message is automatically generated., I have generated a patch for b3.4, I hope it is ok. Could you please review it, [~thawan]?, b3.4 patch looks good for me (+1). If the trunk patch also looks good to you, I will commit the patch   , +1 for the trunk patch., committed to 3.5.0 and 3.4.6, b3.4: 1530035
trunk: 1530029, SUCCESS: Integrated in ZooKeeper-trunk #2082 (See [https://builds.apache.org/job/ZooKeeper-trunk/2082/])
ZOOKEEPER-1551. Observers ignore txns that come after snapshot and UPTODATE (thawan, fpj via thawan) (thawan: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1530029)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/Leader.java
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/Learner.java
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java
, Closing issues after releasing 3.4.6.]