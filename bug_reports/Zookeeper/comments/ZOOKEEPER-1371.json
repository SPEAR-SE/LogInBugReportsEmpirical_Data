[- Removed Log4J dependencies from main source core.
- Removed Log4J dependencies from test source core except for a bunch of test cases.
- Modified ivy.xml and build.xml to make use of slf4j to log4j bridge only for testing purposes.
- Modified build.xml to include a new test branch where no log4.jar is used.
- Pending to review if documentacion needs to be updater., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12522869/ZOOKEEPER-1371.patch
  against trunk revision 1326029.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 18 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    -1 javac.  The applied patch generated 15 javac compiler warnings (more than the trunk's current 5 warnings).

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1034//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1034//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1034//console

This message is automatically generated., Hi César,

The patch looks ok to me, but the unit test is failing. Could you take a look?

https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1034/testReport/org.apache.zookeeper.jmx/ManagedUtilNoLog4jTest/testZookeeperJmxLog4jDisableFalse/

Thanks!
--Michi, I'm not sure if the warning increment could be removed since it is due to replace Log4J references in ManagedUtil class by reflection in order to keep supporting Log4J JMX beans when "SLF to LOG4J" is used instead of a native slf4j implementation like LogBack.

Regarding to the failed tests, it seems that the build.xml modifications has not been applied. Is there some kind of mechanism that protect it?
, Hmm, I'm not sure what happened. The build log says "patching file build.xml", but something could have gone wrong. I'll let somebody familiar with the build process answer.

https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1034//consoleText

Thanks!
--Michi, My fault. New patch available., Fixed previous issues: warnings and failed test., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12523050/ZOOKEEPER-1371.patch
  against trunk revision 1326029.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 18 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1039//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1039//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1039//console

This message is automatically generated., Thanks for the patch, César! Here are my comments:

# Please update the "Logging" section of src/docs/src/documentation/content/xdocs/zookeeperAdmin.xml. It should note that ZooKeeper uses slf4j and defaults to log4j binding (I'm assuming log4j-1.2.16.jar and slf4j-log4j12-1.6.4.jar will be included in the new release under lib/). 
# Right now bin/zkServer.{sh,cmd} doesn't initialize logging properly for developers since log4j-1.2.16.jar and slf4j-log4j12-1.6.4.jar are located under build/test/lib/. Should we add build/test/lib/ to the classpath in bin/zkEnv.{sh,cmd}?
# Thank you for adding unit tests for JMX!

--Michi, Any updates on this? It would be a good time to clean this up., [~phunt], quid pro quo. I update this one and you review ZOOKEEPER-1214 ;-), -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12564532/ZOOKEEPER-1371.patch
  against trunk revision 1427034.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 18 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1330//console

This message is automatically generated., 1.- Updated src/docs/src/documentation/content/xdocs/zookeeperAdmin.xml, but I can not verify it as doc files are copied from doc directory instead of being generated from docbook files. Am I missing something?

2.- Included slf4j-log4j12-1.7.2.jar and log4j-1.2.17.jar build/lib directory., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12564538/ZOOKEEPER-1371.patch
  against trunk revision 1427034.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 18 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1331//console

This message is automatically generated., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12564626/ZOOKEEPER-1371.patch
  against trunk revision 1427034.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 18 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1333//console

This message is automatically generated., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12564627/ZOOKEEPER-1371.patch
  against trunk revision 1427034.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 18 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1334//console

This message is automatically generated., I don't understand why it is failing. I just checkout a clean trunk and I was able to successfully apply the patch. Trying a new patch without zooinspector/ivy.xml, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12564628/ZOOKEEPER-1371.patch
  against trunk revision 1427034.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 18 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1335//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1335//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1335//console

This message is automatically generated., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12564633/ZOOKEEPER-1371.patch
  against trunk revision 1427034.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 18 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1336//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1336//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1336//console

This message is automatically generated., The patch went stale. César, could you rebase and regenerate the patch?

Thanks!
--Michi, This patch is nearly 2 years old. It will take some time to refresh it :-(, Yes, you are right. Sorry I've been putting this off for so long., Rebased existing patch and applied to master/trunk. 

Also did a few changes:

1) ivy build files and dependencies, use same log4j version for testing scope. 
2) I see no reason for why you want to include the *log4j* in distribution( ? ). It's only for running a (few) tests & I assume we don't want to dump the log4j into classpath for people. Whole point of slf4j is to let the developer who uses zookeeper to chose their choice of logging implementation of the slf4j api. Also ivy will pull down the log4j binding impl. for test scope for developers. 
3) bumped log4j to version 1.2.17 (contrib/ivy declared dependency at version 1.2.15 which pulls in JMX SUN libraries which is not distributed in maven central. 1.2.16 was mentioned in root ivy file. Might as well bump to latest minor version.

Would be nice to see this merged now before we have to wait another X years ;-) , -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12638125/ZOOKEEPER-1371.patch
  against trunk revision 1583513.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 12 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2018//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2018//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2018//console

This message is automatically generated., +1 The patch looks good to me, thanks Roy. I'll give it a day for other people to review the patch and check it in., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12638125/ZOOKEEPER-1371.patch
  against trunk revision 1583783.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 12 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2019//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2019//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2019//console

This message is automatically generated., Tests run locally just fine  ( ant test-cppunit ), someone could probably try to rerun the patch again.. , Restarted the build.

https://builds.apache.org/view/S-Z/view/ZooKeeper/job/PreCommit-ZOOKEEPER-Build/2022/, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12638125/ZOOKEEPER-1371.patch
  against trunk revision 1583783.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 12 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2022//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2022//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2022//console

This message is automatically generated., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12638125/ZOOKEEPER-1371.patch
  against trunk revision 1583783.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 12 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2024//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2024//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2024//console

This message is automatically generated., In general this looks good to me, should we just replace test.junit with test.junit-no-log4j (or whatever the target you made was called)?, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12638125/ZOOKEEPER-1371.patch
  against trunk revision 1583783.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 12 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2025//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2025//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2025//console

This message is automatically generated., [~calvarez] It's your patch, I'm unsure why you want the junit.run.nolog4j goal, it simply tries to only run the tests : «<include name="**/*${test.category}NoLog4j*.java"/>» which is no test files basically atm. I don't see why we would want to encourage users/devs to particular create such tests? So maybe it should be removed?

[~fournc]: Can you confirm with packager that it is okey to drop log4j jar file from distribution? I see no reason for why you want it included in distribution as it then will land in classpath for users and that complicates things when they want to choose their own slf4j implementation for logging. I think it would be enough to have it declared as a test dependency in ivy for the log4j»-specific test implementations we have. This should be enough for developers I guess, maybe leave it as a note in a «readme.developers» if they want to run the jmx log4j test, they should fetch dependencies with ivy to ensure to get slf4j-log4j12 bridge for running it.

I guess it would make more sense to have the nolog4j goal to exclude the jmx log4j test instead, make it the default target for running tests and add a note in «readme.developers» to run «ant junit.run» to include tests which depends on log4j and then make CI to run the ant junit.run goal. 

jmx log4j test is also an integration/system test as well, and most useful to be run by a CI. , I think it's fine to remove the log4j jar file, but at least the documentation needs to be updated. The commands shown in the documentation uses the log4j jar file included in the distribution. Maybe we can address this in a separate jira to get this one checked in?

As for the testing, my personal preference is to *not* exclude the jmx log4j tests. Ideally running "ant test" should run the same set of tests it did before this patch. Either that or modify the test so that it doesn't depend on log4j., [~michim] Can probably create an issue with docs that is related to this one yes, if your thinking about -> http://zookeeper.apache.org/doc/r3.3.3/zookeeperAdmin.html#Debug+Log+Cleanup+%28log4j%29  etc. 

What generates the docs/? I assume there is a tool or something that generates all the html/pdfs. Would be best to ensure docs are updated with the release. 

Regarding the jmx log4j bean stuff, it should really be distributed as it's own artifact and then move the log4j specific implementation to this artifact together with the test. Because it doesn't really belong at all in the main project. Then users can contribute to other jmx logging artifacts for logback etc as well. 

So I highly suggest to move it to its own artifact (jmx/log4j test we currently have), or at least move it to contrib and out of the main project.

, bq. What generates the docs/?

We use Forrest. You just have to update the files under src/docs/src/documentation/content/xdocs, and ideally run ant docs to make sure it builds alright., FYI ant docs didn't work for me with Forrest 0.9. I use Forrest 0.8., Not directly related, but please have a note Log4j 2 reached RC1 and would be a great to choice to default too. It also has a (native) slf4j binding and brings an API with it too, if you want it. API supports various libs aswell. Check: http://logging.apache.org/log4j/2.x, Ok so we still have some things to take care of.

1. Move log4j JMX mbeans to a separate artifact.
2. Update the documentation., Any update on this? log4j has been officially announced dead (end of life):
https://blogs.apache.org/foundation/entry/apache_logging_services_project_announces, Just got burned by this. Love to see the log4j dependency at least moved out of runtime... :-(, This would be so awesome to get in., Agreed, it'd be good to get this one in. Is anyone here willing to update the patch to make sure it can be applied cleanly to the 3.5 branch and trunk?, I will re-base and submit the patch, Submitting patch for ZOOKEEPER-1371-05.patch trunk and branch-3.5, Patch lgtm, thanks [~arshad.mohammad]! Waiting for CI to run, then i'll merge. , -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12773684/ZOOKEEPER-1371-05.patch
  against trunk revision 1715557.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 12 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2963//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2963//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2963//console

This message is automatically generated., I am ignoring the javadoc warnings for now, given that we have many of them already:

{code}
$ ant javadoc
...
  [javadoc] 15 errors
  [javadoc] 100 warnings
{code}

We should clean these in a separate ticket. , Merged:

https://svn.apache.org/repos/asf/zookeeper/trunk@1715577
https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.5@1715578

Thanks [~arshad.mohammad]!, Sure [~rgs]. I have already analysed these warning. Currently in the system there are 10 javac warning and 1 javadoc warning. May some more warnings will get added in after this patch commit. I will create separate ticket and handle there., Thanks [~rgs] for committing the patch.
Thanks [~calvarez] and [~Rockj] for contributing the patch
Thanks everyone for your review comments, [~rgs], I submitted another patch ZOOKEEPER-2329 to clean the warnings. But I see only 10 javac and 1 javadoc warning(actually 9 javac warning as this patch reduced one javac warning). Please guide me if I am missing some thing., FAILURE: Integrated in ZooKeeper-trunk #2816 (See [https://builds.apache.org/job/ZooKeeper-trunk/2816/])
ZOOKEEPER-1371: Remove dependency on log4j in the source code
(Arshad Mohammad via rgs) (rgs: [http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1715577])
* trunk/CHANGES.txt
* trunk/build.xml
* trunk/ivy.xml
* trunk/src/contrib/loggraph/ivy.xml
* trunk/src/contrib/rest/ivy.xml
* trunk/src/contrib/zooinspector/ivy.xml
* trunk/src/docs/src/documentation/content/xdocs/zookeeperAdmin.xml
* trunk/src/java/main/org/apache/zookeeper/Login.java
* trunk/src/java/main/org/apache/zookeeper/Shell.java
* trunk/src/java/main/org/apache/zookeeper/client/FourLetterWordMain.java
* trunk/src/java/main/org/apache/zookeeper/jmx/ManagedUtil.java
* trunk/src/java/test/org/apache/zookeeper/server/ZxidRolloverTest.java
* trunk/src/java/test/org/apache/zookeeper/test/FollowerResyncConcurrencyTest.java
* trunk/src/java/test/org/apache/zookeeper/test/MultiTransactionTest.java
* trunk/src/java/test/org/apache/zookeeper/test/RestoreCommittedLogTest.java
, After this patch, ZooKeeper no longer produces any logging, because there is no SLF4J binding jar available on the runtime classpath.  I filed blocker issue ZOOKEEPER-2342 for follow-up., Maybe splitting zookeeper to multiple modules (server, client, shared/common) would help. Then use same logging api in all modules, and use whatever logging implementation is preferred in server module only, letting client module users use whichever logging implementation they prefer., It's unacceptable to ship a product with logging broken out of the box.

On ZOOKEEPER-2342, I've described a choice between bundling the Log4J 1 binding (backwards-compatible, but Log4J 1 is end of life) or bundling the Log4J 2 binding (actively supported, but backwards-incompatible).  I'd encourage anyone interested in participating further in the discussion to comment on that issue, since this one is closed.  Thanks!, We now have multiple binding +1's for a revert of this patch for 3.5.2 after discussion on the dev list.  I will wait 24 hours before proceeding with the revert, just to make sure everyone has been given an opportunity to comment., ZOOKEEPER-2393 tracks a partial revert to restore the SLF4J Log4J 1 binding on the runtime classpath., I second the suggestion by [~sslavic] to split out the server distro from other stuff, such as the jar that clients would use. Otherwise everyone who uses the ZK client has to add an exclusion for ZK's log4j dependency in order to make sure their slf4j works right (if they're not using Log4j).]