[Scenario :

1. There are so many nodes under /test/subdir1/subdir2
2. One node is created under /test/subdir2/subdir. here the zxid is say X;
3. Now snapshotting with zxid X. started due to reaching snapCount threshold.
4. Now before snapshot was still writing nodes under /test/subdir1/subdir2,
    children nodes under /test/subdir2/subdir are created and deleted. ( /test/subdir2/subdir/file)
    /test/subdir2/subdir also deleted.
5. When snapshot comes to write /test/subdir2 it will have no childs, same is stored in  snapshot.
6. Now if the Zk restarted while loading data tree, after loading snapshot, 
    there will be txn for create /test/subdir2/subdir/file, but there wont be parent node, because it was already missed from snapshot. And restart fails., Attaching a test, executed using debug points. Reproduced in both trunk and 3.4.5 versions., I believe this is similar issue as ZOOKEEPER-1573.   In that case, I found that it is a false positive. If the check is disable, the result after snapshot restore is still a valid state of the system.   I don't quite follow your example but it seem to be similar that we can ignore the failure right?   

Anyway the work around is to actually remove snapshot and txnlog for a given server.  , Yes I agree that this is issue is same as ZOOKEEPER-1573. 
bq. Anyway the work around is to actually remove snapshot and txnlog for a given server.
This is Ok. but in production cluster, it would be better to avoid this situation.

As you told removing the check only can solve the issue., Resolving as duplicate of ZOOKEEPER-1573, 
Patch has been submitted to ZOOKEEPER-1573]