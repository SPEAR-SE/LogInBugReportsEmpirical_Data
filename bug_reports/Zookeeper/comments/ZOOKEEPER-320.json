[This patch does not include locking for the auth data, as per ZOOKEEPER-319., This patch includes auth data locking as per ZOOKEEPER-319., I should perhaps clarify that the reason one might want to unconditionally wait on the auth completion after calling zoo_add_auth() is so as to provide one's own sync version of that function.  The various sync functions such as zoo_wget(), zoo_set2(), etc. are just wrappers of the async versions followed by an unconditional wait on the relevant completion.  Similarly, in a context which must be exclusively sync-only, zoo_add_auth() needs to be followed by a wait on its completion., This version avoids holding the auth lock while calling the user's auth completion function (which may run for a long time; we don't know)., +1 for the second patch., Updated with a NULL initialization as per the comment on ZOOKEEPER-319:

https://issues.apache.org/jira/browse/ZOOKEEPER-319#action_12676824

Out of interest --- what compiler gives these errors?  My gcc 4.1.2 with -Wall doesn't report any troubles., Also, please note my suggestion that the docs mention the need to catch, ignore, or otherwise be aware of SIGPIPE signals., my compiler is gcc 3.4.4
, I just committed this. Thanks chris., Integrated in ZooKeeper-trunk #243 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/243/])
    . call auth completion in free_completions(). (chris darroch via mahadev)
]