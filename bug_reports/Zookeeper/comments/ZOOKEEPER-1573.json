[Attached the patch for the issue. 
Ignoring the errors during restore.
Please review, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12614040/ZOOKEEPER-1573.patch
  against trunk revision 1541810.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1770//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1770//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1770//console

This message is automatically generated., Probably need a comment from other people as well.  We disable this check in our prod system because we have some other way of detecting data inconsistency.  This check has shown to catch a real bug but it can also raise false possible in certain usage pattern., Nit - maybe this:

{noformat}
+         * Snapshots are lazily created. So when the snapshot was in progress
+         * there is a chance that some of the later transactions can go into
+         * snapshot. While restoring same transactions NONODE/NODEEXISTS errors
+         * can come. Basically we can ignore all errors during the restore.
{noformat}

could be more clear like this:

{noformat}
+         * Snapshots are lazily created. So when a snapshot is in progress,
+         * there is a chance for later transactions to make to into the snapshot.
+         * Then when the snapshot is restored,  NONODE/NODEEXISTS errors
+         * could occur. It should be safe to ignore these.
{noformat}

Nit:

{noformat}
+                LOG.warn("Intrrupted");
{noformat}

typo.

Nit:
{noformat}
+            LOG.debug("Ignoring processTxn failure hdr: " + hdr.getType() + " : error: " + rc.err + " path: " + rc.path);
{noformat}

use string extrapolation with {} instead of string concatenation. 

Nit:
{noformat}
+    /**
+     * Test we can restore a snapshot that has delete txns ahead of the zxid of the snapshot file. ZOOKEEPER-1573
+     */
{noformat}

make it:

{noformat}
+    /**
+     * ZOOKEEPER-1573: test restoring a snapshot with deleted txns ahead of the snapshot file's zxid. 
+     */
{noformat}

Nit:
{noformat}
+        LOG.info("Set lastProcessedZxid to " + zks.getZKDatabase().getDataTreeLastProcessedZxid());
{noformat}

ditto wrt to string extrapolation via {}.

, Updated the patch with comments.
Please review, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12614286/ZOOKEEPER-1573.patch
  against trunk revision 1542355.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1777//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1777//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1777//console

This message is automatically generated., Thanks for the quick update Vinay. A few more nits:

In:

{noformat}
+         * Snapshots are lazily created. So when a snapshot is in progress,
+         * there is a chance for later transactions to make to into the snapshot.
+         * Then when the snapshot is restored,  NONODE/NODEEXISTS errors
+         * could occur. It should be safe to ignore these.
{noformat}

I had a typo in my suggestion (sorry) - it should be: "...transactions to make into the snapshot".

In:

{noformat}
+            LOG.debug("Ignoring processTxn failure hdr: {}, error: {}, path: {}", hdr.getType(), rc.err, rc.path);
{noformat}

the line is too long, maybe:
{noformat}
+            LOG.debug("Ignoring processTxn failure hdr: {}, error: {}, path: {}",
+                   hdr.getType(), rc.err, rc.path);
{noformat}

In:

{noformat}
+        Assert.assertTrue("waiting for server being up ", ClientBase.waitForServerUp(HOSTPORT, CONNECTION_TIMEOUT));
{noformat}

line is too long. And this line appears again later on. , Updated the patch.

I thought for zookeepeer max line length is 120 chars. 

Now wrapped all lines to 80 chars.
Thanks for the review, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12614308/ZOOKEEPER-1573.patch
  against trunk revision 1542355.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1778//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1778//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1778//console

This message is automatically generated., Last nit (though feel free to ignore it since it refers to improving old code as well):

{noformat}
+
+        long start = System.currentTimeMillis();
+        while (!connected) {
+            long end = System.currentTimeMillis();
+            if (end - start > 5000) {
+                Assert.assertTrue("Could not connect with server in 5 seconds",
+                        false);
+            }
+            try {
+                Thread.sleep(200);
+            } catch (Exception e) {
+                LOG.warn("Interrupted");
+            }
+        }
{noformat}

this is copy/pasted for two other tests as well - can we move it to a method called waitConnected and call that instead? It'll make tests shorted and more readable I think. 
, Updated the last nit as well.

removed the duplicate code in 3 places and moved to a method.
, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12614319/ZOOKEEPER-1573.patch
  against trunk revision 1542355.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1779//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1779//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1779//console

This message is automatically generated., Adding patch for branch-3.4, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12614362/ZOOKEEPER-1573-3.4.patch
  against trunk revision 1542355.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1781//console

This message is automatically generated., I've seen this happen a couple times now and think it's a reasonable candidate for 3.4.6. [~fpj] can you comment as the whether you think this is an acceptable change to the code?, yes, we should get this in 3.4.6. let me give it a closer look, but ignoring NONODE/NODEEXISTS sounds like the right thing to do., This patch looks good to me. +1, I'll wait to commit until I hear from [~fpj]

fwiw I tested this manually with a failing repo I had available. Without this patch the server failed to start, with this patch applied the server started successfully and the data looked correct on the server thereafter. (tested with 3.4 branch), Hi [~fpj], did you have anything more on this? I'd like to commit it. (see my previous comment), I'll review it this weekend. I haven't had a chance to get to it today, I'm sorry., It seems reasonable to solve the problem this way, ignoring a nonode for the parent. Perhaps a better way would be to advance the txn log to make sure that the delete of the parent is there. The assumption for the current patch is that a delete will show up in the txn log at some point, which is fine if nothing has gone wrong. If it is difficult to advance the txn log, we could alternatively keep information about the missing parent to check later that the delete is there.

Because we don't want to hold 3.4.6 for much longer, if you people prefer, we could check this in and create a new jira to fix it in the way I'm proposing later on, assuming my proposal makes sense., fwiw, i like the idea of merging this and opening a new ticket to revisit the issue later on (potentially with a more robust approach). , Cool because I was thinking similar. I'm not 100% sure though it's going to be as simple as we'd like (see ZOOKEEPER-1879). I'll take care of committing this in a bit. Thanks all!, Committed to 3.4.6 and Trunk. Thanks Vinayakumar B!, Thanks all, SUCCESS: Integrated in ZooKeeper-trunk #2212 (See [https://builds.apache.org/job/ZooKeeper-trunk/2212/])
ZOOKEEPER-1573. Unable to load database due to missing parent node (Vinayakumar B via phunt, fpj) (phunt: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1566739)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/test/LoadFromLogTest.java
, Closing issues after releasing 3.4.6.]