[The attached patch checks the annotation for an expected exception before logging the failure message.  To test this change, I ran {{ByteBufferInputStreamTest}}, which has a test case with an expected exception.  Without the patch, it logs the failure message and stack trace, even though the test really passed.  With the patch, the failure message goes away.  I also wrote an intentionally broken test (not included in this patch) that throws an exception.  When I have the expected exception annotation on that test, it doesn't log, but once I remove the expected exception annotation, it does log the failure message and full stack trace., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12727036/ZOOKEEPER-2174.001.patch
  against trunk revision 1672934.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2644//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2644//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2644//console

This message is automatically generated., I reviewed the Jenkins output and checked for the tests that I've been seeing logged as failures erroneously by the runner.  These are no longer logging the failure message, so it appears this patch had the desired effect., Thanks for the code, [~cnauroth]!

Two nits:
1. can you add some comments so it's easier to understand?
2. add a logging when expected exception gets caught, [~hdeng], thank you for the code review!  I'm attaching patch v002 to address your feedback.  Here is sample output from {{ByteBufferInputStreamTest}}:

{code}
    [junit] 2015-04-22 11:28:09,598 [myid:] - INFO  [main:JUnit4ZKTestRunner$LoggedInvokeMethod@53] - RUNNING TEST METHOD testReadArrayOffsetLength_LengthTooLarge
    [junit] 2015-04-22 11:28:09,598 [myid:] - INFO  [main:JUnit4ZKTestRunner$LoggedInvokeMethod@71] - TEST METHOD testReadArrayOffsetLength_LengthTooLarge THREW EXPECTED EXCEPTION class java.lang.IndexOutOfBoundsException
    [junit] 2015-04-22 11:28:09,598 [myid:] - INFO  [main:ZKTestCase$1@65] - SUCCEEDED testReadArrayOffsetLength_LengthTooLarge
    [junit] 2015-04-22 11:28:09,598 [myid:] - INFO  [main:ZKTestCase$1@60] - FINISHED testReadArrayOffsetLength_LengthTooLarge
{code}
, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12727298/ZOOKEEPER-2174.002.patch
  against trunk revision 1672934.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2645//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2645//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2645//console

This message is automatically generated., Thanks [~cnauroth] for the patch, it looks good. Just one comment:
.
1. In logs please use {} instead of string concatenation.
{code}
LOG.info("TEST METHOD " + name + " THREW EXPECTED EXCEPTION " + annotation.expected());
LOG.info("TEST METHOD FAILED " + name, t);
{code}, [~rakeshr], thank you for your code review.  Here is patch v003.  I took the opportunity to convert all logging statements in the class to slf4j parameterized messages where possible.  For the statement that logs the full exception, I think we're stuck with string concatenation, because slf4j doesn't offer a method that accepts both a parameterized message and an exception at the same time., Thanks [~cnauroth] for correcting all the cases.
bq. slf4j doesn't offer a method that accepts both a parameterized message and an exception at the same time.
I could see similar usage in the project and it seems working fine. What do you say?

{{StaticHostProvider.java}}
{code}
            } catch (UnknownHostException ex) {
                LOG.warn("No IP address found for server: {}", address, ex);
            }
{code}, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12727517/ZOOKEEPER-2174.003.patch
  against trunk revision 1672934.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2646//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2646//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2646//console

This message is automatically generated., [~rakeshr], yes, you're right.  The trick is that this capability doesn't show up in the method signatures shown in the slf4j JavaDocs, which is what I was using.  Instead, the method signatures that accept {{Object}} have the capability to check if the last argument was a {{Throwable}} and log the stack trace accordingly.  This is documented here:

http://www.slf4j.org/faq.html#paramException

Sorry I missed that.  Here is patch v004 to change the remaining log statement., Thanks [~cnauroth] for taking care this.

+1 latest patch looks good to me., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12727532/ZOOKEEPER-2174.004.patch
  against trunk revision 1672934.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2647//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2647//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2647//console

This message is automatically generated., Thanks for the patch [~cnauroth]! Could you generate one for the 3.4 branch as well please?

[~rakeshr]: shall I commit the available one to trunk && 3.5?, Hello [~rgs].  Here is a patch for branch-3.4.  Thank you!, Thanks [~cnauroth]!

[~rakeshr], [~hdeng], [~michim]: can I get a +1 for the 3.4 patch as well, and then I'll push to all branches - thanks!, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12729718/ZOOKEEPER-2174-branch-3.4.004.patch
  against trunk revision 1676359.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2664//console

This message is automatically generated., +1 branch-3.4 patch looks good to me., Merged:

trunk: http://svn.apache.org/viewvc?view=revision&revision=1677460
branch-3.5: http://svn.apache.org/viewvc?view=revision&revision=1677461
branch-3.4: http://svn.apache.org/viewvc?view=revision&revision=1677463

thanks [~cnauroth]!, [~rgs], [~hdeng] and [~rakeshr], thank you for the reviews and the commit!, SUCCESS: Integrated in ZooKeeper-trunk #2681 (See [https://builds.apache.org/job/ZooKeeper-trunk/2681/])
ZOOKEEPER-2174 JUnit4ZKTestRunner logs test failure for all exceptions

JUnit4ZKTestRunner logs test failure for all exceptions, even if the test
method is annotated with an expected exception (Chris Nauroth via rgs). (rgs: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1677460)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/JUnit4ZKTestRunner.java
]