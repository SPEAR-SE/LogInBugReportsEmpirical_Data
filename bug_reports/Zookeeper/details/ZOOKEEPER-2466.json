{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12986953","self":"https://issues.apache.org/jira/rest/api/2/issue/12986953","key":"ZOOKEEPER-2466","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310801","id":"12310801","key":"ZOOKEEPER","name":"ZooKeeper","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310801&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310801&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310801&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310801&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10484","id":"10484","description":"Apache ZooKeeper related","name":"ZooKeeper"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12326518","id":"12326518","name":"3.6.0","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12343268","id":"12343268","description":"Beta release against 3.5 branch","name":"3.5.5","archived":false,"released":false}],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2016-07-05T21:37:53.832+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Thu May 10 20:46:46 UTC 2018","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-2466/watchers","watchCount":5,"isWatching":false},"created":"2016-07-05T21:04:28.793+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.svg","name":"Critical","id":"2"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"2.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"issuelinks":[{"id":"12473873","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12473873","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12687075","key":"ZOOKEEPER-1856","self":"https://issues.apache.org/jira/rest/api/2/issue/12687075","fields":{"summary":"zookeeper C-client can fail to switch from a dead server in a 3+ server ensemble if the client only has a 2 server list.","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/10002","description":"A patch for this issue has been uploaded to JIRA by a contributor.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/document.png","name":"Patch Available","id":"10002","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/4","id":4,"key":"indeterminate","colorName":"yellow","name":"In Progress"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2018-05-10T20:46:46.451+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/10002","description":"A patch for this issue has been uploaded to JIRA by a contributor.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/document.png","name":"Patch Available","id":"10002","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/4","id":4,"key":"indeterminate","colorName":"yellow","name":"In Progress"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312380","id":"12312380","name":"c client","description":"The c client interface to ZooKeeper"}],"timeoriginalestimate":null,"description":"I've been looking at {{Zookeeper_simpleSystem::testFirstServerDown}} and I observed the following behavior. The list of servers to connect contains two servers, let's call them S1 and S2. The client never connects, but the odd bit is the sequence of servers that the client tries to connect to:\n\n{noformat}\nS1\nS2\nS1\nS1\nS1\n<keeps repeating S1>\n{noformat}\n\nIt intrigued me that S2 is only tried once and never again. Checking the code, here is what happens. Initially, {{zh->reconfig}} is 1, so in {{zoo_cycle_next_server}} we return an address from {{get_next_server_in_reconfig}}, which is taken from {{zh->addrs_new}} in this test case. The attempt to connect fails, and {{handle_error}} is invoked in the error handling path. {{handle_error}} actually invokes {{addrvec_next}} which changes the address pointer to the next server on the list.\n\nAfter two attempts, it decides that it has tried all servers in {{zoo_cycle_next_server}} and sets {{zh->reconfig}} to zero. Once {{zh->reconfig == 0}}, we have that each call to {{zoo_cycle_next_server}} moves the address pointer to the next server in {{zh->addrs}}. But, given that {{handle_error}} also moves the pointer to the next server, we end up moving the pointer ahead twice upon every failed attempt to connect, which is wrong.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12822864","id":"12822864","filename":"ZOOKEEPER-2466.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"created":"2016-08-09T19:08:12.663+0000","size":5208,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12822864/ZOOKEEPER-2466.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12818439","id":"12818439","filename":"ZOOKEEPER-2466.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"created":"2016-07-17T06:23:50.489+0000","size":3823,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12818439/ZOOKEEPER-2466.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Client skips servers when trying to connect","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12986953/comment/15363300","id":"15363300","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shralex","name":"shralex","key":"shralex","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alexander Shraer","active":true,"timeZone":"America/Los_Angeles"},"body":"I found a JIRA that's probably related, liked it above. Also checked Java client, I don't think the problem occurs there.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shralex","name":"shralex","key":"shralex","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alexander Shraer","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-07-05T21:37:53.832+0000","updated":"2016-07-05T21:37:53.832+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12986953/comment/15363534","id":"15363534","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"body":"[~fpj] Zookeeper_simpleSystem::testFirstServerDown seems not related to reconfig test - it is only called in TestClient.cc. Are you referring to another test failure in TestReconfigServer.cc? Is it possible that you can post the failed log so I can try to reproduce the specific failed test on my side (my c client tests of 3.5.2 alpha consistently passed for me today.).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"created":"2016-07-06T00:19:55.970+0000","updated":"2016-07-06T00:19:55.970+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12986953/comment/15364131","id":"15364131","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"[~shralex] Good catch, it is exactly the same problem. The description about a list of two servers, but it is an issue in general that we skip one server of the list every time.\n\n[~hanm] The test case isn't related to reconfiguration, that's correct. However, zh->reconfig is set to 1 initially according to the logic we have implemented. That's what I observed while tracing the execution. The fact that it is set to 1 initially actually changes the lists we are getting the server addresses from (there are _old and _new lists in the handle).\n\nThere isn't much in the output, but here is a sample:\n\n{noformat}\n2016-07-05 18:35:50,174:42240:ZOO_INFO@log_env@1027: Client environment:zookeeper.version=zookeeper C client 3.5.2\n2016-07-05 18:35:50,174:42240:ZOO_INFO@log_env@1031: Client environment:host.name=fpj-test-apache-01\n2016-07-05 18:35:50,174:42240:ZOO_INFO@log_env@1038: Client environment:os.name=Linux\n2016-07-05 18:35:50,174:42240:ZOO_INFO@log_env@1039: Client environment:os.arch=4.4.0-28-generic\n2016-07-05 18:35:50,174:42240:ZOO_INFO@log_env@1040: Client environment:os.version=#47-Ubuntu SMP Fri Jun 24 10:09:13 UTC 2016\n2016-07-05 18:35:50,174:42240:ZOO_INFO@log_env@1048: Client environment:user.name=fpj\n2016-07-05 18:35:50,174:42240:ZOO_INFO@log_env@1056: Client environment:user.home=/root\n2016-07-05 18:35:50,174:42240:ZOO_INFO@log_env@1068: Client environment:user.dir=/home/fpj/code/zookeeper-3.5.2-alpha/src/c\n2016-07-05 18:35:50,174:42240:ZOO_INFO@zookeeper_init_internal@1111: Initiating client connection, host=127.0.0.1:22182,127.0.0.1:22181 sessionTimeout=10000 watcher=0x447050 sessionId=0 sessionPasswd=<null> context=0x7ffcc708fec0 flags=0\n2016-07-05 18:35:51,174:42240:ZOO_WARN@get_next_server_in_reconfig@1256: [OLD] count=0 capacity=0 next=0 hasnext=0\n2016-07-05 18:35:51,174:42240:ZOO_WARN@get_next_server_in_reconfig@1259: [NEW] count=2 capacity=16 next=0 hasnext=1\n2016-07-05 18:35:51,175:42240:ZOO_WARN@get_next_server_in_reconfig@1268: Using next from NEW=127.0.0.1:22182\n2016-07-05 18:35:51,175:42240:ZOO_ERROR@handle_socket_error_msg@2353: Socket [127.0.0.1:22182] zk retcode=-4, errno=111(Connection refused): server refused to accept the client\n2016-07-05 18:35:51,175:42240:ZOO_WARN@get_next_server_in_reconfig@1256: [OLD] count=0 capacity=0 next=0 hasnext=0\n2016-07-05 18:35:51,175:42240:ZOO_WARN@get_next_server_in_reconfig@1259: [NEW] count=2 capacity=16 next=1 hasnext=1\n2016-07-05 18:35:51,175:42240:ZOO_WARN@get_next_server_in_reconfig@1268: Using next from NEW=127.0.0.1:22181\n2016-07-05 18:35:51,175:42240:ZOO_ERROR@handle_socket_error_msg@2353: Socket [127.0.0.1:22181] zk retcode=-4, errno=111(Connection refused): server refused to accept the client\n2016-07-05 18:35:51,175:42240:ZOO_WARN@get_next_server_in_reconfig@1256: [OLD] count=0 capacity=0 next=0 hasnext=0\n2016-07-05 18:35:51,175:42240:ZOO_WARN@get_next_server_in_reconfig@1259: [NEW] count=2 capacity=16 next=2 hasnext=0\n2016-07-05 18:35:51,175:42240:ZOO_WARN@get_next_server_in_reconfig@1279: Failed to find either new or old\n2016-07-05 18:35:51,175:42240:ZOO_ERROR@handle_socket_error_msg@2353: Socket [127.0.0.1:22182] zk retcode=-4, errno=111(Connection refused): server refused to accept the client\n2016-07-05 18:35:51,175:42240:ZOO_ERROR@handle_socket_error_msg@2353: Socket [127.0.0.1:22182] zk retcode=-4, errno=111(Connection refused): server refused to accept the client\n2016-07-05 18:35:51,176:42240:ZOO_ERROR@handle_socket_error_msg@2353: Socket [127.0.0.1:22182] zk retcode=-4, errno=111(Connection refused): server refused to accept the client\n2016-07-05 18:35:51,176:42240:ZOO_ERROR@handle_socket_error_msg@2353: Socket [127.0.0.1:22182] zk retcode=-4, errno=111(Connection refused): server refused to accept the client\n<This line keeps repeating>\n{noformat}\n\nNo server seems to be up for the client to connect, which I don't understand the reason, but I've focused mostly on why the address is the same after some point rather than alternating between the two addresses.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2016-07-06T10:52:54.122+0000","updated":"2016-07-06T10:52:54.122+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12986953/comment/15365243","id":"15365243","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"body":"[~fpj] Just to confirm that I am seeing the same failures of TestClient.cc in the VM your provided consistently. Not sure why same tests passed on my own cluster consistently. Will report back after I dig a little more into this.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"created":"2016-07-06T22:24:45.186+0000","updated":"2016-07-06T22:24:45.186+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12986953/comment/15367395","id":"15367395","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"[~shralex] [~hanm]\n\nbq. From my brief digging, my feeling was that the java way of doing it was better: statichostprovider is the only one that increments pointers and\ngives out addresses and the caller doesn't do any of this... But this may\nbe too much of a change for C.\n\nI think that if we make the change in ZOOKEEPER-1856, we will have the calls to addrvec_next concentrated in zoo_cycle_next_server. The only exception is the processing of read-only state in zookeeper_interest:\n\n{noformat}\nif (zh->state == ZOO_READONLY_STATE) {\n            int idle_ping_rw = calculate_interval(&zh->last_ping_rw, &now);\n            if (idle_ping_rw >= zh->ping_rw_timeout) {\n                zh->last_ping_rw = now;\n                idle_ping_rw = 0;\n                zh->ping_rw_timeout = min(zh->ping_rw_timeout * 2,\n                                          MAX_RW_TIMEOUT);\n                if (ping_rw_server(zh)) {\n                    struct sockaddr_storage addr;\n                    addrvec_peek(&zh->addrs, &addr);\n                    zh->ping_rw_timeout = MIN_RW_TIMEOUT;\n                    LOG_INFO(LOGCALLBACK(zh),\n                             \"r/w server found at %s\",\n                             format_endpoint_info(&addr));\n                    handle_error(zh, ZRWSERVERFOUND);\n                } else {\n                    addrvec_next(&zh->addrs, NULL);\n                }\n            }\n            send_to = min(send_to, zh->ping_rw_timeout - idle_ping_rw);\n        }\n{noformat}\n\nHere we call handle_error, but I'm thinking that we don't really want to skip to the next server, so it is ok that we don't call addrvec_next in handle_error. If it is, then we can simply call zoo_cycle here. The call to addrvec_next is advancing the pointer but not changing zh->addr_cur, so we can't call replace it with zoo_cycle. I need to think a bit more about how to remove that addrvec_next call.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2016-07-08T08:28:50.628+0000","updated":"2016-07-08T08:28:50.628+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12986953/comment/15368703","id":"15368703","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"body":"I am thinking we can do this:\n# Remove addrvec_next in handle_error. Make it clear that handle_error only does clean up / logging work. If we need to try another server, we need explicitly call zoo_cycle_server or addrvec_next. \n\n# For read only state processing, I am thinking we could do this (after addrvec_next is removed from handle_error), because if we are here then the current server is not usable anyway (either it is a dead server or a read-write server, and we need a read only server if I understand this logic correctly), so we'd move on and try another server.\n{code}\n                if (ping_rw_server(zh)) {\n                    struct sockaddr_storage addr;\n                    addrvec_peek(&zh->addrs, &addr);\n                    zh->ping_rw_timeout = MIN_RW_TIMEOUT;\n                    LOG_INFO(LOGCALLBACK(zh),\n                             \"r/w server found at %s\",\n                             format_endpoint_info(&addr));\n                    handle_error(zh, ZRWSERVERFOUND);\n                } \n                addrvec_next(&zh->addrs, NULL);\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"created":"2016-07-08T23:30:48.846+0000","updated":"2016-07-08T23:30:48.846+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12986953/comment/15369132","id":"15369132","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"bq. if we are here then the current server is not usable anyway (either it is a dead server or a read-write server, and we need a read only server if I understand this logic correctly), so we'd move on and try another server\n\nIf the client is in read-only mode and it finds a read-write server, then it should prefer the read-write server. That's one thing that is confusing me here, if it is finds a read-write server, then it should stick to it and transition away from read-only.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2016-07-09T15:23:53.371+0000","updated":"2016-07-09T15:23:53.371+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12986953/comment/15370027","id":"15370027","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"body":"I see, I got the logic wrong - just checked Java code and it does same thing (prefer RW server to read only server) by throwing an exception.\n\nbq. That's one thing that is confusing me here, if it is finds a read-write server, then it should stick to it and transition away from read-only.\n\nI think the C code does this - if ping_rw_server(zh) != 0 then we find a rw server and the server address can be retrieved through addrvec_next(&zh->addrs, &zh->addr_cur), because the ping_rw_server uses the addrvec_peek to try next address. What handle_error does is to transition away from the current server (read-only) to the new read-write server, by cleaning up the current state (as if there is an error) and shift the next address to try to the next address, which is validated by ping_rw_server(zh) to be a read-write server. \n\nSo I guess we can still remove addrvec_next in handle_error and explicitly call addrvec_next:\n{code}\n if (ping_rw_server(zh)) {\n                    struct sockaddr_storage addr;\n                    addrvec_peek(&zh->addrs, &addr);\n                    zh->ping_rw_timeout = MIN_RW_TIMEOUT;\n                    LOG_INFO(LOGCALLBACK(zh),\n                             \"r/w server found at %s\",\n                             format_endpoint_info(&addr));\n                    handle_error(zh, ZRWSERVERFOUND);\n                    addrvec_next(&zh->addrs, &zh->addr_cur);\n                } else {\n                    addrvec_next(&zh->addrs, NULL);\n                }\n{code}\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"created":"2016-07-11T00:34:41.028+0000","updated":"2016-07-11T00:34:41.028+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12986953/comment/15370449","id":"15370449","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"[~hanm] it sounds right, but I liked [~shralex] observation and ideally we should advance the pointer of the server list in a single place. If we can remove the calls to {{addrvec_next}} here and only call {{zoo_cycle_next_server}}, then I believe we would pretty much have it. I think we can replace the first call to {{addrvec_next}} in the RO block you shared with {{zoo_cycle_next_server}}, but not the second if I'm reading this correctly.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2016-07-11T09:33:09.212+0000","updated":"2016-07-11T09:33:09.212+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12986953/comment/15374010","id":"15374010","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"body":"bq. we should advance the pointer of the server list in a single place. \nAgree.\n\nbq. I think we can replace the first call to addrvec_next in the RO block you shared with zoo_cycle_next_server\nzoo_cycle_next_server does more than addrvec_next - and in some cases the addrvec_next might not get called if zoo_cycle_next_server returns earlier within the reconfig logic and in this case the current server addr is reset to NULL. So it seems to me that addrvec_next and zoo_cycle_next_server is not semantically equivalent. \n\nbq. but not the second if I'm reading this correctly.\nYeah, I think the addrvec_next(&zh->addrs, NULL) just change the state of the zh-addrs vector without changing the state of the current server in zh handle - zoo_cycle_next_server will change the state of the current server, so both are not semantically equivalent.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"created":"2016-07-13T00:03:19.116+0000","updated":"2016-07-13T00:03:19.116+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12986953/comment/15375293","id":"15375293","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"{quote}\nzoo_cycle_next_server does more than addrvec_next - and in some cases the addrvec_next might not get called if zoo_cycle_next_server returns earlier within the reconfig logic and in this case the current server addr is reset to NULL. So it seems to me that addrvec_next and zoo_cycle_next_server is not semantically equivalent.\n{quote}\n\nTrue, they aren't semantically equivalent, but that actually could be a bug. What if the client is in RO mode and reconfig is enabled? Shouldn't it try follow the same process in zoo_cycle_next_server to find an RW server?\n\n{quote}\nYeah, I think the addrvec_next(&zh->addrs, NULL) just change the state of the zh-addrs vector without changing the state of the current server in zh handle - zoo_cycle_next_server will change the state of the current server, so both are not semantically equivalent.\n{quote}\n\nWe could either leave as is or have a separate function to advance that only takes one parameter. The latter sounds a bit unnecessary. Another option is to have a second parameter for zoo_cycle_next_server so that we update according to the second parameter rather than always updating zh->addr_cur. Does it work?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2016-07-13T16:23:02.786+0000","updated":"2016-07-13T16:23:02.786+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12986953/comment/15376300","id":"15376300","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"body":"bq. but that actually could be a bug. \nGood point.\n\nbq. have a second parameter for zoo_cycle_next_server so that we update according to the second parameter rather than always updating zh->addr_cur.\nI like this solution which parameterizes zoo_cycle_next_server such that what state it's changing is explicit in the interface, and use zoo_cycle_next_server instead of the low level addrvec function because we could also be in reconfig mode when this 'else' branch is executed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"created":"2016-07-14T04:41:38.861+0000","updated":"2016-07-14T04:41:38.861+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12986953/comment/15376912","id":"15376912","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"[~hanm] thanks for the feedback. are you interested in providing the patch for this issue or should I go ahead and work on one? I'm happy either way.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2016-07-14T13:31:52.104+0000","updated":"2016-07-14T13:31:52.104+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12986953/comment/15377183","id":"15377183","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"body":"[~fpj] I am working on a patch, will attach the patch in a day or two.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"created":"2016-07-14T16:03:46.098+0000","updated":"2016-07-14T16:03:46.098+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12986953/comment/15381135","id":"15381135","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"body":"Attach a patch. While doing this I think keep zoo_cycle_next_server its current signature is simpler implementation wise, otherwise we'll change a public API and also need modify a couple of other places in code (like get_next_sever_in_reconfig). It also fixes an issue that previously addrvec_next was not properly protected if we are in reconfig mode. If we are, we'll just let existing reconfig logic handling server shifts and then retry when reconfig is finished.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"created":"2016-07-17T06:23:50.494+0000","updated":"2016-07-17T06:23:50.494+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12986953/comment/15382656","id":"15382656","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"-1 overall.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12818439/ZOOKEEPER-2466.patch\n  against trunk revision 1750739.\n\n    +1 @author.  The patch does not contain any @author tags.\n\n    -1 tests included.  The patch doesn't appear to include any new or modified tests.\n                        Please justify why no new tests are needed for this patch.\n                        Also please list what manual steps were performed to verify this patch.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3275//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3275//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3275//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-18T17:24:47.477+0000","updated":"2016-07-18T17:24:47.477+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12986953/comment/15383563","id":"15383563","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"[~hanm] as you explained, there is a behavior change since with RO status the client won't look for an RW server until the reconfig completes. Say that it disconnects from the RO server, though, maybe because the RO server has been removed from the configuration. What happens in this case? I'd expect that either it looks for another RO server or it waits until the reconfig completes, although the former is more aligned with the behavior we describe in the documentation.\n\nAlso, I was thinking if we need a test case for this. We found out about this problem through a test case, but apparently it doesn't always fails. It might be worth checking that the order of servers is as expected. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2016-07-19T04:20:12.947+0000","updated":"2016-07-19T04:20:12.947+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12986953/comment/15384597","id":"15384597","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"body":"[~fpj] \nbq. What happens in this case?\n\nWhat will happen depends on the state of the new server that the client connects to after reconfig. \n* If the new server is a read only server (does not matter if this is the same read-only server the client previously connects to, or a new read-only server client reconnects to, after load balancing), then client will continue seeking a RW server, after reconfig is finished. \n* If the new server is a read-write server, then we are done.\n\nSpecifically, for the case where the current RO server is taken out during reconfig, the error handling logic will take care of retry connect to another server, so we will finally end up at the previous cases I just listed. Does this make sense to you?\n\nbq. I was thinking if we need a test case for this.\nI agree - actually I think this patch fix a bug where we could change state of zh->addr_cur during reconfig, without protection, so potential data races leading to undefined behavior. Would be good to have a test case cover this. Java client might have a similar issue (because RO was introduced before Reconfig feature.).\nFor existing test case I'll double check and see if we can add / improve it to have a deterministically failing case cover this scenario. I'll work on adding both cases.\n\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"created":"2016-07-19T17:58:59.629+0000","updated":"2016-07-19T17:58:59.629+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12986953/comment/15401261","id":"15401261","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"[~hanm] from your latest message, I understand that this patch still needs some more work wrt:\n# Test case\n# Java client\n\nI'm canceling the patch for now.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2016-07-31T17:47:22.341+0000","updated":"2016-07-31T17:47:22.341+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12986953/comment/15401274","id":"15401274","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"body":"Yes those are on my list - I'll submit a new one next week. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"created":"2016-07-31T18:00:20.330+0000","updated":"2016-07-31T18:00:20.330+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12986953/comment/15414056","id":"15414056","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"body":"Hi [~fpj] a late update on this one:\nDesigned a test case to always make the bug reveal itself - the reason why we did not see the bug happen deterministically is because of the probabilistic nature of {code}get_next_server_in_reconfig{code} where it might return a working server, or not. The bug can be deterministically reproduced if we taking the probability out of equation by always making {code}get_next_server_in_reconfig{code} return none zero, and this can be achieved if all servers are down. So, the updated test case first make sure all servers are down and zk client can't get connected; then it started the server and verify client can connect. \n\nTested with and without the patched change in zookeeper.c: without the change the new test always fail and with the change the new test passes my stress test of 300 runs.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"created":"2016-08-09T19:08:12.667+0000","updated":"2016-08-09T19:08:12.667+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12986953/comment/15414059","id":"15414059","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"body":"Also [~fpj] I'd like to tackle the work related to Java client in a separate JIRA as this JIRA is specifically to C client and concern on Java client is more about reconfig + read-only other than the issue described here. What do you think?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"created":"2016-08-09T19:11:29.596+0000","updated":"2016-08-09T19:11:29.596+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12986953/comment/15414094","id":"15414094","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"+1 overall.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12822864/ZOOKEEPER-2466.patch\n  against trunk revision 1755379.\n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 3 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3342//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3342//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3342//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-08-09T19:29:24.509+0000","updated":"2016-08-09T19:29:24.509+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12986953/comment/16471086","id":"16471086","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"-1 overall.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12822864/ZOOKEEPER-2466.patch\n  against trunk revision 2fa315b7d0ed65828479fcdcc9e76ca8552fba4a.\n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 3 new or modified tests.\n\n    -1 patch.  The patch command could not apply the patch.\n\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3681//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-10T20:46:46.451+0000","updated":"2018-05-10T20:46:46.451+0000"}],"maxResults":24,"total":24,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-2466/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i30k7z:"}}