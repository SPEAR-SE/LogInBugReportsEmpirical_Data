{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12502065","self":"https://issues.apache.org/jira/rest/api/2/issue/12502065","key":"ZOOKEEPER-1026","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310801","id":"12310801","key":"ZOOKEEPER","name":"ZooKeeper","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310801&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310801&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310801&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310801&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10484","id":"10484","description":"Apache ZooKeeper related","name":"ZooKeeper"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2011-03-22T21:19:23.450+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Fri Mar 25 18:25:30 UTC 2011","customfield_12310420":"2456","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-1026/watchers","watchCount":1,"isWatching":false},"created":"2011-03-22T17:16:03.098+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":"sequential","customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315482","id":"12315482","description":"Fix release against 3.3 branch","name":"3.3.3","archived":false,"released":true,"releaseDate":"2011-02-27"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-03-25T18:25:30.881+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312382","id":"12312382","name":"server","description":"General issues with the ZooKeeper server."}],"timeoriginalestimate":null,"description":"I ran into a weird case where a Zookeeper server rejoins the cluster after missing several operations, and then a client creates a new sequential node that has a number earlier than the last node it created.  I don't have full logs, or a live system in this state, or any data directories, just some partial server logs and the evidence as seen by the client.  Haven't tried reproducing it yet, just wanted to see if anyone here had any ideas.  Here's the scenario (probably more info than necessary, but trying to be complete)\n\n1) Initially (5:37:20): 3 nodes up, with ids 215, 126, and 37 (called nodes #1, #2, and #3 below):\n2) Nodes periodically (and throughout this whole timeline) create sequential, non-ephemeral nodes under the /zkrsm parent node.\n3) 5:46:57: Node #1 gets notified of /zkrsm/0000000000000000_record0000002116\n4) 5:47:06: Node #1 restarts and rejoins\n5) 5:49:26: Node #2 gets notified of /zkrsm/0000000000000000_record0000002708\n6) 5:49:29: Node #2 restarts and rejoins\n7) 5:52:01: Node #3 gets notified of /zkrsm/0000000000000000_record0000003291\n8) 5:52:02: Node #3 restarts and begins the rejoining process\n9) 5:52:08: Node #1 successfully creates /zkrsm/0000000000000000_record0000003348\n10) 5:52:08: Node #2 dies after getting notified of /zkrsm/0000000000000000_record0000003348\n11) 5:52:10ish: Node #3 is elected leader (the ZK server log doesn't have wallclock timestamps, so not exactly sure on the ordering of this step)\n12) 5:52:15: Node #1 successfully creates /zkrsm/0000000000000000_record0000003292\n\nNote that the node created in step #12 is lower than the one created in step #9, and is exactly one greater than the last node seen by node #3 before it restarted.\n\nHere is the sequence of session establishments as seen from the C client of node #1 after its restart (the IP address of node #1=13.0.0.11, #2=13.0.0.12, #3=13.0.0.13):\n\n2011-03-18 05:46:59,838:17454(0x7fc57d3db710):ZOO_INFO@check_events@1632: session establishment complete on server [13.0.0.13:2888], sessionId=0x252ec780a3020000, negotiated timeout=6000\n2011-03-18 05:49:32,194:17454(0x7fc57cbda710):ZOO_INFO@check_events@1632: session establishment complete on server [13.0.0.13:2888], sessionId=0x252ec782f5100002, negotiated timeout=6000\n2011-03-18 05:52:02,352:17454(0x7fc57d3db710):ZOO_INFO@check_events@1632: session establishment complete on server [13.0.0.12:2888], sessionId=0x7e2ec782ff5f0001, negotiated timeout=6000\n2011-03-18 05:52:08,583:17454(0x7fc57d3db710):ZOO_INFO@check_events@1632: session establishment complete on server [13.0.0.11:2888], sessionId=0x7e2ec782ff5f0001, negotiated timeout=6000\n2011-03-18 05:52:13,834:17454(0x7fc57cbda710):ZOO_INFO@check_events@1632: session establishment complete on server [13.0.0.11:2888], sessionId=0xd72ec7856d0f0001, negotiated timeout=6000\n\nI will attach logs for all nodes after each of their restarts, and a partial log for node #3 from before its restart.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12474311","id":"12474311","filename":"ZOOKEEPER-1026.logs.tgz","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=strib","name":"strib","key":"strib","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jeremy Stribling","active":true,"timeZone":"Etc/UTC"},"created":"2011-03-22T17:17:24.806+0000","size":1540497,"mimeType":"application/x-compressed-tar","content":"https://issues.apache.org/jira/secure/attachment/12474311/ZOOKEEPER-1026.logs.tgz"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"32766","customfield_12312823":null,"summary":"Sequence number assignment decreases after old node rejoins cluster","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=strib","name":"strib","key":"strib","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jeremy Stribling","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=strib","name":"strib","key":"strib","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jeremy Stribling","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12502065/comment/13009724","id":"13009724","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=strib","name":"strib","key":"strib","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jeremy Stribling","active":true,"timeZone":"Etc/UTC"},"body":"Contains a partial before-restart log for node #3 (node3_after_restart.log) and an after-restart log for all three nodes.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=strib","name":"strib","key":"strib","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jeremy Stribling","active":true,"timeZone":"Etc/UTC"},"created":"2011-03-22T17:17:24.838+0000","updated":"2011-03-22T17:17:24.838+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12502065/comment/13009725","id":"13009725","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=strib","name":"strib","key":"strib","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jeremy Stribling","active":true,"timeZone":"Etc/UTC"},"body":"Actually, step 11 above is not correct, according to Flavio on the mailing list.  Node #3 proposed that it become leader, but did not have enough followers.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=strib","name":"strib","key":"strib","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jeremy Stribling","active":true,"timeZone":"Etc/UTC"},"created":"2011-03-22T17:20:58.604+0000","updated":"2011-03-22T17:20:58.604+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12502065/comment/13009845","id":"13009845","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"body":"These logs are very difficult to read, but one thing I notice is this log from node1_after_restart:\n\n314258 [Thread-3] DEBUG org.apache.zookeeper.server.quorum.QuorumCnxManager  - Address of remote peer: 126\n314267 [WorkerReceiver Thread] DEBUG org.apache.zookeeper.server.quorum.FastLeaderElection  - Receive new notification message. My id = 215\n314267 [WorkerReceiver Thread] INFO org.apache.zookeeper.server.quorum.FastLeaderElection  - Notification: 126 (n.leader), 17179869911 (n.zxid), 1 (n.round), LOOKING (n.state), 126 (n.sid), LOOKING (my state)\n314267 [QuorumPeer:/0.0.0.0:2888] DEBUG org.apache.zookeeper.server.quorum.FastLeaderElection  - Notification epoch is smaller than logicalclock. n.epoch = 1, Logical clock4\n314267 [WorkerSender Thread] DEBUG org.apache.zookeeper.server.quorum.QuorumCnxManager  - There is a connection already for server 126\n314273 [WorkerReceiver Thread] DEBUG org.apache.zookeeper.server.quorum.FastLeaderElection  - Receive new notification message. My id = 215\n314273 [WorkerReceiver Thread] INFO org.apache.zookeeper.server.quorum.FastLeaderElection  - Notification: 126 (n.leader), 17179869911 (n.zxid), 3 (n.round), LOOKING (n.state), 126 (n.sid), LOOKING (my state)\n314273 [QuorumPeer:/0.0.0.0:2888] DEBUG org.apache.zookeeper.server.quorum.FastLeaderElection  - Notification epoch is smaller than logicalclock. n.epoch = 3, Logical clock4\n314273 [WorkerSender Thread] DEBUG org.apache.zookeeper.server.quorum.QuorumCnxManager  - There is a connection already for server 126\n314274 [WorkerReceiver Thread] DEBUG org.apache.zookeeper.server.quorum.FastLeaderElection  - Receive new notification message. My id = 215\n314274 [WorkerReceiver Thread] INFO org.apache.zookeeper.server.quorum.FastLeaderElection  - Notification: 37 (n.leader), 17179869831 (n.zxid), 3 (n.round), FOLLOWING (n.state), 126 (n.sid), LOOKING (my state)\n314274 [QuorumPeer:/0.0.0.0:2888] DEBUG org.apache.zookeeper.server.quorum.FastLeaderElection  - I'm a participant: 215\nQuorumPeer:/0.0.0.0:2888] INFO org.apache.zookeeper.server.quorum.QuorumPeer  - FOLLOWING\n\n\nSpecifically, that the n.zxid starts at 17179869911, and goes to 17179869831 when election finishes. \n\nAnd in fact node3 does believe it is LEADING according to the logs. It's also confusing because the node3 logs have a bunch of lines like this:\n\n6397 [WorkerReceiver Thread] INFO org.apache.zookeeper.server.quorum.FastLeaderElection  - Notification: 215 (n.leader), 17179869918 (n.zxid), 4 (n.round), LOOKING (n.state), 215 (n.sid), LEADING (my state)\n\nWhy is my state LEADING, but n.leader is node1, but node1 is also LOOKING?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"created":"2011-03-22T21:19:23.450+0000","updated":"2011-03-22T21:19:23.450+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12502065/comment/13009878","id":"13009878","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vishalmlst","name":"vishalmlst","key":"vishalmlst","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vishal Kher","active":true,"timeZone":"Etc/UTC"},"body":"\nThe logs are really very difficult to follow. Also, I think the sequence of events as described do not match with the logs.\n\nHeres what we can see in from node1_after_restart\n\n2048:151124 [QuorumPeer:/0.0.0.0:2888] WARN org.apache.zookeeper.server.quorum.Learner  - Exception when following the leader <==== NODE 2 WENT DOWN HERE\n13497:\tat org.apache.zookeeper.server.quorum.LearnerHandler.run(LearnerHandler.java:375)  ===> NODE 3 WENT DOWN HERE\n17926:309591 [LearnerHandler-/13.0.0.12:52753] WARN org.apache.zookeeper.server.quorum.LearnerHandler  - ******* GOODBYE /13.0.0.12:52753 ******** ===> NODE2 WENT DOWN HERE AGAIN\n18044:310757 [QuorumPeer:/0.0.0.0:2888] INFO org.apache.zookeeper.server.quorum.Leader  - Shutdown called ===> NODE1 shutdown again (which is why node 3 became the leader)?\n\nThere seem to be a few restarts after this as well\ngrep -n \"tickTime set to 3000\" node1_after_restart.log\n[...]\n23685:1831 [pool-1-thread-3] INFO org.apache.zookeeper.server.quorum.QuorumPeer  - tickTime set to 3000\n28491:1479 [pool-1-thread-2] INFO org.apache.zookeeper.server.ZooKeeperServer  - tickTime set to 3000\n\nSo anything beyond time 310757 is not as described in the bug report.\n\nAlso note that because of ZOKEEPER-975, after receiving notifications from all peers a node can go in LEADING state until it waits for initTime() * tickTime(). Then, it will timeout, start FLE, and go to FOLLOWING state.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vishalmlst","name":"vishalmlst","key":"vishalmlst","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vishal Kher","active":true,"timeZone":"Etc/UTC"},"created":"2011-03-22T22:36:18.838+0000","updated":"2011-03-22T22:36:18.838+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12502065/comment/13009885","id":"13009885","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vishalmlst","name":"vishalmlst","key":"vishalmlst","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vishal Kher","active":true,"timeZone":"Etc/UTC"},"body":"If you grep for 0000000000000000_record0000003292 and\n0000000000000000_record0000003348 in node2_after_restart.log we can\nsee that znode ending with 3292 was at least accessed before 3348.\n\n2943:153670 [FollowerRequestProcessor:126] TRACE org.apache.zookeeper.server.quorum.FollowerRequestProcessor  - :Fsessionid:0x7e2ec782ff5f0000 type:getDate cxid:0x4d830245 zxid:0xfffffffffffffffe \\\ntxntype:unknown reqpath:/zkrsm/0000000000000000_record0000003292\n[...]\n4340:156963 [FollowerRequestProcessor:126] TRACE org.apache.zookeeper.server.quorum.FollowerRequestProcessor  - :Fsessionid:0x7e2ec782ff5f0000 type:getDate cxid:0x4d8302bb zxid:0xfffffffffffffffe \\\ntxntype:unknown reqpath:/zkrsm/0000000000000000_record0000003348\n\nThe first column above indicates line number. The type (getDate) is a\ntypo and should be getData.\n\nSimilarly, in log3_after_restart:\n\n32497:24471 [ProcessThread:-1] TRACE org.apache.zookeeper.server.PrepRequestProcessor  - :Psessionid:0x252ec7856ce60000 type:getDate cxid:0x4d8300c1 zxid:0xfffffffffffffffe txntype:unknown reqpath\\\n:/zkrsm/0000000000000000_record0000003292\n[...]\n37513:27851 [ProcessThread:-1] TRACE org.apache.zookeeper.server.PrepRequestProcessor  - :Psessionid:0x252ec7856ce60001 type:getDate cxid:0x4d8300f3 zxid:0xfffffffffffffffe txntype:unknown reqpath\\\n:/zkrsm/0000000000000000_record0000003348\n\nI am confused to see that node1_after_restart.log does not have any trace of sequential znodes beyond /zkrsm/0000000000000000_record0000000921 (especially because Node1 was the leader when the znodes in questions were created).\n\nI am also not sure whether to trust the cxid in these messages or not. If I\nam not mistaken, they represent the current transaction id as seen by the client.\nHow can we isolate the transaction that did the creates?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vishalmlst","name":"vishalmlst","key":"vishalmlst","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vishal Kher","active":true,"timeZone":"Etc/UTC"},"created":"2011-03-22T22:42:40.087+0000","updated":"2011-03-22T22:42:40.087+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12502065/comment/13009906","id":"13009906","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=strib","name":"strib","key":"strib","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jeremy Stribling","active":true,"timeZone":"Etc/UTC"},"body":"{quote}\nThe logs are really very difficult to follow.\n{quote}\n\nWhat would make them easier to follow?  I am about to replace the relative timestamps with wallclock timestamps and I will try to reproduce.  Is there anything else that might help?\n\n{quote}\n2048:151124 [QuorumPeer:/0.0.0.0:2888] WARN org.apache.zookeeper.server.quorum.Learner - Exception when following the leader <==== NODE 2 WENT DOWN HERE\n13497: at org.apache.zookeeper.server.quorum.LearnerHandler.run(LearnerHandler.java:375) ===> NODE 3 WENT DOWN HERE\n17926:309591 [LearnerHandler-/13.0.0.12:52753] WARN org.apache.zookeeper.server.quorum.LearnerHandler - ******* GOODBYE /13.0.0.12:52753 ******** ===> NODE2 WENT DOWN HERE AGAIN\n{quote}\n\nCorrect, node2 dies twice during the period I've described.  (Steps #6 and #10.)\n\n{quote}\n18044:310757 [QuorumPeer:/0.0.0.0:2888] INFO org.apache.zookeeper.server.quorum.Leader - Shutdown called ===> NODE1 shutdown again (which is why node 3 became the leader)?\n{quote}\n\nThis happens because my node1 client code, running in tandem with the ZK server code, hits an assert failure when it detects the sequence numbers decreasing, and kills the server code as well; then our framework restarts everything.  So this is AFTER the client creates a file with a decreased seqno.  Everything after this point in the node1 file did not contribute to the bug.  (I left it in the log in case it showed anything interesting after the restart.)\n\n{quote}\nIf you grep for 0000000000000000_record0000003292 and\n0000000000000000_record0000003348 in node2_after_restart.log we can\nsee that znode ending with 3292 was at least accessed before 3348.\n{quote}\n\nYes, while node2 was alive, nodes up to 3348 were accessed.  That 3292 is the original node with that sequence number.  The second one created by node1 does not appear to show up in the logs labeled as such -- I'm not sure how to get the ZookeeperServer to print a log message containing the name of the file it created.\n\n{quote}\nI am confused to see that node1_after_restart.log does not have any trace of sequential znodes beyond /zkrsm/0000000000000000_record0000000921 (especially because Node1 was the leader when the znodes in questions were created).\n{quote}\n\nIt looks to me like node #2 was the leader for a large chunk of time based on these lines in node1_after_restart:\n\n2535 [WorkerReceiver Thread] INFO org.apache.zookeeper.server.quorum.FastLeaderElection  - Notification: 126 (n.leader), 8589936862 (n.zxid), 2 (n.round), LEADING (n.state), 126 (n.sid), LOOKING (my state)\n...\n154676 [WorkerReceiver Thread] INFO org.apache.zookeeper.server.quorum.FastLeaderElection  - Notification: 215 (n.leader), 12884902548 (n.zxid), 3 (n.round), LOOKING (n.state), 126 (n.sid), LEADING (my state)\n\nAfter that, there are a bunch of create messages within /zkrsm, but no GetDatas.\n\n{quote}\nI am also not sure whether to trust the cxid in these messages or not. If I\nam not mistaken, they represent the current transaction id as seen by the client.\nHow can we isolate the transaction that did the creates?\n{quote}\n\nThis confused me as well.  If there's anything I can do to get more accurate logs, please let me know.  I'm not sure if I can reproduce this yet, but I have a strategy I'm planning to try.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=strib","name":"strib","key":"strib","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jeremy Stribling","active":true,"timeZone":"Etc/UTC"},"created":"2011-03-22T23:44:04.537+0000","updated":"2011-03-22T23:44:04.537+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12502065/comment/13009907","id":"13009907","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vishalmlst","name":"vishalmlst","key":"vishalmlst","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vishal Kher","active":true,"timeZone":"Etc/UTC"},"body":"Could it be this:\n\nA. Notice that suddently node 2 goes in following state:\n2533 [WorkerReceiver Thread] INFO org.apache.zookeeper.server.quorum.FastLeaderElection  - Notification: 126 (n.leader), 17179869911 (n.zxid), 1 (n.round), LOOKING (n.state), 126 (n.sid), LOOKING (my state)\n2533 [WorkerReceiver Thread] DEBUG org.apache.zookeeper.server.quorum.FastLeaderElection  - Receive new notification message. My id = 126\n2533 [WorkerReceiver Thread] INFO org.apache.zookeeper.server.quorum.FastLeaderElection  - Notification: 37 (n.leader), 17179869831 (n.zxid), 3 (n.round), LOOKING (n.state), 37 (n.sid), LOOKING (my state)\n2533 [WorkerReceiver Thread] DEBUG org.apache.zookeeper.server.quorum.FastLeaderElection  - Receive new notification message. My id = 126\n2533 [WorkerReceiver Thread] INFO org.apache.zookeeper.server.quorum.FastLeaderElection  - Notification: 37 (n.leader), 17179869831 (n.zxid), 3 (n.round), LEADING (n.state), 37 (n.sid), LOOKING (my state)\n2534 [QuorumPeer:/0.0.0.0:2888] DEBUG org.apache.zookeeper.server.quorum.FastLeaderElection  - id: 126, proposed id: 126, zxid: 17179869911, proposed zxid: 17179869911\n2534 [QuorumPeer:/0.0.0.0:2888] DEBUG org.apache.zookeeper.server.quorum.FastLeaderElection  - Adding vote: From = 126, Proposed leader = 126, Porposed zxid = 17179869911, Proposed epoch = 1\n2534 [QuorumPeer:/0.0.0.0:2888] DEBUG org.apache.zookeeper.server.quorum.FastLeaderElection  - id: 37, proposed id: 126, zxid: 17179869831, proposed zxid: 17179869911\n2534 [QuorumPeer:/0.0.0.0:2888] DEBUG org.apache.zookeeper.server.quorum.FastLeaderElection  - Adding vote: From = 37, Proposed leader = 37, Porposed zxid = 17179869831, Proposed epoch = 3\n2534 [QuorumPeer:/0.0.0.0:2888] DEBUG org.apache.zookeeper.server.quorum.FastLeaderElection  - I'm a participant: 126\n\nB. Due to ZOOKEEPER-975, 3 goes in LEADING state because it receives history of old notifications from node 1 and node2.\nnode3_after_restart:\n2653 [WorkerReceiver Thread] INFO org.apache.zookeeper.server.quorum.FastLeaderElection  - Notification: 37 (n.leader), 17179869831 (n.zxid), 1 (n.round), LOOKING (n.state), 37 (n.sid), LOOKING (my state)\n\n                            //If have received from all nodes, then terminate\n                            if ((self.getVotingView().size() == recvset.size()) &&\n                                    (self.getQuorumVerifier().getWeight(proposedLeader) != 0)){\n                                self.setPeerState((proposedLeader == self.getId()) ?\n                                        ServerState.LEADING: learningState());\n                                leaveInstance();\n                                return new Vote(proposedLeader, proposedZxid);\n\n                            }\n\nC. After which node 2 starts following node 3 and then node 1 starts following node 3 (because 2 is following 3)\n\ndue to:\n\n                    default:\n                        /*\n                         * There is at most one leader for each epoch, so if a\n                         * peer claims to be the leader for an epoch, then that\n                         * peer must be the leader (no* arbitrary failures\n                         * assumed). Now, if there is no quorum supporting\n                         * this leader, then processes will naturally move\n                         * to a new epoch.\n                         */\n                        if(n.epoch == logicalclock){\n                            recvset.put(n.sid, new Vote(n.leader, n.zxid, n.epoch));\n                            if((n.state == ServerState.LEADING) ||\n                                    (termPredicate(recvset, new Vote(n.leader,\n                                            n.zxid, n.epoch, n.state))\n                                            && checkLeader(outofelection, n.leader, n.epoch)) ){\n                                self.setPeerState((n.leader == self.getId()) ?\n                                        ServerState.LEADING: learningState());\n\n                                leaveInstance();\n                                return new Vote(n.leader, n.zxid);\n                            }\n                        }\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vishalmlst","name":"vishalmlst","key":"vishalmlst","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vishal Kher","active":true,"timeZone":"Etc/UTC"},"created":"2011-03-22T23:46:03.707+0000","updated":"2011-03-22T23:46:03.707+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12502065/comment/13010278","id":"13010278","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vishalmlst","name":"vishalmlst","key":"vishalmlst","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vishal Kher","active":true,"timeZone":"Etc/UTC"},"body":"Hi Jeremy,\n\nI think I know whats going on here. The bug description that I gave in\nmy earlier comment is causing legitimate transactions to\nget truncated.\n\nYou were right about node 3 becoming the leader after reboot.\nI have given the order of events and my explanation below. Note that\nthe order of events is slightly different from what you described.\n\n1. After your step 6, node 1 becomes the leader (its ID is > node 3's\nid). Heres what node1 is saying in terms of membership and elections rounds.\n\na) 2048:151124 [QuorumPeer:/0.0.0.0:2888] WARN org.apache.zookeeper.server.quorum.Learner  - Exception when following the leader <==== NODE 2 WENT DOWN HERE (your step #6)\nb) 13497:  at org.apache.zookeeper.server.quorum.LearnerHandler.run(LearnerHandler.java:375)  ===> NODE 3 WENT DOWN HERE (your step #8)\nc) 17926:309591 [LearnerHandler-/13.0.0.12:52753] WARN org.apache.zookeeper.server.quorum.LearnerHandler  - ******* GOODBYE /13.0.0.12:52753 ******** ===> NODE2 WENT DOWN HERE AGAIN (Your step #10)\n\nd) 18044 310757 [QuorumPeer:/0.0.0.0:2888] INFO org.apache.zookeeper.server.quorum.Leader  - Shutdown called ===> NODE1 *shutdown* again? (This is because it lost majority as explained below)\n18045     at org.apache.zookeeper.server.quorum.Leader.shutdown(Leader.java:390)\n18046     at org.apache.zookeeper.server.quorum.Leader.lead(Leader.java:367)\n18047     at org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:658)\n\n\ne) 23685:1831 [pool-1-thread-3] INFO org.apache.zookeeper.server.quorum.QuorumPeer  - tickTime set to 3000 ====> NODE1 restarted again (this is because of your client assert)\n\n2. Notice that the time difference between b) and c) above is only 4.5\nseconds. So you rebooted node 2 before node 3 had joined the cluster. \nAs a result node 1 lost its majority and gave up leadership. You can\nsee that shutdown is called from Leader.java:367, which is done when\nthe leader cannot ping the followers. Your application would have seen\na DISCONNECT before it asserted.\n\nWhat took node 3 so long to join the cluster? As described in ZOOKEEPER-975\nand my previous comment, 3 went into LEADING state because of the bug\nin FastLeaderElection. After 3 reboots, nodes 1 and 2 send old\nnotifications to 3. When 3 receives notifications of all nodes, it\ngoes in the leading state. Heres the incorrect if condition from FastLeaderElection\n\n                           //If have received from all nodes, then terminate\n                           if ((self.getVotingView().size() == recvset.size()) &&\n                                   (self.getQuorumVerifier().getWeight(proposedLeader) != 0)){\n                               self.setPeerState((proposedLeader == self.getId()) ?\n                                       ServerState.LEADING: learningState());\n                               leaveInstance();\n                               return new Vote(proposedLeader, proposedZxid);\n\n                           }\n\n3. Now, 3 is in LEADING state and it will remain in the LEADING state\nuntil ticktime * initTime or until a majority of followers start\nfollowing 3.\n\nIn the mean time, 2 boots and starts leader election. 2 receives a\nnotification from 3, which claims 3 to be the leader.\n\n2533 [WorkerReceiver Thread] INFO org.apache.zookeeper.server.quorum.FastLeaderElection  - Notification: 37 (n.leader), 17179869831 (n.zxid), 3 (n.round), LEADING (n.state), 37 (n.sid), LOOKING (my state)\n2534 [QuorumPeer:/0.0.0.0:2888] DEBUG org.apache.zookeeper.server.quorum.FastLeaderElection  - id: 126, proposed id: 126, zxid: 17179869911, proposed zxid: 17179869911\n2534 [QuorumPeer:/0.0.0.0:2888] DEBUG org.apache.zookeeper.server.quorum.FastLeaderElection  - Adding vote: From = 126, Proposed leader = 126, Porposed zxid = 17179869911, Proposed epoch = 1\n2534 [QuorumPeer:/0.0.0.0:2888] DEBUG org.apache.zookeeper.server.quorum.FastLeaderElection  - id: 37, proposed id: 126, zxid: 17179869831, proposed zxid: 17179869911\n2534 [QuorumPeer:/0.0.0.0:2888] DEBUG org.apache.zookeeper.server.quorum.FastLeaderElection  - Adding vote: From = 37, Proposed leader = 37, Porposed zxid = 17179869831, Proposed epoch = 3\n2534 [QuorumPeer:/0.0.0.0:2888] DEBUG org.apache.zookeeper.server.quorum.FastLeaderElection  - I'm a participant: 126\n\n2 blindly believes that 3 is the leader and starts following 3! As a\nresult, 2's state is rolled-back (because 3 has old zxid). So 2\ntruncates its transactions logs.\n\nHeres the incorrect if statement:\n\n                   default:\n                       /*\n                        * There is at most one leader for each epoch, so if a\n                        * peer claims to be the leader for an epoch, then that\n                        * peer must be the leader (no* arbitrary failures\n                        * assumed). Now, if there is no quorum supporting\n                        * this leader, then processes will naturally move\n                        * to a new epoch.\n                        */\n                       if(n.epoch == logicalclock){\n                           recvset.put(n.sid, new Vote(n.leader, n.zxid, n.epoch));\n                           if((n.state == ServerState.LEADING) ||\n                                   (termPredicate(recvset, new Vote(n.leader,\n                                           n.zxid, n.epoch, n.state))\n                                           && checkLeader(outofelection, n.leader, n.epoch)) ){\n                               self.setPeerState((n.leader == self.getId()) ?\n                                       ServerState.LEADING: learningState());\n\n                               leaveInstance();\n                               return new Vote(n.leader, n.zxid);\n                           }\n                       }\n\n3. Now, 1 is also running leader election (it does this immediately\nafter loosing majority).\n\n1 now receives votes from 2 and 3 that say that 3 is the leader. So, 1\nstarts following 3.\n\n18427 314274 [WorkerReceiver Thread] DEBUG org.apache.zookeeper.server.quorum.FastLeaderElection  - Receive new notification message. My id = 215\n18428 314274 [WorkerReceiver Thread] INFO org.apache.zookeeper.server.quorum.FastLeaderElection  - Notification: 37 (n.leader), 17179869831 (n.zxid), 3 (n.round), FOLLOWING (n.state), 126 (n.sid),       LOOKING (my state)\n18429 314274 [QuorumPeer:/0.0.0.0:2888] DEBUG org.apache.zookeeper.server.quorum.FastLeaderElection  - I'm a participant: 215\n18430 314274 [QuorumPeer:/0.0.0.0:2888] INFO org.apache.zookeeper.server.quorum.QuorumPeer  - FOLLOWING\n\n\nAs a result, 1 ends up truncating its transactions as well. In order\nfor your client to see 3292 znode, the ensemble would have to\nrolled-back at least (3348 - 3291) 57 transactions. We can see that\nboth 1 and 2 went back (17179869911 - 17179869831) 80 transactions.\n\nIn short, there are several places where a peer goes in correct\nstates. The main reason for this is that it does not always rely on <epoch, id,\nzxid> to determine leadership. ZOKEEPER-975 had identified some of\nthem, and the fix for ZOKEEPER-975 would have prevented this bug.\n\nI already have a working patch for ZOKEEPER-975 that I did not attach to the bug,\nbecause I had implemented it on top of ZOOKEEPER-932. To avoid back\nporting and testing efforts, I was hoping that ZOOKEEPER-932 would get\nreviewed soon so that I can post a patch for ZOOKEEPER-975. It turns\nout that ZOOKEEPER-975 is a blocker, so I will pull out the changes\nfor ZOOKEEPER-975 and submit it for review. We might have to do more\nchanges to cleanup FastLeaderElection, but my patch for ZOOKEEPER-975\nshould at least get rid of the bug that you are seeing.\n\nLet me know if you think I have miscalculated things here.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vishalmlst","name":"vishalmlst","key":"vishalmlst","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vishal Kher","active":true,"timeZone":"Etc/UTC"},"created":"2011-03-23T18:32:51.499+0000","updated":"2011-03-23T18:32:51.499+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12502065/comment/13010281","id":"13010281","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=strib","name":"strib","key":"strib","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jeremy Stribling","active":true,"timeZone":"Etc/UTC"},"body":"Wow, thanks for the in-depth explanation.  It makes sense to me, in terms of the timeline of events and what could go wrong, but I don't know enough about the Zookeeper code to be able to verify for sure.  I would love to try out a patch for ZOOKEEPER-975 and see if that fixes the problem for me.  (I added myself as a watcher for that bug.)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=strib","name":"strib","key":"strib","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jeremy Stribling","active":true,"timeZone":"Etc/UTC"},"created":"2011-03-23T18:41:16.725+0000","updated":"2011-03-23T18:41:16.725+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12502065/comment/13010353","id":"13010353","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"That's a good catch. I was thinking that the only thing we might need to do is remove the case that follows a leader blindly. In my understanding, this is the case that allowed server 2 to follow server 3. Server 1 wouldn't have followed server 3 if there wasn't a quorum supporting 3, since the \"if\" statement that makes the decision on following the server is guarded by this predicate: (n.epoch == logicalclock)\n\nIt sounds like we will need a new release soon...\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2011-03-23T20:10:58.368+0000","updated":"2011-03-23T20:10:58.368+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12502065/comment/13010603","id":"13010603","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"I'm not entirely convinced that ZOOKEEPER-975 is the right fix for this problem. In my perception, it might make it less probable, but it still doesn't get rid of the problem. Let me put some thoughts here.\n\nMy understanding is that currently we rely upon a safety property from leader election, which says that the server that arises as leader has the highest zxid among a quorum of servers. This is a nice optimization because it speeds up the recovery process. \n\nThe problem I see is that the zxid used in votes to determine leadership may not be the same as the current zxids of servers because of the problem that ZOOKEEPER-975 points to or simply because messages come in late. The former is exactly the case we observed here. Consequently, leader election violated the safety property it was supposed to satisfy.    \n\nMy current opinion is that we should be making sure that the leader really has the highest zxid among a quorum before exercising leadership. I believe we do not perform this check today, and this probably implies a deeper change and requires some more thinking.\n\nRegarding the \"if\" that blindly accepts a leader, I think it should go away. It sounds wrong even without the fix for ZOOKEEPER-975.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2011-03-24T08:51:55.855+0000","updated":"2011-03-24T08:51:55.855+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12502065/comment/13010681","id":"13010681","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"To follow up on my own comments. Here is how I'm currently thinking. \n\nFor the issue described in this jira to happen, the following needs to hold: \n\n# We have a broken leader that does not have the highest last zxid in a quorum; \n# There is a quorum containing the broken leader such that for every element of the quorum, the last zxid epoch is the same or smaller compared to the epoch of the broken leader. If this condition doesn't hold, then at least one server will not follow the broken leader; \n# The broken leader must have received at least one notification during leader election that reflect an old state of the system. \n\nClearly the problem Vishal has reported matches this description, since repeating notifications causes a server to receive notifications that might reflect a stale state of the system. However, I'm not entirely convinced that we can completely get rid of this problem with a patch for ZOOKEEPER-975 because of scenarios like the following, which at least abstractly seems to work: \n\n# There are three servers: S1, S2, S3;\n# Servers come all from epoch e , and are trying to elect a new leader for e+1; \n# Each server sends one notification to each of the other servers, proposing itself as leader; \n# S2 and S3 receive a notification from S1, and suppose that S1's vote supersedes their own votes. S2 and S3 eventually decide to follow S1; \n# S1 receives notifications from S2 and S3 and decides to lead; \n# S2 follows S1 for a longer time than S3, so S3 lags behind; \n# S1 drops leadership (doesn't matter why); \n# S3 starts leader election and receives the notification S2 sent in step 3; \n# S3 believes it is the leader and starts leading; \n# S2 receives a leading notification from S3 and starts following S3, thus truncating its log (!!!) \n\nThe last step is mainly due to the broken \"if\" statement I mentioned before. Now, in this example, there was no repetition of notification messages (ZOOKEEPER-975), and yet we've reached a problem. The question is if this run can happen or not. Can you see any step that can't happen? To me, the one step that is not clear is Step 8, but I can't convince myself that it can't happen.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2011-03-24T13:58:59.695+0000","updated":"2011-03-24T13:58:59.695+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12502065/comment/13010682","id":"13010682","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vishalmlst","name":"vishalmlst","key":"vishalmlst","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vishal Kher","active":true,"timeZone":"Etc/UTC"},"body":"Hi Flavio,\n\nI submitted a patch to ZOOKEEPER-975 yesterday, but I forgot to mention it on this bug. I think it addresses both 975 and this bug. I am not sure if you got a chance to take a look at it? (I just noticed that the patch failed on trunk. I will fix that)\n\nThe patch removes the two incorrect if conditions that I mentioned above (in addition to changes done for 975). Note - in the diff, for the the second if (where the peer blindly follows), we may have to check the epoch as well. I also posted a question yesterday pointing out a place where we don't send the latest zxid when the cluster is running. I think we should fix that as well.\n\nI was planning to write a test to verify the patch, but I will wait to hear back regarding the diff and questions posted to ZOOKEEPER-975 before proceeding.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vishalmlst","name":"vishalmlst","key":"vishalmlst","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vishal Kher","active":true,"timeZone":"Etc/UTC"},"created":"2011-03-24T14:03:14.583+0000","updated":"2011-03-24T14:03:14.583+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12502065/comment/13010918","id":"13010918","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"body":"7.S1 drops leadership (doesn't matter why);\n8.S3 starts leader election and receives the notification S2 sent in step 3;\n\nWouldn't the notification from S2 have n.epoch < logicalclock, causing it to be ignored?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"created":"2011-03-24T21:00:32.744+0000","updated":"2011-03-24T21:00:32.744+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12502065/comment/13010970","id":"13010970","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"Right, but what if S3 crashes and recovers? In this case, logicalclock is reset and receiving the old message from S2 would cause S3 to lead, as described above. If this is right, then is it only possible if we have message duplicates?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2011-03-24T22:27:23.072+0000","updated":"2011-03-24T22:27:23.072+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12502065/comment/13011005","id":"13011005","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"body":"How would S3 get an old message from S2? I don't understand what you mean by message duplicates in this scenario.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"created":"2011-03-24T23:31:38.281+0000","updated":"2011-03-24T23:31:38.281+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12502065/comment/13011066","id":"13011066","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vishalmlst","name":"vishalmlst","key":"vishalmlst","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vishal Kher","active":true,"timeZone":"Etc/UTC"},"body":"If I am not mistaken the scenario Flavio presents is as follows:\nT0: S1, S2, S3 start FLE. Lets assume that S2's notification is (e=1, xid=1). In the end, S1 wins.\nT1: S1(e=1, xid=10),  S2(e=1, xid=10), S3(e=1, xid=5)\nT2: S1 and S3 crash\nT3: S3 reboots (really fast), starts FLE from <e=0, xid=10>, and receives S2's notification of (e=1, xid=1)\nT4: S3 updates its epoch to 1, compares <e=1, xid=1> vs its <e=1, xid=5> and decides to lead.\n\nHowever, S2 should not follow S3 (after removing the blind following condition).\nS2 will follow S3 only if a majority are following S3. In this case they are not.\n\nNow, S2 in turn will receive a \"LOOKING\" notification from S3 (sent during T3). S2 will also decide to lead. Both will think they are LEADING. They will timeout and start another round of election. This time, S2 will turn out to be the winner. Does this make sense?\n\nI think the problem here is \"lastMessage\" in QCM. I was thinking about this while working on the patch. As I mentioned in 975, I think we should send the current state <e, lastLoggedZxid> instead of lastMessage. Also, in T3, we might want to initialize logicalClock to epoch stored in transaction logs. What do you think?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vishalmlst","name":"vishalmlst","key":"vishalmlst","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vishal Kher","active":true,"timeZone":"Etc/UTC"},"created":"2011-03-25T01:44:36.276+0000","updated":"2011-03-25T01:44:36.276+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12502065/comment/13011072","id":"13011072","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"body":"Wouldn't S2 receive a FOLLOWING notification from S3, not a LOOKING notification, if S3 ended up following S1 initially? Isn't FOLLOWING the last notification that it sends? In which case\n\nT3: S3 starts FLE from e=0 xid=5, sees a FOLLOWING notification, has no quorum, and goes to round 2. \nT4: Attempt to LEAD from S2 with the higher xid, and cede power. \n\nOr is the FOLLOWING message somehow not put on the queue?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"created":"2011-03-25T02:24:35.391+0000","updated":"2011-03-25T02:24:35.391+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12502065/comment/13011075","id":"13011075","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"body":"Er first sentance is backwards should read:\nWouldn't S3 recieve a FOLLOWING notification from S2 not LOOKING if S2 ended up following S1 initially.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"created":"2011-03-25T02:33:01.841+0000","updated":"2011-03-25T02:33:01.841+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12502065/comment/13011178","id":"13011178","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vishalmlst","name":"vishalmlst","key":"vishalmlst","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vishal Kher","active":true,"timeZone":"Etc/UTC"},"body":"The FOLLOWING notification does not get qeueued. If I am not mistaken, a peer does not send a notification after finishing FLE.However, I think that my patch for 975 would avoid this problem. In that patch I store only the most recently sent notification (and not all notifications). The most recent notification sent by S2 would be the one where it tells everyone that it is LOOKING and it thinks that S1 is the leader.\n\nWe should get rid of lastMessage in  QCM. wherever we send lastMessage, we should send the current state of the peer. So, if the peer is in the middle of FLE, send <epoch,proposedleader, proposedzxid, LOOKING>. Otherwise, send <epich, leader, lastLoggedZxid(), FOLLOWING/LEADING>","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vishalmlst","name":"vishalmlst","key":"vishalmlst","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vishal Kher","active":true,"timeZone":"Etc/UTC"},"created":"2011-03-25T12:30:13.153+0000","updated":"2011-03-25T12:30:13.153+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12502065/comment/13011305","id":"13011305","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"body":"Ok, I didn't see that thanks. Out of curiosity, could we save a FOLLOWING notification as our lastMessage then, even if we don't send it? That would give you the \"current\" state more accurately than a stale LOOKING notification and it seems like it could solve this particular problem.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"created":"2011-03-25T17:42:34.079+0000","updated":"2011-03-25T17:42:34.079+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12502065/comment/13011313","id":"13011313","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"It is unclear to me why you say that a FOLLOWING notification does not get enqueued, Vishal. A peer does send a notification when it receives one from a peer LOOKING through the same mechanism as other notifications.\n\nAlso, you're right that it does not send a final notification message. I believe it is this way because the peer will still respond to a notification from a peer that it is looking, so the message is not strictly necessary. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2011-03-25T17:57:55.053+0000","updated":"2011-03-25T17:57:55.053+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12502065/comment/13011317","id":"13011317","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vishalmlst","name":"vishalmlst","key":"vishalmlst","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vishal Kher","active":true,"timeZone":"Etc/UTC"},"body":"{quote}\nIt is unclear to me why you say that a FOLLOWING notification does not get enqueued, Vishal. A peer does send a notification when it receives one from a peer LOOKING through the same mechanism as other notifications.\n{quote}\n\nMy comment was in the context of previous scenario that we were discussing.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vishalmlst","name":"vishalmlst","key":"vishalmlst","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vishal Kher","active":true,"timeZone":"Etc/UTC"},"created":"2011-03-25T18:07:07.450+0000","updated":"2011-03-25T18:07:07.450+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12502065/comment/13011329","id":"13011329","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vishalmlst","name":"vishalmlst","key":"vishalmlst","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vishal Kher","active":true,"timeZone":"Etc/UTC"},"body":"{quote}Out of curiosity, could we save a FOLLOWING notification as our lastMessage then, even if we don't send it? That would give you the \"current\" state more accurately than a stale LOOKING notification and it seems like it could solve this particular problem.\n{quote}\n\nWe could, but that wouldn't give an accurate state as well. A peer might be in the LOOKING state (next FLE round) while the lastMessage gets sent. There will be race conditions. In my opinion, a better way of doing this is to send the current state instead of lastMessage. In which case, I agree with Flavio that sending the final notifications won't be necessary. This will also reduce the number of notifications exchanged.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vishalmlst","name":"vishalmlst","key":"vishalmlst","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vishal Kher","active":true,"timeZone":"Etc/UTC"},"created":"2011-03-25T18:25:30.862+0000","updated":"2011-03-25T18:25:30.862+0000"}],"maxResults":24,"total":24,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-1026/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i05yzb:"}}