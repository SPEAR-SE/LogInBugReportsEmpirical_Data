{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13117027","self":"https://issues.apache.org/jira/rest/api/2/issue/13117027","key":"ZOOKEEPER-2937","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310801","id":"12310801","key":"ZOOKEEPER","name":"ZooKeeper","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310801&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310801&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310801&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310801&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10484","id":"10484","description":"Apache ZooKeeper related","name":"ZooKeeper"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12323310","id":"12323310","description":"Fix release against 3.4 branch","name":"3.4.6","archived":false,"released":true,"releaseDate":"2014-03-10"}],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2017-11-16T03:09:50.526+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Thu Nov 16 03:09:50 UTC 2017","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-2937/watchers","watchCount":2,"isWatching":false},"created":"2017-11-08T16:30:58.210+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12323310","id":"12323310","description":"Fix release against 3.4 branch","name":"3.4.6","archived":false,"released":true,"releaseDate":"2014-03-10"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2017-11-16T03:09:50.526+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/10002","description":"A patch for this issue has been uploaded to JIRA by a contributor.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/document.png","name":"Patch Available","id":"10002","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/4","id":4,"key":"indeterminate","colorName":"yellow","name":"In Progress"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312382","id":"12312382","name":"server","description":"General issues with the ZooKeeper server."}],"timeoriginalestimate":null,"description":"we have created an authentication provider plugin that can authenticate clients based on the cert that client is presenting. our zookeeper instance has been configured (and started) to authenticate and allow only certain appid's. this works as intended when clients (ours are c-clients) send an auth message via yca_add_auth containing the cert *and* the authentication provider is configured to allow it.\r\n\r\nhowever, if the clients do *not* present one (i.e. do not send an auth packet), and if the authentication provider allows only certain appid's, this connection still goes through - i.e. clients are able to connect, create/watch nodes etc.! this is unexpected and does *not* allow us to prevent certain clients from connecting to a zookeeper quorum (as they can still connect without present any credentials). \r\n\r\nit looks like zookeeper will only invoke the auth providers if it receives an auth packet from the client.\r\n\r\nnone of this block - https://github.com/sriramch/zookeeper/blob/master/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java#L1060\r\n\r\never gets executed, and it directly jumps to this \r\n\r\nhttps://github.com/sriramch/zookeeper/blob/master/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java#L1108\r\n\r\nwe have a usecase where we only want clients that can present valid credentials to connect to zookeeper (zk). \r\n\r\ni was hoping to expose an interface where different auth providers (when they are loaded)  would let zk know if they need to authenticate a client before processing other data packets. the default ones (kerberos/ip/digest etc.) would say no to maintain compatibility. our auth provider can be configured to say yes/no (default no) depending on use-case. zk before processing a data packet can look at the auth info in the server connection to see the schemes that requires authentication and have successfully authenticated. connection will succeed if all schemes that require authentication have successfully authenticated; else, we disable receive.\r\n\r\ncan someone please look into this issue and evaluate the proposal? i can work on creating a pr for this.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"zookeeper issues with handling authentication...","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sriramch","name":"sriramch","key":"sriramch","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sriram Chandramouli","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sriramch","name":"sriramch","key":"sriramch","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sriram Chandramouli","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":"Linux <node_name> 2.6.32-696.6.3.el6.YAHOO.20170712.4.x86_64 #1 SMP Wed Jul 12 01:40:52 UTC 2017 x86_64\r\n\r\n-bash-4.1$ cat /etc/redhat-release\r\nRed Hat Enterprise Linux Server release 6.8 (Santiago)\r\n\r\njava version \"1.8.0_25\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_25-b17)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.25-b02, mixed mode)\r\n\r\n/home/y/libexec/ant/bin/ant -version\r\nApache Ant(TM) version 1.9.0 compiled on March 5 2013\r\n","customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13117027/comment/16244279","id":"16244279","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sriramch","name":"sriramch","key":"sriramch","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sriram Chandramouli","active":true,"timeZone":"Etc/UTC"},"body":"this is a patch set on 3.4.6 version. this issue seems to exist in the latest version (master) too.\r\n\r\n{{diff --git a/apache_release/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java b/apache_release/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java\r\nindex c1812c4..dddf976 100644\r\n--- a/apache_release/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java\r\n+++ b/apache_release/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java\r\n@@ -30,6 +30,8 @@ import java.util.HashMap;\r\n import java.util.LinkedList;\r\n import java.util.List;\r\n import java.util.Random;\r\n+import java.util.SortedSet;\r\n+import java.util.TreeSet;\r\n\r\n import javax.security.sasl.SaslException;\r\n\r\n@@ -936,8 +938,30 @@ public class ZooKeeperServer implements SessionExpirer, ServerStats.Provider {\r\n                 cnxn.sendResponse(rh,rsp, \"response\"); // not sure about 3rd arg..what is it?\r\n             }\r\n             else {\r\n+                List<Id> authInfo = cnxn.getAuthInfo();\r\n+                // Iterate over auth info and create this\r\n+                SortedSet<String> providedAuthSchemes = new TreeSet<String>();\r\n+                for (Id authid : authInfo) {\r\n+                    providedAuthSchemes.add(authid.getScheme());\r\n+                }\r\n+\r\n+                SortedSet<String> neededAuthSchemes =\r\n+                    ProviderRegistry.getSchemesRequiringAuth();\r\n+                if (!providedAuthSchemes.containsAll(neededAuthSchemes)) {\r\n+                    // We got a data packet without completing the necessary\r\n+                    // authentication; so, nuke it!\r\n+                    LOG.warn(\"Missing required authentication; closing connection\");\r\n+                    ReplyHeader rh = new ReplyHeader(h.getXid(), 0,\r\n+                            KeeperException.Code.NOAUTH.intValue());\r\n+                    cnxn.sendResponse(rh, null, null);\r\n+                    // ... and close connection\r\n+                    cnxn.sendBuffer(ServerCnxnFactory.closeConn);\r\n+                    cnxn.disableRecv();\r\n+                    return;\r\n+                }\r\n+\r\n                 Request si = new Request(cnxn, cnxn.getSessionId(), h.getXid(),\r\n-                  h.getType(), incomingBuffer, cnxn.getAuthInfo());\r\n+                  h.getType(), incomingBuffer, authInfo);\r\n                 si.setOwner(ServerCnxn.me);\r\n                 submitRequest(si);\r\n             }\r\ndiff --git a/apache_release/src/java/main/org/apache/zookeeper/server/auth/AuthenticationProvider.java b/apache_release/src/java/main/org/apache/zookeeper/server/auth/AuthenticationProvider.java\r\nindex dd6e32f..3e1ff3a 100644\r\n--- a/apache_release/src/java/main/org/apache/zookeeper/server/auth/AuthenticationProvider.java\r\n+++ b/apache_release/src/java/main/org/apache/zookeeper/server/auth/AuthenticationProvider.java\r\n@@ -79,4 +79,13 @@ public interface AuthenticationProvider {\r\n      * @return true if id is well formed.\r\n      */\r\n     boolean isValid(String id);\r\n+\r\n+    /**\r\n+     * This method is used to check and see if the provider has to\r\n+     * authenticate the client before any requests from it can be processed.\r\n+     *\r\n+     * @return true if this provider needs to authenticate the client before\r\n+     * it can honor any requests from it\r\n+     */\r\n+    boolean needAuthentication();\r\n }\r\ndiff --git a/apache_release/src/java/main/org/apache/zookeeper/server/auth/DigestAuthenticationProvider.java b/apache_release/src/java/main/org/apache/zookeeper/server/auth/DigestAuthenticationProvider.java\r\nindex 2427e7a..c2805b4 100644\r\n--- a/apache_release/src/java/main/org/apache/zookeeper/server/auth/DigestAuthenticationProvider.java\r\n+++ b/apache_release/src/java/main/org/apache/zookeeper/server/auth/DigestAuthenticationProvider.java\r\n@@ -126,6 +126,10 @@ public class DigestAuthenticationProvider implements AuthenticationProvider {\r\n         return id.equals(aclExpr);\r\n     }\r\n\r\n+    public boolean needAuthentication() {\r\n+        return false;\r\n+    }\r\n+\r\n     /** Call with a single argument of user:pass to generate authdata.\r\n      * Authdata output can be used when setting superDigest for example.\r\n      * @param args single argument of user:pass\r\ndiff --git a/apache_release/src/java/main/org/apache/zookeeper/server/auth/IPAuthenticationProvider.java b/apache_release/src/java/main/org/apache/zookeeper/server/auth/IPAuthenticationProvider.java\r\nindex 192dc06..c48a8ba 100644\r\n--- a/apache_release/src/java/main/org/apache/zookeeper/server/auth/IPAuthenticationProvider.java\r\n+++ b/apache_release/src/java/main/org/apache/zookeeper/server/auth/IPAuthenticationProvider.java\r\n@@ -114,4 +114,8 @@ public class IPAuthenticationProvider implements AuthenticationProvider {\r\n     public boolean isValid(String id) {\r\n         return addr2Bytes(id) != null;\r\n     }\r\n+\r\n+    public boolean needAuthentication() {\r\n+        return false;\r\n+    }\r\n }\r\ndiff --git a/apache_release/src/java/main/org/apache/zookeeper/server/auth/ProviderRegistry.java b/apache_release/src/java/main/org/apache/zookeeper/server/auth/ProviderRegistry.java\r\nindex 406015f..e2df13c 100644\r\n--- a/apache_release/src/java/main/org/apache/zookeeper/server/auth/ProviderRegistry.java\r\n+++ b/apache_release/src/java/main/org/apache/zookeeper/server/auth/ProviderRegistry.java\r\n@@ -20,6 +20,9 @@ package org.apache.zookeeper.server.auth;\r\n\r\n import java.util.Enumeration;\r\n import java.util.HashMap;\r\n+import java.util.Collections;\r\n+import java.util.SortedSet;\r\n+import java.util.TreeSet;\r\n\r\n import org.slf4j.Logger;\r\n import org.slf4j.LoggerFactory;\r\n@@ -32,6 +35,9 @@ public class ProviderRegistry {\r\n     private static boolean initialized = false;\r\n     private static HashMap<String, AuthenticationProvider> authenticationProviders =\r\n         new HashMap<String, AuthenticationProvider>();\r\n+    // Set of authentication schemes that needs to see an auth packet from\r\n+    // the client before letting it transact with zookeeper\r\n+    private static TreeSet<String> schemesRequiringAuth = new TreeSet<String>();\r\n\r\n     public static void initialize() {\r\n         synchronized (ProviderRegistry.class) {\r\n@@ -41,6 +47,13 @@ public class ProviderRegistry {\r\n             DigestAuthenticationProvider digp = new DigestAuthenticationProvider();\r\n             authenticationProviders.put(ipp.getScheme(), ipp);\r\n             authenticationProviders.put(digp.getScheme(), digp);\r\n+\r\n+            if (ipp.needAuthentication()) {\r\n+                schemesRequiringAuth.add(ipp.getScheme());\r\n+            }\r\n+            if (digp.needAuthentication()) {\r\n+                schemesRequiringAuth.add(digp.getScheme());\r\n+            }\r\n             Enumeration<Object> en = System.getProperties().keys();\r\n             while (en.hasMoreElements()) {\r\n                 String k = (String) en.nextElement();\r\n@@ -52,6 +65,20 @@ public class ProviderRegistry {\r\n                         AuthenticationProvider ap = (AuthenticationProvider) c\r\n                                 .newInstance();\r\n                         authenticationProviders.put(ap.getScheme(), ap);\r\n+\r\n+                        // Check if the authentication provider supports the\r\n+                        // new interface\r\n+                        try {\r\n+                            ap.getClass().getDeclaredMethod(\"needAuthentication\");\r\n+                        }\r\n+                        catch (NoSuchMethodException e) {\r\n+                            LOG.warn(\"Provider for \" + ap.getScheme() +\r\n+                                     \" does not define needAuthentication\");\r\n+                            continue;\r\n+                        }\r\n+                        if (ap.needAuthentication()) {\r\n+                            schemesRequiringAuth.add(ap.getScheme());\r\n+                        }\r\n                     } catch (Exception e) {\r\n                         LOG.warn(\"Problems loading \" + className,e);\r\n                     }\r\n@@ -74,4 +101,10 @@ public class ProviderRegistry {\r\n }\r\n         return sb.toString();\r\n     }\r\n+\r\n+    public static SortedSet<String> getSchemesRequiringAuth() {\r\n+        if(!initialized)\r\n+            initialize();\r\n+        return Collections.unmodifiableSortedSet(schemesRequiringAuth);\r\n+    }\r\n }\r\ndiff --git a/apache_release/src/java/main/org/apache/zookeeper/server/auth/SASLAuthenticationProvider.java b/apache_release/src/java/main/org/apache/zookeeper/server/auth/SASLAuthenticationProvider.java\r\nindex 063304f..f098cf0 100644\r\n--- a/apache_release/src/java/main/org/apache/zookeeper/server/auth/SASLAuthenticationProvider.java\r\n+++ b/apache_release/src/java/main/org/apache/zookeeper/server/auth/SASLAuthenticationProvider.java\r\n@@ -66,5 +66,7 @@ public class SASLAuthenticationProvider implements AuthenticationProvider {\r\n         }\r\n    }\r\n\r\n-\r\n+   public boolean needAuthentication() {\r\n+        return false;\r\n+    }\r\n }\r\n}}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sriramch","name":"sriramch","key":"sriramch","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sriram Chandramouli","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-08T16:39:31.510+0000","updated":"2017-11-08T16:39:31.510+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13117027/comment/16254680","id":"16254680","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"GitHub user sriramch opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/418\n\n    [zookeeper-2937] disallow client requests without completing authentication...\n\n    - https://issues.apache.org/jira/browse/ZOOKEEPER-2937\r\n    - do not process data packets, if authentication via providers that\r\n      *requires* authentication aren't completed\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/sriramch/zookeeper master\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/418.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #418\n    \n----\ncommit ed6986b83eea71e280976df78b13c44088915efa\nAuthor: Sriram Chandramouli <sriramch@csp0094.csp.corp.gq1.yahoo.com>\nDate:   2017-11-15T21:25:29Z\n\n    [zookeeper-2937]\n    \n    - https://issues.apache.org/jira/browse/ZOOKEEPER-2937\n    - do not process data packets, if authentication via providers that\n      *requires* authentication aren't completed\n\ncommit 2e2e4b5b4a57212da70e004c402711412b1d6f07\nAuthor: Sriram Chandramouli <sriramch@csp0094.csp.corp.gq1.yahoo.com>\nDate:   2017-11-16T02:54:29Z\n\n    - do the auth checks only once after connection establishment before\n      processing data packets\n\ncommit 74271caa44484b06b435e39cd5e22362bb2c73cf\nAuthor: Sriram Chandramouli <sriramch@csp0094.csp.corp.gq1.yahoo.com>\nDate:   2017-11-16T02:57:42Z\n\n    Merge branch 'master' of https://github.com/apache/zookeeper\n\n----\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-16T03:09:50.526+0000","updated":"2017-11-16T03:09:50.526+0000"}],"maxResults":2,"total":2,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-2937/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i3mjvj:"}}