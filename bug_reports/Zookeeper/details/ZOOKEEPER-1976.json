{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12728419","self":"https://issues.apache.org/jira/rest/api/2/issue/12728419","key":"ZOOKEEPER-1976","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310801","id":"12310801","key":"ZOOKEEPER","name":"ZooKeeper","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310801&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310801&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310801&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310801&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10484","id":"10484","description":"Apache ZooKeeper related","name":"ZooKeeper"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2014-07-21T13:12:22.981+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Sun Jun 18 21:24:42 UTC 2017","customfield_12310420":"406495","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-1976/watchers","watchCount":2,"isWatching":false},"created":"2014-07-20T03:01:01.444+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12316644","id":"12316644","description":"Dynamic Reconfig, Remove Watches, Local Session","name":"3.5.0","archived":false,"released":true,"releaseDate":"2014-08-04"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12339207","id":"12339207","description":"Fix release against 3.4 branch","name":"3.4.11","archived":false,"released":true,"releaseDate":"2017-11-09"}],"issuelinks":[{"id":"12391914","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12391914","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12728418","key":"ZOOKEEPER-1975","self":"https://issues.apache.org/jira/rest/api/2/issue/12728418","fields":{"summary":"Turn off \"internationalization warnings\" in findbugs exclude file","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/7","id":"7","description":"The sub-task of the issue","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype","name":"Sub-task","subtask":true,"avatarId":21146}}}}],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2017-06-19T10:33:43.243+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312382","id":"12312382","name":"server","description":"General issues with the ZooKeeper server."}],"timeoriginalestimate":null,"description":"Findbugs 2.0.3 found a number of internationalization issues with the code, we ignored these for the time being in ZOOKEEPER-1975, however we should address them one by one eventually.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"406515","customfield_12312823":null,"summary":"address internationalization issues identified by findbugs 2.0.3","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=phunt","name":"phunt","key":"phunt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Patrick Hunt","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=phunt","name":"phunt","key":"phunt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Patrick Hunt","active":true,"timeZone":"America/Los_Angeles"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12728419/comment/14067773","id":"14067773","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=phunt","name":"phunt","key":"phunt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Patrick Hunt","active":true,"timeZone":"America/Los_Angeles"},"body":"Here's an example of the issues:\n\n{noformat}\nDm  Found reliance on default encoding in org.apache.jute.compiler.CGenerator.genCode(): new java.io.FileWriter(File)\nDm\tFound reliance on default encoding in org.apache.jute.compiler.CppGenerator.genCode(): new java.io.FileWriter(File)\nDm\tFound reliance on default encoding in org.apache.jute.compiler.JRecord.genCsharpCode(File): new java.io.FileWriter(File)\nDm\tFound reliance on default encoding in org.apache.jute.compiler.JRecord.genJavaCode(File): new java.io.FileWriter(File)\nDm\tFound reliance on default encoding in new org.apache.jute.XmlOutputArchive(OutputStream): new java.io.PrintStream(OutputStream)\nDm\tFound reliance on default encoding in org.apache.zookeeper.cli.AddAuthCommand.exec(): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.cli.CreateCommand.exec(): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.cli.DelQuotaCommand.delQuota(ZooKeeper, String, boolean, boolean): new String(byte[])\nDm\tFound reliance on default encoding in org.apache.zookeeper.cli.DelQuotaCommand.delQuota(ZooKeeper, String, boolean, boolean): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.cli.GetCommand.exec(): new String(byte[])\nDm\tFound reliance on default encoding in org.apache.zookeeper.cli.GetCommand.exec(): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.cli.GetConfigCommand.exec(): new String(byte[])\nDm\tFound reliance on default encoding in org.apache.zookeeper.cli.GetConfigCommand.exec(): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.cli.ListQuotaCommand.exec(): new String(byte[])\nDm\tFound reliance on default encoding in org.apache.zookeeper.cli.ReconfigCommand.exec(): new String(byte[])\nDm\tFound reliance on default encoding in org.apache.zookeeper.cli.SetCommand.exec(): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.cli.SetQuotaCommand.createQuota(ZooKeeper, String, long, int): new String(byte[])\nDm\tFound reliance on default encoding in org.apache.zookeeper.cli.SetQuotaCommand.createQuota(ZooKeeper, String, long, int): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.client.FourLetterWordMain.send4LetterWord(String, int, String): new java.io.InputStreamReader(InputStream)\nDm\tFound reliance on default encoding in org.apache.zookeeper.client.FourLetterWordMain.send4LetterWord(String, int, String): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.ClientCnxn$SendThread.pingRwServer(): new java.io.InputStreamReader(InputStream)\nDm\tFound reliance on default encoding in org.apache.zookeeper.ClientCnxn$SendThread.pingRwServer(): String.getBytes()\nDm\tFound reliance on default encoding in new org.apache.zookeeper.common.AtomicFileWritingIdiom(File, AtomicFileWritingIdiom$OutputStreamStatement, AtomicFileWritingIdiom$WriterStatement): new java.io.OutputStreamWriter(OutputStream)\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.auth.DigestAuthenticationProvider.generateDigest(String): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.auth.DigestAuthenticationProvider.handleAuthentication(ServerCnxn, byte[]): new String(byte[])\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.DataTree.updateBytes(String, long): new String(byte[])\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.DataTree.updateBytes(String, long): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.DataTree.updateCount(String, int): new String(byte[])\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.DataTree.updateCount(String, int): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.DataTree.updateQuotaForPath(String): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.FinalRequestProcessor.processRequest(Request): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.NettyServerCnxn$SendBufferWriter.checkFlush(boolean): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.NIOServerCnxn$SendBufferWriter.checkFlush(boolean): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.persistence.FileSnap.<static initializer for FileSnap>(): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.persistence.FileTxnLog.<static initializer for FileTxnLog>(): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.PrepRequestProcessor.pRequest2Txn(int, long, Request, Record, boolean): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.quorum.FastLeaderElection.sendNotifications(): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerReceiver.run(): new String(byte[])\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerReceiver.run(): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.quorum.Follower.processPacket(QuorumPacket): new String(byte[])\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.quorum.Learner.syncWithLeader(long): new String(byte[])\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.quorum.LearnerHandler.run(): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.quorum.Observer.processPacket(QuorumPacket): new String(byte[])\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.quorum.QuorumCnxManager.initiateConnection(Socket, Long): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.quorum.QuorumCnxManager.receiveConnection(Socket): new String(byte[])\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.quorum.QuorumPeer.readLongFromFile(String): new java.io.FileReader(File)\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.quorum.QuorumPeerConfig.checkValidity(): new java.io.FileReader(File)\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.quorum.QuorumPeerConfig$1.write(OutputStream): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.quorum.QuorumZooKeeperServer.dumpConf(PrintWriter): new String(byte[])\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.quorum.QuorumZooKeeperServer.dumpConf(PrintWriter): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.Request.toString(): new String(byte[])\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.ServerCnxn.<static initializer for ServerCnxn>(): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.TraceFormatter.main(String[]): new String(byte[])\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.util.OSMXBean.getMaxFileDescriptorCount(): new java.io.InputStreamReader(InputStream)\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.util.OSMXBean.getOpenFileDescriptorCount(): new java.io.InputStreamReader(InputStream)\nDm\tFound reliance on default encoding in org.apache.zookeeper.server.ZKDatabase.initConfigInZKDatabase(QuorumVerifier): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.ServerAdminClient.dump(String, int): new String(byte[])\nDm\tFound reliance on default encoding in org.apache.zookeeper.ServerAdminClient.dump(String, int): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.ServerAdminClient.getTraceMask(String, int): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.ServerAdminClient.kill(String, int): new String(byte[])\nDm\tFound reliance on default encoding in org.apache.zookeeper.ServerAdminClient.kill(String, int): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.ServerAdminClient.ruok(String, int): new String(byte[])\nDm\tFound reliance on default encoding in org.apache.zookeeper.ServerAdminClient.ruok(String, int): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.ServerAdminClient.setTraceMask(String, int, String): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.ServerAdminClient.stat(String, int): new String(byte[])\nDm\tFound reliance on default encoding in org.apache.zookeeper.ServerAdminClient.stat(String, int): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.Shell.runCommand(): new java.io.InputStreamReader(InputStream)\nDm\tFound reliance on default encoding in org.apache.zookeeper.version.util.VerGen.generateFile(File, VerGen$Version, int, String): new java.io.FileWriter(File)\nDm\tFound reliance on default encoding in org.apache.zookeeper.ZooKeeperMain.createQuota(ZooKeeper, String, long, int): new String(byte[])\nDm\tFound reliance on default encoding in org.apache.zookeeper.ZooKeeperMain.createQuota(ZooKeeper, String, long, int): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.ZooKeeperMain.delQuota(ZooKeeper, String, boolean, boolean): new String(byte[])\nDm\tFound reliance on default encoding in org.apache.zookeeper.ZooKeeperMain.delQuota(ZooKeeper, String, boolean, boolean): String.getBytes()\nDm\tFound reliance on default encoding in org.apache.zookeeper.ZooKeeperMain.run(): new java.io.InputStreamReader(InputStream)\n{noformat}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=phunt","name":"phunt","key":"phunt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Patrick Hunt","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-07-20T03:01:31.482+0000","updated":"2014-07-20T03:01:31.482+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12728419/comment/14068484","id":"14068484","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bhavanki","name":"bhavanki","key":"bhavanki","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=bhavanki&avatarId=21744","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bhavanki&avatarId=21744","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bhavanki&avatarId=21744","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bhavanki&avatarId=21744"},"displayName":"Bill Havanki","active":true,"timeZone":"America/New_York"},"body":"These aren't so much \"internationalization\" issues as issues where Java doesn't know for sure how to convert characters into bytes or vice versa. In these cases Java uses the platform default encoding, which differs between Linux and Windows and Mac (yes, and different countries too). Despite all the complexities, usually the fix is just to specify UTF-8 everywhere. :)\n\n{code}\nimport java.nio.charset.Charset;\nprivate static final Charset UTF_8 = Charset.forName(\"UTF-8\");\n// or, in Java 7, just use StandardCharsets.UTF_8\n\nString s = new String(bytes, UTF_8);\nbyte[] bs = s.getBytes(UTF_8);\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bhavanki","name":"bhavanki","key":"bhavanki","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=bhavanki&avatarId=21744","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bhavanki&avatarId=21744","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bhavanki&avatarId=21744","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bhavanki&avatarId=21744"},"displayName":"Bill Havanki","active":true,"timeZone":"America/New_York"},"created":"2014-07-21T13:12:22.981+0000","updated":"2014-07-21T13:12:22.981+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12728419/comment/14068986","id":"14068986","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=phunt","name":"phunt","key":"phunt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Patrick Hunt","active":true,"timeZone":"America/Los_Angeles"},"body":"It's a bit more complicated than that. Take a look at the warnings - e.g. FileWriter is being used and it doesn't have the ability to specify the encoding. As a result the impact is bigger (granted for simple stuff like strings it's not so bad).\n\nCheck out this tool used in lucene/solr: https://code.google.com/p/forbidden-apis/\nalso see: https://www.youtube.com/watch?v=PVRdLyQGUxE\n\nSee the note on FileReader here: http://blog.thetaphi.de/2012/07/default-locales-default-charsets-and.html\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=phunt","name":"phunt","key":"phunt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Patrick Hunt","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-07-21T18:26:17.647+0000","updated":"2014-07-21T18:26:17.647+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12728419/comment/16053313","id":"16053313","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gosubpl","name":"gosubpl","key":"gosubpl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Janek P","active":true,"timeZone":"Etc/UTC"},"body":"Some of the operations do not accept the encoding parameter. However, supposed that we replace them with the one that do like described here: https://stackoverflow.com/questions/9852978/write-a-file-in-utf-8-using-filewriter-java , can we use UTF-8 universally everywhere? That should remove the dependency on default encoding. Theoretically this could fail for reading of e.g. file names with non UTF-8 characters on some non-UTF-8 compliant locales, but I believe most data that is written is generated by Zookeeper anyway. WDYT?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gosubpl","name":"gosubpl","key":"gosubpl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Janek P","active":true,"timeZone":"Etc/UTC"},"created":"2017-06-18T21:24:42.182+0000","updated":"2017-06-18T21:24:42.182+0000"}],"maxResults":4,"total":4,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-1976/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1xy93:"}}