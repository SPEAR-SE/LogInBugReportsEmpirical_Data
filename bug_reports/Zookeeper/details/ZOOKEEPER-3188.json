{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13197857","self":"https://issues.apache.org/jira/rest/api/2/issue/13197857","key":"ZOOKEEPER-3188","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":1800,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310801","id":"12310801","key":"ZOOKEEPER","name":"ZooKeeper","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310801&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310801&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310801&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310801&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10484","id":"10484","description":"Apache ZooKeeper related","name":"ZooKeeper"}},"fixVersions":[],"aggregatetimespent":1800,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2018-11-14T00:18:29.267+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Fri Dec 07 00:03:06 UTC 2018","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-3188/watchers","watchCount":3,"isWatching":false},"created":"2018-11-12T16:44:27.174+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":["pull-request-available"],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":0,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"issuelinks":[{"id":"12548038","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12548038","type":{"id":"10032","name":"Blocker","inward":"is blocked by","outward":"blocks","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10032"},"outwardIssue":{"id":"13197980","key":"ZOOKEEPER-3189","self":"https://issues.apache.org/jira/rest/api/2/issue/13197980","fields":{"summary":"Support new configuration syntax for resilient network feature","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2018-12-07T00:03:06.971+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[],"timeoriginalestimate":null,"description":"We propose to add network level resiliency to Zookeeper. The ideas that we have on the topic have been discussed on the mailing list and via a specification document that is located at [https://docs.google.com/document/d/1iGVwxeHp57qogwfdodCh9b32P2_kOQaJZ2GDo7j36fI/edit?usp=sharing]\r\n\r\nThat document is copied to this issue which is being created to report the results of experimental implementations.\r\nh1. Zookeeper Network Resilience\r\nh2. Background\r\n\r\nZookeeper is designed to help in building distributed systems. It provides a variety of operations for doing this and all of these operations have rather strict guarantees on semantics. Zookeeper itself is a distributed system made up of cluster containing a leader and a number of followers. The leader is designated in a process known as leader election in which a majority of all nodes in the cluster must agree on a leader. All subsequent operations are initiated by the leader and completed when a majority of nodes have confirmed the operation. Whenever an operation cannot be confirmed by a majority or whenever the leader goes missing for a time, a new leader election is conducted and normal operations proceed once a new leader is confirmed.\r\n\r\n \r\n\r\nThe details of this are not important relative to this discussion. What is important is that the semantics of the operations conducted by a Zookeeper cluster and the semantics of how client processes communicate with the cluster depend only on the basic fact that messages sent over TCP connections will never appear out of order or missing. Central to the design of ZK is that a server to server network connection is used as long as it works to use it and a new connection is made when it appears that the old connection isn't working.\r\n\r\n \r\n\r\nAs currently implemented, however, each member of a Zookeeper cluster can have only a single address as viewed from some other process. This means, absent network link bonding, that the loss of a single switch or a few network connections could completely stop the operations of a the Zookeeper cluster. It is the goal of this work to address this issue by allowing each server to listen on multiple network interfaces and to connect to other servers any of several addresses. The effect will be to allow servers to communicate over redundant network paths to improve resiliency to network failures without changing any core algorithms.\r\nh2. Proposed Change\r\n\r\nInterestingly, the correct operations of a Zookeeper cluster do not depend on _how_ a TCP connection was made. There is no reason at all not to advertise multiple addresses for members of a Zookeeper cluster. \r\n\r\n \r\n\r\nConnections between members of a Zookeeper cluster and between a client and a cluster member are established by referencing a configuration file (for cluster members) that specifies the address of all of the nodes in a cluster or by using a connection string containing possible addresses of Zookeeper cluster members. As soon as a connection is made, any desired authentication or encryption layers are added and the connection is handed off to the client communications layer or the server to server logic. \r\n\r\nThis means that the only thing that actually needs to change to allow Zookeeper servers to be accessible on multiple networks is a change in the server configuration file format to allow the multiple addresses to be specified and to update the code that establishes the TCP connection to make use of these multiple addresses. No code changes are actually needed on the client since we can simply supply all possible server addresses. The client already has logic for selecting a server address at random and it doesn’t really matter if these addresses represent synonyms for the same server. All that matters is that _some_ connection to a server is established.\r\nh2. Configuration File Syntax Change\r\n\r\nThe current Zookeeper syntax looks like this:\r\n\r\n \r\n\r\ntickTime=2000\r\ndataDir=/var/zookeeper\r\nclientPort=2181\r\ninitLimit=5\r\nsyncLimit=2\r\nserver.1=zoo1:2888:3888\r\nserver.2=zoo2:2888:3888\r\nserver.3=zoo3:2888:3888\r\n\r\n \r\n\r\nThe only lines that matter for this discussion are the last three. These specify the addresses for each of the servers that are part of the Zookeeper cluster as well as the port numbers used for the servers to talk to each other.\r\n\r\n \r\n\r\nI propose that the current syntax of these lines be augmented to allow a comma delimited list of addresses. For the current example, we might have this:\r\n\r\n \r\n\r\nserver.1=zoo1-net1:2888:3888,zoo1-net2:2888:3888\r\nserver.2=zoo2-net1:2888:3888,zoo2-net2:2888:3888\r\nserver.3=zoo3-net1:2888:3888\r\n\r\n \r\n\r\nThe first two servers are available via two different addresses, presumably on separate networks while the third server only has a single address. In practice, we would probably specify multiple addresses for all the servers, but that isn’t necessary for this proposal. There is work ongoing to improve and generalize the syntax for configuring Zookeeper clusters. As that work progresses, it will be necessary to figure out appropriate extensions to allow multiple addresses in the new and improved syntax. Nothing blocks the current proposal from being implemented in current form and adapted later for the new syntax.\r\n\r\n \r\n\r\nWhen a server tries to connect to another server, it would simply shuffle the available addresses at random and try to connect using successive addresses until a connection succeeds or all addresses have been tried. \r\n\r\n \r\n\r\nThe complete syntax for server lines in a Zookeeper configuration file in BNF is\r\n\r\n \r\n\r\n<server-line> ::= \"server.\"<integer> \"=\" <address-spec>\r\n\r\n<address-spec> ::= <server-address>[<client-address>]\r\n\r\n<server-address> ::= <address>:<port1>:<port2>[:<role>]\r\n\r\n<client-address> ::= [;[<client address>:]<client port>\r\n\r\n \r\n\r\nAfter this change, the syntax would look like this:\r\n\r\n \r\n\r\n<server-line> ::= \"server.\"<integer> \"=\" <address-list>\r\n\r\n<address-list> ::= <address-spec>[,<address-list>]\r\n\r\n<address-spec> ::= <server-address>[<client-address>]\r\n\r\n<server-address> ::= <address>:<port1>:<port2>[:<role>]\r\n\r\n<client-address> ::= [;[<client address>:]<client port>\r\n\r\n \r\nh2. Dynamic Reconfiguration\r\n\r\nFrom version 3.5, Zookeeper has the ability to change the configuration of the cluster dynamically. This can involve the atomic change of any of the configuration parameters that are dynamically configurable. These include, notably for the purposes here, the addresses of the servers in the cluster. In order to simplify this, the configuration file post 3.5 is split into static configuration that cannot be changed on the fly and dynamic configuration that can be changed. When a new configuration is committed by the cluster, the dynamic configuration file is simply over-written and used.\r\n\r\n \r\n\r\nThis means that extending the configuration file syntax to support multiple addresses is sufficient to support dynamic reconfiguration.\r\nh2. Client Connections\r\n\r\nWhen client connections are initially made, the client library is given a list of servers to contact. Servers are selected at random until a connection is made or the patience of the library implementers is exhausted. This requires no changes to support multiple network links per server except insofar that servers with more network connections will wind up with more client connections unless some action is taken. What will be done is to find the server with the most addresses and add duplicates of some address for every other server until every server is mentioned the same number of times. For cases where all servers have identical numbers of network connections, this will cause no change. It is expected that this will only arise in normal situations as a transient condition while a cluster is being reconfigured or if some servers are added to a cluster temporarily during maintenance operations. \r\n\r\n \r\n\r\nMore interesting is the fact that when a connection is made to a Zookeeper cluster, the server responds with a list of the servers in the cluster. We will need to arrange that the list contains all available address in the Zookeeper cluster, but will not need to make any other changes. As mentioned before, some addresses might be duplicated to make sure that all servers have equal probability of being selected by a server.","customfield_10010":null,"timetracking":{"remainingEstimate":"0h","timeSpent":"0.5h","remainingEstimateSeconds":0,"timeSpentSeconds":1800},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":0,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Improve resilience to network","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tdunning","name":"tdunning","key":"tdunning","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Dunning","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tdunning","name":"tdunning","key":"tdunning","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Dunning","active":true,"timeZone":"America/Los_Angeles"},"customfield_12310290":null,"aggregateprogress":{"progress":1800,"total":1800,"percent":100},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":1800,"total":1800,"percent":100},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13197857/comment/16685929","id":"16685929","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"body":"A couple of comments on the high level design:\r\n\r\n* Did we consider the compatibility requirement here? Will the new configuration format be backward compatible? One concrete use case is if a customer upgrades to new version with this multiple address per server capability but wants to roll back without rewriting the config files to older version.\r\n\r\n* Did we evaluate the impact of this feature on existing server to server mutual authentication and authorization feature (e.g. ZOOKEEPER-1045 for Kerberos, ZOOKEEPER-236 for SSL), and also the impact on operations? For example how to configure Kerberos principals and / or SSL certs per host given multiple potential IP address and / or FQDN names per server?\r\n\r\n* Could we provide more details on expected level of support with regards to dynamic reconfiguration feature? Examples would be great - for example: we would support adding, removing, or updating server address that's appertained to a given server via dynamic reconfiguration, and also the expected behavior in each case. For example, adding a new address to an existing ensemble member should not cause any disconnect / reconnect but removing an in use address of a server should cause a disconnect. Likely the dynamic reconfig API / CLI / doc should be updated because of this.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"created":"2018-11-14T00:18:29.267+0000","updated":"2018-11-14T00:18:29.267+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13197857/comment/16710015","id":"16710015","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tdunning","name":"tdunning","key":"tdunning","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Dunning","active":true,"timeZone":"America/Los_Angeles"},"body":"Taking the questions in order:\r\n\r\n\r\nbq. Did we consider the compatibility requirement here? Will the new configuration format be backward compatible? One concrete use case is if a customer upgrades to new version with this multiple address per server capability but wants to roll back without rewriting the config files to older version.\r\n\r\nYes. We considered this.\r\n\r\nThe compatibility is such that old configurations will work with the new version. New configurations will likely not work with older versions (this is life). Upgrading without configuration changes will allow transparent roll back. Upgrading and changing the configuration to take advantage of multiple configurations will require configuration change to roll back. I think that this is unavoidable with the current configuration format. A better JSON-ish format would be much easier to future proof.\r\n\r\nIf the upgrade is done using multiple DNS A records for each host instead of configuration changes, then transparent roll back should be possible because the old code just takes the first address while the new code accepts all addresses.\r\n\r\nbq. Did we evaluate the impact of this feature on existing server to server mutual authentication and authorization feature (e.g. ZOOKEEPER-1045 for Kerberos, ZOOKEEPER-236 for SSL), and also the impact on operations? For example how to configure Kerberos principals and / or SSL certs per host given multiple potential IP address and / or FQDN names per server?\r\n\r\nYes. This was considered.\r\n\r\nThere are two important cases to consider. The first is the one that arises due to multiple DNS records for the same host name. In this case, binding and authenticating against the same host name should be transparent. We will test this as much as feasible. \r\n\r\nThe second case is where there are multiple host names embedded in the configuration. This case should also work but each separate address must be separately authenticated. Again, we will test this as much as possible.\r\n\r\nbq. Could we provide more details on expected level of support with regards to dynamic reconfiguration feature? \r\n\r\nI don't understand the question. Dynamic reconfiguration involves changing the dynamic part of the configuration file. That can involve addresses, for instance. Such changes should be handled exactly the way they are now and there should be no interactions with the changes to the networking stack. A commit of a new config is a commit.\r\n\r\nbq. Examples would be great - for example: we would support adding, removing, or updating server address that's appertained to a given server via dynamic reconfiguration, and also the expected behavior in each case. For example, adding a new address to an existing ensemble member should not cause any disconnect / reconnect but removing an in use address of a server should cause a disconnect. Likely the dynamic reconfig API / CLI / doc should be updated because of this.\r\n\r\nI don't really see how this pertains other than the desire not to lose a live connection. The documentation, in particular, should be essentially identical except that an example of adding an address might be nice (but kind of redundant).\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tdunning","name":"tdunning","key":"tdunning","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ted Dunning","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-12-05T12:37:06.866+0000","updated":"2018-12-05T12:37:54.088+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13197857/comment/16712162","id":"16712162","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"body":"Appreciate detailed reply, agree on replies on 1 and 2.\r\n\r\nbq. Such changes should be handled exactly the way they are now and there should be no interactions with the changes to the networking stack. \r\n\r\nAgreed. I think I was just looking for more elaborated use cases around using reconfig to manipulate multiple server addresses, as the proposal does not go into details other than 'support dynamic reconfiguration.'. I expect dynamic reconfiguration will just work out of box with proper abstractions, without touching too much part of reconfiguration code path, but there are some subtleties to consider. A couple of examples:\r\n\r\n* Proper rebalance client connections - this was discussed on dev mailing list.\r\n* Avoid unnecessary leader elections during reconfig - this change will probably change the abstraction of server addresses (QuorumServer) and we should be careful how the QuorumServers will be compared, to avoid unnecessary leader elections in cases where the server set is the same but some servers have new server addresses.\r\nThere might be more cases to consider...\r\n\r\nbq. The documentation, in particular, should be essentially identical except that an example of adding an address might be nice\r\n\r\nI am thinking at least [this|https://zookeeper.apache.org/doc/r3.5.4-beta/zookeeperReconfig.html#sc_reconfig_clientport] should be updated to reflect the fact that 1. the config format is changed and 2. the multiple server addresses can be manipulated via reconfig.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"created":"2018-12-07T00:03:06.971+0000","updated":"2018-12-07T00:03:06.971+0000"}],"maxResults":3,"total":3,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-3188/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":3,"worklogs":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13197857/worklog/169337","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"GitHub user ArtemChernatsky opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/725\n\n    Zookeeper-3188: Improve resilience to network\n\n    According to issue [ZOOKEEPER-3188](https://issues.apache.org/jira/browse/ZOOKEEPER-3188) added ability to specify several addresses for quorum operations. Also added reconnection attempts if connection to leader lost.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/mapr-demos/zookeeper ZOOKEEPER-3188\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/725.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #725\n    \n----\ncommit 966618740777c55eb1af040ab447845c42402284\nAuthor: ArtemChernatsky <achernatsky@...>\nDate:   2018-11-23T16:31:59Z\n\n    added multiple addresses support for quorum\n\n----\n","created":"2018-11-26T14:10:38.465+0000","updated":"2018-11-26T14:10:38.465+0000","started":"2018-11-26T14:10:38.465+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"169337","issueId":"13197857"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13197857/worklog/172258","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user ArtemChernatsky closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/725\n","created":"2018-12-05T12:08:41.209+0000","updated":"2018-12-05T12:08:41.209+0000","started":"2018-12-05T12:08:41.208+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"172258","issueId":"13197857"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13197857/worklog/172260","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"GitHub user ArtemChernatsky opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/730\n\n    Zookeeper-3188: Improve resilience to network\n\n    According to issue [ZOOKEEPER-3188](https://issues.apache.org/jira/browse/ZOOKEEPER-3188) added ability to specify several addresses for quorum operations. Also added reconnection attempts if connection to leader lost.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/mapr-demos/zookeeper ZOOKEEPER-3188-master\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/730.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #730\n    \n----\ncommit 56e0b6c60c4ccee09e2de8b407705c3f51602419\nAuthor: ArtemChernatsky <achernatsky@...>\nDate:   2018-11-23T16:31:59Z\n\n    added multiple addresses support for quorum\n\n----\n","created":"2018-12-05T12:14:09.536+0000","updated":"2018-12-05T12:14:09.536+0000","started":"2018-12-05T12:14:09.535+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"172260","issueId":"13197857"}]},"customfield_12311820":"0|s00egg:"}}