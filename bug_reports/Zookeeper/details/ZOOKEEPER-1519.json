{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12600191","self":"https://issues.apache.org/jira/rest/api/2/issue/12600191","key":"ZOOKEEPER-1519","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310801","id":"12310801","key":"ZOOKEEPER","name":"ZooKeeper","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310801&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310801&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310801&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310801&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10484","id":"10484","description":"Apache ZooKeeper related","name":"ZooKeeper"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12326518","id":"12326518","name":"3.6.0","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12343268","id":"12343268","description":"Beta release against 3.5 branch","name":"3.5.5","archived":false,"released":false}],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2012-07-25T17:41:32.033+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Thu Nov 14 09:32:07 UTC 2013","customfield_12310420":"242187","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-1519/watchers","watchCount":8,"isWatching":false},"created":"2012-07-25T17:34:57.830+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315482","id":"12315482","description":"Fix release against 3.3 branch","name":"3.3.3","archived":false,"released":true,"releaseDate":"2011-02-27"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12320172","id":"12320172","description":"Fix release against 3.3 branch","name":"3.3.6","archived":false,"released":true,"releaseDate":"2012-08-02"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dlescohier","name":"dlescohier","key":"dlescohier","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel Lescohier","active":true,"timeZone":"America/New_York"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2018-05-10T20:09:04.854+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312380","id":"12312380","name":"c client","description":"The c client interface to ZooKeeper"}],"timeoriginalestimate":null,"description":"zoo_acreate() and zoo_aset() take a char * argument for data and prepare a call to zookeeper.  This char * doesn't seem to be duplicated at any point, making it possible that the caller of the asynchronous function might potentially free() the char * argument before the zookeeper library completes its request.  This is unlikely to present a real problem unless the freed memory is re-used before zookeeper consumes it.  I've been unable to reproduce this issue using pure C as a result.\n\nHowever, ZKPython is a whole different story.  Consider this snippet:\n\n  ok = zookeeper.acreate(handle, path, json.dumps(value), \n                         acl, flags, callback)\n  assert ok == zookeeper.OK\n\nIn this snippet, json.dumps() allocates a string which is passed into the acreate().  When acreate() returns, the zookeeper request has been constructed with a pointer to the string allocated by json.dumps().  Also when acreate() returns, that string is now referenced by 0 things (ZKPython doesn't bump the refcount) and the string is eligible for garbage collection and re-use.  The Zookeeper request now has a pointer to dangerous freed memory.\n\nI've been seeing odd behavior in our development environments for some time now, where it appeared as though two separate JSON payloads had been joined together.  Python has been allocating a new JSON string in the middle of the old string that an incomplete zookeeper async call had not yet processed.\n\nI am not sure if this is a behavior that should be documented, or if the C binding implementation needs to be updated to create copies of the data payload provided for aset and acreate.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12570822","id":"12570822","filename":"zookeeper-1519.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dlescohier","name":"dlescohier","key":"dlescohier","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel Lescohier","active":true,"timeZone":"America/New_York"},"created":"2013-02-25T17:52:58.218+0000","size":1151,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12570822/zookeeper-1519.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"12734","customfield_12312823":null,"summary":"Zookeeper Async calls can reference free()'d memory","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markgius","name":"markgius","key":"markgius","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mark Gius","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markgius","name":"markgius","key":"markgius","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mark Gius","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":"Ubuntu 11.10, Ubuntu packaged Zookeeper 3.3.3 with some backported fixes.","customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12600191/comment/13422447","id":"13422447","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tyree731","name":"tyree731","key":"tyree731","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stephen Tyree","active":true,"timeZone":"America/New_York"},"body":"Duplicating the data wouldn't help in circumstances where the data is a structure contain malloc'd memory, i.e.:\n\nstruct Foo {\n  const char* bar;\n};\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tyree731","name":"tyree731","key":"tyree731","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stephen Tyree","active":true,"timeZone":"America/New_York"},"created":"2012-07-25T17:41:32.033+0000","updated":"2012-07-25T17:41:32.033+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12600191/comment/13422461","id":"13422461","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markgius","name":"markgius","key":"markgius","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mark Gius","active":true,"timeZone":"Etc/UTC"},"body":"Then perhaps the solution is to document a contract between aysnc calls and library consumers that the data pointer needs to be alive until after the async call has complete (or been submitted, or whatever).  \n\nOr maybe async calls need another argument for a cleanup function that frees the data pointer.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markgius","name":"markgius","key":"markgius","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mark Gius","active":true,"timeZone":"Etc/UTC"},"created":"2012-07-25T17:59:17.113+0000","updated":"2012-07-25T17:59:17.113+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12600191/comment/13422538","id":"13422538","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markgius","name":"markgius","key":"markgius","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mark Gius","active":true,"timeZone":"Etc/UTC"},"body":"well, I don't think zookeeper would handle such a struct correctly anyway, because zookeeper treats whatever you throw into that argument like a byte array.  So zookeeper will persist the memory location of the inner-malloc()'d memory, but not the memory itself. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markgius","name":"markgius","key":"markgius","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mark Gius","active":true,"timeZone":"Etc/UTC"},"created":"2012-07-25T19:35:09.889+0000","updated":"2012-07-25T19:35:09.889+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12600191/comment/13586036","id":"13586036","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dlescohier","name":"dlescohier","key":"dlescohier","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel Lescohier","active":true,"timeZone":"America/New_York"},"body":"I think the issue is the add completion, which passes 'data' to it. The Request is already serialized (copied).\n\nThe 'data' needs to be copied for the completion.  The completion holds a reference to the 'data' after this function returns, so it needs to own the memory. With the current API, the only way to own it, is to copy it, because we're only using malloc/free, not a more advanced memory management API where you can pass ownership of memory, or increase reference counts on memory.\n\nSo I am submitting a patch where the create_completion_entry function copies the data, and the destroy_completion_entry function frees the copied data.\n\nIn the completion_list_t structure, have to remove const from the 'data' member, so that one can call free on it. Now it's a copy, not referring back to the caller's copy.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dlescohier","name":"dlescohier","key":"dlescohier","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel Lescohier","active":true,"timeZone":"America/New_York"},"created":"2013-02-25T17:49:57.840+0000","updated":"2013-02-25T17:49:57.840+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12600191/comment/13586059","id":"13586059","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"-1 overall.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12570822/zookeeper-1519.patch\n  against trunk revision 1448007.\n\n    +1 @author.  The patch does not contain any @author tags.\n\n    -1 tests included.  The patch doesn't appear to include any new or modified tests.\n                        Please justify why no new tests are needed for this patch.\n                        Also please list what manual steps were performed to verify this patch.\n\n    -1 patch.  The patch command could not apply the patch.\n\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1409//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2013-02-25T18:01:40.786+0000","updated":"2013-02-25T18:01:40.786+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12600191/comment/13587340","id":"13587340","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rgs","name":"rgs","key":"rgs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rgs&avatarId=18469","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rgs&avatarId=18469","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rgs&avatarId=18469","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rgs&avatarId=18469"},"displayName":"Raul Gutierrez Segales","active":true,"timeZone":"America/Los_Angeles"},"body":"Does sizeof *(void *) work?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rgs","name":"rgs","key":"rgs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rgs&avatarId=18469","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rgs&avatarId=18469","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rgs&avatarId=18469","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rgs&avatarId=18469"},"displayName":"Raul Gutierrez Segales","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-02-26T18:19:11.619+0000","updated":"2013-02-26T18:19:11.619+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12600191/comment/13587351","id":"13587351","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rgs","name":"rgs","key":"rgs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rgs&avatarId=18469","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rgs&avatarId=18469","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rgs&avatarId=18469","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rgs&avatarId=18469"},"displayName":"Raul Gutierrez Segales","active":true,"timeZone":"America/Los_Angeles"},"body":"Don't think so: http://fpaste.org/iwjf/","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rgs","name":"rgs","key":"rgs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rgs&avatarId=18469","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rgs&avatarId=18469","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rgs&avatarId=18469","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rgs&avatarId=18469"},"displayName":"Raul Gutierrez Segales","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-02-26T18:24:14.083+0000","updated":"2013-02-26T18:24:14.083+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12600191/comment/13587520","id":"13587520","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dlescohier","name":"dlescohier","key":"dlescohier","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel Lescohier","active":true,"timeZone":"America/New_York"},"body":"You're correct. I didn't have time to test the patch, but I wanted to get it out there for discussion.\n\nI looked further, and the callers get void* data from the public API with no length parameter.  So, the public API does not allow us to copy the data.\n\nIn order to fix it, it looks like a public API change is required.  Either:\n\n 1. Document in the API that the caller cannot free that memory until the zookeeper library is done with it (which also means it can't be a pointer to memory on the stack).  I assume that the library is done with it once it calls the completion callback? So the program can free it once it gets the same pointer back in a callback (or when the zookeeper connection is closed). I think this would make it hard to integrate with scripting languages like Python, because the scripting language C interface would have to copy the memory, account for it in some global structure, and free it once it sees that pointer again in a callback or when the zookeeper connection is closed.\n\n 2. Document in the API that the void * must be malloc'ed memory, and the ownership is passed to the library (which means the caller copies it, and the library frees it). That's also a difficult API.\n\n 3. Add a data length parameter to the API, so the library can copy it.\n\n 4. Don't use a void * for the 'data' parameter, use something else.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dlescohier","name":"dlescohier","key":"dlescohier","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel Lescohier","active":true,"timeZone":"America/New_York"},"created":"2013-02-26T20:44:31.672+0000","updated":"2013-02-26T20:44:31.672+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12600191/comment/13587562","id":"13587562","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dlescohier","name":"dlescohier","key":"dlescohier","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel Lescohier","active":true,"timeZone":"America/New_York"},"body":"Never mind my comments about 'data'. I was confusing 'value' with 'data.'  'value' is copied when it is serialized. So, I don't see where the submitter's original problem can occur.\n\n'data' is all right, because it should be passed by reference.  In the zkpython bindings, it's used to hold a reference to the Python callable object that should be called on the callback.  That's a python object, so it's refcounted.  'completion' is the zkpython C function that is called, and calls the python callable object that is cast to a Python object and called with the Python API.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dlescohier","name":"dlescohier","key":"dlescohier","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel Lescohier","active":true,"timeZone":"America/New_York"},"created":"2013-02-26T21:11:42.670+0000","updated":"2013-02-26T21:11:42.670+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12600191/comment/13783752","id":"13783752","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"Hi there, I believe the contract with the C client is that the application manages the memory allocation of the data it passes to async calls, so I'm not really happy about copying the data. I'm fine with improving documentation, though.\n\nA different issue seems to be with the python client. I don't know enough about it to determine if this could be fixed on its side instead of applying the fix proposed here.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2013-10-02T08:57:39.095+0000","updated":"2013-10-02T08:57:39.095+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12600191/comment/13784159","id":"13784159","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=phunt","name":"phunt","key":"phunt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Patrick Hunt","active":true,"timeZone":"America/Los_Angeles"},"body":"[~henryr] any insight here?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=phunt","name":"phunt","key":"phunt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Patrick Hunt","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-10-02T17:03:33.793+0000","updated":"2013-10-02T17:03:33.793+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12600191/comment/13785884","id":"13785884","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=marshall","name":"marshall","key":"marshall","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Marshall McMullen","active":true,"timeZone":"America/Denver"},"body":"I agree with Flavio... All the work I did in the C client made the same contract that the caller owns the memory not the C client. This is typical of all async interfaces I've used (e.g. asio, etc). ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=marshall","name":"marshall","key":"marshall","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Marshall McMullen","active":true,"timeZone":"America/Denver"},"created":"2013-10-04T03:57:59.421+0000","updated":"2013-10-04T03:57:59.421+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12600191/comment/13821286","id":"13821286","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"What should we do with this issue? It sounds like we haven't converged.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2013-11-13T12:58:43.281+0000","updated":"2013-11-13T12:58:43.281+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12600191/comment/13822117","id":"13822117","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fanster.z","name":"fanster.z","key":"fanster.z","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jacky007","active":true,"timeZone":"Asia/Shanghai"},"body":"I don't think this is a problem. The caller should hold the json.dumps(value), and free it in callback if needed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fanster.z","name":"fanster.z","key":"fanster.z","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jacky007","active":true,"timeZone":"Asia/Shanghai"},"created":"2013-11-14T02:37:01.980+0000","updated":"2013-11-14T02:37:01.980+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12600191/comment/13822160","id":"13822160","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markgius","name":"markgius","key":"markgius","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mark Gius","active":true,"timeZone":"Etc/UTC"},"body":"From an implementation point of view I think it's fine to not handle this case (I can't think of any way to fix it in zkpython that wouldn't be brittle and/or weird) but the documentation should clearly indicate that it is the callers responsibility to keep a handle on the string.  From the caller's point of view in Python it is not expected that the underlying function is not incrementing/decrementing reference counts.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=markgius","name":"markgius","key":"markgius","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mark Gius","active":true,"timeZone":"Etc/UTC"},"created":"2013-11-14T04:50:08.967+0000","updated":"2013-11-14T04:50:08.967+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12600191/comment/13822272","id":"13822272","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"[~markgius], would you be able to propose a patch for the documentation?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2013-11-14T09:32:07.788+0000","updated":"2013-11-14T09:32:07.788+0000"}],"maxResults":16,"total":16,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-1519/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i02jc7:"}}