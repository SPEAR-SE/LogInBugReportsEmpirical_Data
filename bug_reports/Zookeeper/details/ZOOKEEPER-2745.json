{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13061547","self":"https://issues.apache.org/jira/rest/api/2/issue/13061547","key":"ZOOKEEPER-2745","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310801","id":"12310801","key":"ZOOKEEPER","name":"ZooKeeper","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310801&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310801&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310801&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310801&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10484","id":"10484","description":"Apache ZooKeeper related","name":"ZooKeeper"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2017-04-14T15:31:06.631+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Fri Apr 14 15:31:06 UTC 2017","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-2745/watchers","watchCount":3,"isWatching":false},"created":"2017-04-04T21:55:38.030+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.svg","name":"Critical","id":"2"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12323310","id":"12323310","description":"Fix release against 3.4 branch","name":"3.4.6","archived":false,"released":true,"releaseDate":"2014-03-10"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2017-04-14T15:31:06.631+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312382","id":"12312382","name":"server","description":"General issues with the ZooKeeper server."}],"timeoriginalestimate":null,"description":"If disk is full on 1 zookeeper node in a 3 node ensemble, it is able to join the quorum with partial data.\n\nSetup:\n--------\n- Running a 3 node zookeeper ensemble on Ubuntu 12.04 as upstart services. Let's call the nodes: A, B and C.\n\nObservation:\n-----------------\n- Connecting to 2 (Node A and B) of the 3 nodes and doing an `ls` in zookeeper data directory was giving:\n/foo\n/bar\n/baz\nBut an `ls` on node C was giving:\n/baz\n- On node C, the zookeeper data directory had the following files:\nlog.1001\nlog.1600\nsnapshot.1000 -> size 200\nsnapshot.1200 -> size 269\nsnapshot.1300 -> size 300\n- Snapshot sizes on node A and B were in the vicinity of 500KB\n\nRCA\n-------\n- Disk was full on node C prior to the creation time of the small snapshot\n  files.\n- Looking at zookeeper server logs, we observed that zookeeper had crashed and restarted a few times after the first instance of disk full. Everytime time zookeeper starts, it does 3 things:\n  1. Run the purge task to cleanup old snapshot and txn logs. Our\n  autopurge.snapRetainCount is set to 3.\n  2. Restore from the most recent valid snapshot and the txn logs that follow.\n  3. Take part in a leader election - realize it has missed something - become the follower - get diff of missed txns from the current leader - create a new snapshot of its current state.\n- We confirmed that a valid snapshot of the system had existed prior to, and\n  immediately after the crash. Let's call this snapshot snapshot.800.\n- Over the next 3 restarts, zookeeper did the following:\n  - Purged older snapshots\n  - Restored from snapshot.800 + txn logs\n  - Synced up with master, tried to write its updated state to a new snapshot. Crashed due to disk full. The snapshot file, even though invalid, had been created.\n- *Note*: This is the first source of the bug. It might be more appropriate to first write the snapshot to a temporary file, and then rename it\nsnapshot.<txn_id>. That would gives us more confidence in the validity of snapshots in the data dir. \n- Let's say the snapshot files created above were snapshot.850, snapshot.920 and snapshot.950\n- On the 4th restart, the purge task retained the 3 recent snapshots - snapshot.850, snapshot.920, and snapshot.950, and proceeded to purge snapshot.800 and associated txn logs assuming that they were no longer needed.\n- *Note*: This is the second source of the bug. Instead of retaining the 3 most recent *valid* snapshots, the server just retains 3 most recent snapshots, regardless of their validity.\n- When restoring, zookeeper doesn't find any valid snapshot logs to restore from. So it tries to reload its state from txn logs starting at zxid 0. However, those transaction logs would have long ago been garbage collected. It reloads from whatever txn logs are present. Let's say the only txn log file present (log.951) contains logs for zxid 951 to 998.  It reloads from that log file, syncs with master - gets txns 999 and 1000, and writes the snapshot log snapshot.1000 to disk. Now that we have deleted snapshot.800, we have enough free disk space to write snapshot.1000. From this state onwards, zookeeper will always assume it has the state till txn id 1000, even though it only has state from txn id 951 to 1000.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12861984","id":"12861984","filename":"ZOOKEEPER-2745.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bothra90","name":"bothra90","key":"bothra90","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Abhay Bothra","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-04-05T00:30:27.415+0000","size":2636,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12861984/ZOOKEEPER-2745.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Node loses data after disk-full event, but successfully joins Quorum","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bothra90","name":"bothra90","key":"bothra90","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Abhay Bothra","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bothra90","name":"bothra90","key":"bothra90","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Abhay Bothra","active":true,"timeZone":"America/Los_Angeles"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":"Ubuntu 12.04","customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13061547/comment/15956114","id":"15956114","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bothra90","name":"bothra90","key":"bothra90","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Abhay Bothra","active":true,"timeZone":"America/Los_Angeles"},"body":"Part of this is fixed in: https://issues.apache.org/jira/browse/ZOOKEEPER-2325\nUploaded patch contains the change to retain snapRetainCount number of *valid* snapshots instead of basing the choice just on recency","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bothra90","name":"bothra90","key":"bothra90","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Abhay Bothra","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-04-05T00:31:28.261+0000","updated":"2017-04-05T00:31:28.261+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13061547/comment/15969153","id":"15969153","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"body":"Thanks for reporting this with all details!\n\nbq. When restoring, zookeeper doesn't find any valid snapshot logs to restore from. So it tries to reload its state from txn logs starting at zxid 0.\n\nWith ZOOKEEPER-2325 this should not happen. If there is no valid snapshot but with some tnx log files, ZK process will abort. \n\nRegarding retain valid snapshots vs recent snapshots, from operational point of view it might be good to retain a larger number of snapshots than the default value (3), because during recover process ZK will scan for up to 100 snapshots and skip invalid ones until it hits a valid snapshot. Because the way purge works, a valid txn log file appertains to the first valid snapshot should also persistent so ZK can recover from the first valid snapshot and tx log. \n\nThe current approach of retaining most recent snapshots also have the benefit from a forensic point of view - if something disastrous happened that required administrator intervention, we might be interested to understand what happened and retain most recent snapshots can provide more contexts. If we are only retaining valid snapshots, we would not know what have happened.\n\nMy recommendation for similar case is:\n* Retain a larger number of snapshots. The chances all of the snapshots are invalid is rare.\n* Apply fix in ZOOKEEPER-2325: in case all snapshots are invalid, prevent restoring from txn logs which leads to bad state.\n* Apply fix in ZOOKEEPER-261: to prevent a bad state populated to entire quorum. \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"created":"2017-04-14T15:31:06.631+0000","updated":"2017-04-14T15:31:06.631+0000"}],"maxResults":2,"total":2,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-2745/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i3d7dr:"}}