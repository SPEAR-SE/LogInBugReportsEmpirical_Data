{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12689055","self":"https://issues.apache.org/jira/rest/api/2/issue/12689055","key":"ZOOKEEPER-1863","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310801","id":"12310801","key":"ZOOKEEPER","name":"ZooKeeper","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310801&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310801&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310801&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310801&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10484","id":"10484","description":"Apache ZooKeeper related","name":"ZooKeeper"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12316644","id":"12316644","description":"Dynamic Reconfig, Remove Watches, Local Session","name":"3.5.0","archived":false,"released":true,"releaseDate":"2014-08-04"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2014-01-15T18:26:27.655+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Mon Aug 01 21:07:09 UTC 2016","customfield_12310420":"368022","customfield_12312320":null,"customfield_12310222":"10002_*:*_6_*:*_14024936860_*|*_1_*:*_6_*:*_1628920910_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2014-07-15T22:40:54.964+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-1863/watchers","watchCount":12,"isWatching":false},"created":"2014-01-15T18:23:17.239+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/1","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/blocker.svg","name":"Blocker","id":"1"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"8.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12316644","id":"12316644","description":"Dynamic Reconfig, Remove Watches, Local Session","name":"3.5.0","archived":false,"released":true,"releaseDate":"2014-08-04"}],"issuelinks":[{"id":"12411871","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12411871","type":{"id":"12310000","name":"Duplicate","inward":"is duplicated by","outward":"duplicates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"},"inwardIssue":{"id":"12785275","key":"ZOOKEEPER-2151","self":"https://issues.apache.org/jira/rest/api/2/issue/12785275","fields":{"summary":"FollowerZookeeperServer has thousands of outstanding requests stuck in CommitProcessor","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dutch","name":"dutch","key":"dutch","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dutch T. Meyer","active":true,"timeZone":"Etc/UTC"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2016-08-01T22:27:23.224+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312382","id":"12312382","name":"server","description":"General issues with the ZooKeeper server."}],"timeoriginalestimate":null,"description":"In CommitProcessor.java processor, if we are at the primary request handler on line 167:\n{noformat}\n                while (!stopped && !isWaitingForCommit() &&\n                       !isProcessingCommit() &&\n                       (request = queuedRequests.poll()) != null) {\n                    if (needCommit(request)) {\n                        nextPending.set(request);\n                    } else {\n                        sendToNextProcessor(request);\n                    }\n                }\n{noformat}\n\nA request can be handled in this block and be quickly processed and completed on another thread. If queuedRequests is empty, we then exit the block. Next, before this thread makes any more progress, we can get 2 more requests, one get_children(say), and a sync placed on queuedRequests for the processor. Then, if we are very unlucky, the sync request can complete and this object's commit() routine is called (from FollowerZookeeperServer), which places the sync request on the previously empty committedRequests queue. At that point, this thread continues.\n\nWe reach line 182, which is a check on sync requests.\n{noformat}\n                if (!stopped && !isProcessingRequest() &&\n                    (request = committedRequests.poll()) != null) {\n{noformat}\n\nHere we are not processing any requests, because the original request has completed. We haven't dequeued either the read or the sync request in this processor. Next, the poll above will pull the sync request off the queue, and in the following block, the sync will get forwarded to the next processor.\n\nThis is a problem because the read request hasn't been forwarded yet, so requests are now out of order.\n\nI've been able to reproduce this bug reliably by injecting a Thread.sleep(5000) between the two blocks above to make the race condition far more likely, then in a client program.\n\n{noformat}\n        zoo_aget_children(zh, \"/\", 0, getchildren_cb, NULL);\n        //Wait long enough for queuedRequests to drain\n        sleep(1);\n        zoo_aget_children(zh, \"/\", 0, getchildren_cb, &th_ctx[0]);\n        zoo_async(zh, \"/\", sync_cb, &th_ctx[0]);\n{noformat}\n\nWhen this bug is triggered, 3 things can happen:\n1) Clients will see requests complete out of order and fail on xid mismatches.\n2) Kazoo in particular doesn't handle this runtime exception well, and can orphan outstanding requests.\n3) I've seen zookeeper servers deadlock, likely because the commit cannot be completed, which can wedge the commit processor.\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12623744","id":"12623744","filename":"stack.17512","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dutch","name":"dutch","key":"dutch","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dutch T. Meyer","active":true,"timeZone":"Etc/UTC"},"created":"2014-01-17T22:56:38.912+0000","size":36444,"mimeType":"application/octet-stream","content":"https://issues.apache.org/jira/secure/attachment/12623744/stack.17512"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12655442","id":"12655442","filename":"ZOOKEEPER-1863.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2014-07-13T08:52:38.194+0000","size":11019,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12655442/ZOOKEEPER-1863.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12655418","id":"12655418","filename":"ZOOKEEPER-1863.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2014-07-12T21:07:43.540+0000","size":11073,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12655418/ZOOKEEPER-1863.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12655221","id":"12655221","filename":"ZOOKEEPER-1863.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2014-07-11T14:58:32.190+0000","size":5420,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12655221/ZOOKEEPER-1863.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12655207","id":"12655207","filename":"ZOOKEEPER-1863.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2014-07-11T12:59:54.914+0000","size":5364,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12655207/ZOOKEEPER-1863.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12653011","id":"12653011","filename":"ZOOKEEPER-1863.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"created":"2014-06-28T16:21:36.600+0000","size":1146,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12653011/ZOOKEEPER-1863.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12644667","id":"12644667","filename":"ZOOKEEPER-1863.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dutch","name":"dutch","key":"dutch","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dutch T. Meyer","active":true,"timeZone":"Etc/UTC"},"created":"2014-05-13T18:03:40.446+0000","size":1427,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12644667/ZOOKEEPER-1863.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12625985","id":"12625985","filename":"ZOOKEEPER-1863.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dutch","name":"dutch","key":"dutch","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dutch T. Meyer","active":true,"timeZone":"Etc/UTC"},"created":"2014-01-29T22:01:44.590+0000","size":2124,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12625985/ZOOKEEPER-1863.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"368329","customfield_12312823":null,"summary":"Race condition in commit processor leading to out of order request completion, xid mismatch on client.","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dutch","name":"dutch","key":"dutch","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dutch T. Meyer","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dutch","name":"dutch","key":"dutch","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dutch T. Meyer","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/13872376","id":"13872376","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"body":"Good catch. Do you want to attempt a patch?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"created":"2014-01-15T18:26:27.655+0000","updated":"2014-01-15T18:26:27.655+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/13872397","id":"13872397","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dutch","name":"dutch","key":"dutch","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dutch T. Meyer","active":true,"timeZone":"Etc/UTC"},"body":"I'd be happy to, but it may take me quite some time to get to it - I have many commitments right now.\n\nI think I'd first look at whether that second block can be protected with a short circuit check on isWaitingForCommit().  If that's not true then I don't think we can grab a sync off the committedRequests before it has been pulled off queuedRequests, which seems to be the core problem.  We should probably think about whether there are any other orderings that would get you to a similar state though.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dutch","name":"dutch","key":"dutch","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dutch T. Meyer","active":true,"timeZone":"Etc/UTC"},"created":"2014-01-15T18:35:50.677+0000","updated":"2014-01-15T18:35:50.677+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/13875041","id":"13875041","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rgs","name":"rgs","key":"rgs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rgs&avatarId=18469","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rgs&avatarId=18469","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rgs&avatarId=18469","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rgs&avatarId=18469"},"displayName":"Raul Gutierrez Segales","active":true,"timeZone":"America/Los_Angeles"},"body":"I couldn't repro this but we might have actually seen this in prod. I'll try some more but if you get some time would you mind running jstack on a ZK server with a wedged CommitProcessor and pasting that here? Thanks!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rgs","name":"rgs","key":"rgs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rgs&avatarId=18469","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rgs&avatarId=18469","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rgs&avatarId=18469","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rgs&avatarId=18469"},"displayName":"Raul Gutierrez Segales","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-01-17T18:11:52.112+0000","updated":"2014-01-17T18:11:52.112+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/13875054","id":"13875054","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dutch","name":"dutch","key":"dutch","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dutch T. Meyer","active":true,"timeZone":"Etc/UTC"},"body":"I will try, I'm not sure how difficult it is to reproduce the wedge with the sleep-instrumented server, and I haven't tried to determine the precise ordering that gets you there.  I have seen it happen on a live server once, but couldn't get a thread dump before some automation reset the cluster.  In every case of this lockup, a client saw the xid error (which is itself quite rare) immediately before the server it was talking to wedged, so I'm confident these issues are related.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dutch","name":"dutch","key":"dutch","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dutch T. Meyer","active":true,"timeZone":"Etc/UTC"},"created":"2014-01-17T18:25:10.018+0000","updated":"2014-01-17T18:25:10.018+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/13875063","id":"13875063","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"body":"I will take a look at this the week of the 26th if no one has time to look into it before that.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"created":"2014-01-17T18:31:11.170+0000","updated":"2014-01-17T18:31:11.170+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/13875365","id":"13875365","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dutch","name":"dutch","key":"dutch","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dutch T. Meyer","active":true,"timeZone":"Etc/UTC"},"body":"Here is a trace of a server following a force of this bug using an instrumented server.\n\nRequests made to this server timeout.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dutch","name":"dutch","key":"dutch","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dutch T. Meyer","active":true,"timeZone":"Etc/UTC"},"created":"2014-01-17T22:56:38.917+0000","updated":"2014-01-17T22:56:38.917+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/13875449","id":"13875449","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rgs","name":"rgs","key":"rgs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rgs&avatarId=18469","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rgs&avatarId=18469","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rgs&avatarId=18469","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rgs&avatarId=18469"},"displayName":"Raul Gutierrez Segales","active":true,"timeZone":"America/Los_Angeles"},"body":"[~dutch]: I can't see the SessionTracker thread. In a healthy Follower I have this thread\n\n{noformat}\n\"SessionTracker\" prio=10 tid=0x00007f93fc3b2800 nid=0xb1f8 waiting on condition [0x00000000446d2000]\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n        at java.lang.Thread.sleep(Native Method)\n        at org.apache.zookeeper.server.SessionTrackerImpl.run(SessionTrackerImpl.java:124)\n\n   Locked ownable synchronizers:\n        - None\n{noformat}\n\nCan you grep /var/log/zookeeper/zookeeper.log for SessionTracker?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rgs","name":"rgs","key":"rgs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rgs&avatarId=18469","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rgs&avatarId=18469","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rgs&avatarId=18469","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rgs&avatarId=18469"},"displayName":"Raul Gutierrez Segales","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-01-18T00:52:22.507+0000","updated":"2014-01-18T00:52:22.507+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/13875486","id":"13875486","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dutch","name":"dutch","key":"dutch","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dutch T. Meyer","active":true,"timeZone":"Etc/UTC"},"body":"Sorry about that.  It's because I didn't have the changes associated with local sessions incorporated in that trace.  My build is just a bit older, but I think I can repro from trunk, as the bug appears to still be there.\n\nI will update it with a fresh build from trunk, and ensure that nothing weird is blocking my ability to reproduce the error there.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dutch","name":"dutch","key":"dutch","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dutch T. Meyer","active":true,"timeZone":"Etc/UTC"},"created":"2014-01-18T01:56:37.074+0000","updated":"2014-01-18T01:56:37.074+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/13875496","id":"13875496","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rgs","name":"rgs","key":"rgs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rgs&avatarId=18469","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rgs&avatarId=18469","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rgs&avatarId=18469","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rgs&avatarId=18469"},"displayName":"Raul Gutierrez Segales","active":true,"timeZone":"America/Los_Angeles"},"body":"You should still have a SessionTracker thread, regardless of having or not local sessions enabled. If you still have your previous logs handy, would you mind grepping for SessionTracker? I wonder if the SessionTracker thread exited... I saw this once or twice before. It's very sporadic and rare. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rgs","name":"rgs","key":"rgs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rgs&avatarId=18469","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rgs&avatarId=18469","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rgs&avatarId=18469","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rgs&avatarId=18469"},"displayName":"Raul Gutierrez Segales","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-01-18T02:37:50.071+0000","updated":"2014-01-18T02:37:50.071+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/13875503","id":"13875503","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rgs","name":"rgs","key":"rgs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rgs&avatarId=18469","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rgs&avatarId=18469","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rgs&avatarId=18469","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rgs&avatarId=18469"},"displayName":"Raul Gutierrez Segales","active":true,"timeZone":"America/Los_Angeles"},"body":"Oh, sorry about that you are right — there shouldn't be a SessionTracker in your case. Ignore my previous comment. Still a repro from trunk would be nice. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rgs","name":"rgs","key":"rgs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rgs&avatarId=18469","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rgs&avatarId=18469","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rgs&avatarId=18469","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rgs&avatarId=18469"},"displayName":"Raul Gutierrez Segales","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-01-18T02:51:10.649+0000","updated":"2014-01-18T02:51:10.649+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/13875514","id":"13875514","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rgs","name":"rgs","key":"rgs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rgs&avatarId=18469","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rgs&avatarId=18469","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rgs&avatarId=18469","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rgs&avatarId=18469"},"displayName":"Raul Gutierrez Segales","active":true,"timeZone":"America/Los_Angeles"},"body":"Also, to clarify, the stack trace you attached is for a wedged follower or just for the case in which you triggered the XIDs mismatch? Nothing looks, immediately, locked-up in that stack trace. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rgs","name":"rgs","key":"rgs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rgs&avatarId=18469","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rgs&avatarId=18469","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rgs&avatarId=18469","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rgs&avatarId=18469"},"displayName":"Raul Gutierrez Segales","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-01-18T03:03:56.066+0000","updated":"2014-01-18T03:03:56.066+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/13875539","id":"13875539","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dutch","name":"dutch","key":"dutch","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dutch T. Meyer","active":true,"timeZone":"Etc/UTC"},"body":"I think the server is wedged in that trace - all requests to the server (the follower that originally showed the xid mismatch) timeout.  Even though the commit thread does look okay, I think it probably has a commit stuck in nextPending, such that isWaitingForCommit() would return true.  Effectively the lost sync has plugged the pipeline at the commit processor.\n\nIf I \"echo stat | nc localhost 2181\" I see the outstanding request count increase at each request, but never decrease.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dutch","name":"dutch","key":"dutch","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dutch T. Meyer","active":true,"timeZone":"Etc/UTC"},"created":"2014-01-18T04:16:32.146+0000","updated":"2014-01-18T04:16:32.146+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/13881636","id":"13881636","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thawan","name":"thawan","key":"thawan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thawan Kooburat","active":true,"timeZone":"America/Los_Angeles"},"body":"I have seen a Commit Processor getting stuck in our prod (which run our internal branch) I spent a few days digging into the problem but couldn't locate the root cause.  \n\nThe sequence of action that you put in description is very unlikely to occur in quorum mode.  First, the Follower/ObserverReuestProcessor which is in the front of the CommitProcessor put a request into queuedRequests even before sending it out to the leader.   It need at least a network round trip ( or a full quorum vote) before the same request will comeback from a leader and get put into commitRequest.  This is the assumption that even the original CommitProcessor (prior to ZOOKEEPER-1505) rely on. However, a combination of bad thread scheduling and long GC pause might break this assumption.\n\nSync request is special unlike other write request because it doesn't require quorum voting, but I still don't think it matter in this case. \n\nAgain, since I saw this in prod but I am unable to repro it. I did add a background thread to detect a request stuck in nextPending for extended period of time and kill the server if it is the case.  I can post the patch if we are able unable find the root cause. \n\nYou can also capture a heap dump of server to inspect which request get stuck (at nextPending) and correlated the possible event.  \n\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thawan","name":"thawan","key":"thawan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thawan Kooburat","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-01-25T03:34:46.383+0000","updated":"2014-01-25T03:34:46.383+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/13882403","id":"13882403","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"body":"So, it seems like if this happens it must happen due to the fact that we have two paths in CommitProcessor, one on line 203, where we set the nextPending to null, and one where we never set it to null, the else case below on lines 205-210.\nThawan, has your background thread ever done that in prod?\nI am curious as to why we have that case where we get a commit with no corresponding pending request waiting for it. The comment \" // this request came from someone else so just\n                        // send the commit packet\"\nDoesn't really make much sense to me, does anyone have an explanation? If this is the only way we think this could happen, maybe we check the queuedRequest queue at the time we get the unmatched request, and try to match it then.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"created":"2014-01-26T19:45:25.075+0000","updated":"2014-01-26T19:45:25.075+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/13882424","id":"13882424","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"body":"OK Apologies, I (somewhat) understand why we don't care when nextPending doesn't match.\n\nSo, I've played around with reproducing this. When I change the FollowerRequestProcessor to do this:\n  case OpCode.sync:\n                    zks.pendingSyncs.add(request);\n                    zks.getFollower().request(request);\n                    zks.sync(); //this is what the leader will eventually cause us to call\n                    break;\n , randomly sleep the commit processor, and run the async hammer test with some extra reads and sleeps (just trying to force a reproduction), I can get the xid out of sync exception:\njava.io.IOException: Xid out of order. Got Xid 5 with err 0 expected Xid 1 for a packet with details: clientPath:/test- serverPath:/test- finished:false header:: 1,1  replyHeader:: 0,0,-4  request:: '/test-,,v{s{31,s{'world,'anyone}}},2  response::  \n\tat org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:914)\n\tat org.apache.zookeeper.ClientCnxnSocketNIO.doIO(ClientCnxnSocketNIO.java:99)\n\tat org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:362)\n\tat org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1193)\n\nNote that this fails in the same way with the same changes in 3.4, so I don't think this is a new thing.\nHave yet to get it to hang or any other behavior except for the xid out of order.\nFeels like we may need to do some additional tracking of syncs inside the commit processor...\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"created":"2014-01-26T21:01:02.641+0000","updated":"2014-01-26T21:01:02.641+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/13884435","id":"13884435","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thawan","name":"thawan","key":"thawan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thawan Kooburat","active":true,"timeZone":"America/Los_Angeles"},"body":"Commit processor is critical to the perf of ZK so additional synchronization must be done very carefully. I agree that correctness is definitely more important. The commit processor main's loop is the bottleneck since it is executed by a single thread. So it would be best to avoid expensive locking there. \n\nI will see log from my prod if the background thread that abort the server had done its job or not.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thawan","name":"thawan","key":"thawan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thawan Kooburat","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-01-28T19:00:57.822+0000","updated":"2014-01-28T19:00:57.822+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/13885877","id":"13885877","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dutch","name":"dutch","key":"dutch","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dutch T. Meyer","active":true,"timeZone":"Etc/UTC"},"body":"Here is a sketch at one approach.  I'd appreciate feedback on this - I don't consider it particularly elegant, and I hope there's a better way.\n\nThe idea is straightforward - we check queuedRequests prior to the dequeue of committedRequests to ensure that the head of commitedRequests has not raced.  Since I'd rather not take a full traversal for every sync request, I've further optimized this by wrapping the whole block in a check on isWaitingForCommit.  If nextPending is not NULL I don't believe the syncs can jump ordering.  So we should only pay the cost of checking if we receive a commit we weren't already waiting on, and if I'm not mistake that requires that the block above exited with:\n\n{noformat}\nqueuedRequests.poll() == null\n{noformat}\n\nSo the queue probably hasn't grown so deep in the interim that the traversal is particularly expensive.\n\nStill - The dependencies between the blocks of in this loop are pretty subtle and hard to understand.  If someone can safely refactor it I think that would be much preferred.  It might also be better to tag commit/sync requests such that this check for identity:\n\n{noformat}\npending.sessionId == request.sessionId &&\n                        pending.cxid == request.cxid\n{noformat}\n\nis a bit stronger.  If we knew in this commit processor where the request came from (i.e. was it processed by our parent FollowerRequestProcessor?) then the above test would be cleaner and this race would be easy to avoid.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dutch","name":"dutch","key":"dutch","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dutch T. Meyer","active":true,"timeZone":"Etc/UTC"},"created":"2014-01-29T22:01:44.594+0000","updated":"2014-01-29T22:01:44.594+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/13886258","id":"13886258","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thawan","name":"thawan","key":"thawan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thawan Kooburat","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks for proposing a fix.  Here is my understanding of your proposed solution. (Assuming that the race is based on Camille's repro) \n\n1. It is only safe to pop {{committedRequests}} and pass it down to next process when there is an outstanding write request (nextPending != null). Since we get to compare it with the outstanding write request. \n\n2. When nextPending == null,   a request can be in {{commitedRequests}} only when it is already added to {{queuedRequests}}. If there is a request in {{commitedRequests}} it just need to check {{queuedRequests}} again to check for potential matching request.\n\nI believe traversing over {{queuedRequests}} is expensive and not needed. So I am thinking of doing this instead of that loop\n{code}\nif ( ! isWaitingForCommit() and ! queuedRequests.isEmpty()) { \n  continue;\n} \n{code}\n\nThe idea is that we abort the current attempt of trying to process the current committed request. Then repeat the loop of processing {{queuedRequests}}. Eventually, if there is a matching request (or other write request) it will be assigned to {{nextPending}} which allow us to process {{committedRequests}} correctly\n\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thawan","name":"thawan","key":"thawan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thawan Kooburat","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-01-30T05:14:19.606+0000","updated":"2014-01-30T05:14:19.606+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/13886846","id":"13886846","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dutch","name":"dutch","key":"dutch","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dutch T. Meyer","active":true,"timeZone":"Etc/UTC"},"body":"Thawan - I considered that and still prefer, but I had trouble convincing myself that it is safe:\n\nThe block we're trying to fix is:\n{noformat}\n                    Request pending = nextPending.get();\n                    if (pending != null &&\n                        pending.sessionId == request.sessionId &&\n                        pending.cxid == request.cxid) {\n                           ...\n                    } else {\n                        // this request came from someone else so just                                                   \n                        // send the commit packet                                                                        \n                        currentlyCommitting.set(request);\n                        sendToNextProcessor(request);\n                    }\n{noformat}\n\nIn that else block we would seem to be handing the case where nextPending is null but committedRequests isn't by sending the commit to the next processor.  Your solution would change that, by instead retrying the loop.  Is it possible that nothing would be placed on queuedRequests for a long time and we could starve committedRequests?\n\nI don't understand ramifications of that else clause well enough to say.  What do you think?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dutch","name":"dutch","key":"dutch","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dutch T. Meyer","active":true,"timeZone":"Etc/UTC"},"created":"2014-01-30T18:07:25.872+0000","updated":"2014-01-30T18:07:25.872+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/13886993","id":"13886993","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thawan","name":"thawan","key":"thawan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thawan Kooburat","active":true,"timeZone":"America/Los_Angeles"},"body":"This is how that how the patch may looks like.  Some of the if statement can be merge but this is easier to understand for now\n{code}\n                /*\n                 * Processing committedRequests: check and see if the commit\n                 * came in for the pending request. We can only commit a\n                 * request when there is no other request being processed.\n                 */\n                if (!stopped && !isProcessingRequest() &&\n                    (request = committedRequests.peak()) != null) {\n                    \n                    // Abort the loop if there a new request waiting in queuedRequests\n                    if ( ! isWaitingForCommit() and ! queuedRequests.isEmpty()) { \n                       continue;\n                    }       \n\n                    request = committedRequests.poll();\n\n                    /*\n                     * We match with nextPending so that we can move to the\n                     * next request when it is committed. We also want to\n                     * use nextPending because it has the cnxn member set\n                     * properly.\n                     */\n                     .....\n{code}\n\nRegarding your concern about this block.  There is not change to it, we still execute this one.  However, it will only get executed when queuedRequests is empty.  \n{code}\n                        // this request came from someone else so just                                                   \n                        // send the commit packet                                                                        \n                        currentlyCommitting.set(request);\n                        sendToNextProcessor(request);\n{code}\nThis means that there is a potential starvation for committedRequests queue instead. Since we give a higher priority for queuedRequests  but the existing code already do that. My understanding is that ZK is supposed to be notification driven system. If there is no update (committedRequest) going through client would stop issuing read request and queuedRequests will be empty eventually and allow committed requests to go through.     \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thawan","name":"thawan","key":"thawan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thawan Kooburat","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-01-30T19:55:31.505+0000","updated":"2014-01-30T19:55:31.505+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/13887050","id":"13887050","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dutch","name":"dutch","key":"dutch","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dutch T. Meyer","active":true,"timeZone":"Etc/UTC"},"body":"I think agree with you.  There is a limited potential for starvation, but that issue aside, this should perform better.  Either way, there should only be a performance impact in exceptional cases, but your simplification certainly makes the code easier to understand and maintain.  I'd recommend using your approach.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dutch","name":"dutch","key":"dutch","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dutch T. Meyer","active":true,"timeZone":"Etc/UTC"},"created":"2014-01-30T21:10:38.539+0000","updated":"2014-01-30T21:10:38.539+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/13888926","id":"13888926","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"-1 overall.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12625985/ZOOKEEPER-1863.patch\n  against trunk revision 1561672.\n\n    +1 @author.  The patch does not contain any @author tags.\n\n    -1 tests included.  The patch doesn't appear to include any new or modified tests.\n                        Please justify why no new tests are needed for this patch.\n                        Also please list what manual steps were performed to verify this patch.\n\n    -1 patch.  The patch command could not apply the patch.\n\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1913//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2014-02-02T14:12:33.061+0000","updated":"2014-02-02T14:12:33.061+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/13889820","id":"13889820","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thawan","name":"thawan","key":"thawan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thawan Kooburat","active":true,"timeZone":"America/Los_Angeles"},"body":"Yeah, we still need to think about test case (if it is possible to test) \n\nAlso, I will try to allocate sometime to do perf test using my test cases that we don't see significant perf regression with this change. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thawan","name":"thawan","key":"thawan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thawan Kooburat","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-02-03T19:46:17.133+0000","updated":"2014-02-03T19:46:17.133+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/13959426","id":"13959426","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=michim","name":"michim","key":"michim","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michi Mutsuzaki","active":true,"timeZone":"America/Los_Angeles"},"body":"Any update on this?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=michim","name":"michim","key":"michim","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michi Mutsuzaki","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-04-03T23:31:46.004+0000","updated":"2014-04-03T23:31:46.004+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/13994013","id":"13994013","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=michim","name":"michim","key":"michim","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michi Mutsuzaki","active":true,"timeZone":"America/Los_Angeles"},"body":"ping","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=michim","name":"michim","key":"michim","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michi Mutsuzaki","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-05-09T22:48:26.898+0000","updated":"2014-05-09T22:48:26.898+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/13996703","id":"13996703","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dutch","name":"dutch","key":"dutch","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dutch T. Meyer","active":true,"timeZone":"Etc/UTC"},"body":"Here's a patch that reflects Thawan's improvements over my original patch.  I've had this running in production for some months now with no problems.\n\nThere is no test included, as this race condition is rare enough that I don't believe it can be reliably reproduced without instrumenting the code to intentionally stall at key locations.  I have performed that test manually and verified that this patch fixes the issue.  We could add the necessary instrumentation to stall and control it with a flag that would be only useful to test, but I don't believe regressions are likely enough to justify a unit test that is so specific and complex.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dutch","name":"dutch","key":"dutch","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dutch T. Meyer","active":true,"timeZone":"Etc/UTC"},"created":"2014-05-13T18:03:40.467+0000","updated":"2014-05-13T18:03:40.467+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/14000050","id":"14000050","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=michim","name":"michim","key":"michim","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michi Mutsuzaki","active":true,"timeZone":"America/Los_Angeles"},"body":"+1 I'll run zk-smoketest before checking this in to make sure there is no significant performance hit.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=michim","name":"michim","key":"michim","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michi Mutsuzaki","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-05-16T17:51:21.544+0000","updated":"2014-05-16T17:51:21.544+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/14000365","id":"14000365","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"-1 overall.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12644667/ZOOKEEPER-1863.patch\n  against trunk revision 1595273.\n\n    +1 @author.  The patch does not contain any @author tags.\n\n    -1 tests included.  The patch doesn't appear to include any new or modified tests.\n                        Please justify why no new tests are needed for this patch.\n                        Also please list what manual steps were performed to verify this patch.\n\n    -1 patch.  The patch command could not apply the patch.\n\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2099//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2014-05-16T21:43:40.358+0000","updated":"2014-05-16T21:43:40.358+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/14046909","id":"14046909","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"body":"Updating to something that should apply to trunk","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"created":"2014-06-28T16:21:36.614+0000","updated":"2014-06-28T16:21:36.614+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/14046926","id":"14046926","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"-1 overall.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12653011/ZOOKEEPER-1863.patch\n  against trunk revision 1606254.\n\n    +1 @author.  The patch does not contain any @author tags.\n\n    -1 tests included.  The patch doesn't appear to include any new or modified tests.\n                        Please justify why no new tests are needed for this patch.\n                        Also please list what manual steps were performed to verify this patch.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2163//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2163//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2163//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2014-06-28T17:11:18.494+0000","updated":"2014-06-28T17:11:18.494+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/14046927","id":"14046927","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"body":"@michim any concerns with the perf impact here? Otherwise I'm gonna check it in.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"created":"2014-06-28T17:13:26.703+0000","updated":"2014-06-28T17:13:26.703+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/14058734","id":"14058734","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"I was thinking that with the changes I'm proposing here, we should be able to write a test case by populating committedRequests and queuedRequests accordingly. What do you think?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2014-07-11T12:59:54.920+0000","updated":"2014-07-11T12:59:54.920+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/14058975","id":"14058975","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rgs","name":"rgs","key":"rgs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rgs&avatarId=18469","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rgs&avatarId=18469","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rgs&avatarId=18469","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rgs&avatarId=18469"},"displayName":"Raul Gutierrez Segales","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks for the updated patch [~fpj]. Small readability nit, I think it reads better (and with less indentation) if you exit as early as you see an unmet condition:\n\n{noformat}\n    if (stopped || isProcessingRequest() || committedRequests.peek() == null) {\n        return;\n    }\n\n    /*\n     * ZOOKEEPER-1863: Abort the loop if there is a new request\n     * waiting in queuedRequests or it is waiting for a\n     * commit. \n     */\n    if ( !isWaitingForCommit() && !queuedRequests.isEmpty()) {\n        return;\n    }\n\n    /* do it.... */\n\n{noformat}\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rgs","name":"rgs","key":"rgs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rgs&avatarId=18469","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rgs&avatarId=18469","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rgs&avatarId=18469","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rgs&avatarId=18469"},"displayName":"Raul Gutierrez Segales","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-07-11T16:41:44.882+0000","updated":"2014-07-11T16:41:44.882+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/14058993","id":"14058993","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rgs","name":"rgs","key":"rgs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rgs&avatarId=18469","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rgs&avatarId=18469","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rgs&avatarId=18469","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rgs&avatarId=18469"},"displayName":"Raul Gutierrez Segales","active":true,"timeZone":"America/Los_Angeles"},"body":"Oh, the comment here has some issues too:\n\n{noformat}\n+            /*\n+             * ZOOKEEPER-1863: Abort the loop if there is a new request\n+             * waiting in queuedRequests or it is waiting for a\n+             * commit. \n+             */\n+            if ( !isWaitingForCommit() && !queuedRequests.isEmpty()) {\n+                return;\n+            }\n{noformat}\n\nAbort the loop is not correct.. you'll keep looping from the calling method... abort processing the commit perhaps? Also, it says \"abort ... if it is waiting for a commit\", whereas it's actually the contrary... right (!isWaitingForCommit)?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rgs","name":"rgs","key":"rgs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rgs&avatarId=18469","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rgs&avatarId=18469","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rgs&avatarId=18469","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rgs&avatarId=18469"},"displayName":"Raul Gutierrez Segales","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-07-11T16:50:18.198+0000","updated":"2014-07-11T16:50:18.198+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/14059100","id":"14059100","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"-1 overall.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12655221/ZOOKEEPER-1863.patch\n  against trunk revision 1609730.\n\n    +1 @author.  The patch does not contain any @author tags.\n\n    -1 tests included.  The patch doesn't appear to include any new or modified tests.\n                        Please justify why no new tests are needed for this patch.\n                        Also please list what manual steps were performed to verify this patch.\n\n    -1 patch.  The patch command could not apply the patch.\n\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2186//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-11T17:56:02.780+0000","updated":"2014-07-11T17:56:02.780+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/14059301","id":"14059301","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"I shouldn't have submitted the patch. I was proposing changes that allow us to write a test case by implementing a mock CommitProcessor and instantiating it independently. I haven't tried to write the test yet, but it sounds like it is doable this way. The comments are still valid, though, thanks for checking.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2014-07-11T20:26:44.512+0000","updated":"2014-07-11T20:26:44.512+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/14059920","id":"14059920","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"I have separated a part of the run loop in CommitProcessor so that I could reproduce the issue in a simple way, without using brute force to trigger the race. This patch adds the test case I mentioned before.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2014-07-12T21:07:43.546+0000","updated":"2014-07-12T21:07:43.546+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/14059934","id":"14059934","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rgs","name":"rgs","key":"rgs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rgs&avatarId=18469","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rgs&avatarId=18469","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rgs&avatarId=18469","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rgs&avatarId=18469"},"displayName":"Raul Gutierrez Segales","active":true,"timeZone":"America/Los_Angeles"},"body":"This indeed makes the CommitProcessor more readable (besides making it testable). Some nits though, take them or leave them as you wish:\n\nextra spaces around req:\n{noformat}\n+            this.committedRequests.add( req );\n{noformat}\n\nditto:\n{noformat}\n+       processor.addToCommittedRequests( writeReq );\n{noformat}\n\ndebugging leftover?\n{noformat}\n+       //processor.addToNextPending( writeReq );\n{noformat}\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rgs","name":"rgs","key":"rgs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rgs&avatarId=18469","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rgs&avatarId=18469","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rgs&avatarId=18469","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rgs&avatarId=18469"},"displayName":"Raul Gutierrez Segales","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-07-12T21:50:49.761+0000","updated":"2014-07-12T21:50:49.761+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/14059935","id":"14059935","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"-1 overall.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12655418/ZOOKEEPER-1863.patch\n  against trunk revision 1609730.\n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 5 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to introduce 87 new Findbugs (version 2.0.3) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2188//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2188//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2188//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-12T22:01:34.671+0000","updated":"2014-07-12T22:01:34.671+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/14060049","id":"14060049","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"Thanks for the review, [~rgs]! I think this addresses your nits. I don't think this patch is related to the NioNettySuiteHammerTest test failure, but we will need to have a look at it separately.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2014-07-13T08:52:38.200+0000","updated":"2014-07-13T08:52:38.200+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/14060065","id":"14060065","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"-1 overall.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12655442/ZOOKEEPER-1863.patch\n  against trunk revision 1609730.\n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 5 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to introduce 87 new Findbugs (version 2.0.3) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2189//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2189//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2189//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-13T09:59:31.835+0000","updated":"2014-07-13T09:59:31.835+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/14060071","id":"14060071","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"I checked the findbugs warnings, and I don't think there is anything in there due to this patch. Also, the nio hammer test seems to be crashing and I can't actually see the cause. The latest changes to jenkins seem to have made the pre-commit build unstable.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2014-07-13T10:25:13.909+0000","updated":"2014-07-13T10:25:13.909+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/14062571","id":"14062571","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rgs","name":"rgs","key":"rgs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rgs&avatarId=18469","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rgs&avatarId=18469","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rgs&avatarId=18469","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rgs&avatarId=18469"},"displayName":"Raul Gutierrez Segales","active":true,"timeZone":"America/Los_Angeles"},"body":"fwiw, +1. thanks for the patch [~fpj].","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rgs","name":"rgs","key":"rgs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rgs&avatarId=18469","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rgs&avatarId=18469","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rgs&avatarId=18469","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rgs&avatarId=18469"},"displayName":"Raul Gutierrez Segales","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-07-15T20:06:47.000+0000","updated":"2014-07-15T20:06:47.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/14062589","id":"14062589","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"body":"Just to clarify [~fpj] this is just a patch so we can write a test, not a fix for the issue?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-15T20:17:34.440+0000","updated":"2014-07-15T20:17:34.440+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/14062637","id":"14062637","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"[~fournc], it is a patch that fixes the issue. I made a modification to the original patch to be able to test it and added a test case.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2014-07-15T20:55:53.948+0000","updated":"2014-07-15T20:55:53.948+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/14062724","id":"14062724","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"body":"Awesome. Checked this in to trunk. Thanks [~fpj] and [~dutch] and [~rgs] and everyone else who helped!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-15T21:55:40.006+0000","updated":"2014-07-15T21:55:40.006+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/14062784","id":"14062784","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"FAILURE: Integrated in ZooKeeper-trunk #2373 (See [https://builds.apache.org/job/ZooKeeper-trunk/2373/])\nZOOKEEPER-1863. Race condition in commit processor leading to out of order request completion, xid mismatch on client. (fpj and Dutch T Meyer via camille) (camille: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1610861)\n* /zookeeper/trunk/CHANGES.txt\n* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/CommitProcessor.java\n* /zookeeper/trunk/src/java/test/org/apache/zookeeper/server/quorum/CommitProcessorConcurrencyTest.java\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-15T22:37:44.272+0000","updated":"2014-07-15T22:37:44.272+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/15118118","id":"15118118","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rgs","name":"rgs","key":"rgs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rgs&avatarId=18469","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rgs&avatarId=18469","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rgs&avatarId=18469","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rgs&avatarId=18469"},"displayName":"Raul Gutierrez Segales","active":true,"timeZone":"America/Los_Angeles"},"body":"[~fournc]: hi - were you able to repro this in 3.4 consistently? Should we backport this patch then? I'll try your repro on top of the 3.4 branch later today. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rgs","name":"rgs","key":"rgs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rgs&avatarId=18469","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rgs&avatarId=18469","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rgs&avatarId=18469","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rgs&avatarId=18469"},"displayName":"Raul Gutierrez Segales","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-01-26T21:47:23.249+0000","updated":"2016-01-26T21:47:23.249+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12689055/comment/15402819","id":"15402819","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=agolotin","name":"agolotin","key":"agolotin","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Artem Golotin","active":true,"timeZone":"Etc/UTC"},"body":"Hi! I was able to reproduce the same issue as mentioned in [ZOOKEEPER-2151|https://issues.apache.org/jira/browse/ZOOKEEPER-2151]. Here is the output from the stat command: \n{noformat}\nZookeeper version: 3.5.1-alpha--1, built on 07/08/2016 17:08 GMT\nClients:\n /0:0:0:0:0:0:0:1:59312[0](queued=0,recved=1,sent=0)\n /10.2.29.7:34266[0](queued=0,recved=1,sent=0)\n /10.2.29.7:55996[0](queued=0,recved=1,sent=0)\n /10.2.81.3:48640[0](queued=0,recved=1,sent=0)\n\nLatency min/avg/max: 0/1/826\nReceived: 2199007\nSent: 935511\nConnections: 4\nOutstanding: 48112\nZxid: 0x100011d4e\nMode: leader\nNode count: 171\n{noformat}\n\nNotice the number of outstanding connections.... \nAfter examining the code I found that the patch that have been submitted with this issue was applied to the code. With my limited experience I do not believe that I will be able to reproduce the issue, but I am saving the full stdout zookeeper output and can provide it if needed. \n\nHere's jstack dump:\n{noformat}\nFull thread dump OpenJDK 64-Bit Server VM (24.95-b01 mixed mode):\n\n\"NIOWorkerThread-4\" daemon prio=10 tid=0x00007fbb9c007000 nid=0x1a7 waiting on condition [0x00007fbbd84ce000]\n   java.lang.Thread.State: WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <0x00000000c18ed460> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\n\tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2043)\n\tat java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)\n\tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\n\"NIOWorkerThread-3\" daemon prio=10 tid=0x00007fbb9c005000 nid=0x1a6 waiting on condition [0x00007fbbd85cf000]\n   java.lang.Thread.State: WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <0x00000000c18ed460> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\n\tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2043)\n\tat java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)\n\tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\n\"NIOWorkerThread-2\" daemon prio=10 tid=0x00007fbb9c003800 nid=0x1a4 waiting on condition [0x00007fbbd87d1000]\n   java.lang.Thread.State: WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <0x00000000c18ed460> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\n\tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2043)\n\tat java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)\n\tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\n\"ContainerManagerTask\" daemon prio=10 tid=0x00007fbbb801b800 nid=0x1a3 in Object.wait() [0x00007fbbd88d2000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.util.TimerThread.mainLoop(Timer.java:526)\n\t- locked <0x00000000c190fa68> (a java.util.TaskQueue)\n\tat java.util.TimerThread.run(Timer.java:505)\n\n\"SyncThread:1\" prio=10 tid=0x00007fbbb8016000 nid=0x1a1 in Object.wait() [0x00007fbbd8ad4000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\tat java.lang.Thread.join(Thread.java:1281)\n\t- locked <0x00000000c195c128> (a org.apache.zookeeper.server.SyncRequestProcessor)\n\tat java.lang.Thread.join(Thread.java:1355)\n\tat org.apache.zookeeper.server.SyncRequestProcessor.shutdown(SyncRequestProcessor.java:195)\n\tat org.apache.zookeeper.server.quorum.ProposalRequestProcessor.shutdown(ProposalRequestProcessor.java:90)\n\tat org.apache.zookeeper.server.PrepRequestProcessor.shutdown(PrepRequestProcessor.java:954)\n\tat org.apache.zookeeper.server.quorum.LeaderRequestProcessor.shutdown(LeaderRequestProcessor.java:78)\n\tat org.apache.zookeeper.server.ZooKeeperServer.shutdown(ZooKeeperServer.java:476)\n\t- locked <0x00000000c18ebd28> (a org.apache.zookeeper.server.quorum.LeaderZooKeeperServer)\n\tat org.apache.zookeeper.server.quorum.LeaderZooKeeperServer.shutdown(LeaderZooKeeperServer.java:102)\n\t- locked <0x00000000c18ebd28> (a org.apache.zookeeper.server.quorum.LeaderZooKeeperServer)\n\tat org.apache.zookeeper.server.ZooKeeperServer$ZooKeeperServerListenerImpl.notifyStopping(ZooKeeperServer.java:443)\n\tat org.apache.zookeeper.server.ZooKeeperCriticalThread.handleException(ZooKeeperCriticalThread.java:49)\n\tat org.apache.zookeeper.server.SyncRequestProcessor.run(SyncRequestProcessor.java:165)\n\n\"NIOWorkerThread-1\" daemon prio=10 tid=0x00007fbb9c002000 nid=0x1a0 waiting on condition [0x00007fbbd8bd5000]\n   java.lang.Thread.State: WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <0x00000000c18ed460> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\n\tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2043)\n\tat java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)\n\tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\n\"LearnerCnxAcceptor-/10.2.88.8:2888\" prio=10 tid=0x00007fbbb8007000 nid=0x19d runnable [0x00007fbbd8ed8000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.net.PlainSocketImpl.socketAccept(Native Method)\n\tat java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:398)\n\tat java.net.ServerSocket.implAccept(ServerSocket.java:530)\n\tat java.net.ServerSocket.accept(ServerSocket.java:498)\n\tat org.apache.zookeeper.server.quorum.Leader$LearnerCnxAcceptor.run(Leader.java:364)\n\n\"QuorumPeer[myid=1](plain=/0:0:0:0:0:0:0:0:2181)(secure=disabled)\" prio=10 tid=0x00007fbbe02fd800 nid=0x19c in Object.wait() [0x00007fbbd8fd9000]\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\tat org.apache.zookeeper.server.quorum.Leader.lead(Leader.java:559)\n\t- locked <0x00000000c18ebe20> (a org.apache.zookeeper.server.quorum.Leader)\n\tat org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:1036)\n\n\"WorkerReceiver[myid=1]\" daemon prio=10 tid=0x00007fbbe02fb800 nid=0x19b waiting on condition [0x00007fbbd90da000]\n   java.lang.Thread.State: TIMED_WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <0x00000000c1820688> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\n\tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:226)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2082)\n\tat java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:389)\n\tat org.apache.zookeeper.server.quorum.QuorumCnxManager.pollRecvQueue(QuorumCnxManager.java:1038)\n\tat org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerReceiver.run(FastLeaderElection.java:235)\n\tat java.lang.Thread.run(Thread.java:745)\n\n\"WorkerSender[myid=1]\" daemon prio=10 tid=0x00007fbbe02fa800 nid=0x19a waiting on condition [0x00007fbbd91db000]\n   java.lang.Thread.State: TIMED_WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <0x00000000c1820e98> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\n\tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:226)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2082)\n\tat java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)\n\tat org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.run(FastLeaderElection.java:457)\n\tat java.lang.Thread.run(Thread.java:745)\n\n\"/10.2.88.8:3888\" prio=10 tid=0x00007fbbe02e9000 nid=0x199 runnable [0x00007fbbd92dc000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.net.PlainSocketImpl.socketAccept(Native Method)\n\tat java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:398)\n\tat java.net.ServerSocket.implAccept(ServerSocket.java:530)\n\tat java.net.ServerSocket.accept(ServerSocket.java:498)\n\tat org.apache.zookeeper.server.quorum.QuorumCnxManager$Listener.run(QuorumCnxManager.java:635)\n\n\"2029193347@qtp-381175311-1 - Acceptor0 SocketConnector@0.0.0.0:8080\" prio=10 tid=0x00007fbbe02d9000 nid=0x198 runnable [0x00007fbbd93dd000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.net.PlainSocketImpl.socketAccept(Native Method)\n\tat java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:398)\n\tat java.net.ServerSocket.implAccept(ServerSocket.java:530)\n\tat java.net.ServerSocket.accept(ServerSocket.java:498)\n\tat org.mortbay.jetty.bio.SocketConnector.accept(SocketConnector.java:99)\n\tat org.mortbay.jetty.AbstractConnector$Acceptor.run(AbstractConnector.java:708)\n\tat org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)\n\n\"1451939056@qtp-381175311-0\" prio=10 tid=0x00007fbbe02dd800 nid=0x197 in Object.wait() [0x00007fbbd94de000]\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\tat org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:626)\n\t- locked <0x00000000c1821e40> (a org.mortbay.thread.QueuedThreadPool$PoolThread)\n\n\"ConnnectionExpirer\" prio=10 tid=0x00007fbbe02d7800 nid=0x196 waiting on condition [0x00007fbbd95df000]\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.lang.Thread.sleep(Native Method)\n\tat org.apache.zookeeper.server.NIOServerCnxnFactory$ConnectionExpirerThread.run(NIOServerCnxnFactory.java:574)\n\n\"NIOServerCxnFactory.AcceptThread:/0.0.0.0:2181\" daemon prio=10 tid=0x00007fbbe02d6000 nid=0x195 runnable [0x00007fbbd96e0000]\n   java.lang.Thread.State: RUNNABLE\n\tat sun.nio.ch.EPollArrayWrapper.epollWait(Native Method)\n\tat sun.nio.ch.EPollArrayWrapper.poll(EPollArrayWrapper.java:269)\n\tat sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:79)\n\tat sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:87)\n\t- locked <0x00000000c19609b0> (a sun.nio.ch.Util$2)\n\t- locked <0x00000000c19609a0> (a java.util.Collections$UnmodifiableSet)\n\t- locked <0x00000000c19607a8> (a sun.nio.ch.EPollSelectorImpl)\n\tat sun.nio.ch.SelectorImpl.select(SelectorImpl.java:98)\n\tat sun.nio.ch.SelectorImpl.select(SelectorImpl.java:102)\n\tat org.apache.zookeeper.server.NIOServerCnxnFactory$AcceptThread.select(NIOServerCnxnFactory.java:229)\n\tat org.apache.zookeeper.server.NIOServerCnxnFactory$AcceptThread.run(NIOServerCnxnFactory.java:205)\n\n\"NIOServerCxnFactory.SelectorThread-0\" daemon prio=10 tid=0x00007fbbe02d5800 nid=0x194 runnable [0x00007fbbd97e1000]\n   java.lang.Thread.State: RUNNABLE\n\tat sun.nio.ch.EPollArrayWrapper.epollWait(Native Method)\n\tat sun.nio.ch.EPollArrayWrapper.poll(EPollArrayWrapper.java:269)\n\tat sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:79)\n\tat sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:87)\n\t- locked <0x00000000c19479e8> (a sun.nio.ch.Util$2)\n\t- locked <0x00000000c19479d8> (a java.util.Collections$UnmodifiableSet)\n\t- locked <0x00000000c1947350> (a sun.nio.ch.EPollSelectorImpl)\n\tat sun.nio.ch.SelectorImpl.select(SelectorImpl.java:98)\n\tat sun.nio.ch.SelectorImpl.select(SelectorImpl.java:102)\n\tat org.apache.zookeeper.server.NIOServerCnxnFactory$SelectorThread.select(NIOServerCnxnFactory.java:426)\n\tat org.apache.zookeeper.server.NIOServerCnxnFactory$SelectorThread.run(NIOServerCnxnFactory.java:391)\n\n\"PurgeTask\" daemon prio=10 tid=0x00007fbbe024d000 nid=0x193 in Object.wait() [0x00007fbbd98e2000]\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\tat java.util.TimerThread.mainLoop(Timer.java:552)\n\t- locked <0x00000000c1822748> (a java.util.TaskQueue)\n\tat java.util.TimerThread.run(Timer.java:505)\n\n\"RMI TCP Accept-0\" daemon prio=10 tid=0x00007fbbe01ed000 nid=0x191 runnable [0x00007fbbe4168000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.net.PlainSocketImpl.socketAccept(Native Method)\n\tat java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:398)\n\tat java.net.ServerSocket.implAccept(ServerSocket.java:530)\n\tat java.net.ServerSocket.accept(ServerSocket.java:498)\n\tat sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:399)\n\tat sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:371)\n\tat java.lang.Thread.run(Thread.java:745)\n\n\"Service Thread\" daemon prio=10 tid=0x00007fbbe00ab000 nid=0x190 runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n\"C2 CompilerThread1\" daemon prio=10 tid=0x00007fbbe00a9000 nid=0x18f waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n\"C2 CompilerThread0\" daemon prio=10 tid=0x00007fbbe00a6000 nid=0x18e waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n\"Signal Dispatcher\" daemon prio=10 tid=0x00007fbbe00a3800 nid=0x18d waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n\"Finalizer\" daemon prio=10 tid=0x00007fbbe0078000 nid=0x18c in Object.wait() [0x00007fbbe4ea8000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\t- locked <0x00000000c1861290> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:151)\n\tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:209)\n\n\"Reference Handler\" daemon prio=10 tid=0x00007fbbe0076000 nid=0x18b in Object.wait() [0x00007fbbe4fa9000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x00000000c1860ec0> (a java.lang.ref.Reference$Lock)\n\n\"main\" prio=10 tid=0x00007fbbe000a800 nid=0x187 in Object.wait() [0x00007fbbe9a1a000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000000c18ebec0> (a org.apache.zookeeper.server.quorum.QuorumPeer)\n\tat java.lang.Thread.join(Thread.java:1281)\n\t- locked <0x00000000c18ebec0> (a org.apache.zookeeper.server.quorum.QuorumPeer)\n\tat java.lang.Thread.join(Thread.java:1355)\n\tat org.apache.zookeeper.server.quorum.QuorumPeerMain.runFromConfig(QuorumPeerMain.java:184)\n\tat org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:120)\n\tat org.apache.zookeeper.server.quorum.QuorumPeerMain.main(QuorumPeerMain.java:79)\n\n\"VM Thread\" prio=10 tid=0x00007fbbe0071800 nid=0x18a runnable \n\n\"GC task thread#0 (ParallelGC)\" prio=10 tid=0x00007fbbe0020800 nid=0x188 runnable \n\n\"GC task thread#1 (ParallelGC)\" prio=10 tid=0x00007fbbe0022800 nid=0x189 runnable \n\n\"VM Periodic Task Thread\" prio=10 tid=0x00007fbbe01fa800 nid=0x192 waiting on condition \n\nJNI global references: 149\n\nHeap\n PSYoungGen      total 26112K, used 8888K [0x00000000eb280000, 0x00000000ed880000, 0x0000000100000000)\n  eden space 13312K, 45% used [0x00000000eb280000,0x00000000eb86e050,0x00000000ebf80000)\n  from space 12800K, 22% used [0x00000000ecc00000,0x00000000ecec0000,0x00000000ed880000)\n  to   space 12800K, 0% used [0x00000000ebf80000,0x00000000ebf80000,0x00000000ecc00000)\n ParOldGen       total 278528K, used 266898K [0x00000000c1800000, 0x00000000d2800000, 0x00000000eb280000)\n  object space 278528K, 95% used [0x00000000c1800000,0x00000000d1ca48e8,0x00000000d2800000)\n PSPermGen       total 21504K, used 14831K [0x00000000b7200000, 0x00000000b8700000, 0x00000000c1800000)\n  object space 21504K, 68% used [0x00000000b7200000,0x00000000b807bd50,0x00000000b8700000)\n{noformat}\n\nUnfortunately, the issue seems to have happened on Sunday when I was not able to check the health of my cluster or perform any immediate fixes. I do have several Kazoo clients + Kafka + Secor that are using zookeeper, and as all those are failing now with zookeeper outputting the following logs:\n\n{noformat}\n2016-08-01 20:45:51,828 - INFO  [NIOServerCxnFactory.AcceptThread:/0.0.0.0:2181:NIOServerCnxnFactory$AcceptThread@296] - Accepted socket connection from /10.2.81.3:50656\n2016-08-01 20:45:51,829 - INFO  [NIOWorkerThread-4:ZooKeeperServer@931] - Client attempting to establish new session at /10.2.81.3:50656\n2016-08-01 20:45:53,723 - INFO  [NIOServerCxnFactory.AcceptThread:/0.0.0.0:2181:NIOServerCnxnFactory$AcceptThread@296] - Accepted socket connection from /10.2.29.7:35862\n2016-08-01 20:45:53,725 - INFO  [NIOWorkerThread-3:ZooKeeperServer@931] - Client attempting to establish new session at /10.2.29.7:35862\n2016-08-01 20:45:59,171 - INFO  [NIOServerCxnFactory.AcceptThread:/0.0.0.0:2181:NIOServerCnxnFactory$AcceptThread@296] - Accepted socket connection from /10.2.81.3:50658\n2016-08-01 20:45:59,172 - INFO  [NIOWorkerThread-1:ZooKeeperServer@931] - Client attempting to establish new session at /10.2.81.3:50658\n2016-08-01 20:46:00,223 - INFO  [ConnnectionExpirer:NIOServerCnxn@1007] - Closed socket connection for client /10.2.29.7:35828 which had sessionid 0x10044f682c45bdd\n2016-08-01 20:46:00,223 - INFO  [ConnnectionExpirer:NIOServerCnxn@1007] - Closed socket connection for client /10.2.81.3:50656 which had sessionid 0x10044f682c45bdf\n2016-08-01 20:46:05,013 - INFO  [NIOServerCxnFactory.AcceptThread:/0.0.0.0:2181:NIOServerCnxnFactory$AcceptThread@296] - Accepted socket connection from /10.2.29.7:35898\n2016-08-01 20:46:05,028 - INFO  [NIOWorkerThread-2:NIOServerCnxn@836] - Processing ruok command from /10.2.29.7:35898\n2016-08-01 20:46:05,029 - INFO  [NIOWorkerThread-2:NIOServerCnxn@1007] - Closed socket connection for client /10.2.29.7:35898 (no session established for client)\n2016-08-01 20:46:05,146 - INFO  [NIOServerCxnFactory.AcceptThread:/0.0.0.0:2181:NIOServerCnxnFactory$AcceptThread@296] - Accepted socket connection from /10.2.29.7:35900\n2016-08-01 20:46:05,153 - INFO  [NIOWorkerThread-4:NIOServerCnxn@836] - Processing srvr command from /10.2.29.7:35900\n2016-08-01 20:46:05,153 - INFO  [NIOWorkerThread-4:NIOServerCnxn@1007] - Closed socket connection for client /10.2.29.7:35900 (no session established for client)\n2016-08-01 20:46:05,617 - INFO  [NIOServerCxnFactory.AcceptThread:/0.0.0.0:2181:NIOServerCnxnFactory$AcceptThread@296] - Accepted socket connection from /10.2.29.7:35904\n2016-08-01 20:46:05,617 - INFO  [NIOWorkerThread-3:NIOServerCnxn@836] - Processing ruok command from /10.2.29.7:35904\n2016-08-01 20:46:05,618 - INFO  [NIOWorkerThread-3:NIOServerCnxn@1007] - Closed socket connection for client /10.2.29.7:35904 (no session established for client)\n2016-08-01 20:46:05,634 - INFO  [NIOServerCxnFactory.AcceptThread:/0.0.0.0:2181:NIOServerCnxnFactory$AcceptThread@296] - Accepted socket connection from /10.2.29.7:35906\n2016-08-01 20:46:05,634 - INFO  [NIOWorkerThread-1:NIOServerCnxn@836] - Processing srvr command from /10.2.29.7:35906\n2016-08-01 20:46:05,636 - INFO  [NIOWorkerThread-1:NIOServerCnxn@1007] - Closed socket connection for client /10.2.29.7:35906 (no session established for client)\n2016-08-01 20:46:05,644 - INFO  [NIOServerCxnFactory.AcceptThread:/0.0.0.0:2181:NIOServerCnxnFactory$AcceptThread@296] - Accepted socket connection from /10.2.29.7:35908\n2016-08-01 20:46:05,644 - INFO  [NIOWorkerThread-2:ZooKeeperServer@931] - Client attempting to establish new session at /10.2.29.7:35908\n2016-08-01 20:46:06,718 - INFO  [NIOServerCxnFactory.AcceptThread:/0.0.0.0:2181:NIOServerCnxnFactory$AcceptThread@296] - Accepted socket connection from /10.2.81.3:50660\n2016-08-01 20:46:06,719 - INFO  [NIOWorkerThread-4:ZooKeeperServer@931] - Client attempting to establish new session at /10.2.81.3:50660\n2016-08-01 20:46:10,224 - INFO  [ConnnectionExpirer:NIOServerCnxn@1007] - Closed socket connection for client /10.2.81.3:50658 which had sessionid 0x10044f682c45be1\n2016-08-01 20:46:10,225 - INFO  [ConnnectionExpirer:NIOServerCnxn@1007] - Closed socket connection for client /10.2.29.7:35862 which had sessionid 0x10044f682c45be0\n2016-08-01 20:46:13,933 - INFO  [NIOServerCxnFactory.AcceptThread:/0.0.0.0:2181:NIOServerCnxnFactory$AcceptThread@296] - Accepted socket connection from /10.2.81.3:50662\n2016-08-01 20:46:13,933 - INFO  [NIOWorkerThread-3:ZooKeeperServer@931] - Client attempting to establish new session at /10.2.81.3:50662\n2016-08-01 20:46:16,030 - INFO  [NIOServerCxnFactory.AcceptThread:/0.0.0.0:2181:NIOServerCnxnFactory$AcceptThread@296] - Accepted socket connection from /10.2.29.7:35942\n2016-08-01 20:46:16,032 - INFO  [NIOWorkerThread-1:ZooKeeperServer@931] - Client attempting to establish new session at /10.2.29.7:35942\n2016-08-01 20:46:18,646 - INFO  [NIOServerCxnFactory.AcceptThread:/0.0.0.0:2181:NIOServerCnxnFactory$AcceptThread@296] - Accepted socket connection from /10.2.29.7:57696\n2016-08-01 20:46:18,647 - INFO  [NIOWorkerThread-2:ZooKeeperServer@931] - Client attempting to establish new session at /10.2.29.7:57696\n2016-08-01 20:46:20,223 - INFO  [ConnnectionExpirer:NIOServerCnxn@1007] - Closed socket connection for client /10.2.29.7:35908 which had sessionid 0x10044f682c45be2\n2016-08-01 20:46:20,224 - INFO  [ConnnectionExpirer:NIOServerCnxn@1007] - Closed socket connection for client /10.2.81.3:50662 which had sessionid 0x10044f682c45be4\n2016-08-01 20:46:20,225 - INFO  [ConnnectionExpirer:NIOServerCnxn@1007] - Closed socket connection for client /10.2.81.3:50660 which had sessionid 0x10044f682c45be3\n2016-08-01 20:46:21,255 - INFO  [NIOServerCxnFactory.AcceptThread:/0.0.0.0:2181:NIOServerCnxnFactory$AcceptThread@296] - Accepted socket connection from /10.2.81.3:50664\n2016-08-01 20:46:21,256 - INFO  [NIOWorkerThread-4:ZooKeeperServer@931] - Client attempting to establish new session at /10.2.81.3:50664\n{noformat}\n\nAlso, I would like to point out that I am running zookeeper as a part of kubernetes cluster, and not as a kubernetes petset, but as a generic service with a replication controller","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=agolotin","name":"agolotin","key":"agolotin","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Artem Golotin","active":true,"timeZone":"Etc/UTC"},"created":"2016-08-01T21:07:09.257+0000","updated":"2016-08-01T22:27:23.153+0000"}],"maxResults":49,"total":49,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-1863/votes","votes":1,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1rfn3:"}}