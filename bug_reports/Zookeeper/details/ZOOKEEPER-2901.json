{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13103695","self":"https://issues.apache.org/jira/rest/api/2/issue/13103695","key":"ZOOKEEPER-2901","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310801","id":"12310801","key":"ZOOKEEPER","name":"ZooKeeper","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310801&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310801&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310801&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310801&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10484","id":"10484","description":"Apache ZooKeeper related","name":"ZooKeeper"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12340141","id":"12340141","description":"Beta release against 3.5 branch","name":"3.5.4","archived":false,"released":true,"releaseDate":"2018-05-17"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12326518","id":"12326518","name":"3.6.0","archived":false,"released":false}],"aggregatetimespent":600,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2017-09-20T19:15:29.648+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Wed May 09 22:38:39 UTC 2018","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_19970318425_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2018-05-09T22:12:54.870+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-2901/watchers","watchCount":8,"isWatching":false},"created":"2017-09-20T18:54:16.492+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/1","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/blocker.svg","name":"Blocker","id":"1"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12335444","id":"12335444","description":"Beta release against 3.5 branch","name":"3.5.3","archived":false,"released":true,"releaseDate":"2017-04-17"}],"issuelinks":[{"id":"12516396","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12516396","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12995259","key":"ZOOKEEPER-2503","self":"https://issues.apache.org/jira/rest/api/2/issue/12995259","fields":{"summary":"Inconsistency between myid documentation and implementation","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}},{"id":"12515355","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12515355","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12820594","key":"ZOOKEEPER-2163","self":"https://issues.apache.org/jira/rest/api/2/issue/12820594","fields":{"summary":"Introduce new ZNode type: container","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/2","id":"2","description":"A new feature of the product, which has yet to be developed.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype","name":"New Feature","subtask":false,"avatarId":21141}}}},{"id":"12515354","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12515354","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12821659","key":"ZOOKEEPER-2169","self":"https://issues.apache.org/jira/rest/api/2/issue/12821659","fields":{"summary":"Enable creation of nodes with TTLs","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/2","id":"2","description":"A new feature of the product, which has yet to be developed.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype","name":"New Feature","subtask":false,"avatarId":21141}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=randgalt","name":"randgalt","key":"randgalt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=randgalt&avatarId=16746","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=randgalt&avatarId=16746","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=randgalt&avatarId=16746","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=randgalt&avatarId=16746"},"displayName":"Jordan Zimmerman","active":true,"timeZone":"America/Panama"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2018-05-09T22:38:39.528+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312382","id":"12312382","name":"server","description":"General issues with the ZooKeeper server."}],"timeoriginalestimate":null,"description":"In the code that determines the EphemeralType it is looking at the owner (which is the client ID or connection ID):\n\nEphemeralType.java:\n\n   public static EphemeralType get(long ephemeralOwner) {\n       if (ephemeralOwner == CONTAINER_EPHEMERAL_OWNER) {\n           return CONTAINER;\n       }\n       if (ephemeralOwner < 0) {\n           return TTL;\n       }\n       return (ephemeralOwner == 0) ? VOID : NORMAL;\n   }\n\nHowever my connection ID is:\n\nheader.getClientId(): -720548323429908480\n\nThis causes the code to think this is a TTL Ephemeral node instead of a\nNORMAL Ephemeral node.\n\nThis also explains why this is random - if my client ID is non-negative\nthen the node gets added correctly.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":0,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Session ID that is negative causes mis-calculation of Ephemeral Type","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mjohnson207","name":"mjohnson207","key":"mjohnson207","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mark Johnson","active":true,"timeZone":"America/Chicago"},"subtasks":[{"id":"13104422","key":"ZOOKEEPER-2903","self":"https://issues.apache.org/jira/rest/api/2/issue/13104422","fields":{"summary":"Port ZOOKEEPER-2901 to 3.5.4","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/1","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/blocker.svg","name":"Blocker","id":"1"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/7","id":"7","description":"The sub-task of the issue","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype","name":"Sub-task","subtask":true,"avatarId":21146}}}],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mjohnson207","name":"mjohnson207","key":"mjohnson207","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mark Johnson","active":true,"timeZone":"America/Chicago"},"customfield_12310290":null,"aggregateprogress":{"progress":600,"total":600,"percent":100},"customfield_12311024":null,"environment":"Running 3.5.3-beta in Docker container","customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16173704","id":"16173704","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=randgalt","name":"randgalt","key":"randgalt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=randgalt&avatarId=16746","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=randgalt&avatarId=16746","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=randgalt&avatarId=16746","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=randgalt&avatarId=16746"},"displayName":"Jordan Zimmerman","active":true,"timeZone":"America/Panama"},"body":"The \"client\" ID is the same as the session ID. The session ID is an incrementing number. However, it appears that the \"High order byte is serverId\". Holy cow! How did this get by? This is major.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=randgalt","name":"randgalt","key":"randgalt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=randgalt&avatarId=16746","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=randgalt&avatarId=16746","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=randgalt&avatarId=16746","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=randgalt&avatarId=16746"},"displayName":"Jordan Zimmerman","active":true,"timeZone":"America/Panama"},"created":"2017-09-20T19:15:29.648+0000","updated":"2017-09-20T19:15:29.648+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16173758","id":"16173758","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=randgalt","name":"randgalt","key":"randgalt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=randgalt&avatarId=16746","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=randgalt&avatarId=16746","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=randgalt&avatarId=16746","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=randgalt&avatarId=16746"},"displayName":"Jordan Zimmerman","active":true,"timeZone":"America/Panama"},"body":"There are a number of possibilities to address this:\n\n* Remove the feature completely\n* Quick fix now, larger fix later\n* Find another way to denote container/TTL\n\nThe problem is that ServerIDs > 63 will now appear to be TTL nodes (server IDs >= 255 will appear to be container nodes). \n\nCommentary:\n\n_Remove the Feature completely_\n\nI don't see how we can do this without breaking existing clients. Even if we remove TTLs, Container nodes have been out there for over a year (or more?). Container nodes has the same problem.\n\n_Quick fix now, larger fix later_\n\nThe quick fix is to mask the 2 high bits of the Server ID when seeding the session ID. This has major implications for how the ServerID is chosen. But, this is beyond my knowledge. The way the Server ID is/was stored prior to TTL/Container nodes implied that the ServerID had to have unique bits across the ensemble. I need other committers to comment on this. To be clear, this is the change:\n\n\n{code:java}\n// in SessionTrackerImpl#initializeNextSession()\n\n    public static long initializeNextSession(long id) {\n        long nextSid;\n        nextSid = (Time.currentElapsedTime() << 24) >>> 8;\n        nextSid =  nextSid | (id <<56);\n        return EphemeralType.maskSessionId(nextSid);\n    }\n\n// in EphemeralType\n    public static final long EPHEMERAL_MASK = 0x3FFFFFFFFFFFFFFFL;\n\n    public static long maskSessionId(long id) {\n        return id & EPHEMERAL_MASK;\n    }\n\n{code}\n\n_Find another way to denote container/TTL_\n\nI need ideas here. Not sure how to handle this in a backward compatible way.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=randgalt","name":"randgalt","key":"randgalt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=randgalt&avatarId=16746","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=randgalt&avatarId=16746","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=randgalt&avatarId=16746","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=randgalt&avatarId=16746"},"displayName":"Jordan Zimmerman","active":true,"timeZone":"America/Panama"},"created":"2017-09-20T20:08:36.436+0000","updated":"2017-09-20T20:11:27.926+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16173780","id":"16173780","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mjohnson207","name":"mjohnson207","key":"mjohnson207","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mark Johnson","active":true,"timeZone":"America/Chicago"},"body":"I'm probably not qualified to comment on this but does the server ID need to be embedded in the session ID?  If so, then how about using only 4 bytes from the timestamp instead of 5?  Then move the server ID over 1 byte.  Maybe:\n\n    public static long initializeNextSession(long id) {\n        long nextSid;\n        nextSid = (Time.currentElapsedTime() << 28) >>> 16;\n        nextSid =  nextSid | (id <<52);\n        return nextSid;\n    }","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mjohnson207","name":"mjohnson207","key":"mjohnson207","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mark Johnson","active":true,"timeZone":"America/Chicago"},"created":"2017-09-20T20:29:20.503+0000","updated":"2017-09-20T20:29:20.503+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16174792","id":"16174792","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=randgalt","name":"randgalt","key":"randgalt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=randgalt&avatarId=16746","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=randgalt&avatarId=16746","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=randgalt&avatarId=16746","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=randgalt&avatarId=16746"},"displayName":"Jordan Zimmerman","active":true,"timeZone":"America/Panama"},"body":"[~mjohnson207] - I think that can work. The hard part is deciding what to do about existing sessions when the new server loads. I think the only choice is to somehow invalidate those sessions. We need to do this because of this code in LeaderSessionTracker.java - which I don't understand TBH\n\n{code}\n        /*\n         * if local session is not enabled or it used to be our local session\n         * throw sessions expires\n         */\n        if (!localSessionsEnabled\n                || (getServerIdFromSessionId(sessionId) == serverId)) {\n            throw new SessionExpiredException();\n        }\n{code}\n\nIt's the only place in the code where the ServerId from the session ID is used.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=randgalt","name":"randgalt","key":"randgalt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=randgalt&avatarId=16746","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=randgalt&avatarId=16746","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=randgalt&avatarId=16746","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=randgalt&avatarId=16746"},"displayName":"Jordan Zimmerman","active":true,"timeZone":"America/Panama"},"created":"2017-09-21T13:57:24.574+0000","updated":"2017-09-21T13:57:51.100+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16175282","id":"16175282","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=randgalt","name":"randgalt","key":"randgalt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=randgalt&avatarId=16746","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=randgalt&avatarId=16746","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=randgalt&avatarId=16746","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=randgalt&avatarId=16746"},"displayName":"Jordan Zimmerman","active":true,"timeZone":"America/Panama"},"body":"Update: I believe I have a mechanism to identify pre 3.5.4 files without changing {{FileTxnLog.VERSION}}. Every file (snapshot and transaction) has a header that maps to {{FileHeader.java}}. The field {{dbId}} isn't really used for anything. For snapshots it's -1 and transactions it's 0. So, we can easily use this. For post 3.5.3 files we can make dbId 1 for snapshots and 2 for transactions (or whatever). When loading older files, we can invalidate any sessions.\n\nQuestion:\n\nWhat is the best way to invalidate sessions when loading transactions and snapshot files?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=randgalt","name":"randgalt","key":"randgalt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=randgalt&avatarId=16746","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=randgalt&avatarId=16746","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=randgalt&avatarId=16746","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=randgalt&avatarId=16746"},"displayName":"Jordan Zimmerman","active":true,"timeZone":"America/Panama"},"created":"2017-09-21T18:55:06.415+0000","updated":"2017-09-21T18:55:32.001+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16175342","id":"16175342","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=randgalt","name":"randgalt","key":"randgalt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=randgalt&avatarId=16746","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=randgalt&avatarId=16746","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=randgalt&avatarId=16746","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=randgalt&avatarId=16746"},"displayName":"Jordan Zimmerman","active":true,"timeZone":"America/Panama"},"body":"Update - after researching this further, the exposure from Container Nodes doesn't exist. Container Nodes are denoted by ephemeralOwner of {{Long.MIN_VALUE}}. There can never be a session ID with this value so we're safe. Thus, the only exposure is for TTL nodes. I'm still researching and will continue to report back here.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=randgalt","name":"randgalt","key":"randgalt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=randgalt&avatarId=16746","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=randgalt&avatarId=16746","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=randgalt&avatarId=16746","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=randgalt&avatarId=16746"},"displayName":"Jordan Zimmerman","active":true,"timeZone":"America/Panama"},"created":"2017-09-21T19:50:09.910+0000","updated":"2017-09-21T19:50:09.910+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16175451","id":"16175451","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=randgalt","name":"randgalt","key":"randgalt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=randgalt&avatarId=16746","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=randgalt&avatarId=16746","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=randgalt&avatarId=16746","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=randgalt&avatarId=16746"},"displayName":"Jordan Zimmerman","active":true,"timeZone":"America/Panama"},"body":"There is another option here. We update the documentation to say that if you're going to use container and TTL nodes then your server ID must <= 127. Thoughts?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=randgalt","name":"randgalt","key":"randgalt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=randgalt&avatarId=16746","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=randgalt&avatarId=16746","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=randgalt&avatarId=16746","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=randgalt&avatarId=16746"},"displayName":"Jordan Zimmerman","active":true,"timeZone":"America/Panama"},"created":"2017-09-21T20:53:04.873+0000","updated":"2017-09-21T20:53:04.873+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16177260","id":"16177260","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"GitHub user Randgalt opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/377\n\n    [ZOOKEEPER-2901] TTL Nodes don't work with Server IDs > 127\n\n    There was a major oversight when TTL nodes were implemented. The session ID generator for each server is seeded with the configured Server ID in the high byte. TTL Nodes were using the highest bit to denote a TTL node when used in the ephemeral owner. This meant that Server IDs > 127 that created ephemeral nodes would have those nodes always considered TTL nodes (with the TTL being essentially a random number).\n    \n    This PR fixes the issue by disabling TTL Nodes by default. They must now be enabled in zoo.cfg. When TTL Nodes are enabled, the max Server ID changes from 255 to 254. This allows the high byte of a session ID stored in the ephemeral owner to use 0xFF to denote a TTL node.\n    \n    About this change:\n    \n    - The doc has been updated to note that TTL nodes are disabled by default and must be enabled via config. Also, the docs explains that when TTL nodes are enabled the max Server ID becomes 254\n    - The TTL implementation has been updated to use 0xFF in the high byte of the ephemeralOwner to denote a TTL node. This decreases the max TTL by an insignificant amount\n    - PrepRequestProcessor now throws `KeeperException.UnimplementedException` when an attempt to create a TTL node is made but the server has not been configured to enable TTL Nodes.\n    - QuorumPeer throws a `RuntimeException` if TTL Nodes are enabled but the Server ID > 254\n    - Tests have been added to validate all of this\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/Randgalt/zookeeper ZOOKEEPER-2901\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/377.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #377\n    \n----\ncommit 21fa7716133e903c8d43c1003012837f980cb044\nAuthor: randgalt <jordan@jordanzimmerman.com>\nDate:   2017-09-22T22:10:30Z\n\n    There was a major oversight when TTL nodes were implemented. The session ID generator for each server is seeded with the configured\n    Server ID in the high byte. TTL Nodes were using the highest bit to denote a TTL node when used in the ephemeral owner. This meant\n    that Server IDs > 127 that created ephemeral nodes would have those nodes always considered TTL nodes (with the TTL being essentially\n    a random number).\n    \n    This PR fixes the issue by disabling TTL Nodes by default. They must now be enabled in zoo.cfg. When TTL Nodes are enabled, the max\n    Server ID changes from 255 to 254. This allows the high byte of a session ID stored in the ephemeral owner to use 0xFF to denote\n    a TTL node.\n\n----\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-09-22T22:20:27.219+0000","updated":"2017-09-22T22:20:27.219+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16177277","id":"16177277","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 6 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1034//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1034//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1034//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2017-09-22T22:36:04.552+0000","updated":"2017-09-22T22:36:04.552+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16177292","id":"16177292","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/377\n  \n    The zoo_sample.cfg file should also be updated as part of this patch. It should include the option, and IMO it should have ttl turned on by default (similar warning wrt id as comment in the file?)\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-09-22T22:51:57.272+0000","updated":"2017-09-22T22:51:57.272+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16177298","id":"16177298","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=phunt","name":"phunt","key":"phunt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Patrick Hunt","active":true,"timeZone":"America/Los_Angeles"},"body":"It's very unfortunate that we have to turn ttl off by default. I'm wondering if we should relax the b/w compat requirement in this case - esp given it's a config option and one that we could highlight in the release notes and in the LOG message if the server were \"misconfigured\". What do folks think?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=phunt","name":"phunt","key":"phunt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Patrick Hunt","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-09-22T22:58:34.541+0000","updated":"2017-09-22T22:58:34.541+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16177575","id":"16177575","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=randgalt","name":"randgalt","key":"randgalt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=randgalt&avatarId=16746","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=randgalt&avatarId=16746","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=randgalt&avatarId=16746","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=randgalt&avatarId=16746"},"displayName":"Jordan Zimmerman","active":true,"timeZone":"America/Panama"},"body":"I'm happy to switch the default to true. I was being cautious. Can we get to consensus?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=randgalt","name":"randgalt","key":"randgalt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=randgalt&avatarId=16746","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=randgalt&avatarId=16746","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=randgalt&avatarId=16746","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=randgalt&avatarId=16746"},"displayName":"Jordan Zimmerman","active":true,"timeZone":"America/Panama"},"created":"2017-09-23T05:21:57.501+0000","updated":"2017-09-23T05:21:57.501+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16177825","id":"16177825","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 6 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1035//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1035//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1035//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2017-09-23T14:46:49.113+0000","updated":"2017-09-23T14:46:49.113+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16177829","id":"16177829","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user Randgalt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/377\n  \n    There are 4 tests with this line of code and it's failing because the logger is not there (NullPointerException). Any ideas?\n    \n    ```\n            Layout layout =\n                    Logger.getRootLogger().getAppender(\"CONSOLE\").getLayout();\n    ```\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-09-23T14:57:30.717+0000","updated":"2017-09-23T14:57:30.717+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16177853","id":"16177853","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user Randgalt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/377\n  \n    FYI - I did some local ad-hoc testing with server IDs 254/255 and the config value true/false in zoo.cfg and everything works as expected.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-09-23T15:40:37.642+0000","updated":"2017-09-23T15:40:37.642+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16181681","id":"16181681","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r141200124\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/SessionTrackerImpl.java ---\n    @@ -84,6 +84,9 @@ public static long initializeNextSession(long id) {\n             long nextSid;\n             nextSid = (Time.currentElapsedTime() << 24) >>> 8;\n             nextSid =  nextSid | (id <<56);\n    +        if (nextSid == EphemeralType.CONTAINER_EPHEMERAL_OWNER) {\n    +            ++nextSid;  // this is an unlikely edge case, but check it just in case\n    --- End diff --\n    \n    This makes me nervous but I can't think of a reason why it wont work. It may be worth changing the comment on this method because it is no longer strictly true. \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-09-26T22:24:42.146+0000","updated":"2017-09-26T22:24:42.146+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16181682","id":"16181682","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r141200554\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java ---\n    @@ -125,6 +125,8 @@\n         private final ZooKeeperServerListener listener;\n         private ZooKeeperServerShutdownHandler zkShutdownHandler;\n     \n    +    private volatile boolean defaultTtlNodesEnabled = true;\n    --- End diff --\n    \n    for the sake of clarity, why can't this be false?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-09-26T22:24:42.630+0000","updated":"2017-09-26T22:24:42.630+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16183631","id":"16183631","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user Randgalt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r141521002\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/SessionTrackerImpl.java ---\n    @@ -84,6 +84,9 @@ public static long initializeNextSession(long id) {\n             long nextSid;\n             nextSid = (Time.currentElapsedTime() << 24) >>> 8;\n             nextSid =  nextSid | (id <<56);\n    +        if (nextSid == EphemeralType.CONTAINER_EPHEMERAL_OWNER) {\n    +            ++nextSid;  // this is an unlikely edge case, but check it just in case\n    --- End diff --\n    \n    \"no longer strictly true\" - actually it still is true. If `Time.currentElapsedTime()` returns 0 and server Id is 0x80, this will happen. That's why nextSid has to be incremented in that case.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-09-28T03:47:04.199+0000","updated":"2017-09-28T03:47:04.199+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16183632","id":"16183632","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user Randgalt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r141521029\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java ---\n    @@ -125,6 +125,8 @@\n         private final ZooKeeperServerListener listener;\n         private ZooKeeperServerShutdownHandler zkShutdownHandler;\n     \n    +    private volatile boolean defaultTtlNodesEnabled = true;\n    --- End diff --\n    \n    If it's false, then TTL nodes won't be available in Standalone mode.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-09-28T03:47:23.098+0000","updated":"2017-09-28T03:47:23.098+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16184138","id":"16184138","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 10 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1054//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1054//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1054//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2017-09-28T13:14:26.732+0000","updated":"2017-09-28T13:14:26.732+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16184143","id":"16184143","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user Randgalt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/377\n  \n    The integration above doesn't seem to update, but the build passes now.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-09-28T13:17:16.408+0000","updated":"2017-09-28T13:17:16.408+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16184381","id":"16184381","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 7 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1062//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1062//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1062//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2017-09-28T16:10:48.193+0000","updated":"2017-09-28T16:10:48.193+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16184384","id":"16184384","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 7 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1061//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1061//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1061//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2017-09-28T16:13:33.188+0000","updated":"2017-09-28T16:13:33.188+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16189231","id":"16189231","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 6 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1077//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1077//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1077//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2017-10-03T03:53:49.578+0000","updated":"2017-10-03T03:53:49.578+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16189238","id":"16189238","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user Randgalt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/377\n  \n    This feature is ready to merge (along with #378)\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-10-03T03:57:20.007+0000","updated":"2017-10-03T03:57:20.007+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16189851","id":"16189851","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mjohnson207","name":"mjohnson207","key":"mjohnson207","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mark Johnson","active":true,"timeZone":"America/Chicago"},"body":"With this fix, is there anything to ensure that the session ID is constrained to a valid range?  0-254 or whatever it needs to be to work correctly with the rest of the code?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mjohnson207","name":"mjohnson207","key":"mjohnson207","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mark Johnson","active":true,"timeZone":"America/Chicago"},"created":"2017-10-03T15:26:03.855+0000","updated":"2017-10-03T15:26:03.855+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16189858","id":"16189858","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=randgalt","name":"randgalt","key":"randgalt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=randgalt&avatarId=16746","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=randgalt&avatarId=16746","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=randgalt&avatarId=16746","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=randgalt&avatarId=16746"},"displayName":"Jordan Zimmerman","active":true,"timeZone":"America/Panama"},"body":"[~mjohnson207] - no. It wasn't checked before and there's already an issue for this: https://issues.apache.org/jira/browse/ZOOKEEPER-2503","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=randgalt","name":"randgalt","key":"randgalt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=randgalt&avatarId=16746","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=randgalt&avatarId=16746","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=randgalt&avatarId=16746","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=randgalt&avatarId=16746"},"displayName":"Jordan Zimmerman","active":true,"timeZone":"America/Panama"},"created":"2017-10-03T15:30:11.237+0000","updated":"2017-10-03T15:30:11.237+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16196888","id":"16196888","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user Randgalt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/377\n  \n    @phunt Can we get this merged please?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-10-09T12:30:07.689+0000","updated":"2017-10-09T12:30:07.689+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16200374","id":"16200374","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/377\n  \n    @Randgalt I've been trying to focus on getting the branches, jenkins, etc... back in shape so that I can cut some releases. Any chance your original collaborators can help? I'm kinda swamped and just getting up to speed on these will take time...\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-10-11T14:33:42.105+0000","updated":"2017-10-11T14:33:42.105+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16201729","id":"16201729","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user Randgalt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/377\n  \n    @phunt you reviewed this PR originally so I was hoping you'd merge. @rgs1 can you merge if Pat can't?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-10-12T09:59:46.846+0000","updated":"2017-10-12T09:59:46.846+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16204349","id":"16204349","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/377\n  \n    My \"review\" was a question. :-) Honestly I'm not sure what is the right thing to do here. Afraid it's painted itself into a bit of corner.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-10-13T23:31:36.228+0000","updated":"2017-10-13T23:31:36.228+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16204369","id":"16204369","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=phunt","name":"phunt","key":"phunt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Patrick Hunt","active":true,"timeZone":"America/Los_Angeles"},"body":"Jordan, given the lack of feedback on my earlier question/suggestion it seems like the prudent thing to do would be to go ahead with your original proposal - turn if off by default. (please resubmit that PR) I think we could have a separate jira to \"deprecate\" the use of the high order server id (please enter a jira for this if you agree), and then in a future version of ZK turn this feature on by default. The \"deprecation\" would allow folks time to address.\r\n\r\nI basically have zero time to look at this, but given the lack of anyone else having time to look at this I will try to make some time next week. Thanks for hanging in there.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=phunt","name":"phunt","key":"phunt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Patrick Hunt","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-10-13T23:55:27.641+0000","updated":"2017-10-13T23:58:00.631+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16207544","id":"16207544","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 6 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1107//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1107//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1107//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2017-10-17T12:05:30.721+0000","updated":"2017-10-17T12:05:30.721+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16207564","id":"16207564","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user Randgalt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/377\n  \n    @phunt it's back to default false now. So, I hope this can be merged.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-10-17T12:26:26.963+0000","updated":"2017-10-17T12:26:26.963+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16207580","id":"16207580","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=randgalt","name":"randgalt","key":"randgalt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=randgalt&avatarId=16746","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=randgalt&avatarId=16746","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=randgalt&avatarId=16746","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=randgalt&avatarId=16746"},"displayName":"Jordan Zimmerman","active":true,"timeZone":"America/Panama"},"body":"Default is set back to false. I really don't think we need to deprecate the high bit as it's now documented and you have to opt in to it. So, keep using Server IDs up to 255 unless you want TTLS then it's 254.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=randgalt","name":"randgalt","key":"randgalt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=randgalt&avatarId=16746","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=randgalt&avatarId=16746","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=randgalt&avatarId=16746","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=randgalt&avatarId=16746"},"displayName":"Jordan Zimmerman","active":true,"timeZone":"America/Panama"},"created":"2017-10-17T12:36:52.830+0000","updated":"2017-10-17T16:34:50.263+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16207878","id":"16207878","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dbenediktson","name":"dbenediktson","key":"dbenediktson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dan Benediktson","active":true,"timeZone":"America/Los_Angeles"},"body":"[~randgalt] You mean Server IDs, not Session IDs, and up to 127, correct?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dbenediktson","name":"dbenediktson","key":"dbenediktson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dan Benediktson","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-10-17T16:33:32.765+0000","updated":"2017-10-17T16:33:32.765+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16207880","id":"16207880","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=randgalt","name":"randgalt","key":"randgalt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=randgalt&avatarId=16746","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=randgalt&avatarId=16746","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=randgalt&avatarId=16746","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=randgalt&avatarId=16746"},"displayName":"Jordan Zimmerman","active":true,"timeZone":"America/Panama"},"body":"derp - fixed","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=randgalt","name":"randgalt","key":"randgalt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=randgalt&avatarId=16746","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=randgalt&avatarId=16746","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=randgalt&avatarId=16746","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=randgalt&avatarId=16746"},"displayName":"Jordan Zimmerman","active":true,"timeZone":"America/Panama"},"created":"2017-10-17T16:34:33.038+0000","updated":"2017-10-17T16:34:33.038+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16213495","id":"16213495","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/377\n  \n    Hi @Randgalt - this looks like a reasonable change to me however it's not working. I used the sample zoo.cfg file as my config and started via bin/zkServer.sh - however I can still create a ttl based node even though \"ttlNodesEnabled=false\" in the zoo.cfg. I recommend you add a test for this.\r\n    \r\n    Can you take a look?\r\n    \r\n    Also I'd appreciate if you could rebase against current apache master. I did this locally manually, however I'm not sure how the submission script is going to manage it (there were conflicts because you had merged multiple times, including from third party repos (abe)). I can probably figure it out, but if you're working to address this issue perhaps you can fix this too. thx.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-10-20T23:38:27.315+0000","updated":"2017-10-20T23:38:27.315+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16213497","id":"16213497","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r146086967\n  \n    --- Diff: conf/zoo_sample.cfg ---\n    @@ -6,6 +6,10 @@ initLimit=10\n     # The number of ticks that can pass between \n     # sending a request and getting an acknowledgement\n     syncLimit=5\n    +# enable TTL Nodes\n    +# IMPORTANT: when enabled, your server ID cannot be greater than 254\n    +# See https://zookeeper.apache.org/doc/r3.5.3-beta/zookeeperAdmin.html#sc_configuration for details\n    --- End diff --\n    \n    Perhaps note the document and section, rather than the link? It's going to get out of date quickly.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-10-20T23:40:27.143+0000","updated":"2017-10-20T23:40:27.143+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16213499","id":"16213499","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r146087059\n  \n    --- Diff: conf/zoo_sample.cfg ---\n    @@ -6,6 +6,10 @@ initLimit=10\n     # The number of ticks that can pass between \n     # sending a request and getting an acknowledgement\n     syncLimit=5\n    +# enable TTL Nodes\n    +# IMPORTANT: when enabled, your server ID cannot be greater than 254\n    +# See https://zookeeper.apache.org/doc/r3.5.3-beta/zookeeperAdmin.html#sc_configuration for details\n    +ttlNodesEnabled=false\n    --- End diff --\n    \n    I was actually thinking that this specific line (not in general) should be true by default. That way anyone starting out would get the feature enabled by default - and they wouldn't have any legacy serverids specified. What do you think?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-10-20T23:41:24.511+0000","updated":"2017-10-20T23:41:24.511+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16213566","id":"16213566","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user DanBenediktson commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r146089767\n  \n    --- Diff: conf/zoo_sample.cfg ---\n    @@ -6,6 +6,10 @@ initLimit=10\n     # The number of ticks that can pass between \n     # sending a request and getting an acknowledgement\n     syncLimit=5\n    +# enable TTL Nodes\n    +# IMPORTANT: when enabled, your server ID cannot be greater than 254\n    --- End diff --\n    \n    Same comment I left on the JIRA ticket: shouldn't it be 127, not 254? My understanding of the problem was that the whole high bit was being used, not the whole byte sequence of 255.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-10-21T00:19:32.934+0000","updated":"2017-10-21T00:19:32.934+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16234610","id":"16234610","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=phunt","name":"phunt","key":"phunt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Patrick Hunt","active":true,"timeZone":"America/Los_Angeles"},"body":"[~randgalt] any updates on this one? Some comments from me/Dan to address.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=phunt","name":"phunt","key":"phunt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Patrick Hunt","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-11-01T19:24:06.714+0000","updated":"2017-11-01T19:24:06.714+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16237640","id":"16237640","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user Randgalt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r148792118\n  \n    --- Diff: conf/zoo_sample.cfg ---\n    @@ -6,6 +6,10 @@ initLimit=10\n     # The number of ticks that can pass between \n     # sending a request and getting an acknowledgement\n     syncLimit=5\n    +# enable TTL Nodes\n    +# IMPORTANT: when enabled, your server ID cannot be greater than 254\n    --- End diff --\n    \n    @DanBenediktson 127 is the case with the existing bug. I re-wrote how this is handled so that now it's 255. The high bit is now used to signal that the ephemeralOwner is special. \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-03T14:12:49.244+0000","updated":"2017-11-03T14:12:49.244+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16237656","id":"16237656","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user Randgalt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/377\n  \n    > I used the sample zoo.cfg file as my config and started via bin/zkServer.sh - however I can still create a ttl based node even though \"ttlNodesEnabled=false\" in the zoo.cfg. I recommend you add a test for this.\r\n    \r\n    @phunt I imagine the server started in Standalone mode. Please verify. When the server starts in Standalone mode it ignores most of zoo.cfg. Also in Standalone mode there is no Server ID so it's a non issue. If you add `server.X` and `standaloneEnabled=false` to zoo.cfg then the ttlNodesEnabled has effect. Make sense? Does this need to be documented?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-03T14:27:30.675+0000","updated":"2017-11-03T14:27:30.675+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16242349","id":"16242349","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=randgalt","name":"randgalt","key":"randgalt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=randgalt&avatarId=16746","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=randgalt&avatarId=16746","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=randgalt&avatarId=16746","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=randgalt&avatarId=16746"},"displayName":"Jordan Zimmerman","active":true,"timeZone":"America/Panama"},"body":"[~phunt] Anything else needed before this can be merged along with ZOOKEEPER-2903?\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=randgalt","name":"randgalt","key":"randgalt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=randgalt&avatarId=16746","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=randgalt&avatarId=16746","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=randgalt&avatarId=16746","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=randgalt&avatarId=16746"},"displayName":"Jordan Zimmerman","active":true,"timeZone":"America/Panama"},"created":"2017-11-07T16:45:33.059+0000","updated":"2017-11-07T16:45:33.059+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16254140","id":"16254140","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/377\n  \n    I think it needs to do the same thing whether it's in standalone mode or not. Least surprise. Also folks might want to test in standalone mode with the same basic configuration that they use with an ensemble size > 1. They'd want the same behavior. I'd say it should work the same regardless whether it's standalone or not.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-15T20:39:53.578+0000","updated":"2017-11-15T20:39:53.578+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16267445","id":"16267445","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=randgalt","name":"randgalt","key":"randgalt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=randgalt&avatarId=16746","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=randgalt&avatarId=16746","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=randgalt&avatarId=16746","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=randgalt&avatarId=16746"},"displayName":"Jordan Zimmerman","active":true,"timeZone":"America/Panama"},"body":"[~phunt] - the ttlNodesEnabled now applies to stand alone mode too. I ported this to ZOOKEEPER-2903 as well.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=randgalt","name":"randgalt","key":"randgalt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=randgalt&avatarId=16746","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=randgalt&avatarId=16746","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=randgalt&avatarId=16746","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=randgalt&avatarId=16746"},"displayName":"Jordan Zimmerman","active":true,"timeZone":"America/Panama"},"created":"2017-11-27T20:32:59.768+0000","updated":"2017-11-27T20:32:59.768+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16267512","id":"16267512","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 6 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1310//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1310//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1310//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-27T20:51:40.539+0000","updated":"2017-11-27T20:51:40.539+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16269363","id":"16269363","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/377\n  \n    @Randgalt I had to resolve some conflicts in order to compare this to current master. Posted the updated branch here: https://github.com/phunt/zookeeper/commits/ZOOKEEPER-2901 Can you review this and update this patch when you have a chance (I'm still reviewing/testing the updates at that link)\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-28T19:55:16.952+0000","updated":"2017-11-28T19:55:16.952+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16269839","id":"16269839","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r153668593\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/EphemeralType.java ---\n    @@ -40,19 +39,21 @@\n         TTL;\n     \n         public static final long CONTAINER_EPHEMERAL_OWNER = Long.MIN_VALUE;\n    -    public static final long MAX_TTL = 0x0fffffffffffffffL;\n    -    public static final long TTL_MASK = 0x8000000000000000L;\n    +    public static final long MAX_TTL = 0x00ffffffffffffffL;\n    +    public static final long TTL_MASK = 0xff00000000000000L;\n    +    public static final long MAX_TTL_SERVER_ID = 0xfe;  // 254\n     \n         public static EphemeralType get(long ephemeralOwner) {\n             if (ephemeralOwner == CONTAINER_EPHEMERAL_OWNER) {\n                 return CONTAINER;\n             }\n    -        if (ephemeralOwner < 0) {\n    +        if ((ephemeralOwner & TTL_MASK) == TTL_MASK) {\n    --- End diff --\n    \n    I think this is broken. If, for example, org.apache.zookeeper.server.DataTree#deleteNode calls this method with TTL turned off, but using a server id of 255 it will end up calling this code\r\n    \r\n                } else if (ephemeralType == EphemeralType.TTL) {\r\n                    ttls.remove(path);\r\n    \r\n    and the node will not be removed properly in deleteNode.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-29T00:57:09.365+0000","updated":"2017-11-29T00:57:09.365+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16269842","id":"16269842","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r153668817\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/EphemeralType.java ---\n    @@ -40,19 +39,21 @@\n         TTL;\n     \n         public static final long CONTAINER_EPHEMERAL_OWNER = Long.MIN_VALUE;\n    -    public static final long MAX_TTL = 0x0fffffffffffffffL;\n    -    public static final long TTL_MASK = 0x8000000000000000L;\n    +    public static final long MAX_TTL = 0x00ffffffffffffffL;\n    +    public static final long TTL_MASK = 0xff00000000000000L;\n    +    public static final long MAX_TTL_SERVER_ID = 0xfe;  // 254\n     \n         public static EphemeralType get(long ephemeralOwner) {\n             if (ephemeralOwner == CONTAINER_EPHEMERAL_OWNER) {\n                 return CONTAINER;\n             }\n    -        if (ephemeralOwner < 0) {\n    +        if ((ephemeralOwner & TTL_MASK) == TTL_MASK) {\n    --- End diff --\n    \n    In particular you need to add a bunch more testing to ensure this case is working properly.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-29T00:58:33.530+0000","updated":"2017-11-29T00:58:33.530+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16276080","id":"16276080","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 8 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    -1 release audit.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1327//testReport/\nRelease audit warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1327//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1327//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1327//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2017-12-03T20:45:59.691+0000","updated":"2017-12-03T20:45:59.691+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16276082","id":"16276082","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user Randgalt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/377\n  \n    Controlling TTL Nodes via zoo.cfg turned out to be untennable. There are too many parts of the code that need to know about TTLs being enabled or not. The previous PR had several holes relating to this. This new commit changes the enabled/disabled mechanism to be a System property so that it can be accessed anywhere in the code. It's also been renamed something more general so that it can be applied to future features and not just TTLs.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-12-03T20:49:36.257+0000","updated":"2017-12-03T20:49:36.257+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16276094","id":"16276094","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 8 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1330//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1330//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1330//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2017-12-03T21:12:17.462+0000","updated":"2017-12-03T21:12:17.462+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16290053","id":"16290053","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r156808074\n  \n    --- Diff: src/docs/src/documentation/content/xdocs/zookeeperAdmin.xml ---\n    @@ -949,14 +949,15 @@ server.3=zoo3:2888:3888</programlisting>\n               </varlistentry>\n     \n               <varlistentry>\n    -            <term>ttlNodesEnabled</term>\n    +            <term>zookeeper.extendedTypesEnabled</term>\n    --- End diff --\n    \n    Do we are have any room left for this? iiuc ttls are the last.\r\n    \r\n    My concern here - won't people be confused by this, e.g. \"are containers extended types\"?\r\n    \r\n    What do you think @Randgalt ?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-12-13T22:45:21.094+0000","updated":"2017-12-13T22:45:21.094+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16290061","id":"16290061","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r156809696\n  \n    --- Diff: src/docs/src/documentation/content/xdocs/zookeeperAdmin.xml ---\n    @@ -949,14 +949,15 @@ server.3=zoo3:2888:3888</programlisting>\n               </varlistentry>\n     \n               <varlistentry>\n    -            <term>ttlNodesEnabled</term>\n    +            <term>zookeeper.extendedTypesEnabled</term>\n     \n                 <listitem>\n    -              <para>(No Java system property)</para>\n    +                <para>(Java system property only: <emphasis\n    --- End diff --\n    \n    This is a bit confusing given QuorumPeerConfig line 326\r\n    \r\n                    System.setProperty(\"zookeeper.\" + key, value);\r\n    \r\n    See the doc for forceSync for an example of a better way to set this up. (forceSync works this same way)\r\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-12-13T22:53:21.276+0000","updated":"2017-12-13T22:53:21.276+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16290114","id":"16290114","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r156821102\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java ---\n    @@ -476,9 +474,12 @@ public ZooKeeperServerListener getZooKeeperServerListener() {\n             return listener;\n         }\n     \n    +    // Visible for testing\n    +    static volatile int serverId = 1;\n    --- End diff --\n    \n    This is really ugly. Why not using a quorum peer instead? Given you want to control the serverid.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-12-13T23:59:39.246+0000","updated":"2017-12-13T23:59:39.246+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16290117","id":"16290117","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r156821178\n  \n    --- Diff: src/docs/src/documentation/content/xdocs/zookeeperAdmin.xml ---\n    @@ -949,14 +949,15 @@ server.3=zoo3:2888:3888</programlisting>\n               </varlistentry>\n     \n               <varlistentry>\n    -            <term>ttlNodesEnabled</term>\n    +            <term>zookeeper.extendedTypesEnabled</term>\n     \n                 <listitem>\n    -              <para>(No Java system property)</para>\n    +                <para>(Java system property only: <emphasis\n    +                    role=\"bold\">zookeeper.extendedTypesEnabled</emphasis>)</para>\n     \n    -              <para><emphasis role=\"bold\">New in 3.5.4, 3.6.0:</emphasis> Set to \"true\" to enable\n    -              the creation of <ulink url=\"zookeeperProgrammers.html#TTL+Nodes\">TTL Nodes</ulink>.\n    -              They are disabled by default. IMPORTANT: when TTL Nodes are enabled server IDs must\n    +              <para><emphasis role=\"bold\">New in 3.5.4, 3.6.0:</emphasis> Define to \"true\" to enable\n    +              extended features such as the creation of <ulink url=\"zookeeperProgrammers.html#TTL+Nodes\">TTL Nodes</ulink>.\n    --- End diff --\n    \n    obv update this to reflect.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-12-14T00:00:12.580+0000","updated":"2017-12-14T00:00:12.580+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16290118","id":"16290118","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r156821209\n  \n    --- Diff: src/docs/src/documentation/content/xdocs/zookeeperProgrammers.xml ---\n    @@ -271,9 +271,9 @@\n               is not modified within the TTL and has no children it will become a candidate\n               to be deleted by the server at some point in the future.</para>\n     \n    -        <para>Note: TTL Nodes must be enabled in your ZooKeeper configuration file as\n    +        <para>Note: TTL Nodes must be enabled via System property as\n    --- End diff --\n    \n    and this.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-12-14T00:00:22.146+0000","updated":"2017-12-14T00:00:22.146+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16306450","id":"16306450","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user Randgalt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r159091284\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java ---\n    @@ -476,9 +474,12 @@ public ZooKeeperServerListener getZooKeeperServerListener() {\n             return listener;\n         }\n     \n    +    // Visible for testing\n    +    static volatile int serverId = 1;\n    --- End diff --\n    \n    @phunt I'm not sure what you mean about quorum peer. I could find another way to set this value. Also, it's only for testing and clearly marked. What do you suggest?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-12-29T18:38:36.241+0000","updated":"2017-12-29T18:38:36.241+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16306451","id":"16306451","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user Randgalt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r159091495\n  \n    --- Diff: src/docs/src/documentation/content/xdocs/zookeeperAdmin.xml ---\n    @@ -949,14 +949,15 @@ server.3=zoo3:2888:3888</programlisting>\n               </varlistentry>\n     \n               <varlistentry>\n    -            <term>ttlNodesEnabled</term>\n    +            <term>zookeeper.extendedTypesEnabled</term>\n    --- End diff --\n    \n    I only thought that we might be able to use the setting for other things in the future. But, I'm OK either way. Let me know.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-12-29T18:40:57.200+0000","updated":"2017-12-29T18:40:57.200+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16323604","id":"16323604","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user lvfangmin commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r161147063\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/EphemeralType.java ---\n    @@ -40,19 +39,40 @@\n         TTL;\n     \n         public static final long CONTAINER_EPHEMERAL_OWNER = Long.MIN_VALUE;\n    -    public static final long MAX_TTL = 0x0fffffffffffffffL;\n    -    public static final long TTL_MASK = 0x8000000000000000L;\n    +    public static final long MAX_TTL = 0x00ffffffffffffffL;\n    +    public static final long TTL_MASK = 0xff00000000000000L;\n    +    public static final long MAX_TTL_SERVER_ID = 0xfe;  // 254\n    +\n    +    public static final String EXTENDED_TYPES_ENABLED_PROPERTY = \"zookeeper.extendedTypesEnabled\";\n    +\n    +    public static boolean extendedEphemeralTypesEnabled() {\n    +        return Boolean.getBoolean(EXTENDED_TYPES_ENABLED_PROPERTY);\n    +    }\n     \n         public static EphemeralType get(long ephemeralOwner) {\n    +        if ( extendedEphemeralTypesEnabled() ) {\n    +            if ((ephemeralOwner & TTL_MASK) == TTL_MASK) {\n    +                return TTL;\n    +            }\n    +        }\n             if (ephemeralOwner == CONTAINER_EPHEMERAL_OWNER) {\n                 return CONTAINER;\n             }\n    -        if (ephemeralOwner < 0) {\n    -            return TTL;\n    -        }\n             return (ephemeralOwner == 0) ? VOID : NORMAL;\n         }\n     \n    +    public static void validateServerId(long serverId) {\n    --- End diff --\n    \n    Maybe we should not start the server if the server id is conflict with TTL feature, we can do this in QuorumPeerConfig.checkValidity.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-01-12T06:14:00.358+0000","updated":"2018-01-12T06:14:00.358+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16323605","id":"16323605","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user lvfangmin commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r161146799\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/EphemeralType.java ---\n    @@ -40,19 +39,40 @@\n         TTL;\n     \n         public static final long CONTAINER_EPHEMERAL_OWNER = Long.MIN_VALUE;\n    -    public static final long MAX_TTL = 0x0fffffffffffffffL;\n    -    public static final long TTL_MASK = 0x8000000000000000L;\n    +    public static final long MAX_TTL = 0x00ffffffffffffffL;\n    +    public static final long TTL_MASK = 0xff00000000000000L;\n    +    public static final long MAX_TTL_SERVER_ID = 0xfe;  // 254\n    +\n    +    public static final String EXTENDED_TYPES_ENABLED_PROPERTY = \"zookeeper.extendedTypesEnabled\";\n    +\n    +    public static boolean extendedEphemeralTypesEnabled() {\n    +        return Boolean.getBoolean(EXTENDED_TYPES_ENABLED_PROPERTY);\n    +    }\n     \n         public static EphemeralType get(long ephemeralOwner) {\n    +        if ( extendedEphemeralTypesEnabled() ) {\n    +            if ((ephemeralOwner & TTL_MASK) == TTL_MASK) {\n    --- End diff --\n    \n    To keep backward compatible, shouldn't we keep use 0x80 as the TTL byte? \r\n    \r\n    People may not use sid larger than 127, it's more likely they will use the TTL with 0x80 highest byte. With this change, those nodes won't be expired anymore.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-01-12T06:14:00.365+0000","updated":"2018-01-12T06:14:00.365+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16336601","id":"16336601","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r163419925\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/EphemeralType.java ---\n    @@ -40,19 +39,40 @@\n         TTL;\n     \n         public static final long CONTAINER_EPHEMERAL_OWNER = Long.MIN_VALUE;\n    -    public static final long MAX_TTL = 0x0fffffffffffffffL;\n    -    public static final long TTL_MASK = 0x8000000000000000L;\n    +    public static final long MAX_TTL = 0x00ffffffffffffffL;\n    +    public static final long TTL_MASK = 0xff00000000000000L;\n    +    public static final long MAX_TTL_SERVER_ID = 0xfe;  // 254\n    +\n    +    public static final String EXTENDED_TYPES_ENABLED_PROPERTY = \"zookeeper.extendedTypesEnabled\";\n    +\n    +    public static boolean extendedEphemeralTypesEnabled() {\n    +        return Boolean.getBoolean(EXTENDED_TYPES_ENABLED_PROPERTY);\n    +    }\n     \n         public static EphemeralType get(long ephemeralOwner) {\n    +        if ( extendedEphemeralTypesEnabled() ) {\n    +            if ((ephemeralOwner & TTL_MASK) == TTL_MASK) {\n    --- End diff --\n    \n    We discussed this earlier in the PR. Problem is it's b/w incompat one way or the other. Given serverid has been around forever, and TTL only added in 3.5.3 (a beta) we went forward with this approach.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-01-24T00:06:29.533+0000","updated":"2018-01-24T00:06:29.533+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16336603","id":"16336603","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r163420180\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java ---\n    @@ -476,9 +474,12 @@ public ZooKeeperServerListener getZooKeeperServerListener() {\n             return listener;\n         }\n     \n    +    // Visible for testing\n    +    static volatile int serverId = 1;\n    --- End diff --\n    \n    I looked at it a bit originally, iirc I figured that you'd pass it through in some way (during instance creation) rather than making it a global.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-01-24T00:08:09.137+0000","updated":"2018-01-24T00:08:09.137+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16336606","id":"16336606","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/377\n  \n    @Randgalt i'd really like to push out a 3.5.4 - do you think it would make sense to release note this in 3.5.4 and address for 3.5.5? If you think we can finalize this PR soon I'm still open to that.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-01-24T00:10:22.883+0000","updated":"2018-01-24T00:10:22.883+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16338182","id":"16338182","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user Randgalt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r163671234\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java ---\n    @@ -476,9 +474,12 @@ public ZooKeeperServerListener getZooKeeperServerListener() {\n             return listener;\n         }\n     \n    +    // Visible for testing\n    +    static volatile int serverId = 1;\n    --- End diff --\n    \n    As I recall that was extremely difficult. Config is not shared between different parts of the code. The only way to do that type of thing is via System defines. That's why I did this.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-01-24T20:38:32.497+0000","updated":"2018-01-24T20:38:32.497+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16338436","id":"16338436","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r163712641\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java ---\n    @@ -476,9 +474,12 @@ public ZooKeeperServerListener getZooKeeperServerListener() {\n             return listener;\n         }\n     \n    +    // Visible for testing\n    +    static volatile int serverId = 1;\n    --- End diff --\n    \n    It being a global seems to kick the problem down the road to the next person. I'm worried that setting this jvm wide could have an impact when developing tests in the future. That's why it caught my eye.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-01-24T23:38:01.019+0000","updated":"2018-01-24T23:38:01.019+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16338707","id":"16338707","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user Randgalt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r163746348\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java ---\n    @@ -476,9 +474,12 @@ public ZooKeeperServerListener getZooKeeperServerListener() {\n             return listener;\n         }\n     \n    +    // Visible for testing\n    +    static volatile int serverId = 1;\n    --- End diff --\n    \n    Here's the issue @phunt - `serverId` is consumed by `ZooKeeperServer.createSessionTracker()`. For tests, the ZooKeeperServer is created by the **static** method `ClientBase.startServerInstance()`. So, _I'm_ the person down the road that has to deal with the static method created long ago. It would take significant re-write for `ClientBase.startServerInstance()` to be non-static and parameterized.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-01-25T04:11:07.949+0000","updated":"2018-01-25T04:11:07.949+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16338710","id":"16338710","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user Randgalt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r163747537\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java ---\n    @@ -476,9 +474,12 @@ public ZooKeeperServerListener getZooKeeperServerListener() {\n             return listener;\n         }\n     \n    +    // Visible for testing\n    +    static volatile int serverId = 1;\n    --- End diff --\n    \n    That said - I could probably do it. Let me know. If you think it's important I'll see what I can do.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-01-25T04:26:15.042+0000","updated":"2018-01-25T04:26:15.042+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16341168","id":"16341168","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user Randgalt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/377\n  \n    Attn: @phunt - I just pushed two changes:\r\n    \r\n    - Better docs and new reserved bits in the `EphemeralType` enum. \r\n    - Better implementation of the testable `serverId` in ZooKeeperServer.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-01-26T15:34:29.807+0000","updated":"2018-01-26T15:34:29.807+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16341257","id":"16341257","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user Randgalt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/377\n  \n    IMPORTANT NOTE: TTL Nodes created in 3.5.3 will revert to EPHEMERAL with this change. We need to discuss the impact of this and consider workarounds, etc.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-01-26T16:45:52.062+0000","updated":"2018-01-26T16:45:52.062+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16341322","id":"16341322","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user Randgalt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/377\n  \n    FYI - I just pushed a change that adds yet-another-flag that allows 3.5.4 ZKs to read the old 3.5.3 TTL nodes. I think we must have this. The docs are updated too.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-01-26T17:29:32.097+0000","updated":"2018-01-26T17:29:32.097+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16356218","id":"16356218","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r166787489\n  \n    --- Diff: src/docs/src/documentation/content/xdocs/zookeeperAdmin.xml ---\n    @@ -950,6 +952,39 @@ server.3=zoo3:2888:3888</programlisting>\n                 </listitem>\n               </varlistentry>\n     \n    +          <varlistentry>\n    +            <term>zookeeper.extendedTypesEnabled</term>\n    +\n    +            <listitem>\n    +                <para>(Java system property only: <emphasis\n    +                    role=\"bold\">zookeeper.extendedTypesEnabled</emphasis>)</para>\n    +\n    +              <para><emphasis role=\"bold\">New in 3.5.4, 3.6.0:</emphasis> Define to \"true\" to enable\n    +              extended features such as the creation of <ulink url=\"zookeeperProgrammers.html#TTL+Nodes\">TTL Nodes</ulink>.\n    +              They are disabled by default. IMPORTANT: when enabled server IDs must\n    +              be less than 255 due to internal limitations.\n    +              </para>\n    +            </listitem>\n    +          </varlistentry>\n    +\n    +          <varlistentry>\n    +            <term>zookeeper.emulate353TTLNodes</term>\n    --- End diff --\n    \n    What's the plan for deprecating this? Keeping this parameter around forever seems like a bad idea. Adds complication that we don't really need to carry around. Perhaps we can deprecate in 3.5.4 and remove in 3.5.5? Similarly I don't think we should include this at all in 3.6.0 (trunk).\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-02-07T23:13:54.069+0000","updated":"2018-02-07T23:13:54.069+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16356219","id":"16356219","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r166787684\n  \n    --- Diff: src/docs/src/documentation/content/xdocs/zookeeperAdmin.xml ---\n    @@ -950,6 +952,39 @@ server.3=zoo3:2888:3888</programlisting>\n                 </listitem>\n               </varlistentry>\n     \n    +          <varlistentry>\n    +            <term>zookeeper.extendedTypesEnabled</term>\n    +\n    +            <listitem>\n    +                <para>(Java system property only: <emphasis\n    +                    role=\"bold\">zookeeper.extendedTypesEnabled</emphasis>)</para>\n    +\n    +              <para><emphasis role=\"bold\">New in 3.5.4, 3.6.0:</emphasis> Define to \"true\" to enable\n    +              extended features such as the creation of <ulink url=\"zookeeperProgrammers.html#TTL+Nodes\">TTL Nodes</ulink>.\n    +              They are disabled by default. IMPORTANT: when enabled server IDs must\n    +              be less than 255 due to internal limitations.\n    +              </para>\n    +            </listitem>\n    +          </varlistentry>\n    +\n    +          <varlistentry>\n    +            <term>zookeeper.emulate353TTLNodes</term>\n    +\n    +            <listitem>\n    +                <para>(Java system property only: <emphasis\n    +                    role=\"bold\">zookeeper.emulate353TTLNodes</emphasis>)</para>\n    +\n    +              <para><emphasis role=\"bold\">New in 3.5.4, 3.6.0:</emphasis> Due to\n    +                <ulink url=\"https://issues.apache.org/jira/browse/ZOOKEEPER-2901\">ZOOKEEPER-2901</ulink> TTL nodes\n    +                created in version 3.5.3 are not supported in 3.5.4/3.6.0. However, a workaround is provided via the\n    +                zookeeper.emulate353TTLNodes system property. If you used TTL nodes in ZooKeeper 3.5.3 and need to maintain\n    +                compatibility set <emphasis role=\"bold\">zookeeper.emulate353TTLNodes</emphasis> to \"true\" in addition to\n    +                <emphasis role=\"bold\">zookeeper.extendedTypesEnabled</emphasis>. NOTE: due to the bug, server IDs\n    +                must be 127 or less. Additionally, the maximum support TTL value is 1099511627775 which is smaller\n    +                than what was allowed in 3.5.3 (1152921504606846975)</para>\n    --- End diff --\n    \n    Is there documentation around this? I'd recommend documenting the bounds.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-02-07T23:14:41.553+0000","updated":"2018-02-07T23:14:41.553+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16372474","id":"16372474","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r169865059\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/EphemeralType.java ---\n    @@ -37,41 +77,152 @@\n         /**\n          * TTL node\n          */\n    -    TTL;\n    +    TTL() {\n    +        @Override\n    +        public long maxValue() {\n    +            return EXTENDED_FEATURE_VALUE_MASK;  // 12725 days, about 34 years\n    +        }\n    +\n    +        @Override\n    +        public long toEphemeralOwner(long ttl) {\n    +            if ((ttl > TTL.maxValue()) || (ttl <= 0)) {\n    +                throw new IllegalArgumentException(\"ttl must be positive and cannot be larger than: \" + TTL.maxValue());\n    +            }\n    +            //noinspection PointlessBitwiseExpression\n    +            return EXTENDED_MASK | EXTENDED_BIT_TTL | ttl;  // TTL_RESERVED_BIT is actually zero - but it serves to document that the proper extended bit needs to be set\n    +        }\n    +\n    +        @Override\n    +        public long getValue(long ephemeralOwner) {\n    +            return getExtendedFeatureValue(ephemeralOwner);\n    +        }\n    +    };\n    +\n    +    /**\n    +     * For types that support it, the maximum extended value\n    +     *\n    +     * @return 0 or max\n    +     */\n    +    public long maxValue() {\n    +        return 0;\n    +    }\n    +\n    +    /**\n    +     * For types that support it, convert a value to an extended ephemeral owner\n    +     *\n    +     * @return 0 or extended ephemeral owner\n    +     */\n    +    public long toEphemeralOwner(long value) {\n    +        return 0;\n    +    }\n    +\n    +    /**\n    +     * For types that support it, return the extended value from an extended ephemeral owner\n    +     *\n    +     * @return 0 or extended value\n    +     */\n    +    public long getValue(long ephemeralOwner) {\n    +        return 0;\n    +    }\n     \n         public static final long CONTAINER_EPHEMERAL_OWNER = Long.MIN_VALUE;\n    -    public static final long MAX_TTL = 0x0fffffffffffffffL;\n    -    public static final long TTL_MASK = 0x8000000000000000L;\n    +    public static final long MAX_EXTENDED_SERVER_ID = 0xfe;  // 254\n    +\n    +    private static final long EXTENDED_MASK = 0xff00000000000000L;\n    +    private static final long EXTENDED_BIT_TTL = 0x0000;\n    +    private static final long RESERVED_BITS_MASK = 0x00ffff0000000000L;\n    +    private static final long RESERVED_BITS_SHIFT = 40;\n    +\n    +    private static final Map<Long, EphemeralType> extendedFeatureMap;\n     \n    +    static {\n    +        Map<Long, EphemeralType> map = new HashMap<>();\n    +        map.put(EXTENDED_BIT_TTL, TTL);\n    +        extendedFeatureMap = Collections.unmodifiableMap(map);\n    +    }\n    +\n    +    private static final long EXTENDED_FEATURE_VALUE_MASK = ~(EXTENDED_MASK | RESERVED_BITS_MASK);\n    +\n    +    // Visible for testing\n    +    static final String EXTENDED_TYPES_ENABLED_PROPERTY = \"zookeeper.extendedTypesEnabled\";\n    +    static final String TTL_3_5_3_EMULATION_PROPERTY = \"zookeeper.emulate353TTLNodes\";\n    +\n    +    /**\n    +     * Return true if extended ephemeral types are enabled\n    +     *\n    +     * @return true/false\n    +     */\n    +    public static boolean extendedEphemeralTypesEnabled() {\n    --- End diff --\n    \n    Maybe I'm missing the point here. Would you please elaborate a little bit on what's the additional benefit of making this generic by extended ephemeral types?\r\n    Why don't you just KISS (keep it simple), because YAGNI (you ain't gonna need) the extended types?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-02-22T06:38:17.159+0000","updated":"2018-02-22T06:38:17.159+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16372475","id":"16372475","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r169863794\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/OldEphemeralType.java ---\n    @@ -0,0 +1,74 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + * <p/>\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + * <p/>\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server;\n    +\n    +/**\n    + * See https://issues.apache.org/jira/browse/ZOOKEEPER-2901\n    + *\n    + * version 3.5.3 introduced bugs associated with how TTL nodes were implemented. version 3.5.4\n    + * fixes the problems but makes TTL nodes created in 3.5.3 invalid. OldEphemeralType is a copy\n    + * of the old - bad - implementation that is provided as a workaround. {@link EphemeralType#TTL_3_5_3_EMULATION_PROPERTY}\n    + * can be used to emulate support of the badly specified TTL nodes.\n    + */\n    +public enum OldEphemeralType {\n    +    /**\n    +     * Not ephemeral\n    +     */\n    +    VOID,\n    +    /**\n    +     * Standard, pre-3.5.x EPHEMERAL\n    +     */\n    +    NORMAL,\n    +    /**\n    +     * Container node\n    +     */\n    +    CONTAINER,\n    +    /**\n    +     * TTL node\n    +     */\n    +    TTL;\n    +\n    +    public static final long CONTAINER_EPHEMERAL_OWNER = Long.MIN_VALUE;\n    +    public static final long MAX_TTL = 0x0fffffffffffffffL;\n    +    public static final long TTL_MASK = 0x8000000000000000L;\n    +\n    +    public static OldEphemeralType get(long ephemeralOwner) {\n    --- End diff --\n    \n    Do think it has value to keep this \"old\" type in the codebase?\r\n    For backward compatibility reason I don't think it makes sense on a non-stable branch.\r\n    Its contents only used from the \"new\" type and tests.\r\n    I'd rather put the logic which is still needed in the \"new\" type and get rid of this one completely keeping EphemeralType nice and clean.\r\n    What do you think?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-02-22T06:38:17.161+0000","updated":"2018-02-22T06:38:17.161+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16372907","id":"16372907","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user Randgalt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r169984867\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/OldEphemeralType.java ---\n    @@ -0,0 +1,74 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + * <p/>\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + * <p/>\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server;\n    +\n    +/**\n    + * See https://issues.apache.org/jira/browse/ZOOKEEPER-2901\n    + *\n    + * version 3.5.3 introduced bugs associated with how TTL nodes were implemented. version 3.5.4\n    + * fixes the problems but makes TTL nodes created in 3.5.3 invalid. OldEphemeralType is a copy\n    + * of the old - bad - implementation that is provided as a workaround. {@link EphemeralType#TTL_3_5_3_EMULATION_PROPERTY}\n    + * can be used to emulate support of the badly specified TTL nodes.\n    + */\n    +public enum OldEphemeralType {\n    +    /**\n    +     * Not ephemeral\n    +     */\n    +    VOID,\n    +    /**\n    +     * Standard, pre-3.5.x EPHEMERAL\n    +     */\n    +    NORMAL,\n    +    /**\n    +     * Container node\n    +     */\n    +    CONTAINER,\n    +    /**\n    +     * TTL node\n    +     */\n    +    TTL;\n    +\n    +    public static final long CONTAINER_EPHEMERAL_OWNER = Long.MIN_VALUE;\n    +    public static final long MAX_TTL = 0x0fffffffffffffffL;\n    +    public static final long TTL_MASK = 0x8000000000000000L;\n    +\n    +    public static OldEphemeralType get(long ephemeralOwner) {\n    --- End diff --\n    \n    We should create a new task to delete it after a while. However, I know that this will be important. Whoever used TTLs in 3.5.3 will run into problems when they upgrade. We need to have a workaround for these users.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-02-22T15:02:40.832+0000","updated":"2018-02-22T15:02:40.832+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16372909","id":"16372909","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user Randgalt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r169985373\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/EphemeralType.java ---\n    @@ -37,41 +77,152 @@\n         /**\n          * TTL node\n          */\n    -    TTL;\n    +    TTL() {\n    +        @Override\n    +        public long maxValue() {\n    +            return EXTENDED_FEATURE_VALUE_MASK;  // 12725 days, about 34 years\n    +        }\n    +\n    +        @Override\n    +        public long toEphemeralOwner(long ttl) {\n    +            if ((ttl > TTL.maxValue()) || (ttl <= 0)) {\n    +                throw new IllegalArgumentException(\"ttl must be positive and cannot be larger than: \" + TTL.maxValue());\n    +            }\n    +            //noinspection PointlessBitwiseExpression\n    +            return EXTENDED_MASK | EXTENDED_BIT_TTL | ttl;  // TTL_RESERVED_BIT is actually zero - but it serves to document that the proper extended bit needs to be set\n    +        }\n    +\n    +        @Override\n    +        public long getValue(long ephemeralOwner) {\n    +            return getExtendedFeatureValue(ephemeralOwner);\n    +        }\n    +    };\n    +\n    +    /**\n    +     * For types that support it, the maximum extended value\n    +     *\n    +     * @return 0 or max\n    +     */\n    +    public long maxValue() {\n    +        return 0;\n    +    }\n    +\n    +    /**\n    +     * For types that support it, convert a value to an extended ephemeral owner\n    +     *\n    +     * @return 0 or extended ephemeral owner\n    +     */\n    +    public long toEphemeralOwner(long value) {\n    +        return 0;\n    +    }\n    +\n    +    /**\n    +     * For types that support it, return the extended value from an extended ephemeral owner\n    +     *\n    +     * @return 0 or extended value\n    +     */\n    +    public long getValue(long ephemeralOwner) {\n    +        return 0;\n    +    }\n     \n         public static final long CONTAINER_EPHEMERAL_OWNER = Long.MIN_VALUE;\n    -    public static final long MAX_TTL = 0x0fffffffffffffffL;\n    -    public static final long TTL_MASK = 0x8000000000000000L;\n    +    public static final long MAX_EXTENDED_SERVER_ID = 0xfe;  // 254\n    +\n    +    private static final long EXTENDED_MASK = 0xff00000000000000L;\n    +    private static final long EXTENDED_BIT_TTL = 0x0000;\n    +    private static final long RESERVED_BITS_MASK = 0x00ffff0000000000L;\n    +    private static final long RESERVED_BITS_SHIFT = 40;\n    +\n    +    private static final Map<Long, EphemeralType> extendedFeatureMap;\n     \n    +    static {\n    +        Map<Long, EphemeralType> map = new HashMap<>();\n    +        map.put(EXTENDED_BIT_TTL, TTL);\n    +        extendedFeatureMap = Collections.unmodifiableMap(map);\n    +    }\n    +\n    +    private static final long EXTENDED_FEATURE_VALUE_MASK = ~(EXTENDED_MASK | RESERVED_BITS_MASK);\n    +\n    +    // Visible for testing\n    +    static final String EXTENDED_TYPES_ENABLED_PROPERTY = \"zookeeper.extendedTypesEnabled\";\n    +    static final String TTL_3_5_3_EMULATION_PROPERTY = \"zookeeper.emulate353TTLNodes\";\n    +\n    +    /**\n    +     * Return true if extended ephemeral types are enabled\n    +     *\n    +     * @return true/false\n    +     */\n    +    public static boolean extendedEphemeralTypesEnabled() {\n    --- End diff --\n    \n    The way it's implemented now, we can add easily new features in the future. Why code ourselves into a corner when we can leave some room? BTW - I'd discussed this offline with @phunt \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-02-22T15:04:15.447+0000","updated":"2018-02-22T15:04:15.447+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16372993","id":"16372993","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r170008461\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/OldEphemeralType.java ---\n    @@ -0,0 +1,74 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + * <p/>\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + * <p/>\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server;\n    +\n    +/**\n    + * See https://issues.apache.org/jira/browse/ZOOKEEPER-2901\n    + *\n    + * version 3.5.3 introduced bugs associated with how TTL nodes were implemented. version 3.5.4\n    + * fixes the problems but makes TTL nodes created in 3.5.3 invalid. OldEphemeralType is a copy\n    + * of the old - bad - implementation that is provided as a workaround. {@link EphemeralType#TTL_3_5_3_EMULATION_PROPERTY}\n    + * can be used to emulate support of the badly specified TTL nodes.\n    + */\n    +public enum OldEphemeralType {\n    +    /**\n    +     * Not ephemeral\n    +     */\n    +    VOID,\n    +    /**\n    +     * Standard, pre-3.5.x EPHEMERAL\n    +     */\n    +    NORMAL,\n    +    /**\n    +     * Container node\n    +     */\n    +    CONTAINER,\n    +    /**\n    +     * TTL node\n    +     */\n    +    TTL;\n    +\n    +    public static final long CONTAINER_EPHEMERAL_OWNER = Long.MIN_VALUE;\n    +    public static final long MAX_TTL = 0x0fffffffffffffffL;\n    +    public static final long TTL_MASK = 0x8000000000000000L;\n    +\n    +    public static OldEphemeralType get(long ephemeralOwner) {\n    --- End diff --\n    \n    Yes, that's fine with the emulate353 flag.\r\n    My concern is that we keep 2 enums in the codebase: `EphemeralType` and `OldEphemeralType` while I think it'd be nicer to build the functionality of the old enum into the new one.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-02-22T16:09:43.499+0000","updated":"2018-02-22T16:09:43.499+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16372998","id":"16372998","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user Randgalt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r170009123\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/OldEphemeralType.java ---\n    @@ -0,0 +1,74 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + * <p/>\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + * <p/>\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server;\n    +\n    +/**\n    + * See https://issues.apache.org/jira/browse/ZOOKEEPER-2901\n    + *\n    + * version 3.5.3 introduced bugs associated with how TTL nodes were implemented. version 3.5.4\n    + * fixes the problems but makes TTL nodes created in 3.5.3 invalid. OldEphemeralType is a copy\n    + * of the old - bad - implementation that is provided as a workaround. {@link EphemeralType#TTL_3_5_3_EMULATION_PROPERTY}\n    + * can be used to emulate support of the badly specified TTL nodes.\n    + */\n    +public enum OldEphemeralType {\n    +    /**\n    +     * Not ephemeral\n    +     */\n    +    VOID,\n    +    /**\n    +     * Standard, pre-3.5.x EPHEMERAL\n    +     */\n    +    NORMAL,\n    +    /**\n    +     * Container node\n    +     */\n    +    CONTAINER,\n    +    /**\n    +     * TTL node\n    +     */\n    +    TTL;\n    +\n    +    public static final long CONTAINER_EPHEMERAL_OWNER = Long.MIN_VALUE;\n    +    public static final long MAX_TTL = 0x0fffffffffffffffL;\n    +    public static final long TTL_MASK = 0x8000000000000000L;\n    +\n    +    public static OldEphemeralType get(long ephemeralOwner) {\n    --- End diff --\n    \n    I put it in `OldEphemeralType` so it's easier to remove and reason about. The emulation is a separate concern.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-02-22T16:11:35.354+0000","updated":"2018-02-22T16:11:35.354+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16387728","id":"16387728","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/377#discussion_r172509908\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/OldEphemeralType.java ---\n    @@ -0,0 +1,74 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + * <p/>\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + * <p/>\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server;\n    +\n    +/**\n    + * See https://issues.apache.org/jira/browse/ZOOKEEPER-2901\n    + *\n    + * version 3.5.3 introduced bugs associated with how TTL nodes were implemented. version 3.5.4\n    + * fixes the problems but makes TTL nodes created in 3.5.3 invalid. OldEphemeralType is a copy\n    + * of the old - bad - implementation that is provided as a workaround. {@link EphemeralType#TTL_3_5_3_EMULATION_PROPERTY}\n    + * can be used to emulate support of the badly specified TTL nodes.\n    + */\n    +public enum OldEphemeralType {\n    +    /**\n    +     * Not ephemeral\n    +     */\n    +    VOID,\n    +    /**\n    +     * Standard, pre-3.5.x EPHEMERAL\n    +     */\n    +    NORMAL,\n    +    /**\n    +     * Container node\n    +     */\n    +    CONTAINER,\n    +    /**\n    +     * TTL node\n    +     */\n    +    TTL;\n    +\n    +    public static final long CONTAINER_EPHEMERAL_OWNER = Long.MIN_VALUE;\n    +    public static final long MAX_TTL = 0x0fffffffffffffffL;\n    +    public static final long TTL_MASK = 0x8000000000000000L;\n    +\n    +    public static OldEphemeralType get(long ephemeralOwner) {\n    --- End diff --\n    \n    Makes sense.\r\n    I think it would be slightly more accurate to name the old enum to `EphemeralTypeEmu353`.\r\n    What do you think?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-03-06T13:12:02.096+0000","updated":"2018-03-06T13:12:02.096+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16387751","id":"16387751","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/377\n  \n    @Randgalt @phunt I think this PR is in a pretty good shape, we should finalize it. Any thoughts or outstanding concerns?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-03-06T13:21:40.971+0000","updated":"2018-03-06T13:21:40.971+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16409744","id":"16409744","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/377\n  \n    @afine This one is also an important PR to review and merge if you have a chance. I think it's already in a good shape.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-03-22T15:43:03.158+0000","updated":"2018-03-22T15:43:03.158+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16469587","id":"16469587","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=phunt","name":"phunt","key":"phunt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Patrick Hunt","active":true,"timeZone":"America/Los_Angeles"},"body":"Issue resolved by pull request 377\n[https://github.com/apache/zookeeper/pull/377]","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=phunt","name":"phunt","key":"phunt","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Patrick Hunt","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-05-09T22:12:54.896+0000","updated":"2018-05-09T22:12:54.896+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103695/comment/16469623","id":"16469623","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #16 (See [https://builds.apache.org/job/ZooKeeper-trunk/16/])\nZOOKEEPER-2901: TTL Nodes don't work with Server IDs > 127 (phunt: rev ceaeccd6e310983d37e685a9d5fff3d7e75cf125)\n* (edit) src/java/main/org/apache/zookeeper/server/ContainerManager.java\n* (add) src/java/main/org/apache/zookeeper/server/OldEphemeralType.java\n* (edit) src/java/test/org/apache/zookeeper/test/TruncateTest.java\n* (edit) src/java/test/org/apache/zookeeper/test/ClientBase.java\n* (edit) src/java/main/org/apache/zookeeper/server/SessionTrackerImpl.java\n* (edit) src/java/main/org/apache/zookeeper/ZooKeeper.java\n* (edit) src/docs/src/documentation/content/xdocs/zookeeperProgrammers.xml\n* (edit) src/java/main/org/apache/zookeeper/server/DataTree.java\n* (edit) src/java/main/org/apache/zookeeper/server/EphemeralType.java\n* (edit) src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java\n* (edit) src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java\n* (edit) src/java/test/org/apache/zookeeper/server/CreateContainerTest.java\n* (edit) src/docs/src/documentation/content/xdocs/zookeeperAdmin.xml\n* (edit) src/java/main/org/apache/zookeeper/cli/CreateCommand.java\n* (add) src/java/test/org/apache/zookeeper/server/Emulate353TTLTest.java\n* (edit) src/java/test/org/apache/zookeeper/server/CreateTTLTest.java\n* (add) src/java/test/org/apache/zookeeper/server/ServerIdTest.java\n* (edit) src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java\n* (edit) src/java/test/config/findbugsExcludeFile.xml\n* (edit) src/java/test/org/apache/zookeeper/server/EphemeralTypeTest.java\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-09T22:38:39.528+0000","updated":"2018-05-09T22:38:39.528+0000"}],"maxResults":86,"total":86,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-2901/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i3kbav:"}}