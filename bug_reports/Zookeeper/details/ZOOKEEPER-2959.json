{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13126179","self":"https://issues.apache.org/jira/rest/api/2/issue/13126179","key":"ZOOKEEPER-2959","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":2400,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310801","id":"12310801","key":"ZOOKEEPER","name":"ZooKeeper","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310801&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310801&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310801&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310801&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10484","id":"10484","description":"Apache ZooKeeper related","name":"ZooKeeper"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12340141","id":"12340141","description":"Beta release against 3.5 branch","name":"3.5.4","archived":false,"released":true,"releaseDate":"2018-05-17"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12326518","id":"12326518","name":"3.6.0","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12342973","id":"12342973","description":"Fix release against 3.4 branch","name":"3.4.13","archived":false,"released":true,"releaseDate":"2018-07-17"}],"aggregatetimespent":2400,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2017-12-29T09:20:06.242+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Mon May 14 21:13:10 UTC 2018","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_12172614069_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2018-05-10T04:03:32.514+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-2959/watchers","watchCount":6,"isWatching":false},"created":"2017-12-20T06:46:38.490+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/1","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/blocker.svg","name":"Blocker","id":"1"},"labels":["pull-request-available"],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":0,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12338036","id":"12338036","description":"Fix release against 3.4 branch","name":"3.4.10","archived":false,"released":true,"releaseDate":"2017-03-30"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12335444","id":"12335444","description":"Beta release against 3.5 branch","name":"3.5.3","archived":false,"released":true,"releaseDate":"2017-04-17"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bkanivets","name":"bkanivets","key":"bkanivets","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Bogdan Kanivets","active":true,"timeZone":"America/Monterrey"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2018-07-17T04:49:59.606+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[],"timeoriginalestimate":null,"description":"Once the ZooKeeper cluster finishes the election for new leader, all learners report their accepted epoch to the leader for the computation of new cluster epoch.\r\n\r\norg.apache.zookeeper.server.quorum.Leader#getEpochToPropose\r\n{code:java}\r\n    private final HashSet<Long> connectingFollowers = new HashSet<Long>();\r\n    public long getEpochToPropose(long sid, long lastAcceptedEpoch) throws InterruptedException, IOException {\r\n        synchronized(connectingFollowers) {\r\n            if (!waitingForNewEpoch) {\r\n                return epoch;\r\n            }\r\n            if (lastAcceptedEpoch >= epoch) {\r\n                epoch = lastAcceptedEpoch+1;\r\n            }\r\n            connectingFollowers.add(sid);\r\n            QuorumVerifier verifier = self.getQuorumVerifier();\r\n            if (connectingFollowers.contains(self.getId()) &&\r\n                                            verifier.containsQuorum(connectingFollowers)) {\r\n                waitingForNewEpoch = false;\r\n                self.setAcceptedEpoch(epoch);\r\n                connectingFollowers.notifyAll();\r\n            } else {\r\n                long start = Time.currentElapsedTime();\r\n                long cur = start;\r\n                long end = start + self.getInitLimit()*self.getTickTime();\r\n                while(waitingForNewEpoch && cur < end) {\r\n                    connectingFollowers.wait(end - cur);\r\n                    cur = Time.currentElapsedTime();\r\n                }\r\n                if (waitingForNewEpoch) {\r\n                    throw new InterruptedException(\"Timeout while waiting for epoch from quorum\");\r\n                }\r\n            }\r\n            return epoch;\r\n        }\r\n    }\r\n{code}\r\n\r\nThe computation will get an outcome once :\r\n# The leader has call method \"getEpochToPropose\"\r\n# The number of all reporters is greater than half of participants.\r\n\r\nThe problem is, an observer server will also send its accepted epoch to the leader, while this procedure treat observers as participants.\r\n\r\nSupposed that the cluster consists of 1 leader, 2 followers and 1 observer, and now the leader and the observer have reported their accepted epochs while neither of the followers has. Thus, the connectingFollowers set consists of two elements, resulting in a size of 2, which is greater than half quorum, namely, 2. Then QuorumVerifier#containsQuorum will return true, because it does not check whether the elements of the parameter are participants.\r\n\r\nThe same flaw exists in org.apache.zookeeper.server.quorum.Leader#waitForEpochAck","customfield_10010":null,"timetracking":{"remainingEstimate":"0h","timeSpent":"40m","remainingEstimateSeconds":0,"timeSpentSeconds":2400},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":0,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"ignore accepted epoch and LEADERINFO ack from observers when a newly elected leader computes new epoch","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xiangyq000","name":"xiangyq000","key":"xiangyq000","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"xiangyq000","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xiangyq000","name":"xiangyq000","key":"xiangyq000","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"xiangyq000","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":2400,"total":2400,"percent":100},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":2400,"total":2400,"percent":100},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16306144","id":"16306144","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"GitHub user xyq000 opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/438\n\n    ZOOKEEPER-2959: ignore accepted epoch and ack from observers\n\n    https://issues.apache.org/jira/browse/ZOOKEEPER-2959\r\n    After a round of elections completes, followers and observers send their accepted epochs to the leader to determine a final epoch.\r\n    Since `QuorumVerifier#containsQuorum(Set set)` does not check whether the elements of argument `set` exactly represent participants, this pull request is intended to ignore reported epochs and acks from observers for logical consistency.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/xyq000/zookeeper ZOOKEEPER-2959\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/438.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #438\n    \n----\ncommit 647061aa7ba1182b83b44b7f2671508012a30b4c\nAuthor: Yongqiang Xiang <xiangyongqiang@...>\nDate:   2017-12-29T08:20:06Z\n\n    ignore accepted epoch and ack from observers\n\n----\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-12-29T09:20:06.242+0000","updated":"2017-12-29T09:20:06.242+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16306154","id":"16306154","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1391//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1391//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1391//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2017-12-29T09:43:59.218+0000","updated":"2017-12-29T09:43:59.218+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16316906","id":"16316906","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/438\n  \n    Hi @xyq000 \r\n    Thanks for the contribution. I think fixing this issues makes sense, would you please add at least one unit test to reproduce the problem?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-01-08T19:56:39.462+0000","updated":"2018-01-08T19:56:39.462+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16317361","id":"16317361","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/438#discussion_r160286100\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/Leader.java ---\n    @@ -1183,8 +1183,10 @@ public long getEpochToPropose(long sid, long lastAcceptedEpoch) throws Interrupt\n                 if (lastAcceptedEpoch >= epoch) {\n                     epoch = lastAcceptedEpoch+1;\n                 }\n    -            connectingFollowers.add(sid);\n                 QuorumVerifier verifier = self.getQuorumVerifier();\n    +            if(verifier.getVotingMembers().containsKey(sid)) {\n    --- End diff --\n    \n    I'm wondering if this logic is best suited for the `QuorumVerifier`. In other words, the quorum verifier should be able to determine if a quorum is present from a set of ids while taking into account which sids represent voting members.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-01-08T23:45:58.926+0000","updated":"2018-01-08T23:45:58.926+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16318513","id":"16318513","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/438#discussion_r160422756\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/Leader.java ---\n    @@ -1183,8 +1183,10 @@ public long getEpochToPropose(long sid, long lastAcceptedEpoch) throws Interrupt\n                 if (lastAcceptedEpoch >= epoch) {\n                     epoch = lastAcceptedEpoch+1;\n                 }\n    -            connectingFollowers.add(sid);\n                 QuorumVerifier verifier = self.getQuorumVerifier();\n    +            if(verifier.getVotingMembers().containsKey(sid)) {\n    --- End diff --\n    \n    +1\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-01-09T14:38:54.047+0000","updated":"2018-01-09T14:38:54.047+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16426533","id":"16426533","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user shralex commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/438#discussion_r179363930\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/Leader.java ---\n    @@ -1183,8 +1183,10 @@ public long getEpochToPropose(long sid, long lastAcceptedEpoch) throws Interrupt\n                 if (lastAcceptedEpoch >= epoch) {\n                     epoch = lastAcceptedEpoch+1;\n                 }\n    -            connectingFollowers.add(sid);\n                 QuorumVerifier verifier = self.getQuorumVerifier();\n    +            if(verifier.getVotingMembers().containsKey(sid)) {\n    --- End diff --\n    \n    If I recall correctly, the reason this wasn't done are concerns around the impact on performance - containsQuorum is called every time an ACK is received for every operation proposal. So if you need 3 asks to commit an operation, we'll be doing these checks (figuring out who's a participant and who's not} for {ACK1}, for {ACK1, ACK2} and for {ACK1, ACK2, ACK3}. This compared to comparing two ints as it stands now. So this is why it wasn't done...\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-05T06:48:35.761+0000","updated":"2018-04-05T06:48:35.761+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16427413","id":"16427413","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/438#discussion_r179558826\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/Leader.java ---\n    @@ -1183,8 +1183,10 @@ public long getEpochToPropose(long sid, long lastAcceptedEpoch) throws Interrupt\n                 if (lastAcceptedEpoch >= epoch) {\n                     epoch = lastAcceptedEpoch+1;\n                 }\n    -            connectingFollowers.add(sid);\n                 QuorumVerifier verifier = self.getQuorumVerifier();\n    +            if(verifier.getVotingMembers().containsKey(sid)) {\n    --- End diff --\n    \n    +1 makes sense.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-05T18:29:00.158+0000","updated":"2018-04-05T18:29:00.158+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16429690","id":"16429690","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"GitHub user lavacat opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/500\n\n    ZOOKEEPER-2959: ignore accepted epoch and LEADERINFO ack from observers\n\n    https://issues.apache.org/jira/browse/ZOOKEEPER-2959\r\n    - add getVotingView check for id in getEpochToPropose and waitForEpochAck\r\n    - refactor waitForNewLeaderAck to use getVotingView\r\n    - unit tests\r\n    \r\n    credit: Xiang Yongqiang (https://github.com/xyq000) for original PR and reporting the issue\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/lavacat/zookeeper branch-3.4\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/500.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #500\n    \n----\ncommit 98c40dac60951c61b3b1922d0038461d81b843a1\nAuthor: Bogdan Kanivets <bkanivets@...>\nDate:   2018-04-08T08:46:37Z\n\n    ZOOKEEPER-2959: ignore accepted epoch and LEADERINFO ack from observers\n    \n    https://issues.apache.org/jira/browse/ZOOKEEPER-2959\n    - add getVotingView check for id in getEpochToPropose and waitForEpochAck\n    - refactor waitForNewLeaderAck to use getVotingView\n    - unit tests\n    \n    credit: Xiang Yongqiang (https://github.com/xyq000) for original PR and reporting the issue\n\n----\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-08T09:05:09.342+0000","updated":"2018-04-08T09:05:09.342+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16429801","id":"16429801","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user shralex commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/500\n  \n    I'm +1. Thanks Bogdan for making the PR.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-08T16:30:32.175+0000","updated":"2018-04-08T16:30:32.175+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16434910","id":"16434910","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r180793047\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java ---\n    @@ -245,6 +245,180 @@ public void testLastAcceptedEpoch() throws Exception {\n                 recursiveDelete(tmpDir);\n             }\n         }\n    +\n    +    @Test\n    +    public void testGetEpochToProposeWithObserver() throws Exception {\n    +        File tmpDir = File.createTempFile(\"test\", \"dir\", testData);\n    +        tmpDir.delete();\n    +        tmpDir.mkdir();\n    +        Leader leader = null;\n    +        try {\n    +            QuorumPeer peer = createQuorumPeer(tmpDir);\n    +            long participantId = 1;\n    +            long observerId = peer.quorumPeers.size();\n    +            peer.quorumPeers.put(observerId, new QuorumServer(observerId, \"0.0.0.0\", 33225,\n    --- End diff --\n    \n    I think to be consistent with `createQuorumPeer()` method this should be something like:\r\n    ```\r\n    peers.put(observerId, new QuorumServer(observerId, new InetSocketAddress(\"127.0.0.1\", PortAssignment.unique()), \r\n                   new InetSocketAddress(\"127.0.0.1\", PortAssignment.unique()),\r\n                   new InetSocketAddress(\"127.0.0.1\", PortAssignment.unique()),\r\n                   QuorumPeer.LearnerType.OBSERVER));\r\n    ```\r\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-12T04:17:19.681+0000","updated":"2018-04-12T04:17:19.681+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16434911","id":"16434911","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r180789703\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java ---\n    @@ -245,6 +245,180 @@ public void testLastAcceptedEpoch() throws Exception {\n                 recursiveDelete(tmpDir);\n             }\n         }\n    +\n    +    @Test\n    +    public void testGetEpochToProposeWithObserver() throws Exception {\n    +        File tmpDir = File.createTempFile(\"test\", \"dir\", testData);\n    --- End diff --\n    \n    Have you considered using ClientBase.createEmptyTestDir() instead?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-12T04:17:19.722+0000","updated":"2018-04-12T04:17:19.722+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16434923","id":"16434923","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/500\n  \n    Given that this change affects leader election I think it'd be very beneficial if @fpj could take a look by any chance.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-12T04:46:21.550+0000","updated":"2018-04-12T04:46:21.550+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16435149","id":"16435149","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user lavacat commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r181001854\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java ---\n    @@ -245,6 +245,180 @@ public void testLastAcceptedEpoch() throws Exception {\n                 recursiveDelete(tmpDir);\n             }\n         }\n    +\n    +    @Test\n    +    public void testGetEpochToProposeWithObserver() throws Exception {\n    +        File tmpDir = File.createTempFile(\"test\", \"dir\", testData);\n    +        tmpDir.delete();\n    +        tmpDir.mkdir();\n    +        Leader leader = null;\n    +        try {\n    +            QuorumPeer peer = createQuorumPeer(tmpDir);\n    +            long participantId = 1;\n    +            long observerId = peer.quorumPeers.size();\n    +            peer.quorumPeers.put(observerId, new QuorumServer(observerId, \"0.0.0.0\", 33225,\n    --- End diff --\n    \n    Do you mean using PortAssignment.unique() and \"127.0.0.1\"? Changed it.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-12T08:27:28.140+0000","updated":"2018-04-12T08:27:28.140+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16435153","id":"16435153","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user lavacat commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r181002193\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java ---\n    @@ -245,6 +245,180 @@ public void testLastAcceptedEpoch() throws Exception {\n                 recursiveDelete(tmpDir);\n             }\n         }\n    +\n    +    @Test\n    +    public void testGetEpochToProposeWithObserver() throws Exception {\n    +        File tmpDir = File.createTempFile(\"test\", \"dir\", testData);\n    --- End diff --\n    \n    Refactored\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-12T08:28:42.244+0000","updated":"2018-04-12T08:28:42.244+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16435154","id":"16435154","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user lavacat commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/500\n  \n    Moved these 3 new tests into new class - LeaderWithObserverTest. Had to make createLeader and createQuorumPeer 'public static' in Zab1_0Test. Happy to refactor into common base class\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-12T08:31:48.363+0000","updated":"2018-04-12T08:31:48.363+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16435177","id":"16435177","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/500\n  \n    @lavacat I think either moving these methods/classes to a base class or creating a separate `ZabUtils` makes sense in this case to get cleaner code.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-12T08:53:22.604+0000","updated":"2018-04-12T08:53:22.604+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16436644","id":"16436644","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user lavacat commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/500\n  \n    @anmolnar added ZabUtils\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-13T01:21:43.680+0000","updated":"2018-04-13T01:21:43.680+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16438510","id":"16438510","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user eribeiro commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r181266640\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/ZabUtils.java ---\n    @@ -0,0 +1,140 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +import org.apache.zookeeper.PortAssignment;\n    +import org.apache.zookeeper.server.ServerCnxn;\n    +import org.apache.zookeeper.server.ServerCnxnFactory;\n    +import org.apache.zookeeper.server.ZKDatabase;\n    +import org.apache.zookeeper.server.ZooKeeperServer;\n    +import org.apache.zookeeper.server.persistence.FileTxnSnapLog;\n    +import org.apache.zookeeper.server.quorum.flexible.QuorumMaj;\n    +\n    +import java.io.File;\n    +import java.io.FileOutputStream;\n    +import java.io.IOException;\n    +import java.lang.reflect.Field;\n    +import java.net.InetSocketAddress;\n    +import java.util.HashMap;\n    +\n    +public class ZabUtils {\n    +    public static final int SYNC_LIMIT = 2;\n    +\n    --- End diff --\n    \n    If this is a helper class that doesn't require instantiation then create a private constructor: this makes it \"final\" and prevents instantiation.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-14T21:38:34.291+0000","updated":"2018-04-14T21:38:34.291+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16438511","id":"16438511","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user eribeiro commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r181564082\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/ZabUtils.java ---\n    @@ -0,0 +1,140 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +import org.apache.zookeeper.PortAssignment;\n    +import org.apache.zookeeper.server.ServerCnxn;\n    +import org.apache.zookeeper.server.ServerCnxnFactory;\n    +import org.apache.zookeeper.server.ZKDatabase;\n    +import org.apache.zookeeper.server.ZooKeeperServer;\n    +import org.apache.zookeeper.server.persistence.FileTxnSnapLog;\n    +import org.apache.zookeeper.server.quorum.flexible.QuorumMaj;\n    +\n    +import java.io.File;\n    +import java.io.FileOutputStream;\n    +import java.io.IOException;\n    +import java.lang.reflect.Field;\n    +import java.net.InetSocketAddress;\n    +import java.util.HashMap;\n    +\n    +public class ZabUtils {\n    +    public static final int SYNC_LIMIT = 2;\n    +\n    +    public static QuorumPeer createQuorumPeer(File tmpDir) throws IOException{\n    +        QuorumPeer peer = new QuorumPeer();\n    +        peer.syncLimit = 2;\n    +        peer.initLimit = 2;\n    +        peer.tickTime = 2000;\n    +        peer.quorumPeers = new HashMap<Long, QuorumPeer.QuorumServer>();\n    +        peer.quorumPeers.put(0L, new QuorumPeer.QuorumServer(0, \"127.0.0.1\", PortAssignment.unique(), 0, null));\n    +        peer.quorumPeers.put(1L, new QuorumPeer.QuorumServer(1, \"127.0.0.1\", PortAssignment.unique(), 0, null));\n    +        peer.quorumPeers.put(2L, new QuorumPeer.QuorumServer(2, \"127.0.0.1\", PortAssignment.unique(), 0, null));\n    +        peer.setQuorumVerifier(new QuorumMaj(peer.quorumPeers.size()));\n    +        peer.setCnxnFactory(new NullServerCnxnFactory());\n    +        File version2 = new File(tmpDir, \"version-2\");\n    +        version2.mkdir();\n    +        FileOutputStream fos;\n    +        fos = new FileOutputStream(new File(version2, \"currentEpoch\"));\n    +        fos.write(\"0\\n\".getBytes());\n    +        fos.close();\n    +        fos = new FileOutputStream(new File(version2, \"acceptedEpoch\"));\n    +        fos.write(\"0\\n\".getBytes());\n    +        fos.close();\n    +        return peer;\n    +    }\n    +\n    +    public static Leader createLeader(File tmpDir, QuorumPeer peer)\n    +            throws IOException, NoSuchFieldException, IllegalAccessException{\n    +        LeaderZooKeeperServer zk = prepareLeader(tmpDir, peer);\n    +        return new Leader(peer, zk);\n    +    }\n    +\n    +    public static MockLeader createMockLeader(File tmpDir, QuorumPeer peer)\n    +            throws IOException, NoSuchFieldException, IllegalAccessException{\n    +        LeaderZooKeeperServer zk = prepareLeader(tmpDir, peer);\n    +        return new MockLeader(peer, zk);\n    +    }\n    +\n    +    private static LeaderZooKeeperServer prepareLeader(File tmpDir, QuorumPeer peer)\n    +            throws IOException, NoSuchFieldException, IllegalAccessException {\n    +        FileTxnSnapLog logFactory = new FileTxnSnapLog(tmpDir, tmpDir);\n    +        peer.setTxnFactory(logFactory);\n    +        Field addrField = peer.getClass().getDeclaredField(\"myQuorumAddr\");\n    +        addrField.setAccessible(true);\n    +        addrField.set(peer, new InetSocketAddress(PortAssignment.unique()));\n    +        ZKDatabase zkDb = new ZKDatabase(logFactory);\n    +        return new LeaderZooKeeperServer(logFactory, peer, new ZooKeeperServer.BasicDataTreeBuilder(), zkDb);\n    +    }\n    +\n    +    private static final class NullServerCnxnFactory extends ServerCnxnFactory {\n    +        public void startup(ZooKeeperServer zkServer) throws IOException,\n    +                InterruptedException {\n    +        }\n    +        public void start() {\n    +        }\n    +        public void shutdown() {\n    +        }\n    +        public void setMaxClientCnxnsPerHost(int max) {\n    +        }\n    +        public void join() throws InterruptedException {\n    +        }\n    +        public int getMaxClientCnxnsPerHost() {\n    +            return 0;\n    +        }\n    +        public int getLocalPort() {\n    +            return 0;\n    +        }\n    +        public InetSocketAddress getLocalAddress() {\n    +            return null;\n    +        }\n    +        public Iterable<ServerCnxn> getConnections() {\n    +            return null;\n    +        }\n    +        public void configure(InetSocketAddress addr, int maxClientCnxns)\n    +                throws IOException {\n    +        }\n    +        public void closeSession(long sessionId) {\n    +        }\n    +        public void closeAll() {\n    +        }\n    +        @Override\n    +        public int getNumAliveConnections() {\n    +            return 0;\n    +        }\n    +    }\n    +\n    +    static final class MockLeader extends Leader {\n    --- End diff --\n    \n    `private` ?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-14T21:38:34.363+0000","updated":"2018-04-14T21:38:34.363+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16438512","id":"16438512","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user eribeiro commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r181267252\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java ---\n    @@ -161,8 +127,8 @@ public void testLeaderInConnectingFollowers() throws Exception {\n             tmpDir.mkdir();\n             Leader leader = null;\n             try {\n    -            QuorumPeer peer = createQuorumPeer(tmpDir);\n    -            leader = createLeader(tmpDir, peer);\n    +            QuorumPeer peer = ZabUtils.createQuorumPeer(tmpDir);\n    --- End diff --\n    \n    `import static org.apache.zookeeper.server.quorum. ZabUtil.*` then you can simplify method invocation by using `createQuorumPeer(tmpDir);` instead of `ZabUtils.createQuorumPeer(tmpDir);`\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-14T21:38:34.383+0000","updated":"2018-04-14T21:38:34.383+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16438513","id":"16438513","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user eribeiro commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r181268803\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/ZabUtils.java ---\n    @@ -0,0 +1,140 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +import org.apache.zookeeper.PortAssignment;\n    +import org.apache.zookeeper.server.ServerCnxn;\n    +import org.apache.zookeeper.server.ServerCnxnFactory;\n    +import org.apache.zookeeper.server.ZKDatabase;\n    +import org.apache.zookeeper.server.ZooKeeperServer;\n    +import org.apache.zookeeper.server.persistence.FileTxnSnapLog;\n    +import org.apache.zookeeper.server.quorum.flexible.QuorumMaj;\n    +\n    +import java.io.File;\n    +import java.io.FileOutputStream;\n    +import java.io.IOException;\n    +import java.lang.reflect.Field;\n    +import java.net.InetSocketAddress;\n    +import java.util.HashMap;\n    +\n    +public class ZabUtils {\n    +    public static final int SYNC_LIMIT = 2;\n    +\n    +    public static QuorumPeer createQuorumPeer(File tmpDir) throws IOException{\n    +        QuorumPeer peer = new QuorumPeer();\n    +        peer.syncLimit = 2;\n    +        peer.initLimit = 2;\n    +        peer.tickTime = 2000;\n    +        peer.quorumPeers = new HashMap<Long, QuorumPeer.QuorumServer>();\n    +        peer.quorumPeers.put(0L, new QuorumPeer.QuorumServer(0, \"127.0.0.1\", PortAssignment.unique(), 0, null));\n    +        peer.quorumPeers.put(1L, new QuorumPeer.QuorumServer(1, \"127.0.0.1\", PortAssignment.unique(), 0, null));\n    +        peer.quorumPeers.put(2L, new QuorumPeer.QuorumServer(2, \"127.0.0.1\", PortAssignment.unique(), 0, null));\n    +        peer.setQuorumVerifier(new QuorumMaj(peer.quorumPeers.size()));\n    +        peer.setCnxnFactory(new NullServerCnxnFactory());\n    +        File version2 = new File(tmpDir, \"version-2\");\n    +        version2.mkdir();\n    +        FileOutputStream fos;\n    +        fos = new FileOutputStream(new File(version2, \"currentEpoch\"));\n    --- End diff --\n    \n    Could join lines 52 and 53.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-14T21:38:34.415+0000","updated":"2018-04-14T21:38:34.415+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16438514","id":"16438514","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user eribeiro commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r181267836\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/Leader.java ---\n    @@ -868,8 +868,8 @@ synchronized public long startForwarding(LearnerHandler handler,\n                     \n             return lastProposed;\n         }\n    -\n    -    private HashSet<Long> connectingFollowers = new HashSet<Long>();\n    +    // VisibleForTesting\n    +    protected HashSet<Long> connectingFollowers = new HashSet<Long>();\n    --- End diff --\n    \n    `protected Set<Long> connectingFollowers = new HashSet<>();`\r\n    \r\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-14T21:38:34.415+0000","updated":"2018-04-14T21:38:34.415+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16438515","id":"16438515","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user eribeiro commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r181564184\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/Leader.java ---\n    @@ -916,7 +919,9 @@ public void waitForEpochAck(long id, StateSummary ss) throws IOException, Interr\n                                                         + leaderStateSummary.getLastZxid()\n                                                         + \" (last zxid)\");\n                     }\n    -                electingFollowers.add(id);\n    +                if (self.getVotingView().containsKey(id)) {\n    --- End diff --\n    \n    I would suggest to encapsulate the `self.getVotingView().containsKey(id)` into a private method as below, if nothing else, for the sake of readability\r\n    \r\n    ```\r\n    private boolean isParticipant(long sid) {\r\n       return self.getVotingView().containsKey(id);\r\n    }\r\n    ```\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-14T21:38:34.418+0000","updated":"2018-04-14T21:38:34.418+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16438516","id":"16438516","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user eribeiro commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r181267704\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/Leader.java ---\n    @@ -900,9 +902,10 @@ public long getEpochToPropose(long sid, long lastAcceptedEpoch) throws Interrupt\n                 return epoch;\n             }\n         }\n    -\n    -    private HashSet<Long> electingFollowers = new HashSet<Long>();\n    -    private boolean electionFinished = false;\n    +    // VisibleForTesting\n    +    protected HashSet<Long> electingFollowers = new HashSet<Long>();\n    --- End diff --\n    \n    `protected Set<Long> electingFollowers = new HashSet<>()`\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-14T21:38:34.422+0000","updated":"2018-04-14T21:38:34.422+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16441069","id":"16441069","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r182128913\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java ---\n    @@ -161,8 +127,8 @@ public void testLeaderInConnectingFollowers() throws Exception {\n             tmpDir.mkdir();\n             Leader leader = null;\n             try {\n    -            QuorumPeer peer = createQuorumPeer(tmpDir);\n    -            leader = createLeader(tmpDir, peer);\n    +            QuorumPeer peer = ZabUtils.createQuorumPeer(tmpDir);\n    --- End diff --\n    \n    Agreed, but please don't use asterisk (*) import. We avoid wildcard imports in Zk project.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-17T15:50:56.755+0000","updated":"2018-04-17T15:50:56.755+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16441297","id":"16441297","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user edwardoliveira commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r182180406\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java ---\n    @@ -161,8 +127,8 @@ public void testLeaderInConnectingFollowers() throws Exception {\n             tmpDir.mkdir();\n             Leader leader = null;\n             try {\n    -            QuorumPeer peer = createQuorumPeer(tmpDir);\n    -            leader = createLeader(tmpDir, peer);\n    +            QuorumPeer peer = ZabUtils.createQuorumPeer(tmpDir);\n    --- End diff --\n    \n    Yup, you right. Sorry about that. :)\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-17T18:22:59.490+0000","updated":"2018-04-17T18:22:59.490+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16444818","id":"16444818","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user lavacat commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r182887771\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/ZabUtils.java ---\n    @@ -0,0 +1,140 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +import org.apache.zookeeper.PortAssignment;\n    +import org.apache.zookeeper.server.ServerCnxn;\n    +import org.apache.zookeeper.server.ServerCnxnFactory;\n    +import org.apache.zookeeper.server.ZKDatabase;\n    +import org.apache.zookeeper.server.ZooKeeperServer;\n    +import org.apache.zookeeper.server.persistence.FileTxnSnapLog;\n    +import org.apache.zookeeper.server.quorum.flexible.QuorumMaj;\n    +\n    +import java.io.File;\n    +import java.io.FileOutputStream;\n    +import java.io.IOException;\n    +import java.lang.reflect.Field;\n    +import java.net.InetSocketAddress;\n    +import java.util.HashMap;\n    +\n    +public class ZabUtils {\n    +    public static final int SYNC_LIMIT = 2;\n    +\n    +    public static QuorumPeer createQuorumPeer(File tmpDir) throws IOException{\n    +        QuorumPeer peer = new QuorumPeer();\n    +        peer.syncLimit = 2;\n    +        peer.initLimit = 2;\n    +        peer.tickTime = 2000;\n    +        peer.quorumPeers = new HashMap<Long, QuorumPeer.QuorumServer>();\n    +        peer.quorumPeers.put(0L, new QuorumPeer.QuorumServer(0, \"127.0.0.1\", PortAssignment.unique(), 0, null));\n    +        peer.quorumPeers.put(1L, new QuorumPeer.QuorumServer(1, \"127.0.0.1\", PortAssignment.unique(), 0, null));\n    +        peer.quorumPeers.put(2L, new QuorumPeer.QuorumServer(2, \"127.0.0.1\", PortAssignment.unique(), 0, null));\n    +        peer.setQuorumVerifier(new QuorumMaj(peer.quorumPeers.size()));\n    +        peer.setCnxnFactory(new NullServerCnxnFactory());\n    +        File version2 = new File(tmpDir, \"version-2\");\n    +        version2.mkdir();\n    +        FileOutputStream fos;\n    +        fos = new FileOutputStream(new File(version2, \"currentEpoch\"));\n    +        fos.write(\"0\\n\".getBytes());\n    +        fos.close();\n    +        fos = new FileOutputStream(new File(version2, \"acceptedEpoch\"));\n    +        fos.write(\"0\\n\".getBytes());\n    +        fos.close();\n    +        return peer;\n    +    }\n    +\n    +    public static Leader createLeader(File tmpDir, QuorumPeer peer)\n    +            throws IOException, NoSuchFieldException, IllegalAccessException{\n    +        LeaderZooKeeperServer zk = prepareLeader(tmpDir, peer);\n    +        return new Leader(peer, zk);\n    +    }\n    +\n    +    public static MockLeader createMockLeader(File tmpDir, QuorumPeer peer)\n    +            throws IOException, NoSuchFieldException, IllegalAccessException{\n    +        LeaderZooKeeperServer zk = prepareLeader(tmpDir, peer);\n    +        return new MockLeader(peer, zk);\n    +    }\n    +\n    +    private static LeaderZooKeeperServer prepareLeader(File tmpDir, QuorumPeer peer)\n    +            throws IOException, NoSuchFieldException, IllegalAccessException {\n    +        FileTxnSnapLog logFactory = new FileTxnSnapLog(tmpDir, tmpDir);\n    +        peer.setTxnFactory(logFactory);\n    +        Field addrField = peer.getClass().getDeclaredField(\"myQuorumAddr\");\n    +        addrField.setAccessible(true);\n    +        addrField.set(peer, new InetSocketAddress(PortAssignment.unique()));\n    +        ZKDatabase zkDb = new ZKDatabase(logFactory);\n    +        return new LeaderZooKeeperServer(logFactory, peer, new ZooKeeperServer.BasicDataTreeBuilder(), zkDb);\n    +    }\n    +\n    +    private static final class NullServerCnxnFactory extends ServerCnxnFactory {\n    +        public void startup(ZooKeeperServer zkServer) throws IOException,\n    +                InterruptedException {\n    +        }\n    +        public void start() {\n    +        }\n    +        public void shutdown() {\n    +        }\n    +        public void setMaxClientCnxnsPerHost(int max) {\n    +        }\n    +        public void join() throws InterruptedException {\n    +        }\n    +        public int getMaxClientCnxnsPerHost() {\n    +            return 0;\n    +        }\n    +        public int getLocalPort() {\n    +            return 0;\n    +        }\n    +        public InetSocketAddress getLocalAddress() {\n    +            return null;\n    +        }\n    +        public Iterable<ServerCnxn> getConnections() {\n    +            return null;\n    +        }\n    +        public void configure(InetSocketAddress addr, int maxClientCnxns)\n    +                throws IOException {\n    +        }\n    +        public void closeSession(long sessionId) {\n    +        }\n    +        public void closeAll() {\n    +        }\n    +        @Override\n    +        public int getNumAliveConnections() {\n    +            return 0;\n    +        }\n    +    }\n    +\n    +    static final class MockLeader extends Leader {\n    --- End diff --\n    \n    Can't make it private, this class is still used in Zab1_0Test\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-19T21:19:02.452+0000","updated":"2018-04-19T21:19:02.452+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16444826","id":"16444826","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user lavacat commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r182889043\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/Leader.java ---\n    @@ -900,9 +902,10 @@ public long getEpochToPropose(long sid, long lastAcceptedEpoch) throws Interrupt\n                 return epoch;\n             }\n         }\n    -\n    -    private HashSet<Long> electingFollowers = new HashSet<Long>();\n    -    private boolean electionFinished = false;\n    +    // VisibleForTesting\n    +    protected HashSet<Long> electingFollowers = new HashSet<Long>();\n    --- End diff --\n    \n    Can't use Set, because QuorumVerifier uses HashSet param. \r\n    QuorumVerifier.containsQuorum(HashSet<Long> set);\r\n    \r\n    I can refactor it all, but then I'll need to touch QuorumVerifier.java, QuorumMaj.java and QuorumHierarchical.java\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-19T21:24:25.190+0000","updated":"2018-04-19T21:24:25.190+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16444884","id":"16444884","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 7 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1604//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1604//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1604//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-19T22:10:09.816+0000","updated":"2018-04-19T22:10:09.816+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16445056","id":"16445056","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user lavacat commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r182922147\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/Leader.java ---\n    @@ -900,9 +902,10 @@ public long getEpochToPropose(long sid, long lastAcceptedEpoch) throws Interrupt\n                 return epoch;\n             }\n         }\n    -\n    -    private HashSet<Long> electingFollowers = new HashSet<Long>();\n    -    private boolean electionFinished = false;\n    +    // VisibleForTesting\n    +    protected HashSet<Long> electingFollowers = new HashSet<Long>();\n    --- End diff --\n    \n    updated\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-20T00:49:24.074+0000","updated":"2018-04-20T00:49:24.074+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16445063","id":"16445063","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"GitHub user lavacat opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/503\n\n    ZOOKEEPER-2959: ignore accepted epoch and LEADERINFO ack from observers\n\n    https://issues.apache.org/jira/browse/ZOOKEEPER-2959\r\n    - added getVotingMembers check for id in getEpochToPropose and waitForEpochAck\r\n    - removed unused learnerType param in waitForNewLeaderAck\r\n    - unit tests\r\n    - refactored common test helpers into ZabUtils\r\n    \r\n    credit: Xiang Yongqiang (https://github.com/xyq000) for original PR and reporting the issue\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/lavacat/zookeeper branch-3.5\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/503.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #503\n    \n----\ncommit d7181d65f66adcfc0fecda2670580e2d2b8ddccb\nAuthor: Bogdan Kanivets <bkanivets@...>\nDate:   2018-04-20T00:02:59Z\n\n    ZOOKEEPER-2959: ignore accepted epoch and LEADERINFO ack from observers\n    \n    https://issues.apache.org/jira/browse/ZOOKEEPER-2959\n    - added getVotingMembers check for id in getEpochToPropose and waitForEpochAck\n    - removed unused learnerType param in waitForNewLeaderAck\n    - unit tests\n    - refactored common test helpers into ZabUtils\n    \n    credit: Xiang Yongqiang (https://github.com/xyq000) for original PR and reporting the issue\n\n----\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-20T00:59:29.713+0000","updated":"2018-04-20T00:59:29.713+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16445066","id":"16445066","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 7 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    -1 contrib tests.  The patch failed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1605//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1605//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1605//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-20T01:04:53.371+0000","updated":"2018-04-20T01:04:53.371+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16445067","id":"16445067","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 7 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1606//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1606//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1606//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-20T01:04:59.747+0000","updated":"2018-04-20T01:04:59.747+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16446678","id":"16446678","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 7 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1610//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1610//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1610//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-21T08:09:55.338+0000","updated":"2018-04-21T08:09:55.338+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16447661","id":"16447661","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 7 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1619//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1619//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1619//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-23T07:14:41.838+0000","updated":"2018-04-23T07:14:41.838+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16457266","id":"16457266","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 7 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1646//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1646//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1646//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-28T00:56:09.457+0000","updated":"2018-04-28T00:56:09.457+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16459482","id":"16459482","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 7 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1658//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1658//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1658//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-01T06:37:38.457+0000","updated":"2018-05-01T06:37:38.457+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16467905","id":"16467905","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 7 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1664//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1664//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1664//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-08T20:04:09.356+0000","updated":"2018-05-08T20:04:09.356+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16469516","id":"16469516","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bkanivets","name":"bkanivets","key":"bkanivets","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Bogdan Kanivets","active":true,"timeZone":"America/Monterrey"},"body":"I think this is ready to merge. There are 3 PRs for 3.4, 3.5 and master.\r\n\r\nSteps to reproduce the bug:\r\n\r\nStart with 3 servers. Config:\r\n\r\n \r\n{code:java}\r\nclientPort=2181\r\nleaderServes=yes\r\nserver.1=<server.1-ip>:2888:3888\r\nserver.2=<server.2-ip>:2888:3888\r\nserver.3=<server.3-ip>:2888:3888:observer\r\n{code}\r\n \r\n\r\nOn server.2 block follower port from server.1 to server.2:\r\n{code:java}\r\nsudo iptables -A INPUT -s <server.1-ip> -p tcp --destination-port 2888 -j DROP{code}\r\nStart server.1, server.2 and server.3\r\nWait for server.2 to declare itself a leader and then fail in waitForNewLeaderAck\r\n\r\n \r\n{code:java}\r\n2018-04-16 20:56:25,990 [myid:2] - INFO [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:2181:Leader@361] - LEADING - LEADER ELECTION TOOK - 3903\r\n2018-04-16 20:56:27,275 [myid:2] - INFO [LearnerHandler-/<server.3-ip>:29223:LearnerHandler@329] - Follower sid: 3 : info : org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer@136ca5bc\r\n2018-04-16 20:56:27,281 [myid:2] - INFO [LearnerHandler-/<server.3-ip>:29223:LearnerHandler@384] - Synchronizing with Follower sid: 3 maxCommittedLog=0x0 minCommittedLog=0x0 peerLastZxid=0x0\r\n2018-04-16 20:56:27,281 [myid:2] - INFO [LearnerHandler-/<server.3-ip>:29223:LearnerHandler@393] - leader and follower are in sync, zxid=0x0\r\n2018-04-16 20:56:27,282 [myid:2] - INFO [LearnerHandler-/<server.3-ip>:29223:LearnerHandler@458] - Sending DIFF\r\n2018-04-16 20:56:27,291 [myid:2] - INFO [LearnerHandler-/<server.3-ip>:29223:LearnerHandler@518] - Received NEWLEADER-ACK message from 3\r\n2018-04-16 20:56:47,283 [myid:2] - INFO [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:2181:Leader@502] - Shutting down\r\n2018-04-16 20:56:47,284 [myid:2] - INFO [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:2181:Leader@508] - Shutdown called\r\njava.lang.Exception: shutdown Leader! reason: Waiting for a quorum of followers, only synced with sids: [ 2 ]\r\nat org.apache.zookeeper.server.quorum.Leader.shutdown(Leader.java:508)\r\nat org.apache.zookeeper.server.quorum.Leader.lead(Leader.java:406)\r\nat org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:859){code}\r\n\r\nOn server.2 check that currentEpoch is incremented in currentEpoch file. This is the bug. Epoch is incremented in getEpochToPropose because server.3 is counted in connectingFollowers.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bkanivets","name":"bkanivets","key":"bkanivets","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Bogdan Kanivets","active":true,"timeZone":"America/Monterrey"},"created":"2018-05-09T21:13:40.782+0000","updated":"2018-05-09T21:13:40.782+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16469973","id":"16469973","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"FAILURE: Integrated in Jenkins build ZooKeeper-trunk #18 (See [https://builds.apache.org/job/ZooKeeper-trunk/18/])\nZOOKEEPER-2959: ignore accepted epoch and LEADERINFO ack from observers (ashraer: rev 088dfdf188663f6bad79b0e87b710737b318537d)\n* (edit) src/java/main/org/apache/zookeeper/server/quorum/LearnerHandler.java\n* (edit) src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java\n* (edit) src/java/main/org/apache/zookeeper/server/quorum/Leader.java\n* (add) src/java/test/org/apache/zookeeper/server/quorum/ZabUtils.java\n* (add) src/java/test/org/apache/zookeeper/server/quorum/LeaderWithObserverTest.java\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-10T06:28:08.284+0000","updated":"2018-05-10T06:28:08.284+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/comment/16474807","id":"16474807","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 3 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1684//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1684//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1684//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-14T21:13:10.015+0000","updated":"2018-05-14T21:13:10.015+0000"}],"maxResults":41,"total":41,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-2959/votes","votes":1,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":4,"worklogs":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/worklog/101886","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user lavacat closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/503\n","created":"2018-05-14T21:14:58.327+0000","updated":"2018-05-14T21:14:58.327+0000","started":"2018-05-14T21:14:58.327+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"101886","issueId":"13126179"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/worklog/104462","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user hanm commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/512\n  \n    This is already committed in https://github.com/apache/zookeeper/commit/088dfdf188663f6bad79b0e87b710737b318537d, https://github.com/apache/zookeeper/commit/c86349060274e18ce9f839cd6a50fe5f34000edd, https://github.com/apache/zookeeper/commit/a09a67971d7aaa31617988a188501b855e3e59f2.\r\n    \r\n    Please close this pull request manually @lavacat \r\n    (usually the pull request will be automatically closed if using merge script, but Alex committed these manually.).\n","created":"2018-05-22T04:47:30.402+0000","updated":"2018-05-22T04:47:30.402+0000","started":"2018-05-22T04:47:30.401+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"104462","issueId":"13126179"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/worklog/104463","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user lavacat closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/512\n","created":"2018-05-22T04:50:33.635+0000","updated":"2018-05-22T04:50:33.635+0000","started":"2018-05-22T04:50:33.635+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"104463","issueId":"13126179"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13126179/worklog/104465","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user lavacat closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/500\n","created":"2018-05-22T04:51:03.216+0000","updated":"2018-05-22T04:51:03.216+0000","started":"2018-05-22T04:51:03.215+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"104465","issueId":"13126179"}]},"customfield_12311820":"0|i3o43b:"}}