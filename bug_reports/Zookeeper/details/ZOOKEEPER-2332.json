{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12916641","self":"https://issues.apache.org/jira/rest/api/2/issue/12916641","key":"ZOOKEEPER-2332","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310801","id":"12310801","key":"ZOOKEEPER","name":"ZooKeeper","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310801&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310801&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310801&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310801&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10484","id":"10484","description":"Apache ZooKeeper related","name":"ZooKeeper"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12326518","id":"12326518","name":"3.6.0","archived":false,"released":false}],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2015-11-30T09:53:28.900+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Wed Oct 19 20:29:50 UTC 2016","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-2332/watchers","watchCount":12,"isWatching":false},"created":"2015-11-27T13:42:02.041+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.svg","name":"Critical","id":"2"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12323310","id":"12323310","description":"Fix release against 3.4 branch","name":"3.4.6","archived":false,"released":true,"releaseDate":"2014-03-10"}],"issuelinks":[{"id":"12458295","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12458295","type":{"id":"12310000","name":"Duplicate","inward":"is duplicated by","outward":"duplicates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"},"inwardIssue":{"id":"12944637","key":"ZOOKEEPER-2376","self":"https://issues.apache.org/jira/rest/api/2/issue/12944637","fields":{"summary":"Server fails to start if there is a zero-length TxnLog file present in the log directory","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=liushaohui","name":"liushaohui","key":"liushaohui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Liu Shaohui","active":true,"timeZone":"Etc/UTC"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2016-10-19T20:29:50.218+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/10002","description":"A patch for this issue has been uploaded to JIRA by a contributor.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/document.png","name":"Patch Available","id":"10002","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/4","id":4,"key":"indeterminate","colorName":"yellow","name":"In Progress"}},"components":[],"timeoriginalestimate":null,"description":"We found that the zookeeper server with version 3.4.6 failed to start for there is a empty txn log in log dir.  \nI think we should skip the empty log file during restoring the datatree. \nAny suggestion?\n\n{code}\n2015-11-27 19:16:16,887 [myid:] - ERROR [main:ZooKeeperServerMain@63] - Unexpected exception, exiting abnormally\njava.io.EOFException\nat java.io.DataInputStream.readInt(DataInputStream.java:392)\nat org.apache.jute.BinaryInputArchive.readInt(BinaryInputArchive.java:63)\nat org.apache.zookeeper.server.persistence.FileHeader.deserialize(FileHeader.java:64)\nat org.apache.zookeeper.server.persistence.FileTxnLog$FileTxnIterator.inStreamCreated(FileTxnLog.java:576)\nat org.apache.zookeeper.server.persistence.FileTxnLog$FileTxnIterator.createInputArchive(FileTxnLog.java:595)\nat org.apache.zookeeper.server.persistence.FileTxnLog$FileTxnIterator.goToNextLog(FileTxnLog.java:561)\nat org.apache.zookeeper.server.persistence.FileTxnLog$FileTxnIterator.next(FileTxnLog.java:643)\nat org.apache.zookeeper.server.persistence.FileTxnSnapLog.restore(FileTxnSnapLog.java:158)\nat org.apache.zookeeper.server.ZKDatabase.loadDataBase(ZKDatabase.java:223)\nat org.apache.zookeeper.server.ZooKeeperServer.loadData(ZooKeeperServer.java:272)\nat org.apache.zookeeper.server.ZooKeeperServer.startdata(ZooKeeperServer.java:399)\nat org.apache.zookeeper.server.NIOServerCnxnFactory.startup(NIOServerCnxnFactory.java:122)\nat org.apache.zookeeper.server.ZooKeeperServerMain.runFromConfig(ZooKeeperServerMain.java:113)\nat org.apache.zookeeper.server.ZooKeeperServerMain.initializeAndRun(ZooKeeperServerMain.java:86)\nat org.apache.zookeeper.server.ZooKeeperServerMain.main(ZooKeeperServerMain.java:52)\nat org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:116)\nat org.apache.zookeeper.server.quorum.QuorumPeerMain.main(QuorumPeerMain.java:78)\n{code}","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12774789","id":"12774789","filename":"ZOOKEEPER-2332-v001.diff","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=liushaohui","name":"liushaohui","key":"liushaohui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Liu Shaohui","active":true,"timeZone":"Etc/UTC"},"created":"2015-11-30T09:34:17.587+0000","size":2395,"mimeType":"text/x-diff","content":"https://issues.apache.org/jira/secure/attachment/12774789/ZOOKEEPER-2332-v001.diff"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Zookeeper failed to start for empty txn log","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=liushaohui","name":"liushaohui","key":"liushaohui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Liu Shaohui","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=liushaohui","name":"liushaohui","key":"liushaohui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Liu Shaohui","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12916641/comment/15031549","id":"15031549","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=liushaohui","name":"liushaohui","key":"liushaohui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Liu Shaohui","active":true,"timeZone":"Etc/UTC"},"body":"First patch to fix this issue.\n\n[~rgs]\nCould you help to review this small patch? Thanks a lot.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=liushaohui","name":"liushaohui","key":"liushaohui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Liu Shaohui","active":true,"timeZone":"Etc/UTC"},"created":"2015-11-30T09:34:17.603+0000","updated":"2015-11-30T09:34:17.603+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12916641/comment/15031589","id":"15031589","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"+1 overall.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12774789/ZOOKEEPER-2332-v001.diff\n  against trunk revision 1715590.\n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 3 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2969//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2969//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2969//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2015-11-30T09:53:28.900+0000","updated":"2015-11-30T09:53:28.900+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12916641/comment/15043513","id":"15043513","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rgs","name":"rgs","key":"rgs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rgs&avatarId=18469","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rgs&avatarId=18469","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rgs&avatarId=18469","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rgs&avatarId=18469"},"displayName":"Raul Gutierrez Segales","active":true,"timeZone":"America/Los_Angeles"},"body":"[~liushaohui]: how did the empty txnlog happened in the first place? I am bit worried that by doing this we might introduce inconsistencies... If a txnlog is corrupted, we should just give up.\n\n[~fpj], [~rakeshr]: thoughts?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rgs","name":"rgs","key":"rgs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rgs&avatarId=18469","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rgs&avatarId=18469","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rgs&avatarId=18469","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rgs&avatarId=18469"},"displayName":"Raul Gutierrez Segales","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-12-05T21:27:04.990+0000","updated":"2015-12-05T21:27:04.990+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12916641/comment/15043514","id":"15043514","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rgs","name":"rgs","key":"rgs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rgs&avatarId=18469","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rgs&avatarId=18469","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rgs&avatarId=18469","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rgs&avatarId=18469"},"displayName":"Raul Gutierrez Segales","active":true,"timeZone":"America/Los_Angeles"},"body":"Actually, I am very worried - not a little :-)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rgs","name":"rgs","key":"rgs","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rgs&avatarId=18469","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rgs&avatarId=18469","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rgs&avatarId=18469","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rgs&avatarId=18469"},"displayName":"Raul Gutierrez Segales","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-12-05T21:28:30.507+0000","updated":"2015-12-05T21:28:30.507+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12916641/comment/15043541","id":"15043541","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"We add a header to each txn log file, so if it is missing, then I assume the server crashed before it had a chance to write it. It might be ok to skip this file, but I need to think a bit about corner cases.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2015-12-05T22:27:51.187+0000","updated":"2015-12-05T22:27:51.187+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12916641/comment/15044328","id":"15044328","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=liushaohui","name":"liushaohui","key":"liushaohui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Liu Shaohui","active":true,"timeZone":"Etc/UTC"},"body":"[~rgs]\n{quote}\nhow did the empty txnlog happened in the first place?\n{quote}\nThe zookeeper server was killed after creating a new txn log file before flushing the log header to the log.\nSo a txn log is left without a valid header and makes the the zookeeper server fail to start.\nSee: FileTxnLog.java#207\n{code}\n            if (logStream==null) {\n               if(LOG.isInfoEnabled()){\n                    LOG.info(\"Creating new log file: log.\" +  \n                            Long.toHexString(hdr.getZxid()));\n               }\n               \n               logFileWrite = new File(logDir, (\"log.\" + \n                       Long.toHexString(hdr.getZxid())));\n               fos = new FileOutputStream(logFileWrite);\n               logStream=new BufferedOutputStream(fos);\n               oa = BinaryOutputArchive.getArchive(logStream);\n               FileHeader fhdr = new FileHeader(TXNLOG_MAGIC,VERSION, dbId);\n               fhdr.serialize(oa, \"fileheader\");\n               // Make sure that the magic number is written before padding.\n               logStream.flush();\n               currentSize = fos.getChannel().position();\n               streamsToFlush.add(fos);\n            }\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=liushaohui","name":"liushaohui","key":"liushaohui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Liu Shaohui","active":true,"timeZone":"Etc/UTC"},"created":"2015-12-07T03:47:26.064+0000","updated":"2015-12-07T03:47:26.064+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12916641/comment/15044420","id":"15044420","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh R","active":true,"timeZone":"Asia/Kolkata"},"body":"Thanks [~liushaohui] for working on this. Yes, an empty file would be created with the statement {{fos = new FileOutputStream(logFileWrite);}}. I'm just adding one more case [FileSnap.java#L225|https://github.com/apache/zookeeper/blob/trunk/src/java/main/org/apache/zookeeper/server/persistence/FileSnap.java#L225] of empty snapshot file creation. Skipping the empty file is an easy approach, here we need to see cases like, file is corrupted and becomes empty etc.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh R","active":true,"timeZone":"Asia/Kolkata"},"created":"2015-12-07T06:07:51.163+0000","updated":"2015-12-07T06:07:51.163+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12916641/comment/15045593","id":"15045593","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. The zookeeper server was killed after creating a new txn log file before flushing the log header to the log.\n\nThis sounds like a case where we should rely on an atomicity guarantee from the file system to make sure that the new log file is committed in a consistent state.  For example:\n\n# Create new log file named log.<zxid>.new.\n# Write and flush header.\n# Atomically rename log.<zxid>.new to log.<zxid>.\n\nThis would ensure that any file named log.\\* that is not named log.\\*.new is a valid transaction log file containing at least a complete header.  After that, the pre-existing log file padding and checksumming logic should be sufficient to protect against things like a partially serialized transaction.  At read time, the code can self-recover from prior errors by ignoring and deleting leftover \"uncommitted\" log.\\*.new files.\n\nI think this would be less brittle than trying to detect a bad log file at load time.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-12-07T19:59:26.490+0000","updated":"2015-12-07T19:59:26.490+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12916641/comment/15046315","id":"15046315","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh R","active":true,"timeZone":"Asia/Kolkata"},"body":"bq. This sounds like a case where we should rely on an atomicity guarantee from the file system to make sure that the new log file is committed in a consistent state.\nIts a good point. How about using {{org.apache.zookeeper.common.AtomicFileOutputStream}}, which will be helpful to ensure atomicity. While writing the file its using a temporary file, {{.tmp}} suffix and finally renames to original file.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh R","active":true,"timeZone":"Asia/Kolkata"},"created":"2015-12-08T04:07:43.513+0000","updated":"2015-12-08T04:07:43.513+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12916641/comment/15046409","id":"15046409","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"Yes, something similar to {{AtomicFileOutputStream}} would work well.  The current implementation of {{AtomicFileOutputStream}} isn't an exact fit for this, because the \"commit\" is tightly coupled to closing the file.  In this case, we'd want to commit (atomically rename) without closing the file, so that we can keep appending transactions to the open log file.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-12-08T05:48:26.311+0000","updated":"2015-12-08T05:48:26.311+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12916641/comment/15167862","id":"15167862","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"+1 overall.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12774789/ZOOKEEPER-2332-v001.diff\n  against trunk revision 1729259.\n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 3 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3049//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3049//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3049//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-02-25T20:55:20.264+0000","updated":"2016-02-25T20:55:20.264+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12916641/comment/15589719","id":"15589719","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=evolvah","name":"evolvah","key":"evolvah","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=evolvah&avatarId=26976","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=evolvah&avatarId=26976","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=evolvah&avatarId=26976","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=evolvah&avatarId=26976"},"displayName":"Sergey Maslyakov","active":true,"timeZone":"America/Chicago"},"body":"I've seen this problem happen on a system that ran out of disk space due to other application filling up the disk. The entry for the transaction log file was created on the file system but ZooKeeper was not able to write anything into it. After the system was rebooted and disk space was released, ZooKeeper failed to start.\n\nI think this is a two-fold problem.\n# On one hand, ZooKeeper should not be creating corrupted log or snapshot files.\n# On the other hand, it should not explode with an unhandled exception if it does come across an invalid log file.\n\nBefore opening a snapshot file, ZooKeeper does some quick and inexpensive validation and rejects the corrupted snapshots. It does not validate the log files and does not handle read/parse errors in case if came across a corrupted log file.\n\nThe defect is reproducible on the heads of master, branch-3.5, and branch-3.4.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=evolvah","name":"evolvah","key":"evolvah","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=evolvah&avatarId=26976","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=evolvah&avatarId=26976","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=evolvah&avatarId=26976","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=evolvah&avatarId=26976"},"displayName":"Sergey Maslyakov","active":true,"timeZone":"America/Chicago"},"created":"2016-10-19T20:00:40.919+0000","updated":"2016-10-19T20:00:40.919+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12916641/comment/15589773","id":"15589773","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"+1 overall.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12774789/ZOOKEEPER-2332-v001.diff\n  against trunk revision cef5978969bedfe066f903834a9ea4af6d508844.\n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 3 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3494//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3494//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3494//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-10-19T20:29:50.218+0000","updated":"2016-10-19T20:29:50.218+0000"}],"maxResults":13,"total":13,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-2332/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i2p0fr:"}}