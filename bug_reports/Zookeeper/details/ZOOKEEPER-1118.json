{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12512918","self":"https://issues.apache.org/jira/rest/api/2/issue/12512918","key":"ZOOKEEPER-1118","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310801","id":"12310801","key":"ZOOKEEPER","name":"ZooKeeper","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310801&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310801&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310801&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310801&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10484","id":"10484","description":"Apache ZooKeeper related","name":"ZooKeeper"}},"fixVersions":[],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/3","id":"3","description":"The problem is a duplicate of an existing issue.","name":"Duplicate"},"customfield_12312322":null,"customfield_12310220":"2011-07-06T13:32:33.903+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Thu Jul 07 01:11:17 UTC 2011","customfield_12310420":"3992","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_38184004_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2011-07-06T13:32:55.063+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-1118/watchers","watchCount":0,"isWatching":false},"created":"2011-07-06T02:56:31.075+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.svg","name":"Critical","id":"2"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315108","id":"12315108","description":"Fix release against 3.3 branch","name":"3.3.2","archived":false,"released":true,"releaseDate":"2010-11-11"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-07-07T01:11:17.778+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312379","id":"12312379","name":"quorum","description":"Quorum determination for ZooKeeper"}],"timeoriginalestimate":null,"description":"I think there is a bug when Follower try to sync data with Leader.\nAssume there are some operations committed during one server had been crashed. When the server restart, it will receive a NEWLEADER packet which include the last zxid of leader and the server will set its own lastProcessZxid to the leader's. \n{code:title=Follower.java|borderStyle=solid}\nvoid followLeader() throws InterruptedException {\n    fzk.registerJMX(new FollowerBean(this, zk), self.jmxLocalPeerBean);\n    try {\n        InetSocketAddress addr = findLeader();\n        try {\n            connectToLeader(addr);\n            long newLeaderZxid = registerWithLeader(Leader.FOLLOWERINFO);  // get the last zxid from leader\n            //check to see if the leader zxid is lower than ours                                                                                          \n            //this should never happen but is just a safety check                                                                                         \n            long lastLoggedZxid = self.getLastLoggedZxid();\n            if ((newLeaderZxid >> 32L) < (lastLoggedZxid >> 32L)) {\n                LOG.fatal(\"Leader epoch \" + Long.toHexString(newLeaderZxid >> 32L)\n                        + \" is less than our epoch \" + Long.toHexString(lastLoggedZxid >> 32L));\n                throw new IOException(\"Error: Epoch of leader is lower\");\n            }\n            syncWithLeader(newLeaderZxid);   // set its own lastProcessZxid to leader's last zxid\n{code}\n\nThen, some COMMIT packets will be received by the server in order to sync the data with leader. And then, the leader will send an UPTODATE packet to server to take a snapshot. \n{code:title=Follower.java|borderStyle=solid}\nprotected void processPacket(QuorumPacket qp) throws IOException{\n    switch (qp.getType()) {\n    case Leader.PING:\n        ping(qp);\n        break;\n    case Leader.PROPOSAL:\n        TxnHeader hdr = new TxnHeader();\n        BinaryInputArchive ia = BinaryInputArchive\n        .getArchive(new ByteArrayInputStream(qp.getData()));\n        Record txn = SerializeUtils.deserializeTxn(ia, hdr);\n        if (hdr.getZxid() != lastQueued + 1) {\n            LOG.warn(\"Got zxid 0x\"\n                    + Long.toHexString(hdr.getZxid())\n                    + \" expected 0x\"\n                    + Long.toHexString(lastQueued + 1));\n        }\n        lastQueued = hdr.getZxid();\n        fzk.logRequest(hdr, txn);\n        break;\n    case Leader.COMMIT:\n        fzk.commit(qp.getZxid());\n        break;\n    case Leader.UPTODATE:\n        fzk.takeSnapshot();\n        self.cnxnFactory.setZooKeeperServer(fzk);\n        break;\n    case Leader.REVALIDATE:\n        revalidate(qp);\n        break;\n    case Leader.SYNC:\n        fzk.sync();\n        break;\n    }\n}\n{code}\nNotice the different way the Follower treat the COMMIT and the UPTODATE packets. When receives a COMMIT packet, the follower will give this to a processor to deal with. But if receives a UPTODATE packet, the follower will take a snapshot immediately. So it is possible that the server will take snapshot before it commits all the operations it missed. Then if the server crashed again and recoveredï¼Œ it will recover its data from the snapshot, so the date inconsistent with the leader now, but its last zxid is the same. ","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"32711","customfield_12312823":null,"summary":"Inconsistent data after server crashes several times","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ykt836","name":"ykt836","key":"ykt836","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kurt Young","active":true,"timeZone":"Asia/Shanghai"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ykt836","name":"ykt836","key":"ykt836","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kurt Young","active":true,"timeZone":"Asia/Shanghai"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":"Redhat RHEL5","customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12512918/comment/13060572","id":"13060572","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"body":"We fixed a number of issues in this space in the 3.3.3 release. I believe this is one of them. Please see ZOOKEEPER-962.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fournc","name":"fournc","key":"fournc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Camille Fournier","active":true,"timeZone":"Etc/UTC"},"created":"2011-07-06T13:32:33.903+0000","updated":"2011-07-06T13:32:33.903+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12512918/comment/13060972","id":"13060972","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ykt836","name":"ykt836","key":"ykt836","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kurt Young","active":true,"timeZone":"Asia/Shanghai"},"body":"Thanks, I will try 3.3.3","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ykt836","name":"ykt836","key":"ykt836","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kurt Young","active":true,"timeZone":"Asia/Shanghai"},"created":"2011-07-07T01:11:17.666+0000","updated":"2011-07-07T01:11:17.666+0000"}],"maxResults":2,"total":2,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-1118/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i05yn3:"}}