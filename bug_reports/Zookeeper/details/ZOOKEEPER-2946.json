{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13119886","self":"https://issues.apache.org/jira/rest/api/2/issue/13119886","key":"ZOOKEEPER-2946","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310801","id":"12310801","key":"ZOOKEEPER","name":"ZooKeeper","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310801&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310801&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310801&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310801&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10484","id":"10484","description":"Apache ZooKeeper related","name":"ZooKeeper"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":null,"customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Mon Nov 27 19:29:08 UTC 2017","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-2946/watchers","watchCount":2,"isWatching":false},"created":"2017-11-21T10:06:58.342+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12339207","id":"12339207","description":"Fix release against 3.4 branch","name":"3.4.11","archived":false,"released":true,"releaseDate":"2017-11-09"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12342040","id":"12342040","description":"Fix release against 3.4 branch","name":"3.4.12","archived":false,"released":true,"releaseDate":"2018-05-01"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2017-11-27T19:29:08.117+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[],"timeoriginalestimate":null,"description":"The truncate() function in FileTxnLog.java may fail to properly remove the uncommitted write. This happens when the follower that has the uncommitted writes tries to resync with the leader after a few epochs have past. The failure results in data inconsistency in the in-memory data tree across nodes. Here is one procedure to reproduce the inconsistency. \r\n\r\nInitially:\r\n# Start the ensemble with three nodes: node 0, 1 and 2 (the node 2 is the leader)\r\n# Create 5 znodes with initial values as follow (key = value)\r\n{noformat}\r\n/testDivergenceResync0 = 0\r\n/testDivergenceResync1 = 1\r\n/testDivergenceResync2 = 2\r\n/testDivergenceResync3 = 3\r\n/testDivergenceResync4 = 4\r\n{noformat}\r\n\r\nTo Reproduce:\r\n# Diverge the node 2\r\na. Shutdown the node 0 and 1\r\nb. Async setData to the node 2 writing 1000 to the key ‘/testDivergenceResync0’\r\nc. Shutdown the node 2\r\n# Restart the node 0 and 1 (let them finish with resync)\r\n# Diverge the node 1\r\na. Shutdown the node 0\r\nb. Async setData to the node 1 writing 1001 to the key ‘/testDivergenceResync1’\r\nc. Shutdown the node 1\r\n# Restart the node 0, 1 and 2 (let them finish with resync)\r\n# Diverge the node 2\r\na. Shutdown the node 0 and 1\r\nb. Async setData to the node 2 writing 1002 to the key ‘/testDivergenceResync2’\r\nc. Shutdown the node 2\r\n# Restart the node 0 and 2 (let them finish with resync)\r\n# Diverge the node 2\r\na. Shutdown the node 0\r\nb. Async setData to the node 2 writing 1003 to the key ‘/testDivergenceResync3’\r\nc. Shutdown the node 2\r\n# Restart the node 0 and 1 (let them finish with resync)\r\n# Diverge the node 1\r\na. Shutdown the node 0\r\nb. Async setData to the node 1 writing 1004 to the key ‘/testDivergenceResync4’\r\nc. Shutdown the node 1\r\n# Restart the node 0 and 2 (let them finish with resync)\r\n# Restart the node 1 (let it finish with resync)\r\n\r\nReading each key from each node directly will give us the output:\r\n{noformat}\r\n/testDivergenceResync0 on the node 0 = 0\r\n/testDivergenceResync0 on the node 1 = 0\r\n/testDivergenceResync0 on the node 2 = 0\r\n/testDivergenceResync1 on the node 0 = 1001\r\n/testDivergenceResync1 on the node 1 = 1001\r\n/testDivergenceResync1 on the node 2 = 1001\r\n/testDivergenceResync2 on the node 0 = 2\r\n/testDivergenceResync2 on the node 1 = 2\r\n/testDivergenceResync2 on the node 2 = 2\r\n/testDivergenceResync3 on the node 0 = 3\r\n/testDivergenceResync3 on the node 1 = 3\r\n/testDivergenceResync3 on the node 2 = 1003\r\n/testDivergenceResync4 on the node 0 = 1004\r\n/testDivergenceResync4 on the node 1 = 1004\r\n/testDivergenceResync4 on the node 2 = 1004\r\n{noformat}\r\nThus, the value of key /testDivergenceResync3 is inconsistent across nodes.\r\n\r\nWhat seems to happen:\r\n# At the step 7, setData (at zxid 0x400000001) writing value 1003 is committed on the node 2.\r\n{panel:title=Log from the node 2:}\r\n...\r\n2017-11-16 03:08:14,123 [myid:2] - DEBUG [ProcessThread(sid:2 cport:-1)::CommitProcessor@174] - Processing request:: sessionid:0x2000117327c0000 type:setData cxid:0x4 zxid:0x400000001 txntype:5 reqpath:n/a\r\n2017-11-16 03:08:14,124 [myid:2] - DEBUG [ProcessThread(sid:2 cport:-1)::Leader@787] - Proposing:: sessionid:0x2000117327c0000 type:setData cxid:0x4 zxid:0x400000001 txntype:5 reqpath:n/a\r\n2017-11-16 03:08:14,124 [myid:2] - INFO  [SyncThread:2:FileTxnLog@209] - Creating new log file: log.400000001\r\n2017-11-16 03:08:14,188 [myid:2] - DEBUG [SyncThread:2:Leader@600] - Count for zxid: 0x400000001 is 1\r\n2017-11-16 03:08:15,752 [myid:2] - INFO  [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:Leader@512] - Shutting down\r\n2017-11-16 03:08:15,753 [myid:2] - INFO  [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:Leader@518] - Shutdown called\r\njava.lang.Exception: shutdown Leader! reason: Not sufficient followers synced, only synced with sids: [ 2 ]\r\n...\r\n{panel}\r\n# At the step 10, the node 2 is restarted and supposed to be properly resync’ed with the node 0 which is the leader.\r\n    a. The node 0 sends TRUNC msg so that the node 2 can truncate the setData at zxid 0x400000001.. \r\n    b. On the other hand, the node 2 tries to truncate log to get in sync with the leader 0x200000001. However, the node 2 failed to properly truncate the setData at zxid 0x400000001. So, even if resync was finished, the value 1003 is still remained intact on the node 2 while other nodes have value 3 for the same key.\r\n    c. It seems on the node 2, there is only log.100000001 and log.400000001 but no log.200000001. This seems to cause failing to delete log.400000001 during truncate(). It looks like we will be considering log.400000001 by the time returning from the init() of FileTxnLog.java so that we will never execute ‘itr.logFile.delete()’ for the log.400000001. \r\n   d. Then, after returning from the truncate(), loadDatabase() will be invoked and log.400000001 will be read and the setData at zxid 0x400000001 gets loaded into the in-memory data tree.\r\n{panel:title=Log from the node 2:}\r\n...\r\n2017-11-16 03:08:59,051 [myid:2] - INFO  [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:Follower@65] - FOLLOWING - LEADER ELECTION TOOK - 215\r\n2017-11-16 03:08:59,052 [myid:2] - INFO  [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:QuorumPeer$QuorumServer@184] - Resolved hostname: 127.0.0.1 to address: /127.0.0.1\r\n2017-11-16 03:08:59,125 [myid:2] - WARN  [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:Learner@349] - Truncating log to get in sync with the leader 0x200000001\r\n2017-11-16 03:08:59,125 [myid:2] - DEBUG [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:FileTxnLog$FileTxnIterator@606] - Created new input stream /home/ben/project/strata/test-5-3-ZooKeeper-3.4.11-strata-0.1/data/2/version-2/log.100000001\r\n2017-11-16 03:08:59,125 [myid:2] - DEBUG [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:FileTxnLog$FileTxnIterator@609] - Created new input archive /home/ben/project/strata/test-5-3-ZooKeeper-3.4.11-strata-0.1/data/2/version-2/log.100000001\r\n2017-11-16 03:08:59,126 [myid:2] - DEBUG [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:FileTxnLog$FileTxnIterator@647] - EOF excepton java.io.EOFException\r\n2017-11-16 03:08:59,126 [myid:2] - DEBUG [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:FileTxnLog$FileTxnIterator@606] - Created new input stream /home/ben/project/strata/test-5-3-ZooKeeper-3.4.11-strata-0.1/data/2/version-2/log.400000001\r\n2017-11-16 03:08:59,126 [myid:2] - DEBUG [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:FileTxnLog$FileTxnIterator@609] - Created new input archive /home/ben/project/strata/test-5-3-ZooKeeper-3.4.11-strata-0.1/data/2/version-2/log.400000001\r\n2017-11-16 03:08:59,126 [myid:2] - INFO  [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:FileSnap@83] - Reading snapshot /home/ben/project/strata/test-5-3-ZooKeeper-3.4.11-strata-0.1/data/2/version-2/snapshot.200000001\r\n2017-11-16 03:08:59,127 [myid:2] - DEBUG [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:FileTxnLog$FileTxnIterator@606] - Created new input stream /home/ben/project/strata/test-5-3-ZooKeeper-3.4.11-strata-0.1/data/2/version-2/log.100000001\r\n2017-11-16 03:08:59,127 [myid:2] - DEBUG [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:FileTxnLog$FileTxnIterator@609] - Created new input archive /home/ben/project/strata/test-5-3-ZooKeeper-3.4.11-strata-0.1/data/2/version-2/log.100000001\r\n2017-11-16 03:08:59,128 [myid:2] - DEBUG [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:FileTxnLog$FileTxnIterator@647] - EOF excepton java.io.EOFException\r\n2017-11-16 03:08:59,128 [myid:2] - DEBUG [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:FileTxnLog$FileTxnIterator@606] - Created new input stream /home/ben/project/strata/test-5-3-ZooKeeper-3.4.11-strata-0.1/data/2/version-2/log.400000001\r\n2017-11-16 03:08:59,128 [myid:2] - DEBUG [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:FileTxnLog$FileTxnIterator@609] - Created new input archive /home/ben/project/strata/test-5-3-ZooKeeper-3.4.11-strata-0.1/data/2/version-2/log.400000001\r\n2017-11-16 03:08:59,128 [myid:2] - DEBUG [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:FileTxnLog$FileTxnIterator@647] - EOF excepton java.io.EOFException\r\n2017-11-16 03:08:59,131 [myid:2] - WARN  [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:Learner@387] - Got zxid 0x500000001 expected 0x1\r\n2017-11-16 03:08:59,132 [myid:2] - INFO  [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:FileTxnSnapLog@248] - Snapshotting: 0x500000004 to /home/ben/project/strata/test-5-3-ZooKeeper-3.4.11-strata-0.1/data/2/version-2/snapshot.500000004\r\n...\r\n{panel}\r\n{panel:title=Log from the node 0:}\r\n...\r\n2017-11-16 03:08:59,050 [myid:0] - INFO  [QuorumPeer[myid=0]/0:0:0:0:0:0:0:0:11221:Leader@372] - LEADING - LEADER ELECTION TOOK - 222\r\n2017-11-16 03:08:59,055 [myid:0] - INFO  [LearnerHandler-/127.0.0.1:54482:LearnerHandler@346] - Follower sid: 2 : info : org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer@266e422\r\n2017-11-16 03:08:59,124 [myid:0] - INFO  [LearnerHandler-/127.0.0.1:54482:LearnerHandler@401] - Synchronizing with Follower sid: 2 maxCommittedLog=0x500000004 minCommittedLog=0x100000001 peerLastZxid=0x400000001\r\n2017-11-16 03:08:59,124 [myid:0] - DEBUG [LearnerHandler-/127.0.0.1:54482:LearnerHandler@415] - proposal size is 14\r\n2017-11-16 03:08:59,124 [myid:0] - DEBUG [LearnerHandler-/127.0.0.1:54482:LearnerHandler@418] - Sending proposals to follower\r\n2017-11-16 03:08:59,124 [myid:0] - INFO  [LearnerHandler-/127.0.0.1:54482:LearnerHandler@475] - Sending TRUNC\r\n2017-11-16 03:08:59,147 [myid:0] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11221:NIOServerCnxnFactory@215] - Accepted socket connection from /127.0.0.1:55118\r\n2017-11-16 03:08:59,184 [myid:0] - WARN  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11221:NIOServerCnxn@383] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2017-11-16 03:08:59,184 [myid:0] - DEBUG [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11221:NIOServerCnxn@386] - IOException stack trace\r\njava.io.IOException: ZooKeeperServer not running\r\n        at org.apache.zookeeper.server.NIOServerCnxn.readLength(NIOServerCnxn.java:977)\r\n        at org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:257)\r\n        at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:226)\r\n        at java.lang.Thread.run(Thread.java:745)\r\n2017-11-16 03:08:59,184 [myid:0] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11221:NIOServerCnxn@1040] - Closed socket connection for client /127.0.0.1:55118 (no session established for client)\r\n2017-11-16 03:08:59,224 [myid:0] - INFO  [LearnerHandler-/127.0.0.1:54482:LearnerHandler@535] - Received NEWLEADER-ACK message from 2\r\n2017-11-16 03:08:59,224 [myid:0] - INFO  [QuorumPeer[myid=0]/0:0:0:0:0:0:0:0:11221:Leader@962] - Have quorum of supporters, sids: [ 0,2 ]; starting up and setting last processed zxid: 0x600000000\r\n...\r\n{panel}","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12899475","id":"12899475","filename":"zookeeper-2946.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=benkim","name":"benkim","key":"benkim","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Beom Heyn Kim","active":true,"timeZone":"America/Toronto"},"created":"2017-11-27T19:24:02.796+0000","size":865,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12899475/zookeeper-2946.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"The truncate() function in FileTxnLog.java may fail to properly remove an uncommitted write resulting in data inconsistency","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=benkim","name":"benkim","key":"benkim","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Beom Heyn Kim","active":true,"timeZone":"America/Toronto"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=benkim","name":"benkim","key":"benkim","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Beom Heyn Kim","active":true,"timeZone":"America/Toronto"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13119886/comment/16267312","id":"16267312","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=benkim","name":"benkim","key":"benkim","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Beom Heyn Kim","active":true,"timeZone":"America/Toronto"},"body":"When the follower receives TRUNC from the leader, it is possible that there is no transaction log at the given zxid (it is possible the given zxid is captured by snapshot but not by the transaction log). It still needs to delete the transactions that are not committed and newer than the zxid sent by the leader. The patch tries to check if it is currently considering the file that is newer than the zxid and try to delete it before the while loop in the function truncate(long zxid) in the FileTxnLog.java.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=benkim","name":"benkim","key":"benkim","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Beom Heyn Kim","active":true,"timeZone":"America/Toronto"},"created":"2017-11-27T19:29:08.104+0000","updated":"2017-11-27T19:29:08.104+0000"}],"maxResults":1,"total":1,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-2946/votes","votes":1,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i3n1gn:"}}