{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13141899","self":"https://issues.apache.org/jira/rest/api/2/issue/13141899","key":"ZOOKEEPER-2988","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310801","id":"12310801","key":"ZOOKEEPER","name":"ZooKeeper","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310801&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310801&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310801&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310801&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10484","id":"10484","description":"Apache ZooKeeper related","name":"ZooKeeper"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12340141","id":"12340141","description":"Beta release against 3.5 branch","name":"3.5.4","archived":false,"released":true,"releaseDate":"2018-05-17"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12326518","id":"12326518","name":"3.6.0","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12342973","id":"12342973","description":"Fix release against 3.4 branch","name":"3.4.13","archived":false,"released":true,"releaseDate":"2018-07-17"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2018-03-01T20:29:48.107+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Wed May 02 06:10:06 UTC 2018","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_5127436528_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2018-04-30T04:35:29.567+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-2988/watchers","watchCount":3,"isWatching":false},"created":"2018-03-01T20:18:13.083+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.svg","name":"Minor","id":"4"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12335444","id":"12335444","description":"Beta release against 3.5 branch","name":"3.5.3","archived":false,"released":true,"releaseDate":"2017-04-17"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12339207","id":"12339207","description":"Fix release against 3.4 branch","name":"3.4.11","archived":false,"released":true,"releaseDate":"2017-11-09"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12342040","id":"12342040","description":"Fix release against 3.4 branch","name":"3.4.12","archived":false,"released":true,"releaseDate":"2018-05-01"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=nixon","name":"nixon","key":"nixon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Nixon","active":true,"timeZone":"Etc/UTC"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2018-07-17T04:49:57.019+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312378","id":"12312378","name":"leaderElection","description":"Leader election algorithm for ZooKeeper"}],"timeoriginalestimate":null,"description":"We've observed the following behavior in elections when a node is lagging behind the quorum in its view of the ensemble topology.\r\n\r\n- Node A is operating with node B in its voting view, but without view of node C.\r\n\r\n- B votes for C.\r\n\r\n- A then switches its vote to C, but throws a NPE when attempting to connect.\r\n\r\nThis causes the QuorumPeer to spin up a Follower only to immediately have it shutdown by the exception.\r\n\r\nIdeally, A would not advertise a vote for a server that it will not follow.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"NPE triggered if server receives a vote for a server id not in their voting view","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=nixon","name":"nixon","key":"nixon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Nixon","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=nixon","name":"nixon","key":"nixon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Nixon","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16382603","id":"16382603","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"GitHub user enixon opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/476\n\n    ZOOKEEPER-2988: NPE triggered if server receives a vote for a server …\n\n    …id not in their voting view\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/enixon/zookeeper ZOOKEEPER-2988\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/476.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #476\n    \n----\ncommit 1862a718168ee07287d0b9769a0f4ce20bd1bd32\nAuthor: Brian Nixon <nixon@...>\nDate:   2018-03-01T19:19:51Z\n\n    ZOOKEEPER-2988: NPE triggered if server receives a vote for a server id not in their voting view\n\n----\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-03-01T20:29:48.107+0000","updated":"2018-03-01T20:29:48.107+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16382604","id":"16382604","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"GitHub user enixon opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/477\n\n    ZOOKEEPER-2988: NPE triggered if server receives a vote for a server …\n\n    …id not in their voting view\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/enixon/zookeeper ZOOKEEPER-2988-3.5\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/477.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #477\n    \n----\ncommit a1364d8c4ec9fdf1c4210b6485a6a143c1e14f5f\nAuthor: Brian Nixon <nixon@...>\nDate:   2018-03-01T19:21:47Z\n\n    ZOOKEEPER-2988: NPE triggered if server receives a vote for a server id not in their voting view\n\n----\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-03-01T20:30:22.740+0000","updated":"2018-03-01T20:30:22.740+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16382605","id":"16382605","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"GitHub user enixon opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/478\n\n    ZOOKEEPER-2988: NPE triggered if server receives a vote for a server …\n\n    …id not in their voting view\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/enixon/zookeeper ZOOKEEPER-2988-3.4\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/478.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #478\n    \n----\ncommit 6fc857a1cfe97a46a4f453613b95f9682adcce96\nAuthor: Brian Nixon <nixon@...>\nDate:   2018-03-01T19:19:51Z\n\n    ZOOKEEPER-2988: NPE triggered if server receives a vote for a server id not in their voting view\n\n----\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-03-01T20:30:41.746+0000","updated":"2018-03-01T20:30:41.746+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16384209","id":"16384209","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/476#discussion_r171972029\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---\n    @@ -1012,4 +1012,113 @@ public void testFailedTxnAsPartOfQuorumLoss() throws Exception {\n                 Assert.assertNull(\"server \" + i + \" should not have /zk\" + leader, servers.zk[i].exists(\"/zk\" + leader, false));\n             }\n         }\n    +\n    +    /**\n    +     * Verify that a node without the leader in its view will not attempt to connect to the leader.\n    +     */\n    +    @Test\n    +    public void testLeaderOutOfView() throws Exception {\n    +        ClientBase.setupTestEnv();\n    +\n    +        Layout layout = new PatternLayout(\"%d{ISO8601} [,yid:%X{myid}] - %5p [%t:%C{1}@%L] - %m%n\");\n    +        ByteArrayOutputStream os = new ByteArrayOutputStream();\n    +        WriterAppender appender = new WriterAppender(layout, os);\n    +        appender.setThreshold(Level.DEBUG);\n    +        Logger qlogger = Logger.getLogger(\"org.apache.zookeeper.server.quorum\");\n    +        qlogger.addAppender(appender);\n    +\n    +        try {\n    +            final int CLIENT_PORT_QP1 = PortAssignment.unique();\n    +            final int CLIENT_PORT_QP2 = PortAssignment.unique();\n    +            final int CLIENT_PORT_QP3 = PortAssignment.unique();\n    +\n    +            String quorumCfgIncomplete = getUniquePortCfgForId(1) + \"\\n\" + getUniquePortCfgForId(2);\n    +            String quorumCfgComplete = quorumCfgIncomplete + \"\\n\" + getUniquePortCfgForId(3);\n    +\n    +            // Node 1 is started without the leader (3) in its config view\n    +            MainThread q1 = new MainThread(1, CLIENT_PORT_QP1, quorumCfgIncomplete);\n    +            MainThread q2 = new MainThread(2, CLIENT_PORT_QP2, quorumCfgComplete);\n    +            MainThread q3 = new MainThread(3, CLIENT_PORT_QP3, quorumCfgComplete);\n    +\n    +            // Node 1 must be started first, before quorum is formed, to trigger the attempted invalid connection to 3\n    +            q1.start();\n    +            QuorumPeer quorumPeer1 = waitForQuorumPeer(q1, CONNECTION_TIMEOUT);\n    +            Assert.assertTrue(quorumPeer1.getPeerState() == QuorumPeer.ServerState.LOOKING);\n    +\n    +            // Node 3 started second to avoid 1 and 2 forming a quorum before 3 starts up\n    +            q3.start();\n    +            QuorumPeer quorumPeer3 = waitForQuorumPeer(q3, CONNECTION_TIMEOUT);\n    +            Assert.assertTrue(quorumPeer3.getPeerState() == QuorumPeer.ServerState.LOOKING);\n    +\n    +            // Node 2 started last, kicks off leader election\n    +            q2.start();\n    +\n    +            // Nodes 2 and 3 now form quorum and fully start. 1 attempts to vote for 3, fails, returns to LOOKING state\n    +            Assert.assertTrue(\"waiting for server 2 to start\",\n    +                    ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT_QP2, CONNECTION_TIMEOUT));\n    +            Assert.assertTrue(\"waiting for server 3 to start\",\n    +                    ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT_QP3, CONNECTION_TIMEOUT));\n    +\n    +            Assert.assertTrue(q1.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LOOKING);\n    +            Assert.assertTrue(q2.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.FOLLOWING);\n    +            Assert.assertTrue(q3.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LEADING);\n    +\n    +            q1.shutdown();\n    +            q2.shutdown();\n    +            q3.shutdown();\n    +\n    +            Assert.assertTrue(\"waiting for server 1 down\",\n    +                    ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT_QP1,\n    +                            ClientBase.CONNECTION_TIMEOUT));\n    +            Assert.assertTrue(\"waiting for server 2 down\",\n    +                    ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT_QP2,\n    +                            ClientBase.CONNECTION_TIMEOUT));\n    +            Assert.assertTrue(\"waiting for server 3 down\",\n    +                    ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT_QP3,\n    +                            ClientBase.CONNECTION_TIMEOUT));\n    +\n    +        } finally {\n    +            qlogger.removeAppender(appender);\n    +        }\n    +\n    +        // Verify that Node 1 never threw an exception\n    +        LineNumberReader r = new LineNumberReader(new StringReader(os.toString()));\n    +        String line;\n    +        boolean found = false;\n    +        Pattern p = Pattern.compile(\".*java.lang.NullPointerException.*\");\n    +        while ((line = r.readLine()) != null) {\n    +            found = p.matcher(line).matches();\n    +            if (found) {\n    +                break;\n    +            }\n    +        }\n    +\n    +        Assert.assertFalse(\"Node should not attempt connection to out of view leader\", found);\n    +    }\n    +\n    +    private String getUniquePortCfgForId(int id) {\n    +        return String.format(\"server.%d=127.0.0.1:%d:%d\", id, PortAssignment.unique(), PortAssignment.unique());\n    +    }\n    +\n    +    private QuorumPeer waitForQuorumPeer(MainThread mainThread, int timeout) {\n    +        long start = Time.currentElapsedTime();\n    +        while (true) {\n    +            QuorumPeer quorumPeer = mainThread.getQuorumPeer();\n    +            if (quorumPeer != null) {\n    +                return quorumPeer;\n    +            }\n    +\n    +            if (Time.currentElapsedTime() > start + timeout) {\n    +                LOG.error(\"Timed out while waiting for QuorumPeer\");\n    +                break;\n    +            }\n    +\n    +            try {\n    +                Thread.sleep(250);\n    +            } catch (InterruptedException e) {\n    +                // ignore\n    +            }\n    +        }\n    +        throw new NullPointerException();\n    --- End diff --\n    \n    Can we use a better exception?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-03-02T21:58:00.501+0000","updated":"2018-03-02T21:58:00.501+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16384210","id":"16384210","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/476#discussion_r171972608\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---\n    @@ -1012,4 +1012,113 @@ public void testFailedTxnAsPartOfQuorumLoss() throws Exception {\n                 Assert.assertNull(\"server \" + i + \" should not have /zk\" + leader, servers.zk[i].exists(\"/zk\" + leader, false));\n             }\n         }\n    +\n    +    /**\n    +     * Verify that a node without the leader in its view will not attempt to connect to the leader.\n    +     */\n    +    @Test\n    +    public void testLeaderOutOfView() throws Exception {\n    +        ClientBase.setupTestEnv();\n    +\n    +        Layout layout = new PatternLayout(\"%d{ISO8601} [,yid:%X{myid}] - %5p [%t:%C{1}@%L] - %m%n\");\n    +        ByteArrayOutputStream os = new ByteArrayOutputStream();\n    +        WriterAppender appender = new WriterAppender(layout, os);\n    +        appender.setThreshold(Level.DEBUG);\n    +        Logger qlogger = Logger.getLogger(\"org.apache.zookeeper.server.quorum\");\n    +        qlogger.addAppender(appender);\n    +\n    +        try {\n    +            final int CLIENT_PORT_QP1 = PortAssignment.unique();\n    +            final int CLIENT_PORT_QP2 = PortAssignment.unique();\n    +            final int CLIENT_PORT_QP3 = PortAssignment.unique();\n    +\n    +            String quorumCfgIncomplete = getUniquePortCfgForId(1) + \"\\n\" + getUniquePortCfgForId(2);\n    +            String quorumCfgComplete = quorumCfgIncomplete + \"\\n\" + getUniquePortCfgForId(3);\n    +\n    +            // Node 1 is started without the leader (3) in its config view\n    +            MainThread q1 = new MainThread(1, CLIENT_PORT_QP1, quorumCfgIncomplete);\n    +            MainThread q2 = new MainThread(2, CLIENT_PORT_QP2, quorumCfgComplete);\n    +            MainThread q3 = new MainThread(3, CLIENT_PORT_QP3, quorumCfgComplete);\n    +\n    +            // Node 1 must be started first, before quorum is formed, to trigger the attempted invalid connection to 3\n    +            q1.start();\n    +            QuorumPeer quorumPeer1 = waitForQuorumPeer(q1, CONNECTION_TIMEOUT);\n    +            Assert.assertTrue(quorumPeer1.getPeerState() == QuorumPeer.ServerState.LOOKING);\n    +\n    +            // Node 3 started second to avoid 1 and 2 forming a quorum before 3 starts up\n    +            q3.start();\n    +            QuorumPeer quorumPeer3 = waitForQuorumPeer(q3, CONNECTION_TIMEOUT);\n    +            Assert.assertTrue(quorumPeer3.getPeerState() == QuorumPeer.ServerState.LOOKING);\n    +\n    +            // Node 2 started last, kicks off leader election\n    +            q2.start();\n    +\n    +            // Nodes 2 and 3 now form quorum and fully start. 1 attempts to vote for 3, fails, returns to LOOKING state\n    +            Assert.assertTrue(\"waiting for server 2 to start\",\n    +                    ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT_QP2, CONNECTION_TIMEOUT));\n    +            Assert.assertTrue(\"waiting for server 3 to start\",\n    +                    ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT_QP3, CONNECTION_TIMEOUT));\n    +\n    +            Assert.assertTrue(q1.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LOOKING);\n    +            Assert.assertTrue(q2.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.FOLLOWING);\n    +            Assert.assertTrue(q3.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LEADING);\n    +\n    +            q1.shutdown();\n    --- End diff --\n    \n    is there a way we can use the existing tearDown code. So we make sure we never leave any servers running even if an assertion fails?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-03-02T21:58:00.914+0000","updated":"2018-03-02T21:58:00.914+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16384211","id":"16384211","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/476#discussion_r171972228\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---\n    @@ -1012,4 +1012,113 @@ public void testFailedTxnAsPartOfQuorumLoss() throws Exception {\n                 Assert.assertNull(\"server \" + i + \" should not have /zk\" + leader, servers.zk[i].exists(\"/zk\" + leader, false));\n             }\n         }\n    +\n    +    /**\n    +     * Verify that a node without the leader in its view will not attempt to connect to the leader.\n    +     */\n    +    @Test\n    +    public void testLeaderOutOfView() throws Exception {\n    +        ClientBase.setupTestEnv();\n    +\n    +        Layout layout = new PatternLayout(\"%d{ISO8601} [,yid:%X{myid}] - %5p [%t:%C{1}@%L] - %m%n\");\n    +        ByteArrayOutputStream os = new ByteArrayOutputStream();\n    +        WriterAppender appender = new WriterAppender(layout, os);\n    +        appender.setThreshold(Level.DEBUG);\n    +        Logger qlogger = Logger.getLogger(\"org.apache.zookeeper.server.quorum\");\n    +        qlogger.addAppender(appender);\n    +\n    +        try {\n    +            final int CLIENT_PORT_QP1 = PortAssignment.unique();\n    +            final int CLIENT_PORT_QP2 = PortAssignment.unique();\n    +            final int CLIENT_PORT_QP3 = PortAssignment.unique();\n    +\n    +            String quorumCfgIncomplete = getUniquePortCfgForId(1) + \"\\n\" + getUniquePortCfgForId(2);\n    +            String quorumCfgComplete = quorumCfgIncomplete + \"\\n\" + getUniquePortCfgForId(3);\n    +\n    +            // Node 1 is started without the leader (3) in its config view\n    +            MainThread q1 = new MainThread(1, CLIENT_PORT_QP1, quorumCfgIncomplete);\n    +            MainThread q2 = new MainThread(2, CLIENT_PORT_QP2, quorumCfgComplete);\n    +            MainThread q3 = new MainThread(3, CLIENT_PORT_QP3, quorumCfgComplete);\n    +\n    +            // Node 1 must be started first, before quorum is formed, to trigger the attempted invalid connection to 3\n    +            q1.start();\n    +            QuorumPeer quorumPeer1 = waitForQuorumPeer(q1, CONNECTION_TIMEOUT);\n    +            Assert.assertTrue(quorumPeer1.getPeerState() == QuorumPeer.ServerState.LOOKING);\n    +\n    +            // Node 3 started second to avoid 1 and 2 forming a quorum before 3 starts up\n    +            q3.start();\n    +            QuorumPeer quorumPeer3 = waitForQuorumPeer(q3, CONNECTION_TIMEOUT);\n    +            Assert.assertTrue(quorumPeer3.getPeerState() == QuorumPeer.ServerState.LOOKING);\n    +\n    +            // Node 2 started last, kicks off leader election\n    +            q2.start();\n    +\n    +            // Nodes 2 and 3 now form quorum and fully start. 1 attempts to vote for 3, fails, returns to LOOKING state\n    +            Assert.assertTrue(\"waiting for server 2 to start\",\n    +                    ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT_QP2, CONNECTION_TIMEOUT));\n    +            Assert.assertTrue(\"waiting for server 3 to start\",\n    +                    ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT_QP3, CONNECTION_TIMEOUT));\n    +\n    +            Assert.assertTrue(q1.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LOOKING);\n    +            Assert.assertTrue(q2.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.FOLLOWING);\n    +            Assert.assertTrue(q3.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LEADING);\n    +\n    +            q1.shutdown();\n    +            q2.shutdown();\n    +            q3.shutdown();\n    +\n    +            Assert.assertTrue(\"waiting for server 1 down\",\n    +                    ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT_QP1,\n    +                            ClientBase.CONNECTION_TIMEOUT));\n    +            Assert.assertTrue(\"waiting for server 2 down\",\n    +                    ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT_QP2,\n    +                            ClientBase.CONNECTION_TIMEOUT));\n    +            Assert.assertTrue(\"waiting for server 3 down\",\n    +                    ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT_QP3,\n    +                            ClientBase.CONNECTION_TIMEOUT));\n    +\n    +        } finally {\n    +            qlogger.removeAppender(appender);\n    +        }\n    +\n    +        // Verify that Node 1 never threw an exception\n    +        LineNumberReader r = new LineNumberReader(new StringReader(os.toString()));\n    +        String line;\n    +        boolean found = false;\n    +        Pattern p = Pattern.compile(\".*java.lang.NullPointerException.*\");\n    +        while ((line = r.readLine()) != null) {\n    +            found = p.matcher(line).matches();\n    +            if (found) {\n    +                break;\n    +            }\n    +        }\n    +\n    +        Assert.assertFalse(\"Node should not attempt connection to out of view leader\", found);\n    +    }\n    +\n    +    private String getUniquePortCfgForId(int id) {\n    +        return String.format(\"server.%d=127.0.0.1:%d:%d\", id, PortAssignment.unique(), PortAssignment.unique());\n    +    }\n    +\n    +    private QuorumPeer waitForQuorumPeer(MainThread mainThread, int timeout) {\n    --- End diff --\n    \n    I believe this has the potential to be flaky since we can return `quorumPeer` before the thread actually starts. We should ensure that the thread started.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-03-02T21:58:00.917+0000","updated":"2018-03-02T21:58:00.917+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16384212","id":"16384212","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/476#discussion_r171970721\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---\n    @@ -1012,4 +1012,113 @@ public void testFailedTxnAsPartOfQuorumLoss() throws Exception {\n                 Assert.assertNull(\"server \" + i + \" should not have /zk\" + leader, servers.zk[i].exists(\"/zk\" + leader, false));\n             }\n         }\n    +\n    +    /**\n    +     * Verify that a node without the leader in its view will not attempt to connect to the leader.\n    +     */\n    +    @Test\n    +    public void testLeaderOutOfView() throws Exception {\n    +        ClientBase.setupTestEnv();\n    +\n    +        Layout layout = new PatternLayout(\"%d{ISO8601} [,yid:%X{myid}] - %5p [%t:%C{1}@%L] - %m%n\");\n    --- End diff --\n    \n    It would be great if we did not specify the pattern as a literal. Take a look at some of the other tests and see if the way they get the patternlayout could apply here (`testElectionFraud` for example).\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-03-02T21:58:00.938+0000","updated":"2018-03-02T21:58:00.938+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16384213","id":"16384213","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/476#discussion_r171973588\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---\n    @@ -1012,4 +1012,113 @@ public void testFailedTxnAsPartOfQuorumLoss() throws Exception {\n                 Assert.assertNull(\"server \" + i + \" should not have /zk\" + leader, servers.zk[i].exists(\"/zk\" + leader, false));\n             }\n         }\n    +\n    +    /**\n    +     * Verify that a node without the leader in its view will not attempt to connect to the leader.\n    +     */\n    +    @Test\n    +    public void testLeaderOutOfView() throws Exception {\n    +        ClientBase.setupTestEnv();\n    +\n    +        Layout layout = new PatternLayout(\"%d{ISO8601} [,yid:%X{myid}] - %5p [%t:%C{1}@%L] - %m%n\");\n    +        ByteArrayOutputStream os = new ByteArrayOutputStream();\n    +        WriterAppender appender = new WriterAppender(layout, os);\n    +        appender.setThreshold(Level.DEBUG);\n    +        Logger qlogger = Logger.getLogger(\"org.apache.zookeeper.server.quorum\");\n    +        qlogger.addAppender(appender);\n    +\n    +        try {\n    +            final int CLIENT_PORT_QP1 = PortAssignment.unique();\n    +            final int CLIENT_PORT_QP2 = PortAssignment.unique();\n    +            final int CLIENT_PORT_QP3 = PortAssignment.unique();\n    +\n    +            String quorumCfgIncomplete = getUniquePortCfgForId(1) + \"\\n\" + getUniquePortCfgForId(2);\n    +            String quorumCfgComplete = quorumCfgIncomplete + \"\\n\" + getUniquePortCfgForId(3);\n    +\n    +            // Node 1 is started without the leader (3) in its config view\n    +            MainThread q1 = new MainThread(1, CLIENT_PORT_QP1, quorumCfgIncomplete);\n    +            MainThread q2 = new MainThread(2, CLIENT_PORT_QP2, quorumCfgComplete);\n    +            MainThread q3 = new MainThread(3, CLIENT_PORT_QP3, quorumCfgComplete);\n    +\n    +            // Node 1 must be started first, before quorum is formed, to trigger the attempted invalid connection to 3\n    +            q1.start();\n    +            QuorumPeer quorumPeer1 = waitForQuorumPeer(q1, CONNECTION_TIMEOUT);\n    +            Assert.assertTrue(quorumPeer1.getPeerState() == QuorumPeer.ServerState.LOOKING);\n    +\n    +            // Node 3 started second to avoid 1 and 2 forming a quorum before 3 starts up\n    +            q3.start();\n    +            QuorumPeer quorumPeer3 = waitForQuorumPeer(q3, CONNECTION_TIMEOUT);\n    +            Assert.assertTrue(quorumPeer3.getPeerState() == QuorumPeer.ServerState.LOOKING);\n    +\n    +            // Node 2 started last, kicks off leader election\n    +            q2.start();\n    +\n    +            // Nodes 2 and 3 now form quorum and fully start. 1 attempts to vote for 3, fails, returns to LOOKING state\n    +            Assert.assertTrue(\"waiting for server 2 to start\",\n    +                    ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT_QP2, CONNECTION_TIMEOUT));\n    +            Assert.assertTrue(\"waiting for server 3 to start\",\n    +                    ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT_QP3, CONNECTION_TIMEOUT));\n    +\n    +            Assert.assertTrue(q1.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LOOKING);\n    +            Assert.assertTrue(q2.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.FOLLOWING);\n    +            Assert.assertTrue(q3.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LEADING);\n    +\n    +            q1.shutdown();\n    +            q2.shutdown();\n    +            q3.shutdown();\n    +\n    +            Assert.assertTrue(\"waiting for server 1 down\",\n    +                    ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT_QP1,\n    +                            ClientBase.CONNECTION_TIMEOUT));\n    +            Assert.assertTrue(\"waiting for server 2 down\",\n    +                    ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT_QP2,\n    +                            ClientBase.CONNECTION_TIMEOUT));\n    +            Assert.assertTrue(\"waiting for server 3 down\",\n    +                    ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT_QP3,\n    +                            ClientBase.CONNECTION_TIMEOUT));\n    +\n    +        } finally {\n    +            qlogger.removeAppender(appender);\n    +        }\n    +\n    +        // Verify that Node 1 never threw an exception\n    +        LineNumberReader r = new LineNumberReader(new StringReader(os.toString()));\n    +        String line;\n    +        boolean found = false;\n    +        Pattern p = Pattern.compile(\".*java.lang.NullPointerException.*\");\n    --- End diff --\n    \n    It would be great to have a more direct way of expressing that this member never enters the following state. Can we check the logs for `FOLLOWING` like in `testElectionFraud`?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-03-02T21:58:00.984+0000","updated":"2018-03-02T21:58:00.984+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16384214","id":"16384214","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/476#discussion_r171972767\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java ---\n    @@ -1064,7 +1065,12 @@ else if (self.getCurrentAndNextConfigVoters().contains(n.sid)) {\n                             break;\n                         }\n                     } else {\n    -                    LOG.warn(\"Ignoring notification from non-cluster member \" + n.sid);\n    +                    if (!self.getCurrentAndNextConfigVoters().contains(n.leader)) {\n    +                        LOG.warn(\"Ignoring notification for non-cluster member sid {} from sid {}\", n.leader, n.sid);\n    +                    }\n    +                    if (!self.getCurrentAndNextConfigVoters().contains(n.sid)) {\n    +                        LOG.warn(\"Ignoring notification from non-cluster member sid {}\", n.sid);\n    --- End diff --\n    \n    nit: lets say \"quorum\" instead of \"cluster\"\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-03-02T21:58:01.050+0000","updated":"2018-03-02T21:58:01.050+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16384215","id":"16384215","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/476#discussion_r171964902\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java ---\n    @@ -1064,7 +1065,12 @@ else if (self.getCurrentAndNextConfigVoters().contains(n.sid)) {\n                             break;\n                         }\n                     } else {\n    -                    LOG.warn(\"Ignoring notification from non-cluster member \" + n.sid);\n    +                    if (!self.getCurrentAndNextConfigVoters().contains(n.leader)) {\n    +                        LOG.warn(\"Ignoring notification for non-cluster member sid {} from sid {}\", n.leader, n.sid);\n    +                    }\n    +                    if (!self.getCurrentAndNextConfigVoters().contains(n.sid)) {\n    +                        LOG.warn(\"Ignoring notification from non-cluster member sid {}\", n.sid);\n    --- End diff --\n    \n    lets log which member was voted for\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-03-02T21:58:01.052+0000","updated":"2018-03-02T21:58:01.052+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16417130","id":"16417130","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user maoling commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/476\n  \n    @enixon can we move on ?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-03-28T10:12:30.158+0000","updated":"2018-03-28T10:12:30.158+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16432600","id":"16432600","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user enixon commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/476\n  \n    @maoling I was about 2/3 done with cleaning up this diff when I got dragged into different projects. Thanks for the ping, I'll try to update here this week.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-10T17:12:45.316+0000","updated":"2018-04-10T17:12:45.316+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16436930","id":"16436930","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user enixon commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/476\n  \n    Made all changes requested in comments, I can alter the pull requests for the other ZooKeeper branches once we reach agreement on this one.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-13T07:04:32.833+0000","updated":"2018-04-13T07:04:32.833+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16440380","id":"16440380","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user hanm commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/476\n  \n    @enixon testLeaderOutOfView deterministically fails for me both locally and on Jenkins. Please take a look.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-17T04:53:01.781+0000","updated":"2018-04-17T04:53:01.781+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16440997","id":"16440997","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user enixon commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/476\n  \n    Tests passing again.\r\n    \r\n    This is what can happen when you use a different logging config and your tests rely on scraping the logs.  :(\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-17T15:17:41.164+0000","updated":"2018-04-17T15:17:41.164+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16441066","id":"16441066","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user eribeiro commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/476#discussion_r182127687\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java ---\n    @@ -927,10 +927,11 @@ public Vote lookForLeader() throws InterruptedException {\n                                 tmpTimeOut : maxNotificationInterval);\n                         LOG.info(\"Notification time out: \" + notTimeout);\n                     } \n    -                else if (self.getCurrentAndNextConfigVoters().contains(n.sid)) {\n    +                else if (self.getCurrentAndNextConfigVoters().contains(n.sid) &&\n    --- End diff --\n    \n    As this PR modifies this line and add similar ones, wouldn't be the case of creating a private method with a meaningful name like below?\r\n    ```\r\n    private boolean configVotersContains(long sid) {\r\n        return self.getCurrentAndNextConfigVoters().contains(sid);\r\n    }\r\n    ```\r\n    \r\n    This makes this line and the lines below more readable, imho.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-17T15:49:12.655+0000","updated":"2018-04-17T15:49:12.655+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16441278","id":"16441278","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user enixon commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/476#discussion_r182175483\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java ---\n    @@ -927,10 +927,11 @@ public Vote lookForLeader() throws InterruptedException {\n                                 tmpTimeOut : maxNotificationInterval);\n                         LOG.info(\"Notification time out: \" + notTimeout);\n                     } \n    -                else if (self.getCurrentAndNextConfigVoters().contains(n.sid)) {\n    +                else if (self.getCurrentAndNextConfigVoters().contains(n.sid) &&\n    --- End diff --\n    \n    There are five uses of `getCurrentAndNextConfigVoters().contains` in the class, seems reasonable to make it a method.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-17T18:06:19.946+0000","updated":"2018-04-17T18:06:19.946+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16441935","id":"16441935","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user enixon commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/476\n  \n    What's the build failure on this commit?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-18T05:56:43.123+0000","updated":"2018-04-18T05:56:43.123+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16441959","id":"16441959","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/476\n  \n    @enixon this: https://issues.apache.org/jira/browse/INFRA-16349\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-18T06:30:02.186+0000","updated":"2018-04-18T06:30:02.186+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16458301","id":"16458301","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"body":"Issue resolved by pull request 476\n[https://github.com/apache/zookeeper/pull/476]","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"created":"2018-04-30T04:35:29.587+0000","updated":"2018-04-30T04:35:29.587+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16458302","id":"16458302","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user asfgit closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/476\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-30T04:35:46.078+0000","updated":"2018-04-30T04:35:46.078+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16458306","id":"16458306","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"body":"I've committed this to 3.5 and master. Thanks for the patch [~nixon]. Is the patch also applicable to 3.4? I assume this happens only in 3.5+ with dynamic reconfiguration. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"created":"2018-04-30T04:45:00.974+0000","updated":"2018-04-30T04:45:00.974+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16458345","id":"16458345","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"FAILURE: Integrated in Jenkins build ZooKeeper-trunk #6 (See [https://builds.apache.org/job/ZooKeeper-trunk/6/])\nZOOKEEPER-2988: NPE triggered if server receives a vote for a server … (hanm: rev 2022766ec907f63b1b43fc5455e9e7761cd332f6)\n* (edit) src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java\n* (edit) src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-30T06:29:16.347+0000","updated":"2018-04-30T06:29:16.347+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16458844","id":"16458844","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=nixon","name":"nixon","key":"nixon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Nixon","active":true,"timeZone":"Etc/UTC"},"body":"[~hanm] thanks for merging it to 3.5 too, I'll shut down that second pr. This bug is applicable to 3.4 as well - imo it's a worse danger on that branch since its easy for configuration files to be stale. I'll fix up pr 478 for the 3.4 branch to reflect the comments I got on pr 476 so it can be ready for review.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=nixon","name":"nixon","key":"nixon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Nixon","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-30T18:33:27.588+0000","updated":"2018-04-30T18:33:27.588+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16458851","id":"16458851","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 3 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1655//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1655//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1655//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-30T18:35:39.826+0000","updated":"2018-04-30T18:35:39.826+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16459015","id":"16459015","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user enixon commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/477\n  \n    Change merged to branch-3.5 with https://github.com/apache/zookeeper/pull/476, closing this PR as redundant. \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-30T20:31:54.124+0000","updated":"2018-04-30T20:31:54.124+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16459016","id":"16459016","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user enixon closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/477\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-30T20:31:54.891+0000","updated":"2018-04-30T20:31:54.891+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16459072","id":"16459072","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 3 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1656//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1656//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1656//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2018-04-30T21:21:51.823+0000","updated":"2018-04-30T21:21:51.823+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16460057","id":"16460057","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user enixon commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/478\n  \n    The only failure report out of Jenkins is \"Test org.apache.zookeeper.test.FollowerResyncConcurrencyTest FAILED (crashed)\". I'm unable to repro any issue with that test on my branch locally, is there a good way to re-run the test?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-01T19:41:36.462+0000","updated":"2018-05-01T19:41:36.462+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16460503","id":"16460503","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user hanm commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/478\n  \n    @enixon \"FollowerResyncConcurrencyTest \" is a known flaky test (and the error in this case is infrastructure issues - the JVM abnormally exit). I tested your patch using a Jenkins job and everything looks good. Committed, please close this pull request.\r\n    \r\n    >> is there a good way to re-run the test\r\n    \r\n    P.S. to kick off the pre-commit build bot, you can close the pull request and reopen it.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-02T04:19:11.911+0000","updated":"2018-05-02T04:19:11.911+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16460505","id":"16460505","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"body":"{quote}This bug is applicable to 3.4 as well - imo it's a worse danger on that branch since its easy for configuration files to be stale.\r\n{quote}\r\nMake sense. Just committed the patch for branch-3.4, and updated the Jira fixed version to include 3.4.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"created":"2018-05-02T04:20:13.311+0000","updated":"2018-05-02T04:20:13.311+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16460563","id":"16460563","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user enixon commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/478\n  \n    Thanks, @hanm !\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-02T06:10:06.288+0000","updated":"2018-05-02T06:10:06.288+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13141899/comment/16460564","id":"16460564","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user enixon closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/478\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-05-02T06:10:06.507+0000","updated":"2018-05-02T06:10:06.507+0000"}],"maxResults":33,"total":33,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-2988/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i3qrfb:"}}