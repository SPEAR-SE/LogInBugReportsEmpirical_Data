{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13069343","self":"https://issues.apache.org/jira/rest/api/2/issue/13069343","key":"ZOOKEEPER-2775","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310801","id":"12310801","key":"ZOOKEEPER","name":"ZooKeeper","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310801&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310801&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310801&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310801&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10484","id":"10484","description":"Apache ZooKeeper related","name":"ZooKeeper"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12339207","id":"12339207","description":"Fix release against 3.4 branch","name":"3.4.11","archived":false,"released":true,"releaseDate":"2017-11-09"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12340141","id":"12340141","description":"Beta release against 3.5 branch","name":"3.5.4","archived":false,"released":true,"releaseDate":"2018-05-17"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12326518","id":"12326518","name":"3.6.0","archived":false,"released":false}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2017-05-05T06:29:09.155+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Thu Jan 25 22:07:58 UTC 2018","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_855981466_*|*_5_*:*_1_*:*_0_*|*_10002_*:*_1_*:*_2488813620","customfield_12312321":null,"resolutiondate":"2017-06-12T23:18:39.005+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-2775/watchers","watchCount":7,"isWatching":false},"created":"2017-05-05T06:12:03.986+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.svg","name":"Critical","id":"2"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12338036","id":"12338036","description":"Fix release against 3.4 branch","name":"3.4.10","archived":false,"released":true,"releaseDate":"2017-03-30"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12335444","id":"12335444","description":"Beta release against 3.5 branch","name":"3.5.3","archived":false,"released":true,"releaseDate":"2017-04-17"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12326518","id":"12326518","name":"3.6.0","archived":false,"released":false}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arshad.mohammad","name":"arshad.mohammad","key":"arshad.mohammad","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10443","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10443","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10443","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10443"},"displayName":"Mohammad Arshad","active":true,"timeZone":"Asia/Singapore"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2018-01-25T22:07:58.040+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312381","id":"12312381","name":"java client","description":"The java client interface for ZooKeeper"}],"timeoriginalestimate":null,"description":"\nDuring Network unreachable scenario in one of the cluster, we observed Xid out of order and Nothing in the queue error continously. And ZK client it finally not able to connect successully to ZK server. \n\n*Logs:*\n\nunexpected error, closing socket connection and attempting reconnect | org.apache.zookeeper.ClientCnxn (ClientCnxn.java:1447) \njava.io.IOException: Xid out of order. Got Xid 52 with err 0 expected Xid 53 for a packet with details: clientPath:null serverPath:null finished:false header:: 53,101  replyHeader:: 0,0,-4  request:: 12885502275,v{'/app1/controller,'/app1/config/changes},v{},v{'/app1/config/changes}  response:: null\n\tat org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:996)\n\tat org.apache.zookeeper.ClientCnxnSocketNIO.doIO(ClientCnxnSocketNIO.java:101)\n\tat org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:370)\n\tat org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1426)\n\nunexpected error, closing socket connection and attempting reconnect \njava.io.IOException: Nothing in the queue, but got 1\n\tat org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:983)\n\tat org.apache.zookeeper.ClientCnxnSocketNIO.doIO(ClientCnxnSocketNIO.java:101)\n\tat org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:370)\n\tat org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1426)\n\t\n*Analysis:* \n1) First time Client fails to do SASL login due to network unreachable problem.\n2017-03-29 10:03:59,377 | WARN  | [main-SendThread(192.168.130.8:24002)] | SASL configuration failed: javax.security.auth.login.LoginException: Network is unreachable (sendto failed) Will continue connection to Zookeeper server without SASL authentication, if Zookeeper server allows it. | org.apache.zookeeper.ClientCnxn (ClientCnxn.java:1307) \n\tHere the boolean saslLoginFailed becomes true.\n\n2) After some time network connection is recovered and client is successully able to login but still the boolean saslLoginFailed is not reset to false. \n\n3) Now SASL negotiation between client and server start happening and during this time no user request will be sent. ( As the socket channel will be closed for write till sasl negotiation complets)\n4) Now response from server for SASL packet will be processed by the client and client assumes that tunnelAuthInProgress() is finished ( method checks for saslLoginFailed boolean Since the boolean is true it assumes its done.) and tries to process the packet as a other packet and will result in above errors. \n\n*Solution:*  Reset the saslLoginFailed boolean every time before client login\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12868004","id":"12868004","filename":"ZOOKEEPER-2775-01.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arshad.mohammad","name":"arshad.mohammad","key":"arshad.mohammad","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10443","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10443","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10443","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10443"},"displayName":"Mohammad Arshad","active":true,"timeZone":"Asia/Singapore"},"created":"2017-05-15T03:56:02.725+0000","size":13606,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12868004/ZOOKEEPER-2775-01.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"ZK Client not able to connect with Xid out of order error ","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Bhupendra","name":"Bhupendra","key":"bhupendra","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bhupendra Kumar Jain","active":true,"timeZone":"Asia/Kolkata"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Bhupendra","name":"Bhupendra","key":"bhupendra","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bhupendra Kumar Jain","active":true,"timeZone":"Asia/Kolkata"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/15997846","id":"15997846","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arshad.mohammad","name":"arshad.mohammad","key":"arshad.mohammad","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10443","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10443","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10443","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10443"},"displayName":"Mohammad Arshad","active":true,"timeZone":"Asia/Singapore"},"body":"This issue has been discussed many times, many places but it was never concluded.\nThanks [~Bhupendra] for analyzing and reporting it.\nAre you willing to submit the fix?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arshad.mohammad","name":"arshad.mohammad","key":"arshad.mohammad","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10443","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10443","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10443","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10443"},"displayName":"Mohammad Arshad","active":true,"timeZone":"Asia/Singapore"},"created":"2017-05-05T06:29:09.155+0000","updated":"2017-05-05T06:29:09.155+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16009967","id":"16009967","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arshad.mohammad","name":"arshad.mohammad","key":"arshad.mohammad","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10443","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10443","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10443","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10443"},"displayName":"Mohammad Arshad","active":true,"timeZone":"Asia/Singapore"},"body":"Discussed with [~Bhupendra] offline, I will submit the fix","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arshad.mohammad","name":"arshad.mohammad","key":"arshad.mohammad","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10443","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10443","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10443","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10443"},"displayName":"Mohammad Arshad","active":true,"timeZone":"Asia/Singapore"},"created":"2017-05-15T03:51:18.604+0000","updated":"2017-05-15T03:51:18.604+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16009971","id":"16009971","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arshad.mohammad","name":"arshad.mohammad","key":"arshad.mohammad","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10443","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10443","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10443","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10443"},"displayName":"Mohammad Arshad","active":true,"timeZone":"Asia/Singapore"},"body":"Submitting patch for quick review, later i will raise merge request.\n1) Fix has just one line change\n2) Moved SaslAuthTest to org.apache.zookeeper package and added test case for this defect scenario","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arshad.mohammad","name":"arshad.mohammad","key":"arshad.mohammad","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10443","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10443","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10443","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10443"},"displayName":"Mohammad Arshad","active":true,"timeZone":"Asia/Singapore"},"created":"2017-05-15T04:01:18.790+0000","updated":"2017-05-15T04:01:18.790+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16010650","id":"16010650","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"GitHub user arshadmohammad opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/254\n\n    ZOOKEEPER-2775: ZK Client not able to connect with Xid out of order error\n\n    Once client enters into Xid out of order issue, It never comes to normal state. It keeps trying to connect and  fail with the same error.  Recreating/Restarting is the only solution as of now. This happens because of bug in the ZK client code. This MR provides the fix. \n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/arshadmohammad/zookeeper ZOOKEEPER-2775-XidOutOfOrder\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/254.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #254\n    \n----\n\n----\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-05-15T15:00:27.982+0000","updated":"2017-05-15T15:00:27.982+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16010687","id":"16010687","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 4 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/688//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/688//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/688//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2017-05-15T15:20:00.746+0000","updated":"2017-05-15T15:20:00.746+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16011195","id":"16011195","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/254#discussion_r116581847\n  \n    --- Diff: src/java/test/org/apache/zookeeper/SaslAuthTest.java ---\n    @@ -0,0 +1,187 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper;\n    +\n    +import java.io.File;\n    +import java.io.FileWriter;\n    +import java.io.IOException;\n    +import java.lang.reflect.Field;\n    +import java.util.ArrayList;\n    +import java.util.List;\n    +import java.util.concurrent.atomic.AtomicInteger;\n    +import static org.junit.Assert.assertTrue;\n    +\n    +import org.apache.zookeeper.ClientCnxn.SendThread;\n    +import org.apache.zookeeper.Watcher.Event.KeeperState;\n    +import org.apache.zookeeper.ZooDefs.Ids;\n    +import org.apache.zookeeper.data.ACL;\n    +import org.apache.zookeeper.data.Id;\n    +import org.apache.zookeeper.test.ClientBase;\n    +import org.junit.AfterClass;\n    +import org.junit.Assert;\n    +import org.junit.BeforeClass;\n    +import org.junit.Test;\n    +\n    +public class SaslAuthTest extends ClientBase {\n    +\n    +    @BeforeClass\n    +    public static void init() {\n    +        System.setProperty(\"zookeeper.authProvider.1\", \"org.apache.zookeeper.server.auth.SASLAuthenticationProvider\");\n    +        try {\n    +            File tmpDir = createTmpDir();\n    +            File saslConfFile = new File(tmpDir, \"jaas.conf\");\n    +            FileWriter fwriter = new FileWriter(saslConfFile);\n    +\n    +            fwriter.write(\"\" + \"Server {\\n\" + \"          org.apache.zookeeper.server.auth.DigestLoginModule required\\n\"\n    +                    + \"          user_super=\\\"test\\\";\\n\" + \"};\\n\" + \"Client {\\n\"\n    +                    + \"       org.apache.zookeeper.server.auth.DigestLoginModule required\\n\"\n    +                    + \"       username=\\\"super\\\"\\n\" + \"       password=\\\"test\\\";\\n\" + \"};\" + \"\\n\");\n    +            fwriter.close();\n    +            System.setProperty(\"java.security.auth.login.config\", saslConfFile.getAbsolutePath());\n    +        } catch (IOException e) {\n    +            // could not create tmp directory to hold JAAS conf file : test will\n    +            // fail now.\n    +        }\n    +    }\n    +\n    +    @AfterClass\n    +    public static void clean() {\n    +        System.clearProperty(\"zookeeper.authProvider.1\");\n    +        System.clearProperty(\"java.security.auth.login.config\");\n    +    }\n    +\n    +    private AtomicInteger authFailed = new AtomicInteger(0);\n    +\n    +    @Override\n    +    protected TestableZooKeeper createClient(String hp) throws IOException, InterruptedException {\n    +        MyWatcher watcher = new MyWatcher();\n    +        return createClient(watcher, hp);\n    +    }\n    +\n    +    private class MyWatcher extends CountdownWatcher {\n    +        @Override\n    +        public synchronized void process(WatchedEvent event) {\n    +            if (event.getState() == KeeperState.AuthFailed) {\n    +                authFailed.incrementAndGet();\n    +            } else {\n    +                super.process(event);\n    +            }\n    +        }\n    +    }\n    +\n    +    @Test\n    +    public void testAuth() throws Exception {\n    +        ZooKeeper zk = createClient();\n    +        try {\n    +            zk.create(\"/path1\", null, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);\n    +            Thread.sleep(1000);\n    +        } finally {\n    +            zk.close();\n    +        }\n    +    }\n    +\n    +    @Test\n    +    public void testValidSaslIds() throws Exception {\n    +        ZooKeeper zk = createClient();\n    +\n    +        List<String> validIds = new ArrayList<String>();\n    +        validIds.add(\"user\");\n    +        validIds.add(\"service/host.name.com\");\n    +        validIds.add(\"user@KERB.REALM\");\n    +        validIds.add(\"service/host.name.com@KERB.REALM\");\n    +\n    +        int i = 0;\n    +        for (String validId : validIds) {\n    +            List<ACL> aclList = new ArrayList<ACL>();\n    +            ACL acl = new ACL(0, new Id(\"sasl\", validId));\n    +            aclList.add(acl);\n    +            zk.create(\"/valid\" + i, null, aclList, CreateMode.PERSISTENT);\n    +            i++;\n    +        }\n    +    }\n    +\n    +    @Test\n    +    public void testInvalidSaslIds() throws Exception {\n    +        ZooKeeper zk = createClient();\n    +\n    +        List<String> invalidIds = new ArrayList<String>();\n    +        invalidIds.add(\"user@KERB.REALM/server.com\");\n    +        invalidIds.add(\"user@KERB.REALM1@KERB.REALM2\");\n    +\n    +        int i = 0;\n    +        for (String invalidId : invalidIds) {\n    +            List<ACL> aclList = new ArrayList<ACL>();\n    +            try {\n    +                ACL acl = new ACL(0, new Id(\"sasl\", invalidId));\n    +                aclList.add(acl);\n    +                zk.create(\"/invalid\" + i, null, aclList, CreateMode.PERSISTENT);\n    +                Assert.fail(\"SASLAuthenticationProvider.isValid() failed to catch invalid Id.\");\n    +            } catch (KeeperException.InvalidACLException e) {\n    +                // ok.\n    +            } finally {\n    +                i++;\n    +            }\n    +        }\n    +    }\n    +\n    +    @Test\n    +    public void testZKOperationsAfterClientSaslAuthFailure() throws Exception {\n    +        CountdownWatcher watcher = new CountdownWatcher();\n    +        ZooKeeper zk = new ZooKeeper(hostPort, CONNECTION_TIMEOUT, watcher);\n    +        watcher.waitForConnected(CONNECTION_TIMEOUT);\n    +        try {\n    +            setSaslFailureFlag(zk);\n    +\n    +            // try node creation for around 15 second,\n    +            int totalTry = 10;\n    +            int tryCount = 0;\n    +\n    +            boolean success = false;\n    +            while (!success && tryCount++ <= totalTry) {\n    +                try {\n    +                    zk.create(\"/saslAuthFail\", \"data\".getBytes(), Ids.OPEN_ACL_UNSAFE,\n    +                            CreateMode.PERSISTENT_SEQUENTIAL);\n    +                    success = true;\n    +                } catch (KeeperException.ConnectionLossException e) {\n    +                    Thread.sleep(1000);\n    +                    // do nothing\n    +                }\n    +            }\n    +            assertTrue(\"ZNode creation is failing continusly after Sasl auth failure.\", success);\n    +\n    +        } finally {\n    +            zk.close();\n    +        }\n    +    }\n    +\n    +    // set saslLoginFailed to true to simulate SASL login failure,\n    +    // LoginException\n    +    private void setSaslFailureFlag(ZooKeeper zk) throws Exception {\n    --- End diff --\n    \n    would it be possible to inject a mock ZooKeeperSaslClient for the test, it may be cleaner and more maintainable than reflection?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-05-15T19:37:10.811+0000","updated":"2017-05-15T19:37:10.811+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16011196","id":"16011196","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/254#discussion_r116581496\n  \n    --- Diff: src/java/test/org/apache/zookeeper/SaslAuthTest.java ---\n    @@ -0,0 +1,187 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper;\n    +\n    +import java.io.File;\n    +import java.io.FileWriter;\n    +import java.io.IOException;\n    +import java.lang.reflect.Field;\n    +import java.util.ArrayList;\n    +import java.util.List;\n    +import java.util.concurrent.atomic.AtomicInteger;\n    +import static org.junit.Assert.assertTrue;\n    +\n    +import org.apache.zookeeper.ClientCnxn.SendThread;\n    +import org.apache.zookeeper.Watcher.Event.KeeperState;\n    +import org.apache.zookeeper.ZooDefs.Ids;\n    +import org.apache.zookeeper.data.ACL;\n    +import org.apache.zookeeper.data.Id;\n    +import org.apache.zookeeper.test.ClientBase;\n    +import org.junit.AfterClass;\n    +import org.junit.Assert;\n    +import org.junit.BeforeClass;\n    +import org.junit.Test;\n    +\n    +public class SaslAuthTest extends ClientBase {\n    +\n    +    @BeforeClass\n    +    public static void init() {\n    +        System.setProperty(\"zookeeper.authProvider.1\", \"org.apache.zookeeper.server.auth.SASLAuthenticationProvider\");\n    +        try {\n    +            File tmpDir = createTmpDir();\n    +            File saslConfFile = new File(tmpDir, \"jaas.conf\");\n    +            FileWriter fwriter = new FileWriter(saslConfFile);\n    +\n    +            fwriter.write(\"\" + \"Server {\\n\" + \"          org.apache.zookeeper.server.auth.DigestLoginModule required\\n\"\n    +                    + \"          user_super=\\\"test\\\";\\n\" + \"};\\n\" + \"Client {\\n\"\n    +                    + \"       org.apache.zookeeper.server.auth.DigestLoginModule required\\n\"\n    +                    + \"       username=\\\"super\\\"\\n\" + \"       password=\\\"test\\\";\\n\" + \"};\" + \"\\n\");\n    +            fwriter.close();\n    +            System.setProperty(\"java.security.auth.login.config\", saslConfFile.getAbsolutePath());\n    +        } catch (IOException e) {\n    +            // could not create tmp directory to hold JAAS conf file : test will\n    +            // fail now.\n    +        }\n    +    }\n    +\n    +    @AfterClass\n    +    public static void clean() {\n    +        System.clearProperty(\"zookeeper.authProvider.1\");\n    +        System.clearProperty(\"java.security.auth.login.config\");\n    +    }\n    +\n    +    private AtomicInteger authFailed = new AtomicInteger(0);\n    +\n    +    @Override\n    +    protected TestableZooKeeper createClient(String hp) throws IOException, InterruptedException {\n    +        MyWatcher watcher = new MyWatcher();\n    +        return createClient(watcher, hp);\n    +    }\n    +\n    +    private class MyWatcher extends CountdownWatcher {\n    +        @Override\n    +        public synchronized void process(WatchedEvent event) {\n    +            if (event.getState() == KeeperState.AuthFailed) {\n    +                authFailed.incrementAndGet();\n    +            } else {\n    +                super.process(event);\n    +            }\n    +        }\n    +    }\n    +\n    +    @Test\n    +    public void testAuth() throws Exception {\n    +        ZooKeeper zk = createClient();\n    +        try {\n    +            zk.create(\"/path1\", null, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);\n    +            Thread.sleep(1000);\n    +        } finally {\n    +            zk.close();\n    +        }\n    +    }\n    +\n    +    @Test\n    +    public void testValidSaslIds() throws Exception {\n    +        ZooKeeper zk = createClient();\n    +\n    +        List<String> validIds = new ArrayList<String>();\n    +        validIds.add(\"user\");\n    +        validIds.add(\"service/host.name.com\");\n    +        validIds.add(\"user@KERB.REALM\");\n    +        validIds.add(\"service/host.name.com@KERB.REALM\");\n    +\n    +        int i = 0;\n    +        for (String validId : validIds) {\n    +            List<ACL> aclList = new ArrayList<ACL>();\n    +            ACL acl = new ACL(0, new Id(\"sasl\", validId));\n    +            aclList.add(acl);\n    +            zk.create(\"/valid\" + i, null, aclList, CreateMode.PERSISTENT);\n    +            i++;\n    +        }\n    +    }\n    +\n    +    @Test\n    +    public void testInvalidSaslIds() throws Exception {\n    +        ZooKeeper zk = createClient();\n    +\n    +        List<String> invalidIds = new ArrayList<String>();\n    +        invalidIds.add(\"user@KERB.REALM/server.com\");\n    +        invalidIds.add(\"user@KERB.REALM1@KERB.REALM2\");\n    +\n    +        int i = 0;\n    +        for (String invalidId : invalidIds) {\n    +            List<ACL> aclList = new ArrayList<ACL>();\n    +            try {\n    +                ACL acl = new ACL(0, new Id(\"sasl\", invalidId));\n    +                aclList.add(acl);\n    +                zk.create(\"/invalid\" + i, null, aclList, CreateMode.PERSISTENT);\n    +                Assert.fail(\"SASLAuthenticationProvider.isValid() failed to catch invalid Id.\");\n    +            } catch (KeeperException.InvalidACLException e) {\n    +                // ok.\n    +            } finally {\n    +                i++;\n    +            }\n    +        }\n    +    }\n    +\n    +    @Test\n    +    public void testZKOperationsAfterClientSaslAuthFailure() throws Exception {\n    +        CountdownWatcher watcher = new CountdownWatcher();\n    +        ZooKeeper zk = new ZooKeeper(hostPort, CONNECTION_TIMEOUT, watcher);\n    +        watcher.waitForConnected(CONNECTION_TIMEOUT);\n    +        try {\n    +            setSaslFailureFlag(zk);\n    +\n    +            // try node creation for around 15 second,\n    +            int totalTry = 10;\n    +            int tryCount = 0;\n    +\n    +            boolean success = false;\n    +            while (!success && tryCount++ <= totalTry) {\n    +                try {\n    +                    zk.create(\"/saslAuthFail\", \"data\".getBytes(), Ids.OPEN_ACL_UNSAFE,\n    +                            CreateMode.PERSISTENT_SEQUENTIAL);\n    +                    success = true;\n    +                } catch (KeeperException.ConnectionLossException e) {\n    +                    Thread.sleep(1000);\n    +                    // do nothing\n    +                }\n    +            }\n    +            assertTrue(\"ZNode creation is failing continusly after Sasl auth failure.\", success);\n    --- End diff --\n    \n    typo: continuously\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-05-15T19:37:10.830+0000","updated":"2017-05-15T19:37:10.830+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16011197","id":"16011197","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/254#discussion_r116565952\n  \n    --- Diff: src/java/test/org/apache/zookeeper/SaslAuthTest.java ---\n    @@ -0,0 +1,187 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper;\n    +\n    +import java.io.File;\n    +import java.io.FileWriter;\n    +import java.io.IOException;\n    +import java.lang.reflect.Field;\n    +import java.util.ArrayList;\n    +import java.util.List;\n    +import java.util.concurrent.atomic.AtomicInteger;\n    +import static org.junit.Assert.assertTrue;\n    +\n    +import org.apache.zookeeper.ClientCnxn.SendThread;\n    +import org.apache.zookeeper.Watcher.Event.KeeperState;\n    +import org.apache.zookeeper.ZooDefs.Ids;\n    +import org.apache.zookeeper.data.ACL;\n    +import org.apache.zookeeper.data.Id;\n    +import org.apache.zookeeper.test.ClientBase;\n    +import org.junit.AfterClass;\n    +import org.junit.Assert;\n    +import org.junit.BeforeClass;\n    +import org.junit.Test;\n    +\n    +public class SaslAuthTest extends ClientBase {\n    --- End diff --\n    \n    why was this file moved?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-05-15T19:37:10.959+0000","updated":"2017-05-15T19:37:10.959+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16011198","id":"16011198","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/254#discussion_r116570478\n  \n    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxn.java ---\n    @@ -1080,6 +1080,8 @@ private void startConnect() throws IOException {\n                             zooKeeperSaslClient.shutdown();\n                         }\n                         zooKeeperSaslClient = new ZooKeeperSaslClient(getServerPrincipal(addr), clientConfig);\n    +                    // SASL login succeeded\n    +                    saslLoginFailed = false;\n    --- End diff --\n    \n    I wonder if this will impact `clientTunneledAuthenticationInProgress`? Perhaps we should revert this when a new connection attempt starts?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-05-15T19:37:10.964+0000","updated":"2017-05-15T19:37:10.964+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16011199","id":"16011199","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/254#discussion_r116578675\n  \n    --- Diff: src/java/test/org/apache/zookeeper/SaslAuthTest.java ---\n    @@ -0,0 +1,187 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper;\n    +\n    +import java.io.File;\n    +import java.io.FileWriter;\n    +import java.io.IOException;\n    +import java.lang.reflect.Field;\n    +import java.util.ArrayList;\n    +import java.util.List;\n    +import java.util.concurrent.atomic.AtomicInteger;\n    +import static org.junit.Assert.assertTrue;\n    +\n    +import org.apache.zookeeper.ClientCnxn.SendThread;\n    +import org.apache.zookeeper.Watcher.Event.KeeperState;\n    +import org.apache.zookeeper.ZooDefs.Ids;\n    +import org.apache.zookeeper.data.ACL;\n    +import org.apache.zookeeper.data.Id;\n    +import org.apache.zookeeper.test.ClientBase;\n    +import org.junit.AfterClass;\n    +import org.junit.Assert;\n    +import org.junit.BeforeClass;\n    +import org.junit.Test;\n    +\n    +public class SaslAuthTest extends ClientBase {\n    --- End diff --\n    \n    and i think the diff would be cleaner if a `git mv` was used instead of adding one file and deleting the other.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-05-15T19:37:11.092+0000","updated":"2017-05-15T19:37:11.092+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16013066","id":"16013066","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user hanm commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/254\n  \n    How about removing saslLoginFailed and use zooKeeperSaslClient to track the state of sasl login? The invariant would be:\n    * sasl login failed: zooKeeperSaslClient == null\n    * sasl login succeeded or in progress: zooKeeperSaslClient != null\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-05-16T20:36:41.246+0000","updated":"2017-05-16T20:36:41.246+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16013195","id":"16013195","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user arshadmohammad commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/254#discussion_r116871274\n  \n    --- Diff: src/java/test/org/apache/zookeeper/SaslAuthTest.java ---\n    @@ -0,0 +1,187 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper;\n    +\n    +import java.io.File;\n    +import java.io.FileWriter;\n    +import java.io.IOException;\n    +import java.lang.reflect.Field;\n    +import java.util.ArrayList;\n    +import java.util.List;\n    +import java.util.concurrent.atomic.AtomicInteger;\n    +import static org.junit.Assert.assertTrue;\n    +\n    +import org.apache.zookeeper.ClientCnxn.SendThread;\n    +import org.apache.zookeeper.Watcher.Event.KeeperState;\n    +import org.apache.zookeeper.ZooDefs.Ids;\n    +import org.apache.zookeeper.data.ACL;\n    +import org.apache.zookeeper.data.Id;\n    +import org.apache.zookeeper.test.ClientBase;\n    +import org.junit.AfterClass;\n    +import org.junit.Assert;\n    +import org.junit.BeforeClass;\n    +import org.junit.Test;\n    +\n    +public class SaslAuthTest extends ClientBase {\n    --- End diff --\n    \n    File was moved to make SendThread accessible in the test case.  Now moved with git mv. This is the right way to move the file\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-05-16T22:13:53.269+0000","updated":"2017-05-16T22:13:53.269+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16013196","id":"16013196","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user arshadmohammad commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/254#discussion_r116871380\n  \n    --- Diff: src/java/test/org/apache/zookeeper/SaslAuthTest.java ---\n    @@ -0,0 +1,187 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper;\n    +\n    +import java.io.File;\n    +import java.io.FileWriter;\n    +import java.io.IOException;\n    +import java.lang.reflect.Field;\n    +import java.util.ArrayList;\n    +import java.util.List;\n    +import java.util.concurrent.atomic.AtomicInteger;\n    +import static org.junit.Assert.assertTrue;\n    +\n    +import org.apache.zookeeper.ClientCnxn.SendThread;\n    +import org.apache.zookeeper.Watcher.Event.KeeperState;\n    +import org.apache.zookeeper.ZooDefs.Ids;\n    +import org.apache.zookeeper.data.ACL;\n    +import org.apache.zookeeper.data.Id;\n    +import org.apache.zookeeper.test.ClientBase;\n    +import org.junit.AfterClass;\n    +import org.junit.Assert;\n    +import org.junit.BeforeClass;\n    +import org.junit.Test;\n    +\n    +public class SaslAuthTest extends ClientBase {\n    +\n    +    @BeforeClass\n    +    public static void init() {\n    +        System.setProperty(\"zookeeper.authProvider.1\", \"org.apache.zookeeper.server.auth.SASLAuthenticationProvider\");\n    +        try {\n    +            File tmpDir = createTmpDir();\n    +            File saslConfFile = new File(tmpDir, \"jaas.conf\");\n    +            FileWriter fwriter = new FileWriter(saslConfFile);\n    +\n    +            fwriter.write(\"\" + \"Server {\\n\" + \"          org.apache.zookeeper.server.auth.DigestLoginModule required\\n\"\n    +                    + \"          user_super=\\\"test\\\";\\n\" + \"};\\n\" + \"Client {\\n\"\n    +                    + \"       org.apache.zookeeper.server.auth.DigestLoginModule required\\n\"\n    +                    + \"       username=\\\"super\\\"\\n\" + \"       password=\\\"test\\\";\\n\" + \"};\" + \"\\n\");\n    +            fwriter.close();\n    +            System.setProperty(\"java.security.auth.login.config\", saslConfFile.getAbsolutePath());\n    +        } catch (IOException e) {\n    +            // could not create tmp directory to hold JAAS conf file : test will\n    +            // fail now.\n    +        }\n    +    }\n    +\n    +    @AfterClass\n    +    public static void clean() {\n    +        System.clearProperty(\"zookeeper.authProvider.1\");\n    +        System.clearProperty(\"java.security.auth.login.config\");\n    +    }\n    +\n    +    private AtomicInteger authFailed = new AtomicInteger(0);\n    +\n    +    @Override\n    +    protected TestableZooKeeper createClient(String hp) throws IOException, InterruptedException {\n    +        MyWatcher watcher = new MyWatcher();\n    +        return createClient(watcher, hp);\n    +    }\n    +\n    +    private class MyWatcher extends CountdownWatcher {\n    +        @Override\n    +        public synchronized void process(WatchedEvent event) {\n    +            if (event.getState() == KeeperState.AuthFailed) {\n    +                authFailed.incrementAndGet();\n    +            } else {\n    +                super.process(event);\n    +            }\n    +        }\n    +    }\n    +\n    +    @Test\n    +    public void testAuth() throws Exception {\n    +        ZooKeeper zk = createClient();\n    +        try {\n    +            zk.create(\"/path1\", null, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);\n    +            Thread.sleep(1000);\n    +        } finally {\n    +            zk.close();\n    +        }\n    +    }\n    +\n    +    @Test\n    +    public void testValidSaslIds() throws Exception {\n    +        ZooKeeper zk = createClient();\n    +\n    +        List<String> validIds = new ArrayList<String>();\n    +        validIds.add(\"user\");\n    +        validIds.add(\"service/host.name.com\");\n    +        validIds.add(\"user@KERB.REALM\");\n    +        validIds.add(\"service/host.name.com@KERB.REALM\");\n    +\n    +        int i = 0;\n    +        for (String validId : validIds) {\n    +            List<ACL> aclList = new ArrayList<ACL>();\n    +            ACL acl = new ACL(0, new Id(\"sasl\", validId));\n    +            aclList.add(acl);\n    +            zk.create(\"/valid\" + i, null, aclList, CreateMode.PERSISTENT);\n    +            i++;\n    +        }\n    +    }\n    +\n    +    @Test\n    +    public void testInvalidSaslIds() throws Exception {\n    +        ZooKeeper zk = createClient();\n    +\n    +        List<String> invalidIds = new ArrayList<String>();\n    +        invalidIds.add(\"user@KERB.REALM/server.com\");\n    +        invalidIds.add(\"user@KERB.REALM1@KERB.REALM2\");\n    +\n    +        int i = 0;\n    +        for (String invalidId : invalidIds) {\n    +            List<ACL> aclList = new ArrayList<ACL>();\n    +            try {\n    +                ACL acl = new ACL(0, new Id(\"sasl\", invalidId));\n    +                aclList.add(acl);\n    +                zk.create(\"/invalid\" + i, null, aclList, CreateMode.PERSISTENT);\n    +                Assert.fail(\"SASLAuthenticationProvider.isValid() failed to catch invalid Id.\");\n    +            } catch (KeeperException.InvalidACLException e) {\n    +                // ok.\n    +            } finally {\n    +                i++;\n    +            }\n    +        }\n    +    }\n    +\n    +    @Test\n    +    public void testZKOperationsAfterClientSaslAuthFailure() throws Exception {\n    +        CountdownWatcher watcher = new CountdownWatcher();\n    +        ZooKeeper zk = new ZooKeeper(hostPort, CONNECTION_TIMEOUT, watcher);\n    +        watcher.waitForConnected(CONNECTION_TIMEOUT);\n    +        try {\n    +            setSaslFailureFlag(zk);\n    +\n    +            // try node creation for around 15 second,\n    +            int totalTry = 10;\n    +            int tryCount = 0;\n    +\n    +            boolean success = false;\n    +            while (!success && tryCount++ <= totalTry) {\n    +                try {\n    +                    zk.create(\"/saslAuthFail\", \"data\".getBytes(), Ids.OPEN_ACL_UNSAFE,\n    +                            CreateMode.PERSISTENT_SEQUENTIAL);\n    +                    success = true;\n    +                } catch (KeeperException.ConnectionLossException e) {\n    +                    Thread.sleep(1000);\n    +                    // do nothing\n    +                }\n    +            }\n    +            assertTrue(\"ZNode creation is failing continusly after Sasl auth failure.\", success);\n    --- End diff --\n    \n    corrected\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-05-16T22:14:27.845+0000","updated":"2017-05-16T22:14:27.845+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16013197","id":"16013197","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user arshadmohammad commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/254#discussion_r116871534\n  \n    --- Diff: src/java/test/org/apache/zookeeper/SaslAuthTest.java ---\n    @@ -0,0 +1,187 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper;\n    +\n    +import java.io.File;\n    +import java.io.FileWriter;\n    +import java.io.IOException;\n    +import java.lang.reflect.Field;\n    +import java.util.ArrayList;\n    +import java.util.List;\n    +import java.util.concurrent.atomic.AtomicInteger;\n    +import static org.junit.Assert.assertTrue;\n    +\n    +import org.apache.zookeeper.ClientCnxn.SendThread;\n    +import org.apache.zookeeper.Watcher.Event.KeeperState;\n    +import org.apache.zookeeper.ZooDefs.Ids;\n    +import org.apache.zookeeper.data.ACL;\n    +import org.apache.zookeeper.data.Id;\n    +import org.apache.zookeeper.test.ClientBase;\n    +import org.junit.AfterClass;\n    +import org.junit.Assert;\n    +import org.junit.BeforeClass;\n    +import org.junit.Test;\n    +\n    +public class SaslAuthTest extends ClientBase {\n    +\n    +    @BeforeClass\n    +    public static void init() {\n    +        System.setProperty(\"zookeeper.authProvider.1\", \"org.apache.zookeeper.server.auth.SASLAuthenticationProvider\");\n    +        try {\n    +            File tmpDir = createTmpDir();\n    +            File saslConfFile = new File(tmpDir, \"jaas.conf\");\n    +            FileWriter fwriter = new FileWriter(saslConfFile);\n    +\n    +            fwriter.write(\"\" + \"Server {\\n\" + \"          org.apache.zookeeper.server.auth.DigestLoginModule required\\n\"\n    +                    + \"          user_super=\\\"test\\\";\\n\" + \"};\\n\" + \"Client {\\n\"\n    +                    + \"       org.apache.zookeeper.server.auth.DigestLoginModule required\\n\"\n    +                    + \"       username=\\\"super\\\"\\n\" + \"       password=\\\"test\\\";\\n\" + \"};\" + \"\\n\");\n    +            fwriter.close();\n    +            System.setProperty(\"java.security.auth.login.config\", saslConfFile.getAbsolutePath());\n    +        } catch (IOException e) {\n    +            // could not create tmp directory to hold JAAS conf file : test will\n    +            // fail now.\n    +        }\n    +    }\n    +\n    +    @AfterClass\n    +    public static void clean() {\n    +        System.clearProperty(\"zookeeper.authProvider.1\");\n    +        System.clearProperty(\"java.security.auth.login.config\");\n    +    }\n    +\n    +    private AtomicInteger authFailed = new AtomicInteger(0);\n    +\n    +    @Override\n    +    protected TestableZooKeeper createClient(String hp) throws IOException, InterruptedException {\n    +        MyWatcher watcher = new MyWatcher();\n    +        return createClient(watcher, hp);\n    +    }\n    +\n    +    private class MyWatcher extends CountdownWatcher {\n    +        @Override\n    +        public synchronized void process(WatchedEvent event) {\n    +            if (event.getState() == KeeperState.AuthFailed) {\n    +                authFailed.incrementAndGet();\n    +            } else {\n    +                super.process(event);\n    +            }\n    +        }\n    +    }\n    +\n    +    @Test\n    +    public void testAuth() throws Exception {\n    +        ZooKeeper zk = createClient();\n    +        try {\n    +            zk.create(\"/path1\", null, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);\n    +            Thread.sleep(1000);\n    +        } finally {\n    +            zk.close();\n    +        }\n    +    }\n    +\n    +    @Test\n    +    public void testValidSaslIds() throws Exception {\n    +        ZooKeeper zk = createClient();\n    +\n    +        List<String> validIds = new ArrayList<String>();\n    +        validIds.add(\"user\");\n    +        validIds.add(\"service/host.name.com\");\n    +        validIds.add(\"user@KERB.REALM\");\n    +        validIds.add(\"service/host.name.com@KERB.REALM\");\n    +\n    +        int i = 0;\n    +        for (String validId : validIds) {\n    +            List<ACL> aclList = new ArrayList<ACL>();\n    +            ACL acl = new ACL(0, new Id(\"sasl\", validId));\n    +            aclList.add(acl);\n    +            zk.create(\"/valid\" + i, null, aclList, CreateMode.PERSISTENT);\n    +            i++;\n    +        }\n    +    }\n    +\n    +    @Test\n    +    public void testInvalidSaslIds() throws Exception {\n    +        ZooKeeper zk = createClient();\n    +\n    +        List<String> invalidIds = new ArrayList<String>();\n    +        invalidIds.add(\"user@KERB.REALM/server.com\");\n    +        invalidIds.add(\"user@KERB.REALM1@KERB.REALM2\");\n    +\n    +        int i = 0;\n    +        for (String invalidId : invalidIds) {\n    +            List<ACL> aclList = new ArrayList<ACL>();\n    +            try {\n    +                ACL acl = new ACL(0, new Id(\"sasl\", invalidId));\n    +                aclList.add(acl);\n    +                zk.create(\"/invalid\" + i, null, aclList, CreateMode.PERSISTENT);\n    +                Assert.fail(\"SASLAuthenticationProvider.isValid() failed to catch invalid Id.\");\n    +            } catch (KeeperException.InvalidACLException e) {\n    +                // ok.\n    +            } finally {\n    +                i++;\n    +            }\n    +        }\n    +    }\n    +\n    +    @Test\n    +    public void testZKOperationsAfterClientSaslAuthFailure() throws Exception {\n    +        CountdownWatcher watcher = new CountdownWatcher();\n    +        ZooKeeper zk = new ZooKeeper(hostPort, CONNECTION_TIMEOUT, watcher);\n    +        watcher.waitForConnected(CONNECTION_TIMEOUT);\n    +        try {\n    +            setSaslFailureFlag(zk);\n    +\n    +            // try node creation for around 15 second,\n    +            int totalTry = 10;\n    +            int tryCount = 0;\n    +\n    +            boolean success = false;\n    +            while (!success && tryCount++ <= totalTry) {\n    +                try {\n    +                    zk.create(\"/saslAuthFail\", \"data\".getBytes(), Ids.OPEN_ACL_UNSAFE,\n    +                            CreateMode.PERSISTENT_SEQUENTIAL);\n    +                    success = true;\n    +                } catch (KeeperException.ConnectionLossException e) {\n    +                    Thread.sleep(1000);\n    +                    // do nothing\n    +                }\n    +            }\n    +            assertTrue(\"ZNode creation is failing continusly after Sasl auth failure.\", success);\n    +\n    +        } finally {\n    +            zk.close();\n    +        }\n    +    }\n    +\n    +    // set saslLoginFailed to true to simulate SASL login failure,\n    +    // LoginException\n    +    private void setSaslFailureFlag(ZooKeeper zk) throws Exception {\n    --- End diff --\n    \n    There will be lot of code change which I want to avoid.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-05-16T22:15:15.528+0000","updated":"2017-05-16T22:15:15.528+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16013200","id":"16013200","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user arshadmohammad commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/254#discussion_r116872750\n  \n    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxn.java ---\n    @@ -1080,6 +1080,8 @@ private void startConnect() throws IOException {\n                             zooKeeperSaslClient.shutdown();\n                         }\n                         zooKeeperSaslClient = new ZooKeeperSaslClient(getServerPrincipal(addr), clientConfig);\n    +                    // SASL login succeeded\n    +                    saslLoginFailed = false;\n    --- End diff --\n    \n    this change has impact on tunnelAuthInProgress.  But yes, we should init the variable on new connection start as this is tunnelAuthInProgress logic expects.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-05-16T22:22:55.794+0000","updated":"2017-05-16T22:22:55.794+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16013206","id":"16013206","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user arshadmohammad commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/254\n  \n     zooKeeperSaslClient == null is already used in tunnelAuthInProgress() which is quite different from saslLoginFailed being false. So I think we can not do above change.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-05-16T22:26:51.803+0000","updated":"2017-05-16T22:26:51.803+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16013219","id":"16013219","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user arshadmohammad commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/254\n  \n    Thanks @afine @hanm for the reviews. Addressed the comments, Please have a look.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-05-16T22:40:03.824+0000","updated":"2017-05-16T22:40:03.824+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16013238","id":"16013238","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 5 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/693//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/693//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/693//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2017-05-16T23:04:41.914+0000","updated":"2017-05-16T23:04:41.914+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16013244","id":"16013244","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user hanm commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/254#discussion_r116879091\n  \n    --- Diff: src/java/test/org/apache/zookeeper/SaslAuthTest.java ---\n    @@ -16,54 +16,58 @@\n      * limitations under the License.\n      */\n     \n    -package org.apache.zookeeper.test;\n    +package org.apache.zookeeper;\n    +\n    +import static org.junit.Assert.assertTrue;\n     \n     import java.io.File;\n     import java.io.FileWriter;\n     import java.io.IOException;\n    +import java.lang.reflect.Field;\n     import java.util.ArrayList;\n     import java.util.List;\n     import java.util.concurrent.atomic.AtomicInteger;\n     \n    -import org.apache.zookeeper.CreateMode;\n    -import org.apache.zookeeper.KeeperException;\n    -import org.apache.zookeeper.TestableZooKeeper;\n    -import org.apache.zookeeper.WatchedEvent;\n    -import org.apache.zookeeper.ZooKeeper;\n    +import org.apache.zookeeper.ClientCnxn.SendThread;\n     import org.apache.zookeeper.Watcher.Event.KeeperState;\n     import org.apache.zookeeper.ZooDefs.Ids;\n     import org.apache.zookeeper.data.ACL;\n     import org.apache.zookeeper.data.Id;\n    +import org.apache.zookeeper.test.ClientBase;\n    +import org.junit.AfterClass;\n     import org.junit.Assert;\n    +import org.junit.BeforeClass;\n     import org.junit.Test;\n     \n     public class SaslAuthTest extends ClientBase {\n    -    static {\n    -        System.setProperty(\"zookeeper.authProvider.1\",\"org.apache.zookeeper.server.auth.SASLAuthenticationProvider\");\n    -\n    +    @BeforeClass\n    +    public static void init() {\n    +        System.setProperty(\"zookeeper.authProvider.1\",\n    +                \"org.apache.zookeeper.server.auth.SASLAuthenticationProvider\");\n             try {\n                 File tmpDir = createTmpDir();\n                 File saslConfFile = new File(tmpDir, \"jaas.conf\");\n                 FileWriter fwriter = new FileWriter(saslConfFile);\n     \n    -            fwriter.write(\"\" +\n    -                    \"Server {\\n\" +\n    -                    \"          org.apache.zookeeper.server.auth.DigestLoginModule required\\n\" +\n    -                    \"          user_super=\\\"test\\\";\\n\" +\n    -                    \"};\\n\" +\n    -                    \"Client {\\n\" +\n    -                    \"       org.apache.zookeeper.server.auth.DigestLoginModule required\\n\" +\n    -                    \"       username=\\\"super\\\"\\n\" +\n    -                    \"       password=\\\"test\\\";\\n\" +\n    -                    \"};\" + \"\\n\");\n    +            fwriter.write(\"\" + \"Server {\\n\"\n    --- End diff --\n    \n    Nit: not sure if change is by accident or not, but this made readability worse.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-05-16T23:08:29.805+0000","updated":"2017-05-16T23:08:29.805+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16013245","id":"16013245","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user hanm commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/254\n  \n    >> So I think we can not do above change.\n    \n    Correct - I was looking to consolidate unnecessary variables used to encode states but looks like we do need saslLoginFailed.\n    \n    lgtm just with one nit on the test file readability.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-05-16T23:11:19.986+0000","updated":"2017-05-16T23:11:19.986+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16013892","id":"16013892","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user rakeshadr commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/254#discussion_r116976191\n  \n    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxn.java ---\n    @@ -1054,6 +1054,8 @@ private void sendPing() {\n             private boolean saslLoginFailed = false;\n     \n             private void startConnect() throws IOException {\n    +            // initializing it for new connection\n    +            saslLoginFailed = false;\n    --- End diff --\n    \n    How about setting to false only after client has successfully logged in instead of setting to false at the beginning. \n    ```\n    zooKeeperSaslClient = new ZooKeeperSaslClient(getServerPrincipal(addr), clientConfig);\n    saslLoginFailed = false;\n    ```\n    I'm not sure about any concurrency cases between narrow window of resetting the flag to false and the client attempt to do login operation. Since the previous operation was failed, the client should still reflect the status until the login is successful next time, right?\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-05-17T11:46:41.723+0000","updated":"2017-05-17T11:46:41.723+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16014110","id":"16014110","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user arshadmohammad commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/254#discussion_r117014954\n  \n    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxn.java ---\n    @@ -1054,6 +1054,8 @@ private void sendPing() {\n             private boolean saslLoginFailed = false;\n     \n             private void startConnect() throws IOException {\n    +            // initializing it for new connection\n    +            saslLoginFailed = false;\n    --- End diff --\n    \n    Only one thread involved in new connection creation. So there will not any chance another thread setting the flag in between.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-05-17T14:22:46.038+0000","updated":"2017-05-17T14:22:46.038+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16014119","id":"16014119","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user arshadmohammad commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/254#discussion_r117016986\n  \n    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxn.java ---\n    @@ -1054,6 +1054,8 @@ private void sendPing() {\n             private boolean saslLoginFailed = false;\n     \n             private void startConnect() throws IOException {\n    +            // initializing it for new connection\n    +            saslLoginFailed = false;\n    --- End diff --\n    \n    Successfull Login is not necessary to successfully connect to ZK Server.  ZK server may allow connection without client login being successful, based on configuration. So it is better to set the flag at the start of the new connection.  \n    This change has impact on tunnelAuthInProgress, in this method also same thing is expeted. In this there is a sceanrio where zooKeeperSaslClient can be null\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-05-17T14:29:42.732+0000","updated":"2017-05-17T14:29:42.732+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16014137","id":"16014137","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user arshadmohammad commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/254#discussion_r117021379\n  \n    --- Diff: src/java/test/org/apache/zookeeper/SaslAuthTest.java ---\n    @@ -16,54 +16,58 @@\n      * limitations under the License.\n      */\n     \n    -package org.apache.zookeeper.test;\n    +package org.apache.zookeeper;\n    +\n    +import static org.junit.Assert.assertTrue;\n     \n     import java.io.File;\n     import java.io.FileWriter;\n     import java.io.IOException;\n    +import java.lang.reflect.Field;\n     import java.util.ArrayList;\n     import java.util.List;\n     import java.util.concurrent.atomic.AtomicInteger;\n     \n    -import org.apache.zookeeper.CreateMode;\n    -import org.apache.zookeeper.KeeperException;\n    -import org.apache.zookeeper.TestableZooKeeper;\n    -import org.apache.zookeeper.WatchedEvent;\n    -import org.apache.zookeeper.ZooKeeper;\n    +import org.apache.zookeeper.ClientCnxn.SendThread;\n     import org.apache.zookeeper.Watcher.Event.KeeperState;\n     import org.apache.zookeeper.ZooDefs.Ids;\n     import org.apache.zookeeper.data.ACL;\n     import org.apache.zookeeper.data.Id;\n    +import org.apache.zookeeper.test.ClientBase;\n    +import org.junit.AfterClass;\n     import org.junit.Assert;\n    +import org.junit.BeforeClass;\n     import org.junit.Test;\n     \n     public class SaslAuthTest extends ClientBase {\n    -    static {\n    -        System.setProperty(\"zookeeper.authProvider.1\",\"org.apache.zookeeper.server.auth.SASLAuthenticationProvider\");\n    -\n    +    @BeforeClass\n    +    public static void init() {\n    +        System.setProperty(\"zookeeper.authProvider.1\",\n    +                \"org.apache.zookeeper.server.auth.SASLAuthenticationProvider\");\n             try {\n                 File tmpDir = createTmpDir();\n                 File saslConfFile = new File(tmpDir, \"jaas.conf\");\n                 FileWriter fwriter = new FileWriter(saslConfFile);\n     \n    -            fwriter.write(\"\" +\n    -                    \"Server {\\n\" +\n    -                    \"          org.apache.zookeeper.server.auth.DigestLoginModule required\\n\" +\n    -                    \"          user_super=\\\"test\\\";\\n\" +\n    -                    \"};\\n\" +\n    -                    \"Client {\\n\" +\n    -                    \"       org.apache.zookeeper.server.auth.DigestLoginModule required\\n\" +\n    -                    \"       username=\\\"super\\\"\\n\" +\n    -                    \"       password=\\\"test\\\";\\n\" +\n    -                    \"};\" + \"\\n\");\n    +            fwriter.write(\"\" + \"Server {\\n\"\n    --- End diff --\n    \n    Same content was already present, I tried to format it which could not help to clean.\n    Now moved jaas config file content generation to new method.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-05-17T14:43:44.883+0000","updated":"2017-05-17T14:43:44.883+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16014208","id":"16014208","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 5 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/699//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/699//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/699//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2017-05-17T15:26:05.170+0000","updated":"2017-05-17T15:26:05.170+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16014938","id":"16014938","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user hanm commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/254\n  \n    lgtm.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-05-17T23:33:03.651+0000","updated":"2017-05-17T23:33:03.651+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16015523","id":"16015523","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user rakeshadr commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/254#discussion_r117207576\n  \n    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxn.java ---\n    @@ -1054,6 +1054,8 @@ private void sendPing() {\n             private boolean saslLoginFailed = false;\n     \n             private void startConnect() throws IOException {\n    +            // initializing it for new connection\n    +            saslLoginFailed = false;\n    --- End diff --\n    \n    Thanks @arshadmohammad  for the details.\n    \n    yes, only `SendThread` is updating the flag. But, during sasl login retries period, the flag status will be checked by `tunnelAuthInProgress()` packet processing thread, so multiple threads are accessing the flag. The code looks little tricky and `zooKeeperSaslClient `null value represents auth in progress. I'm almost OK with the change and trying another attempt to avoid any compatibility issues to the users as this would go to stable branches:-). \n    \n    Earlier the behavior was, once the flag updated to flase, `tunnelAuthInProgress` function would return false always. Now, with the proposed fix, sometimes it would return false and sometimes it would return true, right? Will this results in any consistency issues later?\n    \n    Assume  a case, where successful login takes several retries.\n    (1) Immediately after the login failure the flag will be false. During this time `tunnelAuthInProgress() ` function returns false to the callers.\n    (2) Assume, `startConnect()` retries started. During this time, `tunnelAuthInProgress() ` function returns true to the callers.\n    \n    My previous suggestion was to avoid this situation and consistently `tunnelAuthInProgress()` function return false until the next successful login. Does this makes sense to you?\n    \n    @hanm, welcome your thoughts. Thanks!\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-05-18T10:00:04.647+0000","updated":"2017-05-18T10:00:04.647+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16016903","id":"16016903","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user hanm commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/254\n  \n    >> Will this results in any consistency issues later?\n    \n    I guess the previous behavior was problematic and the fact tunnelAuthInProgress always return false once a login failed (even after a new connection retry attempt) is a bug that this JIRA trying to fix, right? If we keep the old semantic then the bug will not be fixed because of the details described in the JIRA - basically if we keep the old semantic and always return false upon a failed login then the future SASL packet will be treated as normal packet and got ignored - thus SASL login will never succeed..\n    \n    >> so multiple threads are accessing the flag. \n    \n    Yeah this looks like the case - so should we set the flag as volatile?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-05-19T05:02:50.203+0000","updated":"2017-05-19T05:02:50.203+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16036683","id":"16036683","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Bhupendra","name":"Bhupendra","key":"bhupendra","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bhupendra Kumar Jain","active":true,"timeZone":"Asia/Kolkata"},"body":"In which case multiple threads will be accessing the flag ? As I checked, only sendThread access and modifies the flag. \n\nDuring SASL handshake also , the response packet is processed by sendThread itself in readResponse() method.  Also I observed, that the response never gets processed by ServerSaslResponseCallback . ( May be its unused now) ... \n\nAm I missing anything ? ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Bhupendra","name":"Bhupendra","key":"bhupendra","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bhupendra Kumar Jain","active":true,"timeZone":"Asia/Kolkata"},"created":"2017-06-05T08:49:01.261+0000","updated":"2017-06-05T08:49:01.261+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16037163","id":"16037163","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user rakeshrapache commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/254\n  \n    >> SASL login will never succeed\n    \n    Yes, agreed. You guys are correct. I got confused with the server behavior of continue connection to Zookeeper server without SASL auth. I was thinking that there is a chance of sending data packets via unauth channel and processing async new connections simultaneously.\n    \n    Thanks @arshadmohammad, @hanm and @Bhupendra Kumar for the clarifications.\n    \n    +1 LGTM\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-06-05T16:24:24.638+0000","updated":"2017-06-05T16:24:24.638+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16042542","id":"16042542","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user arshadmohammad commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/254\n  \n    This PR can be merged to master and branch-3.5 only. I  will raise another pull request for branch-3.4\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-06-08T10:58:00.937+0000","updated":"2017-06-08T10:58:00.937+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16042918","id":"16042918","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user asfgit closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/254\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-06-08T15:59:36.122+0000","updated":"2017-06-08T15:59:36.122+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16042923","id":"16042923","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"body":"Committed to master\nhttps://github.com/apache/zookeeper/commit/fa1dc109d4c1bb7913fee43170ed6131e3dc1b1f\nbranch-3.5\nhttps://github.com/apache/zookeeper/commit/0026e27e81f4889816bec162964e2a721cc53db9\nbranch-3.4\nhttps://github.com/apache/zookeeper/commit/ac5fa3f54fbf47437ed86bd02cd0e9fdb9edf5e6","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"created":"2017-06-08T16:01:33.275+0000","updated":"2017-06-12T23:20:05.758+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16042988","id":"16042988","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3419 (See [https://builds.apache.org/job/ZooKeeper-trunk/3419/])\nZOOKEEPER-2775: ZK Client not able to connect with Xid out of order (hanm: rev fa1dc109d4c1bb7913fee43170ed6131e3dc1b1f)\n* (edit) src/java/main/org/apache/zookeeper/ClientCnxn.java\n* (delete) src/java/test/org/apache/zookeeper/test/SaslAuthTest.java\n* (add) src/java/test/org/apache/zookeeper/SaslAuthTest.java\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2017-06-08T16:36:57.712+0000","updated":"2017-06-08T16:36:57.712+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16045627","id":"16045627","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"GitHub user arshadmohammad opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/278\n\n    ZOOKEEPER-2775: ZK Client not able to connect with Xid out of order error\n\n    Same as PR https://github.com/apache/zookeeper/pull/254 but this is for branch-3.4\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/arshadmohammad/zookeeper ZOOKEEPER-2775-branch-3.4\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/278.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #278\n    \n----\ncommit 31580024b18d57eff28acb7099bad0606b51efa3\nAuthor: Mohammad Arshad <arshad@apache.org>\nDate:   2017-06-10T17:36:34Z\n\n    ZOOKEEPER-2775: ZK Client not able to connect with Xid out of order error\n\n----\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-06-10T17:40:09.893+0000","updated":"2017-06-10T17:40:09.893+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16045643","id":"16045643","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 5 new or modified tests.\n\n    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to introduce 48 new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/783//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/783//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/783//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2017-06-10T18:15:35.240+0000","updated":"2017-06-10T18:15:35.240+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16047204","id":"16047204","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user hanm commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/278\n  \n    lgtm, will merge soon.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-06-12T23:17:29.644+0000","updated":"2017-06-12T23:17:29.644+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16047205","id":"16047205","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"body":"Issue resolved by pull request 278\n[https://github.com/apache/zookeeper/pull/278]","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hanm","name":"hanm","key":"hanm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hanm&avatarId=26946","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hanm&avatarId=26946","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hanm&avatarId=26946","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hanm&avatarId=26946"},"displayName":"Michael Han","active":true,"timeZone":"America/Vancouver"},"created":"2017-06-12T23:18:39.047+0000","updated":"2017-06-12T23:18:39.047+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16050877","id":"16050877","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user hanm commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/278\n  \n    It is merged, please close this @arshadmohammad.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-06-15T18:04:28.553+0000","updated":"2017-06-15T18:04:28.553+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16051352","id":"16051352","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user arshadmohammad closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/278\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2017-06-16T04:20:12.370+0000","updated":"2017-06-16T04:20:12.370+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16340172","id":"16340172","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"GitHub user jiajunwang opened a pull request:\n\n    https://github.com/apache/helix/pull/131\n\n    Bump up ZOOKEEPER version to 3.4.11.\n\n    There is a zk connection related bug (ZOOKEEPER-2775) fixed in 3.4.11. Bump up version to get the fix.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/jiajunwang/helix master\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/helix/pull/131.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #131\n    \n----\ncommit 22cc4a4d4819b211b30094de7b3b0944cb5c033b\nAuthor: jiajunwang <ericwang1985@...>\nDate:   2018-01-25T22:04:13Z\n\n    Bump up ZOOKEEPER version to 3.4.11.\n    \n    There is a zk connection related bug (ZOOKEEPER-2775) fixed in 3.4.11. Bump up version to get the fix.\n\n----\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-01-25T22:05:51.044+0000","updated":"2018-01-25T22:05:51.044+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069343/comment/16340175","id":"16340175","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user asfgit closed the pull request at:\n\n    https://github.com/apache/helix/pull/131\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2018-01-25T22:07:58.040+0000","updated":"2018-01-25T22:07:58.040+0000"}],"maxResults":42,"total":42,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-2775/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i3eiuv:"}}