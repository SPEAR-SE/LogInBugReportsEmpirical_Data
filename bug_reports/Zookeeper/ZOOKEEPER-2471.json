{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Dan Benediktson",
            "key": "dbenediktson",
            "name": "dbenediktson",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=dbenediktson",
            "timeZone": "America/Los_Angeles"
        },
        "components": [{
            "description": "The java client interface for ZooKeeper",
            "id": "12312381",
            "name": "java client",
            "self": "https://issues.apache.org/jira/rest/api/2/component/12312381"
        }],
        "created": "2016-07-08T15:52:07.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Dan Benediktson",
            "key": "dbenediktson",
            "name": "dbenediktson",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=dbenediktson",
            "timeZone": "America/Los_Angeles"
        },
        "customfield_10010": null,
        "customfield_12310191": null,
        "customfield_12310192": null,
        "customfield_12310220": "2016-07-08T23:35:47.973+0000",
        "customfield_12310222": null,
        "customfield_12310230": null,
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "1.0",
        "customfield_12310420": "9223372036854775807",
        "customfield_12310920": "9223372036854775807",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i30pkn:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Sep 07 16:25:03 UTC 2017",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "ClientCnxnSocket uses a member variable \"now\" to track the current time, and lastSend / lastHeard variables to track socket liveness. Implementations, and even ClientCnxn itself, are expected to call both updateNow() to reset \"now\" to System.currentTimeMillis, and then call updateLastSend()/updateLastHeard() on IO completions.\n\nThis is a fragile contract, so it's not surprising that there's a bug resulting from it: ClientCnxn.SendThread.run() calls updateLastSendAndHeard() as soon as startConnect() returns, but it does not call updateNow() first. I expect when this was written, either the expectation was that startConnect() was an asynchronous operation and that updateNow() would have been called very recently, or simply the requirement to call updateNow() was forgotten at this point. As far as I can see, this bug has been present since the \"updateNow\" method was first introduced in the distant past. As it turns out, since startConnect() calls HostProvider.next(), which can sleep, quite a lot of time can pass, leaving a big gap between \"now\" and now.\n\nIf you are using very short session timeouts (one of our ZK ensembles has many clients using a 1-second timeout), this is potentially disastrous, because the sleep time may exceed the connection timeout itself, which can potentially result in the Java client being stuck in a perpetual reconnect loop. The exact code path it goes through in this case is complicated, because there has to be a previously-closed socket still waiting in the selector (otherwise, the first timeout evaluation will not fail because \"now\" still hasn't been updated, and then the actual connect timeout will be applied in ClientCnxnSocket.doTransport()) so that select() will harvest the IO from the previous socket and updateNow(), resulting in the next loop through ClientCnxnSocket.SendThread.run() observing the spurious timeout and failing. In practice it does happen to us fairly frequently; we only got to the bottom of the bug yesterday. Worse, when it does happen, the Zookeeper client object is rendered unusable: it's stuck in a perpetual reconnect loop where it keeps sleeping, opening a socket, and immediately closing it.\n\nI have a patch. Rather than calling updateNow() right after startConnect(), my fix is to remove the \"now\" member variable and the updateNow() method entirely, and to instead just call System.currentTimeMillis() whenever time needs to be evaluated. I realize there is a benefit (aside from a trivial micro-optimization not worth worrying about) to having the time be \"fixed\", particularly for truth in the logging: if time is fixed by an updateNow() call, then the log for a timeout will still show exactly the same value the code reasoned about. However, this benefit is in my opinion not enough to merit the fragility of the contract which led to this (for us) highly impactful and difficult-to-find bug in the first place.\n\nI'm currently running ant tests locally against my patch on trunk, and then I'll upload it here.",
        "duedate": null,
        "environment": "all",
        "fixVersions": [],
        "issuelinks": [{
            "id": "12511383",
            "outwardIssue": {
                "fields": {
                    "issuetype": {
                        "avatarId": 21140,
                        "description": "An improvement or enhancement to an existing feature or task.",
                        "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                        "id": "4",
                        "name": "Improvement",
                        "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                        "subtask": false
                    },
                    "priority": {
                        "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
                        "id": "4",
                        "name": "Minor",
                        "self": "https://issues.apache.org/jira/rest/api/2/priority/4"
                    },
                    "status": {
                        "description": "The issue is open and ready for the assignee to start work on it.",
                        "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                        "id": "1",
                        "name": "Open",
                        "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                        "statusCategory": {
                            "colorName": "blue-gray",
                            "id": 2,
                            "key": "new",
                            "name": "To Do",
                            "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2"
                        }
                    },
                    "summary": "Allow for exponential backoff in ClientCnxn.SendThread on connection re-establishment"
                },
                "id": "13093016",
                "key": "ZOOKEEPER-2869",
                "self": "https://issues.apache.org/jira/rest/api/2/issue/13093016"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12511383",
            "type": {
                "id": "10030",
                "inward": "is related to",
                "name": "Reference",
                "outward": "relates to",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
            }
        }],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "id": "3",
            "name": "Major",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310801&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310801&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310801&avatarId=10011",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12310801&avatarId=10011"
            },
            "id": "12310801",
            "key": "ZOOKEEPER",
            "name": "ZooKeeper",
            "projectCategory": {
                "description": "Apache ZooKeeper related",
                "id": "10484",
                "name": "ZooKeeper",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/10484"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12310801"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Dan Benediktson",
            "key": "dbenediktson",
            "name": "dbenediktson",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=dbenediktson",
            "timeZone": "America/Los_Angeles"
        },
        "resolution": null,
        "resolutiondate": null,
        "status": {
            "description": "This issue is being actively worked on at the moment by the assignee.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/inprogress.png",
            "id": "3",
            "name": "In Progress",
            "self": "https://issues.apache.org/jira/rest/api/2/status/3",
            "statusCategory": {
                "colorName": "yellow",
                "id": 4,
                "key": "indeterminate",
                "name": "In Progress",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/4"
            }
        },
        "subtasks": [],
        "summary": "Java Zookeeper Client incorrectly considers time spent sleeping as time spent connecting, potentially resulting in infinite reconnect loop",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2017-09-07T16:25:18.000+0000",
        "versions": [{
            "archived": false,
            "description": "Beta release against 3.5 branch",
            "id": "12335444",
            "name": "3.5.3",
            "releaseDate": "2017-04-17",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12335444"
        }],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-2471/votes",
            "votes": 0
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-2471/watchers",
            "watchCount": 7
        },
        "workratio": -1
    },
    "id": "12987824",
    "key": "ZOOKEEPER-2471",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12987824"
}