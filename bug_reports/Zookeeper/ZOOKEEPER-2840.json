{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "percent": 0,
            "progress": 0,
            "total": 259200
        },
        "aggregatetimeestimate": 259200,
        "aggregatetimeoriginalestimate": 259200,
        "aggregatetimespent": null,
        "assignee": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=benedict+jin&avatarId=25504",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=benedict+jin&avatarId=25504",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=benedict+jin&avatarId=25504",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=benedict+jin&avatarId=25504"
            },
            "displayName": "Benedict Jin",
            "key": "benedict jin",
            "name": "benedict jin",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=benedict+jin",
            "timeZone": "Asia/Hong_Kong"
        },
        "components": [{
            "description": "The java client interface for ZooKeeper",
            "id": "12312381",
            "name": "java client",
            "self": "https://issues.apache.org/jira/rest/api/2/component/12312381"
        }],
        "created": "2017-07-05T12:17:17.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=benedict+jin&avatarId=25504",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=benedict+jin&avatarId=25504",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=benedict+jin&avatarId=25504",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=benedict+jin&avatarId=25504"
            },
            "displayName": "Benedict Jin",
            "key": "benedict jin",
            "name": "benedict jin",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=benedict+jin",
            "timeZone": "Asia/Hong_Kong"
        },
        "customfield_10010": null,
        "customfield_12310191": null,
        "customfield_12310192": null,
        "customfield_12310220": "2017-07-05T12:23:35.251+0000",
        "customfield_12310222": null,
        "customfield_12310230": null,
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "0.0",
        "customfield_12310420": "9223372036854775807",
        "customfield_12310920": "9223372036854775807",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i3h4lj:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Nov 21 23:58:18 UTC 2018",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "Should using `System.nanoTime() ^ this.hashCode()` for StaticHostProvider instead of `System.currentTimeMillis()`. Because if we have three Zookeeper server nodes and set the `zookeeper.leaderServes` as `no`, then those connections from client will always connect with the first Zookeeper server node. Due to...\n\n```java\n    @Test\n    public void testShuffle() throws Exception {\n        LinkedList<InetSocketAddress> inetSocketAddressesList = new LinkedList<>();\n        inetSocketAddressesList.add(new InetSocketAddress(0));\n        inetSocketAddressesList.add(new InetSocketAddress(1));\n        inetSocketAddressesList.add(new InetSocketAddress(2));\n        /*\n        1442045361\n        currentTime: 1499253530044, currentTime ^ hashCode: 1500143845389, Result: 1 2 0\n        currentTime: 1499253530044, currentTime ^ hashCode: 1500143845389, Result: 2 0 1\n        currentTime: 1499253530045, currentTime ^ hashCode: 1500143845388, Result: 0 1 2\n        currentTime: 1499253530045, currentTime ^ hashCode: 1500143845388, Result: 1 2 0\n        currentTime: 1499253530046, currentTime ^ hashCode: 1500143845391, Result: 1 2 0\n        currentTime: 1499253530046, currentTime ^ hashCode: 1500143845391, Result: 1 2 0\n        currentTime: 1499253530046, currentTime ^ hashCode: 1500143845391, Result: 1 2 0\n        currentTime: 1499253530046, currentTime ^ hashCode: 1500143845391, Result: 1 2 0\n        currentTime: 1499253530047, currentTime ^ hashCode: 1500143845390, Result: 1 2 0\n        currentTime: 1499253530047, currentTime ^ hashCode: 1500143845390, Result: 1 2 0\n         */\n        internalShuffleMillis(inetSocketAddressesList);\n        /*\n        146611050\n        currentTime: 22618159623770, currentTime ^ hashCode: 22618302559536, Result: 2 1 0\n        currentTime: 22618159800738, currentTime ^ hashCode: 22618302085832, Result: 0 1 2\n        currentTime: 22618159967442, currentTime ^ hashCode: 22618302248888, Result: 1 0 2\n        currentTime: 22618160135080, currentTime ^ hashCode: 22618302013634, Result: 2 1 0\n        currentTime: 22618160302095, currentTime ^ hashCode: 22618301535077, Result: 2 1 0\n        currentTime: 22618160490260, currentTime ^ hashCode: 22618301725822, Result: 1 0 2\n        currentTime: 22618161566373, currentTime ^ hashCode: 22618300303823, Result: 1 0 2\n        currentTime: 22618161745518, currentTime ^ hashCode: 22618300355844, Result: 2 1 0\n        currentTime: 22618161910357, currentTime ^ hashCode: 22618291603775, Result: 2 1 0\n        currentTime: 22618162079549, currentTime ^ hashCode: 22618291387479, Result: 0 1 2\n         */\n        internalShuffleNano(inetSocketAddressesList);\n\n        inetSocketAddressesList.clear();\n        inetSocketAddressesList.add(new InetSocketAddress(0));\n        inetSocketAddressesList.add(new InetSocketAddress(1));\n\n        /*\n        415138788\n        currentTime: 1499253530050, currentTime ^ hashCode: 1499124456998, Result: 0 1\n        currentTime: 1499253530050, currentTime ^ hashCode: 1499124456998, Result: 0 1\n        currentTime: 1499253530050, currentTime ^ hashCode: 1499124456998, Result: 0 1\n        currentTime: 1499253530050, currentTime ^ hashCode: 1499124456998, Result: 0 1\n        currentTime: 1499253530050, currentTime ^ hashCode: 1499124456998, Result: 0 1\n        currentTime: 1499253530050, currentTime ^ hashCode: 1499124456998, Result: 0 1\n        currentTime: 1499253530053, currentTime ^ hashCode: 1499124456993, Result: 0 1\n        currentTime: 1499253530055, currentTime ^ hashCode: 1499124456995, Result: 0 1\n        currentTime: 1499253530055, currentTime ^ hashCode: 1499124456995, Result: 0 1\n        currentTime: 1499253530055, currentTime ^ hashCode: 1499124456995, Result: 0 1\n         */\n        internalShuffleMillis(inetSocketAddressesList);\n        /*\n        13326370\n        currentTime: 22618168292396, currentTime ^ hashCode: 22618156149774, Result: 1 0\n        currentTime: 22618168416181, currentTime ^ hashCode: 22618156535703, Result: 1 0\n        currentTime: 22618168534056, currentTime ^ hashCode: 22618156432394, Result: 0 1\n        currentTime: 22618168666548, currentTime ^ hashCode: 22618155774358, Result: 0 1\n        currentTime: 22618168818946, currentTime ^ hashCode: 22618155623712, Result: 0 1\n        currentTime: 22618168936821, currentTime ^ hashCode: 22618156011863, Result: 1 0\n        currentTime: 22618169056251, currentTime ^ hashCode: 22618155893721, Result: 1 0\n        currentTime: 22618169611103, currentTime ^ hashCode: 22618157370237, Result: 1 0\n        currentTime: 22618169744528, currentTime ^ hashCode: 22618156713138, Result: 1 0\n        currentTime: 22618171273170, currentTime ^ hashCode: 22618184562672, Result: 1 0\n         */\n        internalShuffleNano(inetSocketAddressesList);\n    }\n\n    private void internalShuffleMillis(LinkedList<InetSocketAddress> inetSocketAddressesList) throws Exception {\n        int hashCode = new StaticHostProvider(inetSocketAddressesList).hashCode();\n        System.out.println(hashCode);\n        int count = 10;\n        Random r;\n        while (count > 0) {\n            long currentTime = System.currentTimeMillis();\n            r = new Random(currentTime ^ hashCode);\n            System.out.print(String.format(\"currentTime: %s, currentTime ^ hashCode: %s, Result: \",\n                    currentTime, currentTime ^ hashCode));\n            Collections.shuffle(inetSocketAddressesList, r);\n            for (InetSocketAddress inetSocketAddress : inetSocketAddressesList) {\n                System.out.print(String.format(\"%s \", inetSocketAddress.getPort()));\n            }\n            System.out.println();\n            count--;\n        }\n    }\n\n    private void internalShuffleNano(LinkedList<InetSocketAddress> inetSocketAddressesList) throws Exception {\n        int hashCode = new StaticHostProvider(inetSocketAddressesList).hashCode();\n        System.out.println(hashCode);\n        int count = 10;\n        Random r;\n        while (count > 0) {\n            long currentTime = System.nanoTime();\n            r = new Random(currentTime ^ hashCode);\n            System.out.print(String.format(\"currentTime: %s, currentTime ^ hashCode: %s, Result: \",\n                    currentTime, currentTime ^ hashCode));\n            Collections.shuffle(inetSocketAddressesList, r);\n            for (InetSocketAddress inetSocketAddress : inetSocketAddressesList) {\n                System.out.print(String.format(\"%s \", inetSocketAddress.getPort()));\n            }\n            System.out.println();\n            count--;\n        }\n    }\n```",
        "duedate": null,
        "environment": null,
        "fixVersions": [{
            "archived": false,
            "description": "Beta release against 3.5 branch",
            "id": "12343268",
            "name": "3.5.5",
            "released": false,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12343268"
        }],
        "issuelinks": [],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "id": "3",
            "name": "Major",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
        },
        "progress": {
            "percent": 0,
            "progress": 0,
            "total": 259200
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310801&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310801&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310801&avatarId=10011",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12310801&avatarId=10011"
            },
            "id": "12310801",
            "key": "ZOOKEEPER",
            "name": "ZooKeeper",
            "projectCategory": {
                "description": "Apache ZooKeeper related",
                "id": "10484",
                "name": "ZooKeeper",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/10484"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12310801"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=benedict+jin&avatarId=25504",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=benedict+jin&avatarId=25504",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=benedict+jin&avatarId=25504",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=benedict+jin&avatarId=25504"
            },
            "displayName": "Benedict Jin",
            "key": "benedict jin",
            "name": "benedict jin",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=benedict+jin",
            "timeZone": "Asia/Hong_Kong"
        },
        "resolution": null,
        "resolutiondate": null,
        "status": {
            "description": "The issue is open and ready for the assignee to start work on it.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
            "id": "1",
            "name": "Open",
            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
            "statusCategory": {
                "colorName": "blue-gray",
                "id": 2,
                "key": "new",
                "name": "To Do",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2"
            }
        },
        "subtasks": [],
        "summary": "Should using `System.nanoTime() ^ this.hashCode()` for StaticHostProvider",
        "timeestimate": 259200,
        "timeoriginalestimate": 259200,
        "timespent": null,
        "updated": "2018-11-21T23:58:18.000+0000",
        "versions": [{
            "archived": false,
            "description": "Beta release against 3.5 branch",
            "id": "12335444",
            "name": "3.5.3",
            "releaseDate": "2017-04-17",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12335444"
        }],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-2840/votes",
            "votes": 0
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-2840/watchers",
            "watchCount": 4
        },
        "workratio": 0
    },
    "id": "13084820",
    "key": "ZOOKEEPER-2840",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13084820"
}