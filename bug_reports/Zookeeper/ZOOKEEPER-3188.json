{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "percent": 100,
            "progress": 1800,
            "total": 1800
        },
        "aggregatetimeestimate": 0,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": 1800,
        "assignee": null,
        "components": [],
        "created": "2018-11-12T16:44:27.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Ted Dunning",
            "key": "tdunning",
            "name": "tdunning",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tdunning",
            "timeZone": "America/Los_Angeles"
        },
        "customfield_10010": null,
        "customfield_12310191": null,
        "customfield_12310192": null,
        "customfield_12310220": "2018-11-14T00:18:29.267+0000",
        "customfield_12310222": null,
        "customfield_12310230": null,
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "0.0",
        "customfield_12310420": "9223372036854775807",
        "customfield_12310920": "9223372036854775807",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|s00egg:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Dec 07 00:03:06 UTC 2018",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "We propose to add network level resiliency to Zookeeper. The ideas that we have on the topic have been discussed on the mailing list and via a specification document that is located at [https://docs.google.com/document/d/1iGVwxeHp57qogwfdodCh9b32P2_kOQaJZ2GDo7j36fI/edit?usp=sharing]\r\n\r\nThat document is copied to this issue which is being created to report the results of experimental implementations.\r\nh1. Zookeeper Network Resilience\r\nh2. Background\r\n\r\nZookeeper is designed to help in building distributed systems. It provides a variety of operations for doing this and all of these operations have rather strict guarantees on semantics. Zookeeper itself is a distributed system made up of cluster containing a leader and a number of followers. The leader is designated in a process known as leader election in which a majority of all nodes in the cluster must agree on a leader. All subsequent operations are initiated by the leader and completed when a majority of nodes have confirmed the operation. Whenever an operation cannot be confirmed by a majority or whenever the leader goes missing for a time, a new leader election is conducted and normal operations proceed once a new leader is confirmed.\r\n\r\n \r\n\r\nThe details of this are not important relative to this discussion. What is important is that the semantics of the operations conducted by a Zookeeper cluster and the semantics of how client processes communicate with the cluster depend only on the basic fact that messages sent over TCP connections will never appear out of order or missing. Central to the design of ZK is that a server to server network connection is used as long as it works to use it and a new connection is made when it appears that the old connection isn't working.\r\n\r\n \r\n\r\nAs currently implemented, however, each member of a Zookeeper cluster can have only a single address as viewed from some other process. This means, absent network link bonding, that the loss of a single switch or a few network connections could completely stop the operations of a the Zookeeper cluster. It is the goal of this work to address this issue by allowing each server to listen on multiple network interfaces and to connect to other servers any of several addresses. The effect will be to allow servers to communicate over redundant network paths to improve resiliency to network failures without changing any core algorithms.\r\nh2. Proposed Change\r\n\r\nInterestingly, the correct operations of a Zookeeper cluster do not depend on _how_ a TCP connection was made. There is no reason at all not to advertise multiple addresses for members of a Zookeeper cluster. \r\n\r\n \r\n\r\nConnections between members of a Zookeeper cluster and between a client and a cluster member are established by referencing a configuration file (for cluster members) that specifies the address of all of the nodes in a cluster or by using a connection string containing possible addresses of Zookeeper cluster members. As soon as a connection is made, any desired authentication or encryption layers are added and the connection is handed off to the client communications layer or the server to server logic. \r\n\r\nThis means that the only thing that actually needs to change to allow Zookeeper servers to be accessible on multiple networks is a change in the server configuration file format to allow the multiple addresses to be specified and to update the code that establishes the TCP connection to make use of these multiple addresses. No code changes are actually needed on the client since we can simply supply all possible server addresses. The client already has logic for selecting a server address at random and it doesn\u2019t really matter if these addresses represent synonyms for the same server. All that matters is that _some_ connection to a server is established.\r\nh2. Configuration File Syntax Change\r\n\r\nThe current Zookeeper syntax looks like this:\r\n\r\n \r\n\r\ntickTime=2000\r\ndataDir=/var/zookeeper\r\nclientPort=2181\r\ninitLimit=5\r\nsyncLimit=2\r\nserver.1=zoo1:2888:3888\r\nserver.2=zoo2:2888:3888\r\nserver.3=zoo3:2888:3888\r\n\r\n \r\n\r\nThe only lines that matter for this discussion are the last three. These specify the addresses for each of the servers that are part of the Zookeeper cluster as well as the port numbers used for the servers to talk to each other.\r\n\r\n \r\n\r\nI propose that the current syntax of these lines be augmented to allow a comma delimited list of addresses. For the current example, we might have this:\r\n\r\n \r\n\r\nserver.1=zoo1-net1:2888:3888,zoo1-net2:2888:3888\r\nserver.2=zoo2-net1:2888:3888,zoo2-net2:2888:3888\r\nserver.3=zoo3-net1:2888:3888\r\n\r\n \r\n\r\nThe first two servers are available via two different addresses, presumably on separate networks while the third server only has a single address. In practice, we would probably specify multiple addresses for all the servers, but that isn\u2019t necessary for this proposal. There is work ongoing to improve and generalize the syntax for configuring Zookeeper clusters. As that work progresses, it will be necessary to figure out appropriate extensions to allow multiple addresses in the new and improved syntax. Nothing blocks the current proposal from being implemented in current form and adapted later for the new syntax.\r\n\r\n \r\n\r\nWhen a server tries to connect to another server, it would simply shuffle the available addresses at random and try to connect using successive addresses until a connection succeeds or all addresses have been tried. \r\n\r\n \r\n\r\nThe complete syntax for server lines in a Zookeeper configuration file in BNF is\r\n\r\n \r\n\r\n<server-line> ::= \"server.\"<integer> \"=\" <address-spec>\r\n\r\n<address-spec> ::= <server-address>[<client-address>]\r\n\r\n<server-address> ::= <address>:<port1>:<port2>[:<role>]\r\n\r\n<client-address> ::= [;[<client address>:]<client port>\r\n\r\n \r\n\r\nAfter this change, the syntax would look like this:\r\n\r\n \r\n\r\n<server-line> ::= \"server.\"<integer> \"=\" <address-list>\r\n\r\n<address-list> ::= <address-spec>[,<address-list>]\r\n\r\n<address-spec> ::= <server-address>[<client-address>]\r\n\r\n<server-address> ::= <address>:<port1>:<port2>[:<role>]\r\n\r\n<client-address> ::= [;[<client address>:]<client port>\r\n\r\n \r\nh2. Dynamic Reconfiguration\r\n\r\nFrom version 3.5, Zookeeper has the ability to change the configuration of the cluster dynamically. This can involve the atomic change of any of the configuration parameters that are dynamically configurable. These include, notably for the purposes here, the addresses of the servers in the cluster. In order to simplify this, the configuration file post 3.5 is split into static configuration that cannot be changed on the fly and dynamic configuration that can be changed. When a new configuration is committed by the cluster, the dynamic configuration file is simply over-written and used.\r\n\r\n \r\n\r\nThis means that extending the configuration file syntax to support multiple addresses is sufficient to support dynamic reconfiguration.\r\nh2. Client Connections\r\n\r\nWhen client connections are initially made, the client library is given a list of servers to contact. Servers are selected at random until a connection is made or the patience of the library implementers is exhausted. This requires no changes to support multiple network links per server except insofar that servers with more network connections will wind up with more client connections unless some action is taken. What will be done is to find the server with the most addresses and add duplicates of some address for every other server until every server is mentioned the same number of times. For cases where all servers have identical numbers of network connections, this will cause no change. It is expected that this will only arise in normal situations as a transient condition while a cluster is being reconfigured or if some servers are added to a cluster temporarily during maintenance operations. \r\n\r\n \r\n\r\nMore interesting is the fact that when a connection is made to a Zookeeper cluster, the server responds with a list of the servers in the cluster. We will need to arrange that the list contains all available address in the Zookeeper cluster, but will not need to make any other changes. As mentioned before, some addresses might be duplicated to make sure that all servers have equal probability of being selected by a server.",
        "duedate": null,
        "environment": null,
        "fixVersions": [],
        "issuelinks": [{
            "id": "12548038",
            "outwardIssue": {
                "fields": {
                    "issuetype": {
                        "avatarId": 21133,
                        "description": "A problem which impairs or prevents the functions of the product.",
                        "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                        "id": "1",
                        "name": "Bug",
                        "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                        "subtask": false
                    },
                    "priority": {
                        "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                        "id": "3",
                        "name": "Major",
                        "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
                    },
                    "status": {
                        "description": "The issue is open and ready for the assignee to start work on it.",
                        "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                        "id": "1",
                        "name": "Open",
                        "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                        "statusCategory": {
                            "colorName": "blue-gray",
                            "id": 2,
                            "key": "new",
                            "name": "To Do",
                            "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2"
                        }
                    },
                    "summary": "Support new configuration syntax for resilient network feature"
                },
                "id": "13197980",
                "key": "ZOOKEEPER-3189",
                "self": "https://issues.apache.org/jira/rest/api/2/issue/13197980"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12548038",
            "type": {
                "id": "10032",
                "inward": "is blocked by",
                "name": "Blocker",
                "outward": "blocks",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10032"
            }
        }],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": ["pull-request-available"],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "id": "3",
            "name": "Major",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
        },
        "progress": {
            "percent": 100,
            "progress": 1800,
            "total": 1800
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310801&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310801&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310801&avatarId=10011",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12310801&avatarId=10011"
            },
            "id": "12310801",
            "key": "ZOOKEEPER",
            "name": "ZooKeeper",
            "projectCategory": {
                "description": "Apache ZooKeeper related",
                "id": "10484",
                "name": "ZooKeeper",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/10484"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12310801"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Ted Dunning",
            "key": "tdunning",
            "name": "tdunning",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tdunning",
            "timeZone": "America/Los_Angeles"
        },
        "resolution": null,
        "resolutiondate": null,
        "status": {
            "description": "The issue is open and ready for the assignee to start work on it.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
            "id": "1",
            "name": "Open",
            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
            "statusCategory": {
                "colorName": "blue-gray",
                "id": 2,
                "key": "new",
                "name": "To Do",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2"
            }
        },
        "subtasks": [],
        "summary": "Improve resilience to network",
        "timeestimate": 0,
        "timeoriginalestimate": null,
        "timespent": 1800,
        "updated": "2018-12-07T00:03:06.000+0000",
        "versions": [],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-3188/votes",
            "votes": 0
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-3188/watchers",
            "watchCount": 3
        },
        "workratio": -1
    },
    "id": "13197857",
    "key": "ZOOKEEPER-3188",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197857"
}