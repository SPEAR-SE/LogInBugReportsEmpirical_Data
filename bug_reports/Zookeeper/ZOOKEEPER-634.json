{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": null,
        "components": [{
            "description": "The c client interface to ZooKeeper",
            "id": "12312380",
            "name": "c client",
            "self": "https://issues.apache.org/jira/rest/api/2/component/12312380"
        }],
        "created": "2009-12-19T22:13:17.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Andrew Reynhout",
            "key": "reynhout",
            "name": "reynhout",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=reynhout",
            "timeZone": "Etc/UTC"
        },
        "customfield_10010": null,
        "customfield_12310191": null,
        "customfield_12310192": null,
        "customfield_12310220": "2010-01-05T20:48:06.070+0000",
        "customfield_12310222": "1_*:*_1_*:*_449366_*|*_5_*:*_1_*:*_0",
        "customfield_12310230": null,
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "0.0",
        "customfield_12310420": "214146",
        "customfield_12310920": "32953",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i0604v:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jan 05 20:48:06 UTC 2010",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "I'm working on Ruby bindings for ZK (3.2.2) via the C API.  This involves some painful kludgery due to MRI Ruby's threading model, but I believe this bug report is valid:\n\nSome of the elements of Stat structs, when returned via the C client, have values inconsistent with the synchronous call, zkCli output, and expectations.  E.g.:\n\n{noformat:title=zkCli command line}\n$ zk/bin/zkCli.sh -server localhost:2182 set /lala lala234\nConnecting to localhost:2182\n\nWATCHER::\n\nWatchedEvent: Server state change. New state: SyncConnected\ncZxid = 3\nctime = Sat Dec 19 14:32:03 EST 2009\nmZxid = 69\nmtime = Sat Dec 19 15:31:46 EST 2009\npZxid = 3\ncversion = 0\ndataVersion = 4\naclVersion = 0\nephemeralOwner = 0\ndataLength = 7\nnumChildren = 0\n\n{noformat}\n\n{noformat:title=Ruby script + verbose ZK log output}\n2009-12-19 15:31:48,952:45753(0x751000):ZOO_DEBUG@process_completions@1902: Switching on cptr->completion_type (async)\n2009-12-19 15:31:48,952:45753(0x751000):ZOO_DEBUG@process_completions@1916: Calling COMPLETION_STAT for xid=4b2d3837 rc=0\n2009-12-19 15:31:48,952:45753(0x751000):ZOO_DEBUG@process_completions@1949: --- PRE ruby callback.\n   -----------------------\n   &res.stat    0x00750e30\n        .czxid        3\n        .mzxid        69\n        .ctime        1261251123149\n        .mtime        1261254706180\n        .version      4\n        .cversion     0\n        .aversion     0\n        .ephemeralOwner 0\n        .dataLength   7\n        .numChildren  0\n        .pzxid        3\n   =======================\n2009-12-19 15:31:48,952:45753(0x751000):ZOO_DEBUG@ruby_stat_completion_wrapper@1702: --- creating ruby thread.\n2009-12-19 15:31:48,952:45753(0x7ee000):ZOO_DEBUG@ruby_stat_completion_wrapper_2@1685: --- invoking ruby callback.\n   -----------------------\n   cb->dc         0x002fe000\n   cb->rc         0\n   cb->ctx        0x01a03870\n   cb->stat       0x00750e30\n     ->czxid        3\n     ->mzxid        69\n     ->ctime        1261251123149\n     ->mtime        140735387442616\n     ->version      0\n     ->cversion     0\n     ->aversion     27264392\n     ->ephemeralOwner 4302638816\n     ->dataLength   -2100901903\n     ->numChildren  32767\n     ->pzxid        3\n   =======================\n2009-12-19 15:31:48,952:45753(0x7ee000):ZOO_DEBUG@ruby_stat_completion_wrapper_2@1687: --- callback returned, freeing struct.\n2009-12-19 15:31:48,952:45753(0x7ee000):ZOO_DEBUG@ruby_stat_completion_wrapper_2@1689: --- struct freed.\nsync returned #<ZooKeeperFFI::Stat:0x000001013783d0>\nasync callback.return_code 0\n           attr  ??                   sync                  async\n           ----  --                   ----                  -----\n          czxid  OK                      3                      3\n          mzxid  OK                     69                     69\n          ctime  OK          1261251123149          1261251123149\n          mtime  --          1261254706180        140735387442616\n        version  --                      4                      0\n       cversion  OK                      0                      0\n       aversion  --                      0               27264392\n ephemeralOwner  --                      0             4302638816\n     dataLength  --                      7            -2100901903\n    numChildren  --                      0                  32767\n          pzxid  OK                      3                      3\n2009-12-19 15:31:49,052:45753(0x6ce000):ZOO_DEBUG@do_io@316: IO thread terminated\n2009-12-19 15:31:49,052:45753(0x751000):ZOO_DEBUG@do_completion@335: completion thread terminated\n2009-12-19 15:31:49,052:45753(0x705f3be0):ZOO_INFO@zookeeper_close@2407: Closing zookeeper session 125a86bdc640020 to [127.0.0.1:2182]\n{noformat}\n\nThe last set of lines, above, are output from my Ruby code, comparing the differences between sync and async calls.  I added the LOG_DEBUG in zookeeper.c to dump the contents of res.stat before it gets shipped off to Ruby...as you can see, the LOG_DEBUG values match the values in the async Ruby call, but they're wrong.\n\nI've currently only tested on OSX 10.5 (32bit) and 10.6 (64bit), but sometimes different elements are wrong on each.  I can get a comprehensive list if it's useful, but as examples:\n\n{noformat:title=data variation examples}\n## aexists\n# ctime (int64_t):\n#  32b OK\n#  64b OK\n# dataLength (int32_t):\n#  32b OK\n#  64b NG (== -2100901903 instead of 10)\n\n## aget\n# ctime (int64_t):\n#  32b OK\n#  64b NG (== 0 instead of something unixtimey e.g. 1261251123149)\n# dataLength (int32_t):\n#  32b NG (== -1856148083 instead of 10)\n#  64b OK\n\n## aset\n# ctime (int64_t):\n#  32b OK\n#  64b OK\n# dataLength (int32_t):\n#  32b OK\n#  64b NG (== -2100901903 instead of 10)\n\n{noformat}\n\n\nLastly, a snippet of my changes to zookeeper.c, hopefully showing that I haven't done any harm to the data.  Note that I'm also seeing similar data variations for COMPLETION_DATA, which also returns a Stat struct.  I haven't finished the Ruby code for COMPLETION_ACLLIST (again, returns a Stat), so the same issue might arise there as well.\n\nI realize that hacking the ZK C API is not a great way to build a foreign binding.  :(\n\n{code:title=src/c/src/zookeeper.c}\n\n            case COMPLETION_STAT:\n                LOG_DEBUG((\"Calling COMPLETION_STAT for xid=%x rc=%d\",cptr->xid,rc));\n                if (rc) {\n                    //cptr->c.stat_result(rc, 0, cptr->data);\n                    ruby_stat_completion_wrapper(cptr->c.stat_result, rc, 0, (void *)cptr->data);\n                } else {\n                    struct SetDataResponse res;\n                    deserialize_SetDataResponse(ia, \"reply\", &res);\n  LOG_DEBUG((\"--- PRE ruby callback.\\n\\\n   -----------------------\\n\\\n   &res.stat    0x%08x\\n\\\n        .czxid        %ld\\n\\\n        .mzxid        %ld\\n\\\n        .ctime        %ld\\n\\\n        .mtime        %ld\\n\\\n        .version      %d\\n\\\n        .cversion     %d\\n\\\n        .aversion     %d\\n\\\n        .ephemeralOwner %ld\\n\\\n        .dataLength   %d\\n\\\n        .numChildren  %d\\n\\\n        .pzxid        %ld\\n\\\n   =======================\",\n    &res.stat,\n    res.stat.czxid, res.stat.mzxid, res.stat.ctime, res.stat.mtime,\n    res.stat.version, res.stat.cversion, res.stat.aversion,\n    res.stat.ephemeralOwner, res.stat.dataLength, res.stat.numChildren,\n    res.stat.pzxid ));\n                    //cptr->c.stat_result(rc, &res.stat, cptr->data);\n                    ruby_stat_completion_wrapper(cptr->c.stat_result, rc, &res.stat, (void *)cptr->data);\n                    deallocate_SetDataResponse(&res);\n                }\n                break;\n\n{code}\n\n\n",
        "duedate": null,
        "environment": "OSX 10.5, 10.6 (32b and 64b, respectively)",
        "fixVersions": [],
        "issuelinks": [],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "id": "4",
            "name": "Minor",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310801&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310801&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310801&avatarId=10011",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12310801&avatarId=10011"
            },
            "id": "12310801",
            "key": "ZOOKEEPER",
            "name": "ZooKeeper",
            "projectCategory": {
                "description": "Apache ZooKeeper related",
                "id": "10484",
                "name": "ZooKeeper",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/10484"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12310801"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Andrew Reynhout",
            "key": "reynhout",
            "name": "reynhout",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=reynhout",
            "timeZone": "Etc/UTC"
        },
        "resolution": {
            "description": "The problem isn't valid and it can't be fixed.",
            "id": "6",
            "name": "Invalid",
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/6"
        },
        "resolutiondate": "2009-12-19T22:20:46.000+0000",
        "status": {
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "id": "5",
            "name": "Resolved",
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "statusCategory": {
                "colorName": "green",
                "id": 3,
                "key": "done",
                "name": "Done",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
            }
        },
        "subtasks": [],
        "summary": "some elements of struct Stat have incorrect values when returned asynchronously",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2010-01-05T20:48:06.000+0000",
        "versions": [{
            "archived": false,
            "description": "Fix release against 3.2 branch",
            "id": "12314068",
            "name": "3.2.1",
            "releaseDate": "2009-09-04",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12314068"
        }],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-634/votes",
            "votes": 0
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-634/watchers",
            "watchCount": 0
        },
        "workratio": -1
    },
    "id": "12443851",
    "key": "ZOOKEEPER-634",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12443851"
}