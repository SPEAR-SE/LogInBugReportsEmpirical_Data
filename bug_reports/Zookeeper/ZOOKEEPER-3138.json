{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": null,
        "components": [
            {
                "description": "Leader election algorithm for ZooKeeper",
                "id": "12312378",
                "name": "leaderElection",
                "self": "https://issues.apache.org/jira/rest/api/2/component/12312378"
            },
            {
                "description": "Quorum determination for ZooKeeper",
                "id": "12312379",
                "name": "quorum",
                "self": "https://issues.apache.org/jira/rest/api/2/component/12312379"
            },
            {
                "id": "12329414",
                "name": "security",
                "self": "https://issues.apache.org/jira/rest/api/2/component/12329414"
            }
        ],
        "created": "2018-09-05T15:37:32.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gzres&avatarId=16612",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gzres&avatarId=16612",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gzres&avatarId=16612",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=gzres&avatarId=16612"
            },
            "displayName": "Grzegorz Grzybek",
            "key": "gzres",
            "name": "gzres",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=gzres",
            "timeZone": "Europe/Berlin"
        },
        "customfield_10010": null,
        "customfield_12310191": null,
        "customfield_12310192": null,
        "customfield_12310220": null,
        "customfield_12310222": null,
        "customfield_12310230": null,
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "0.0",
        "customfield_12310420": "9223372036854775807",
        "customfield_12310920": "9223372036854775807",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i3xrev:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "2018-09-05 15:37:32.0",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "I'm in the process of reconfiguring the ensemble to use mutual quorum peer authentication using SASL (ZOOKEEPER-1045).\r\n\r\nIn order to understand the impact on my code, I've checked _how it works_. Now I'm running & debugging {{org.apache.zookeeper.server.quorum.auth.QuorumDigestAuthTest#testValidCredentials()}} test case.\r\n\r\nI have now six threads (3 peers contacting each other):\r\n* \"QuorumConnectionThread-[myid=0]-2@1483\" prio=5 tid=0x2b nid=NA runnable\r\n* \"QuorumConnectionThread-[myid=0]-3@1491\" prio=5 tid=0x36 nid=NA runnable\r\n* \"QuorumConnectionThread-[myid=1]-1@1481\" prio=5 tid=0x2d nid=NA runnable\r\n* \"QuorumConnectionThread-[myid=1]-4@1505\" prio=5 tid=0x3c nid=NA runnable\r\n* \"QuorumConnectionThread-[myid=2]-2@1495\" prio=5 tid=0x37 nid=NA runnable\r\n* \"QuorumConnectionThread-[myid=2]-4@1506\" prio=5 tid=0x3d nid=NA runnable\r\n\r\nat this point of invocation:\r\n{noformat}\r\n  java.lang.Thread.State: RUNNABLE\r\n\t  at org.apache.zookeeper.server.quorum.auth.SaslQuorumServerCallbackHandler.handleNameCallback(SaslQuorumServerCallbackHandler.java:101)\r\n\t  at org.apache.zookeeper.server.quorum.auth.SaslQuorumServerCallbackHandler.handle(SaslQuorumServerCallbackHandler.java:82)\r\n\t  at com.sun.security.sasl.digest.DigestMD5Server.validateClientResponse(DigestMD5Server.java:589)\r\n\t  at com.sun.security.sasl.digest.DigestMD5Server.evaluateResponse(DigestMD5Server.java:244)\r\n\t  at org.apache.zookeeper.server.quorum.auth.SaslQuorumAuthServer.authenticate(SaslQuorumAuthServer.java:100)\r\n\t  at org.apache.zookeeper.server.quorum.QuorumCnxManager.handleConnection(QuorumCnxManager.java:467)\r\n\t  at org.apache.zookeeper.server.quorum.QuorumCnxManager.receiveConnection(QuorumCnxManager.java:386)\r\n\t  at org.apache.zookeeper.server.quorum.QuorumCnxManager$QuorumConnectionReceiverThread.run(QuorumCnxManager.java:422)\r\n\t  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\t  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\t  at java.lang.Thread.run(Thread.java:748)\r\n{noformat}\r\n\r\nwhich is this line:\r\n{code:java}\r\nprivate void handleNameCallback(NameCallback nc) {\r\n    // check to see if this user is in the user password database.\r\n    if (credentials.get(nc.getDefaultName()) == null) {\r\n        LOG.warn(\"User '{}' not found in list of DIGEST-MD5 authenticateable users.\",\r\n                nc.getDefaultName());\r\n        return;\r\n    }\r\n    nc.setName(nc.getDefaultName());\r\n    /* >>> */ userName = nc.getDefaultName(); /* <<< */\r\n}\r\n{code}\r\n\r\neach pair of threads is operating on single instance of {{org.apache.zookeeper.server.quorum.auth.SaslQuorumServerCallbackHandler#userName}}. In the stack trace we have both shared and local variables/fields:\r\n* {{o.a.z.server.quorum.QuorumCnxManager.QuorumConnectionReceiverThread#sock}} is thread-specific (ok)\r\n* {{o.a.z.server.quorum.QuorumCnxManager#authServer}} is peer-specific (instance of {{o.a.z.server.quorum.auth.SaslQuorumAuthServer}}) but without a state that changes\r\n* {{javax.security.sasl.SaslServer}} is thread-specific (ok) - this instance is created to handle sasl authentication, but is created using peer-specific JAAS subject (which is ok) and peer-specific {{o.a.z.server.quorum.auth.SaslQuorumAuthServer#serverLogin.callbackHadler}} {color:red}which is potentially a problem{color}\r\n\r\nEach (out of six) thread handles different connection, but each pair (for given QuorumPeer) calls {{o.a.z.server.quorum.auth.SaslQuorumServerCallbackHandler#handleNameCallback()}} which modifies shared (peer-specific) field - {{userName}}.\r\n\r\nI understand that [according to the example from Wiki|https://cwiki.apache.org/confluence/display/ZOOKEEPER/Server-Server+mutual+authentication] all peers may use the same credentials (in simplest case).\r\n\r\nBut the \"userName\" comes from data sent by each peer, like this:\r\n{noformat}\r\ncharset=utf-8,\\\r\nusername=\"test\",\\\r\nrealm=\"zk-quorum-sasl-md5\",\\\r\nnonce=\"iBqYWtaCrEE013S6Dv6xiOsR9uX2l/qKZcEZ1pm2\",\\\r\nnc=00000001,\\\r\ncnonce=\"LVaL9XYFjNxVBPCjPewXjEBsj9GuwIfBN/RXsKt5\",\\\r\ndigest-uri=\"zookeeper-quorum/zk-quorum-sasl-md5\",\\\r\nmaxbuf=65536,\\\r\nresponse=dd4e9e2115ec2e304484d5191f3fc771,\\\r\nqop=auth,\\\r\nauthzid=\"test\"\r\n{noformat}\r\n\r\n*And I can imagine such JAAS configuration for DIGEST-MD5 SASL algorithm, that each peer uses own credentials and is able to validate other peers' specific credentials.*:\r\n{noformat}\r\nQuorumServer {\r\n       org.apache.zookeeper.server.auth.DigestLoginModule required\r\n       user_peer1=\"peer1\";\r\n       user_peer2=\"peer2\";\r\n       user_peer3=\"peer3\";\r\n};\r\nQuorumLearner1 {\r\n       org.apache.zookeeper.server.auth.DigestLoginModule required\r\n       username=\"peer1\"\r\n       password=\"peer1\";\r\n};\r\nQuorumLearner2 {\r\n       org.apache.zookeeper.server.auth.DigestLoginModule required\r\n       username=\"peer2\"\r\n       password=\"peer2\";\r\n};\r\nQuorumLearner2 {\r\n       org.apache.zookeeper.server.auth.DigestLoginModule required\r\n       username=\"peer3\"\r\n       password=\"peer3\";\r\n};\r\n{noformat}\r\n\r\nIsn't it a race condition? Like this (having 3 peers):\r\n||thread handling peer 2 → peer 1 connection||thread handling peer 3 → peer 1 connection||\r\n|sets o.a.z.s.q.auth.SaslQuorumServerCallbackHandler#userName to \"peer2\"| |\r\n| |sets o.a.z.s.q.auth.SaslQuorumServerCallbackHandler#userName to \"peer3\"|\r\n|sets PasswordCallback.password to o.a.z.s.q.auth.SaslQuorumServerCallbackHandler#credentials.get(\"peer3\")| |\r\n| | continues ...|\r\n|com.sun.security.sasl.digest.DigestMD5Base#generateResponseValue() generates expected response using:\r\n* username: \"peer2\"\r\n* password of user \"peer3\"| |\r\n\r\nPlease verify.",
        "duedate": null,
        "environment": null,
        "fixVersions": [],
        "issuelinks": [],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "id": "3",
            "name": "Major",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310801&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310801&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310801&avatarId=10011",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12310801&avatarId=10011"
            },
            "id": "12310801",
            "key": "ZOOKEEPER",
            "name": "ZooKeeper",
            "projectCategory": {
                "description": "Apache ZooKeeper related",
                "id": "10484",
                "name": "ZooKeeper",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/10484"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12310801"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gzres&avatarId=16612",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gzres&avatarId=16612",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gzres&avatarId=16612",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=gzres&avatarId=16612"
            },
            "displayName": "Grzegorz Grzybek",
            "key": "gzres",
            "name": "gzres",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=gzres",
            "timeZone": "Europe/Berlin"
        },
        "resolution": null,
        "resolutiondate": null,
        "status": {
            "description": "The issue is open and ready for the assignee to start work on it.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
            "id": "1",
            "name": "Open",
            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
            "statusCategory": {
                "colorName": "blue-gray",
                "id": 2,
                "key": "new",
                "name": "To Do",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2"
            }
        },
        "subtasks": [],
        "summary": "Potential race condition with Quorum Peer mutual authentication via SASL",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2018-09-06T06:36:01.000+0000",
        "versions": [{
            "archived": false,
            "description": "Fix release against 3.4 branch",
            "id": "12342973",
            "name": "3.4.13",
            "releaseDate": "2018-07-17",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12342973"
        }],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-3138/votes",
            "votes": 0
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ZOOKEEPER-3138/watchers",
            "watchCount": 4
        },
        "workratio": -1
    },
    "id": "13183152",
    "key": "ZOOKEEPER-3138",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183152"
}