{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12668594","self":"https://issues.apache.org/jira/rest/api/2/issue/12668594","key":"MAPREDUCE-5508","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310941","id":"12310941","key":"MAPREDUCE","name":"Hadoop Map/Reduce","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310941&avatarId=10096","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310941&avatarId=10096","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310941&avatarId=10096","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310941&avatarId=10096"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12321744","id":"12321744","description":"hadoop-1.x for MS Windows ","name":"1-win","archived":true,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12324153","id":"12324153","description":"1.3.0 release","name":"1.3.0","archived":false,"released":false}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2013-09-14T02:23:25.003+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Thu Nov 07 18:34:06 UTC 2013","customfield_12310420":"348528","customfield_12312320":null,"customfield_12310222":"3_*:*_1_*:*_883528200_*|*_1_*:*_1_*:*_1044234_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2013-09-24T05:35:27.541+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/MAPREDUCE-5508/watchers","watchCount":8,"isWatching":false},"created":"2013-09-13T23:52:35.134+0000","customfield_12310192":null,"customfield_12310191":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10343","value":"Reviewed","id":"10343"}],"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.svg","name":"Critical","id":"2"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"6.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12321744","id":"12321744","description":"hadoop-1.x for MS Windows ","name":"1-win","archived":true,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12324149","id":"12324149","description":"maintenance release on branch-1.2","name":"1.2.1","archived":false,"released":true,"releaseDate":"2013-08-01"}],"issuelinks":[{"id":"12375272","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12375272","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12668689","key":"HDFS-5211","self":"https://issues.apache.org/jira/rest/api/2/issue/12668689","fields":{"summary":"Race condition between DistributedFileSystem#close and FileSystem#close can cause return of a closed DistributedFileSystem instance from the FileSystem cache.","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}},{"id":"12375249","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12375249","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12654628","key":"MAPREDUCE-5351","self":"https://issues.apache.org/jira/rest/api/2/issue/12654628","fields":{"summary":"JobTracker memory leak caused by CleanupQueue reopening FileSystem","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.svg","name":"Critical","id":"2"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}},{"id":"12375763","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12375763","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12670210","key":"HADOOP-9993","self":"https://issues.apache.org/jira/rest/api/2/issue/12670210","fields":{"summary":"FileSystem#close JavaDoc should state that the implementation must be idempotent.","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype","name":"Improvement","subtask":false,"avatarId":21140}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2013-11-07T18:34:06.513+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312907","id":"12312907","name":"jobtracker"}],"timeoriginalestimate":null,"description":"MAPREDUCE-5351 fixed a memory leak problem but introducing another filesystem object (see \"tempDirFs\") that is not properly released.\n{code} JobInProgress#cleanupJob()\n\n  void cleanupJob() {\n...\n          tempDirFs = jobTempDirPath.getFileSystem(conf);\n          CleanupQueue.getInstance().addToQueue(\n              new PathDeletionContext(jobTempDirPath, conf, userUGI, jobId));\n...\n if (tempDirFs != fs) {\n      try {\n        fs.close();\n      } catch (IOException ie) {\n...\n}\n{code}\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12321744","id":"12321744","description":"hadoop-1.x for MS Windows ","name":"1-win","archived":true,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12324153","id":"12324153","description":"1.3.0 release","name":"1.3.0","archived":false,"released":false}],"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12612590","id":"12612590","filename":"CleanupQueue.java","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=viswaj","name":"viswaj","key":"viswaj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"viswanathan","active":true,"timeZone":"Etc/UTC"},"created":"2013-11-07T12:44:31.833+0000","size":6468,"mimeType":"text/x-java","content":"https://issues.apache.org/jira/secure/attachment/12612590/CleanupQueue.java"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12612591","id":"12612591","filename":"JobInProgress.java","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=viswaj","name":"viswaj","key":"viswaj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"viswanathan","active":true,"timeZone":"Etc/UTC"},"created":"2013-11-07T12:44:31.836+0000","size":129496,"mimeType":"text/x-java","content":"https://issues.apache.org/jira/secure/attachment/12612591/JobInProgress.java"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12603919","id":"12603919","filename":"MAPREDUCE-5508.1.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-18T21:36:08.956+0000","size":3227,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12603919/MAPREDUCE-5508.1.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12604528","id":"12604528","filename":"MAPREDUCE-5508.2.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-23T06:19:12.727+0000","size":3944,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12604528/MAPREDUCE-5508.2.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12604722","id":"12604722","filename":"MAPREDUCE-5508.3.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-24T01:29:35.370+0000","size":3963,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12604722/MAPREDUCE-5508.3.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12603166","id":"12603166","filename":"MAPREDUCE-5508.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-14T00:10:36.177+0000","size":1733,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12603166/MAPREDUCE-5508.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"348825","customfield_12312823":null,"summary":"JobTracker memory leak caused by unreleased FileSystem objects in JobInProgress#cleanupJob","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13767210","id":"13767210","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"body":"This bug was found in Microsoft's large scale test with about 200,000 job submissions. The memory usage is steadily growing up. \n\nThere is a long discussion between Hortonworks (thanks [~cnauroth] and [~vinodkv]) and Microsoft on this issue. Here is the summary of the discussion.\n\n1. The heap dumps are showing DistributedFileSystem instances that are only referred to from the cache's HashMap entries. Since nothing else has a reference, nothing else can ever attempt to close it, and therefore it will never be removed from the cache. \n\n2. The special check for \"tempDirFS\" (see code in description) in the patch for MAPREDUCE-5351 is intended as an optimization so that CleanupQueue doesn't need to immediately reopen a FileSystem that was just closed. However, we observed that we're getting different identity hash code values on the subject in the key. The code is assuming that CleanupQueue will find the same Subject that was used inside JobInProgress. Unfortunately, this is not guaranteed, because we may have crossed into a different access control context at this point, via UserGroupInformation#doAs. Even though it's conceptually the same user, the Subject is a function of the current AccessControlContext:\n{code}\n  public synchronized\n  static UserGroupInformation getCurrentUser() throws IOException {\n    AccessControlContext context = AccessController.getContext();\n    Subject subject = Subject.getSubject(context);\n{code}\nEven if the contexts are logically equivalent between JobInProgress and CleanupQueue, we see no guarantee that Java will give you the same Subject instance, which is required for successful lookup in the FileSystem cache (because of the use of identity hash code).\n\nA fix is abandon this optimization and close the FileSystem within the same AccessControlContext that opened it.  \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-14T00:06:13.180+0000","updated":"2013-09-14T00:06:13.180+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13767308","id":"13767308","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sandyr","name":"sandyr","key":"sandyr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sandy Ryza","active":true,"timeZone":"America/Los_Angeles"},"body":"Have you tested this fix?  I took a deeper look into this and it doesn't appear that tempDirFs and fs are ever even ending up equal because tempDirFs is created with the wrong UGI.\n\nThe deeper problem to me is that we are creating a new UGI, which can have a new subject, which can create a new entry in the FS cache, every time CleanupQueue#deletePath is called with a null UGI.  This occurs here:\n{code}\n        CleanupQueue.getInstance().addToQueue(\n            new PathDeletionContext(tempDir, conf));\n{code}\n\nA better fix would be to avoid this, either by having CleanupQueue hold a UGI of the login user for use in these situations or to avoid the doAs entirely when the given UGI is null.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sandyr","name":"sandyr","key":"sandyr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sandy Ryza","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-14T02:23:25.003+0000","updated":"2013-09-14T02:23:25.003+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13767396","id":"13767396","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"I was +1 for Xi's patch, but I didn't want to commit it too hastily so that the participants on MAPREDUCE-5351 would get a chance to review.  Sandy, thank you for responding so quickly.\n\nbq. Have you tested this fix?\n\nYes, Xi repeated his test run of ~200,000 jobs with this patch, and the heap dump no longer showed leaked instances of {{DistributedFileSystem}}.  This is definitely the source of the leak.\n\nbq. The deeper problem to me is that we are creating a new UGI, which can have a new subject, which can create a new entry in the FS cache, every time CleanupQueue#deletePath is called with a null UGI.\n\nJust to clarify, the problem we saw is that a new {{UserGroupInformation}}/new {{Subject}} gets created regardless of whether or not a null UGI was passed to {{CleanupQueue#deletePath}}.  It's buried behind the last line of this code snippet:\n\n{code}\n    protected void deletePath() throws IOException, InterruptedException {\n      final Path p = getPathForCleanup();\n      (ugi == null ? UserGroupInformation.getLoginUser() : ugi).doAs(\n          new PrivilegedExceptionAction<Object>() {\n            public Object run() throws IOException {\n              FileSystem fs = p.getFileSystem(conf);\n{code}\n\nThe last line eventually hits {{FileSystem#Cache#get}}, which calls {{UserGroupInformation#getCurrentUser}} while constructing the cache key, but that doesn't always result in the same underlying {{Subject}} instance as the one that initially created the FS cache entry.\n\nbq. A better fix would be to avoid this, either by having CleanupQueue hold a UGI of the login user for use in these situations or to avoid the doAs entirely when the given UGI is null.\n\nWe can tell from the heap dump that the leaked instances are associated with the user UGI and not the login UGI, so I don't think there is a way to use the login UGI to remove those cache entries.  I don't see a way to avoid the doAs, because we're seeing the leak in the case of the user UGI, so we'd want the impersonation in place.\n\nSide note: the return value of {{UserGroupInformation#getLoginUser}} is cached for the lifetime of the process, so it's always going to have the same {{Subject}} instance.  That makes it impossible to have a large, visible leak in the FS cache for entries associated to the login user.\n\nThe only other potential solution I can think of is explicitly passing the {{FileSystem}} instance to use for the delete and close into {{PathDeletionContext}}.  Then, it wouldn't need to infer the FS to use by calling {{Path#getFileSystem}} with its implicit creation of a new {{Subject}}.  Do you think something like that would work?\n\nBTW, this problem also made me wonder if it's incorrect for UGI to use an identity hash code.  I couldn't track down the rationale for that.  Presumably it's related to performance.  The code of {{Subject#hashCode}} combines data from a lot of internal data structures, and it all happens while holding the monitor.  This made me think changing the hash code would be too risky.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-14T07:19:31.783+0000","updated":"2013-09-14T07:19:31.783+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13767401","id":"13767401","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"body":"[~sandyr] Thanks for your comments.\n\nbq. Have you tested this fix.\n\nYes. We have tested this fix on our test cluster (about 130,000 submission). After the workflow was done, we waited for a couple of minutes (jobs were retiring), then forced GC, and then dumped the memory. We manually checked the FileSystem#Cache. There was no memory leak.\n\nbq. For your analysis \n\n1. I agree with \"it doesn't appear that tempDirFs and fs are ever even ending up equal because tempDirFs is created with the wrong UGI.\"  \n2. I think tempDir would be fine because  1) JobInProgess#cleanupJob won't introduce a file system instance for tempDir and 2) the fs in CleanupQueue@deletePath would be reused (i.e. only one instance would exist in FileSystem#Cache). My initial thought was this part has a memory leak. But a test shows that there is no problem here.\n3. The problem is actually \n{code}\ntempDirFs = jobTempDirPath.getFileSystem(conf);\n{code}\nThe problem here is that this guy \"MAY\" (I will explain later) put a new entry in FileSystem#Cache. Note that this would eventually go into UserGroupInformation#getCurrentUser to get a UGI with a current AccessControlContext.  CleanupQueue#deletePath won't close this entry because a different UGI (i.e. \"userUGI\" created in JobInProgress) is used there. Here is the tricky part which we had a long discussion with [~cnauroth] and [~vinodkv]. The problem here is that although we may only have one current user, the following code \"MAY\" return different subjects.\n{code}\n static UserGroupInformation getCurrentUser() throws IOException {\n    AccessControlContext context = AccessController.getContext();\n-->    Subject subject = Subject.getSubject(context);   -------------------------< \n{code}\nBecause the entry of FileSystem#Cache uses identityHashCode of a subject to construct the key, a file system object created by  \"jobTempDirPath.getFileSystem(conf)\" may not be found later when this code is executed again, although we may have the same principle (i.e. the current user). This eventually leads to an unbounded number of file system instances in FileSystem#Cache. Nothing is going to remove them from the cache.\n \nPlease let me know if you have any questions. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-14T07:44:14.470+0000","updated":"2013-09-14T07:44:14.470+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13767402","id":"13767402","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"body":"Just found Chris was also working on this thread :). I agree with Chris. Changing the hash code may have a wide impact on existing code that would be risky.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-14T07:48:27.665+0000","updated":"2013-09-14T07:48:27.665+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13767509","id":"13767509","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sandyr","name":"sandyr","key":"sandyr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sandy Ryza","active":true,"timeZone":"America/Los_Angeles"},"body":"Ahh ok that makes total sense.  Agreed that we shouldn't change the equals/hashCode - this behavior was intentional (HADOOP-6670).\n\nWe still shouldn't need to close fs in every case though, right? We should be able to look at the scheme of the jobSubmitDir and only close it if it doesn't match the scheme of jobTempDir?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sandyr","name":"sandyr","key":"sandyr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sandy Ryza","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-14T15:14:49.499+0000","updated":"2013-09-14T15:14:49.499+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13767525","id":"13767525","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks Sandy for the information on HADOOP-6670. I think we may still need to close fs anyway, because p.getFileSystem(conf) in CleanupQueue#deletePath may not be able to find the FileSystem#Cache entry of JobInProgress#fs because of the different subject problem we discussed above. In this case, nothing will remove JobInProgress#fs from the FileSystem#Cache.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-14T16:54:31.530+0000","updated":"2013-09-14T16:54:31.530+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13767644","id":"13767644","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sandyr","name":"sandyr","key":"sandyr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sandy Ryza","active":true,"timeZone":"America/Los_Angeles"},"body":"If I understand correctly, in that case the same UGI instance (JobInProgress.userUGI) that was used to create the fs is used to close it, so having different subjects is not possible.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sandyr","name":"sandyr","key":"sandyr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sandy Ryza","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-15T01:35:27.430+0000","updated":"2013-09-15T01:35:27.430+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13767698","id":"13767698","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. If I understand correctly, in that case the same UGI instance (JobInProgress.userUGI) that was used to create the fs is used to close it, so having different subjects is not possible.\n\nThe 2 UGI instances (one passed in to {{PathDeletionContext}} and one created implicitly by the call to {{Path#getFileSystem}}) do have the same value, but they have different identities.  Even though they are logically equivalent, there are 2 different underlying {{Subject}} instances with different identity hash codes.  Thus, the cache entry used during creation of the {{FileSystem}} will be different from the one used during close, which causes the leak.\n\nAnother way of saying this is that even though the same {{Principal}} is used, {{Path#getFileSystem}} will create a different {{Subject}}, because {{CleanupQueue}} is running inside a different JAAS {{AccessControlContext}}.  The {{Subject}} is a function of not only the {{Principal}} but also the {{AccessControlContext}}.  (Again, both the {{AccessControlContext}} and {{Subject}} may be logically equivalent, but we're observing that they are not the same instances, so they have different identity hash codes.)\n\nIf you really want to avoid the extra close, then the only other possible solution that I can think of would involve passing the {{FileSystem}} instance to use into the {{PathDeletionContext}}.  This would make it explicit instead of relying on the implicit cache lookup of {{Path#getFileSystem}}.  I haven't completely thought through if that approach would have other side effects though.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-15T05:44:18.534+0000","updated":"2013-09-15T05:44:18.534+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13767702","id":"13767702","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks [~sandyr] and [~cnauroth]. Actually, the above discussion made me have second thoughts on the patch attached. There is a race condition here. Supposed that Path#getFileSystem in CleanupQueue#deletePath retrieved the same instance of JobInProgress#fs from FileSystem#Cache as well. Because there is race condition between DistributedFileSystem#close() and FileSystem#close(), it is possible that at the most just after JobInProgress#cleanupJob closed JobInProgress#fs's DFSClient, the processor switched to CleanupQueue#deletePath and called fs.delete(). Because this fs's DFCClient has been closed, an exception would be thrown and this staging directory won't be deleted then.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-15T06:19:28.159+0000","updated":"2013-09-15T06:19:28.159+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13767828","id":"13767828","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. ...race condition between DistributedFileSystem#close() and FileSystem#close()...\n\nI've been meaning to file an issue for this one, so I just created HDFS-5211.  Xi, do you mind if we handle that issue separately and keep this issue focused on fixing the JobTracker memory leak?  It's an HDFS bug that impacts any multi-threaded usage of {{DistributedFileSystem}} (not just this MapReduce code path), and I think we can fix the root cause there in HDFS.\n\nIOW, we don't need to let the presence of that bug influence the way we code a fix for this one, because I think we can fix both.  :-)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-15T16:13:43.236+0000","updated":"2013-09-15T16:13:43.236+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13767847","id":"13767847","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks Chris for filing HDFS-5211. That sounds good to me:)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-15T17:07:49.823+0000","updated":"2013-09-15T17:07:49.823+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13769888","id":"13769888","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"I have committed HDFS-5211.\n\nXi is going to work on an alternative patch that tries my second idea: pass the correct {{FileSystem}} into the {{PathDeletionContext}} so that {{CleanupQueue}} doesn't need to rely on the cache's implicit key creation.  If that works, and if we confirm that the new patch also fixes the leak, then we can compare the two patches and decide which one to commit.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-17T20:21:46.279+0000","updated":"2013-09-17T20:21:46.279+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13770338","id":"13770338","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sandyr","name":"sandyr","key":"sandyr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sandy Ryza","active":true,"timeZone":"America/Los_Angeles"},"body":"Sorry for the delay in getting back.  That makes sense about the UGI.  +1 to passing the correct FileSystem with the PathDeletionContext.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sandyr","name":"sandyr","key":"sandyr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sandy Ryza","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-18T02:34:04.951+0000","updated":"2013-09-18T02:34:04.951+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13771276","id":"13771276","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks Chris and Sandy. I made a draft patch for the proposal. I am thinking we still pass \"tempDirFs\" into PathDeletionContext instead of passing \"fs\", in order to deal with the case that fs is closed by someone. Although tempDirFs might be different from fs due to the different subject problem discussed above, in most of cases they would be the same (I used \"userUGI\" to get tempDirFs). So this is still an optimization. Let me know your comments. Thanks.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-18T21:45:38.721+0000","updated":"2013-09-18T21:45:38.721+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13772073","id":"13772073","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"body":"I set both staging and system dirs to hdfs on my test cluster. I ran 35,000 job submissions and manually checked the number of DistributedFileSystem objects. No memory leak related to DistributedFileSystem was found.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-19T17:31:45.829+0000","updated":"2013-09-19T17:31:45.829+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13772173","id":"13772173","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks for the new patch, Xi.  This mostly looks good to me, and I'm glad to hear that it still fixes the memory leak.  Here are a few comments:\n\n# Can we remove the unused {{PathDeletionContext}} constructor?  It would require a small change in {{TestCleanupQueue}}.\n# Swallowing the {{InterruptedException}} is problematic if any upstream code depends on seeing the thread's interrupted status, so let's restore the interrupted status in the catch block by calling {{Thread.currentThread().interrupt()}}.\n# If there is an {{InterruptedException}}, then we currently would pass a null {{tempDirFs}} to the {{CleanupQueue}}, where we'd once again risk leaking memory.  I suggest that if there is an {{InterruptedException}}, then we skip adding to the {{CleanupQueue}} and log a warning.  This is consistent with the error-handling strategy in the rest of the method.  (It logs warnings.)\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-19T19:04:57.861+0000","updated":"2013-09-19T19:04:57.861+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13774280","id":"13774280","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"body":"[~cnauroth], thanks for your comments. \nbq. Swallowing the InterruptedException is problematic if any upstream code depends on seeing the thread's interrupted status, so let's restore the interrupted status in the catch block by calling Thread.currentThread().interrupt().\n\nIf we call Thread.currentThread().interrupt(), is that possible that fs won't be closed in JobInProgress#cleanupJob()?\n\nbq. If there is an InterruptedException, then we currently would pass a null tempDirFs to the CleanupQueue, where we'd once again risk leaking memory. I suggest that if there is an InterruptedException, then we skip adding to the CleanupQueue and log a warning. This is consistent with the error-handling strategy in the rest of the method. (It logs warnings.)\n\nI think if the answer to my first question is \"fs will be closed in JobInProgress#cleanupJob()\", there will be no memory leak. This is because even if we pass null into CleanupQueue, the new fs created in CleanupQueue#deletePath() would be closed anyway.\n\nThanks Chris.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-23T04:03:38.169+0000","updated":"2013-09-23T04:03:38.169+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13774296","id":"13774296","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. If we call Thread.currentThread().interrupt(), is that possible that fs won't be closed in JobInProgress#cleanupJob()?\n\nI think fs will be closed, and I don't think calling Thread.currentThread().interrupt() will harm that.  This just sets the interrupt status of the thread (basically setting a flag to true on the thread).  Nothing substantial happens with the interrupt status immediately.  If there is a call to a blocking API (i.e. Object.wait or Thread.sleep), then a thread in interrupted status will cause a throw of InterruptedException.  I don't see any calls to blocking APIs between the doAs and the close of fs, so I don't see an issue that could prevent close of fs.\n\nbq. I think if the answer to my first question is \"fs will be closed in JobInProgress#cleanupJob()\", there will be no memory leak.\n\nYes, I think you're right.  Thanks!  Please disregard this part of my feedback.\n\nI think the only thing left is to add the call to Thread.currentThread().interrupt().\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-23T05:09:49.130+0000","updated":"2013-09-23T05:09:49.130+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13774322","id":"13774322","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks Chris. I attached a new patch and will launch a large scale test tomorrow.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-23T06:19:54.358+0000","updated":"2013-09-23T06:19:54.358+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13774620","id":"13774620","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sandyr","name":"sandyr","key":"sandyr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sandy Ryza","active":true,"timeZone":"America/Los_Angeles"},"body":"Does this mean that\n{code}\nFileSystem fs1 = FileSystem.get(conf);\nFileSystem fs2 = FileSystem.get(conf);\n{code}\ncould create either one or two FileSystems objects?\n\nIf that's the case we should document that FileSystem#close implementations must be idempotent ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sandyr","name":"sandyr","key":"sandyr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sandy Ryza","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-23T15:19:13.560+0000","updated":"2013-09-23T15:19:13.560+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13774702","id":"13774702","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"+1 for the patch.  Thanks again, Xi.\n\n[~sandyr], assuming that Xi's large scale tests come back showing no memory leaks, are you also +1 for this patch?  If so, then I will commit to branch-1 and branch-1-win.\n\nbq. Does this mean that ... could create either one or two FileSystems objects?\n\nIf that code sample is the only thread running, then only one instance is created, and fs1 == fs2.  With multiple threads running, it's non-deterministic, because the other threads could be running {{FileSystem#get}} and {{FileSystem#close}} on the same cached instances at just the right moment.  It's possible to get 2 instances created, and fs1 != fs2.\n\nIt's a good idea to document that {{FileSystem#close}} requires an idempotent implementation, in scope of a separate jira.  In practice, {{DistributedFileSystem}} does guarantee idempotence via a synchronized close method and an isRunning flag inside the {{DFSClient}}.\n\nBTW, while researching some of these issues around the cache, I started to think that we ought to ref-count the instances to better guard against problems like this.  Then, I found HADOOP-4655.  Discussion in that issue made an intentional choice not to ref count in order to preserve backwards-compatibility with clients that don't call close.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-23T16:34:28.058+0000","updated":"2013-09-23T16:34:28.058+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13775633","id":"13775633","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sandyr","name":"sandyr","key":"sandyr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sandy Ryza","active":true,"timeZone":"America/Los_Angeles"},"body":"There are some tabs that should be converted to spaces. Other than that I am +1 for the patch.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sandyr","name":"sandyr","key":"sandyr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sandy Ryza","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-23T20:40:36.201+0000","updated":"2013-09-23T20:40:36.201+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13775904","id":"13775904","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks Chris and Sandy. I just finished the large scale test. I didn't find memory leak in my test. I removed tabs and attached a new patch. \n\nSo Chris, do you think we should file a new Jira for the idempotent implementation?\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-24T01:32:06.408+0000","updated":"2013-09-24T01:32:06.408+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13776005","id":"13776005","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"I have committed this to branch-1 and branch-1-win.  Xi, thank you for providing a patch for this tricky issue.  Sandy, thank you for help with code reviews.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-24T05:35:27.558+0000","updated":"2013-09-24T05:35:27.558+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13776014","id":"13776014","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"I filed HADOOP-9993 for documenting the requirement that {{FileSystem#close}} implementations must be idempotent.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-24T05:53:06.362+0000","updated":"2013-09-24T05:53:06.362+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13776023","id":"13776023","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks Chris and Sandy!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-09-24T06:02:29.291+0000","updated":"2013-09-24T06:02:29.291+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13799850","id":"13799850","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=viswaj","name":"viswaj","key":"viswaj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"viswanathan","active":true,"timeZone":"Etc/UTC"},"body":"Hi Chris,\n\nIs this fix committed for hadoop-1.2.1 release? If not, could you please provide the complied jar(for version 1.2.1) of these fix.\n\nThanks,","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=viswaj","name":"viswaj","key":"viswaj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"viswanathan","active":true,"timeZone":"Etc/UTC"},"created":"2013-10-19T10:14:37.913+0000","updated":"2013-10-19T10:14:37.913+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13800082","id":"13800082","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"Hello, [~viswaj].  I'm sorry to hear that this bug is causing trouble for you.  It is not committed for 1.2.1.  It would be included in the 1.3.0 release.\n\nI recommend against doing what you described: trying to obtain a compiled jar for a patched 1.2.1 from an individual dev.  The problem with this approach is that you wouldn't know for sure what was included in that jar.  This would open your deployment to security risk, because whoever compiled that jar could have snuck in a backdoor.  Even if you decide to trust a particular Apache dev for this, there is still the risk of a man-in-the-middle interfering with your download.\n\nThe Apache release process actually provides everything you need to obtain the official 1.2.1 source, apply additional patches, and then build from source yourself.  Official Apache releases come with the signature of the release manager and a checksum that you can use to verify the contents.  Patches are publicly posted in jira, Subversion, and mirrored to git.  Commits to the repositories are authenticated, so you know that only Apache committers have committed the patches.  Every committed patch requires agreement from at least two people: the contributor and at least one other committer.\n\nYou can find a mirror for downloading a distro from here:\n\nhttp://www.apache.org/dyn/closer.cgi/hadoop/common/\n\nFor example, here is a direct link to 1.2.1 at one of the mirrors:\n\nhttp://www.interior-dsgn.com/apache/hadoop/common/hadoop-1.2.1/\n\nAfter downloading the source, there are multiple patches related to this memory leak that you'll want to apply, from MAPREDUCE-5351 and MAPREDUCE-5508:\n\nhttps://issues.apache.org/jira/secure/attachment/12590105/MAPREDUCE-5351-2.patch\n\nhttps://issues.apache.org/jira/secure/attachment/12590672/MAPREDUCE-5351-addendum-1.patch\n\nhttps://issues.apache.org/jira/secure/attachment/12604722/MAPREDUCE-5508.3.patch\n\nThen, running \"ant jar\" ought to be sufficient to build and create the jar that you need.  By following this process, you'll get a much more trustworthy jar than something compiled and provided by an individual Apache developer.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-10-20T05:17:57.703+0000","updated":"2013-10-20T05:17:57.703+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13800130","id":"13800130","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=viswaj","name":"viswaj","key":"viswaj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"viswanathan","active":true,"timeZone":"Etc/UTC"},"body":"Thanks a lot Chris for your valuable response.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=viswaj","name":"viswaj","key":"viswaj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"viswanathan","active":true,"timeZone":"Etc/UTC"},"created":"2013-10-20T11:59:10.140+0000","updated":"2013-10-20T11:59:10.140+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13800132","id":"13800132","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=viswaj","name":"viswaj","key":"viswaj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"viswanathan","active":true,"timeZone":"Etc/UTC"},"body":"Hi Chris,\n\nHope this 3 patches only need to apply, if any other patches missing please let me know.\n\nhttps://issues.apache.org/jira/secure/attachment/12590105/MAPREDUCE-5351-2.patch\nhttps://issues.apache.org/jira/secure/attachment/12590672/MAPREDUCE-5351-addendum-1.patch\nhttps://issues.apache.org/jira/secure/attachment/12604722/MAPREDUCE-5508.3.patch\n\nAlso have downloaded the latest hadoop-1.2.1 version, while building jar I'm getting snapshot version(i.e., hadoop-core-1.2.2-SNAPSHOT.jar) jars. Is these because of some other changes are made in that version. \n\nHope this will not be a problem for updating in production environment.\n\nThanks,","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=viswaj","name":"viswaj","key":"viswaj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"viswanathan","active":true,"timeZone":"Etc/UTC"},"created":"2013-10-20T12:11:13.509+0000","updated":"2013-10-20T12:11:13.509+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13800527","id":"13800527","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=viswaj","name":"viswaj","key":"viswaj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"viswanathan","active":true,"timeZone":"Etc/UTC"},"body":"Hi Chris,\n\nAppreciate your response.\n\nThanks,","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=viswaj","name":"viswaj","key":"viswaj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"viswanathan","active":true,"timeZone":"Etc/UTC"},"created":"2013-10-21T10:28:02.884+0000","updated":"2013-10-21T10:28:02.884+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13800914","id":"13800914","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks Chris and  viswanathan. And I think the three patches are what you need. It won't affect production environment because it is a very back-end thing. Users won't notice any difference I think.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-10-21T18:17:22.933+0000","updated":"2013-10-21T18:17:22.933+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13815620","id":"13815620","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=viswaj","name":"viswaj","key":"viswaj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"viswanathan","active":true,"timeZone":"Etc/UTC"},"body":"Hi Chris,\n\nHope this fix is committed in branch-1, please share the revision of the commit.\n\nThanks,\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=viswaj","name":"viswaj","key":"viswaj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"viswanathan","active":true,"timeZone":"Etc/UTC"},"created":"2013-11-07T03:44:20.707+0000","updated":"2013-11-07T03:44:20.707+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13815863","id":"13815863","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=viswaj","name":"viswaj","key":"viswaj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"viswanathan","active":true,"timeZone":"Etc/UTC"},"body":"Hi Chris/Xi,\n\nHope you are doing great.\n\nAs mentioned, have upgraded our HDFS cluster with the following 3 patches for JT OOME.\n\nhttps://issues.apache.org/jira/secure/attachment/12590105/MAPREDUCE-5351-2.patch\nhttps://issues.apache.org/jira/secure/attachment/12590672/MAPREDUCE-5351-addendum-1.patch\nhttps://issues.apache.org/jira/secure/attachment/12604722/MAPREDUCE-5508.3.patch\n\nIn the above patches, I didn't add the patch of TestCleanupQueue class. Hope its not required.\n\nI have noticed that heap size of Jobtracker is gradually increasing after the upgrade also. \n\nCurrently the heap size as follows,\nCluster Summary (Heap Size is 869.19 MB/8.89 GB) - Yesterday while re-starting the JT the heap size was only 200MB plus.\n\nIs the heap size will reduce automatically after any threshold limit?\n\nDo I need to update any other patches/fix?\n\nPlease do the needful as it is in production environment.\n\nThanks,\nViswa.J","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=viswaj","name":"viswaj","key":"viswaj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"viswanathan","active":true,"timeZone":"Etc/UTC"},"created":"2013-11-07T11:45:25.210+0000","updated":"2013-11-07T11:45:25.210+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13815920","id":"13815920","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=viswaj","name":"viswaj","key":"viswaj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"viswanathan","active":true,"timeZone":"Etc/UTC"},"body":"Hi Chris/Xi,\n\nPFA of Java classes which was modified based on the patches for JT OOME.\n\nDo I miss anything in the Java class? I have modified based on the patches.\n\nIn hadoop 1.2.1, FileSystem.java class remains same as in the patch so I didn't modified.\n\nPlease review and send your feedback.\n\nThanks,","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=viswaj","name":"viswaj","key":"viswaj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"viswanathan","active":true,"timeZone":"Etc/UTC"},"created":"2013-11-07T12:44:31.839+0000","updated":"2013-11-07T12:44:31.839+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13816192","id":"13816192","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. Hope this fix is committed in branch-1, please share the revision of the commit.\n\nhttp://svn.apache.org/viewvc?view=revision&revision=1497962\nhttp://svn.apache.org/viewvc?view=revision&revision=1499904\nhttp://svn.apache.org/viewvc?view=revision&revision=1525774\n\nbq. I have noticed that heap size of Jobtracker is gradually increasing after the upgrade also.\n\nJust observing heap size wouldn't be sufficient to confirm or deny that the fix is in place.  It's natural for the JVM to grow the heap as needed.  Incremental garbage collection will clean that up gradually, and a full GC eventually would reclaim all unused space.  All of this is too unpredictable to confirm or deny the memory leak.\n\nWe confirmed this fix by running various MapReduce workloads in a controlled environment, running jmap on the JobTracker process to dump a memory map, and then viewing the dump with jhat.  When the memory leak happens, you end up seeing {{DistributedFileSystem}} instances that are only referenced from the internal {{HashMap}} of the {{FileSystem#Cache}}.  (With no other reference to the instance, it means that no one is ever going to close it, and therefore it will never get removed from the cache.)  With all of these patches applied, we see all {{DistributedFileSystem}} instances are referenced from the {{FileSystem#Cache}} and also some other references.\n\nbq. Do I need to update any other patches/fix?\n\nNo, that's all of them.\n\nIf there are any additional questions, I recommend moving to the user@hadoop.apache.org mailing list.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-11-07T18:10:33.975+0000","updated":"2013-11-07T18:10:33.975+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13816205","id":"13816205","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=viswaj","name":"viswaj","key":"viswaj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"viswanathan","active":true,"timeZone":"Etc/UTC"},"body":"Hi Chris,\n\nThanks for your detailed response.\n\nThanks,","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=viswaj","name":"viswaj","key":"viswaj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"viswanathan","active":true,"timeZone":"Etc/UTC"},"created":"2013-11-07T18:25:15.997+0000","updated":"2013-11-07T18:25:15.997+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13816210","id":"13816210","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"body":"One way to confirm that is to set to mapred.jobtracker.completeuserjobs.maximum = 0 and run some jobs. After all the jobs are done, wait for a while and check the number of FS objects in FileSystem#Cache.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xifang","name":"xifang","key":"xifang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xifang&avatarId=17273","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xifang&avatarId=17273","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xifang&avatarId=17273","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xifang&avatarId=17273"},"displayName":"Xi Fang","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-11-07T18:31:11.717+0000","updated":"2013-11-07T18:31:11.717+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12668594/comment/13816213","id":"13816213","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=viswaj","name":"viswaj","key":"viswaj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"viswanathan","active":true,"timeZone":"Etc/UTC"},"body":"Thanks a lot Xi.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=viswaj","name":"viswaj","key":"viswaj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"viswanathan","active":true,"timeZone":"Etc/UTC"},"created":"2013-11-07T18:34:06.513+0000","updated":"2013-11-07T18:34:06.513+0000"}],"maxResults":40,"total":40,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/MAPREDUCE-5508/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1o3hz:"}}