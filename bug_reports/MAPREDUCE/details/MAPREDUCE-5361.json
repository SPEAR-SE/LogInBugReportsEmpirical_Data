{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12655385","self":"https://issues.apache.org/jira/rest/api/2/issue/12655385","key":"MAPREDUCE-5361","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310941","id":"12310941","key":"MAPREDUCE","name":"Hadoop Map/Reduce","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310941&avatarId=10096","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310941&avatarId=10096","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310941&avatarId=10096","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310941&avatarId=10096"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":null,"customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"2013-06-28 17:14:34.845","customfield_12310420":"335660","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/MAPREDUCE-5361/watchers","watchCount":1,"isWatching":false},"created":"2013-06-28T17:14:34.845+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":"mapreduce","customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2013-06-28T17:14:34.845+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[],"timeoriginalestimate":null,"description":"Hi All,\n\nWe have a scenario of generating unique key for every single row in a file. we have a timestamp column but the are multiple rows available for a same timestamp in few scenarios.\nWe decided unique values to be timestamp appended with their respective count as mentioned in the below program.\nMapper will just emit the timestamp as key and the entire row as its value, and in reducer the key is generated.\nProblem is Map outputs about 236 rows, of which only 230 records are fed as an input for reducer which outputs the same 230 records.\npublic class UniqueKeyGenerator extends Configured implements Tool {\n\n    private static final String SEPERATOR = \"\\t\";\n    private static final int TIME_INDEX = 10;\n    private static final String COUNT_FORMAT_DIGITS = \"%010d\";\n\n   public static class Map extends Mapper<LongWritable, Text, Text, Text> {\n\n        @Override\n        protected void map(LongWritable key, Text row, Context context)\n                throws IOException, InterruptedException {\n            String input = row.toString();\n            String[] vals = input.split(SEPERATOR);\n            if (vals != null && vals.length >= TIME_INDEX) {\n                context.write(new Text(vals[TIME_INDEX - 1]), row);\n            }\n        }\n    }\n\n    public static class Reduce extends Reducer<Text, Text, NullWritable, Text> {\n\n        @Override\n        protected void reduce(Text eventTimeKey,\n                Iterable<Text> timeGroupedRows, Context context)\n                throws IOException, InterruptedException {\n            int cnt = 1;\n            final String eventTime = eventTimeKey.toString();\n            for (Text val : timeGroupedRows) {\n                final String res = SEPERATOR.concat(getDate(\n                        Long.valueOf(eventTime)).concat(\n                        String.format(COUNT_FORMAT_DIGITS, cnt)));\n                val.append(res.getBytes(), 0, res.length());\n                cnt++;\n                context.write(NullWritable.get(), val);\n            }\n        }\n    }\n\n    public static String getDate(long time) {\n        SimpleDateFormat utcSdf = new SimpleDateFormat(\"yyyyMMddhhmmss\");\n        utcSdf.setTimeZone(TimeZone.getTimeZone(\"America/Los_Angeles\"));\n        return utcSdf.format(new Date(time));\n    }\n\n    public int run(String[] args) throws Exception {\n        conf(args);\n        return 0;\n    }\n\n    public static void main(String[] args) throws Exception {\n        conf(args);\n    }\n\n    private static void conf(String[] args) throws IOException,\n            InterruptedException, ClassNotFoundException {\n        Configuration conf = new Configuration();\n        Job job = new Job(conf, \"uniquekeygen\");\n        job.setJarByClass(UniqueKeyGenerator.class);\n\n        job.setOutputKeyClass(Text.class);\n        job.setOutputValueClass(Text.class);\n\n        job.setMapperClass(Map.class);\n        job.setReducerClass(Reduce.class);\n\n        job.setInputFormatClass(TextInputFormat.class);\n        job.setOutputFormatClass(TextOutputFormat.class);\n        // job.setNumReduceTasks(400);\n\n        FileInputFormat.addInputPath(job, new Path(args[0]));\n        FileOutputFormat.setOutputPath(job, new Path(args[1]));\n\n        job.waitForCompletion(true);\n    }\n\n}\n\nIt is consistent for higher no of lines and the difference is as huge as 208969 records for an input of 20855982 lines. what might be the reason for reduced inputs to reducer?\n\nMany Thanks,\nSathish.\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"335984","customfield_12312823":null,"summary":"Reducer getting fewer records than expected","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sathishs1988","name":"sathishs1988","key":"sathishs1988","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sathish","active":true,"timeZone":"Asia/Kolkata"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sathishs1988","name":"sathishs1988","key":"sathishs1988","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sathish","active":true,"timeZone":"Asia/Kolkata"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[],"maxResults":0,"total":0,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/MAPREDUCE-5361/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1lwdr:"}}