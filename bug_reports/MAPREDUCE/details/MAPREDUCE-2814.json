{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12416525","self":"https://issues.apache.org/jira/rest/api/2/issue/12416525","key":"MAPREDUCE-2814","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310941","id":"12310941","key":"MAPREDUCE","name":"Hadoop Map/Reduce","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310941&avatarId=10096","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310941&avatarId=10096","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310941&avatarId=10096","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310941&avatarId=10096"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2009-03-10T16:35:43.520+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Wed Mar 11 04:44:28 UTC 2009","customfield_12310420":"65410","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/MAPREDUCE-2814/watchers","watchCount":1,"isWatching":false},"created":"2009-03-10T12:41:51.383+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-08-11T18:12:28.815+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[],"timeoriginalestimate":null,"description":"The type check like:\n{code}\nif (key.getClass() != keyClass)\n        throw new IOException(\"wrong key class: \"+key.getClass().getName()\n                              +\" is not \"+keyClass);\nif (val.getClass() != valClass)\n        throw new IOException(\"wrong value class: \"+val.getClass().getName()\n                              +\" is not \"+valClass);\n{code}\nis used a lot when a type check is needed. \nI found their uses in org.apache.hadoop.io.SequenceFile, org.apache.hadoop.mapred.IFile, org.apache.hadoop.mapred.MapTask. Because i search with(key.getClass() != keyClass), so these codes may also appear in other classes.\n\nI suggest we can relax the strict type check by using \n{code}\nif (key.getClass().isAssignableFrom(keyClass))\n{code}\n\nThe error in my situation is listed below:\n{panel:borderStyle=dashed| borderColor=#ccc| titleBGColor=#F7D6C1| bgColor=#FFFFCE}\njava.io.IOException: Type mismatch in value from map: expected cn.ac.ict.vega.type.Type, recieved cn.ac.ict.vega.type.Type$Float\n\tat org.apache.hadoop.mapred.MapTask$MapOutputBuffer.collect(MapTask.java:553)\n\tat cn.ac.ict.vega.parse.mapreduce.block.FilterColumnBlockMapper.map(FilterColumnBlockMapper.java:77)\n\tat cn.ac.ict.vega.parse.mapreduce.block.BlockMapRunner.run(BlockMapRunner.java:33)\n\tat org.apache.hadoop.mapred.MapTask.run(MapTask.java:332)\n\tat org.apache.hadoop.mapred.Child.main(Child.java:155)\n{panel} \n\nFloat is a sub class of Type. I wish it can pass the check. I use Type instead of Float is because i can not determint exactly whether it is Float, String or  some others.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"80918","customfield_12312823":null,"summary":"Relax the strict type check by allowing subclasses pass the check","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=he+yongqiang","name":"he yongqiang","key":"he yongqiang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"He Yongqiang","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=he+yongqiang","name":"he yongqiang","key":"he yongqiang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"He Yongqiang","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12416525/comment/12680528","id":"12680528","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hong.tang","name":"hong.tang","key":"hong.tang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hong Tang","active":true,"timeZone":"Etc/UTC"},"body":"I suspect this restriction is provided for performance reasons. To deserialize an object in SequenceFile Reader, the SequenceFile needs to know the concrete type of the serialized bytes. In other words, if objects of any sub-cloasses of the Key-class are admissible, then SequenceFile may have to pay a per-key or per-value string to record the actual type of the key or value objects.\n\nTypically, you would have to write a wrapper class over the set of possible key types and a numeric tag. The serialized form of your wrapper object is simply the numeric tag followed by the actual object in serialized form. This effectively is to minimize the  per-key or per-value overhead by using small integers instead of long strings.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hong.tang","name":"hong.tang","key":"hong.tang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hong Tang","active":true,"timeZone":"Etc/UTC"},"created":"2009-03-10T16:35:43.520+0000","updated":"2009-03-10T16:35:43.520+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12416525/comment/12680755","id":"12680755","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=he+yongqiang","name":"he yongqiang","key":"he yongqiang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"He Yongqiang","active":true,"timeZone":"Etc/UTC"},"body":"Hong,that's right for SequenceFile,maybe in the sequecefile it is needed for the strict type check, since we don't want add additional information to record key's and value's class name.\nHow about relax the strict type check in the MapTask? As you can see from this issue's description, I encountered this error in MapTask.\nI want the mapper and reducer classes in our project more clear/clean and donot need to convert everytime we use the types. So I am afraid that I can not take the wrapper solution. Or there other solution?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=he+yongqiang","name":"he yongqiang","key":"he yongqiang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"He Yongqiang","active":true,"timeZone":"Etc/UTC"},"created":"2009-03-11T04:44:28.504+0000","updated":"2009-03-11T04:44:28.504+0000"}],"maxResults":2,"total":2,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/MAPREDUCE-2814/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0e74v:"}}