{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12524811","self":"https://issues.apache.org/jira/rest/api/2/issue/12524811","key":"MAPREDUCE-3106","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310941","id":"12310941","key":"MAPREDUCE","name":"Hadoop Map/Reduce","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310941&avatarId=10096","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310941&avatarId=10096","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310941&avatarId=10096","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310941&avatarId=10096"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/2","id":"2","description":"The problem described is an issue which will never be fixed.","name":"Won't Fix"},"customfield_12312322":null,"customfield_12310220":"2011-09-28T08:16:49.662+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Wed Sep 28 10:11:10 UTC 2011","customfield_12310420":"17173","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_96192301_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2011-09-28T10:12:00.347+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/MAPREDUCE-3106/watchers","watchCount":1,"isWatching":false},"created":"2011-09-27T07:28:48.097+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/1","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/blocker.svg","name":"Blocker","id":"1"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12316151","id":"12316151","description":"","name":"0.20.203.0","archived":false,"released":true,"releaseDate":"2011-05-11"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-09-28T10:12:00.375+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[],"timeoriginalestimate":null,"description":"I have a hadoop job, which works perfectly fine when done with a class implementing Mapper. When I do replace Mapper with MultithreadMapper, the job crashes with following message:\n\njava.io.IOException: Type mismatch in key from map: expected org.apache.hadoop.io.IntWritable, recieved org.apache.hadoop.io.LongWritable\n\tat org.apache.hadoop.mapred.MapTask$MapOutputBuffer.collect(MapTask.java:862)\n\tat org.apache.hadoop.mapred.MapTask$NewOutputCollector.write(MapTask.java:549)\n\tat org.apache.hadoop.mapreduce.TaskInputOutputContext.write(TaskInputOutputContext.java:80)\n\tat org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper$SubMapRecordWriter.write(MultithreadedMapper.java:211)\n\tat org.apache.hadoop.mapreduce.TaskInputOutputContext.write(TaskInputOutputContext.java:80)\n\tat org.apache.hadoop.mapreduce.Mapper.map(Mapper.java:124)\n\tat org.apache.hadoop.mapreduce.Mapper.run(Mapper.java:144)\n\tat org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper$MapRunner.run(MultithreadedMapper.java:264)\n\nHere are the relevant source codes:\n\npublic class MapReduceMain {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\ttry {\n\t\t\tif (args.length != 2) {\n\t\t\t\tSystem.err.println(\"Usage: MapReduceMain <input path> <output path>\");\n\t\t\t\tSystem.exit(123);\n\t\t\t}\n\t\t\tJob job = new Job();\n\t\t\tjob.setJarByClass(MapReduceMain.class);\n\t\t\tjob.setInputFormatClass(TextInputFormat.class);\n\t\t\tFileSystem fs = FileSystem.get(URI.create(args[0]), job.getConfiguration());\n\t\t\tFileStatus[] files = fs.listStatus(new Path(args[0]));\n\t\t\tfor(FileStatus sfs:files){\n\t\t\t\tFileInputFormat.addInputPath(job, sfs.getPath());\n\t\t\t}\n\t\t\tFileOutputFormat.setOutputPath(job, new Path(args[1]));\n\t\t\t\n\t\t\tjob.setMapperClass(MyMultithreadMapper.class);\n\t\t\tjob.setReducerClass(MyReducer.class);\n\t\t\tMultithreadedMapper.setNumberOfThreads(job, MyMultithreadMapper.nThreads);\n\n\t\t\tjob.setOutputKeyClass(IntWritable.class); \n\t\t\tjob.setOutputValueClass(MyPage.class);\n\t\t\t\n\t\t\tjob.setOutputFormatClass(SequenceFileOutputFormat.class);\n\t\t\t\n\t\t\tSystem.exit(job.waitForCompletion(true) ? 0 : 1);\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\n\t}\n\n\npublic class MyMultithreadMapper extends MultithreadedMapper<LongWritable, Text, IntWritable, MyPage> {\n\n\tConcurrentLinkedQueue<MyScraper>\tscrapers\t= new ConcurrentLinkedQueue<MyScraper>();\n\n\tpublic static final int\t\t\t\tnThreads\t= 5;\n\n\tpublic VrboMultithreadMapper() {\n\t\tfor (int i = 0; i < nThreads; i++) {\n\t\t\tscrapers.add(new MyScraper());\n\t\t}\n\t}\n\n\tpublic void map(LongWritable key, Text value, Context context) throws IOException, InterruptedException {\n\t\tMyScraper scraper = scrapers.poll();\n\n\t\tMyPage result = null;\n\t\tfor (int i = 0; i < 10; i++) {\n\t\t\ttry {\n\t\t\t\tresult = scraper.scrapPage(value.toString(), true);\n\t\t\t\tbreak;\n\t\t\t} catch (Exception e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\n\t\tif (result == null) {\n\t\t\tresult = new MyPage();\n\t\t\tresult.setUrl(key.toString());\n\t\t}\n\n\t\tcontext.write(new IntWritable(result.getUrl().hashCode()), result);\n\n\t\tscrapers.add(scraper);\n\t}\n}\n\n\nand here's the code for the working mapper class, just to be sure:\n\npublic class MyMapper extends Mapper<LongWritable, Text, IntWritable,MyPage> {\n\tMyScraper scr = new MyScraper();\n\t\n\tpublic void map(LongWritable key, Text value, Context context) throws IOException, InterruptedException {\n\t\tMyPage result =null;\n\t\tfor(int i=0;i<10;i++){\n\t\t\ttry{\n\t\t\t\tresult = scr.scrapPage(value.toString(), true);\n\t\t\t\tbreak;\n\t\t\t}catch(Exception e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(result==null){\n\t\t\tresult = new MyPage();\n\t\t\tresult.setUrl(key.toString());\n\t\t}\n\t\t\n\t\tcontext.write(new IntWritable(result.getUrl().hashCode()),result);\n\t}\n}\n\n\nThis appears to be a hadoop bug","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"112637","customfield_12312823":null,"summary":"Replacing Mapper with MultithreadedMapper causes the job to crash with \"Type mismatch in key from map\" ","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=menkaur","name":"menkaur","key":"menkaur","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arsen Zahray","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=menkaur","name":"menkaur","key":"menkaur","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arsen Zahray","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12524811/comment/13116286","id":"13116286","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kam_iitkgp","name":"kam_iitkgp","key":"kam_iitkgp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bhallamudi Venkata Siva Kamesh","active":true,"timeZone":"Asia/Kolkata"},"body":"Job set up has not been done properly. Can't occur with we set \nMultithreadedMapper.setMapperClass(job, MyMapper.class);\n\nI feel it is an invalid bug and can be closed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kam_iitkgp","name":"kam_iitkgp","key":"kam_iitkgp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bhallamudi Venkata Siva Kamesh","active":true,"timeZone":"Asia/Kolkata"},"created":"2011-09-28T08:16:49.662+0000","updated":"2011-09-28T08:16:49.662+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12524811/comment/13116314","id":"13116314","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=menkaur","name":"menkaur","key":"menkaur","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arsen Zahray","active":true,"timeZone":"Etc/UTC"},"body":"Can the code be changed so it works like I tried to use it?\n\nI believe that many developers to come will make the same mistake I did. Making it work by subclass would make the api more intuitive ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=menkaur","name":"menkaur","key":"menkaur","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arsen Zahray","active":true,"timeZone":"Etc/UTC"},"created":"2011-09-28T09:50:49.640+0000","updated":"2011-09-28T09:50:49.640+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12524811/comment/13116319","id":"13116319","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=menkaur","name":"menkaur","key":"menkaur","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arsen Zahray","active":true,"timeZone":"Etc/UTC"},"body":"On the other hand, it's probably better the way it is now. Once you know how to use it, it's much easier to write a multithread code with it","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=menkaur","name":"menkaur","key":"menkaur","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arsen Zahray","active":true,"timeZone":"Etc/UTC"},"created":"2011-09-28T10:11:10.779+0000","updated":"2011-09-28T10:11:10.779+0000"}],"maxResults":3,"total":3,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/MAPREDUCE-3106/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0jmvr:"}}