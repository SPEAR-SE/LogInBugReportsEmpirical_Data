{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12743894","self":"https://issues.apache.org/jira/rest/api/2/issue/12743894","key":"MAPREDUCE-6108","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310941","id":"12310941","key":"MAPREDUCE","name":"Hadoop Map/Reduce","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310941&avatarId=10096","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310941&avatarId=10096","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310941&avatarId=10096","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310941&avatarId=10096"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/5","id":"5","description":"All attempts at reproducing this issue failed, or not enough information was available to reproduce the issue. Reading the code produces no clues as to why this behavior would occur. If more information appears later, please reopen the issue.","name":"Cannot Reproduce"},"customfield_12312322":null,"customfield_12310220":"2014-09-25T06:54:17.929+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Fri May 13 21:00:54 UTC 2016","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_51570940350_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2016-05-13T21:00:53.943+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/MAPREDUCE-6108/watchers","watchCount":18,"isWatching":false},"created":"2014-09-24T23:45:14.249+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.svg","name":"Critical","id":"2"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12327747","id":"12327747","description":"2.5.1 release","name":"2.5.1","archived":false,"released":true,"releaseDate":"2014-09-05"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2016-05-13T21:00:54.595+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[],"timeoriginalestimate":null,"description":"Shuffle has OOM issue from time to time.  \n\nSuch as this email reported.\nhttp://mail-archives.apache.org/mod_mbox/hadoop-mapreduce-dev/201408.mbox/%3CCABWXXjNK-on0XTrMuriJD8SDGJjTAMSvQW2CZpm3oEkJ3YM8YQ@mail.gmail.com%3E","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12329060","id":"12329060","description":"2.8.0 release","name":"2.8.0","archived":false,"released":true,"releaseDate":"2017-03-22"}],"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"ShuffleError OOM while reserving memory by MergeManagerImpl","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dongwook","name":"dongwook","key":"dongwook","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dongwook Kwon","active":true,"timeZone":"America/Vancouver"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dongwook","name":"dongwook","key":"dongwook","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dongwook Kwon","active":true,"timeZone":"America/Vancouver"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12743894/comment/14147487","id":"14147487","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"body":"As reported by Dongwook Kwon: \n\n{code}\n\nError: org.apache.hadoop.mapreduce.task.reduce.Shuffle$ShuffleError: error in shuffle in fetcher#14\n        at org.apache.hadoop.mapreduce.task.reduce.Shuffle.run(Shuffle.java:134)\n        at org.apache.hadoop.mapred.ReduceTask.run(ReduceTask.java:377)\n        at org.apache.hadoop.mapred.YarnChild$2.run(YarnChild.java:167)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at javax.security.auth.Subject.doAs(Subject.java:415)\n        at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1548)\n        at org.apache.hadoop.mapred.YarnChild.main(YarnChild.java:162)\nCaused by: java.lang.OutOfMemoryError: Java heap space\n        at org.apache.hadoop.io.BoundedByteArrayOutputStream.<init>(BoundedByteArrayOutputStream.java:56)\n        at org.apache.hadoop.io.BoundedByteArrayOutputStream.<init>(BoundedByteArrayOutputStream.java:46)\n        at org.apache.hadoop.mapreduce.task.reduce.InMemoryMapOutput.<init>(InMemoryMapOutput.java:63)\n        at org.apache.hadoop.mapreduce.task.reduce.MergeManagerImpl.unconditionalReserve(MergeManagerImpl.java:297)\n        at org.apache.hadoop.mapreduce.task.reduce.MergeManagerImpl.reserve(MergeManagerImpl.java:287)\n        at org.apache.hadoop.mapreduce.task.reduce.Fetcher.copyMapOutput(Fetcher.java:411)\n        at org.apache.hadoop.mapreduce.task.reduce.Fetcher.copyFromHost(Fetcher.java:341)\n        at org.apache.hadoop.mapreduce.task.reduce.Fetcher.run(Fetcher.java:165)\n\n{code}\n\nLowering mapreduce.reduce.shuffle.input.buffer.percent value mitigate the issue. However depending on the data and the memory system had, the issue comes back.\n\nFrom my test, when it's happening , the issue is very constant, memory foot print, and the point OOM happens was the same, regardless of the value of mapreduce.reduce.shuffle.input.buffer.percent( my test had default 0.7).  \n\n\nHere is what I found.\n\nAccording to MergeManagerImpl which implemented by https://issues.apache.org/jira/browse/MAPREDUCE-4808, it appears the reserve method deliberately allows just one thread(fetcher) to go over \"memoryLimit\" by checking the condition (usedMemory > memoryLimit) instead of (usedMemory + requestedSize > memoryLimit) to prevent stalling all fetchers issue as comment indicated. This seems working well most of times. However when the one fetcher tries to reserver usedMemory + requestedSize more than memoryLimit(Runtime.getRuntime().maxMemory()), I think there is OOM issue.\n\n{code}\n @Override\npublic synchronized MapOutput<K,V> reserve(TaskAttemptID mapId,\nlong requestedSize,\nint fetcher\n) throws IOException {\nif (!canShuffleToMemory(requestedSize)) {\nLOG.info(mapId + \": Shuffling to disk since \" + requestedSize +\n\" is greater than maxSingleShuffleLimit (\" +\nmaxSingleShuffleLimit + \")\");\nreturn new OnDiskMapOutput<K,V>(mapId, reduceId, this, requestedSize,\njobConf, mapOutputFile, fetcher, true);\n}\n// Stall shuffle if we are above the memory limit\n// It is possible that all threads could just be stalling and not make\n// progress at all. This could happen when:\n//\n// requested size is causing the used memory to go above limit &&\n// requested size < singleShuffleLimit &&\n// current used size < mergeThreshold (merge will not get triggered)\n//\n// To avoid this from happening, we allow exactly one thread to go past\n// the memory limit. We check (usedMemory > memoryLimit) and not\n// (usedMemory + requestedSize > memoryLimit). When this thread is done\n// fetching, this will automatically trigger a merge thereby unlocking\n// all the stalled threads\nif (usedMemory > memoryLimit) {\nLOG.debug(mapId + \": Stalling shuffle since usedMemory (\" + usedMemory\n+ \") is greater than memoryLimit (\" + memoryLimit + \").\" +\n\" CommitMemory is (\" + commitMemory + \")\");\nreturn null;\n}\n// Allow the in-memory shuffle to progress\nLOG.debug(mapId + \": Proceeding with shuffle since usedMemory (\"\n+ usedMemory + \") is lesser than memoryLimit (\" + memoryLimit + \").\"\n+ \"CommitMemory is (\" + commitMemory + \")\");\nreturn unconditionalReserve(mapId, requestedSize, true);\n}\n\n{code}\n\nhttps://github.com/apache/hadoop-common/blob/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/MergeManagerImpl.java#L256\n\nWhen the one fetcher tries to reserve (usedMemory + requestedSize > memoryLimit), depending on the memory the reducer has,  BoundedByteArrayOutputStream has the OOM issue at \n\n{code}\n public BoundedByteArrayOutputStream(int capacity, int limit) {\nthis(new byte[capacity], 0, limit);\n}\n{code}\n\nhttps://github.com/apache/hadoop-common/blob/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/BoundedByteArrayOutputStream.java#L56\n\nmemoryLimit is Runtime.getRuntime().maxMemory(), MRJobConfig.REDUCE_MEMORY_TOTAL_BYTES seems for unit test.\n\n{code}\n    this.memoryLimit = \n      (long)(jobConf.getLong(MRJobConfig.REDUCE_MEMORY_TOTAL_BYTES,\n          Math.min(Runtime.getRuntime().maxMemory(), Integer.MAX_VALUE))\n        * maxInMemCopyUse);\n{code}\n\n\nIt explains why lowering mapreduce.reduce.shuffle.input.buffer.percent value resolves this issue and why the same setting sometimes works and doesn't.\n\nBut I wasn't sure this is correct and what is the expected behavior for stalling fetchers issue to fix OOM issue as commented pointed out.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"created":"2014-09-25T06:54:17.929+0000","updated":"2014-09-25T06:54:17.929+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12743894/comment/14177272","id":"14177272","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jadenpark","name":"jadenpark","key":"jadenpark","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jaden Park","active":true,"timeZone":"Etc/UTC"},"body":"I am still not clear on why we resort to (usedMemory > memoryLimit) instead of (usedMemory + requestedSize > memoryLimit). How exactly do all fetchers stall, and is there no resolution we could prevent it? ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jadenpark","name":"jadenpark","key":"jadenpark","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jaden Park","active":true,"timeZone":"Etc/UTC"},"created":"2014-10-20T18:38:51.890+0000","updated":"2014-10-20T18:38:51.890+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12743894/comment/14328415","id":"14328415","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xgong","name":"xgong","key":"xgong","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10443","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10443","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10443","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10443"},"displayName":"Xuan Gong","active":true,"timeZone":"America/Los_Angeles"},"body":"[~kasha] Thanks for the investigation. It makes sense for me. I have meet the same issue here.\n\nBut, we got the  \"java.lang.OutOfMemoryError: Java heap space\" here. Does it mean we are running out of jvm heap memory instead of \"memoryLimit\" ?\nSo, even we still use \"if (usedMemory > memoryLimit)\" condition, and use all the default configuration (memoryLimit = 0.7 * maxMemory). In the worse case, usedMemory = memoryLimit = 0.7 * maxMemory, requestedSize = 0.25*0.7*maxMemory. So, total will be 0.875 maxMemory. I guess that is why we use \" (usedMemory > memoryLimit)\" instead of \"(usedMemory + requestedSize > memoryLimit)\" here. \n\nI guess that we might not have a big issue on logic itself. In the same JVM, not only the shuffle need memory, but also other staff occupy some part of the memory (such as fetch thread ?). I guess this OOM happens when we are trying to use \"too-many\" memory for the shuffle(such as the worst case happens).\n\nI think for now, this is more related to the configuration expertise.\n*mapreduce.reduce.shuffle.input.buffer.percent\n*mapreduce.reduce.shuffle.memory.limit.percent\n*mapreduce.reduce.shuffle.parallelcopies\n\nThoughts ?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xgong","name":"xgong","key":"xgong","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10443","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10443","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10443","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10443"},"displayName":"Xuan Gong","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-02-20T01:18:34.737+0000","updated":"2015-02-20T01:18:34.737+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12743894/comment/14607088","id":"14607088","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinodkv","name":"vinodkv","key":"vinodkv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinod Kumar Vavilapalli","active":true,"timeZone":"America/Los_Angeles"},"body":"Moving bugs out of previously closed releases into the next minor release 2.8.0.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinodkv","name":"vinodkv","key":"vinodkv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinod Kumar Vavilapalli","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-06-30T04:36:50.177+0000","updated":"2015-06-30T04:36:50.177+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12743894/comment/15035177","id":"15035177","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gu+chi","name":"gu chi","key":"gu chi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"gu-chi","active":true,"timeZone":"Etc/UTC"},"body":"[~vinodkv] from above history, I can not see what is the actual solution designed, can you please explain what will be done in 2.8.0 to this issue? ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gu+chi","name":"gu chi","key":"gu chi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"gu-chi","active":true,"timeZone":"Etc/UTC"},"created":"2015-12-02T02:59:12.175+0000","updated":"2015-12-02T02:59:12.175+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12743894/comment/15041278","id":"15041278","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gu+chi","name":"gu chi","key":"gu chi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"gu-chi","active":true,"timeZone":"Etc/UTC"},"body":"[~xgong]any thoughts other than changing default configuration","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gu+chi","name":"gu chi","key":"gu chi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"gu-chi","active":true,"timeZone":"Etc/UTC"},"created":"2015-12-04T08:31:27.437+0000","updated":"2015-12-04T08:31:27.437+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12743894/comment/15281053","id":"15281053","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"body":"[~kasha], [~vinodkv] is this still an issue in existing code base? Can we close as not-reproducible if it cannot be reproduced?\n\nThanks,","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-05-12T00:31:04.208+0000","updated":"2016-05-12T00:31:04.208+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12743894/comment/15283146","id":"15283146","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"body":"No responses, close as cannot reproduce, please reopen it if anybody see this issue again. \n\nThanks.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftnoteasy","name":"leftnoteasy","key":"leftnoteasy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=leftnoteasy&avatarId=18647","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=leftnoteasy&avatarId=18647","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=leftnoteasy&avatarId=18647","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=leftnoteasy&avatarId=18647"},"displayName":"Wangda Tan","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-05-13T21:00:54.268+0000","updated":"2016-05-13T21:00:54.268+0000"}],"maxResults":8,"total":8,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/MAPREDUCE-6108/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i20gfz:"}}