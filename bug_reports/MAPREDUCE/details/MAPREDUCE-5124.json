{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12640313","self":"https://issues.apache.org/jira/rest/api/2/issue/12640313","key":"MAPREDUCE-5124","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310941","id":"12310941","key":"MAPREDUCE","name":"Hadoop Map/Reduce","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310941&avatarId=10096","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310941&avatarId=10096","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310941&avatarId=10096","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310941&avatarId=10096"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12341438","id":"12341438","description":"3.1.0 release","name":"3.1.0","archived":false,"released":true,"releaseDate":"2018-04-06"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12342132","id":"12342132","name":"3.0.1","archived":false,"released":true,"releaseDate":"2018-03-25"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12342133","id":"12342133","description":"2.10.0 release","name":"2.10.0","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12342134","id":"12342134","description":"2.9.1 release","name":"2.9.1","archived":false,"released":true,"releaseDate":"2018-05-03"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12342179","id":"12342179","description":"2.8.4 Release","name":"2.8.4","archived":false,"released":true,"releaseDate":"2018-05-15"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12342279","id":"12342279","description":"2.7.6 release","name":"2.7.6","archived":false,"released":true,"releaseDate":"2018-04-16"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2013-05-14T09:38:55.725+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Fri Dec 08 23:43:40 UTC 2017","customfield_12310420":"320776","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_145929462436_*|*_5_*:*_1_*:*_0_*|*_10002_*:*_1_*:*_1318106176","customfield_12312321":null,"resolutiondate":"2017-12-01T20:36:13.963+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/MAPREDUCE-5124/watchers","watchCount":19,"isWatching":false},"created":"2013-04-02T14:30:05.439+0000","customfield_12310192":null,"customfield_12310191":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10343","value":"Reviewed","id":"10343"}],"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"19.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12323275","id":"12323275","description":"2.0.3-alpha release","name":"2.0.3-alpha","archived":false,"released":true,"releaseDate":"2013-02-14"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12323312","id":"12323312","description":"0.23.5 release","name":"0.23.5","archived":false,"released":true,"releaseDate":"2012-11-29"}],"issuelinks":[{"id":"12366710","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12366710","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12623798","key":"YARN-270","self":"https://issues.apache.org/jira/rest/api/2/issue/12623798","fields":{"summary":"RM scheduler event handler thread gets behind","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.svg","name":"Critical","id":"2"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}},{"id":"12366711","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12366711","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12634937","key":"MAPREDUCE-5043","self":"https://issues.apache.org/jira/rest/api/2/issue/12634937","fields":{"summary":"Fetch failure processing can cause AM event queue to backup and eventually OOM","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/1","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/blocker.svg","name":"Blocker","id":"1"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}},{"id":"12475806","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12475806","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12829116","key":"YARN-3630","self":"https://issues.apache.org/jira/rest/api/2/issue/12829116","fields":{"summary":"YARN should suggest a heartbeat interval for applications","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.svg","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype","name":"Improvement","subtask":false,"avatarId":21140}}}},{"id":"12475588","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12475588","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12772109","key":"MAPREDUCE-6242","self":"https://issues.apache.org/jira/rest/api/2/issue/12772109","fields":{"summary":"Progress report log is incredibly excessive in application master","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}},{"id":"12522753","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12522753","type":{"id":"12310050","name":"Regression","inward":"is broken by","outward":"breaks","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310050"},"outwardIssue":{"id":"13126315","key":"MAPREDUCE-7028","self":"https://issues.apache.org/jira/rest/api/2/issue/13126315","fields":{"summary":"Concurrent task progress updates causing NPE in Application Master","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/1","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/blocker.svg","name":"Blocker","id":"1"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}},{"id":"12524052","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12524052","type":{"id":"12310050","name":"Regression","inward":"is broken by","outward":"breaks","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310050"},"outwardIssue":{"id":"13123378","key":"MAPREDUCE-7020","self":"https://issues.apache.org/jira/rest/api/2/issue/13123378","fields":{"summary":"Task timeout in uber mode can crash AM","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}},{"id":"12527106","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12527106","type":{"id":"12310050","name":"Regression","inward":"is broken by","outward":"breaks","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310050"},"outwardIssue":{"id":"13138541","key":"MAPREDUCE-7053","self":"https://issues.apache.org/jira/rest/api/2/issue/13138541","fields":{"summary":"Timed out tasks can fail to produce thread dump","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2018-02-14T17:31:59.250+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12315342","id":"12315342","name":"mr-am"}],"timeoriginalestimate":null,"description":"The AM does not have any flow control to limit the incoming rate of events from tasks.  If the AM is unable to keep pace with the rate of incoming events for a sufficient period of time then it will eventually exhaust the heap and crash.  MAPREDUCE-5043 addressed a major bottleneck for event processing, but the AM could still get behind if it's starved for CPU and/or handling a very large job with tens of thousands of active tasks.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12897988","id":"12897988","filename":"MAPREDUCE-5124-001.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-16T13:36:02.300+0000","size":34101,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12897988/MAPREDUCE-5124-001.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12898881","id":"12898881","filename":"MAPREDUCE-5124-002.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-22T15:52:12.593+0000","size":34610,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12898881/MAPREDUCE-5124-002.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12899077","id":"12899077","filename":"MAPREDUCE-5124-003.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-23T15:18:25.766+0000","size":34660,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12899077/MAPREDUCE-5124-003.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12899630","id":"12899630","filename":"MAPREDUCE-5124-branch-2.001.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-28T15:04:50.841+0000","size":30544,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12899630/MAPREDUCE-5124-branch-2.001.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12900029","id":"12900029","filename":"MAPREDUCE-5124-branch-2.002.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-30T14:59:58.223+0000","size":30301,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12900029/MAPREDUCE-5124-branch-2.002.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12899629","id":"12899629","filename":"MAPREDUCE-5124-branch-2.7.001.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-28T15:04:50.285+0000","size":30269,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12899629/MAPREDUCE-5124-branch-2.7.001.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12900107","id":"12900107","filename":"MAPREDUCE-5124-branch-2.7.002.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2017-11-30T23:10:09.908+0000","size":30026,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12900107/MAPREDUCE-5124-branch-2.7.002.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12900026","id":"12900026","filename":"MAPREDUCE-5124-branch-2.7.002.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-30T15:00:42.152+0000","size":30026,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12900026/MAPREDUCE-5124-branch-2.7.002.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12899871","id":"12899871","filename":"MAPREDUCE-5124-branch-2.8.001.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2017-11-29T20:36:50.020+0000","size":30536,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12899871/MAPREDUCE-5124-branch-2.8.001.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12899628","id":"12899628","filename":"MAPREDUCE-5124-branch-2.8.001.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-28T15:04:50.313+0000","size":30536,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12899628/MAPREDUCE-5124-branch-2.8.001.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12900069","id":"12900069","filename":"MAPREDUCE-5124-branch-2.8.002.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2017-11-30T19:07:59.250+0000","size":30293,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12900069/MAPREDUCE-5124-branch-2.8.002.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12900028","id":"12900028","filename":"MAPREDUCE-5124-branch-2.8.002.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-30T15:00:06.769+0000","size":30293,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12900028/MAPREDUCE-5124-branch-2.8.002.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12899627","id":"12899627","filename":"MAPREDUCE-5124-branch-2.9.001.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-28T15:04:51.416+0000","size":30544,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12899627/MAPREDUCE-5124-branch-2.9.001.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12900027","id":"12900027","filename":"MAPREDUCE-5124-branch-2.9.002.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-30T15:00:14.040+0000","size":30301,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12900027/MAPREDUCE-5124-branch-2.9.002.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12896681","id":"12896681","filename":"MAPREDUCE-5124-CoalescingPOC-1.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-08T16:46:02.820+0000","size":13002,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12896681/MAPREDUCE-5124-CoalescingPOC-1.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12896910","id":"12896910","filename":"MAPREDUCE-5124-CoalescingPOC2.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-09T17:37:09.009+0000","size":12883,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12896910/MAPREDUCE-5124-CoalescingPOC2.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12897548","id":"12897548","filename":"MAPREDUCE-5124-CoalescingPOC3.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-14T12:18:10.823+0000","size":12166,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12897548/MAPREDUCE-5124-CoalescingPOC3.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12593207","id":"12593207","filename":"MAPREDUCE-5124-proto.2.txt","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ozawa","name":"ozawa","key":"ozawa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=ozawa&avatarId=21740","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=ozawa&avatarId=21740","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=ozawa&avatarId=21740","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=ozawa&avatarId=21740"},"displayName":"Tsuyoshi Ozawa","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-07-19T15:01:08.333+0000","size":14865,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12593207/MAPREDUCE-5124-proto.2.txt"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12583106","id":"12583106","filename":"MAPREDUCE-5124-prototype.txt","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ozawa","name":"ozawa","key":"ozawa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=ozawa&avatarId=21740","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=ozawa&avatarId=21740","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=ozawa&avatarId=21740","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=ozawa&avatarId=21740"},"displayName":"Tsuyoshi Ozawa","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-05-14T09:38:55.722+0000","size":8770,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12583106/MAPREDUCE-5124-prototype.txt"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"321117","customfield_12312823":null,"summary":"AM lacks flow control for task events","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/13619854","id":"13619854","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"This is also similar to YARN-270 where the RM could fall behind when processing NM status updates.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2013-04-02T14:31:24.206+0000","updated":"2013-04-02T14:31:24.206+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/13656929","id":"13656929","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ozawa","name":"ozawa","key":"ozawa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=ozawa&avatarId=21740","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=ozawa&avatarId=21740","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=ozawa&avatarId=21740","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=ozawa&avatarId=21740"},"displayName":"Tsuyoshi Ozawa","active":true,"timeZone":"America/Los_Angeles"},"body":"I've designed and prototyped to deal with this problem as follows:\n\n1. AsyncDispatcher should have the capacity of blocking queue to limit memory usage.\n2. AsyncDispatcher should have the capacity of handling events per sec to limit CPU usage.\n\nThis prototype can only handle 1 in AsyncDispatcher.\nIf this design is acceptable, I'll create umbrella tickets and continue to implement. Any idea?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ozawa","name":"ozawa","key":"ozawa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=ozawa&avatarId=21740","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=ozawa&avatarId=21740","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=ozawa&avatarId=21740","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=ozawa&avatarId=21740"},"displayName":"Tsuyoshi Ozawa","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-05-14T09:38:55.725+0000","updated":"2013-05-14T09:38:55.725+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/13657057","id":"13657057","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tgraves","name":"tgraves","key":"tgraves","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Graves","active":true,"timeZone":"America/Chicago"},"body":"Can you please give more details.  When you say it should have the capacity for handling event per second what does that mean?  Is it telling the tasks to stop backoff?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tgraves","name":"tgraves","key":"tgraves","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Graves","active":true,"timeZone":"America/Chicago"},"created":"2013-05-14T13:40:33.549+0000","updated":"2013-05-14T13:40:33.549+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/13657091","id":"13657091","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"body":"Also I am very nervous about the possibilities of deadlocks if the AsyncDispatcher can block.  The simple case would be two threads in the async dispatcher.  The queue is almost full and some RPC calls come in that fill it up fully.  At the same time each of these two running threads also try to insert something into the dispatcher and block.  Now we cannot process anything anymore because there are no free threads to process data.\n\nI would really prefer a model where the RPC changes and can respond with a try again later.  So that if the AM/RM is falling behind the RPC layer can detect that and throttle new events coming into the system.  We would need to also change some of the logic in the system so a node/task would not be declared as dead because the AM/RM was so far behind in events that it told the heart beats to try again later until it times out.  But that would probably just be a minimal event or even better a simple concurrent data structure.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"created":"2013-05-14T14:38:12.547+0000","updated":"2013-05-14T14:38:12.547+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/13657192","id":"13657192","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ozawa","name":"ozawa","key":"ozawa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=ozawa&avatarId=21740","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=ozawa&avatarId=21740","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=ozawa&avatarId=21740","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=ozawa&avatarId=21740"},"displayName":"Tsuyoshi Ozawa","active":true,"timeZone":"America/Los_Angeles"},"body":"返信\n\n> When you say it should have the capacity for handling event per second what does that mean? \n\nIt means that AsyncDispatcher#dispatch limits the consuming events per sec to avoid the starvation of CPU by a large number of event processing. It just limits the number of processing events. If the error should be returned to the tasks, it should be done when the producers of queue enqueues or RPC layer as Robert described.\n\n> Also I am very nervous about the possibilities of deadlocks if the AsyncDispatcher can block. \n\nI understood the possibility of deadlock you pointed out. I will change the design to deal with this problem at RPC layer. The code as follow is the concept code. Is it enough to restrict at server side and retry at client side? If the answer is positive, I'll prototype it at RPC layer.\n\n{code:java}\n// client side\ntry {\n  // synchronous RPC call\n  rpcMethod1();\n} catch (TemporaryBuzyException ise) {\n  // handling retry\n} catch (IOException ioe) {\n  // handling SocketTimeoutException or\n  // some connection-related eror\n}\n{code}\n\n{code:java}\n// server side(org.apache.hadoop.ipc.Server)\nvoid processData() {\n    if (isBusy()) {\n      setupResponse(responseBuffer, readParamsFailedCall, RPCProto.Error, \n  TemporaryBuzyException.getClass(), …);\n    } else {\n      // process RPC usually\n    } \n}\n{code}\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ozawa","name":"ozawa","key":"ozawa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=ozawa&avatarId=21740","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=ozawa&avatarId=21740","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=ozawa&avatarId=21740","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=ozawa&avatarId=21740"},"displayName":"Tsuyoshi Ozawa","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-05-14T16:39:48.967+0000","updated":"2013-05-14T16:39:48.967+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/13659596","id":"13659596","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"body":"I believe in most cases it is enough to restrict it at the server side and retry at the client side, but there are some RPC calls that are different and perhaps should be handled slightly differently.  YARN-309 went in to try and throttle the hearbeats, instead of rejecting them and asking them to retry.  I think this is preferable for heartbeats over an outright rejection.  Simply because we know that the heartbeats are going to come regularly and asking the next one to wait does not reduce the total amount of work that we are going to need to do.\n\nSo I would throw a ToBusyRetryLater type of exception for once time RPC calls when the AsyncDispatcher's queue is over a high water mark, but for heartbeats I would want them to scale the frequency based off of how busy the AsyncDispatcher is.  ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"created":"2013-05-16T14:43:59.289+0000","updated":"2013-05-16T14:43:59.289+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/13663908","id":"13663908","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ozawa","name":"ozawa","key":"ozawa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=ozawa&avatarId=21740","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=ozawa&avatarId=21740","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=ozawa&avatarId=21740","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=ozawa&avatarId=21740"},"displayName":"Tsuyoshi Ozawa","active":true,"timeZone":"America/Los_Angeles"},"body":"I apologize for delaying reply.\n\n> So I would throw a ToBusyRetryLater type of exception for once time RPC calls when the AsyncDispatcher's queue is over a high water mark, but for heartbeats I would want them to scale the frequency based off of how busy the AsyncDispatcher is.\n\nIt's better idea. I'll try to implement both heartbeat-style RPC and one-time RPC.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ozawa","name":"ozawa","key":"ozawa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=ozawa&avatarId=21740","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=ozawa&avatarId=21740","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=ozawa&avatarId=21740","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=ozawa&avatarId=21740"},"displayName":"Tsuyoshi Ozawa","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-05-22T07:54:48.522+0000","updated":"2013-05-22T07:54:48.522+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/13713742","id":"13713742","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ozawa","name":"ozawa","key":"ozawa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=ozawa&avatarId=21740","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=ozawa&avatarId=21740","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=ozawa&avatarId=21740","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=ozawa&avatarId=21740"},"displayName":"Tsuyoshi Ozawa","active":true,"timeZone":"America/Los_Angeles"},"body":"I attached a rough prototype to restrict onetime-style RPC with keeping the backward compatibility. This prototype includes changes as follows:\n\n1. adding RPC header to callType to distinguish ONETIME with HEATBEAT.\n2. adding a new error code(ToBusyRetryLaterException).\n3. adding a counter to restrict numbers of processing RPC within high-water mark to Server#Handler.\n\nIn a mean while, this prototype does NOT include:\n1. test codes.\n2. creating response to decide the heatbeat period dynamically to client.\n\nIf this design is acceptable, I make the next patch which include both of them. If you have any question about the design, let me know.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ozawa","name":"ozawa","key":"ozawa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=ozawa&avatarId=21740","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=ozawa&avatarId=21740","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=ozawa&avatarId=21740","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=ozawa&avatarId=21740"},"displayName":"Tsuyoshi Ozawa","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-07-19T15:01:08.347+0000","updated":"2013-07-19T15:01:08.347+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/15229192","id":"15229192","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=haibochen","name":"haibochen","key":"haibochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Haibo Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"[~jlowe], [~ozawa], [~revans2] Does increasing the task report interval sound like a viable approach to alleviate the issue here? Right now the report interval is hardcoded as 3 seconds. \nWe could make the task report interval configurable and increase the interval with some heuristics to limit the number of task status updates per unit time.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=haibochen","name":"haibochen","key":"haibochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Haibo Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-04-06T21:42:32.811+0000","updated":"2016-04-06T21:42:32.811+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/15241907","id":"15241907","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"For this case I think increasing the task heartbeat period would help.  The problem is the task heartbeats are piling on asynchronous events faster than they are being consumed, so if they were posted less frequent the AM could keep up.  A configurable task report interval would be a simple and straightforward approach which would give users a knob to turn when this happens for large jobs that run very wide.  Alternatively the AM could look at the number of events queued up and automatically tune the task heartbeat.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2016-04-14T20:59:00.190+0000","updated":"2016-04-14T20:59:00.190+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/15241959","id":"15241959","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=haibochen","name":"haibochen","key":"haibochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Haibo Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks a lot for your comments, [~jlowe]. [~karthik_p] and I discussed both approaches offline, and we decided to propose the former due to its simplicity and it should be sufficient in most cases. Not sure if there is anyone working on this. Can I assign this to myself and start the implementation of the making the interval configurable?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=haibochen","name":"haibochen","key":"haibochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Haibo Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-04-14T21:35:28.218+0000","updated":"2016-04-14T21:35:28.218+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/15386931","id":"15386931","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=haibochen","name":"haibochen","key":"haibochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Haibo Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"Turns out MapReduce-6242 has already made the task heartbeat period configurable (mapreduce.task.progress-report.interval). Will leave this to implement the other approach, automatic task flow control, as Jason suggested.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=haibochen","name":"haibochen","key":"haibochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Haibo Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-07-21T00:57:14.587+0000","updated":"2016-07-21T00:57:14.587+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16149817","id":"16149817","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=miklos.szegedi%40cloudera.com","name":"miklos.szegedi@cloudera.com","key":"miklos.szegedi@cloudera.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=miklos.szegedi%40cloudera.com&avatarId=32342","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=miklos.szegedi%40cloudera.com&avatarId=32342","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=miklos.szegedi%40cloudera.com&avatarId=32342","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=miklos.szegedi%40cloudera.com&avatarId=32342"},"displayName":"Miklos Szegedi","active":true,"timeZone":"America/Los_Angeles"},"body":"Thank you, [~ozawa] for the patch and the design and [~jlowe], [~haibochen], [~revans2], and [~tgraves] for the design suggestions. I think there is an approach that does not cause deadlocks but it is a little bit more robust. The AM is the usual bottleneck. Because of this, it should be the side to drive the communication. Could the server (AM) send the heartbeat to the client (Task)?\n{code}\n  foreach task in tasks\n      thread.run(()->{while(…){sendHeartBeat(task);metric = receiveHeartBeat(task);process(metric);sleep(3secs);});\n{code}\nThe processing of metrics, which is the bottleneck is blocking the loop above (not scheduled into AsyncDispatcher), so the heartbeat frequency will degrade gracefully as the number of tasks increase. For example, it will be a little bit more than 3 seconds with 2 tasks. It will be much longer like 40 seconds with 100000 tasks, but all the participants remain responsive and no exceptions or errors are thrown. The previously suggested approach would unnecessarily create rejected heartbeat messages on the network that may become the bottleneck at scale. The actual code may use asynchronous calls not to create a thread for each task.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=miklos.szegedi%40cloudera.com","name":"miklos.szegedi@cloudera.com","key":"miklos.szegedi@cloudera.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=miklos.szegedi%40cloudera.com&avatarId=32342","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=miklos.szegedi%40cloudera.com&avatarId=32342","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=miklos.szegedi%40cloudera.com&avatarId=32342","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=miklos.szegedi%40cloudera.com&avatarId=32342"},"displayName":"Miklos Szegedi","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-09-01T00:04:26.956+0000","updated":"2017-09-01T00:04:26.956+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16150458","id":"16150458","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"Having the AM send the heartbeat means the AM needs to be the client in the RPC connection since only servers receive method calls.  That creates two problems in practice.  First is the discovery problem -- how does the AM know the listening port for each task?  Second is thread scaling since the client RPC layer creates a thread for every connection.  That means a thread per task which is not going to work for large jobs.\n\nbq. The actual code may use asynchronous calls not to create a thread for each task.\n\nThis is really the key and the only thing necessary to solve the problem. The root cause of this problem is that the AM is quickly sending a response to each heartbeat without actually processing it.  That creates a flow control issue since the rate of processing heartbeats is somewhat disconnected from the incoming rate.  Therefore we can receive them at a rate far greater than it takes to process, causing an unbounded pileup of backlogged events.  The reason the AM behaves this way is that it needs to free up the IPC Server handler thread so it can handle other tasks requests, like other heartbeats, new task attempt connections, task requests, etc.  There's lots of other places in YARN and MAPREDUCE where a similar tactic is taken with the resulting flow control issue as a result.\n\nThe real fix is to not send a heartbeat reply until the heartbeat is completely processed.  Then there will only ever be as many outstanding heartbeats and metrics status updates as there are task attempts running at the time, rather than an unbounded number based on the rate difference between how fast the tasks are posting heartbeats and how fast the AsyncDispatcher can process them.  If we were able to synchronously process the heartbeat in a way that doesn't completely tie up an IPC Server handler thread for the duration of the heartbeat call then we're all set.  Task heartbeats naturally slow down as the ability of the AM to process them degrades.  No need for the AM to be explicit about rejecting requests or the AM itself doing any 3 second sleeping.  We just need to leverage the functionality added in HADOOP-11552 so we aren't compelled to reply to heartbeats before they are fully processed to free up an IPC Server thread.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2017-09-01T12:53:05.358+0000","updated":"2017-09-01T12:53:05.358+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16153432","id":"16153432","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"body":"Just a question - we already have https://issues.apache.org/jira/browse/HADOOP-10597. Can't we just enable this feature inside the MRAppMaster when it creates the RPC server for TaskUmbilicalProtocol? (I guess that's the message which mappers/reducers call). Then in {{TaskReporter}} we handle {{RetriableException}} and increase the heartbeat interval, let's say double it. If it succeeds after a couple of reports, we can try to decrease it again, back to the original value. This might not be the best flow control method, but we can think about this.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-09-05T10:21:46.675+0000","updated":"2017-09-05T10:37:11.648+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16153610","id":"16153610","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"Turning on the RPC backoff feature alone will not be enough, as the call queues aren't backing up today.  We'd have to change the processing of the heartbeat to be synchronously processed by the IPC server handler thread rather than thrown on the AsyncDispatcher event queue as it's done today.  That means we'll quickly start tying up server handler threads for large jobs, and that will end up choking out more important method calls like task assignment, task completion, etc.  It would probably work but be far from ideal when things start to become congested.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2017-09-05T13:08:14.236+0000","updated":"2017-09-05T13:08:14.236+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16154072","id":"16154072","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=miklos.szegedi%40cloudera.com","name":"miklos.szegedi@cloudera.com","key":"miklos.szegedi@cloudera.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=miklos.szegedi%40cloudera.com&avatarId=32342","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=miklos.szegedi%40cloudera.com&avatarId=32342","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=miklos.szegedi%40cloudera.com&avatarId=32342","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=miklos.szegedi%40cloudera.com&avatarId=32342"},"displayName":"Miklos Szegedi","active":true,"timeZone":"America/Los_Angeles"},"body":"Thank you, [~jlowe] for the previous reply. Let me address your concerns there. You are right, doing an asynchronous call leveraging HADOOP-11552 is probably the smallest change possible in this case.\nWhat I was trying to solve is the theoretical problem sending heartbeat with metrics from large amount of tasks with graceful degradation with interval T and minimal delay D. The delay for a metric is {{D+T/2}}, when read from the AM. It waited D amount of time in the queue and once available it will be sampled with a mean delay of {{T/2}}. If the server controls the heartbeat both graceful degradation and minimal delay are met, since there is no delay D=0, the heartbeat is processed right away. If the task controls the heartbeat the average wait time adds to the delay of the current metrics, so any consumer will get those later. Indeed this would also mean making the client socket connection act as an RPC server, which is quite a big change.\nI think either the server needs to control the heartbeat to minimize the delay (indeed a too big a change), or the task needs to tweak the heartbeat interval based on the previous response time as [~pbacsko] has suggested. The second option could be implemented on top of HADOOP-11552.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=miklos.szegedi%40cloudera.com","name":"miklos.szegedi@cloudera.com","key":"miklos.szegedi@cloudera.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=miklos.szegedi%40cloudera.com&avatarId=32342","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=miklos.szegedi%40cloudera.com&avatarId=32342","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=miklos.szegedi%40cloudera.com&avatarId=32342","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=miklos.szegedi%40cloudera.com&avatarId=32342"},"displayName":"Miklos Szegedi","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-09-05T18:01:36.585+0000","updated":"2017-09-05T18:01:36.585+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16154108","id":"16154108","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"bq. I think either the server needs to control the heartbeat to minimize the delay (indeed a too big a change), or the task needs to tweak the heartbeat interval based on the previous response time as Peter Bacsko has suggested.\n\nThe issue here isn't that tasks are seeing a long delay in heartbeat response time and failing to react to that.  The problem is the AM is accepting and quickly responding to them at a rate far higher than it can actually process them in the background AsyncDispatcher thread.  In other words, by the time a task notices a significant delay in heartbeat processing time the AM has probably already started going into GC hell and it's likely too late to course-correct at that point.  The only way to get reliable feedback on how long the processing is really taking is to make the heartbeat processing synchronous, so the task doesn't get a response until the processing has actually completed.  Without async RPC call support, that has the issue of tying up the server handler threads which prevents more important calls from being processed in a timely manner.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2017-09-05T18:33:19.047+0000","updated":"2017-09-05T18:33:19.047+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16154117","id":"16154117","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=miklos.szegedi%40cloudera.com","name":"miklos.szegedi@cloudera.com","key":"miklos.szegedi@cloudera.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=miklos.szegedi%40cloudera.com&avatarId=32342","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=miklos.szegedi%40cloudera.com&avatarId=32342","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=miklos.szegedi%40cloudera.com&avatarId=32342","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=miklos.szegedi%40cloudera.com&avatarId=32342"},"displayName":"Miklos Szegedi","active":true,"timeZone":"America/Los_Angeles"},"body":"[~jlowe], I absolutely agree that the heartbeat should be synchronous, with no new call until the previous is processed and I also agree that the async RPC support is needed to process other important messages. This solves the graceful degradation issue. What I am saying is that once 100000 mappers send these heartbeats and wait for them, there will be a delay processing them due to the server bottleneck, so the metric would reach the client later, unless we minimize the delay with either a server to client approach or a dynamic heartbeat interval.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=miklos.szegedi%40cloudera.com","name":"miklos.szegedi@cloudera.com","key":"miklos.szegedi@cloudera.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=miklos.szegedi%40cloudera.com&avatarId=32342","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=miklos.szegedi%40cloudera.com&avatarId=32342","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=miklos.szegedi%40cloudera.com&avatarId=32342","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=miklos.szegedi%40cloudera.com&avatarId=32342"},"displayName":"Miklos Szegedi","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-09-05T18:43:25.836+0000","updated":"2017-09-05T18:43:25.836+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16154189","id":"16154189","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"Ah, sorry, I thought we were still worrying about how to keep the AM from exploding.  Sure, I could see a dynamic heartbeat still being useful once the flow control problem is addressed.  Even with the current async processing without flow control we could feedback to the task information on how long to wait until the next heartbeat (e.g.: leverage the current AsyncDispatcher event queue size to scale the next task heartbeat interval accordingly) which could help avoid continued heartbeat pileups for large jobs.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2017-09-05T19:49:23.555+0000","updated":"2017-09-05T19:49:23.555+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16211212","id":"16211212","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"body":"[~jlowe] yesterday I had a discussion with [~miklos.szegedi@cloudera.com] about the possible implementations of this.\r\n\r\nWe came up with different solutions which I'll try to summarize here.\r\n\r\n* Throttling: we try to determine whether an event for a particular task update has been processed or not. If not, then we don't try to process the new status update. We can examine the event queue of the AsyncDispatcher and try find update event that belongs to the same attempt ID. I can think of two approaches here:\r\n*# Server-side throttling: block inside MRAppMaster until the status update is fully processed. If I'm not mistaken, this completely blocks the current RPC server thread, so too many status updates in parallel might make it impossible to process other RPC calls.\r\n*# Client-side throttling: we return without dispatching {{TaskAttemptStatusUpdateEvent}} to the event queue, but set a field in {{AMFeedBack}}, indicating that the AM is busy. The client checks the result. If the flag is set, it doubles the status update interval, resulting in fewer status update calls to the AM. \r\n* Use the deferred RPC response mechanism implemented in HADOOP-11552. This means that we have to retrieve the callback object from the current RPC calling context and pass it over until the full update logic is executed. This is doable, although one event might create another event and it's not entirely clear when the operation can be considered finished. Getting rid of some asynchronicity can help, although I'm not sure if this kind of change is dangerous or not.\r\n* Let the AM drive the whole status update mechanism as explained by Miklos. This looks too complicated and the change would be too big, at least for this JIRA.\r\n\r\nI haven't been deeply considering the pros and cons of the proposed solutions. Personally I like the client-side throttling and the deferred RPC callback.\r\n\r\nIf we go for throttling, we also have to think about how we determine when we need to push the client back to send updates less frequently. We can check the size of the current event queue, but Miklos had some convincing arguments against doing it. We can look for already existing TaskAttemptStatusUpdateEvent:s (what I suggested above) but that means iteration which is more expensive. I can't see a simple, silver-bullet solution right now.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-10-19T15:31:08.539+0000","updated":"2017-10-19T15:32:03.653+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16211818","id":"16211818","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"As you point out, it's probably going to be bad for the IPC server thread to block since that will likely cause all server threads to block shortly thereafter preventing any RPC processing until the blockage clears.  That is definitely a throttle, but it could be severe enough to cause task failures if they can't contact the AM in a timely manner.\r\n\r\nFor the throttling case we could do something similar to what was done in YARN to help mitigate NM heartbeats overwhelming the RM.  We could still dispatch status update events to the task attempts for every heartbeat, but instead of attaching the status update directly to the event we could attach the status payload to the TaskAttempt directly.  If there's already an unprocessed status event pending on the TaskAttempt we can then coalesce the two status updates into a single status update.  Coalescing should be pretty straightforward since the newer status should clobber the older status for most of the payload.  Then when the status update event arrives at the TaskAttempt it processes the status update object, if there is one, then clears it.  This should largely mitigate the problem since the memory pressure from all these events is primarily from the status payload attached to each event.  If the server thread makes sure there is only at most one outstanding status payload per task then we have an upper limit on the number of outstanding status payloads the AM has to track.\r\n\r\nWith this approach I don't think it will be necessary to scan or otherwise track each status update events posted to the dispatcher.  They're going to be very small once the status payload is removed, and they'll be quick to process if its corresponding status payload was coalesced into an earlier payload.  If desired we could also combine this idea with the client-side throttle hint in the RPC response, since the server thread will know whether it coalesced a status update or not.  If it did then we could tell the client to throttle a bit for the next update.\r\n\r\nDeferred RPC response could be useful here, but I haven't thought through how tricky it would be to implement in practice.\r\n\r\nI agree that switching the AM to be the one that drives heartbeats is not appropriate here.  My feeling is it creates as many problems as it solves.\r\n\r\nMy current recommendation is to try the coalesce status updates approach as was done for NM heartbeats to the RM.  That was pretty effective there at mitigating the backlog issues, and I think it could work well here too.  As a bonus it makes it trivial to determine when we should tell a client to backoff a bit if we choose to do that as well.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2017-10-19T21:58:32.346+0000","updated":"2017-10-19T21:58:32.346+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16212452","id":"16212452","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"body":"Thanks Jason for the insights.\r\n\r\nCould you give me the location of the code that handles this situation in the Resource Manager? I'd like to take a look at those.\r\n\r\nYou mentioned that \"coalescing\" the events should do the job. Are you suggesting to update {{TaskAttemptImpl.reportedStatus}} directly? This indeed seems to be a reasonable thing to do.\r\n\r\nBut are you sure this would eliminate the problem completely? We'd still put the same number of {{TaskAttemptStatusUpdateEvent}} to the dispatcher's queue, so with a lot of tasks, it could still put a considerable stress on the AM.\r\n\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-10-20T10:01:44.561+0000","updated":"2017-10-20T10:01:44.561+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16212598","id":"16212598","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"bq. Could you give me the location of the code that handles this situation in the Resource Manager?\r\n\r\nIt's between RMNodeImpl and the scheduler.  RMNodeImpl's StatusUpdateWhenHealthyTransition used to blindly send a scheduler event for every node heartbeat, but now it queues up the container updates and only sends an event if it knows there isn't one already pending.  The scheduler then pulls all container updates from the queue when it receives a node status update event.  See the handling of nextHeartBeat and nodeUpdateQueue in RMNodeImpl.\r\n\r\nbq. Are you suggesting to update TaskAttemptImpl.reportedStatus directly?\r\n\r\nMaybe, or just have a separate field representing the pending status that the TaskAttempt will reference when receiving a status update event.  I haven't looked at it closely enough to see if it makes more sense to update reportedStatus directly rather than keep it separate until the status update event is processed.  There is a bit of processing that occurs when updating the status, so TaskAttemptImpl would need some way to know whether or not that has already occurred when a status update event arrives.  Keeping it separate makes it straightforward to distinguish.\r\n\r\nbq. We'd still put the same number of TaskAttemptStatusUpdateEvent to the dispatcher's queue, so with a lot of tasks, it could still put a considerable stress on the AM.\r\n\r\nAgain the vast majority of the stress is because of the _payload_ of all those events.  We'd be eliminating that overhead, and processing a status event when there's no pending status payload to update would be very fast.  So the end result would be a much smaller heap (i.e.: much less GC pressure which leads to the vicious cycle) and faster processing of the extra status update events (i.e.: the AM can catch up much faster).\r\n\r\nAlthough now that I think about it, we can also eliminate the extra status events by doing something similar to the RMNodeImpl-YarnScheduler interaction.  If we know when we are coalescing task status updates then we know that a previous status update has not been processed yet, so we can avoid sending a redundant status update event.  That will eliminate both the payload overhead and the event overhead.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2017-10-20T12:43:39.284+0000","updated":"2017-10-20T12:43:39.284+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16236220","id":"16236220","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"body":"I've got some updates. I tried to use the deferred callback mechanism implemented in HADOOP-11552 and it doesn't work. It's because HADOOP-11552 solved the issue for {{ProtobufRpcEngine}} but MapRed status updates use {{WritableRpcEngine}}. So either we completely drop this approach or implement HADOOP-11552 for Writable RPC calls as well.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-02T17:35:36.674+0000","updated":"2017-11-02T17:35:36.674+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16236485","id":"16236485","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"bq. So either we completely drop this approach or implement HADOOP-11552 for Writable RPC calls as well.\r\n\r\n...or change TaskUmbilicalProtocol to use protobufs which would be a lot more sensible if we want to pursue the deferred call approach.  See MAPREDUCE-6706.  WritableRpcEngine is something the community has tried get rid of already, so I wouldn't recommend investing more engineering effort into it.\r\n\r\nAt this point I think the status coalesce approach I described above is probably the simplest and least risky to implement.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2017-11-02T19:50:33.712+0000","updated":"2017-11-02T19:50:33.712+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16236541","id":"16236541","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"body":"I agree with the coalescing approach. I'll come up with a simple POC soon.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-02T20:29:40.701+0000","updated":"2017-11-02T20:29:40.701+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16244291","id":"16244291","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"body":"I created a POC which uses this \"event coalescing approach\".\r\n\r\nI roughly describe what changed:\r\n* Added new method {{setNextUpdate()}} to {{TaskAttemptImpl}}\r\n* Added the mapping of TaskAttemptID <-> TaskAttemptImpl\r\n* At each {{statusUpdate()}}, we call {{setNextUpdate()}} and don't pass the status object as a payload\r\n* In the {{StatusUpdater}} transition, we check if we need to update the status or not. If needsUpdate=true, then we run the original updater logic.\r\n\r\nIf we have backlog of task update events for a given attempt and that attempt hasn't been updated, the {{StatusUpdater}} will not do anything because {{needsUpdate}} will be false.\r\n\r\nI also kept the original updating logic, that is, retrieving it from the event. First I tried to remove the original constructor of {{TaskAttemptStatusUpdateEvent}} but it caused compilation errors in various classes. It turned out that quite a few test cases use the old approach to manipulate the status of a task attempt. I didn't want to introduce too many code changes. Not sure what's the best solution in this case.\r\n\r\n[~jlowe] could you take a look at this POC?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-08T16:48:43.638+0000","updated":"2017-11-08T16:48:43.638+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16244294","id":"16244294","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"body":"By the way, I tested this modification on a 8-node cluster and changed the update interval to a small value and it worked well without any problems.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-08T16:49:50.421+0000","updated":"2017-11-08T16:49:50.421+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16245754","id":"16245754","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"body":"Hm, I believe there's a race condition in my previous patch.\r\n\r\n1. Task attempt invokes setNextStatusUpdate() via RPC\r\n2. This results in attempt.needStatusUpdate = true\r\n3. However, an update for the same attempt is already running, setting needStatusUpdate = false at the end\r\n4. New event is queued\r\n5. New event is taken from the queue, updater logic runs\r\n6. Updater logic sees that needStatusUpdate = false -- an update is lost\r\n\r\nI'll re-think this and update the patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-09T14:44:45.775+0000","updated":"2017-11-09T14:44:45.775+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16246125","id":"16246125","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"body":"I uploaded POC v2. This should be free of race conditions. Plus, we only dispatch update events to the queue if it's necessary.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-09T17:38:09.249+0000","updated":"2017-11-09T17:38:09.249+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16247608","id":"16247608","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"Thanks for the patch!\r\n\r\nI'm not a fan of TaskAttemptListenerImpl knowing about TaskAttemptImpl.  It circumvents the TaskAttempt interface, and I don't think it's necessary.  The reason it wants to know about TaskAttemptImpl is so it can stash the status update there, but we could stash it other places which may be cleaner.\r\n\r\nFor example, TaskAttemptListenerImpl could keep a collection of status updates, and the status update event could point to where the listener is holding the event.  The object in the async event would need to be an AtomicReference or something fancier so the status update event can be updated while the async event is in flight.  The first thing the TaskAttemptImpl would do when receiving the status event is atomically swap the status reference with null.  The listener can tell whether the attempt received the status by checking whether the previous reference was null when swapping it back in.\r\n\r\nI don't think it's OK to simply clobber a previous status with a subsequent status.  For example, if the previous status has counters and the later status does not, we should preserve the counters from the previous status.  Similarly, if there are fetch failures reported in the previous stauts, those need to be copied into the subsequent status.  This will make atomic updates of the status trickier, and we may need some locking involved so we can atomically update the status to prevent the attempt trying to consume a status while the listener is in the process of coalescing it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2017-11-10T14:59:42.269+0000","updated":"2017-11-10T14:59:42.269+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16247678","id":"16247678","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"body":"Thanks Jason.\r\n\r\nAre you sure we can't just replace the status updates? I checked the code of TaskReporter, to me it seems that counters/fetch failures cannot be removed, only altered/increased. If you think about it, we send updates in every 3 seconds anyway - so if it's a problem, then it would appear on the client side, too (that is, losing data).\r\n\r\nI agree with your comment regarding the mapping - passing a reference in the event is a good idea.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-10T15:48:33.174+0000","updated":"2017-11-10T15:56:18.883+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16247740","id":"16247740","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"body":"Just a quick update on the GC usage improvement. I know the POC is not the final version, but I still, I decided to check how much it improves.\r\n\r\nI added a 2 second sleep to {{StatusUpdater.transition()}} to cause event backlog and used a mapper code which constantly called {{reporter.progress()}} in a loop. I also decreased update interval to 100 ms.\r\n\r\nGC events in the with the old code:\r\n{noformat}\r\n[GC (Allocation Failure)  52224K->8221K(200192K), 0.0130368 secs]\r\n[GC (Allocation Failure)  60445K->10200K(252416K), 0.0119459 secs]\r\n[GC (Metadata GC Threshold)  59477K->10902K(252416K), 0.0151800 secs]\r\n[Full GC (Metadata GC Threshold)  10902K->9053K(201216K), 0.0446707 secs]\r\n[GC (Allocation Failure)  113501K->19028K(251904K), 0.0136092 secs]\r\n[GC (Metadata GC Threshold)  78026K->17595K(305664K), 0.0226579 secs]\r\n[Full GC (Metadata GC Threshold)  17595K->12774K(347648K), 0.0501647 secs]\r\n[GC (Allocation Failure)  221670K->24081K(377344K), 0.0199000 secs]\r\n[GC (Allocation Failure)  260113K->29187K(378368K), 0.0277259 secs]\r\n[GC (Allocation Failure)  265219K->39660K(373248K), 0.0384575 secs]\r\n[GC (Allocation Failure)  267500K->48473K(378368K), 0.0370554 secs]\r\n[GC (Allocation Failure)  276313K->55049K(371200K), 0.0417077 secs]\r\n[GC (Allocation Failure)  275721K->61521K(365568K), 0.0270593 secs]\r\n[GC (Allocation Failure)  275025K->67873K(359936K), 0.0417392 secs]\r\n[GC (Allocation Failure)  274721K->74129K(345088K), 0.0531881 secs]\r\n[GC (Allocation Failure)  274833K->80089K(347648K), 0.0270885 secs]\r\n[GC (Allocation Failure)  274649K->85921K(345088K), 0.0313155 secs]   <-- I killed the job at this point\r\n{noformat}\r\n\r\nWith the POC:\r\n{noformat}\r\n[GC (Allocation Failure)  52224K->8183K(200192K), 0.0228069 secs]\r\n[GC (Allocation Failure)  60407K->10370K(252416K), 0.0135163 secs]\r\n[GC (Metadata GC Threshold)  60383K->10958K(252416K), 0.0174618 secs]\r\n[Full GC (Metadata GC Threshold)  10958K->8924K(198144K), 0.0452158 secs]\r\n[GC (Allocation Failure)  113372K->18810K(254976K), 0.0132976 secs]\r\n[GC (Metadata GC Threshold)  80801K->17577K(302592K), 0.0137089 secs]\r\n[Full GC (Metadata GC Threshold)  17577K->12903K(345088K), 0.0579774 secs]\r\n[GC (Allocation Failure)  221799K->24221K(382976K), 0.0188251 secs]\r\n[GC (Allocation Failure)  268445K->24870K(384000K), 0.0164503 secs]\r\n[GC (Allocation Failure)  269094K->19999K(381952K), 0.0155673 secs]  <-- final event\r\n{noformat}\r\n\r\nI think the difference speaks for itself.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-10T16:28:38.594+0000","updated":"2017-11-10T16:28:38.594+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16247743","id":"16247743","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"bq. Are you sure we can't just replace the status updates?\r\n\r\nYes.  For the counters, I was thinking of Tez which only sends the counters every other status update or so.  For MapReduce I think we're OK on the counters since they're sent every heartbeat.  However we're not OK when it comes to the failed fetch tasks.  These are only sent once, and once the status report has been sent successfully are cleared:\r\n{code}\r\n            amFeedback = umbilical.statusUpdate(taskId, taskStatus);\r\n            taskFound = amFeedback.getTaskFound();\r\n            taskStatus.clearStatus();\r\n{code}\r\nand ReduceTaskStatus wipes out the fetchFailedTasks:\r\n{code}\r\n  synchronized void clearStatus() {\r\n    super.clearStatus();\r\n    failedFetchTasks.clear();\r\n  }\r\n{code}\r\n\r\nbq. If you think about it, we send updates in every 3 seconds anyway - so if it's a problem, then it would appear on the client side, too (that is, losing data).\r\n\r\nAs I mentioned above, Tez only sends them every so often and the AM tracks the last one received.  If that were to happen here and we were to clobber the counters on a previous pending status with a null counters from the current status then we would drop that update.  The listener should receive a subsequent status update eventually with counters that will correct that problem, but in the interim the counters will be inaccurate primarily due to a mishandling on the listener side that can be corrected.\r\n\r\nAs for the fetch failures, these are one-time trigger events that will never be resent.  Looking at how TaskAttemptImpl and JobImpl interprets them, it doesn't expect these to be a cumulative list since otherwise it would end up repeatedly blaming maps for fetch failures every status update and would not be able to distinguish when a reducer is making a new complaint about a map versus repeating an old complaint.\r\n\r\nSo we need to coalesce the fetch failures between pending status updates or they could be dropped.  Either that or we need to move the handling of those failures reported in the status from the task attempt to the task listener.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2017-11-10T16:32:49.351+0000","updated":"2017-11-10T16:32:49.351+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16249934","id":"16249934","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"body":"[~jlowe] many thanks for the detailed explanation. I believe I have a working solution but I have to test it. I was able to eliminate the locking overhead as well. Will update the POC tomorrow.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-13T18:22:01.123+0000","updated":"2017-11-13T18:22:01.123+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16251304","id":"16251304","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"body":"I attached POC v3.\r\n\r\nMain changes:\r\n1. Status events are stored in TaskAttemptListener\r\n2. There is a mapping between attemptId <-> status\r\n3. Status is wrapped in an AtomicReference, so no locking is necessary\r\n4. When an async update is necessary, we pass the AtomicRef in the constructor of the task update event\r\n5. We don't simply replace already existing status update events. Counters & fetch failed maps are merged if necessary.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-14T12:21:38.833+0000","updated":"2017-11-14T12:21:38.833+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16252240","id":"16252240","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"body":"[~jlowe] could you pls check the latest proposal? ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-14T21:51:59.386+0000","updated":"2017-11-14T21:51:59.386+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16252724","id":"16252724","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"Thanks for updating the patch!  The approach looks good to me.  Realize this is POC, but I reviewed it as a \"real\" patch.  Apologies if many of these were already planned on being fixed in the real patch.  Thought I'd get a head start on that patch's review.  ;-)\r\n\r\nThere's a bug here:\r\n{code}\r\n     if (!lastStatusRef.compareAndSet(lastStatus, taskAttemptStatus)) {\r\n        // update failed - async dispatcher has processed it in the meantime\r\n        taskAttemptStatus.counters = oldCounters;\r\n        taskAttemptStatus.fetchFailedMaps = oldFetchFailedMaps;\r\n        asyncUpdatedNeeded = true;\r\n     }\r\n{code}\r\ncompareAndSet doesn't set if the compare failed, so taskAttemptStatus never gets posted to the reference and ultimately ends up going nowhere after it is restored.\r\n\r\nThe listener should check if we fail to lookup the ref for the specified attempt ID and throw an exception with a useful message.\r\n\r\nIs there a reason not to use the YARN attempt ID as the key?  That would preclude the need to convert it on register and unregister, and it's already being converted to the YARN record for other reasons during the status update code.\r\n\r\nThe TaskAttemptListenerImpl#statusUpdate method could really use a refactor.  I recommend factoring out the portion that converts the TaskStatus into a TaskAttemptStatus and separately factor out the portion that coalesces events when necessary.\r\n\r\nThe TaskAttemptListener whitespace change isn't necessary.\r\n\r\nThe reportedTaskAttemptStatus field in TaskAttemptStatusUpdateEvent should be removed.  The code can have a constructor for the event that converts a status to an atomic reference of the status if we don't want to update the existing usages in the tests, but we shouldn't support anything but the reference in the getter method and in the listener code.  Way too confusing to continue exposing two getter methods.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2017-11-15T00:08:55.416+0000","updated":"2017-11-15T00:08:55.416+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16255330","id":"16255330","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"body":"Thanks for the comments [~jlowe]. I uploaded the first patch.\r\n\r\nWhat's new:\r\n1. Your comments have been addressed\r\n2. I added new tests and refactored {{TestTaskAttemptListenerImpl}} heavily because there was a lot of copy-paste there. I think it's much nicer now.\r\n\r\nI still have one question regarding counters. When I was writing the tests, it turned out that {{Counters}} object inside the {{TaskStatus}} cannot be null. If it is, then we got an NPE thrown from the constructor of {{AbstractCounters}}. I'm talking about this part:\r\n\r\n{noformat}\r\n    taskAttemptStatus.counters = new org.apache.hadoop.mapreduce.Counters(\r\n      taskStatus.getCounters());\r\n{noformat}\r\n\r\nWe already know that counters are always sent from MR tasks, but what about Tez? I checked the Tez codebase, but I haven't found any call to {{statusUpdate()}}. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-16T13:44:25.414+0000","updated":"2017-11-16T13:44:25.414+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16260961","id":"16260961","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"body":"ping [~jlowe]","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-21T16:08:17.818+0000","updated":"2017-11-21T16:08:17.818+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16261050","id":"16261050","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"Thanks for updating the patch!  Sorry for the delay.\r\n\r\nbq. We already know that counters are always sent from MR tasks, but what about Tez?\r\n\r\nSorry for the confusion.  I was referring to Tez as an example of a framework that has counters but doesn't send them on every task update.  I didn't mean to imply Tez is calling the MR code directly.  We can remove the code that checks if the counters are null to simplify things since you found they can't be null in practice for other reasons.\r\n\r\nThis comment was not addressed which will cover the case of a rogue task trying to heartbeat:\r\n{quote}\r\nThe listener should check if we fail to lookup the ref for the specified attempt ID and throw an exception with a useful message.\r\n{quote}\r\n\r\nThe EventHandler import added in TaskAttemptListenerImpl is unused.\r\n\r\nNit: This whitespace change is more harmful than helpful to readability, IMO.\r\n{noformat}\r\n@@ -427,6 +437,8 @@ public AMFeedback statusUpdate(TaskAttemptID taskAttemptID,\r\n       }\r\n     }\r\n \r\n+\r\n+\r\n  // Task sends the information about the nextRecordRange to the TT\r\n     \r\n //    TODO: The following are not needed here, but needed to be set somewhere inside AppMaster.\r\n{noformat}\r\n\r\nNit: In StatusUpdater#transition newReportedStatus does not need a separate declaration as the code can declare it when it is assigned.\r\n\r\nNormally listener would be set to null after closing to avoid a potential double-close:\r\n{code}\r\n  public void after() throws IOException {\r\n    if (listener != null) {\r\n      listener.close();\r\n    }\r\n  }\r\n{code}\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2017-11-21T16:59:47.890+0000","updated":"2017-11-21T16:59:47.890+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16261063","id":"16261063","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"I also kicked Jenkins which mysteriously did not comment on this patch.  It looks like there will be some checkstyle issues that should be addressed with exceeding 80 columns and other nitty things, but it'd also be good to see a unit test run.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2017-11-21T17:03:33.209+0000","updated":"2017-11-21T17:03:33.209+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16261427","id":"16261427","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 10s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 45s{color} | {color:blue} Maven dependency ordering for branch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 14m 46s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 38s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 29s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 54s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m 16s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m  0s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 32s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  7s{color} | {color:blue} Maven dependency ordering for patch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 53s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 39s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  1m 39s{color} | {color:green} the patch passed {color} |\r\n| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 26s{color} | {color:orange} hadoop-mapreduce-project/hadoop-mapreduce-client: The patch generated 16 new + 258 unchanged - 5 fixed = 274 total (was 263) {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 48s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green}  9m 19s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 11s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 27s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  8m 53s{color} | {color:green} hadoop-mapreduce-client-app in the patch passed. {color} |\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red}135m 16s{color} | {color:red} hadoop-mapreduce-client-jobclient in the patch failed. {color} |\r\n| {color:red}-1{color} | {color:red} asflicense {color} | {color:red}  0m 25s{color} | {color:red} The patch generated 1 ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}189m 30s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Reason || Tests ||\r\n| Failed junit tests | hadoop.mapreduce.security.ssl.TestEncryptedShuffle |\r\n|   | hadoop.mapreduce.v2.TestUberAM |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:5b98639 |\r\n| JIRA Issue | MAPREDUCE-5124 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12897988/MAPREDUCE-5124-001.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux ae225d3068d4 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / 0ed44f2 |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_151 |\r\n| findbugs | v3.1.0-RC1 |\r\n| checkstyle | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7231/artifact/out/diff-checkstyle-hadoop-mapreduce-project_hadoop-mapreduce-client.txt |\r\n| unit | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7231/artifact/out/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7231/testReport/ |\r\n| asflicense | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7231/artifact/out/patch-asflicense-problems.txt |\r\n| Max. process+thread count | 1288 (vs. ulimit of 5000) |\r\n| modules | C: hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient U: hadoop-mapreduce-project/hadoop-mapreduce-client |\r\n| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7231/console |\r\n| Powered by | Apache Yetus 0.7.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-21T20:11:21.064+0000","updated":"2017-11-21T20:11:21.064+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16262817","id":"16262817","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"body":"Thanks [~jlowe] for the comments & clarifying the Tez stuff.\r\n\r\nI uploaded patch v2. I fixed numerous things, including checkstyle & formatting issues. Added a check for non-existing attemptId + test.\r\n\r\nThe test failures seem to be unrelated, I was not able to reproduce those.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-22T15:53:51.662+0000","updated":"2017-11-22T15:53:51.662+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16263191","id":"16263191","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 10m 20s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  9s{color} | {color:blue} Maven dependency ordering for branch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 15m  5s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 37s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 32s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 59s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m 39s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m  5s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 35s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  9s{color} | {color:blue} Maven dependency ordering for patch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 54s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 34s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  1m 34s{color} | {color:green} the patch passed {color} |\r\n| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 27s{color} | {color:orange} hadoop-mapreduce-project/hadoop-mapreduce-client: The patch generated 3 new + 258 unchanged - 5 fixed = 261 total (was 263) {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 49s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m 10s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 17s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 32s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  9m 19s{color} | {color:green} hadoop-mapreduce-client-app in the patch passed. {color} |\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red}131m 48s{color} | {color:red} hadoop-mapreduce-client-jobclient in the patch failed. {color} |\r\n| {color:red}-1{color} | {color:red} asflicense {color} | {color:red}  0m 31s{color} | {color:red} The patch generated 1 ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}198m  7s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Reason || Tests ||\r\n| Failed junit tests | hadoop.mapreduce.v2.TestUberAM |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:5b98639 |\r\n| JIRA Issue | MAPREDUCE-5124 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12898881/MAPREDUCE-5124-002.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux 0e6c44904d8a 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / 782ba3b |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_151 |\r\n| findbugs | v3.1.0-RC1 |\r\n| checkstyle | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7234/artifact/out/diff-checkstyle-hadoop-mapreduce-project_hadoop-mapreduce-client.txt |\r\n| unit | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7234/artifact/out/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7234/testReport/ |\r\n| asflicense | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7234/artifact/out/patch-asflicense-problems.txt |\r\n| Max. process+thread count | 1350 (vs. ulimit of 5000) |\r\n| modules | C: hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient U: hadoop-mapreduce-project/hadoop-mapreduce-client |\r\n| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7234/console |\r\n| Powered by | Apache Yetus 0.7.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-22T19:19:01.273+0000","updated":"2017-11-22T19:19:01.273+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16263439","id":"16263439","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"Thanks for updating the patch!  Looks good overall.  I agree the unit test failure appears to be unrelated as is the license issue.\r\n\r\nFor the Preconditions check that was added, the code ends up doing all the work of constructing the message string only to throw it away most of the time.  The code should either do a straightforward null-check-and-throw or use the Preconditions method that takes a format string and format arguments so the string is only formatted if the check fails.\r\n\r\nIt would be good to fix the checkstyle indentation issues.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2017-11-22T22:08:10.685+0000","updated":"2017-11-22T22:08:10.685+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16264684","id":"16264684","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  9m 54s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 50s{color} | {color:blue} Maven dependency ordering for branch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 15m  9s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 37s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 32s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 59s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m  7s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m  5s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 35s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  9s{color} | {color:blue} Maven dependency ordering for patch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 54s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 33s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  1m 33s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 29s{color} | {color:green} hadoop-mapreduce-project/hadoop-mapreduce-client: The patch generated 0 new + 258 unchanged - 5 fixed = 258 total (was 263) {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 51s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m 29s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 17s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 33s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  9m 17s{color} | {color:green} hadoop-mapreduce-client-app in the patch passed. {color} |\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red}130m  0s{color} | {color:red} hadoop-mapreduce-client-jobclient in the patch failed. {color} |\r\n| {color:red}-1{color} | {color:red} asflicense {color} | {color:red}  0m 31s{color} | {color:red} The patch generated 1 ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}199m 22s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Reason || Tests ||\r\n| Failed junit tests | hadoop.mapreduce.v2.TestUberAM |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:5b98639 |\r\n| JIRA Issue | MAPREDUCE-5124 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12899077/MAPREDUCE-5124-003.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux efa85b6738dd 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / b46ca7e |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_151 |\r\n| findbugs | v3.1.0-RC1 |\r\n| unit | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7235/artifact/out/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7235/testReport/ |\r\n| asflicense | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7235/artifact/out/patch-asflicense-problems.txt |\r\n| Max. process+thread count | 1360 (vs. ulimit of 5000) |\r\n| modules | C: hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient U: hadoop-mapreduce-project/hadoop-mapreduce-client |\r\n| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7235/console |\r\n| Powered by | Apache Yetus 0.7.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-23T18:40:18.688+0000","updated":"2017-11-23T18:40:18.688+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16264738","id":"16264738","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"body":"[~jlowe] I think the patch should be OK now.\r\n\r\nDo you think it makes sense to backport this to branch-2 or branch-2.9?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-23T19:49:41.958+0000","updated":"2017-11-23T19:49:41.958+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16267024","id":"16267024","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"Thanks for updating the patch!  +1 lgtm.\r\n\r\nbq. Do you think it makes sense to backport this to branch-2 or branch-2.9?\r\n\r\nI agree this should be backported to older release lines since this is an issue that affects every 2.x release.  I'd be willing to commit this through branch-2.8 and branch-2.7 if you're willing to provide the backported patches.  Holding off on the trunk commit and leaving this JIRA open for the branch-2 (and potentially older) patches.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2017-11-27T16:42:22.701+0000","updated":"2017-11-27T16:42:22.701+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16268867","id":"16268867","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"body":"I backported the patch for branch-2, branch-2.9, branch-2.8 and branch-2.7. Let's wait for the build results.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-28T15:05:33.011+0000","updated":"2017-11-28T15:05:33.011+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16270758","id":"16270758","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"body":"For some reason, builds have not started in Jenkins. [~jlowe] could you check it out? Not sure what I did wrong - I think patch naming is correct, that's what I did in a previous JIRA.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-29T13:57:05.495+0000","updated":"2017-11-29T13:57:05.495+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16271371","id":"16271371","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 19m 36s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |\r\n|| || || || {color:brown} branch-2 Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 57s{color} | {color:blue} Maven dependency ordering for branch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 13m  0s{color} | {color:green} branch-2 passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 20s{color} | {color:green} branch-2 passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 32s{color} | {color:green} branch-2 passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 10s{color} | {color:green} branch-2 passed {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 27s{color} | {color:green} branch-2 passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 41s{color} | {color:green} branch-2 passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 10s{color} | {color:blue} Maven dependency ordering for patch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m  0s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 17s{color} | {color:green} the patch passed {color} |\r\n| {color:red}-1{color} | {color:red} javac {color} | {color:red}  1m 17s{color} | {color:red} hadoop-mapreduce-project_hadoop-mapreduce-client generated 1 new + 400 unchanged - 3 fixed = 401 total (was 403) {color} |\r\n| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 28s{color} | {color:orange} hadoop-mapreduce-project/hadoop-mapreduce-client: The patch generated 2 new + 248 unchanged - 5 fixed = 250 total (was 253) {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m  2s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 39s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 34s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  8m 55s{color} | {color:green} hadoop-mapreduce-client-app in the patch passed. {color} |\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red}178m 57s{color} | {color:red} hadoop-mapreduce-client-jobclient in the patch failed. {color} |\r\n| {color:red}-1{color} | {color:red} asflicense {color} | {color:red}  0m 29s{color} | {color:red} The patch generated 45 ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}234m 40s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Reason || Tests ||\r\n| Unreaped Processes | hadoop-mapreduce-client-jobclient:10 |\r\n| Failed junit tests | hadoop.mapreduce.security.ssl.TestEncryptedShuffle |\r\n|   | hadoop.mapreduce.security.TestMRCredentials |\r\n| Timed out junit tests | org.apache.hadoop.mapreduce.TestMRJobClient |\r\n|   | org.apache.hadoop.mapred.TestMiniMRClasspath |\r\n|   | org.apache.hadoop.mapred.TestClusterMapReduceTestCase |\r\n|   | org.apache.hadoop.mapred.TestMRIntermediateDataEncryption |\r\n|   | org.apache.hadoop.mapred.TestMRTimelineEventHandling |\r\n|   | org.apache.hadoop.mapreduce.TestMapReduceLazyOutput |\r\n|   | org.apache.hadoop.mapred.TestMiniMRWithDFSWithDistinctUsers |\r\n|   | org.apache.hadoop.mapred.TestReduceFetch |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:17213a0 |\r\n| JIRA Issue | MAPREDUCE-5124 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12899630/MAPREDUCE-5124-branch-2.001.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux ca5aba6e88fd 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | branch-2 / 9d406e5 |\r\n| maven | version: Apache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-10T16:41:47+00:00) |\r\n| Default Java | 1.7.0_151 |\r\n| findbugs | v3.0.0 |\r\n| javac | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7241/artifact/out/diff-compile-javac-hadoop-mapreduce-project_hadoop-mapreduce-client.txt |\r\n| checkstyle | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7241/artifact/out/diff-checkstyle-hadoop-mapreduce-project_hadoop-mapreduce-client.txt |\r\n| Unreaped Processes Log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7241/artifact/out/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient-reaper.txt |\r\n| unit | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7241/artifact/out/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7241/testReport/ |\r\n| asflicense | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7241/artifact/out/patch-asflicense-problems.txt |\r\n| Max. process+thread count | 4921 (vs. ulimit of 5000) |\r\n| modules | C: hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient U: hadoop-mapreduce-project/hadoop-mapreduce-client |\r\n| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7241/console |\r\n| Powered by | Apache Yetus 0.7.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-29T19:11:52.096+0000","updated":"2017-11-29T19:11:52.096+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16271505","id":"16271505","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"Manually kicking the Jenkins build worked.  Not sure what happened yesterday.\r\n\r\nThe javac warning is relevant.  The patch removed the suppress directive for this.\r\n\r\nThe 2.9 patch is the same as the branch-2 patch, and given those branches are super close I don't see the need to run Jenkins just for that.\r\n\r\nI'm posting the 2.8 patch again to trigger Jenkins to run on branch-2.8.  The same javac warning will be there, but it will be good to see if there's anything else it finds.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2017-11-29T20:38:04.227+0000","updated":"2017-11-29T20:38:04.227+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16271779","id":"16271779","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 16m 48s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |\r\n|| || || || {color:brown} branch-2.8 Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 43s{color} | {color:blue} Maven dependency ordering for branch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  7m 56s{color} | {color:green} branch-2.8 passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 10s{color} | {color:green} branch-2.8 passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 25s{color} | {color:green} branch-2.8 passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 56s{color} | {color:green} branch-2.8 passed {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 13s{color} | {color:green} branch-2.8 passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 33s{color} | {color:green} branch-2.8 passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  8s{color} | {color:blue} Maven dependency ordering for patch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 46s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 11s{color} | {color:green} the patch passed {color} |\r\n| {color:red}-1{color} | {color:red} javac {color} | {color:red}  1m 11s{color} | {color:red} hadoop-mapreduce-project_hadoop-mapreduce-client generated 1 new + 364 unchanged - 3 fixed = 365 total (was 367) {color} |\r\n| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 23s{color} | {color:orange} hadoop-mapreduce-project/hadoop-mapreduce-client: The patch generated 1 new + 276 unchanged - 0 fixed = 277 total (was 276) {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 52s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 26s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 28s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  9m 35s{color} | {color:green} hadoop-mapreduce-client-app in the patch passed. {color} |\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red}121m 56s{color} | {color:red} hadoop-mapreduce-client-jobclient in the patch failed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 21s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}168m  0s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Reason || Tests ||\r\n| Unreaped Processes | hadoop-mapreduce-client-jobclient:2 |\r\n| Timed out junit tests | org.apache.hadoop.mapred.TestClusterMapReduceTestCase |\r\n|   | org.apache.hadoop.mapreduce.v2.TestMiniMRProxyUser |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:c2d96dd |\r\n| JIRA Issue | MAPREDUCE-5124 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12899871/MAPREDUCE-5124-branch-2.8.001.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux 50926f3067c8 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | branch-2.8 / 3219b1b |\r\n| maven | version: Apache Maven 3.0.5 |\r\n| Default Java | 1.7.0_151 |\r\n| findbugs | v3.0.0 |\r\n| javac | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7242/artifact/out/diff-compile-javac-hadoop-mapreduce-project_hadoop-mapreduce-client.txt |\r\n| checkstyle | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7242/artifact/out/diff-checkstyle-hadoop-mapreduce-project_hadoop-mapreduce-client.txt |\r\n| Unreaped Processes Log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7242/artifact/out/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient-reaper.txt |\r\n| unit | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7242/artifact/out/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7242/testReport/ |\r\n| Max. process+thread count | 1856 (vs. ulimit of 5000) |\r\n| modules | C: hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient U: hadoop-mapreduce-project/hadoop-mapreduce-client |\r\n| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7242/console |\r\n| Powered by | Apache Yetus 0.7.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-29T23:29:44.974+0000","updated":"2017-11-29T23:29:44.974+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16272770","id":"16272770","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"body":"Updated patches - Javadoc & checkstyle errors were hopefully eliminated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pbacsko","name":"pbacsko","key":"pbacsko","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Peter Bacsko","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-30T15:01:07.741+0000","updated":"2017-11-30T15:01:07.741+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16273074","id":"16273074","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 20m 14s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |\r\n|| || || || {color:brown} branch-2 Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 19s{color} | {color:blue} Maven dependency ordering for branch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  9m 36s{color} | {color:green} branch-2 passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 21s{color} | {color:green} branch-2 passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 30s{color} | {color:green} branch-2 passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m  4s{color} | {color:green} branch-2 passed {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 22s{color} | {color:green} branch-2 passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 39s{color} | {color:green} branch-2 passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 10s{color} | {color:blue} Maven dependency ordering for patch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 59s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 17s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  1m 17s{color} | {color:green} hadoop-mapreduce-project_hadoop-mapreduce-client generated 0 new + 401 unchanged - 2 fixed = 401 total (was 403) {color} |\r\n| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 27s{color} | {color:orange} hadoop-mapreduce-project/hadoop-mapreduce-client: The patch generated 1 new + 248 unchanged - 5 fixed = 249 total (was 253) {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m  2s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 41s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 34s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  9m  0s{color} | {color:green} hadoop-mapreduce-client-app in the patch passed. {color} |\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red}118m 36s{color} | {color:red} hadoop-mapreduce-client-jobclient in the patch failed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 26s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}170m 42s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Reason || Tests ||\r\n| Unreaped Processes | hadoop-mapreduce-client-jobclient:2 |\r\n| Timed out junit tests | org.apache.hadoop.mapred.TestClusterMapReduceTestCase |\r\n|   | org.apache.hadoop.mapred.TestMRIntermediateDataEncryption |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:17213a0 |\r\n| JIRA Issue | MAPREDUCE-5124 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12900029/MAPREDUCE-5124-branch-2.002.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux 393cce7f2752 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | branch-2 / 5bb6329 |\r\n| maven | version: Apache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-10T16:41:47+00:00) |\r\n| Default Java | 1.7.0_151 |\r\n| findbugs | v3.0.0 |\r\n| checkstyle | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7243/artifact/out/diff-checkstyle-hadoop-mapreduce-project_hadoop-mapreduce-client.txt |\r\n| Unreaped Processes Log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7243/artifact/out/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient-reaper.txt |\r\n| unit | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7243/artifact/out/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7243/testReport/ |\r\n| Max. process+thread count | 2313 (vs. ulimit of 5000) |\r\n| modules | C: hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient U: hadoop-mapreduce-project/hadoop-mapreduce-client |\r\n| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7243/console |\r\n| Powered by | Apache Yetus 0.7.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-30T18:01:46.384+0000","updated":"2017-11-30T18:01:46.384+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16273211","id":"16273211","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"Thanks for updating the patches!  +1 for the latest branch-2 patch.  The checkstyle nit is unnecessary.  The unit test failures appear to be unrelated, as they pass for me locally with the patch applied.\r\n\r\nUploading the branch-2.8 patch again to get a Jenkins run on it.  ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2017-11-30T19:21:01.882+0000","updated":"2017-11-30T19:21:01.882+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16273595","id":"16273595","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  9m 12s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |\r\n|| || || || {color:brown} branch-2.8 Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 46s{color} | {color:blue} Maven dependency ordering for branch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  8m 19s{color} | {color:green} branch-2.8 passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 14s{color} | {color:green} branch-2.8 passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 28s{color} | {color:green} branch-2.8 passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m  4s{color} | {color:green} branch-2.8 passed {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 14s{color} | {color:green} branch-2.8 passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 30s{color} | {color:green} branch-2.8 passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  8s{color} | {color:blue} Maven dependency ordering for patch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 43s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m  9s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  1m  9s{color} | {color:green} hadoop-mapreduce-project_hadoop-mapreduce-client generated 0 new + 365 unchanged - 2 fixed = 365 total (was 367) {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 22s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 51s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 25s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 27s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  9m 23s{color} | {color:green} hadoop-mapreduce-client-app in the patch passed. {color} |\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red}155m 50s{color} | {color:red} hadoop-mapreduce-client-jobclient in the patch failed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 23s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}194m 36s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Reason || Tests ||\r\n| Unreaped Processes | hadoop-mapreduce-client-jobclient:4 |\r\n| Timed out junit tests | org.apache.hadoop.mapred.TestClusterMapReduceTestCase |\r\n|   | org.apache.hadoop.mapred.TestMiniMRWithDFSWithDistinctUsers |\r\n|   | org.apache.hadoop.mapreduce.TestChild |\r\n|   | org.apache.hadoop.mapreduce.v2.TestMiniMRProxyUser |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:c2d96dd |\r\n| JIRA Issue | MAPREDUCE-5124 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12900069/MAPREDUCE-5124-branch-2.8.002.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux 1f4c1359b5c3 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | branch-2.8 / eacccf1 |\r\n| maven | version: Apache Maven 3.0.5 |\r\n| Default Java | 1.7.0_151 |\r\n| findbugs | v3.0.0 |\r\n| Unreaped Processes Log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7244/artifact/out/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient-reaper.txt |\r\n| unit | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7244/artifact/out/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7244/testReport/ |\r\n| Max. process+thread count | 2912 (vs. ulimit of 5000) |\r\n| modules | C: hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient U: hadoop-mapreduce-project/hadoop-mapreduce-client |\r\n| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7244/console |\r\n| Powered by | Apache Yetus 0.7.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-30T22:41:27.181+0000","updated":"2017-11-30T22:41:27.181+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16273633","id":"16273633","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"+1 for the branch-2.8 patch as well.  The unit tests failures appear to be unrelated and all pass for me locally with the patch applied.\r\n\r\nUploading the 2.7 patch which looks good to me.  Assuming Jenkins run looks good as well I'll commit everything tomorrow.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2017-11-30T23:11:25.808+0000","updated":"2017-11-30T23:11:25.808+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16273952","id":"16273952","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 15m 11s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |\r\n|| || || || {color:brown} branch-2.7 Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 51s{color} | {color:blue} Maven dependency ordering for branch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  8m 39s{color} | {color:green} branch-2.7 passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 26s{color} | {color:green} branch-2.7 passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 37s{color} | {color:green} branch-2.7 passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 10s{color} | {color:green} branch-2.7 passed {color} |\r\n| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  0m 53s{color} | {color:red} hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app in branch-2.7 has 1 extant Findbugs warnings. {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 42s{color} | {color:green} branch-2.7 passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 10s{color} | {color:blue} Maven dependency ordering for patch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 52s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 22s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  1m 22s{color} | {color:green} hadoop-mapreduce-project_hadoop-mapreduce-client generated 0 new + 689 unchanged - 2 fixed = 689 total (was 691) {color} |\r\n| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 32s{color} | {color:orange} hadoop-mapreduce-project/hadoop-mapreduce-client: The patch generated 14 new + 616 unchanged - 8 fixed = 630 total (was 624) {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m  0s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 46s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 43s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red}  9m 34s{color} | {color:red} hadoop-mapreduce-client-app in the patch failed. {color} |\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red}309m 31s{color} | {color:red} hadoop-mapreduce-client-jobclient in the patch failed. {color} |\r\n| {color:red}-1{color} | {color:red} asflicense {color} | {color:red}  0m 48s{color} | {color:red} The patch generated 16 ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}357m 45s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Reason || Tests ||\r\n| Unreaped Processes | hadoop-mapreduce-client-jobclient:13 |\r\n| Failed junit tests | hadoop.mapreduce.v2.app.job.impl.TestJobImpl |\r\n|   | hadoop.mapred.TestMRIntermediateDataEncryption |\r\n|   | hadoop.mapred.TestJobSysDirWithDFS |\r\n| Timed out junit tests | org.apache.hadoop.mapred.TestClusterMRNotification |\r\n|   | org.apache.hadoop.mapred.TestMiniMRClasspath |\r\n|   | org.apache.hadoop.mapred.TestMultiFileInputFormat |\r\n|   | org.apache.hadoop.mapred.TestMRCJCFileInputFormat |\r\n|   | org.apache.hadoop.mapred.TestClusterMapReduceTestCase |\r\n|   | org.apache.hadoop.mapred.TestMRTimelineEventHandling |\r\n|   | org.apache.hadoop.mapred.TestJobCounters |\r\n|   | org.apache.hadoop.mapred.TestJobName |\r\n|   | org.apache.hadoop.mapred.TestJobCleanup |\r\n|   | org.apache.hadoop.mapred.TestMiniMRWithDFSWithDistinctUsers |\r\n|   | org.apache.hadoop.mapred.TestNetworkedJob |\r\n|   | org.apache.hadoop.mapred.TestMiniMRClientCluster |\r\n|   | org.apache.hadoop.mapred.TestReduceFetchFromPartialMem |\r\n|   | org.apache.hadoop.mapred.TestLazyOutput |\r\n|   | org.apache.hadoop.mapred.TestReduceFetch |\r\n|   | org.apache.hadoop.mapred.TestMiniMRChildTask |\r\n|   | org.apache.hadoop.ipc.TestMRCJCSocketFactory |\r\n|   | org.apache.hadoop.mapred.TestMerge |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:67e87c9 |\r\n| JIRA Issue | MAPREDUCE-5124 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12900107/MAPREDUCE-5124-branch-2.7.002.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux 8ceb5d5f216a 3.13.0-129-generic #178-Ubuntu SMP Fri Aug 11 12:48:20 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | branch-2.7 / 7252e18 |\r\n| maven | version: Apache Maven 3.0.5 |\r\n| Default Java | 1.7.0_151 |\r\n| findbugs | v3.0.0 |\r\n| findbugs | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7245/artifact/out/branch-findbugs-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-app-warnings.html |\r\n| checkstyle | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7245/artifact/out/diff-checkstyle-hadoop-mapreduce-project_hadoop-mapreduce-client.txt |\r\n| Unreaped Processes Log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7245/artifact/out/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient-reaper.txt |\r\n| unit | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7245/artifact/out/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-app.txt |\r\n| unit | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7245/artifact/out/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7245/testReport/ |\r\n| asflicense | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7245/artifact/out/patch-asflicense-problems.txt |\r\n| Max. process+thread count | 4878 (vs. ulimit of 5000) |\r\n| modules | C: hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient U: hadoop-mapreduce-project/hadoop-mapreduce-client |\r\n| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7245/console |\r\n| Powered by | Apache Yetus 0.7.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2017-12-01T05:20:42.221+0000","updated":"2017-12-01T05:20:42.221+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16274819","id":"16274819","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"The ASF license errors are not related.  The unit test failures do not appear to be related.  The TestJobImpl failure is already tracked at MAPREDUCE-6948 and the remaining tests all passed for me locally with the patch applied.\r\n\r\nCommitting this.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2017-12-01T19:23:53.347+0000","updated":"2017-12-01T19:23:53.347+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16274938","id":"16274938","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"Thanks, [~pbacsko]!  I committed this to trunk, branch-3.0, branch-2,  branch-2.9, branch-2.8, and branch-2.7.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2017-12-01T20:36:14.015+0000","updated":"2017-12-01T20:36:14.015+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16274945","id":"16274945","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"SUCCESS: Integrated in Jenkins build Hadoop-trunk-Commit #13309 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/13309/])\nMAPREDUCE-5124. AM lacks flow control for task events. Contributed by (jlowe: rev 21d36273551fa45c4130e5523b6724358cf34b1e)\n* (edit) hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/v2/TestSpeculativeExecutionWithMRApp.java\n* (edit) hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/event/TaskAttemptStatusUpdateEvent.java\n* (edit) hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java\n* (edit) hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java\n* (edit) hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapred/TestTaskAttemptListenerImpl.java\n* (edit) hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/TestMRClientService.java\n* (edit) hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/TestFetchFailure.java\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2017-12-01T20:42:33.408+0000","updated":"2017-12-01T20:42:33.408+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16275233","id":"16275233","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Hey [~pbacsko], [~jlowe] I am wondering how stable is this feature. You included it into branch-2.7 while a I was working on RC. Sorry I was not following this jira.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-12-02T00:15:08.186+0000","updated":"2017-12-02T00:15:08.186+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16275326","id":"16275326","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Looking at the patch, seems like a pretty substantial change of event handling for AM.\r\nI'll revert it from 2.7.5 for now, since I did not get clarity on stability of this feature.\r\nWe can later commit it to 2.7.6.\r\n\r\nAlso you forgot to update CHANGES.txt in branch-2.7. I know, I forget it all the time myself.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-12-02T01:11:20.694+0000","updated":"2017-12-02T01:11:20.694+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16275375","id":"16275375","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"Sorry, Konstantin, I should have checked with you first.  Please feel free to revert it from 2.7.5, and apologies for the omitted CHANGES.txt.  I'll correct it when it's recommitted for 2.7.6.\r\n\r\nI am pretty confident this is a safe change for 2.7 since it only changes the status update code path and doesn't affect the task start, killed, failed, succeeded paths.  However I totally understand the logic behind punting this to 2.7.6.  The patch will get a chance to run on our 2.8 clusters at scale in the interim which will increase our confidence in it by then.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2017-12-02T02:10:56.696+0000","updated":"2017-12-02T02:10:56.696+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16275389","id":"16275389","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Cool, thanks. I moved branch-2.7 now to version 2.7.6. Please feel free to commit there.\r\nDon't forget about the CHANGES :-)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-12-02T03:07:42.398+0000","updated":"2017-12-02T03:07:42.398+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12640313/comment/16284432","id":"16284432","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"body":"I committed this to branch-2.7 with a corresponding CHANGES.txt entry.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jlowe","name":"jlowe","key":"jlowe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jason Lowe","active":true,"timeZone":"America/Chicago"},"created":"2017-12-08T23:43:40.880+0000","updated":"2017-12-08T23:43:40.880+0000"}],"maxResults":69,"total":69,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/MAPREDUCE-5124/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1jchr:"}}