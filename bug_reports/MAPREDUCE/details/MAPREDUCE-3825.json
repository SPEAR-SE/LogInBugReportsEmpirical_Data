{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12541534","self":"https://issues.apache.org/jira/rest/api/2/issue/12541534","key":"MAPREDUCE-3825","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310941","id":"12310941","key":"MAPREDUCE","name":"Hadoop Map/Reduce","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310941&avatarId=10096","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310941&avatarId=10096","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310941&avatarId=10096","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310941&avatarId=10096"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/3","id":"3","description":"The problem is a duplicate of an existing issue.","name":"Duplicate"},"customfield_12312322":null,"customfield_12310220":"2012-02-07T20:29:06.541+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Wed Apr 16 22:04:19 UTC 2014","customfield_12310420":"226821","customfield_12312320":null,"customfield_12310222":"10002_*:*_1_*:*_1155207287_*|*_1_*:*_2_*:*_67960059709_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2014-04-16T22:04:19.096+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/MAPREDUCE-3825/watchers","watchCount":7,"isWatching":false},"created":"2012-02-06T23:23:12.144+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"3.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12318883","id":"12318883","description":"0.23.1 - Performance release","name":"0.23.1","archived":false,"released":true,"releaseDate":"2012-02-17"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12320354","id":"12320354","description":"hadoop-2.0.0-alpha release","name":"2.0.0-alpha","archived":false,"released":true,"releaseDate":"2012-05-23"}],"issuelinks":[{"id":"12347941","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12347941","type":{"id":"10032","name":"Blocker","inward":"is blocked by","outward":"blocks","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10032"},"inwardIssue":{"id":"12537920","key":"HADOOP-7967","self":"https://issues.apache.org/jira/rest/api/2/issue/12537920","fields":{"summary":"Need generalized multi-token filesystem support","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.svg","name":"Critical","id":"2"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}},{"id":"12348016","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12348016","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12540233","key":"HDFS-2854","self":"https://issues.apache.org/jira/rest/api/2/issue/12540233","fields":{"summary":"SecurityUtil.buildTokenService returns java.net.UnknownHostException when using paths like viewfs://default/some/path","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}},{"id":"12348051","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12348051","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12542001","key":"HADOOP-8048","self":"https://issues.apache.org/jira/rest/api/2/issue/12542001","fields":{"summary":"Allow merging of Credentials","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype","name":"Improvement","subtask":false,"avatarId":21140}}}},{"id":"12348115","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12348115","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12542174","key":"MAPREDUCE-3849","self":"https://issues.apache.org/jira/rest/api/2/issue/12542174","fields":{"summary":"Change TokenCache's reading of the binary token file","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype","name":"Improvement","subtask":false,"avatarId":21140}}}},{"id":"12348116","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12348116","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12542176","key":"MAPREDUCE-3850","self":"https://issues.apache.org/jira/rest/api/2/issue/12542176","fields":{"summary":"Avoid redundant calls for tokens in TokenCache","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype","name":"Improvement","subtask":false,"avatarId":21140}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2015-03-10T04:31:55.110+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12313041","id":"12313041","name":"security"}],"timeoriginalestimate":null,"description":"This is the counterpart to HADOOP-7967.  \nMR gets tokens for all input, output and the default filesystem when a MR job is submitted. \n\nThe APIs in FileSystem make it challenging to avoid duplicate tokens when there are file systems that have embedded\nfilesystems.\n\n\nHere is the original description that Daryn wrote: \nThe token cache currently tries to assume a filesystem's token service key.  The assumption generally worked while there was a one to one mapping of filesystem to token.  With the advent of multi-token filesystems like viewfs, the token cache will try to use a service key (ie. for viewfs) that will never exist (because it really gets the mounted fs tokens).\n\nThe descriop","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12320060","id":"12320060","description":"0.23.3","name":"0.23.3","archived":false,"released":true,"releaseDate":"2012-09-20"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12320354","id":"12320354","description":"hadoop-2.0.0-alpha release","name":"2.0.0-alpha","archived":false,"released":true,"releaseDate":"2012-05-23"}],"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12513831","id":"12513831","filename":"MAPREDUCE-3825.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2012-02-08T16:11:40.780+0000","size":8034,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12513831/MAPREDUCE-3825.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12515516","id":"12515516","filename":"solution4.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2012-02-22T01:19:51.688+0000","size":12997,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12515516/solution4.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12514135","id":"12514135","filename":"TokenCache.pdf","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2012-02-10T18:40:06.472+0000","size":45259,"mimeType":"application/pdf","content":"https://issues.apache.org/jira/secure/attachment/12514135/TokenCache.pdf"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"41818","customfield_12312823":null,"summary":"MR should not be getting duplicate tokens for a MR Job.","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13202742","id":"13202742","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"body":"Note the FileSystem interface was changed specifically to deal with multiple-filesystem file systems like viewfs (ie it returns an arrays of tokens not a single token).\nSo the question is: what is broken? \n* The fact that the token cache is keyed by file system uri or\n* That FileSystem has a method called getDelegationTokens and not a method called getEmbeddedFileSystems().\n\nWhen we changed from getDelegationToken() to getDelegationTokens() we had dismissed the alternate you are proposing since we  needed a method to get delegation token from a file system anyway.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-02-07T20:29:06.541+0000","updated":"2012-02-07T20:29:06.541+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13202762","id":"13202762","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"body":"The general idea is that that when a job is submitted one has a list of paths (input, output, defaultfs, etc). From that list of paths one gets a set of file systems, eliminates duplicates and then get delegation tokens for each. \nThis works except that it may not be efficient in some cases. Eg:\n\n* Input path is hdfs://foo/bar\n* default fs is viewfs:///  which has mounted hdfs://foo/\n\nIn this case one will obtain the delegation tokens for hdfs://foo *twice*.\n\nThe Jira description seems to suggest that the current implementation does not work (Bug/Major) while what i am concluding is that it is not optimal.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-02-07T20:50:13.858+0000","updated":"2012-02-07T20:50:13.858+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13202824","id":"13202824","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"This jira was filed after discussions with Sid on other token/viewfs jiras.  There are multiple problems that this jira and the linked jira in common are trying to address:\n# {{FileSystem#getDelegationTokens(String, Credentials)}} will fetch duplicate tokens.\n# {{ViewFileSystem#getDelegationTokens(String)}} will fetch duplicate tokens, ie. a token for every mount point even if the filesystems are identical.\n# {{ViewFileSystem#getDelegationTokens(String, Credentials)}} will skip filesystems w/o a serviceName, even though that means that the filesystem doesn't have a token, although it may be filtering a filesystem that does have tokens.\n# {{ViewFileSystem#getDelegationTokens(String, Credentials)}} calls {{targetFileSystem.getDelegationTokens(String)}} which may acquire duplicate tokens, even for the services that viewfs thinks it's already seen.\n# {{ViewFileSystem#getDelegationTokens(String, Credentials}} will acquire multiple duplicate tokens for a filtered filesystem & its contained filesystem because it checks the service of the filtered fs, not the contained fs.  A duplicate token will be acquired for every path.  Although not implemented, unionfs will exasperate the multiple duplicate tokens.\n# {{TokenCache}} thinks the viewfs authority is a service name so it tries to resolve it as a hostname:port tuple and fails.\n# {{TokenCache}} assumes a 1 to 1 mapping between a filesystem's service and its token which is broken for a 1 to many token filesystem.  This causes {{TokenCache}} to repeatedly fetch tokens from a multi-token filesystem because it never gets a token with the expected service.\n\nThose are the issues that I can recall off the top of my head.  The approach I've taken is:\n* Allow the retrieval of unique set of filesystems used\n* Query each filesystem only once\n* Never retrieve duplicate tokens because the list is unique\n* Solve the 1 to many problem in {{TokenCache}}\n* Fix the filtered filesystem issue by querying its underlying filesystem\n* Fix the viewfs mount table problem by only requesting tokens from the mounted filesystems\n* Complete backwards compatibility with the existing api\n\nThe current model is too complex and won't scale.  It arguably \"works\" in simple cases, but it acquires multiple tokens, errors out if the authority isn't a service, violates the contract that null service is no token, and won't work with more complex layering of filesystems.  By flattening out the list of filesystems, the {{ViewFileSystem}} implementation is dramatically simpler, and it will handle all types of filesystem layering w/o acquiring multiple tokens.\n\nbq. When we changed from getDelegationToken() to getDelegationTokens() we had dismissed the alternate you are proposing since we needed a method to get delegation token from a file system anyway.\n\nI'm not sure what this means.  If you are referring to token renewal, this jira is completely orthogonal and is not trying to implement any of those proposals.  (Although ironically, at that time I wanted to implement {{getDelegationTokens}} but told there was no use case...)  Again though, I believe I've maintained complete backwards compatibility.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2012-02-07T21:40:56.796+0000","updated":"2012-02-07T21:40:56.796+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13202998","id":"13202998","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"body":"There is a difference between broken api and not being efficient and having bugs.\n - TokenCache is an internal impl and can be changed to work correctly with the existing API. For example \"TokenCache thinks the viewfs authority is a service name so it tries to resolve it as a hostname:port tuple and fails.\" is the a problem with TokenCache. \nhostname-port was never a guarantee of FS URIs and so if tokencache made that assumption it was a mistake. \n - Viewfilesysgtem can be fixed to ignore duplicate mounts and tokens (if it does not already)\n\nGetting duplicate tokens is an ineffciency and I gave an example above in my comment. You gave some additional examples in your comment. \n\nDue to the inefficiency we can change things. However you conclusion that there is not multi-token support or that things are broken in some fundamental ways  or that this is bug/major are incorrect. For example if a NN has two addreses and two URI's the current impl and changes we may make will also result in duplicate tokens. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-02-08T00:01:22.418+0000","updated":"2012-02-08T00:01:22.418+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13203019","id":"13203019","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"body":"Sorry I hit the add button accidentally. I will correct in my next comment please wait before responding.\n\n\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-02-08T00:23:30.135+0000","updated":"2012-02-08T00:23:30.135+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13203034","id":"13203034","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"(sorry, have to leave for the day)\n\nYes, there no question there is multi-token support, but the way it integrates with the TokenCache is broken.  The TokenCache expects a 1 to 1 mapping between the canonical service name and the filesystem's delegation token service.  This is because TokenCache uses the canonical service as a key in its credentials.  It doesn't work correctly for multi-token filesystems, or filtered filesystems using a different scheme than the underlying fs.  It's wrong, but it's what we've got to work with.  Eventually the token cache should have no knowledge about the canonical service at all.\n\nI agree the TokenCache does need an overhaul.  If it wasn't for the block of code that tries to load the binary token cache if a token is missing, then with the changes in common the whole method collapses into calling getDelegationTokens on the filesystems.  However, I'm paranoid of altering the behavior of the TokenCache in 23, so I created a backwards compatible solution that works perfectly with the way FileSystem tokens are currently designed.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2012-02-08T00:36:03.244+0000","updated":"2012-02-08T00:36:03.244+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13203117","id":"13203117","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"body":"Let me correct my previous comment where i hit the add button accidentally.\n* TokenCache is an internal impl and can be changed to work correctly with the existing API. For example \"TokenCache thinks the viewfs authority is a service name so it tries to resolve it as a hostname:port tuple and fails.\" is the a problem with TokenCache.\n** hostname-port was never a guarantee of FS URIs and so if tokenCache made that assumption it was a mistake. \n** hostname-port is needed for the renewal and is encoded in the token - hence this should not be an issue.\n** One issue is that tokenCache maps a fs-uri to a token when it could have mapped to set of tokens.\n* Viewfilesysgtem can be fixed to ignore duplicate mounts and tokens. \n\nBoth you and I have given examples of cases where duplicate tokens will be added; duplicate tokens is an inefficiency.\n\nLets change code/interfaces to deal with the inefficiency. However your conclusion that there isn't multi-token support or that this is major-bug are incorrect.\n\nTo start with I would like to change the jira to \"improvement\"  and change the title to \"Improve token management to eliminate duplicate tokens\"\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-02-08T01:38:53.612+0000","updated":"2012-02-08T01:38:53.612+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13203151","id":"13203151","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"body":"Problem statement: \n# MR needs to be able to automatically get delegation tokens for a MR job so that input, output and default file systems paths are automatically handled.\n** This should work for when input and output are different from the default file systems. It should work when any of above are viewfs.\n# A Job can add additional file systems that might be needed in a job by adding these to the job conf.\n** e.g. a job is known to access data from some other cluster.\n# An admin can add additional file systems that are commonly needed.\n** e.g. admin knows that there are symlinks to other clusters.\n\nThe APIs should allow one to easily not *obtain* duplicate tokens (note I didn't say *eliminate*; we don't want to get unnecessary tokens because they cost a RPC calls during job submission.) Note we should be careful about *not overstating the urgency of this jira* because job submission is quite slow due to split calculations etc. However our APis should clearly allow this.\n\n\n\n\n\n        \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-02-08T02:09:17.550+0000","updated":"2012-02-08T02:09:17.550+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13203182","id":"13203182","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"body":"Here are two possible solutions\n# Two APIs\n** tokens[] FileSystem#getDelegationTokens(string renewer);\n** URI[] FileSystems#getEmbeddedFileSystems();\nWith this approach the caller calls getEmbeddedFileSystems across MR input, MR output and default and other fileSystems and eliminates the duplicate file systems. (Note ViewFs will eliminate duplicates before returning the set of file systems).\nAt end call getDelegationTokens(renewer) for each of non-dulicate URIs;  getDelegationTokens will return only one token since it is guaranteed that the calls are for the leaf file systems. \n# One API\n** void  FileSystem#addDelegationTokens(renewer, credentials) //adds  tokens to credentials if not already in.\n\t\tGo through each of across MR input, MR output and default and other fileSystems and call addDelegationTokens(renewer, credentials) to add tokens to the credentials. Duplicates are eliminated by checking service name (host:port)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-02-08T02:37:32.169+0000","updated":"2012-02-08T02:37:32.169+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13203643","id":"13203643","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"We are in complete agreement.  #1 is what I implemented.  I suggested #2 in the original jiras for multi-token support (update the credentials) but it was turned down.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2012-02-08T14:40:35.326+0000","updated":"2012-02-08T14:40:35.326+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13203658","id":"13203658","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"I should clarify how I implemented #1.  Conceptually it does exactly what is proposed.\n* {{FileSystem#getDelegationTokens(renewer)}} unconditionally acquires all tokens\n* {{FileSystem#getDelegationTokens(renewer, creds)}} acquires only the tokens that are missing from the creds.  I would rather have added them to the creds and returned just the new tokens.  The idea was previously turned down, so I was striving for compatibility with existing api.  Note: existing impl causes token cache to log it acquired the same token multiple times when it really hasn't.  The method should probably add new tokens to the creds, and return only the new tokens instead of the full set.\n* {{FileSystem#getDelegationTokens(renewer, creds)}} gets a unique list of leaf filesystems and then gets their tokens\n* {{FileSystems#getEmbeddedFileSystems()}} is implemented w/o the word embedded and returns filesystems.  Returning a list of URIs isn't desirable since it forces a {{FileSystem.get}} which may create a new fs instance if the cache is off, or creates unnecessary overhead if the cache is on.  Both normal filesystems and viewfs already have instantiations of the filesystems so I thought it makes sense to return them.\n\nbq.  At end call getDelegationTokens(renewer) for each of non-dulicate URIs; getDelegationTokens will return only one token since it is guaranteed that the calls are for the leaf file systems.\n\nThe patch does acquire tokens for only the unique set of leaf filesystems.  If {{getDelegationTokens}} is required to return only one token, then why not call {{getDelegationToken}} which is the existing method implemented by filesystems?  I don't think we want all subclasses to override {{getDelegationTokens}} since it will force them to copy-n-paste the default impl with a one line tweak.\n\nThoughts?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2012-02-08T15:19:31.501+0000","updated":"2012-02-08T15:19:31.501+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13203734","id":"13203734","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"-1 overall.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12513831/MAPREDUCE-3825.patch\n  against trunk revision .\n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 3 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    -1 javac.  The patch appears to cause tar ant target to fail.\n\n    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.\n\n    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed the unit tests build\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/1826//testReport/\nConsole output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/1826//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2012-02-08T16:48:07.581+0000","updated":"2012-02-08T16:48:07.581+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13203751","id":"13203751","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"(build failed because it relies on HADOOP-7967)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2012-02-08T17:09:29.135+0000","updated":"2012-02-08T17:09:29.135+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13203890","id":"13203890","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"body":"> I should clarify how I implemented #1.\nYour description has APIs from both #1 and #2. (ie you use a variation of getDelegationTokens(renewer, credentials)\nI am suggesting that one of the two sets is sufficient.\n\n>getDelegationTokens is required to return only one token, then why not call getDelegationToken\nGood question. If this method is  declared in FileSystem then ViewFileSystem has to implement it and it cannot return single token - it has multiple tokens. The fact that you will never ever call getDelegationToken on viewFileSystem and always call getEmbeddedFileSystems() does not matter - ViewFileSystem has to honor the contract for FileSystem since it extends it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-02-08T19:37:50.226+0000","updated":"2012-02-08T19:37:50.226+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13203972","id":"13203972","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"bq. Good question. If this method is declared in FileSystem then ViewFileSystem has to implement it and it cannot return single token - it has multiple tokens. The fact that you will never ever call getDelegationToken on viewFileSystem and always call getEmbeddedFileSystems() does not matter - ViewFileSystem has to honor the contract for FileSystem since it extends it.\n\nI'd suggest the distinct is that {{getDelegationToken}} requests a token specifically for that filesystem.  {{ViewFileSystem}} has no intrinsic tokens so it honors the fs contract by returning null just like any other filesystem with no tokens.  OTOH, {{getDelegationTokens}} requests all tokens used by that filesystem, which in turn calls {{getDelegationToken}} on the actual leaf filesystems.  Those leafs either return null or their token.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2012-02-08T20:50:00.749+0000","updated":"2012-02-08T20:50:00.749+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13205209","id":"13205209","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"body":"Solution 2 ( the one with a single API: void FileSystem#addDelegationTokens(renewer, credentials) ) has the advantage that the caller does not need to have the full list of file system and paths in order to eliminate duplicate tokens. (Vinod tell me that the MR is more like that.) Solution 1 requires that the caller has the full list of file systems  and then gets all the embedded file system and then eliminates the duplicate file systems followed by obtaining delegate tokens.\n\nI dislike the notion of passing in the credentials list parameter (actually a set or tokens) to a FileSystem method which is then updated by the method - a weird APi. But i can live with it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-02-10T04:03:39.706+0000","updated":"2012-02-10T04:03:39.706+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13205518","id":"13205518","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"I'm open to alternatives, but performing the elimination of dups is actually pretty simple:\n{code}\n  static void obtainTokensForNamenodesInternal(Credentials credentials,\n       Path[] ps, Configuration conf) throws IOException {\n--- start new code ---\n    // use 2 passes to avoid redundant calls to the same filesystems\n    // start by getting unique set of filesystems for all paths\n    Set<FileSystem> pathFsSet = new HashSet<FileSystem>();\n    for (Path p : ps) {\n      pathFsSet.add(p.getFileSystem(conf));\n    }\n    // get the unique set of leaf filesystems\n    Set<FileSystem> tokenFsSet = new HashSet<FileSystem>();\n    for (FileSystem fs : pathFsSet) {\n      tokenFsSet.addAll(fs.getFileSystems());\n    }\n--- end new code ---\n    // get all the tokens from the now flattened list of leaf filesystems\n    for (FileSystem fs : tokenFsSet) {\n      obtainTokensForNamenodesPrivate(fs, credentials, conf);\n    }\n  }\n{code}\n\nIf many files are in the same filesystem, then a lot of necessary processing occurs, esp. in the case of viewfs.\n\nI may be misunderstanding this variation, but the acquisition of tokens via recursive calls will require more changes that may break non-hadoop distributed filesystems.  I think it will require code duplication of the default {{getDelegationTokens(renewer, creds)}}, or a new api that overrides of this method can use to avoid getting dups.  The proposed default implementation of {{FileSystem#getDelegations(renewer, creds)}} simply iterates {{this.getFileSystems()}} too.  I'll write something up and then we can discuss a little more.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2012-02-10T15:58:37.920+0000","updated":"2012-02-10T15:58:37.920+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13205618","id":"13205618","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"Attach proposed design doc.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2012-02-10T18:40:06.582+0000","updated":"2012-02-10T18:40:06.582+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13205623","id":"13205623","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"-1 overall.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12514135/TokenCache.pdf\n  against trunk revision .\n\n    +1 @author.  The patch does not contain any @author tags.\n\n    -1 tests included.  The patch doesn't appear to include any new or modified tests.\n                        Please justify why no new tests are needed for this patch.\n                        Also please list what manual steps were performed to verify this patch.\n\n    -1 patch.  The patch command could not apply the patch.\n\nConsole output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/1836//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2012-02-10T18:45:36.047+0000","updated":"2012-02-10T18:45:36.047+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13205701","id":"13205701","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"body":"Dryn, Read your doc.\nThe solution you are proposing (let me call it solution 3) seems to needs 3 APIs: \na) FileSystem#getDelegationToken(renewer) - Same as Solution 1's method.\nb) FileSystem#getDelegationToken(renewer, credentials)\nc) FileSystem#getFIleSystems() - same as Solution 1's getEmbededFileSystems().\n\nI can't figure out if and how you are using (b)  FileSystem#getDelegationToken(renewer, credentials).\nI am arguing that solution 1 or 2 are sufficient. Your solution seems to be close to solution 1 and i can't figure out how and when you are using API (b)\n\n@Dryn> but performing the elimination of dups is actually pretty simple:\n*Yes yes yes* - that is what is used in solution 1. My text says \"eliminates the duplicate file systems\".\nI am not saying that this code is hard to write - we are in violent agreement.\n\nI like Solution 1. - it has clean APIs.\nBut solution 2 has an advantage - see my comment at [solution2Advantage | https://issues.apache.org/jira/browse/MAPREDUCE-3825?focusedCommentId=13205209&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13205209]\n\nQuestions for you:\nA) Do you believe your solution 3 is different from solution 1. If so why do you need to add api (b).\nB) Do you agree or disagree with the advantage of solution 2 that i commented - i am reluctantly beginning to agree with it after talking to the MR folks based on the reasons given in my comment.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-02-10T19:56:14.759+0000","updated":"2012-02-10T19:56:14.759+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13205712","id":"13205712","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"I tried to explain in the last paragraph of the doc the alternate patch that I haven't posted which is what I'd ideally like to see:\n* {{TokenCache#obtainTokensForNamenodes}} does *not* use {{getFileSystems()}}, thus it does not flatten the filesystems\n* {{TokenCache#obtainTokensForNamenodes}} does *not* use {{getCanonicalServiceName()}} so it longer has a cross-dep on {{FileSystem}}\n* {{TokenCache#obtainTokensForNamenodes}} should only call {{getDelegationTokens(renewer, creds)}} on each path's filesystem\n* {{FileSystem#getFileSystems}} is used internally by {{getDelegationTokens(renewer, creds)}}\n\nThe advantage of solution #2 is based on a misunderstanding.  Those requirements don't need to be met at all.  I was proposing TokenCache do that to reduce the unnecessary/redundant calls.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2012-02-10T20:14:09.467+0000","updated":"2012-02-10T20:14:09.467+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13205724","id":"13205724","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"body":"Typo:\n(a) should be FileSystem#getDelegationToken*S*(renewer) - Same as Solution 1's method.\nie Tokens not Token","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-02-10T20:32:08.977+0000","updated":"2012-02-10T20:32:08.977+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13205833","id":"13205833","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"body":"Here is how Solution 2 will be used and implemented.\n\n{code}\n// Credentials is a map<serviceName, Token>\nvoid FileSystem#addDelegationTokens(renewer, credentials); // NewAPi for FileSystem\n// note the old #getDelegationTokens(...) methods in FileSystem are no longer needed.\n\n\n// A Useful Utility - so that the TokenCache in MR can be easily implemented\nFileUtil:GetTokens(renewer, path[] ps, credentials) {\n  foreach (p in ps) {\n    GetFileSystem(p).addDelegationTokens(renwer, credentials);\n  return;\n}\n\n// Two implementation examples - viewfs and DistributedFileSystem\n\nViewFileSystem#addDelegationTokens(renewer, credentials) {// contains embedded FSs as mounts\n foreach (mountFs in mountPoints) {\n    mountFs.addDelegationTokens(renewer, credentials);\n  }\n  return;\n}\n\n\nDistributedFileSystem#addDelegationTokens(renewer, credentials) { // a leaf file system.\n  // I am ignoring the race condition across contains() and add();\n  myServiceName = getCanonicalServiceName();\n  if (credentials.contains(myServiceName) {\n    return;\n  }\n  myDelegationToken = getDTfromMyNN();\n  credentials.add(myServiceName, myDelegationToken);\n  return;\n}\n\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-02-10T22:59:51.004+0000","updated":"2012-02-10T22:59:51.004+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13205882","id":"13205882","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"I think requiring every filesystem to bracket its token retrieval with identical \"check for my token\" and \"set my token\" is brittle.  It's an invasive change that isn't backwards compatible, so any filesystem that doesn't properly do a copy-n-paste will cause duplicate tokens.  If we want to universally change the behavior, we have to change the filesystems again.\n\nI feel it's much safer for a filesystem to implement primitives that a common method uses.  My proposed FileSystem#getDelegationTokens does just that.  All a filesystem has to do is implement getDelegationToken & maybe getFileSystems if it has multiple tokens.  Everything else is managed for the filesystem.  I'd like to make FileSystem#getDelegationsTokens a final method to enforce the consistency and prevent any filesystem from trying to directly manipulate the credentials.  If we want to change the implementation in the future, there's only one place, in our control, that needs to be changed.\n\nThe sample code also prevents viewfs from shorting out on calls to the same filesystem.  It can't be solved by uniquing the fs list.  Otherwise, it's a repeat of the TokenCache 1-to-1 mapping of service to a specific token problem.  We can't avoid this by uniquing the fs list in viewfs because the underlying mounts might have multiple filesystems, or it might be returning a null service (filtered) yet have a contained filesystem with a token.\n\nOnce MAPREDUCE-3849 is incorporated, I can fix TokenCache to eliminate the 1-to-1 mapping problem by simply calling getDelegationTokens on the filesystems.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2012-02-10T23:47:49.832+0000","updated":"2012-02-10T23:47:49.832+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13205969","id":"13205969","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"body":"> Isn't backward compatible\nWhat isn't backward compatible?\nThe 2 variations of getDelegationTokens were added in 0.23 and can be safely removed without and\ncompatibility issues and getDelegationToken is deprecated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-02-11T01:56:00.602+0000","updated":"2012-02-11T01:56:00.602+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13206976","id":"13206976","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"By not backwards-compatible, I'm referring to the fact that external filesystems, that may currently work fine, will need to be changed.  They must also be changed in a precise manner, involving copy-n-paste, to not introduce bugs.\n\nI believe the history of the api is {{getDelegationToken}} (singular) was deprecated after {{ViewFileSystem}} broke the paradigm of 1 filesystem, 1 token.  I think we agree that the replacement {{getDelegationTokens}}, as currently implemented in 23, is flawed.  However I think it is on the track with a few modification.\n\nThe use cases I seek to satisfy:\n# I want this filesystem's delegation token - {{getDelegationToken(renewer)}}\n# I want all delegation tokens used by this filesystem - {{getDelegationTokens(renewer)}}\n# I want the delegation tokens that I don't already have for this filesystem.  I want to know which tokens were acquired - {{getDelegationTokens(renewer, creds)}}\n# I want to know all filesystems used by this filesystem - {{getFileSystems()}}\n# If I need to change the semantics of overall token acquisition, +I do not want to change any filesystem+.\n\nThe counter-proposal provides:\n# I want all the delegation tokens that I don't already have for this filesystem, but don't tell me what they were - {{addDelegationTokens(renewer, creds)}}\n# If I want to change the semantics of overall token acquisition, +I want to require changes in all filesystems+.\n\nThe final list items illustrate the core difference in the approaches: Do we want a decoupled design?  Or do we want a tightly coupled design?  We can achieve a decoupled design via use of filesystem primitives.  This removes the onus from all filesystems to include copy-n-paste logic.\n# Obtaining a token _is_ the responsibility of a filesystem.\n#* If a filesystem has a token, it should only override the +primitive+ {{getDelegationToken(renewer)}}, as it does today.\n#* If a filesystem provides multiple tokens, then it should override the +primitive+ {{getFileSystems()}}.  The default implementation is sufficient for existing filesystems, sans {{ViewFileSystem}} which should return its mounted filesystems.\n# Overall token acquisition _is not_ the responsibility of a filesystem.\n#* A consistent implementation should be provided via {{final}} methods {{getDelegationTokens(renewer)}} and {{getDelegationTokens(renewer, creds)}}\n\nThoughts?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2012-02-13T16:48:56.732+0000","updated":"2012-02-13T16:48:56.732+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13206994","id":"13206994","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"body":"The purpose of this JIra is to get delegation tokens without duplication for MR. All the additional requirements that you state with \"I want \" \"I want\" \"I want\" belong in a different jira.\n\n>I want this filesystem's delegation token - getDelegationToken(renewer)\nI already argued above that i disagree that this is a reasonable API since a multi-filesystem cannot implement it and furthermore I disagree that a multifilesystem like viewfs should return null. \n\n> I want all delegation tokens used by this filesystem - getDelegationTokens(renewer)\nPass in a an empty credentials to addDTs(renewer, emptyCredentials).\n\nI agree that addDTs(renewer, cred) is a weird API, but your getDelegationTokens(renewer, creds) is equally weird.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-02-13T17:21:55.417+0000","updated":"2012-02-13T17:21:55.417+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13207011","id":"13207011","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"body":"@Daryn> By not backwards-compatible, I'm referring to the fact that external filesystems,.....\n\nGood point but the new apis in 23 or the new APIs you suggested will not be implemented by the external file systems and there is no default impl that works except for \"not implemented\" exception.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-02-13T17:56:37.298+0000","updated":"2012-02-13T17:56:37.298+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13207012","id":"13207012","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"bq. The purpose of this JIra is to get delegation tokens without duplication for MR. All the additional requirements that you state with \"I want \" \"I want\" \"I want\" belong in a different jira.\n\nIt's true that the conversation has recently morphed into that, but the original description is more broad.\n\n{quote}\n>I want this filesystem's delegation token - getDelegationToken(renewer)\nI already argued above that i disagree that this is a reasonable API since a multi-filesystem cannot implement it and furthermore I disagree that a multifilesystem like viewfs should return null.\n{quote}\nThe proposal I'm putting forth is: the distinction is that a filesystem _should not_ implement {{getDelegationToken}} unless the filesystem _itself_ has a token, ie. it needs to make an authorized connection.  {{ViewFileSystem}} does not make a connection, thus it does not have a distinct token.  It does however have contained filesystems that makes connections so that's what {{getDelegationTokens}} operations on.  The method should be common, ie. a filesystem _will not_ implement this method.\n\nIf there isn't a {{getDelegationToken}}, then I believe we are forced into a tightly coupled design.  Ie. every filesystem needs to bracket their code that obtains a token with copy-n-paste code.  Is this desirable?  If there is a primitive {{getDelegationToken}}, then the standard/common code ({{getDelegationTokens}}) to acquire tokens will perform the bracketing, thus confining the logic to _one_ place where it can be changed in the future.\n\n{quote}\n> I want all delegation tokens used by this filesystem - getDelegationTokens(renewer)\nPass in a an empty credentials to addDTs(renewer, emptyCredentials).\n{quote}\n\nThat's what my patch does, but let's say I have a credentials with some tokens.  I want to acquire any missing tokens, yet I want to know what those tokens are so I can log that I got them and/or I need to do some special processing on them.  Ie. TokenCache.  How would I do that?\n\nbq.  I agree that addDTs(renewer, cred) is a weird API, but your getDelegationTokens(renewer, creds) is equally weird.\n\nIt's not mine, it was already there. :)  I argued against it in an earlier jira, but after further thought, it seems reasonable.\n\nWhat if we make {{getDelegationToken}} a protected method to avoid external calls?  The only public facing api will be {{getDelegationTokens(renewer, creds)}}?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2012-02-13T17:57:14.373+0000","updated":"2012-02-13T17:57:14.373+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13207019","id":"13207019","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"bq. Good point but the new apis in 23 or the new APIs you suggested will not be implemented by the external file systems and there is no default impl that works except for \"not implemented\" exception.\n\nYes, my proposal will work because existing filesystems don't need to change.\n* A filesystem need only implement {{getDelegationToken}} as it does today.  Backwards-compatible\n* A filesystem optionally implements {{getFileSystems}}.  The default returns the filesystem itself.  Backwards-compatible.  Only {{ViewFileSystem}} needs to override {{getFileSystems}}.\n* {{getDelegationTokens}} should be common code that no filesystem needs to override, which is why I'm suggesting it as a {{final}} method.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2012-02-13T18:03:59.910+0000","updated":"2012-02-13T18:03:59.910+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13207237","id":"13207237","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"Per an offline request by Sanjay, here's a summary of the proposed changes that henceforth shall be referred to as \"solution 3\".\n\nRequired {{FileSystem}} APIs:\n* {{getFileSystems()}} - proposed new api\n** returns leaf filesystems, returns this filesystem by default\n* {{getCanonicalServiceName()}} - existing api, no change; should consider reducing visibility\n** returns the service of this filesystem's token, or null if no intrinsic token\n* {{getDelegationToken(renewer)}} - existing api, no change; should consider reducing visibility\n** returns this filesystem's token, {{token.getService()}} must match {{getCanonicalServiceName()}}\n* {{getDelegationTokens(renewer, credentials)}} - existing api, new to 23; should be public api to acquire tokens\n** returns tokens not already acquired for this filesystem\n** propose adding new tokens to supplied creds\n* {{getDelegationTokens(renewer)}} - existing api, new to 23; proposed convenience method\n** returns all tokens for the filesystem\n\nChanges to:\n# {{FilterFileSystem}}\n#* Add:{code}\n  @Override\n  String getCanonicalServiceName() {\n    return null;\n  }\n  @Override\n  public List<FileSystem> getFileSystems() {\n    return fs.getFileSystems();\n  }{code}\n# {{DistributedFileSystem}}\n#* Delete {{getDelegationTokens(renewer)}}\n# {{ViewFileSystem}}\n#* Delete {{getDelegationTokens(renewer)}} and {{getDelegationTokens(renewer, creds)}}\n#* Add:{code}\n  @Override\n  String getCanonicalServiceName() {\n    return null;\n  }\n  @Override\n  List<FileSystem> getFileSystems() {\n    List<InodeTree.MountPoint<FileSystem>> mountPoints = fsState.getMountPoints();\n    Set<FileSystem> fsSet = new HashSet<FileSystem>();\n    for (InodeTree.MountPoint<FileSystem> mountPoint : mountPoints) {\n      FileSystem targetFs = mountPoint.target.targetFileSystem;\n      fsSet.addAll(targetFs.getFileSystems());\n    }\n    return new ArrayList<FileSystem>(fsSet);\n  }{code}\n# {{FileSystem}}\n#* Add:{code}\n  List<FileSystem> getFileSystems() {\n    List<FileSystem> list = new ArrayList<FileSystem>(1);\n    list.add(this);\n    return list;\n  }{code}\n#* Change:{code}\n  public final List<Token<?>> getDelegationTokens(String renewer, Credentials credentials) throws IOException {\n    List<Token<?>> newTokens = new ArrayList<Token<?>>();\n    // there shouldn't be dups, but use a set just to be safe\n    Set<FileSystem> fsLeafs = new HashSet<FileSystem>(getFileSystems());\n    for (FileSystem fs : fsLeafs) {\n      String serviceString = fs.getCanonicalServiceName();\n      if (serviceString != null) { // null service = no tokens\n        Text service = new Text(serviceString);\n        Token<?> token = credentials.getToken(service);\n        if (token == null) { // we don't have the token, so get it\n          token = fs.getDelegationToken(renewer);\n          if (token != null) { // add to the return list and to the creds\n            newTokens.add(token);\n            credentials.addToken(service, token);\n          }\n        }\n      }\n    }\n    return newTokens;\n  }\n\n  // just a convenience method, it's not strictly required.\n  public final List<Token<?>> getDelegationTokens(String renewer) throws IOException {\n    return getDelegationTokens(renewer, new Credentials());\n  }{code}\n# {{TokenCache}}\n#* Change: (note this is a big simplification){code}\n  static void obtainTokensForNamenodesInternal(FileSystem fs, \n      Credentials credentials, Configuration conf) throws IOException {\n    String delegTokenRenewer = Master.getMasterPrincipal(conf);\n    if (delegTokenRenewer == null || delegTokenRenewer.length() == 0) {\n      throw new IOException(\n          \"Can't get Master Kerberos principal for use as renewer\");\n    }\n    mergeBinaryTokens(credentials, conf);\n    List<Token<?>> tokens = fs.getDelegationTokens(delegTokenRenewer, credentials);\n    if (tokens != null) {\n      for (Token<?> token : tokens) {\n        LOG.info(\"Got dt for \" + fs.getUri() + \n            \";t.service=\"+token.getService());\n      }\n    }\n  }{code}\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2012-02-13T21:39:17.995+0000","updated":"2012-02-13T21:39:17.995+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13207317","id":"13207317","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"body":"On the backward compatibility issue for existing external file systems that extend FileSystem.\nBoth getFileSystems() and addDelegationTokens(renewer, cred) will break file systems that have multiple\nfile systems in them. So I don't think we can avoid that with either of solution 2 or your solution.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-02-13T23:13:41.889+0000","updated":"2012-02-13T23:13:41.889+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13207767","id":"13207767","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"If there are external multi-token filesystems, that currently work, then they have implemented {{getDelegationTokens(renewer, creds)}}.  Those filesystems will continue to work so long as {{getDelegationTokens(renewer, creds)}} isn't marked {{final}} as also proposed.  W/o {{final}}, the proposal is completely backwards compatible.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2012-02-14T15:08:24.399+0000","updated":"2012-02-14T15:08:24.399+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13209875","id":"13209875","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"body":"\nSolution 4\n* Has some elements from solutions 1, 2 and 3\n* Distinguishes between leaf FSs and FSs that embed other FSs\n** getCanonicaServiceName() and getDelegationToken() both return null for embedded FSs - don't like this but seems unavoidable.\n* FileSystem#getChidrenFSs() - can be used to get embedded FSs - note it only returns first level of children - this is more general and can have other uses down the road.\n* addDelegationTokens(renewer, credentials) has a default impl that will work for all embedded FSs\n** Perhaps this should be in FileUtil rather than FileSystem.\n\n\n\n\n{code}\nURI[] FileSystem#getChidrenFSs() { // return first level of children\n  return emptyList; // default - leaf file system return null \n}\nURI[] ViewFileSystem#getChidrenFileSystems() {\n  return the mount points but don't recurse through.\n}\n\nString FileSystem#getCanonicaServiceName - no change except ViewFileSystem return null;\n\nToken getDelegationToken() - no change except ViewFileSystem returns null\n\n\n// Credentials is a map<serviceName, Token>\nvoid FileSystem#addDelegationTokens(renewer, credentials) {\n// this is new method - the old getDTs() is not needed.\n// Provide a default impl here - viewfs does not override it.\n - Walk the tree using getChildredFSs and collect all the leafs,\n     - if a fs return null then you know it is leaf.\n - eliminate dups\n - add missing tokens\n }\n\n\n// A Useful Utility - so that the TokenCache in MR can be easily implemented\nFileUtil:GetTokens(renewer, path[] ps, credentials) {\n  foreach (p in ps) {\n    GetFileSystem(p).addDelegationTokens(renwer, credentials);\n  return;\n}\n{code}\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-02-16T23:17:02.477+0000","updated":"2012-02-16T23:17:02.477+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13209896","id":"13209896","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"Upon first read, I think solution 4 seems reasonable.\n\nI think I like the distinction of fs children.  I used a recursive implementation in part due to the simplicity.  One option for increased flexibility might be to have both {{getChildFileSystems}} and {{getFileSystems}}.  {{getFileSystems}} would be implemented via {{getChildFileSystems}}, but offers more flexibility -- one example is when viewfs needs to spray an operation to its mounts, like {{setVerifyChecksum}}, it would loop over {{getFileSystems}} instead of having to do the same leaf collection and uniquing that {{addDelegationTokens}} has to do.\n\nI would suggest that we retain {{getDelegationTokens(renewer, creds)}}.  The only difference between it and {{addDelegations(renewer, creds)}} would be it returns a list of the new tokens it had to acquire.  In a void context, add & get would be identical in behavior.  That allows the caller the opportunity to process the new tokens in some way.  One simple example would be logging the new tokens.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2012-02-16T23:49:35.899+0000","updated":"2012-02-16T23:49:35.899+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13213168","id":"13213168","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"About to post a suggested implementation of solution 4.  The code isn't in MR so canceling patch to prevent a failed build.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2012-02-22T01:17:22.591+0000","updated":"2012-02-22T01:17:22.591+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13213170","id":"13213170","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"Posting solution 4 with a small twist to satisfy this shared dislike:\nbq. (Sanjay) I dislike the notion of passing in the credentials ... which is then updated by the method - a weird APi. But i can live with it.\n\nI don't want anyone to live in discomfort, so I'm proposing a {{getDelegationTokens(renewer, creds)}} that _does not modify_ the given creds.  Instead, it returns a {{Credentials}} that contains only the new creds not present in the given creds.\n\nI added a static flavor of {{FileSystem.getDelegationTokens}} since it seemed like a more natural location than an external class, but I'm open to alternatives.\n\nNo tests included, pending approval of the approach.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2012-02-22T01:19:51.809+0000","updated":"2012-02-22T01:19:51.809+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13218394","id":"13218394","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"body":"I dislike the credentials parameters in either variation. I will live with it.\n* The method should add the credentials since it is more convenient for recursive use. Hence call it addDelegationTokens but also return the newly added tokens as you suggested. If cred is null it clearly does not add.\n** Make it a non-static method so that the filesystem object does not need to passed in \n** Don't make it final -  it can be overridden in future just in case.\n* add a similar method to file context.\n* add a FileUtil method FileUtil:AddTokens(renewer, path[] ps, credentials)  - this can use filesystem or filecontext in its impl.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-02-28T17:50:01.889+0000","updated":"2012-02-28T17:50:01.889+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13219565","id":"13219565","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"Thanks for the feedback!  I'll make the changes.\n\nbq. Make it a non-static method so that the filesystem object does not need to passed in\n\nI'm a bit confused.  Are you referring to the flavors of {{getDelegationTokens}}?  The static and non-static methods are neither final nor take a fs.  The static method takes paths instead of a fs.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2012-02-29T21:21:36.713+0000","updated":"2012-02-29T21:21:36.713+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13227314","id":"13227314","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"body":"The static method that takes paths should be in FileUtil - it can be implemented using FileSystem or FileContext.\nThe non-static method is in FileSystem and AbstractFileSystem and obviously does not take a fs parameter.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-03-12T04:47:32.927+0000","updated":"2012-03-12T04:47:32.927+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13398726","id":"13398726","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"body":"Summary:\n# Solution 4 with following changes\n** FileSystem#addDelegationTokens returns the newly added tokens\n** non-static method  and also not-final\n** add similar method to AbstractFileSystem\n# in trunk, and 2.0  remove addDelegationTokens - it was added in 0.23. Some customers are testing 0.23 - and hence we could remove this later from 0.23\n# Add convenience method - FileUtil:AddTokens(renewer, path[] ps, credentials) - this can use filesystem or filecontext in its impl.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-06-21T18:38:05.193+0000","updated":"2012-06-21T18:38:05.193+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12541534/comment/13972009","id":"13972009","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mitdesai","name":"mitdesai","key":"mitdesai","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Mit Desai","active":true,"timeZone":"America/Los_Angeles"},"body":"I see that HADOOP-7967 was fixed and the change needed for this fix has already been checked in with it.\nResolving this issue as dup.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mitdesai","name":"mitdesai","key":"mitdesai","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Mit Desai","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-04-16T22:04:19.124+0000","updated":"2014-04-16T22:04:19.124+0000"}],"maxResults":42,"total":42,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/MAPREDUCE-3825/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i07itz:"}}