{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": null,
        "components": [{
            "id": "12315344",
            "name": "mrv1",
            "self": "https://issues.apache.org/jira/rest/api/2/component/12315344"
        }],
        "created": "2014-02-25T16:31:15.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Ben Roling",
            "key": "ben.roling",
            "name": "ben.roling",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ben.roling",
            "timeZone": "America/Chicago"
        },
        "customfield_10010": null,
        "customfield_12310191": null,
        "customfield_12310192": null,
        "customfield_12310220": "2014-12-12T12:41:40.996+0000",
        "customfield_12310222": null,
        "customfield_12310230": null,
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "0.0",
        "customfield_12310320": null,
        "customfield_12310420": "375616",
        "customfield_12310920": "375912",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i1sq6f:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Aug 17 00:45:19 UTC 2017",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "There is an issue in org.apache.hadoop.mapred.MapTask in 0.20 that can cause data corruption when the size of a single value produced by the mapper exceeds the size of the map output buffer (roughly io.sort.mb).\n\nI experienced this issue in CDH4.2.1, but am logging the issue here for greater visibility in case anyone else might run across the issue.\n\nThe issue does not exist in 0.21 and beyond due to the implementation of MAPREDUCE-64.  That JIRA significantly changes the way the map output buffering is done and it looks like the issue has been resolved by those changes.\n\nI expect this bug will likely be closed / won't fix due to the fact that 0.20 is obsolete.  As stated previously, I am just logging this issue for visibility in case anyone else is still running something based on 0.20 and encounters the same problem.\n\nIn my situation the issue manifested as an ArrayIndexOutOfBoundsException in the reduce phase when deserializing a key -- causing the job to fail.  However, I think the problem could manifest in a more dangerous fashion where the affected job succeeds, but produces corrupt output.  The stack trace I saw was:\n\n2014-02-13 01:07:34,690 WARN org.apache.hadoop.mapred.Child: Error running child\njava.lang.ArrayIndexOutOfBoundsException: 24\n\tat org.apache.avro.io.parsing.Symbol$Alternative.getSymbol(Symbol.java:364)\n\tat org.apache.avro.io.ResolvingDecoder.doAction(ResolvingDecoder.java:229)\n\tat org.apache.avro.io.parsing.Parser.advance(Parser.java:88)\n\tat org.apache.avro.io.ResolvingDecoder.readIndex(ResolvingDecoder.java:206)\n\tat org.apache.avro.generic.GenericDatumReader.read(GenericDatumReader.java:148)\n\tat org.apache.avro.generic.GenericDatumReader.readRecord(GenericDatumReader.java:173)\n\tat org.apache.avro.generic.GenericDatumReader.read(GenericDatumReader.java:144)\n\tat org.apache.avro.generic.GenericDatumReader.read(GenericDatumReader.java:135)\n\tat org.apache.crunch.types.avro.SafeAvroSerialization$AvroWrapperDeserializer.deserialize(SafeAvroSerialization.java:86)\n\tat org.apache.crunch.types.avro.SafeAvroSerialization$AvroWrapperDeserializer.deserialize(SafeAvroSerialization.java:70)\n\tat org.apache.hadoop.mapreduce.task.ReduceContextImpl.nextKeyValue(ReduceContextImpl.java:135)\n\tat org.apache.hadoop.mapreduce.task.ReduceContextImpl.nextKey(ReduceContextImpl.java:114)\n\tat org.apache.hadoop.mapreduce.lib.reduce.WrappedReducer$Context.nextKey(WrappedReducer.java:291)\n\tat org.apache.hadoop.mapreduce.Reducer.run(Reducer.java:163)\n\tat org.apache.hadoop.mapred.ReduceTask.runNewReducer(ReduceTask.java:610)\n\tat org.apache.hadoop.mapred.ReduceTask.run(ReduceTask.java:444)\n\tat org.apache.hadoop.mapred.Child$4.run(Child.java:268)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat javax.security.auth.Subject.doAs(Subject.java:396)\n\tat org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1408)\n\tat org.apache.hadoop.mapred.Child.main(Child.java:262)\n\nThe problem appears to me to be in org.apache.hadoop.mapred.MapTask.MapOutputBuffer.Buffer.write(byte[], int, int).  The sequence of events that leads up to the issue is:\n\n* some complete records (cumulative size less than total buffer size) written to buffer\n* large (over io.sort.mb) record starts writing\n* [soft buffer limit exceeded|https://github.com/apache/hadoop-common/blob/release-0.20.1/src/mapred/org/apache/hadoop/mapred/MapTask.java#L1030] - spill starts\n* write of large record continues\n* buffer becomes [full|https://github.com/apache/hadoop-common/blob/release-0.20.1/src/mapred/org/apache/hadoop/mapred/MapTask.java#L1012]\n* [wrap|https://github.com/apache/hadoop-common/blob/release-0.20.1/src/mapred/org/apache/hadoop/mapred/MapTask.java#L1013] evaluates to true, suggesting the buffer can be safely wrapped\n* writing the large record continues until a write occurs such that bufindex + len == bufstart exactly.  When this happens [buffull|https://github.com/apache/hadoop-common/blob/release-0.20.1/src/mapred/org/apache/hadoop/mapred/MapTask.java#L1018] evaluates to false, so the data gets written to the buffer without event\n* writing of the large value continues with another call to write(), starting the corruption of the buffer.  Buffer full can no longer be detected by the [buffull logic|https://github.com/apache/hadoop-common/blob/release-0.20.1/src/mapred/org/apache/hadoop/mapred/MapTask.java#L1012] that is used when bufindex >= bufstart\n\nThe key to this problem occurring is a write where bufindex + len equals bufstart exactly.\n\nI have titled the issue as having to do with writing large records (over io.sort.mb), but really I think the issue *could* occur on smaller records if the serializer generated a write of exactly the right size.  For example, if the buffer is getting close to full, but hasn't exceeded the buffer soft limit and then a collect() on a new value is called that triggers a write() such that bufindex + len == bufstart.  The size of the write would have to be relatively large -- greater than the free space offered by the soft limit (20% of the buffer by default), making the issue occurring that way pretty unlikely.",
        "duedate": null,
        "environment": null,
        "fixVersions": [],
        "issuelinks": [{
            "id": "12511782",
            "inwardIssue": {
                "fields": {
                    "issuetype": {
                        "avatarId": 21133,
                        "description": "A problem which impairs or prevents the functions of the product.",
                        "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                        "id": "1",
                        "name": "Bug",
                        "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                        "subtask": false
                    },
                    "priority": {
                        "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
                        "id": "4",
                        "name": "Minor",
                        "self": "https://issues.apache.org/jira/rest/api/2/priority/4"
                    },
                    "status": {
                        "description": "The issue is open and ready for the assignee to start work on it.",
                        "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                        "id": "1",
                        "name": "Open",
                        "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                        "statusCategory": {
                            "colorName": "blue-gray",
                            "id": 2,
                            "key": "new",
                            "name": "To Do",
                            "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2"
                        }
                    },
                    "summary": "Strange IndexOutofBoundException in GenericDatumReader.readString"
                },
                "id": "12932875",
                "key": "AVRO-1786",
                "self": "https://issues.apache.org/jira/rest/api/2/issue/12932875"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12511782",
            "type": {
                "id": "10001",
                "inward": "is depended upon by",
                "name": "dependent",
                "outward": "depends upon",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"
            }
        }],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "id": "3",
            "name": "Major",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310941&avatarId=10096",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310941&avatarId=10096",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310941&avatarId=10096",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12310941&avatarId=10096"
            },
            "id": "12310941",
            "key": "MAPREDUCE",
            "name": "Hadoop Map/Reduce",
            "projectCategory": {
                "description": "Scalable Distributed Computing",
                "id": "10292",
                "name": "Hadoop",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/10292"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12310941"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Ben Roling",
            "key": "ben.roling",
            "name": "ben.roling",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ben.roling",
            "timeZone": "America/Chicago"
        },
        "resolution": null,
        "resolutiondate": null,
        "status": {
            "description": "The issue is open and ready for the assignee to start work on it.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
            "id": "1",
            "name": "Open",
            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
            "statusCategory": {
                "colorName": "blue-gray",
                "id": 2,
                "key": "new",
                "name": "To Do",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2"
            }
        },
        "subtasks": [],
        "summary": "Data corruption when single value exceeds map buffer size (io.sort.mb)",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2017-08-17T00:45:19.000+0000",
        "versions": [{
            "archived": false,
            "description": "",
            "id": "12314047",
            "name": "0.20.1",
            "releaseDate": "2009-09-01",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12314047"
        }],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/MAPREDUCE-5767/votes",
            "votes": 1
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/MAPREDUCE-5767/watchers",
            "watchCount": 8
        },
        "workratio": -1
    },
    "id": "12697142",
    "key": "MAPREDUCE-5767",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12697142"
}