{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": null,
        "components": [{
            "id": "12315625",
            "name": "applicationmaster",
            "self": "https://issues.apache.org/jira/rest/api/2/component/12315625"
        }],
        "created": "2011-10-25T17:11:24.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=criccomini&avatarId=27141",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=criccomini&avatarId=27141",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=criccomini&avatarId=27141",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=criccomini&avatarId=27141"
            },
            "displayName": "Chris Riccomini",
            "key": "criccomini",
            "name": "criccomini",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=criccomini",
            "timeZone": "America/Los_Angeles"
        },
        "customfield_10010": null,
        "customfield_12310191": null,
        "customfield_12310192": null,
        "customfield_12310220": null,
        "customfield_12310222": "1_*:*_1_*:*_1787752_*|*_5_*:*_1_*:*_0",
        "customfield_12310230": null,
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "0.0",
        "customfield_12310320": null,
        "customfield_12310420": "214579",
        "customfield_12310920": "52270",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i09bc7:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Oct 25 17:41:11 UTC 2011",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "I'm probably doing something wrong here, but I can't figure it out.\n\nMy ApplicationMaster is sending an AllocateRequest with ContainerIds to release. My ResourceManager logs say:\n\n2011-10-25 10:02:52,236 WARN  resourcemanager.RMAuditLogger (RMAuditLogger.java:logFailure(207)) - USER=criccomi\tIP=127.0.0.1\tOPERATION=AM Released Container\tTARGET=FifoScheduler\tRESULT=FAILURE\tDESCRIPTION=Trying to release container not owned by app or with invalid id\tPERMISSIONS=Unauthorized access or invalid container\tAPPID=application_1319485153554_0028\tCONTAINERID=container_1319485153554_0028_01_000003\n\nThe container ID is valid, as is the app id:\n\n[criccomi@criccomi-ld logs]$ pwd\n/tmp/logs\n[criccomi@criccomi-ld logs]$ find .\n.\n./application_1319485153554_0028\n./application_1319485153554_0028/container_1319485153554_0028_01_000002\n./application_1319485153554_0028/container_1319485153554_0028_01_000002/stderr\n./application_1319485153554_0028/container_1319485153554_0028_01_000002/stdout\n./application_1319485153554_0028/container_1319485153554_0028_01_000001\n./application_1319485153554_0028/container_1319485153554_0028_01_000001/stderr\n./application_1319485153554_0028/container_1319485153554_0028_01_000001/stdout\n./application_1319485153554_0028/container_1319485153554_0028_01_000003\n./application_1319485153554_0028/container_1319485153554_0028_01_000003/stderr\n./application_1319485153554_0028/container_1319485153554_0028_01_000003/stdout\n./application_1319485153554_0028/container_1319485153554_0028_01_000006\n./application_1319485153554_0028/container_1319485153554_0028_01_000006/stderr\n./application_1319485153554_0028/container_1319485153554_0028_01_000006/stdout\n\nThe containers are still running.\n\nMy code to start a container, and then to release it:\n{code}\n  // ugi = UserGroupInformation.getCurrentUser\n  // security is not enabled\n  def startContainer(packagePath: Path, container: Container, ugi: UserGroupInformation, env: Map[String, String], cmds: String*) {\n    info(\"%s starting container %s %s %s %s %s\" format (appAttemptId, packagePath, container, ugi, env, cmds))\n    // connect to container manager (based on similar code in the ContainerLauncher in Hadoop MapReduce)\n    val contToken = container.getContainerToken\n    val address = container.getNodeId.getHost + \":\" + container.getNodeId.getPort\n    var user = ugi\n\n    if (UserGroupInformation.isSecurityEnabled) {\n      debug(\"%s security is enabled\" format (appAttemptId))\n      val hadoopToken = new Token[ContainerTokenIdentifier](contToken.getIdentifier.array, contToken.getPassword.array, new Text(contToken.getKind), new Text(contToken.getService))\n      user = UserGroupInformation.createRemoteUser(address)\n      user.addToken(hadoopToken)\n      info(\"%s changed user to %s\" format (appAttemptId, user))\n    }\n\n    val containerManager = user.doAs(new PrivilegedAction[ContainerManager] {\n      def run(): ContainerManager = {\n        return YarnRPC.create(conf).getProxy(classOf[ContainerManager], NetUtils.createSocketAddr(address), conf).asInstanceOf[ContainerManager]\n      }\n    })\n\n    // set the local package so that the containers and app master are provisioned with it\n    val packageResource = Records.newRecord(classOf[LocalResource])\n    val packageUrl = ConverterUtils.getYarnUrlFromPath(packagePath)\n    val fileStatus = packagePath.getFileSystem(conf).getFileStatus(packagePath)\n\n    packageResource.setResource(packageUrl)\n    packageResource.setSize(fileStatus.getLen)\n    packageResource.setTimestamp(fileStatus.getModificationTime)\n    packageResource.setType(LocalResourceType.ARCHIVE)\n    packageResource.setVisibility(LocalResourceVisibility.APPLICATION)\n\n    // start the container\n    val ctx = Records.newRecord(classOf[ContainerLaunchContext])\n    ctx.setEnvironment(env)\n    ctx.setContainerId(container.getId())\n    ctx.setResource(container.getResource())\n    ctx.setUser(user.getShortUserName())\n    ctx.setCommands(cmds.toList)\n    ctx.setLocalResources(Collections.singletonMap(\"package\", packageResource))\n\n    debug(\"%s setting package to %s\" format (appAttemptId, packageResource))\n    debug(\"%s setting context to %s\" format (appAttemptId, ctx))\n\n    val startContainerRequest = Records.newRecord(classOf[StartContainerRequest])\n    startContainerRequest.setContainerLaunchContext(ctx)\n    containerManager.startContainer(startContainerRequest)\n  }\n{code}\n-----\n{code}\n  def sendResourceRequest(requests: List[ResourceRequest], release: List[ContainerId]): AMResponse = {\n    info(\"%s sending resource request %s %s\" format (appAttemptId, requests, release))\n    val req = Records.newRecord(classOf[AllocateRequest])\n    req.setResponseId(requestId)\n    req.setApplicationAttemptId(appAttemptId)\n    req.addAllAsks(requests)\n    req.addAllReleases(release)\n    requestId += 1\n    debug(\"%s RM resource request %s\" format (appAttemptId, req))\n    resourceManager.allocate(req).getAMResponse\n  }\n{code}\n\nI have double checked that my ContainerIds are accurate, and they are.\n\nAny idea what I'm doing wrong here?",
        "duedate": null,
        "environment": "[criccomi@criccomi-ld hadoop-trunk]$ svn info\nPath: .\nURL: http://svn.apache.org/repos/asf/hadoop/common/trunk\nRepository Root: http://svn.apache.org/repos/asf\nRepository UUID: 13f79535-47bb-0310-9956-ffa450edef68\nRevision: 1185741\nNode Kind: directory\nSchedule: normal\nLast Changed Author: acmurthy\nLast Changed Rev: 1185488\nLast Changed Date: 2011-10-17 22:30:32 -0700 (Mon, 17 Oct 2011)\n",
        "fixVersions": [{
            "archived": false,
            "description": "",
            "id": "12315570",
            "name": "0.23.0",
            "releaseDate": "2011-11-11",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12315570"
        }],
        "issuelinks": [],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "id": "3",
            "name": "Major",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310941&avatarId=10096",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310941&avatarId=10096",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310941&avatarId=10096",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12310941&avatarId=10096"
            },
            "id": "12310941",
            "key": "MAPREDUCE",
            "name": "Hadoop Map/Reduce",
            "projectCategory": {
                "description": "Scalable Distributed Computing",
                "id": "10292",
                "name": "Hadoop",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/10292"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12310941"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=criccomini&avatarId=27141",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=criccomini&avatarId=27141",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=criccomini&avatarId=27141",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=criccomini&avatarId=27141"
            },
            "displayName": "Chris Riccomini",
            "key": "criccomini",
            "name": "criccomini",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=criccomini",
            "timeZone": "America/Los_Angeles"
        },
        "resolution": {
            "description": "A fix for this issue is checked into the tree and tested.",
            "id": "1",
            "name": "Fixed",
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1"
        },
        "resolutiondate": "2011-10-25T17:41:11.000+0000",
        "status": {
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "id": "6",
            "name": "Closed",
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "statusCategory": {
                "colorName": "green",
                "id": 3,
                "key": "done",
                "name": "Done",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
            }
        },
        "subtasks": [],
        "summary": "AM unable to release containers",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2015-03-16T17:57:11.000+0000",
        "versions": [],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/MAPREDUCE-3261/votes",
            "votes": 0
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/MAPREDUCE-3261/watchers",
            "watchCount": 1
        },
        "workratio": -1
    },
    "id": "12528719",
    "key": "MAPREDUCE-3261",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12528719"
}