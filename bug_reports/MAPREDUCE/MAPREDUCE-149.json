{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "percent": 0,
            "progress": 0,
            "total": 7200
        },
        "aggregatetimeestimate": 7200,
        "aggregatetimeoriginalestimate": 7200,
        "aggregatetimespent": null,
        "assignee": null,
        "components": [],
        "created": "2008-06-13T16:04:56.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Aaron Greenhouse",
            "key": "aarongreenhouse",
            "name": "aarongreenhouse",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=aarongreenhouse",
            "timeZone": "Etc/UTC"
        },
        "customfield_10010": null,
        "customfield_12310191": null,
        "customfield_12310192": null,
        "customfield_12310220": "2014-07-18T05:35:07.699+0000",
        "customfield_12310222": "1_*:*_1_*:*_192288610804_*|*_5_*:*_1_*:*_0",
        "customfield_12310230": "surelogic",
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "1.0",
        "customfield_12310320": null,
        "customfield_12310420": "148541",
        "customfield_12310920": "107914",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i0itr3:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Jul 18 05:35:07 UTC 2014",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "The use of concurrency control and synchronization in JobControl is broken.  Consider\n\n- The locking in addToQueue() and toArrayList() is supposed to create per-queue locking for the queues referenced by the fields readyJobs, runningJobs, successfulJobs, waitingJobs, and failedJobs.  But this is compromised by the fact that these methods are always called when the thread is already synchronized on \"this\".\n\n- The run() method is written to use a busy-loop and Thread.sleep(int). But runnerState is not generally accessed using synchronization, nor is it volatile. This means that the run() is not guaranteed to ever view updates to runnerState.  The run() method really needs to be changed to use wait(), and to be signaled when changes are made to runnerState or to any of the queues.\n\nLet's also consider the existing synchronized methods:\n\naddJob() -- I'm pretty sure that the synchronization in addJob is only necessary to protect the (indirect) access to the long field nextJobID. This situation could be simplified by moving the synchronization to getNextJobID(). As it stands, it makes the locking in addToQueue() redundant. \n\nallFinished() -- This is synchronized to provide an atomic snapshot of the state of the queues. It should be changed to use wait() and be notified whenever the size of one of the queues changes. \n\ncheckRunningJobs(), checkWaitingJobs(), and startReadyJobs() -- These are all synchronized to prevent them from interfering with each other, themselves, and with addJobs(). This is too conservative. We really only need to be sure that each one doesn't interfere with itself (otherwise we could end up processing entries twice in parallel), but this is not possible based on the intended usage: they are are only called from the run(), so they can never be concurrency invoked. I don't see any danger from them running concurrently with addJob(), as long as the integrity of the underlying queues is protected. As with addJob(), the synchronization on these methods makes the per-queue synchronization in addToQueue redundant. \n\nThis class should be rewritten as follows:\n\n    * The field groupName should be made final. \n\n    * Add a new private boolean field stateChanged that is set to true whenever the state of the object is changed from a public method call. This is checked and reset by run(). \n\n    * The per-queue synchronization needs to be scrapped: it isn't being exploited any way. \n\n    * The five queue fields plus the fields runnerState, nextJobID, and the new stateChanged should all be protected by the lock this. \n\n    * The run() method should be rewritten to use wait(). \n\n    * public methods that change the state of the queues or runnerState should set stateChanged to true and call notifyAll(). \n\n    * Ideally, allFinished() should be changed to use wait() as well. This would change the public interface of the class and break existing clients.  So this method should be @Deprecated, and a new waitForAllFinished() method should be added.\n\n    * The queue fields should be assigned HashMap objects instead of Hashtable objects. There is no advantage to using the synchronization provided by Hashtable. \n",
        "duedate": null,
        "environment": null,
        "fixVersions": [],
        "issuelinks": [],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "id": "3",
            "name": "Major",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
        },
        "progress": {
            "percent": 0,
            "progress": 0,
            "total": 7200
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310941&avatarId=10096",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310941&avatarId=10096",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310941&avatarId=10096",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12310941&avatarId=10096"
            },
            "id": "12310941",
            "key": "MAPREDUCE",
            "name": "Hadoop Map/Reduce",
            "projectCategory": {
                "description": "Scalable Distributed Computing",
                "id": "10292",
                "name": "Hadoop",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/10292"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12310941"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Aaron Greenhouse",
            "key": "aarongreenhouse",
            "name": "aarongreenhouse",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=aarongreenhouse",
            "timeZone": "Etc/UTC"
        },
        "resolution": {
            "description": "The problem is not completely described.",
            "id": "4",
            "name": "Incomplete",
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/4"
        },
        "resolutiondate": "2014-07-18T05:35:07.000+0000",
        "status": {
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "id": "5",
            "name": "Resolved",
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "statusCategory": {
                "colorName": "green",
                "id": 3,
                "key": "done",
                "name": "Done",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
            }
        },
        "subtasks": [],
        "summary": "Class JobControl needs to be rewritten for safe concurrency",
        "timeestimate": 7200,
        "timeoriginalestimate": 7200,
        "timespent": null,
        "updated": "2014-07-18T05:35:07.000+0000",
        "versions": [],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/MAPREDUCE-149/votes",
            "votes": 0
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/MAPREDUCE-149/watchers",
            "watchCount": 1
        },
        "workratio": 0
    },
    "id": "12398247",
    "key": "MAPREDUCE-149",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12398247"
}