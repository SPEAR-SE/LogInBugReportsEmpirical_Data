[When tasks run under YARN they are handed app-level local directories to write into and those are in turn passed down to the tasks to write local data.  Since the local output locations are not under the container directory, YARN does not clean them up when the container exits.  They are only reaped when the app-level directory is deleted which occurs after the application completes.

Tasks should use the container-specific local directory for temporary local outputs rather than the app-specific directory, so if they crash YARN can automatically clean them promptly.  Note that map outputs would have to be committed to the same app-level local location they are today in order to survive the container exiting and the ShuffleHandler to find them later.  However they could be accumulated before commit in a container-specific directory so if the map attempt fails the data is reaped promptly rather than only when the job completes.  This would also help minimize chances of inter-task file collisions such that occurred in MAPREDUCE-5211., There are several issues we need to consider if we allow reducer use container local directory
1) The MapReduce framework should get container local dir from YARN. 
2) We need to let Yarn framework know that MapReduce framework created some dirs under container local dir for reducers. 
Any suggestion, [~vinodkv]?]