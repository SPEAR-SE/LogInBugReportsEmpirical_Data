[Here's a patch which creates a junit test to demonstrate the problem., Here is a patch which adds gzip support.

It was slightly awkward to do in a very clean way.  In particular, I had to change the access modifier of a variable from a super-class; arguably, I could have just created a duplicate variable within the StreamInputFormat class, but I expect that other subclasses will have similar issues so I opted for changing the parent class.

The other ugly change I had to make was move pos_ into StreamBaseRecordReader, but still require inheritors to update the variable.
, re-uploading patches as a single file, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12385098/HADOOP-3562.combined.patch
  against trunk revision 673254.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 4 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2780/console

This message is automatically generated., (forgot to strip the leading path), +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12385103/HADOOP-3562.combined.patch
  against trunk revision 675078.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 4 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2827/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2827/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2827/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2827/console

This message is automatically generated., I'd forgotten what a mess the streaming input format stuff is. *Sigh*

Changing the signature of the constructors is a problem, because it isn't backward compatible if other people are defining their own StreamBaseRecordReader's, the StreamInputFormat won't find their constructor. *Heavy sigh*

I'd suggest keeping the input stream handles separate from each other.

{code}
InputStream in_ = the decompressed stream
FSDataInputStream underlying = the underlying stream
{code}

so for uncompressed streams they are the same, but for compressed streams they are different from each other. If you switch over to using the underlying stream for the position stuff, I believe it will remove the need for ignoreEnd, which is dangerous if there was a splittable compressed format.

, Closing this as stale, given the number of changes to streaming, including the ability to provide your own input format.]