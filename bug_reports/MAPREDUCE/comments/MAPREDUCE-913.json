[
The original cause for this is a job whose DistributedCache files are modified on HDFS while the job is still running and tasks are still being assigned. (NOTE: The line numbers DO NOT
correspond to the trunk, but the trace should give an idea.)

{code}
2009-08-25 19:53:48,831 FATAL org.apache.hadoop.filecache.DistributedCache: File: hdfs://<HDFS_HOST>:<port>/user/a/b/c/distributed_data/distributed_file#distributed_file
has changed on HDFS since job started
2009-08-25 19:53:48,832 WARN org.apache.hadoop.mapred.TaskRunner: attempt_200908191538_10587_r_000000_1Child Error
java.io.IOException: File: hdfs://<HDFS_HOST>:<port>/user/a/b/c/distributed_data/distributed_file#distributed_file has changed on HDFS since job started
        at org.apache.hadoop.filecache.DistributedCache.ifExistsAndFresh(DistributedCache.java:485)
        at org.apache.hadoop.filecache.DistributedCache.localizeCache(DistributedCache.java:356)
        at org.apache.hadoop.filecache.DistributedCache.getLocalCache(DistributedCache.java:205)
        at org.apache.hadoop.mapred.TaskRunner.run(TaskRunner.java:173)
{code}

A little time after this, the TaskRunner thread for this task crashes with the following in tasktracker's out file:
{code}
Exception in thread "Thread-89595" java.lang.NullPointerException
        at org.apache.hadoop.fs.FileUtil.makeShellPath(FileUtil.java:412)
        at org.apache.hadoop.fs.FileUtil.makeShellPath(FileUtil.java:396)
        at org.apache.hadoop.mapred.TaskTracker$TaskInProgress.taskFinished(TaskTracker.java:2166)
        at org.apache.hadoop.mapred.TaskTracker$TaskInProgress.reportTaskFinished(TaskTracker.java:2091)
        at org.apache.hadoop.mapred.TaskRunner.run(TaskRunner.java:496)
{code}

The following also appears in the TaskTracker's log file
{code}
2009-08-25 19:53:51,838 ERROR org.apache.hadoop.mapred.TaskLog: getTaskLogFileDetail threw an exception java.io.FileNotFoundException: /hadoop/logs//mapred/userlogs
attempt_200908191538_10587_r_000000_1/log.index (No such file or directory)
{code}

Once this happens with a job, this particular slot on this TaskTracker is no longer usable as the slot could not be successfully released according to the code paths. And all the further tasks that are assigned to this slot hang in an UNINITIALIZED state., Attaching a patch to fix this issue., The previous patch by Sreekanth still leaves other possibilities of a hung unusable slot. This patch addresses all those issues.

The test(written by Sreekanth) verifies the regression - without the code changes in the patch, the test times out and with the changes, it passes., {code}
-      LOG.info("Error from "+taskid+": "+diagInfo);
+      LOG.info("Diagnostic information from " + taskid + ": " + diagInfo);
{code}
Is there any reason for changing the log msg in the above code?

For the configuration properties in testcase, Can you use the corresponding  constant String defined in JobContext class?
, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12425456/MAPREDUCE-913-20091119.1.txt
  against trunk revision 881673.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/253/console

This message is automatically generated., Argh.. the git prefixes. Will upload a new patch., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12425459/MAPREDUCE-913-20091119.2.txt
  against trunk revision 881673.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 1 new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/145/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/145/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/145/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/145/console

This message is automatically generated., Updated patch fixing the findBugs warning, including Amareshwari's suggestions and a minor tweak to shorten the test-time., Took a look at the patch, following at the comments :

* Can we check if the workDir is non-null in the run-debug script and throw an exception if the same is null? Would prevent launch of task-controller code.
* In test case can we verify the correct number of the map slot is actually reported back to JobTracker after the failing job completes, this would test the actual slot management.

Wouldn't it be much better that we add a check to figure out if the taskJVM was launched or not and then run debug script accordingly., Patch does the following:
1. changed reportTaskFinished code to ensure release slot happens always by calling releaseSlot in finally block.
2. Have undone the changes to do with throwing exception when arguments to debug-script could not be constructed, as it was already initializing them to empty String.
3. Modified the testcase to use new api.

bq.  In test case can we verify the correct number of the map slot is actually reported back to JobTracker after the failing job completes, this would test the actual slot management.
4. Added asserts for slot management. Verified the test passes with the patch and fails without the patch.

bq. Can we check if the workDir is non-null in the run-debug script and throw an exception if the same is null? Would prevent launch of task-controller code.
If workdDir is null or if it doesnt exists, the current code already throws IOException.

bq. Wouldn't it be much better that we add a check to figure out if the taskJVM was launched or not and then run debug script accordingly.
This may need more discussion, since it changes the feature in a way that debug script will be launched only when taskJvm is launched properly.
, Uploading correct patch., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12428395/patch-913-1.txt
  against trunk revision 892411.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/223/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/223/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/223/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/223/console

This message is automatically generated., Unfortunately, the patch no longer applies. Could you regenerate?, Patch updated to trunk, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12444388/patch-913-2.txt
  against trunk revision 943372.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/185/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/185/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/185/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/185/console

This message is automatically generated., Test failure for TestNodeRefresh is not related to the patch. The test failed because JVM exited abnormally. The same test passed on my machine., Patch looks good. Still applies. +1. Letting Hudson give one final shot at it. Will commit it on Hudson's blessings., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12444388/patch-913-2.txt
  against trunk revision 949931.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/214/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/214/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/214/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/214/console

This message is automatically generated., Something wrong with Hudson. The consoleText seems to indicate that the test-run crashed. Will re-run it., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12444388/patch-913-2.txt
  against trunk revision 949931.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/215/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/215/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/215/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/215/console

This message is automatically generated., Hudson could not succeed running tests. I ran the tests on my local machine. All the tests passed, expect TestSimulatorDeterministicReplay timeout (MAPREDUCE-1834). , Ran tests in branch 0.21 also. All tests passed, except org.apache.hadoop.mapreduce.security.token.TestDelegationTokenRenewal (which passed on a re-ran) and TestSimulatorDeterministicReplay timeout (MAPREDUCE-1835 and MAPREDUCE-1834)., I just committed this to trunk and branch-0.21. Thanks Amareshwari! Thanks Sreekanth for the test-case!]