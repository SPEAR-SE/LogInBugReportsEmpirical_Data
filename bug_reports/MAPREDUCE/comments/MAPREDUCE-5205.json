[Daryn posted logs at YARN-579, see [here|https://issues.apache.org/jira/browse/YARN-579?focusedCommentId=13644790&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13644790]., I chased this all day yesterday. Even though I could successfully reproduce this on branch-2, it was passing on trunk.

After a long day, I cornered it down to one of two things
 - I had stale installation
 - Or git-trunk branch didn't get updated with YARN-579.

It is more likely the later because I asked [~ojoshi] the same day, and he also saw the same result - passing on trunk and failing on branch-2.

Either ways, I have a patch that works, attaching it now.
, Vinod I can integrate the patch into our QE builds to verify on a 20 node secure cluster once it is posted., Here's a simple patch that fixes it.

Added a test too. Stole the env-hack from one of the previous patches - MAPREDUCE-3068.

Robert, sure that will be great help!

I am also pinging [~ojoshi] offline who helped track this down to verify it., Did you track down why the original patch works on trunk but not branch-2?  I don't understand how it would work in either branch.

The patch is relying on the token file that is auto-loaded into the login UGI - it's generally intended for passing tokens through the container executor or to new processes.  In this case, the AM's remote UGI is devoid of tokens and waiting to be populated.  This patch propagates the tokens from the login UGI into this new UGI.  This suggests that the tokens in the launch context are not actually being added to the UGI?, +1 This now lets job execute successfully on single node (unsecured).

[~robsparker] Yes I tested this earlier but at that time it passed in trunk (probably earlier patch was not available there when I did git fetch) but failed on branch-2. Today when I tried again it failed for trunk too. The current patch fixed this., bq. Did you track down why the original patch works on trunk but not branch-2? I don't understand how it would work in either branch.
Not exactly, but like I commented (2nd comment above), it should mostly be because of stale git branch. Don't have conclusive evidence though, except that Omkar also saw exactly what I see. It does fail on trunk now.

bq. This suggests that the tokens in the launch context are not actually being added to the UGI?
Yes, because in MRAppMaster.initAndStartAppMaster(), we create a new UGI. I thought of changing that too, but wanted to keep this patch minimal.
, +1 (non-binding) Tested branch 2 one a 20 node secure cluster. Branch 2 back on track !! Thanks Vinod, bq. Yes, because in MRAppMaster.initAndStartAppMaster(), we create a new UGI. I thought of changing that too, but wanted to keep this patch minimal.

I'm not disagreeing that creating a new UGI is wrong.  I'm just curious why the tokens in the container launch context are not being directly added to the new UGI, but relying on the tokens that are probably implicitly loaded into the login UGI from the token file?  I'm concerned that if the (unnecessary) token file is removed that the tokens in the container context won't be used., +1 I thought it was using the global app tokens file, but now realize it's using the nm-private tokens.  Nice work!, Editing title to reflect that it fails on trunk too.., Thanks for the testing, Robert and Omkar! And Daryn too for the review!

Will check it in if and when Jenkins blesses the patch.., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12581621/MAPREDUCE-5205-20130502.txt
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3569//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3569//console

This message is automatically generated., I just committed this to trunk and branch-2., Integrated in Hadoop-trunk-Commit #3712 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/3712/])
    MAPREDUCE-5205. Fixed MR App to load tokens correctly. Contributed by Vinod Kumar Vavilapalli. (Revision 1479016)

     Result = SUCCESS
vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1479016
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/TestMRAppMaster.java
, Integrated in Hadoop-Yarn-trunk #202 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/202/])
    MAPREDUCE-5205. Fixed MR App to load tokens correctly. Contributed by Vinod Kumar Vavilapalli. (Revision 1479016)

     Result = SUCCESS
vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1479016
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/TestMRAppMaster.java
, Integrated in Hadoop-Hdfs-trunk #1391 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1391/])
    MAPREDUCE-5205. Fixed MR App to load tokens correctly. Contributed by Vinod Kumar Vavilapalli. (Revision 1479016)

     Result = FAILURE
vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1479016
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/TestMRAppMaster.java
, Integrated in Hadoop-Mapreduce-trunk #1418 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1418/])
    MAPREDUCE-5205. Fixed MR App to load tokens correctly. Contributed by Vinod Kumar Vavilapalli. (Revision 1479016)

     Result = SUCCESS
vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1479016
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/TestMRAppMaster.java
]