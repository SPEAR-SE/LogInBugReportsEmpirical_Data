[Patch for yahoo20, not to be committed., Patch for an older version of yahoo-hadoop-0.20, not for commit., I looked at the latest 20 patch. Looks good except that the changes in {{ensureState()}} are never reachable., The patch looks good to me also., Delays making a connection to the job tracker node until it's needed.

Provides a new API so a user can tell whether this has been done, for a given job [although usually there would be no need to know].
, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12444965/mapreduce-1505--2010-05-19.patch
  against trunk revision 944427.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/193/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/193/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/193/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/193/console

This message is automatically generated., I think a simpler fix is to have o.a.h.mapreduce.Job create o.a.h.mapreduce.Cluster only when needed..., All of the {{o.a.h.mapreduce.Job}} constructors that don't require the caller to have already created and supplied a {{Cluster}} are deprecated., bq. All of the o.a.h.mapreduce.Job constructors that don't require the caller to have already created and supplied a Cluster are deprecated. 
Dick, I did not understand your comment above. Job constructors are deprecated in favor of static getInstance methods wrt [comment1 |https://issues.apache.org/jira/browse/MAPREDUCE-777?focusedCommentId=12746014&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12746014] and [comment2 |https://issues.apache.org/jira/browse/MAPREDUCE-777?focusedCommentId=12755973&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12755973]

If the user is passing a Cluster handle, it is fine to initialize it in the constructor. So, current constructors and getInstance methods look fine. Only if user does not pass Cluster handle, then we need to create it lazily. 

We can add following method in Job.java which creates Cluster lazily:
{code}
public static getInstance(Configuration conf)
{code}

Also, will have to change deprecated constructors to create Cluster handle lazily.

Thoughts?, bq. public static getInstance(Configuration conf)
This should  be 
{code}
public static Job getInstance(Configuration conf);
{code}, Restructured the patch to lazily create a {{Cluster}} , and replaced MR's uses of the deprecated constructors in {{Job}} with the new factory methods., The patch is substantially longer than its predecessors.  The core of the patch is simpler, but this patch also converts the direct callers of {{Job}} constructors to call its corresponding factory methods., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12445678/mapreduce-1505--2010-05-26.patch
  against trunk revision 947758.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 90 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/208/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/208/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/208/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/208/console

This message is automatically generated., +1

I committed this. Thanks, Dick!]