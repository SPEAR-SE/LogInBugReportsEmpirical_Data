[Note, these fail on trunk as well as 0.23, Part 1 of the final patch: 
  - the system property setting for path to app jar is being set incorrect to jobclient.jar instead of mr-client-app.jar. 

Builds currently are effectively broken as the tests are silently failing as the appropriate jar cannot be found. , Still looking at the actual failures as not able to reproduce on both trunk/branch-0.23.

@Thomas, can you confirm that you have JAVA_HOME set in your environment? The regression tests have a tendency to fail if this var is not set in your environment.  , adding java_home into env settings. , @Thomas, could you attach the logs from the failed testcase to the jira as I am still not being able to reproduce the issue. 

( If you see the tests failing with the container exiting with 127, you can verify if java_home is indeed the issue by looking at the nm-logs under <dir>/target/<test>/<test>-logDir-nm*/application*/container*/<log file> ), yes JAVA_HOME is set.  Did you run them individually or all the tests?  Sorry I should have said this originally - they only fail when run them all together. I could not get them to fail when run individually. I'll attach logs., TestMROldApiJobs and TestUberAM both fail with exception below.  So perhaps something isn't being shut down cleanly in a test before it or in the failure of TestMRJobs.  If you can't reproduce it let me know and I'll look at the failures.

2011-11-11 17:20:44,452 ERROR [Thread-4] service.CompositeService (CompositeService.java:start(72)) - Error starting services ResourceManager
org.apache.hadoop.yarn.YarnException: java.net.BindException: Problem binding to [0.0.0.0:8025] java.net.BindException: Address already in use; For more details see:  http://wiki.apache.org/hadoop/BindException
    at org.apache.hadoop.yarn.factories.impl.pb.RpcServerFactoryPBImpl.getServer(RpcServerFactoryPBImpl.java:125)
    at org.apache.hadoop.yarn.ipc.HadoopYarnProtoRPC.getServer(HadoopYarnProtoRPC.java:63)
    at org.apache.hadoop.yarn.server.resourcemanager.ResourceTrackerService.start(ResourceTrackerService.java:125)
    at org.apache.hadoop.yarn.service.CompositeService.start(CompositeService.java:68)
    at org.apache.hadoop.yarn.server.resourcemanager.ResourceManager.start(ResourceManager.java:439)
    at org.apache.hadoop.yarn.server.MiniYARNCluster$ResourceManagerWrapper$2.run(MiniYARNCluster.java:126)
Caused by: java.net.BindException: Problem binding to [0.0.0.0:8025] java.net.BindException: Address already in use; For more details see:  http://wiki.apache.org/hadoop/BindException
    at org.apache.hadoop.net.NetUtils.wrapException(NetUtils.java:606)
    at org.apache.hadoop.ipc.Server.bind(Server.java:230)
    at org.apache.hadoop.ipc.Server$Listener.<init>(Server.java:310)
    at org.apache.hadoop.ipc.Server.<init>(Server.java:1591)
    at org.apache.hadoop.ipc.RPC$Server.<init>(RPC.java:576)
    at org.apache.hadoop.yarn.ipc.ProtoOverHadoopRpcEngine$Server.<init>(ProtoOverHadoopRpcEngine.java:314)
    at org.apache.hadoop.yarn.ipc.ProtoOverHadoopRpcEngine.getServer(ProtoOverHadoopRpcEngine.java:390)
    at org.apache.hadoop.ipc.RPC.getServer(RPC.java:550)
    at org.apache.hadoop.yarn.factories.impl.pb.RpcServerFactoryPBImpl.createServer(RpcServerFactoryPBImpl.java:155)
    at org.apache.hadoop.yarn.factories.impl.pb.RpcServerFactoryPBImpl.getServer(RpcServerFactoryPBImpl.java:118)
    ... 5 more, @Thomas, sorry for the delay in getting back to you. Re-ran multiple times both on local mac laptop as well as a linux host ( as order of tests sometimes differ). All tests are simply mvn test install from the top of hadoop-mapreduce-project and go through across multiple runs. , Re-assigning back to Thomas to investigate more as not reproducible., Just a few updates:

# For the error: 'Problem binding to [0.0.0.0:8025] java.net.BindException: Address already in use; For more details see'
One of the tests in hadoop-mapreduce-client-jobclient seems to be hanging around after it is done. It hangs on to port 8025 so later tests can't bind to that port.
# For the TestMROldApiJobs failure ({{mvn -Dtest=TestMROldApiJobs test}}):
I can consistently reproduce this one, even if I run only that test. It is getting a ClassNotFoundException:
{noformat}
Exception in thread "main" java.lang.NoClassDefFoundError: org/apache/hadoop/mapreduce/v2/app/MRAppMaster
Caused by: java.lang.ClassNotFoundException: org.apache.hadoop.mapreduce.v2.app.MRAppMaster
        at java.net.URLClassLoader$1.run(URLClassLoader.java:200)
        at java.security.AccessController.doPrivileged(Native Method)
        at java.net.URLClassLoader.findClass(URLClassLoader.java:188)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:307)
        at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:252)
        at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320)
Could not find the main class: org.apache.hadoop.mapreduce.v2.app.MRAppMaster.  Program will exit.
{noformat}
In order to view the above output, I had to find the {{stderr}} file for the application container that failed during the unit test.
, @Eric, could you update the test and print out the value of MiniMRYarnCluster.APPJAR and see what is that set to? If it is not set to hadoop-mapreduce-client-app.jar, the patch attached above should help. , @Hitesh,
MiniMRYarnCluster.APPJAR has the value of $HADOOP_SOURCE_ROOT/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/target/hadoop-mapreduce-client-jobclient-0.23.0-SNAPSHOT.jar, Created MAPREDUCE-3407 to address the pom issue for the wrong jar value. Leaving this jar open to address the underlying test cleanup issues. , With the attached patch, I no longer see any failures in the hadoop-mapreduce-project project., I suggest we go ahead and mark this as a dup of MAPREDUCE:3407. Is that acceptable?, It would be good if we could get to the bottom of the 'address already in use' issue. It is likely getting hidden in successful runs. ]