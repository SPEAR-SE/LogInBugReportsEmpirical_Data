[Adds a {{waitFor JobHalfDone}} method to {{UtilsForTests}} which times out after a minute (hard coded, inline), factored its use into both parts of TestRecoveryManager that waits for a partially-complete job. , -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12431442/MAPREDUCE-1414.patch
  against trunk revision 902727.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/408/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/408/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/408/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/408/console

This message is automatically generated., Hudson tests failing w/ ClassNotFound:
{code}
java.lang.NoClassDefFoundError: org/apache/hadoop/net/StaticMapping
	at org.apache.hadoop.hdfs.MiniDFSCluster.<init>(MiniDFSCluster.java:288)
	at org.apache.hadoop.hdfs.MiniDFSCluster.<init>(MiniDFSCluster.java:132)
	at org.apache.hadoop.mapred.ClusterMapReduceTestCase.startCluster(ClusterMapReduceTestCase.java:81)
	at org.apache.hadoop.mapred.ClusterMapReduceTestCase.setUp(ClusterMapReduceTestCase.java:56)
Caused by: java.lang.ClassNotFoundException: org.apache.hadoop.net.StaticMapping
	at java.net.URLClassLoader$1.run(URLClassLoader.java:200)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:188)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:307)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:252)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320)
{code}

Looking at the missing class, it is a test class in hadoop-common, and is not in hadoop-common.jar.  I could easily imagine that the classpath for Hudson isn't picking up the test jar wherever it is meant to, Adding special timeouts for long-running tests is not a fix and it's not even diagnostic in this case., I disagree. <junit> will timeout but it reacts by killing the process, creating an empy XML file. when the XSL transforms are applied to create HTML docs, <junitreport> will mention the missing file and skip it. Your test HTML reports -which may be on some remote hudson server, after all- won't contain any information as to why your build failed, except you get emails saying "junit test run failed". 

Having the test recognise and handle a situation which at least one person (me)  has encountered would eliminate this, and I don't see why it should be rejected. The more robust your test harness is, the better., The test harness, I'd argue, is not more robust because there is a log when the test fails for ambiguous reasons. I tried running this test on my laptop, it failed because the job took more than a minute, and it was still unclear why- or whether- that was a problem. The log artifact was just as useless as nothing and the proposed patch doesn't change that; it makes an already flaky test even less reliable by introducing a failure case that is not implicit in what the test is validating.

If the test is flaky, the framework and/or the test are flawed. The current patch proposes to fix neither one.]