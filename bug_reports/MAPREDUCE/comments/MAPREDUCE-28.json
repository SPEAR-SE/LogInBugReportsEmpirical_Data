[Currently the job submission in JobTracker does the following steps during job submission:
1. Create a new JobInProgress object.
2. Verify if the queue which job is submitted actually exists.
3. Check if the queue is running.
4. Check if the user hsa access for running job.
5. Check memory requirement.

And all the job tracker methods are delegation calls so we can directly call the methods which directly call the QueueManager appropriate method, so we can change the following test cases to directly call QueueManager appropriate method instead of starting up MiniMRCluster:

- testAllEnabledACLForJobSubmission()
- testAllDisabledACLForJobSubmission()
- testUserDisabledACLForJobSubmission() 
- testDisabledACLForNonDefaultQueue()
- testSubmissionToInvalidQueue()
- testEnabledACLForNonDefaultQueue()
- testUserEnabledACLForJobSubmission()
- testGroupsEnabledACLForJobSubmission()
- testAllEnabledACLForJobKill()
- testAllDisabledACLForJobKill()
- testOwnerAllowedForJobKill()
- testUserDisabledACLForJobKill()
- testUserEnabledACLForJobKill()
- testUserDisabledForJobPriorityChange()

The test case testStateRefresh() can also be made unit test instead of starting up a cluster same way as we test acls refresh.

We can then add a new integration test case to test following conditions:
1. acls for a user in a queue where he is denied/given access to submit and manage a job
2. State of the queue., After discussion with Rahul and looking at the test case which were written for MAPREDUCE-861, the path forward would be to just test the sematic meaning of the configured acls in the {{TestQueueManager}} the state and acl refresh is actually taken care in the test case introduced in {{MAPREDUCE-861}}, Uploading patch. Changes made are:
# provide semantical test cases for acls
# smoke tests for access issues with acls
# changed TestQueueManagerForHierarchialQueues to JUnit 4.5 style., 1.QueueConfigurationParser.java
  - Refactoring of acls submission code.

2.QueueManager
  - wrap the line in 80 chars.

3 . TestQueueManagerWithIntegration

  - Refactor the test case into multiple tests.
    As of now we just have a single test which does everything.
    Move QueueManagerConfigurationClassLoader to CapacityTestUtils.java
    Move submitSleepJob to CapacityTestUtils.java

4. TestQueueManagerForHierarchialQueues 
  - createSimpleDocumentWithAcls is there in both Tests , we can refactor it , or put this method in CapacityTestUtils.java
   - test the view of queue(testQueueView). This is used to test whether JobQueueInfo is always in sync with Queue object.
    Create a Queue hierarchy , use getJobQueueInfo(String queue) method to get a JobQueueInfo object and see if
    the view is in sync with Queue object.
    , caveat in above comment:
Instead of CapacityTestUtils it should be QueueManagerTestUtils., TestQueueManager has some java assert statements. Please change them to junit assert statements, Uploading patch with comments mentioned by Rahul and Amareshwari implemented., TestQueueManagerWithIntegration rename to TestQueueManagerWithJobTracker.
- add testcases for scenario when aclsEnabled  = false;

TestQueueManagerForHierarchialQueues
- rename testHierarchy to testQueueView.

TestQueueManager should be renamed as TestQueueManagerWithDeprecatedConf.

TestQueueManagerForHierarchialQueues should be made TestQueueManager , as essentially , current conf is hierarchy based. , Uploading new patch with the above comments done., The previous patch doesn't seem to be applying. Uploading new patch., Some comments:

 QueueConfigurtionParser.java
 1. Do more refactoring for acls.

 TestQueueManagerWithJobTracker.java
 1. in the test TestAclsForSubmitJob
     check for the scenario , when a user u1 has administrators permissions and another user submits the job
    and user u1 is able to kill the job.

 2.testAclsDisabled , check for killing of job., Uploading patch with the above mentioned corrections., In TestQueueManagerWithJobTracker 
 testAclsDisabled has setUpCluster call twice , can we remove this call and have refreshQueues to update the acls.

, Uploading patch with the above comments implemented. 
The TestSuite takes around 25-30 seconds to run., Uploading new patch with asserts added to TestQueueManagerWithJobTracker to ensure that jobs are killed., +1. with the patch, Sorry for realizing it late.

Further changes are required to TestQueueManagerWithDeprecatedConf. 
We would need to remove the testcases which are redundant (checking the same code path).

, TestQueueManager now takes 1.002 secs on my local machine
TestQueueManagerWithJobTracker took 29 secs.
TestQueueManagerWithDeprecatedConf took .506 secs.

, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12422365/MAPREDUCE-28-8.patch
  against trunk revision 826565.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 34 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/181/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/181/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/181/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/181/console

This message is automatically generated., The -1 in core tests is because of a JVM issue :
{noformat}
     [exec]     [junit] # An unexpected error has been detected by Java Runtime Environment:
     [exec]     [junit] #
     [exec]     [junit] #  SIGSEGV (0xb) at pc=0x061c5a63, pid=17659, tid=4158180240
     [exec]     [junit] #
     [exec]     [junit] # Java VM: Java HotSpot(TM) Server VM (11.0-b16 mixed mode linux-x86)
     [exec]     [junit] # Problematic frame:
     [exec]     [junit] # V  [libjvm.so+0x1c5a63]
     [exec]     [junit] #
     [exec]     [junit] # An error report file with more information is saved as:
     [exec]     [junit] # /grid/0/hudson/hudson-slave/workspace/Mapreduce-Patch-h6.grid.sp2.yahoo.net/trunk/hs_err_pid17659.log
     [exec]     [junit] #
     [exec]     [junit] # If you would like to submit a bug report, please visit:
     [exec]     [junit] #   http://java.sun.com/webapps/bugreport/crash.jsp
{noformat}

This issue is not being reproduced on my local machine. So, running it through hudson again to check if this issue still continues., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12422365/MAPREDUCE-28-8.patch
  against trunk revision 826635.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 34 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/80/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/80/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/80/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/80/console

This message is automatically generated., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12422365/MAPREDUCE-28-8.patch
  against trunk revision 834284.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 34 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/234/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/234/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/234/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/234/console

This message is automatically generated., Re-running the patch thro' HUDSON, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12422365/MAPREDUCE-28-8.patch
  against trunk revision 882470.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 34 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/255/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/255/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/255/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/255/console

This message is automatically generated., bq. -1 contrib tests. The patch failed contrib unit tests

The failure is due to known issue of TestGridmixSubmission.testSubmit() failure (ref. MAPREDUCE-1124)., Holding on the commit to 0.21 until MAPREDUCE-1239 is addressed., Integrated in Hadoop-Mapreduce-trunk-Commit #134 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-Mapreduce-trunk-Commit/134/])
    , I committed this to 0.21 and trunk. Thanks Chaitanya and Rahul., Integrated in Hadoop-Mapreduce-trunk #162 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-Mapreduce-trunk/162/])
    ]