[There are 6 test suites failing on Windows due to this problem.  It looks like they are all in streaming.  I believe some similar issues were solved on trunk recently, so we may want to review that.

{code}
testCommandLine(org.apache.hadoop.streaming.TestFileArgs)  Time elapsed: 13407 sec  <<< ERROR!
org.apache.hadoop.yarn.YarnException: Failed to Start org.apache.hadoop.mapred.MiniMRCluster
	at org.apache.hadoop.yarn.service.CompositeService.start(CompositeService.java:78)
	at org.apache.hadoop.mapred.MiniMRClientClusterFactory.create(MiniMRClientClusterFactory.java:71)
	at org.apache.hadoop.mapred.MiniMRCluster.<init>(MiniMRCluster.java:180)
	at org.apache.hadoop.mapred.MiniMRCluster.<init>(MiniMRCluster.java:170)
	at org.apache.hadoop.mapred.MiniMRCluster.<init>(MiniMRCluster.java:162)
	at org.apache.hadoop.mapred.MiniMRCluster.<init>(MiniMRCluster.java:154)
	at org.apache.hadoop.mapred.MiniMRCluster.<init>(MiniMRCluster.java:147)
	at org.apache.hadoop.mapred.MiniMRCluster.<init>(MiniMRCluster.java:140)
	at org.apache.hadoop.mapred.MiniMRCluster.<init>(MiniMRCluster.java:133)
	at org.apache.hadoop.mapred.MiniMRCluster.<init>(MiniMRCluster.java:128)
	at org.apache.hadoop.streaming.TestFileArgs.<init>(TestFileArgs.java:57)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:209)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:258)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:255)
	at org.junit.runners.BlockJUnit4ClassRunner.runNotIgnored(BlockJUnit4ClassRunner.java:79)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:71)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: org.apache.hadoop.yarn.YarnException: java.lang.IllegalStateException: Queue configuration missing child queue names for root
	at org.apache.hadoop.yarn.server.MiniYARNCluster$ResourceManagerWrapper.start(MiniYARNCluster.java:184)
	at org.apache.hadoop.yarn.service.CompositeService.start(CompositeService.java:68)
	... 39 more
Caused by: java.lang.IllegalStateException: Queue configuration missing child queue names for root
	at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler.parseQueue(CapacityScheduler.java:303)
	at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler.initializeQueues(CapacityScheduler.java:228)
	at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler.reinitialize(CapacityScheduler.java:198)
	at org.apache.hadoop.yarn.server.resourcemanager.ResourceManager.init(ResourceManager.java:201)
	at org.apache.hadoop.yarn.server.MiniYARNCluster$ResourceManagerWrapper.start(MiniYARNCluster.java:164)
	... 40 more
{code}
, We'll need to resolve multiple issues to get the trunk streaming tests working on Windows:

# {{TestStreaming}} tries to set up input and output paths for HDFS based on the local test directory, including drive spec.  This gets rejected, because ':' is invalid in HDFS file names.  We'll need to check for Windows in {{TestStreaming}} and strip off the drive spec.
# When {{DefaultContainerExecutor#launchContainer}} creates the container command array, the result may include a leading slash before the drive spec, which Windows won't allow.  This can be solved using {{Path#toString}}, which already has the logic for removing the leading slash on Windows if it has a drive spec.
# Getting past all of that, container launch still fails, because the log output of {{StreamJob}} shows that we are generating command lines that exceed the Windows maximum (~8000 characters).
, ...and of course that's all after resolving the original issue of missing scheduler configuration, which can be solved by copying capacity-scheduler.xml into hadoop-tools/hadoop-streaming/src/test/resources., The patch attached to MAPREDUCE-4884 will resolve the original issue mentioned of "Queue configuration missing child queue names for root".  I am moving this jira from YARN to MAPREDUCE to record the current scope more accurately: fully working streaming tests on Windows., With this patch, all of the streaming tests pass consistently on Windows.  Note that to see the tests pass, you'll also need the patch for MAPREDUCE-5006, which hasn't been committed yet.

The problems were:

# The now-infamous problem of attempting to use paths rooted on test.build.data with HDFS, which rejects paths containing ':', such as the Windows drive spec.  The patch implements our standard work-around to allow overriding the test path to /tmp/<test name>.
# There was an assumption of Unix-style commands available for use as streaming mapper and reducer functions.  To work around this, I introduced some cmd scripts that roughly approximate Unix "cat" and "xargs cat".
# There was one actual bug in {{StreamJob}}.  It was attempting to pass a string file path into the {{URI}} constructor.  On Windows, this would contain drive spec, and {{URI}} would consider it invalid and throw an error.  The only reason we needed the {{URI}} was to pass it in to the constructor of {{Path}}.  Fortunately, we already have the logic in the {{Path}} constructor now to handle this case correctly cross-platform, so the simple fix is just to call the {{Path}} constructor with the string file path directly.
# I've increased a few test timeouts.  The old timeout values were borderline in my environment, sometimes causing the tests to fail sporadically on timeouts.  This was not a Windows-specific problem.

I've tested this patch on Mac and Windows.
, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12572615/MAPREDUCE-4885.1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 11 new or modified test files.

    {color:green}+1 tests included appear to have a timeout.{color}

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

        {color:red}-1 release audit{color}.  The applied patch generated 2 release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-tools/hadoop-streaming:

                  org.apache.hadoop.streaming.TestStreamReduceNone
                  org.apache.hadoop.streaming.TestStreamXmlRecordReader

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3392//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3392//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3392//console

This message is automatically generated., The test failures reported by Hudson are unrelated and will be resolved by the patch on MAPREDUCE-5006., Patch looks really good Chris.

Just one minor comment, you are missing Apache headers in the newly added cmd scripts, otherwise +1 from me , Thanks for the review, Ivan.  I'm attaching version 2 of the patch to add the license header to the 2 testing cmd scripts.  That's the only difference since version 1., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12573593/MAPREDUCE-4885.2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 11 new or modified test files.

    {color:green}+1 tests included appear to have a timeout.{color}

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-tools/hadoop-streaming:

                  org.apache.hadoop.streaming.TestStreamReduceNone
                  org.apache.hadoop.streaming.TestStreamXmlRecordReader

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3411//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3411//console

This message is automatically generated., Once again, the 2 failures are unrelated and will be fixed by the patch on MAPREDUCE-5006., Thanks for addressing the comments Chris, +1, patch looks good to me, Have we removed existing unix utilities dependencies? If not, then why not add cat/xargs Windows versions as a build/test requirement instead of adding code that needs to be maintained?

This patch probably needs rebasing after MAPREDUCE-5006. A new patch will also help get a clean test run on Jenkins., Attaching a rebased patch (though there were no conflicts).

{quote}
Have we removed existing unix utilities dependencies?
{quote}

The current status is that there are no Unix utility dependencies for runtime or test.  There are a few stragglers remaining as build-time dependencies only for creating the distribution tarballs (sh, cp, rm, tar, gzip).  HADOOP-9082 tracks permanent removal of those remaining build dependencies.

Considering that, it seemed unfavorable to re-introduce Unix utility dependencies, and adding a couple of cmd one-liners doesn't seem like much burden., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12577066/MAPREDUCE-4885.3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 11 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-tools/hadoop-streaming.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3496//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3496//console

This message is automatically generated., Its great that we dont have other Unix dependencies. +1., Committed to trunk. Thanks Chris!, Integrated in Hadoop-trunk-Commit #3606 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/3606/])
    MAPREDUCE-4885. Streaming tests have multiple failures on Windows. (Chris Nauroth via bikas) (Revision 1467158)

     Result = SUCCESS
bikas : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1467158
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/pom.xml
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/main/java/org/apache/hadoop/streaming/StreamJob.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/bin
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/bin/cat.cmd
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/bin/xargs_cat.cmd
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestFileArgs.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestMultipleArchiveFiles.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestMultipleCachefiles.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestStreamXmlRecordReader.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestStreaming.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestStreamingKeyValue.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestStreamingOutputKeyValueTypes.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestStreamingTaskLog.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestSymLink.java
, Integrated in Hadoop-Yarn-trunk #181 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/181/])
    MAPREDUCE-4885. Streaming tests have multiple failures on Windows. (Chris Nauroth via bikas) (Revision 1467158)

     Result = SUCCESS
bikas : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1467158
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/pom.xml
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/main/java/org/apache/hadoop/streaming/StreamJob.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/bin
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/bin/cat.cmd
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/bin/xargs_cat.cmd
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestFileArgs.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestMultipleArchiveFiles.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestMultipleCachefiles.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestStreamXmlRecordReader.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestStreaming.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestStreamingKeyValue.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestStreamingOutputKeyValueTypes.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestStreamingTaskLog.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestSymLink.java
, Integrated in Hadoop-Hdfs-trunk #1370 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1370/])
    MAPREDUCE-4885. Streaming tests have multiple failures on Windows. (Chris Nauroth via bikas) (Revision 1467158)

     Result = FAILURE
bikas : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1467158
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/pom.xml
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/main/java/org/apache/hadoop/streaming/StreamJob.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/bin
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/bin/cat.cmd
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/bin/xargs_cat.cmd
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestFileArgs.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestMultipleArchiveFiles.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestMultipleCachefiles.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestStreamXmlRecordReader.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestStreaming.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestStreamingKeyValue.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestStreamingOutputKeyValueTypes.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestStreamingTaskLog.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestSymLink.java
, Integrated in Hadoop-Mapreduce-trunk #1397 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1397/])
    MAPREDUCE-4885. Streaming tests have multiple failures on Windows. (Chris Nauroth via bikas) (Revision 1467158)

     Result = SUCCESS
bikas : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1467158
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/pom.xml
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/main/java/org/apache/hadoop/streaming/StreamJob.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/bin
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/bin/cat.cmd
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/bin/xargs_cat.cmd
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestFileArgs.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestMultipleArchiveFiles.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestMultipleCachefiles.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestStreamXmlRecordReader.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestStreaming.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestStreamingKeyValue.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestStreamingOutputKeyValueTypes.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestStreamingTaskLog.java
* /hadoop/common/trunk/hadoop-tools/hadoop-streaming/src/test/java/org/apache/hadoop/streaming/TestSymLink.java
, Bikas, thank you very much for the review and commit!, I merged the patch to branch-2.
]