[Move option earlier., +1 Looks good to me.  Should we have a negative test that verifies the original testcase fails here, or do you already have that tested elsewhere?, Good question.  Yes, there are positive and negative tests in hadoop common.  I question why MR is even testing a class ({{CommandFormat}}) that it doesn't "own"..., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12481604/MAPREDUCE-2568.patch
  against trunk revision 1132807.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these core unit tests:
                  org.apache.hadoop.cli.TestMRCLI

    +1 contrib tests.  The patch passed contrib unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://builds.apache.org/hudson/job/PreCommit-MAPREDUCE-Build/353//testReport/
Findbugs warnings: https://builds.apache.org/hudson/job/PreCommit-MAPREDUCE-Build/353//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/hudson/job/PreCommit-MAPREDUCE-Build/353//console

This message is automatically generated., The findbugs failure is bogus.  The TestMRCLI is not related to this patch, it is covered by MAPREDUCE-2565.

There's a reviewer +1 for the patch, so please considering committing this patch fixes the test it's intended to fix., +1 looks good to me, actually, one question before commit: this test case has had this same ordering of arguments since it was introduced. It only started failing once we changed CommandFormat to only allow flags at the beginning. That indicates that the CommandFormat change was a compatibility-breaking change. Thoughts?, Yes, I think you are right.  I misspoke on the other jira because I didn't remember that a number of commands already used CommandFormat.  I suspect people aren't going to be fond of losing the gnu permute behavior...  Should I make permute be an option for CommandFormat with a default of on?  It would have to be an option since all commands use CommandFormat now, and some like "test" cannot tolerate permute., Yea, I guess making it optional makes the most sense. Default should probably be permutation is OK., Hi Daryn. Are you working on fixing this or we should reassign it? Thanks., Sorry for the delay, I've been out of town since last Thu.  I am changing the parsing behavior to re-add the permute behavior and intend to close this jira as invalid.]