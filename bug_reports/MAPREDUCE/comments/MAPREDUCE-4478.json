[There are two configuration items to control the TaskTracker's heartbeat interval. One is *mapreduce.tasktracker.outofband.heartbeat*. The other is *mapreduce.tasktracker.outofband.heartbeat.damper*. If we set *mapreduce.tasktracker.outofband.heartbeat* with true and set *mapreduce.tasktracker.outofband.heartbeat.damper* with default value (1000000), TaskTracker may send heartbeat without any interval.

The code to control heartbeat interval is as follows:
{code:java}
long now = System.currentTimeMillis();
        
        // accelerate to account for multiple finished tasks up-front
        long remaining = 
          (lastHeartbeat + getHeartbeatInterval(finishedCount.get())) - now;
        while (remaining > 0) {
          // sleeps for the wait time or 
          // until there are *enough* empty slots to schedule tasks
          synchronized (finishedCount) {
            finishedCount.wait(remaining);
            
            // Recompute
            now = System.currentTimeMillis();
            remaining = 
              (lastHeartbeat + getHeartbeatInterval(finishedCount.get())) - now;
            
            if (remaining <= 0) {
              // Reset count 
              finishedCount.set(0);
              break;
            }
          }
        }
{code}

During the first time computing, if *finishedCount* is more than zero, *getHeartbeatInterval(finishedCount.get())* will return zero. Then *remaining* will be less than or equal with zero. In this case, the *while* loop will be skipped. So *finishedCount* will never be set with zero.
, Attach a patch to fix this bug. I don't know whether the synchronized is necessary., The _synchronized_ is not necessary is finishedCount is already an AtomicInteger. Otherwise the patch lgtm., Updated patch that addresses Luke's comment., Great catch Liyin! And patch looks good. Checking it in., Just committed this to branch-1 and branch-1.1. Thanks Liyin!

Thanks for the patch update, Suresh., I merged the change to branch-1.1 to be picked up for 1.1.2., Realized it was already merged to branch-1.1. Thx Vinod for merging., Closed upon successful release of 1.1.2.]