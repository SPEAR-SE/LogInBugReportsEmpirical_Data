[The point here is that since the shuffle is pluggable we don't know how the shuffle copy the data as well as how the shuffle merge the data. 
The only thing is call it's run method and use the returned RawKeyValueIterator, although for local running, the copy phase can be skipped, we may still need respect the Shuffle plugin have the right to merge the data other ways., Patch for the fix attached., The primary modifications are:
1. Go through ShuffleConsumerPlugin.runLocal when isLocal is set true. This makes the code path for isLocal almost the same as !isLocal except the copy phase was completed.

2. Default Shuffle implementation will route runLocal to MergeManager.closeLocal for allow MergeManager implementation handling the merge staff.

Please kindly help review., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12566604/MAPREDUCE-4961.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3278//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3278//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-mapreduce-client-core.html
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3278//console

This message is automatically generated., Update the patch for fixing the find bug warning., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12566612/MAPREDUCE-4961.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3279//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3279//console

This message is automatically generated., Hi Jerry,
  I agree with you that local jobs should also be supported by {{ShuffleConsumerPlugin.}}  However, we can simplify the patch if the default implementation {{Shuffle}} itself calls the static method {{merge()}} in {{Merger}} for the implementation of {{runLocal()}} mthod.  There is no need to change {{MergeManager.}}  What do you think?

-- Asokan , [~asokan]
Really thanks for your review and suggestion. I thinked about your suggestion. It can be done in that way.

While the problem is that when the MergeManager don't provide a interface method for local merge case, other implementations of merge manager will still hard to benefit from the MergeManager abstraction. For example, when I am considering the HashMergeManager, I need to call into HashMergeManager for local merge because the merge process is different with the static Merege.merge. So the HashShuffle still needs to deal with specially on this in runLocal(). Although this is not a big issue, yet the purpose of MergeManager interface is to provide an abstraction layer for Shuffle use.

While I am not very insisting on chaning MergeManager, if you think the above reason making sense, let keep the change in MergeManager; Otherwise, let's take your approach. Please kindly give your idea on this.

Jerry

, Cancel the current patch for taking Asokan's advice., The new patch submitted. Remove the changes related to MergeManager and keep it in ShuffleConsumerPlugin interface. Please kindly help review., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12572711/MAPREDUCE-4961.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 tests included appear to have a timeout.{color}

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3394//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3394//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12572711/MAPREDUCE-4961.patch
  against trunk revision 47f7f18.

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5267//console

This message is automatically generated.]