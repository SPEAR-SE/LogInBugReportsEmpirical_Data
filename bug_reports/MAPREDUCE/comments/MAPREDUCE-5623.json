[JobImpl#jobCounters should be volatile, because it can be accessed from MRClientService#getCounters., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12613587/MAPREDUCE-5623.1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app:

                  org.apache.hadoop.mapreduce.v2.app.TestRMContainerAllocator

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4196//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4196//console

This message is automatically generated., Thanks for the patch, Tsuyoshi.  Could you elaborate a bit on how adding a volatile directive to JobImpl.jobCounters is supposed to fix this?  MRClientService#getCounters can access it, but only via a reference to a JobImpl object which will have jobCounters initialized to a non-null value by the time the getAllCounters() method is invoked.  I'm not seeing how the volatile directive changes anything here., Thank you for the comment, Jason. 

{quote}
    MRClientService#getCounters can access it, but only via a reference to a JobImpl object which will have jobCounters initialized to a non-null value by the time the getAllCounters() method is invoked.
{quote}

I thought as follows when I created patch:
1. Java's loaders' threads initializes jobCounters. Initialized jobCounters can be seen from a thread which initializes jobCounters.
2. MRClientService#getCounters is called, but it's not a initialization thread. Therefore, it can return null and the RPC returns null.

Your point is that 1. of my thought is wrong and initialized values are barriered after creating its instances. I cannot say which is correct because I cannot find documents about initialization sequence of Java instances. My thought was wrong?

Or, I've noticed that Job#getCounters() can return null in some cases:
{code}
  /**
   * Gets the counters for this job. May return null if the job has been
   * retired and the job is no longer in the completed job store.
   * 
   * @return the counters for this job.
   * @throws IOException
   */
  public Counters getCounters() 
{code}
This can be reason that job.getCounters returns null., bq. Or, I've noticed that Job#getCounters() can return null in some cases

I think that's much more likely to be the case of what's happening here.  It's not like the JobImpl was just created at the time we're trying to get the counters for it, as we're waiting for job completion before attempting to get them.

Unfortunately I can't reproduce the issue locally to dig deeper.  I think knowing what the AM logs looked like for the job and whether the client was redirected to the history server before the null counters could shed a lot of light on the problem.  If the client was redirected, examining the .jhist file would also be interesting., Hi Jason Loweï¼Œ
If the client was redirected to the history server, job.getCounters() will return null. Because the .jhist file of a failed job does't contain job level counters., Thanks for the analysis, [~liangly]!  That's exactly what's happening.  I was able to reproduce the problem reliably by adding a sleep in testFailedJob after awaiting completion but before getting the counters.

Since the test is not trying to test job counters but rather simply using the counters as a way of verifying the job failed, changed the test to check the job status rather than the counters., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12618246/MAPREDUCE-5623.2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

                  org.apache.hadoop.mapreduce.security.TestJHSSecurity

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4256//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4256//console

This message is automatically generated., The TestJHSSecurity failure is unrelated and is being fixed by YARN-1463., Hi Jason Lowe,
The patch is nice to me. I think testKilledJob() has the same problem with testFailedJob().  So it's better to fix both them., Good catch!  Updating the patch to cover the killed job case as well., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12618466/MAPREDUCE-5623.3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

                  org.apache.hadoop.mapreduce.security.TestJHSSecurity

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4261//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4261//console

This message is automatically generated., Nice patch!, +1, thank you for reporting and taking this JIRA, Liyin and Jason!, +1 The patch looks good to me., Thanks for the reviews! Committing this., SUCCESS: Integrated in Hadoop-trunk-Commit #4888 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/4888/])
MAPREDUCE-5623. TestJobCleanup fails because of RejectedExecutionException and NPE. Contributed by Jason Lowe (jlowe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1551285)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapred/TestJobCleanup.java
, Thanks for the reviews, [~liangly], [~ozawa], and [~kihwal]!  I committed this to trunk, branch-2, and branch-0.23., FAILURE: Integrated in Hadoop-Yarn-trunk #424 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/424/])
MAPREDUCE-5623. TestJobCleanup fails because of RejectedExecutionException and NPE. Contributed by Jason Lowe (jlowe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1551285)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapred/TestJobCleanup.java
, FAILURE: Integrated in Hadoop-Hdfs-0.23-Build #823 (See [https://builds.apache.org/job/Hadoop-Hdfs-0.23-Build/823/])
svn merge -c 1551285 FIXES: MAPREDUCE-5623. TestJobCleanup fails because of RejectedExecutionException and NPE. Contributed by Jason Lowe (jlowe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1551290)
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapred/TestJobCleanup.java
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1615 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1615/])
MAPREDUCE-5623. TestJobCleanup fails because of RejectedExecutionException and NPE. Contributed by Jason Lowe (jlowe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1551285)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapred/TestJobCleanup.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1641 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1641/])
MAPREDUCE-5623. TestJobCleanup fails because of RejectedExecutionException and NPE. Contributed by Jason Lowe (jlowe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1551285)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapred/TestJobCleanup.java
]