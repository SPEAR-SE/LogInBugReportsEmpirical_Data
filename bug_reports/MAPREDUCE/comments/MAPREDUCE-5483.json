[I guess we could do a check if the platform is windows to do the chown() but the fix was because testcases failing on windows when running them as admin. it seems fishy to me that Windows will fail silently chown(). Regardless, either we guard this code to run only on Windows or we revert it. I'd prefer reverting it., Patch reverts the change., Who is the owner of the staging area directory? My original thought was that it is always the user who submits jobs because we will enforce the ownership explicitly in another code path (the if clause) of the same method. Thus chown() will always be a NOP; and the Windows Administrators user case is the only exception. It seems my assumption was wrong from the Ozzie test. However, this seems suggesting Ozzie test may also fail if you re-run the test without deleting the staging directory., I want to understand the scenario a little bit more. After reverting this change, it means:
# If the directory already exists, we will enforce it belongs to the current user.
# Otherwise, we create a new directory. Ownership does not matter in this case., if you run builds in the same directory as different users you'll run into permission issues deleting files from previous run unless the user running the second time is a superuser. That seems a wrong thing to do., if we revert this patch you don't do a chown() in a dir you created., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12600219/MAPREDUCE-5483.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3963//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3963//console

This message is automatically generated., +1 from my side. [~chuanliu], are you OK with the revert?, Who is the directory owner in your test case?
We are setting owner to a newly created directory.
To my understanding, the creator should be the owner under POSIX mode including HDFS. , In the testcase, the user is named 'test'.  The user doesn't exist, so it complains about an "Invalid argument".  , UGI and minicluster have support for adding test users which do not map to OS users. when using such test users things blow up in the local file system. Before MAPREDUCE-5357 (without the chown) thing were working fine in such scenarios. MAPREDUCE-5357 introduced a regression.

I'm planning to commit the current tomorrow. If you want to do a special handling for Windows (which I would not recommend) please upload a patch. The patch should have the effect of a 'revert' for non Windows platforms., OK. This makes sense. I am also +1.

We can work on a separate Windows fix in another JIRA., Thanks Robert, thanks Chuan Liu. Committed to trunk, branch-2 & branch-2.1., SUCCESS: Integrated in Hadoop-trunk-Commit #4344 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/4344/])
MAPREDUCE-5483. revert MAPREDUCE-5357. (rkanter via tucu) (tucu: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1518772)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobSubmissionFiles.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk #317 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/317/])
MAPREDUCE-5483. revert MAPREDUCE-5357. (rkanter via tucu) (tucu: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1518772)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobSubmissionFiles.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1507 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1507/])
MAPREDUCE-5483. revert MAPREDUCE-5357. (rkanter via tucu) (tucu: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1518772)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobSubmissionFiles.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1534 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1534/])
MAPREDUCE-5483. revert MAPREDUCE-5357. (rkanter via tucu) (tucu: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1518772)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobSubmissionFiles.java
]