[Here is the test output that I receive:

{noformat}
Testcase: testTaskLogs took 13.995 sec
	FAILED
null
junit.framework.AssertionFailedError: null
	at org.apache.hadoop.mapred.TestJvmReuse.validateAttempt(TestJvmReuse.java:106)
	at org.apache.hadoop.mapred.TestJvmReuse.validateJob(TestJvmReuse.java:134)
	at org.apache.hadoop.mapred.TestJvmReuse.testTaskLogs(TestJvmReuse.java:158)
{noformat}

The other interesting thing is that the test is marked to be ignored, a change introduced in MAPREDUCE-3480:

{code}
@Ignore
public class TestJvmReuse extends TestCase {
{code}

However, it still runs during {{ant test}}.  Perhaps the {{@Ignore}} isn't working as expected, such as if the JUnit 3 runner was getting invoked instead of JUnit 4.
, Uploading a trivial patch that converts TestJvmReuse to use junit4.

ant test -Dtestcase=TestJvmReuse doesn't run any tests now., +1, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12567939/mr-4967.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3300//console

This message is automatically generated., +1

I applied the patch, ran {{TestJvmReuse}}, and confirmed that the test gets ignored.

I'm wondering if the class should be deleted at this point instead of leaving behind a test that's always ignored, or if we need to file a separate follow-up jira to figure out why it fails.  The only related jira I could find is MAPREDUCE-3480.  Does anyone else out there know additional history on this?
, +1. Lets open another JIRA to evaluate fix/removal of this test., Thanks Karthik. Committed to branch-1., I submitted MAPREDUCE-4979 for follow-up., Closed upon release of Hadoop 1.2.0.]