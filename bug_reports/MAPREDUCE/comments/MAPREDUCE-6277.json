[This patch provide a solution directly related to the issue caused by MAPREDUCE-6230 by transition the MR AM into REBOOT state instead of ERROR state because in REBOOT state job will retry but not clean up write files, which is what it's expected to do. , Another plausible solution is to always let ERROR state to retry. , updated the patch, include a unit test, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12704859/YARN-3335.2.patch
  against trunk revision ce5de93.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/6981//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/6981//console

This message is automatically generated., [~jlowe] Could you please help review my patch. Thanks, Thanks for the patch, Chang.  Looks good overall, just some comments on the test:

The test sets the wait interval to 1ms but I notice it doesn't loop to try.  Theoretically we could race through this code in the same millisecond and the test will fail for the wrong reasons.  We should either set the retry interval to 0 so it always fails even on the first try or introduce a small sleep (e.g.: 10 msec) after initializing the object but before calling schedule.

Rather than returning in the middle of the test it would be cleaner to handle it this way:

{code}
    try {
      allocator.schedule();
      Assert.fail("Should Have Exception");
    } catch (YarnRuntimeException e) {
      Assert.assertTrue(e.getMessage().contains("Could not contact RM after"));
    }
    dispatcher.await();
    Assert.assertEquals("Should Have 1 Job Event", 1,
    [...]
{code}

Nit: The lack of indentation on this continued line makes the code harder to read:
{code}
      Assert.assertEquals("Should Have 1 Job Event", 1,
      allocator.jobEvents.size());
{code}, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12704859/YARN-3335.2.patch
  against trunk revision 9d72f93.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app:

                  org.apache.hadoop.mapreduce.v2.app.rm.TestRMContainerAllocator

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5307//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5307//console

This message is automatically generated., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12705360/MAPREDUCE-6277.patch
  against trunk revision 9d72f93.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5308//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5308//console

This message is automatically generated., Thanks [~jlowe] for review. I have updated patch according to your suggestions., Thanks for updating the patch, Chang.  One last nit with the test: there's a bunch of code in the catch clause that doesn't need to be there.  The only thing that I would expect to be there is the exception message assert.  Everything else can be moved outside of the catch clause., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12705401/MAPREDUCE-6277.2.patch
  against trunk revision 402817c.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5309//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5309//console

This message is automatically generated., +1 lgtm.  Committing this., Thanks, Chang!  I committed this to trunk, branch-2, and branch-2.7., Thanks [~jlowe] for quick review!, FAILURE: Integrated in Hadoop-trunk-Commit #7360 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7360/])
MAPREDUCE-6277. Job can post multiple history files if attempt loses connection to the RM. Contributed by Chang Li (jlowe: rev 30da99cbaf36aeef38a858251ce8ffa5eb657b38)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/rm/TestRMContainerAllocator.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java
* hadoop-mapreduce-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #137 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/137/])
MAPREDUCE-6277. Job can post multiple history files if attempt loses connection to the RM. Contributed by Chang Li (jlowe: rev 30da99cbaf36aeef38a858251ce8ffa5eb657b38)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/rm/TestRMContainerAllocator.java
, FAILURE: Integrated in Hadoop-Yarn-trunk #871 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/871/])
MAPREDUCE-6277. Job can post multiple history files if attempt loses connection to the RM. Contributed by Chang Li (jlowe: rev 30da99cbaf36aeef38a858251ce8ffa5eb657b38)
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/rm/TestRMContainerAllocator.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2069 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2069/])
MAPREDUCE-6277. Job can post multiple history files if attempt loses connection to the RM. Contributed by Chang Li (jlowe: rev 30da99cbaf36aeef38a858251ce8ffa5eb657b38)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/rm/TestRMContainerAllocator.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java
* hadoop-mapreduce-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #128 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/128/])
MAPREDUCE-6277. Job can post multiple history files if attempt loses connection to the RM. Contributed by Chang Li (jlowe: rev 30da99cbaf36aeef38a858251ce8ffa5eb657b38)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/rm/TestRMContainerAllocator.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #137 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/137/])
MAPREDUCE-6277. Job can post multiple history files if attempt loses connection to the RM. Contributed by Chang Li (jlowe: rev 30da99cbaf36aeef38a858251ce8ffa5eb657b38)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/rm/TestRMContainerAllocator.java
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2087 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2087/])
MAPREDUCE-6277. Job can post multiple history files if attempt loses connection to the RM. Contributed by Chang Li (jlowe: rev 30da99cbaf36aeef38a858251ce8ffa5eb657b38)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/rm/TestRMContainerAllocator.java
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java
]