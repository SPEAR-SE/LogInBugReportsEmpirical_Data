[Are you using AMRMClient/AMRMClientAsync or writing against the protocol API's directly? If its the later, then can you please try using the AMRMClient libraries. If the issue does not repro with the client libraries then it could be a bug in your code., I am not sure I fully understand what are you saying. What I did was to force to blacklist some node in RMContainerRequestor#computeIgnoreBlacklisting. So I saw in RMContainerRequest#makeRemoteRequest that I have for the ResourceRequest from the ask list, a blackAddition element with the name of the host I blacklisted. Unfortunately this list is not propagated to RM. 

I am not doing any writing against the protocol API I believe. I simply logged the blacklist in different files on the path from AM to RM. But this list is populated in computeIgnoreBlacklisting as default, not doing any fancy things. 

, What is RMContainerRequestor? AFAIK, this is an internal implementation class of the MR App master and not part of the YARN API. Are you writing your own app or reporting a bug in the MR App master. If its the latter, then this bug needs to move to the MAPREDUCE project., This happened in MR App master. However, it is not clear if the bug is due to MR implementation or Yarn API. From my side, the blacklist is NOT propagated from MR AM to RM. But as far as I did the tracing, it goes correctly to YARN-API. 

If this may need to be moved to MAPREDUCE project, can you take care of that ? Thanks. , [~rgrandl], according to the description, the problem happens on MR  AppMaster., Let's investigate if it turns out to be a bug in YARN before moving this to MR.

[~rgrandl], you are forcing the blacklist by changing MR code and running your own modified MR App?

Also you are saying that you put logs in ApplicationMasterProtocolPBClientImpl? Can you put more logs in ResourceBlacklistRequestPBImpl and see where it is breaking?, Vinod, yes, I am forcing blacklisting by changing MR code. What I basically did, is whenever computeIgnoreBlacklisting() is first called, I ensure that blacklistAdditions.addAll(blacklistNodes) is called, where I enforce blacklistedNodes to have a host.(blacklistedNodes is a set of string, so I guess is nothing bad if I do a blacklistedNodes.add("host_name")). 

I was tracing before till yarn-api but I did not saved the log calls. I will do again and let you know guys till where I am able to trace. thanks. , I did some logging in ResourceBlacklistRequestPBImpl. In function 
public ResourceBlacklistRequestProto.getProto() 
{    
   mergeLocalProto();
  LOG.info(“black_a=”+blacklistAdditions.toString());  // IT SHOWS CORRECTLY

   proto = viaProto ? proto : builder.build();
   viaProto = true;
   LOG.info(“black_aa=”+proto.getBlacklistAdditionsList().toString()); // IS EMPTY
  return proto;
}
and viaProto seems to be true, so proto = proto which is a ResourceBlacklistRequestProto. ResourceBlacklistRequestProto is defined in hadoop-yarn-api/YarnProtos.java, where the source is regenerated so cannot log. I believe the problem is somewhere here in encoding blacklistAdditions/removals. I believe that also because release containers are propagated correctly and seems they are not using any YarnProtos.java related stuff., Do you have any thoughts with this guys ? , Hi. Just FYI - I've used Blacklist with Yarn RM 2.2 and 2.3 in https://issues.apache.org/jira/browse/TWILL-87 and it seems to work. (i.e. blacklist is propagated from AM to RM).]