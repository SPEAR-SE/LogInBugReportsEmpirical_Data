[Patch fixing the javadoc warning, Attaching a patch that fixes the javadoc warnings. This is just a javadoc change and 'ant javadoc' passed with this patch. Also modified TestSocketFactory. Manually tested TestSocketFactory and it passed., test-patch passed on my box with [this|http://tinyurl.com/yc32s9n] patch., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12430696/patch-1386.txt
  against trunk revision 900159.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/395/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/395/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/395/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/395/console

This message is automatically generated., Running through hudson, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12430703/mapreduce-1386-v1.patch
  against trunk revision 900159.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/396/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/396/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/396/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/396/console

This message is automatically generated., Tests failed with the following error
{code}
Error Message

org/apache/hadoop/conf/Configuration

Stacktrace

java.lang.NoClassDefFoundError: org/apache/hadoop/conf/Configuration
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:621)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:124)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:260)
	at java.net.URLClassLoader.access$000(URLClassLoader.java:56)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:195)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:188)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:307)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:252)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320)
	at java.lang.Class.getDeclaredMethods0(Native Method)
	at java.lang.Class.privateGetDeclaredMethods(Class.java:2427)
	at java.lang.Class.getDeclaredMethods(Class.java:1791)
	at org.apache.hadoop.mapred.TestReduceFetchFromPartialMem.setSuite(TestReduceFetchFromPartialMem.java:47)
	at org.apache.hadoop.mapred.TestReduceFetchFromPartialMem.<clinit>(TestReduceFetchFromPartialMem.java:51)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:169)
Caused by: java.lang.ClassNotFoundException: org.apache.hadoop.conf.Configuration
	at java.net.URLClassLoader$1.run(URLClassLoader.java:200)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:188)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:307)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:252)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320)
{code}

Note that MAPREDUCE-1388 also failed with the same error., I ran TestReduceFetch (which failed on hudson) locally and it passed., Looks like the hudson test failures are explained in MAPREDUCE-1275., Since NetUtils.getSocketFactory looks for configuration variable "hadoop.rpc.socket.factory.class." + clazz.getSimpleName(), the property for ClientProtocol should not be removed. So, the following code change in TestSocketFactory should not be done.
{code}
-    cconf.set("hadoop.rpc.socket.factory.class.ClientProtocol",
-        "org.apache.hadoop.ipc.DummySocketFactory");
{code}

Otherthan that patch looks fine.
, bq. Since NetUtils.getSocketFactory looks for configuration variable "hadoop.rpc.socket.factory.class." + clazz.getSimpleName(), the property for ClientProtocol should not be removed.
In TestSocketFactory, we set 'hadoop.rpc.socket.factory.class.default' and 'hadoop.rpc.socket.factory.class.ClientProtocol' to the 'DummySocketFactory' class. If 'hadoop.rpc.socket.factory.class.ClientProtocol' is not set, NetUtils uses 'hadoop.rpc.socket.factory.class.default'. Hence TestSocketFactory should work as expected. , Yes, I agree that TestSocketFactory works as expected. But the code path that is tested earlier and now are different. I think we should keep hadoop.rpc.socket.factory.class.ClientProtocol and delete hadoop.rpc.socket.factory.class.default, if needed. , MAPREDUCE-1338 fixed this failure.]