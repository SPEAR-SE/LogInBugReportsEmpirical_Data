[I suspect this restriction is provided for performance reasons. To deserialize an object in SequenceFile Reader, the SequenceFile needs to know the concrete type of the serialized bytes. In other words, if objects of any sub-cloasses of the Key-class are admissible, then SequenceFile may have to pay a per-key or per-value string to record the actual type of the key or value objects.

Typically, you would have to write a wrapper class over the set of possible key types and a numeric tag. The serialized form of your wrapper object is simply the numeric tag followed by the actual object in serialized form. This effectively is to minimize the  per-key or per-value overhead by using small integers instead of long strings., Hong,that's right for SequenceFile,maybe in the sequecefile it is needed for the strict type check, since we don't want add additional information to record key's and value's class name.
How about relax the strict type check in the MapTask? As you can see from this issue's description, I encountered this error in MapTask.
I want the mapper and reducer classes in our project more clear/clean and donot need to convert everytime we use the types. So I am afraid that I can not take the wrapper solution. Or there other solution?]