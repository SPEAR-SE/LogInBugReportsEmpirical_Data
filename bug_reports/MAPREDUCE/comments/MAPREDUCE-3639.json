[MR + viewFs will fail without this. Marking as blocker., Trivial patch. +1. Waiting for Jenkins., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12509961/MR3639.txt
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in .

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/1572//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/1572//artifact/trunk/hadoop-mapreduce-project/patchprocess/newPatchFindbugsWarningshadoop-mapreduce-client-app.html
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/1572//console

This message is automatically generated., this fixes the following tests then?

org.apache.hadoop.mapreduce.security.TestTokenCache.testGetTokensForHftpFS 
org.apache.hadoop.mapreduce.security.TestTokenCache.testGetTokensForViewFS , Hang on with the commit.  I don't think this patch is complete, need to cross check with 205., {{TokenCache#obtainTokensForNamenodesInternal}} needs the same null check on {{getCanonicalServiceName}} as 205 does., @Daryn, That check should not be present. getCanonicalServiceName will return null for filesystems like viewfs. With that additional check - TokenCache will not get tokens for the underlying filesystems.

@Thomas - didn't run the ant tests earlier. Looks like testGetTokensForViewFS is fixed, but HftpFS is not. Do you know when these tests started failing ?, Looks like the Jan 5th or 6th. I saw this and was hoping it fixed them.  If you think the other is different issue we can file separate jira.

, From running ant -Dtestcase=TestTokenCache. I would lean towards fixing that via another jira.
{{nofromat}}
Testcase: testTokenCache took 12.438 sec
Testcase: testLocalJobTokenCache took 13.397 sec
Testcase: testGetTokensForNamenodes took 0.002 sec
Testcase: testGetTokensForHftpFS took 0.16 sec
  Caused an ERROR
java.net.UnknownHostException: host 
java.lang.IllegalArgumentException: java.net.UnknownHostException: host 
  at org.apache.hadoop.security.SecurityUtil.buildTokenService(SecurityUtil.java:425)
  at org.apache.hadoop.security.SecurityUtil.buildDTServiceName(SecurityUtil.java:308)
  at org.apache.hadoop.mapreduce.security.TestTokenCache.testGetTokensForHftpFS(TestTokenCache.java:324)
Caused by: java.net.UnknownHostException: host 

Testcase: testGetJTPrincipal took 0.011 sec
Testcase: testGetTokensForViewFS took 0.01 sec
{{nofromat}}
, I think you can use {{NetUtils.addStaticResolution}} to dummy out the lookups of "host".

bq. That check should not be present. getCanonicalServiceName will return null for filesystems like viewfs. With that additional check - TokenCache will not get tokens for the underlying filesystems.

Sigh, that's right, and one of the things I was trying to fix in an alt patch.  The view fs token caching is getting quite murky, but this at least makes it work better, so +1..., Argh.. this has become quite a mess. Seems like the underlying problem is that {{FileSystem.getCanonicalServiceName()}} is null for Viewfs. Not sure of a clean solution, but I can see that the current patch should let clients with viewfs get delegation tokens correctly.

Let us separate the test-failure testGetTokensForHftpFS(), though if I understand this whole mess correctly, that is caused by HADOOP-7808 itself., Just committed this to trunk and branch-0.23. Thanks Sid!, Integrated in Hadoop-Common-0.23-Commit #357 (See [https://builds.apache.org/job/Hadoop-Common-0.23-Commit/357/])
    MAPREDUCE-3639. Fixed TokenCache to work with absent FileSystem canonical service-names. (Siddharth Seth via vinodkv)
svn merge --ignore-ancestry -c 1229444 ../../trunk/

vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1229446
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/security/TokenCache.java
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/test/java/org/apache/hadoop/mapreduce/security/TestTokenCache.java
, Integrated in Hadoop-Common-trunk-Commit #1517 (See [https://builds.apache.org/job/Hadoop-Common-trunk-Commit/1517/])
    MAPREDUCE-3639. Fixed TokenCache to work with absent FileSystem canonical service-names. (Siddharth Seth via vinodkv)

vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1229444
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/security/TokenCache.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/test/java/org/apache/hadoop/mapreduce/security/TestTokenCache.java
, Integrated in Hadoop-Hdfs-trunk-Commit #1590 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Commit/1590/])
    MAPREDUCE-3639. Fixed TokenCache to work with absent FileSystem canonical service-names. (Siddharth Seth via vinodkv)

vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1229444
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/security/TokenCache.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/test/java/org/apache/hadoop/mapreduce/security/TestTokenCache.java
, Integrated in Hadoop-Hdfs-0.23-Commit #347 (See [https://builds.apache.org/job/Hadoop-Hdfs-0.23-Commit/347/])
    MAPREDUCE-3639. Fixed TokenCache to work with absent FileSystem canonical service-names. (Siddharth Seth via vinodkv)
svn merge --ignore-ancestry -c 1229444 ../../trunk/

vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1229446
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/security/TokenCache.java
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/test/java/org/apache/hadoop/mapreduce/security/TestTokenCache.java
, filed MAPREDUCE-3650 for testGetTokensForHftpFS failure., Integrated in Hadoop-Mapreduce-0.23-Commit #368 (See [https://builds.apache.org/job/Hadoop-Mapreduce-0.23-Commit/368/])
    MAPREDUCE-3639. Fixed TokenCache to work with absent FileSystem canonical service-names. (Siddharth Seth via vinodkv)
svn merge --ignore-ancestry -c 1229444 ../../trunk/

vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1229446
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/security/TokenCache.java
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/test/java/org/apache/hadoop/mapreduce/security/TestTokenCache.java
, Integrated in Hadoop-Mapreduce-trunk-Commit #1536 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Commit/1536/])
    MAPREDUCE-3639. Fixed TokenCache to work with absent FileSystem canonical service-names. (Siddharth Seth via vinodkv)

vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1229444
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/security/TokenCache.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/test/java/org/apache/hadoop/mapreduce/security/TestTokenCache.java
, Integrated in Hadoop-Hdfs-trunk #921 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/921/])
    MAPREDUCE-3639. Fixed TokenCache to work with absent FileSystem canonical service-names. (Siddharth Seth via vinodkv)

vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1229444
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/security/TokenCache.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/test/java/org/apache/hadoop/mapreduce/security/TestTokenCache.java
, Integrated in Hadoop-Hdfs-0.23-Build #134 (See [https://builds.apache.org/job/Hadoop-Hdfs-0.23-Build/134/])
    MAPREDUCE-3639. Fixed TokenCache to work with absent FileSystem canonical service-names. (Siddharth Seth via vinodkv)
svn merge --ignore-ancestry -c 1229444 ../../trunk/

vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1229446
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/security/TokenCache.java
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/test/java/org/apache/hadoop/mapreduce/security/TestTokenCache.java
, Integrated in Hadoop-Mapreduce-0.23-Build #156 (See [https://builds.apache.org/job/Hadoop-Mapreduce-0.23-Build/156/])
    MAPREDUCE-3639. Fixed TokenCache to work with absent FileSystem canonical service-names. (Siddharth Seth via vinodkv)
svn merge --ignore-ancestry -c 1229444 ../../trunk/

vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1229446
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/security/TokenCache.java
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/test/java/org/apache/hadoop/mapreduce/security/TestTokenCache.java
, Integrated in Hadoop-Mapreduce-trunk #954 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/954/])
    MAPREDUCE-3639. Fixed TokenCache to work with absent FileSystem canonical service-names. (Siddharth Seth via vinodkv)

vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1229444
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/security/TokenCache.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/test/java/org/apache/hadoop/mapreduce/security/TestTokenCache.java
, bq. Argh.. this has become quite a mess. [...] if I understand this whole mess correctly, that is caused by HADOOP-7808 itself.

HADOOP-7808 brought in behavior, but the change was part HADOOP-7602 to fix har handling.  That part has already been improved on trunk.

However, the approach of allowing {{TokenCache}} to decide whether a filesystem has tokens, and assuming it has only one token based the {{getCanonicalServiceName}} is fundamentally flawed.  I'll file a jira and throw up an incomplete patch to demonstrate a possibly cleaner implementation., Agreed. Looks like you opened HADOOP-7967 for that, let us take it forward there. Thanks.]