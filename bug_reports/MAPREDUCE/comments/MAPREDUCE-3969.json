[Alexey, hadoop-0.20.2 is too old and hadoop-1 or even hadoop-0.20.203+ seem to not have this. 

You might have to check the CDH user-lists., Arun,

Did you get a chance to check the issue before closing this? This is very well present in branch-1 too. Reported version was set to 0.20.2 but it was CDH3 per his environment field, which shares much of the same security code, making it worthwhile to at least take a look at.

Its very rare to hit this, but it is present and it is pretty critical once it hits (and requires a specific TT to restart to resume the tasks, else the job just hangs).

The fix would be to synchronize the writers list object before entering the loop that can potentially modify the list, inside of JobHistory.log(â€¦):

{code}
+ synchronized (writers) {
      for (Iterator<PrintWriter> iter = writers.iterator(); iter.hasNext();) {
        PrintWriter out = iter.next();
        out.println(builder.toString());
        if (out.checkError() && id != null) {
          LOG.info("Logging failed for job " + id + " removing PrintWriter from FileManager");
          iter.remove();
        }
      }
+    }
{code}

Its the {{iter.remove();}} conditional call that causes the issue, as it is done without a lock (while others may access the same set of writers in parallel - the fact which makes this doubly very rare to hit).

Do you agree with the above analysis Arun? If so, I'll post up a patch. Else lemme know what I've missed here., I think that the ConcurrentModificationException from the stacktrace in the description was fixed by http://svn.apache.org/viewvc?view=revision&revision=1077739.

However, it looks like you have found another potential race. Don't you need to lock access for writes to {{writers}} too, e.g. in JobHistoryFilesManager#addWriter? , Ah it indeed was fixed, for this specific issue. Thanks for catching that! :)

I'll take a look at the other spots you mention and come up with another patch.

, It appears that such a scenario can't arise. Since I've not seen this issue again after applying the undocumented fixes to my local branch, I'm re-resolving this.

Thanks Arun and Tom!]