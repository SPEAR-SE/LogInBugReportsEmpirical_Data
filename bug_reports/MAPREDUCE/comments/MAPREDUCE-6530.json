[This must be a 1.x.y release, since it is MR1. Please note that there might not be another release in the 1.x line. , [~kasha] It is MR1 Hadoop 2.5.1. I entered Wrong version., Hadoop 2.0 have only MR2 running on Yarn. , JSPUtil is the one takes lot of time holding ResourceBundles lock by calling getMapCounters  and getReduceCounters.

Assume we have 150 Jobs Running at a time with 7000 total tasks. Each Task has two counter groups FileSystemCounter and TaskCounter and total 14 counters under them.

For Each refresh on JT UI page, the JSPUtil#generateJobtable() is called, which for each 150 jobs, calls JobInProgress#getMapCounters(), which for each tasks of that Job, calls
Counters#incrAllCounters(), which does INCREMENT for two groups and total 14 counters

But Finally JT UI displays only PHYSICAL_MEMORY_BYTES and CPU_MILLISECONDS out of 14 counters on the front page.

The getMapCounters method is the one causing too much slowness because of waiting for the lock on ResourceBundles. So We need to refactor the code in such a way, 
It does Increment only for those two counters instead of all the counters.
]