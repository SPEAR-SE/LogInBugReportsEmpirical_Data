[When yarn.resourcemanager.webapp.https.address=0.0.0.0:8090  sock.getHostName() in buildRedirectPath() will return AM hostname.
This simple patch should fix the problem.
, Why we have observed this issue only in HA setup?, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12708393/YARN-3423.patch
  against trunk revision b5a22e9.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/7169//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/7169//console

This message is automatically generated., [~aroop] - this code has been updated since 2.4. Is this still and issue with 2.7 (branch-2.7) that should come out soon. , Update patch, the previous patch is not right.
Below are configs from our cluster:
{code}
yarn.resourcemanager.hostname	0.0.0.0
yarn.resourcemanager.webapp.https.address	0.0.0.0:8090
yarn.resourcemanager.webapp.https.address.rm1 rm-1.vip.ebay.com:50030
yarn.resourcemanager.webapp.https.address.rm2 rm-2.vip.ebay.com:50030
{code}

In AppController.java, when calling WebAppUtils.getResolvedRMWebAppURLWithoutScheme it will get wrong hostname:
{code}
  public static String getResolvedRMWebAppURLWithoutScheme(Configuration conf,
      Policy httpPolicy) {
    InetSocketAddress address = null;
    if (httpPolicy == Policy.HTTPS_ONLY) {
      address =
          conf.getSocketAddr(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS,
              YarnConfiguration.DEFAULT_RM_WEBAPP_HTTPS_ADDRESS,
              YarnConfiguration.DEFAULT_RM_WEBAPP_HTTPS_PORT);
    } else {
      address =
          conf.getSocketAddr(YarnConfiguration.RM_WEBAPP_ADDRESS,
              YarnConfiguration.DEFAULT_RM_WEBAPP_ADDRESS,
              YarnConfiguration.DEFAULT_RM_WEBAPP_PORT);      
    }
//address = "0.0.0.0:8090", so getResolvedAddress will return the hostname of Application master, because it runs on it.
    return getResolvedAddress(address);
  }
{code}, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12708597/YARN-3423.patch
  against trunk revision 2daa478.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/7184//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/7184//console

This message is automatically generated., The latest patch LGTM. getResolvedRemoteRMWebAppURLWithoutScheme() make more sense in HA case, also it should be work in non-HA case too. 
[~kasha] and [~xgong], do you think we should replace all getResolvedRMWebAppURLWithoutScheme with getResolvedRemoteRMWebAppURLWithoutScheme for RM HA case?
, [~adhoot] - you were looking at this recently. Could you comment on if it okay to use {{getResolvedRemoteRMWebAppURLWithoutScheme}}? , getResolvedRemoteRMWebAppURLWithoutScheme will give you the first RM in a HA case which may not match the active RM. In this case it looks okay as its getting a remote RM url and redirection to active will work once you access that link.
In some cases we need to get a local address from the active RM for doing a socket bind. In that case that would not work if the second RM is active. So we need to review all uses on a case by case basis., bq.  So we need to review all uses on a case by case basis.
Agree. Just check all other places call getResolvedRMWebAppURLWithoutScheme(), all (except this one) consider HA case so no need to replace.
+1 on latest patch. Will commit it shortly., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  14m 45s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:red}-1{color} | tests included |   0m  0s | The patch doesn't appear to include any new or modified tests.  Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. |
| {color:green}+1{color} | javac |   7m 33s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 52s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:green}+1{color} | checkstyle |   0m 33s | There were no new checkstyle issues. |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 40s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 32s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   0m 57s | The patch does not introduce any new Findbugs (version 2.0.3) warnings. |
| {color:green}+1{color} | mapreduce tests |   9m 26s | Tests passed in hadoop-mapreduce-client-app. |
| | |  45m 44s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12708597/YARN-3423.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 333f9a8 |
| hadoop-mapreduce-client-app test log | https://builds.apache.org/job/PreCommit-YARN-Build/7834/artifact/patchprocess/testrun_hadoop-mapreduce-client-app.txt |
| Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/7834/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf903.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/7834/console |


This message was automatically generated., Move it to MAPREDUCE project given change only on MR side. Kick off Jenkins test manually again., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  15m 20s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:red}-1{color} | tests included |   0m  0s | The patch doesn't appear to include any new or modified tests.  Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. |
| {color:green}+1{color} | javac |   7m 40s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 50s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:green}+1{color} | checkstyle |   0m 37s | There were no new checkstyle issues. |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 39s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 33s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   0m 57s | The patch does not introduce any new Findbugs (version 2.0.3) warnings. |
| {color:green}+1{color} | mapreduce tests |   9m 28s | Tests passed in hadoop-mapreduce-client-app. |
| | |  46m 29s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12708597/YARN-3423.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 6471d18 |
| hadoop-mapreduce-client-app test log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5691/artifact/patchprocess/testrun_hadoop-mapreduce-client-app.txt |
| Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5691/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf904.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5691/console |


This message was automatically generated., I have commit this patch to trunk and branch-2. 
Thanks [~zhaoyunjiong] for contributing the patch and congratulations to the first patch contribution!
Also, Thanks review comments from [~aroop], [~adhoot] and [~kasha]! , FAILURE: Integrated in Hadoop-trunk-Commit #7784 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7784/])
MAPREDUCE-6359. In RM HA setup, Cluster tab links populated with AM hostname instead of RM. Contributed by zhaoyunjiong. (junping_du: rev df36ad0a08261b03c250b6f745b27e5f83e4286e)
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AppController.java
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk-Java8 #190 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/190/])
MAPREDUCE-6359. In RM HA setup, Cluster tab links populated with AM hostname instead of RM. Contributed by zhaoyunjiong. (junping_du: rev df36ad0a08261b03c250b6f745b27e5f83e4286e)
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AppController.java
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #2138 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2138/])
MAPREDUCE-6359. In RM HA setup, Cluster tab links populated with AM hostname instead of RM. Contributed by zhaoyunjiong. (junping_du: rev df36ad0a08261b03c250b6f745b27e5f83e4286e)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AppController.java
* hadoop-mapreduce-project/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Yarn-trunk-Java8 #192 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/192/])
MAPREDUCE-6359. In RM HA setup, Cluster tab links populated with AM hostname instead of RM. Contributed by zhaoyunjiong. (junping_du: rev df36ad0a08261b03c250b6f745b27e5f83e4286e)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AppController.java
* hadoop-mapreduce-project/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Yarn-trunk #923 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/923/])
MAPREDUCE-6359. In RM HA setup, Cluster tab links populated with AM hostname instead of RM. Contributed by zhaoyunjiong. (junping_du: rev df36ad0a08261b03c250b6f745b27e5f83e4286e)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AppController.java
* hadoop-mapreduce-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2121 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2121/])
MAPREDUCE-6359. In RM HA setup, Cluster tab links populated with AM hostname instead of RM. Contributed by zhaoyunjiong. (junping_du: rev df36ad0a08261b03c250b6f745b27e5f83e4286e)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AppController.java
* hadoop-mapreduce-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #181 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/181/])
MAPREDUCE-6359. In RM HA setup, Cluster tab links populated with AM hostname instead of RM. Contributed by zhaoyunjiong. (junping_du: rev df36ad0a08261b03c250b6f745b27e5f83e4286e)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AppController.java
* hadoop-mapreduce-project/CHANGES.txt
, Thanks for you time to review the patch.]