[Sorry, forgot to add the attachment earlier. This added test will fail., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12547217/MAPREDUCE-4694.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

                  org.apache.hadoop.mapred.TestFieldSelection
                  org.apache.hadoop.mapreduce.TestMROutputFormat
                  org.apache.hadoop.mapreduce.lib.chain.TestChainErrors
                  org.apache.hadoop.mapreduce.lib.aggregate.TestMapReduceAggregates
                  org.apache.hadoop.mapreduce.TestValueIterReset
                  org.apache.hadoop.mapreduce.lib.output.TestMRMultipleOutputs
                  org.apache.hadoop.mapred.TestMapRed
                  org.apache.hadoop.mapred.lib.TestMultipleOutputs
                  org.apache.hadoop.mapred.TestReporter
                  org.apache.hadoop.mapred.TestCollect
                  org.apache.hadoop.mapred.TestTaskCommit
                  org.apache.hadoop.mapreduce.TestMapReduce
                  org.apache.hadoop.mapred.TestJobCounters
                  org.apache.hadoop.mapreduce.TestCrossAPICounters
                  org.apache.hadoop.mapreduce.lib.db.TestDataDrivenDBInputFormat
                  org.apache.hadoop.mapreduce.lib.input.TestMultipleInputs
                  org.apache.hadoop.mapred.TestLocalMRNotification
                  org.apache.hadoop.fs.TestDFSIO
                  org.apache.hadoop.mapred.TestSpecialCharactersInOutputPath
                  org.apache.hadoop.mapred.lib.TestMultithreadedMapRunner
                  org.apache.hadoop.mapreduce.lib.chain.TestSingleElementChain
                  org.apache.hadoop.fs.slive.TestSlive
                  org.apache.hadoop.mapred.TestLineRecordReader
                  org.apache.hadoop.mapred.TestUserDefinedCounters
                  org.apache.hadoop.mapred.TestMapOutputType
                  org.apache.hadoop.mapred.lib.aggregate.TestAggregates
                  org.apache.hadoop.conf.TestNoDefaultsJobConf
                  org.apache.hadoop.mapreduce.lib.input.TestLineRecordReader
                  org.apache.hadoop.fs.TestFileSystem
                  org.apache.hadoop.mapred.lib.TestChainMapReduce
                  org.apache.hadoop.mapred.join.TestDatamerge
                  org.apache.hadoop.mapred.jobcontrol.TestLocalJobControl
                  org.apache.hadoop.mapred.TestJavaSerialization
                  org.apache.hadoop.mapred.lib.TestKeyFieldBasedComparator
                  org.apache.hadoop.mapreduce.lib.join.TestJoinDatamerge
                  org.apache.hadoop.mapreduce.TestLocalRunner
                  org.apache.hadoop.mapreduce.lib.fieldsel.TestMRFieldSelection
                  org.apache.hadoop.mapred.TestComparators
                  org.apache.hadoop.mapreduce.lib.partition.TestMRKeyFieldBasedComparator
                  org.apache.hadoop.mapreduce.TestMapCollection
                  org.apache.hadoop.mapreduce.lib.map.TestMultithreadedMapper
                  org.apache.hadoop.mapred.TestFileOutputFormat
                  org.apache.hadoop.mapreduce.lib.chain.TestMapReduceChain

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/2894//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/2894//console

This message is automatically generated., All tests failed with "No valid local directories in property: mapreduce.cluster.local.dir". Investigating (had these locally pre-apply as well)., Alright, my MAPREDUCE-3223 commit caused this. Hadn't realized it was a still needed property for local execution. Opened MAPREDUCE-4695 to fix it., With MAPREDUCE-4695 fixed, lets try this one more time. Attached test does fail locally for me now., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12547238/MAPREDUCE-4694.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

                  org.apache.hadoop.mapreduce.TestCrossAPICounters

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/2897//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/2897//console

This message is automatically generated., Which behavior is better? I feel we ought to _always_ count what is given in. These counters are sorta like test-cases to illustrate that MR is working right.

However, if tools like Hive and Pig rely on counters, this is pretty serious for their move to new API if they've grown to rely such a count behavior in the old API?, Test is only to prove the flaw, cancelling patch until we've discussed a fix., Seems like an interesting case. +1 to the new API and backport of the logic. 

Would seem to me that the counters should reflect the framework performance and general data flow, rather than the user specific application. , This bug's existed for over 5 years now. I've not seen new complaints/interest in unifying the behaviour. Closing out as expected behaviour.]