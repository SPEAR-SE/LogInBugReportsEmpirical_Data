[Attached full application master logs illustrating the failure, AFAIK, Limits class does not honour job specific overwrites. Correct me if I am wrong

Please provide your feedback on the following approach.
																																																																																																																												
# Adding *JOB_CONF_FILE* as a resource to conf object of Limits class, will override the default values with job specific values.
# AFAIK, as the limits check of the counter's should be made while at job's running time, disabling limits check while accessing counters using UI (either HS or Proxy) and while deserializing counters at HS side. I *think* they merely display existing/sofar counters of jobs/tasks., The Job History page not showing up is separate form this issue.  It is because the AM crashed before it could put the job history log file in the proper place.  This is covered by MAPREDUCE-4428.  

What we need to do here is to first fix the error so that if a Job runs over the counters limit it will not cause the AM to crash violently.  It should exit gracefully with a proper error message and cleaning up after itself. Second we need to verify that if we set the counter limit in the job conf either it does not pass through, or if it does, it does not have the potential to cause the History server to crash with OOM errors and the like., As suggested by Robert, I am dividing this JIRA to 2 parts

1. I will cover the crash of the AM and others if counter size increases to this JIRA.
2. History server is not able to show jobs which has more counters, is tracked by MAPREDUCE-5149

Working on the patch, will update soon

Thanks,
Mayank
, Adding initial patch for review.
Test cases will follow soon.

Thanks,
Mayank, Adding Test Case.

Thanks,
Mayank, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12579050/MAPREDUCE-4443-trunk-1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 4 new Findbugs (version 1.3.9) warnings.

        {color:red}-1 release audit{color}.  The applied patch generated 1 release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3529//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3529//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3529//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-mapreduce-client-core.html
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3529//console

This message is automatically generated., Attaching patch

Thanks,
Mayank, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12579104/MAPREDUCE-4443-trunk-2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3532//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3532//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-mapreduce-client-core.html
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3532//console

This message is automatically generated., Fixing findbugs warnings

Thanks,
Mayank, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12579168/MAPREDUCE-4443-trunk-3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3534//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3534//console

This message is automatically generated., Seems like this is patch available for long time. Looks useful to me. Lets get this in. Also, I have raised MAPREDUCE-5680 which is larger in scope than this., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12579168/MAPREDUCE-4443-trunk-3.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4263//console

This message is automatically generated., Agreed, we should get this patch in, and longer term should remove the counter limits or at least use much higher limit values with yarn, [~revans2]  / [~mayank_bansal] Can we get this in ? , {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12579168/MAPREDUCE-4443-trunk-3.patch
  against trunk revision 53a28af.

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5332//console

This message is automatically generated., It looks like this issue is already obsolete. MAPREDUCE-5875 can cover most of the issue, because the following code added in JobSubmitter.java: 
{code}
Limits.reset(conf);
{code}

The Counters created at TypeConverter.fromYarn will use the correct counter limits set in  JobSubmitter#submitJobInternal
MAPREDUCE-5875 will most likely solve this issue and also the application can always call Limits.reset(conf) manually to configure the counter limits.
I think we can resolve this issue as duplicate as MAPREDUCE-5875.]