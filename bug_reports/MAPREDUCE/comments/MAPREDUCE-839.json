[The problem is discovered on Mac OS-X. But I tried to list the root causes that could also affect non-mac-os-x platforms:

Line 66:          assertEquals(tmp, new Path(System.getProperty("java.io.tmpdir")). makeQualified(localFs).toString());
expected = "file:/[private/]tmp/hadoop-htang/map...", actual = "file:/[]tmp/hadoop-htang/map...".
Root cause: on Mac OS-X, /tmp is symlink to /private/tmp. The test probably would fail on normal unix systems if /tmp is also symlinked.

Line 160:       assertTrue("LD doesnt contain pwd",  System.getenv("LD_LIBRARY_PATH").contains(pwd));
Root cause: the environment variable for dynamic library on Mac OS-X is DYLD_LIBRARY_PATH instead of LD_LIBRARY_PATH
, Hong,
Even we have seen this issue. The reason is what you have mentioned. I think most of the testcases would break if we have configured paths having symlinks. , I see this too. Disable the test on OS-X? Or is there a way to come up with something that works everywhere., I did some further investigation, and it seems that both errors were caused by "/tmp" being symlinked to "/private/tmp" on os-x. I propose a solution to allow people to customize the absolute and relative tmp directories being tested., Attached is the patch that incorporate the idea - using environment variables TEMP and TMP to override the default absolute and relative path.

To run unit test on OS-X, one needs to invoke the command like the following:
{noformat}
env TEMP=`pwd`/build/tmp TMP=build/tmp ant test-core -Dhadoop.tmp.dir=`pwd`/build/tmp 
{noformat}

hadoop.tmp.dir needs to be modified because it defaults to /tmp/hadoop-${user}/., test and test-patch passed on my local machine:
{noformat}
     [exec] +1 overall.  
     [exec] 
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec] 
     [exec]     +1 tests included.  The patch appears to include 3 new or modified tests.
     [exec] 
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec] 
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec] 
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
     [exec] 
     [exec]     +1 release audit.  The applied patch does not increase the total number of release audit warnings.
{noformat}, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12418043/mapreduce-839-20090828.patch
  against trunk revision 808730.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-vesta.apache.org/539/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-vesta.apache.org/539/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-vesta.apache.org/539/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-vesta.apache.org/539/console

This message is automatically generated., The failures reported by hudson does not seem to be related to the patch. Resubmitting., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12418043/mapreduce-839-20090828.patch
  against trunk revision 808730.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/27/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/27/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/27/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/27/console

This message is automatically generated., # I'd be happier driving this from JVM properties than env variables, as its easier to set up JVM properties under a debugger or from build.properties.

# Assuming <junit> is forking, you can set up env variables to pass down
, bq.  I'd be happier driving this from JVM properties than env variables, as its easier to set up JVM properties under a debugger or from build.properties.
The reason I choose to inspect env variables TEMP and TMP is because if they are set, we should try to honor those locations. But I am fine to support using JVM properties (in case altering the global TMP/TEMP would affect other test cases).

bq. Assuming <junit> is forking, you can set up env variables to pass down
Not quite clear what you mean, do you suggest to test whether the aforementioned properties are set, and if so, set env variables TEMP and TMP to those values?, New patch that relies on properties instead of environment variables. The defaults of these properties are derived from system environment variables $TMP and $TEMP. Running test-patch locally now., Removed a few unused imports., test-patch and run-commit-test passed on my local machine.

     [exec] +1 overall.  
     [exec] 
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec] 
     [exec]     +1 tests included.  The patch appears to include 7 new or modified tests.
     [exec] 
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec] 
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec] 
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
     [exec] 
     [exec]     +1 release audit.  The applied patch does not increase the total number of release audit warnings., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12419206/mapreduce-839-20090910-2.patch
  against trunk revision 813308.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 7 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/57/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/57/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/57/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/57/console

This message is automatically generated., Not sure why the TestMiniMRWithDFS fails since the patch does not touch the test. I rerun the test locally and it passed.

{noformat}
%  ant test-core -Dtestcase=TestMiniMRWithDFS
[ ... lines omitted ... ]
run-test-mapred:
   [delete] Deleting directory /Users/htang/Documents/Work/workspace/mr-test-patch/build/test/data
    [mkdir] Created dir: /Users/htang/Documents/Work/workspace/mr-test-patch/build/test/data
   [delete] Deleting directory /Users/htang/Documents/Work/workspace/mr-test-patch/build/test/logs
    [mkdir] Created dir: /Users/htang/Documents/Work/workspace/mr-test-patch/build/test/logs
    [junit] Running org.apache.hadoop.mapred.TestMiniMRWithDFS
    [junit] Tests run: 2, Failures: 0, Errors: 0, Time elapsed: 173.188 sec
{noformat}, Resubmitting for Hudson consideration., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12419206/mapreduce-839-20090910-2.patch
  against trunk revision 813660.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 7 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/65/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/65/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/65/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/65/console

This message is automatically generated., +1 .... 

very minor nit .... you could just do path.isAbsolute() instead of string.startswith("/")..... , Patch that incorporates Mahadev's suggestion., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12419442/mapreduce-839-20090913.patch
  against trunk revision 814122.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 7 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/72/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/72/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/72/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/72/console

This message is automatically generated., I just committed this. thanks hong., Integrated in Hadoop-Mapreduce-trunk-Commit #36 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-Mapreduce-trunk-Commit/36/])
    . unit test TestMiniMRChildTask fails on mac os-x (hong tang via mahadev)
, Integrated in Hadoop-Mapreduce-trunk #83 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-Mapreduce-trunk/83/])
    . unit test TestMiniMRChildTask fails on mac os-x (hong tang via mahadev)
]