[1) Calls ToolRunner.run
2) Took out catch(Excepttion e) and let main fail with stack dump. At least return value would be non-zero., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12415555/mapreduce-826-1.patch
  against trunk revision 812546.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/50/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/50/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/50/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/50/console

This message is automatically generated., can we wrap the exception around try and catch and not let main() throw the exception at the console?

you can do this:

{code}
int ret = 0;

try{
  ret = ToolRunner.run(harchives, args);
} catch(Exception e) {
  LOG.debug("Exception in archives  ", e);
  System.err.println(e.getLocalizedMessage());
  System.exit(1);
}
System.exit(ret);
{code}, Thanks Mahadev. Made the change.

Since this is a patch around main, didn't find a straight forward way to do a unit test.

One manual test.  Before the patch.
$ hadoop archive -archiveName myhar.har -p /tmp/somenonexistdir  somedir /user/knoguchi
null
$ echo $?
0

After the patch, 

$ hadoop archive -archiveName myhar.har -p /tmp/somenonexistdir  somedir /user/knoguchi
Exception in archives
null
lieliftbean-lm:trunk knoguchi$ echo $?
1

I guess we should also fix the NPE when src doesn't exist.  I'm leaving it for now since this was a good manual test case.

, +1 looks good... , -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12419080/mapreduce-826-2.patch
  against trunk revision 813140.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/22/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/22/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/22/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/22/console

This message is automatically generated., its a very minor change, It should be ok without a test... Ill go ahead and commit it., I just committed this. thanks koji, Integrated in Hadoop-Mapreduce-trunk-Commit #36 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-Mapreduce-trunk-Commit/36/])
    . harchive doesn't use ToolRunner / harchive returns 0 even if the job fails with exception (koji Noguchi via mahadev)
, Integrated in Hadoop-Mapreduce-trunk #83 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-Mapreduce-trunk/83/])
    . harchive doesn't use ToolRunner / harchive returns 0 even if the job fails with exception (koji Noguchi via mahadev)
, Can we have this backported to 0.20 branch as well? 
Same patch applies.

1) Probably very rarely, but there's a chance that archive command gets an Exception (besides IOException) and still returns 0 (success).
    Without this patch, I'm not comfortable asking users to start trying archive (and deleting the original files).

2) Without ToolRunner, users need to explicitly edit a config to run on different mapreduce queues. 

, +1 ill commit this to 0.20 branch.. after running the tests... , +1 the tests passed .... except for TestHdfsProxy with ParseCliExceptions (unrelated to the patch)
, I just committed this to the 0.20 branch... ]