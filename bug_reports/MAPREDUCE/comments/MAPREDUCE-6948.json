[I have been unable to reproduce this problem in trunk, nor in branch-2.8.   I have been able to repro in branch-2.7, but only by adding a sleep to exacerbate the race condition.

Analysis:
The key point in the failure case is here:
{{2017-08-30 10:12:22,000 INFO  [Thread-49] impl.JobImpl (JobImpl.java:transition(1953)) - Num completed Tasks: 1
2017-08-30 10:12:22,029 INFO  [Thread-49] impl.JobImpl (JobImpl.java:transition(1953)) - Num completed Tasks: 2
2017-08-30 10:12:22,032 INFO  [Thread-49] impl.JobImpl (JobImpl.java:actOnUnusableNode(1354)) - TaskAttempt killed because it ran on unusable node Mock for NodeId, hashCode: 1280187896. AttemptId:attempt_1234567890000_0001_m_000000_0
2017-08-30 10:12:22,032 INFO  [Thread-49] impl.JobImpl (JobImpl.java:transition(1953)) - Num completed Tasks: 3
}}
At this point Num completed tasks should be 2.  Since it is 3, we start moving to the COMMITTED state too early and trip the failure.
In the successful case, the log looks like this:
{{2017-12-15 16:16:54,253 INFO  [Thread-0] impl.JobImpl (JobImpl.java:transition(1979)) - Num completed Tasks: 1
2017-12-15 16:16:54,258 INFO  [Thread-0] impl.JobImpl (JobImpl.java:transition(1979)) - Num completed Tasks: 2
2017-12-15 16:16:54,260 INFO  [Thread-0] impl.JobImpl (JobImpl.java:actOnUnusableNode(1359)) - TaskAttempt killed because it ran on unusable node Mock for NodeId, hashCode: 131679889. AttemptId:attempt_1234567890000_0001_m_000000_0
2017-12-15 16:16:54,261 INFO  [Thread-0] impl.JobImpl (JobImpl.java:transition(1979)) - Num completed Tasks: 2
2017-12-15 16:16:54,262 INFO  [Thread-0] impl.JobImpl (JobImpl.java:checkReadyForCompletionWhenAllReducersDone(2103)) - Killing map task task_1234567890000_0001_m_000000
2017-12-15 16:16:54,263 INFO  [Thread-0] impl.JobImpl (JobImpl.java:checkReadyForCompletionWhenAllReducersDone(2103)) - Killing map task task_1234567890000_0001_m_000001
2017-12-15 16:16:54,263 INFO  [Thread-0] impl.JobImpl (JobImpl.java:transition(1979)) - Num completed Tasks: 3}}

The second Num Completed Tasks:2 line corresponds to when we mark the Reducer task as SUCCEEDED.  At this point, the count of succeeded map tasks should be 1, because it was just decremented due to the unusable node.  It is incremented to 2 before printing.

The difference between branch-2.7, which fails, and trunk/branch-2.8 is the fix in MAPREDUCE-6675, which switched it to use a DrainDispatcher and added a dispatcher.await() call before we complete the reducer.

Another possible factor is YARN-5436, which fixed a very similar race in DrainDispatcher.  That one is present in trunk, but not in branch-2.8.  So it may account for intermittent failures in branch-2.8, but I was not able to reproduce it.

So as far as I can tell, this appears to be fixed already.

[~haibo.chen], can you provide any insight?  Any chance this failure was seen on branch-2.8 or branch-2.7?

, Propose we close this.

[~jlowe], [~haibochen], do you agree?

 , It looks like this was reported against 3.0.0-alpha4.  All of the proposed fixes for this would also be in 3.0.0-alpha4, so if Haibo can confirm this occurred on alpha4 then it could still be a valid issue., This was observed in alpha4, so I suspect there is another race condition., [~jlowe], [~haibochen], I tried to reproduce this again in branch-2.7 and branch-3.0.   I ran this test in a loop for more than an hour on each, and was not able to get it to fail.

In branch-2.7, I can get it to fail as reported by inserting a sleep into the taskAttemptEventHandler right before it decrements the succeededMapperCount().   If I do the same thing in branch-3.0, it does not fail (due to the aforementioned fixes in [MAPREDUCE-6675]).

I searched for this test in apache issues, and the only reference I found was this comment by [~haibochen] in [MAPREDUCE-6937]:

{quote}
+1 on the branch-2.7-v5 patch. I have filed MAPREDUCE-6948 for the unit test failure TestJobImpl.testUnusableNodeTransition. 
{quote}

That comment looks like it is in response to branch-2.7 test failures.  hadoop.mapreduce.v2.app.job.impl.TestJobImpl is only listed as failing in the branch-2.7 tests.

[~haibochen], did you reproduce the failure on 3.0.0-alpha4?  Is it possible this was intended to be filed against branch 2.7 as a result of the test failures from [MAPREDUCE-6937]?

The race does still appear to exist on branch 2.7, so we may want to consider pulling [MAPREDUCE-6675] back to that branch.
, [~haibochen], [~jlowe], based on my last comment from May, I propose we close this and re-open if it recurs.

 , I am okay with closing this for now., I agree as well.  I have not seen any recent precommit failures on 3.x releases for this unit test.]