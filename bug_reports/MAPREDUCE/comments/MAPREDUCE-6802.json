[similar to MAPREDUCE-6801 but this bug is related to ppc64le., On further debugging we found that the issue is related to the performance of MRApp.submit().

In case of failure:
Just after app.submit() method, app.waitForState(job,JobState.RUNNING) is getting Job state as RUNNING but the Task state is NEW. When JOB_KILL event is triggered, there is no transition which can change the Task state from NEW. Hence the Task state is remaining in the NEW state itself.
, [~yussufshaikh] I believe this is a sub case of MAPREDUCE-6801. The root cause for cases is the same, that is, the event handler thread not being able to process events on time. The external state of a job that we observe does not indicate progress of the event handler thread.  For example, when the job goes into RUNNING state, it just means that all tasks have been created. Depending on how fast the event handler thread is, the tasks could still be in NEW, or SCHEDULED or RUNNING., [~haibochen] Even I think same.
I suggest along with waitForState on the job, add a line in the test case to waitForState for the task to be SCHEDULED state.
Have tested above workaround on Power and it worked every time., [~yussufshaikh] I have posted a fix for MAPREDUCE-6801, which I believe includes MAPREDUCE-6802 as well. Will close this one as duplicate. Feel free to reopen if think otherwise.]