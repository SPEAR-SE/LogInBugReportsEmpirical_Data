[Patch attached. Confirmed that running pi with mapred.compress.map.output and no native libraries now works., If the user has asked for the output to be compressed but it can't get a compressor then is a warning sufficient? It probably is, since it doesn't impact correctness, only efficiency. Do others agree?

Eli, is it possible to add a unit test for this?, I made it a warning since GzipCodec can function w/o native libraries (kind of, it provides java input and output streams, eg GzipOutputStream, though it returns null for createCompressor) and didn't want this to stop something that should otherwise work (ie the user specifying org.apache.hadoop.io.compress.GzipCodec doesn't imply native libraries must be used). However it does seem like they should be notified that they requested a codec that can't be created. How about CodecPool#getCompressor throws an exception instead of returning null indicating it couldn't get a compressor for the given codec (because codec.createCompressor() returned null)? 

I could add a test that covers this method in TestCodec. I think adding a test to TestReduceTask that uses a Gzip codec would also cover this., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12444268/mapred-1784-1.patch
  against trunk revision 943372.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/183/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/183/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/183/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/183/console

This message is automatically generated., Marking as open since it still needs a test., I merged HDFS-727 from trunk into branch-0.20, ran the libhdfs test and committed., Ignore the last comment, wrong jira., Patch attached.  Preserves the behavior of the last patch of logging rather than NPE. Adds new class TestIFile which fails w/o this change, passes with it.  , I've just committed this. Thanks Eli!, Integrated in Hadoop-Mapreduce-trunk-Commit #541 (See [https://hudson.apache.org/hudson/job/Hadoop-Mapreduce-trunk-Commit/541/])
    MAPREDUCE-1784. IFile should check for null compressor. Contributed by Eli Collins.
, Integrated in Hadoop-Mapreduce-trunk #643 (See [https://hudson.apache.org/hudson/job/Hadoop-Mapreduce-trunk/643/])
    ]