[In FileOutputCommiter v2, multiple reducers may call commitTask at the same time. If the outputs of reducers have directory structure with the same name, it may encounter problems with v2.

For example, if reducerA has output Dir1/File1, reducerB has output Dir1/File2. Since final output directory doesn't have Dir1, both reducers may call rename at the same time. This would end up with weird output directory structure like(Dir1/Dir1/File1, or Dir1/Dir/File2).

Therefore, we should remove FileSystem.rename from FileOutputCommitter#mergePaths method., Bumping up priority, and would like this to included in 2.7., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12704897/MAPREDUCE-6275.v1.patch
  against trunk revision 5608520.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5297//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5297//console

This message is automatically generated., [~l201514], thanks for v1.  We need a regression test for this patch, we can start with a scenario we seem to understand.

The fix should be always force the merge code path for the less common case when a task outputs to an extra subdir instead of doing any renames.

Note that mkdirs does not throw exception if the directory exists. Let us minimize {{exists}} because it's an extra RPC for getFileStatus.


 , Here is 002 patch. I have a reliable reproducer of my understanding of the problem. Without the product code fix the test fails as follows:
{code}
testConcurrentCommitTaskWithSubDirV2(org.apache.hadoop.mapreduce.lib.output.TestFileOutputCommitter)  Time elapsed: 249.209 sec  <<< FAILURE!
junit.framework.AssertionFailedError: Must not end up with sub_dir/sub_dir
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertFalse(Assert.java:39)
	at junit.framework.TestCase.assertFalse(TestCase.java:210)
	at org.apache.hadoop.mapreduce.lib.output.TestFileOutputCommitter.testConcurrentCommitTaskWithSubDir(TestFileOutputCommitter.java:542)
	at org.apache.hadoop.mapreduce.lib.output.TestFileOutputCommitter.testConcurrentCommitTaskWithSubDirV2(TestFileOutputCommitter.java:555)
{code}

[~ivan.bella], [~jlowe], [~dlmarion], please review., LGTM, appears to only do a rename for files, not directories., I reviewed the code and I believe this will resolve the issue.  We will deploy the previous release to prove it still fails and subsequently the patch.  We should be able to try out this patch by Friday., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12705157/MAPREDUCE-6275.002.patch
  against trunk revision 32b4330.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5302//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5302//console

This message is automatically generated., Thanks for working on the patch, Gera and Siqi!

I'm a little concerned about this portion of the patch:

{noformat}
+    if (from.isFile()) {
+      if (toStat != null) {
+        if (!fs.delete(to, true)) {
+          throw new IOException("Failed to delete " + to);
+        }
+      }
{noformat}

If we're trying to commit a file and there's a directory with the same name there, do we really want to recursively delete that directory?  Seems to me something is terribly amiss with the output (buggy output committer code?) and we should fail here rather than delete something we don't really understand.  Am I missing a valid use-case?  There's going to be some issues if a reducer wants to commit a file to that path while another reducer who wants to commit a directory to that path is still committing.

Nit: Not introduced by this change, but the test should use System.getProperty(java.io.tmpdir) instead of a hardcoded "/tmp".  Also "output" isn't a very unique pathname in light of unit tests running in parallel, and I'd recommend using the qualified classname as a prefix or just as-is to avoid collisions.

Otherwise patch looks good., Thanks Jason for a review.
 
Mis-formatted code was hurting my eyes and so patch appears bigger than it is after reformatting unless you diff -w. I did not change the semantics of the file replacement even if the existing path a directory. I am also not aware what is the background here, and tend to agree that we should have an extra check. Probably in a separate JIRA.

I don't think /tmp is hard coded here (if I am looking at the right file)
In o.a.h.m.lib.output.TestFileOutputCommitter 
{code}
  private static final Path outDir = new Path(
      System.getProperty("test.build.data", "/tmp"), "output");
{code}

test.build.data is recommended even on http://wiki.apache.org/hadoop/HowToContribute


, I would have to say if someone is creating a reducer that creates both files and directories of the same name, then the code will have to select one over the other or simply fail to merge.  I would think failing would be a better choice but perhaps there was a reason for the original choice.  In any case the original contract is being preserved here and that change should be a separate Jira ticket., bq.I did not change the semantics of the file replacement even if the existing path a directory. I am also not aware what is the background here, and tend to agree that we should have an extra check. Probably in a separate JIRA.

Ah, yes, I missed this is basically existing behavior.  Agree we can tackle this in a separate JIRA.

 bq. I don't think /tmp is hard coded here

It is hardcoded as the fallback for a missing test.build.data setting.  More specifically, I think it should be something like this:

{code}
private static final Path outDir = new Path(
      System.getProperty("test.build.data", System.getProperty("java.io.tmpdir")),
      TestFileOutputCommitter.class.getName());
{code}
, Addressing [~jlowe]'s review.

Minor modifications:
- thread pool shutdown in a finally block in TestFileOutputCommitter
- Surround LOG.debug by if (LOG.isDebugEnabled) in FileOutputCommitter, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12705461/MAPREDUCE-6275.003.patch
  against trunk revision 8c40e88.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5310//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5310//console

This message is automatically generated., +1 lgtm.  I'll commit this later today if there are no objections., Thanks, Jason!, We are ok with you committing this, however we will not have this tested at scale until tomorrow., We are ok with you committing this, however we will not have this tested at scale until tomorrow., I'd like to get this in today since 2.7 is trying to close up, and I think this is an important fix for that release.  Given Gera's unit test reproduces the scenario we believe is occurring and the patch fixes that issue, I think it's best to get this in now to make 2.7 and address any followup issues in a separate JIRA., Thanks to Gera and Siqi for the contribution and to Dave and Ivan for additional review!  I committed this to trunk, branch-2, and branch-2.7., FAILURE: Integrated in Hadoop-trunk-Commit #7377 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7377/])
MAPREDUCE-6275. Race condition in FileOutputCommitter v2 for user-specified task output subdirs. Contributed by Gera Shegalov and Siqi Li (jlowe: rev 91baca145a6c16fe13f455d150c05bd73179531b)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/test/java/org/apache/hadoop/mapreduce/lib/output/TestFileOutputCommitter.java
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/FileOutputCommitter.java
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #138 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/138/])
MAPREDUCE-6275. Race condition in FileOutputCommitter v2 for user-specified task output subdirs. Contributed by Gera Shegalov and Siqi Li (jlowe: rev 91baca145a6c16fe13f455d150c05bd73179531b)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/FileOutputCommitter.java
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/test/java/org/apache/hadoop/mapreduce/lib/output/TestFileOutputCommitter.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk #872 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/872/])
MAPREDUCE-6275. Race condition in FileOutputCommitter v2 for user-specified task output subdirs. Contributed by Gera Shegalov and Siqi Li (jlowe: rev 91baca145a6c16fe13f455d150c05bd73179531b)
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/FileOutputCommitter.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/test/java/org/apache/hadoop/mapreduce/lib/output/TestFileOutputCommitter.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2070 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2070/])
MAPREDUCE-6275. Race condition in FileOutputCommitter v2 for user-specified task output subdirs. Contributed by Gera Shegalov and Siqi Li (jlowe: rev 91baca145a6c16fe13f455d150c05bd73179531b)
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/FileOutputCommitter.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/test/java/org/apache/hadoop/mapreduce/lib/output/TestFileOutputCommitter.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #129 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/129/])
MAPREDUCE-6275. Race condition in FileOutputCommitter v2 for user-specified task output subdirs. Contributed by Gera Shegalov and Siqi Li (jlowe: rev 91baca145a6c16fe13f455d150c05bd73179531b)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/FileOutputCommitter.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/test/java/org/apache/hadoop/mapreduce/lib/output/TestFileOutputCommitter.java
* hadoop-mapreduce-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #138 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/138/])
MAPREDUCE-6275. Race condition in FileOutputCommitter v2 for user-specified task output subdirs. Contributed by Gera Shegalov and Siqi Li (jlowe: rev 91baca145a6c16fe13f455d150c05bd73179531b)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/test/java/org/apache/hadoop/mapreduce/lib/output/TestFileOutputCommitter.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/FileOutputCommitter.java
* hadoop-mapreduce-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2088 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2088/])
MAPREDUCE-6275. Race condition in FileOutputCommitter v2 for user-specified task output subdirs. Contributed by Gera Shegalov and Siqi Li (jlowe: rev 91baca145a6c16fe13f455d150c05bd73179531b)
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/test/java/org/apache/hadoop/mapreduce/lib/output/TestFileOutputCommitter.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/FileOutputCommitter.java
, Since applying this patch, we have not seen this issue crop up on our test system.  So there is a high likelihood that this issue has been put to rest., [~ivan.bella], thanks for giving it a try.]