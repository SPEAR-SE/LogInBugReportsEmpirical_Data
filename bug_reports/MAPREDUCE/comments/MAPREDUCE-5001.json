[I'm not sure that getJob is meant to be defined if the job associated with the given job ID is not running.  While it should not throw this exception, the correct behavior is probably for it to return null.

The preferred way to check whether a job has completed would be 
{code}
runningJob.getJobState() == JobStatus.RUNNING
{code}

More generally, runningJob.getJobStatus() should contain information about the job.  [~brocknoland], is what a JobStatus provides not sufficient?, Sandy,

I agree, I think the getJob() method returning null for a job which do not exist is fine. Another issue I should have mentioned is:

{noformat}
JobClient.get{Map,Reduce}TaskReports
{noformat}

throws an exception for the same reason. HIVE-4009 would be a non-issue if these methods returned null since the repeated use of JobClient.getJob() can likely be removed.
, [~sandyr], do you have an ETA on a patch?  Some of our Hive devs would love to see this fixed., Uploading a patch that catches the exception in Cluster#getJob and returns null.  An alternative approach I considered would be to modify ClientProtocol and get the job directly from the LocalJobRunner, which could do the appropriate synchronization.

It's hard to write a test for because reproducing the issue requires the file to be deleted in between when Configuration#loadResource checks whether the file exists and when it tries to read it.  I haven't had a chance to test it manually.

I can't devote a ton of time to it in the near future, so feel free to take over if it's urgent for you.  , Putting in patch available to kick the automated build/, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12592735/MAPREDUCE-5001.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3864//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3864//console

This message is automatically generated., +1, seems like a reasonable approach to try to fix this.  Agree that modifying ClientProtocol is probably not something we want to mess with at this point.  Committing this., SUCCESS: Integrated in Hadoop-trunk-Commit #4297 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/4297/])
MAPREDUCE-5001. LocalJobRunner has race condition resulting in job failures. Contributed by Sandy Ryza (jlowe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1515863)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Cluster.java
, Thanks, Sandy!  I committed this to trunk, branch-2, branch-2.1-beta, and branch-0.23., SUCCESS: Integrated in Hadoop-Yarn-trunk #308 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/308/])
MAPREDUCE-5001. LocalJobRunner has race condition resulting in job failures. Contributed by Sandy Ryza (jlowe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1515863)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Cluster.java
, FAILURE: Integrated in Hadoop-Hdfs-0.23-Build #706 (See [https://builds.apache.org/job/Hadoop-Hdfs-0.23-Build/706/])
svn merge -c 1515863 FIXES: MAPREDUCE-5001. LocalJobRunner has race condition resulting in job failures. Contributed by Sandy Ryza (jlowe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1515882)
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Cluster.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1525 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1525/])
MAPREDUCE-5001. LocalJobRunner has race condition resulting in job failures. Contributed by Sandy Ryza (jlowe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1515863)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Cluster.java
]