[The primary observation while testing TaskMemoryManager is that it is not able to prevent nodes from going down when rogue tasks start consuming memory. It currently does the following:
 - It monitors the memory usage of each task (the task jvm and the descendant processes), and makes sure that the task is failed if the task goes beyond its memory reqs(specified via mapred.task.maxvmem).
 - Further, it also monitors the memory usage of all tasks running on a TT and makes sure that cumulative memory usage doesn't cross a specific limit (Total TT Vmem less mapred.tasktracker.vmem.reserved) by killing the least-progress tasks to bring down the memory usage.

The per-task monitoring is working fine with tasks growing at a moderate rate of till/around 100MB/sec. There are problems with the cumulative-usage monitoring.
 - The limit mapred.task.limit.maxvmem is supposed originally to prevent jobs from asking too much memory. If a single task asks for memory nearing the total usable Vmem on the TT, we don't prevent the task from running and as of now just log at warn level in the TT if it crosses mapred.task.limit.maxvmem. This is very problematic without any support for memory-based scheduling as tasks can potentially bring down nodes and we have seen instances of this.
 - Even if the tasks are withing limits, as mapred.task.limit.maxvmem is really not enforced, cumulative usage near total usable Vmem on the TT brings down the node and we have seen instances of this too., The fix for this is to enforce mapred.task.limit.maxvmem either on the JT and TT. Any thoughts about the options?, This issue is resolved via HADOOP-5881. mapred.cluster.max.{map|reduce}.memory.mb properties which are the reincarnation of mapred.task.limit.maxvmem are now used to check the configuration of the jobs in the JT itself and jobs which ask for more than these properties are rejected by the JT itself. The problems in the current issue may still happen if these two new properties are improperly set, but no one can come to rescue in those cases.]