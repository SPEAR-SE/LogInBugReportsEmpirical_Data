[Simple fix.  No additional unit tests since this is fixing an existing test., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12555049/MAPREDUCE-4825.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3072//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3072//console

This message is automatically generated., The patch looks fine to me. +1

I'll check it in., Thanks Jason,

I put this in trunk, branch-2, and branch-0.23, Integrated in Hadoop-trunk-Commit #3069 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/3069/])
    MAPREDUCE-4825. JobImpl.finished doesn't expect ERROR as a final job state (jlowe via bobby) (Revision 1414840)

     Result = SUCCESS
bobby : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1414840
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java
, The JobImpl state machine allows SUCCEEDED->ERROR and FAILED->ERROR transition which would call finished(). Would there be a problem in metrics being notified of success/failure and then again of error?, Integrated in Hadoop-Yarn-trunk #51 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/51/])
    MAPREDUCE-4825. JobImpl.finished doesn't expect ERROR as a final job state (jlowe via bobby) (Revision 1414840)

     Result = SUCCESS
bobby : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1414840
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java
, Integrated in Hadoop-Hdfs-0.23-Build #450 (See [https://builds.apache.org/job/Hadoop-Hdfs-0.23-Build/450/])
    svn merge -c 1414840 FIXES: MAPREDUCE-4825. JobImpl.finished doesn't expect ERROR as a final job state (jlowe via bobby) (Revision 1414844)

     Result = SUCCESS
bobby : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1414844
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java
, Integrated in Hadoop-Hdfs-trunk #1241 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1241/])
    MAPREDUCE-4825. JobImpl.finished doesn't expect ERROR as a final job state (jlowe via bobby) (Revision 1414840)

     Result = FAILURE
bobby : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1414840
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java
, bq. Would there be a problem in metrics being notified of success/failure and then again of error?

Potentially, I forgot the job could leave these terminal states.  Some potential ways to address it:

* Don't allow the state to leave "terminal" states like SUCCEEDED/FAILED/KILLED.
* Add metrics for "errored" jobs to distinguish between failed and error.  This still means that the sum of metrics could exceed the total number of job since a job can both succeed and error.
* Have finished ignore incrementing any metrics if the job is already in a terminal state (SUCCEEDED/FAILED/KILLED) to avoid double-counting a job., Filed MAPREDUCE-4835 to track the metric double-counting problem. Thanks for pointing out the issue, Bikas!]