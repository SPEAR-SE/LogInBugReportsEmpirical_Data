[There is a {{TestJobConf}} class in both {{hadoop-mapreduce-client-jobclient}} and {{hadoop-mapreduce-client-core}}. Shouldnt they be merged ?, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12694445/MAPREDUCE-6223.001.patch
  against trunk revision 35f6496.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 13 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

                  org.apache.hadoop.mapreduce.TestLargeSort

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5120//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5120//artifact/patchprocess/newPatchFindbugsWarningshadoop-mapreduce-client-core.html
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5120//console

This message is automatically generated., Findbugs to be tracked by MAPREDUCE-6225., Thanks for taking this JIRA, [~varun_saxena]!

Regarding merging the 2 test classes, it makes sense to consolidate both TestJobConf but let us do it in a separate JIRA.

I think the test captured an overlooked case. Thus, instead of fixing the test code we should fix {{JobConf#getMemoryForMapTask}} and {{JobConf#getMemoryForReduceTask}}, Thanks for your comments, [~jira.shegalov]. 
bq. I think the test captured an overlooked case. Thus, instead of fixing the test code we should fix JobConf#getMemoryForMapTask and JobConf#getMemoryForReduceTask
Agree

Raised MAPREDUCE-6239 for merging of these 2 classes
, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12696034/MAPREDUCE-6223.002.patch
  against trunk revision 8acc5e9.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 13 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

                  org.apache.hadoop.mapreduce.TestLargeSort

                                      The following test timeouts occurred in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

org.apache.hadoop.mapreduce.lib.output.TestJobOutputCommitter

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5143//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5143//artifact/patchprocess/newPatchFindbugsWarningshadoop-mapreduce-client-core.html
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5143//console

This message is automatically generated., Findbugs as mentioned earlier will be addressed by MAPREDUCE-6225 and test failure is unrelated, Hi [~varun_saxena] and [~jira.shegalov], would you please take a look at MAPREDUCE-6234? The patch there will fix the failure.
Can I commit the patch first and then we improve the tests by this issue and MAPREDUCE-6225?, [~ajisakaa] / [~ozawa],
As you wish. Because currently test failures are appearing till MAPREDUCE-6223 is committed.
Ideally {{MRJobConfig.DEFAULT_MAP_MEMORY_MB}} should not be changed. I feel we should not be taking default value from a local variable.
MAPREDUCE-6234 hence will be a redundant fix as we will have to revert its changes again.

Although it is somewhat confusing that default value in mapred-default.xml is -1 and in code we take it as 1024. But if somebody reads the config description, which should be done, its quite clear what is the behavior of this config.
{code}
<description>
  The amount of memory to request from the scheduler for each 		
  map task. If this is not specified or is non-positive, it is inferred from
  mapreduce.map.java.opts and mapreduce.job.heap.memory-mb.ratio.
  If java-opts are also not specified, we set it to 1024.
</description>
{code}

You can take a call whether to commit that or not. Alternatively you can review and commit this as well., I think JobConf#getMemoryReuiqred should get 1024 from not local value but constant in MRJobConfig other than DEFAULT_*_MEMORY_MB because 1024 is never set in Configuration. [~ajisakaa] / [~ozawa], please commit the patch of this issue first. I will update the patch of MAPREDUCE-6234 later., s/not local value but//, Yeah getting it from another constant should be fine as well. , Thanks [~varun_saxena] and [~iwasakims] for the comments! I understand this issue should be fixed first.
The v2 patch looks good to me.
{code}
-    Assert.assertEquals(configuration.getMemoryForReduceTask(),2);
-    
+    Assert.assertEquals(configuration.getMemoryForReduceTask(),2);    
{code}
Would you please remove the trailing the whitespaces? I'm +1 after that is addressed., I would like to look at the patch before it is committed. , [~ajisakaa], updated a new patch, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12697264/MAPREDUCE-6223.003.patch
  against trunk revision cfb829e.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 13 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5176//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5176//artifact/patchprocess/newPatchFindbugsWarningshadoop-mapreduce-client-core.html
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5176//console

This message is automatically generated., Thanks [~varun_saxena] for updating the patch. +1 pending [~kasha]'s review. The findbugs warnings look unrelated to the patch., Patch looks mostly good to me. Nit: I would leave the test for negative values, but update the asserts to reflect the expected behavior. , [~kasha], you mean this test ?
{code}
  /**
  * Test that negative values for new configuration keys get passed through.		
  */		
  @Test		
  public void testNegativeValuesForMemoryParams() {		
    JobConf configuration = new JobConf();		

    configuration.set(MRJobConfig.MAP_MEMORY_MB, "-5");		
    configuration.set(MRJobConfig.REDUCE_MEMORY_MB, "-6");		
    Assert.assertEquals(-5, configuration.getMemoryForMapTask());		
    Assert.assertEquals(-6, configuration.getMemoryForReduceTask());		
}, Oops, that came out really bad. I meant the test below. :)
{code}	
@Test	
public void testNegativeValuesForMemoryParams() {
  JobConf configuration = new JobConf();
  configuration.set(MRJobConfig.MAP_MEMORY_MB, "-5");
  configuration.set(MRJobConfig.REDUCE_MEMORY_MB, "-6");
  Assert.assertEquals(-5, configuration.getMemoryForMapTask());
  Assert.assertEquals(-6, configuration.getMemoryForReduceTask());
}
{code}, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12697859/MAPREDUCE-6223.004.patch
  against trunk revision 3f5431a.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 13 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

                  org.apache.hadoop.mapred.TestClusterMapReduceTestCase

                                      The following test timeouts occurred in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

org.apache.hadoop.mapred.TestMRTimelineEventHandling
org.apache.hadoop.mapred.TestMRIntermediateDataEncryption

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5180//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5180//artifact/patchprocess/newPatchFindbugsWarningshadoop-mapreduce-client-core.html
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5180//console

This message is automatically generated., [~varun_saxena] I think Karthik meant the lines as follows in addition to the lines as you mentioned:
{code}
-    configuration.set(MRJobConfig.MAP_MEMORY_MB, String.valueOf(-1));
+    configuration.set(MRJobConfig.MAP_MEMORY_MB, String.valueOf(100));
{code}

{code}
-    configuration.set(MRJobConfig.REDUCE_MEMORY_MB, String.valueOf(-1));
+    configuration.set(MRJobConfig.REDUCE_MEMORY_MB, String.valueOf(200));
{code}

Would you update the case to include these cases?, [~ozawa], ok will update these cases AND upload a new patch, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12699116/MAPREDUCE-6223.005.patch
  against trunk revision 447bd7b.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 13 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5199//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5199//artifact/patchprocess/newPatchFindbugsWarningshadoop-mapreduce-client-core.html
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5199//console

This message is automatically generated., [~ozawa] / [~kasha], kindly review the changes, Sorry for the delay in following up, and bringing up another nit:

We should probably not log the memory used by MR task at info level. Also, it could use a little more description than "Value is" :), Oh. This is actually a leftover log. :)
Will remove it and upload a new patch, Uploading new patch after removing unnecessary log, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12701152/MAPREDUCE-6223.006.patch
  against trunk revision dce8b9c.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

                  org.apache.hadoop.mapreduce.v2.TestSpeculativeExecution
                  org.apache.hadoop.mapred.TestMRTimelineEventHandling
                  org.apache.hadoop.mapreduce.v2.TestMRJobsWithHistoryService
                  org.apache.hadoop.mapreduce.v2.TestMROldApiJobs
                  org.apache.hadoop.mapred.TestClusterMapReduceTestCase
                  org.apache.hadoop.mapreduce.lib.output.TestJobOutputCommitter

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5227//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5227//console

This message is automatically generated., Don't think the test failures are related. Latest patch looks good to me. +1. Will commit this shortly. , FAILURE: Integrated in Hadoop-trunk-Commit #7213 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7213/])
MAPREDUCE-6223. TestJobConf#testNegativeValueForTaskVmem failures. (Varun Saxena via kasha) (kasha: rev 1047c883ba01a252dbd4203e525fb1ff8ea313aa)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/conf/TestJobConf.java
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobConf.java
, Thanks Varun for working on this, and Tsuyoshi for help with reviews.

Just committed to trunk., FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #117 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/117/])
MAPREDUCE-6223. TestJobConf#testNegativeValueForTaskVmem failures. (Varun Saxena via kasha) (kasha: rev 1047c883ba01a252dbd4203e525fb1ff8ea313aa)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobConf.java
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/conf/TestJobConf.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk #851 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/851/])
MAPREDUCE-6223. TestJobConf#testNegativeValueForTaskVmem failures. (Varun Saxena via kasha) (kasha: rev 1047c883ba01a252dbd4203e525fb1ff8ea313aa)
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/conf/TestJobConf.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobConf.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2049 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2049/])
MAPREDUCE-6223. TestJobConf#testNegativeValueForTaskVmem failures. (Varun Saxena via kasha) (kasha: rev 1047c883ba01a252dbd4203e525fb1ff8ea313aa)
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobConf.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/conf/TestJobConf.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #108 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/108/])
MAPREDUCE-6223. TestJobConf#testNegativeValueForTaskVmem failures. (Varun Saxena via kasha) (kasha: rev 1047c883ba01a252dbd4203e525fb1ff8ea313aa)
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/conf/TestJobConf.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobConf.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #117 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/117/])
MAPREDUCE-6223. TestJobConf#testNegativeValueForTaskVmem failures. (Varun Saxena via kasha) (kasha: rev 1047c883ba01a252dbd4203e525fb1ff8ea313aa)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/conf/TestJobConf.java
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobConf.java
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #2067 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2067/])
MAPREDUCE-6223. TestJobConf#testNegativeValueForTaskVmem failures. (Varun Saxena via kasha) (kasha: rev 1047c883ba01a252dbd4203e525fb1ff8ea313aa)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/conf/TestJobConf.java
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobConf.java
, Thanks [~kasha]/[~ozawa] for the review and commit, Same question here as I just posed on MAPREDUCE-6234, do we need to mark this change as incompatible if it's only present with MAPREDUCE-5785, which is already marked incompatible and only in 3.0.0?]