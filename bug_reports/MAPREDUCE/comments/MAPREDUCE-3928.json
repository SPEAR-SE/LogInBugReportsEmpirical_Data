[bq. Another potential issue is that the RM and AM each have their own interpretation of a job's result, so the State and FinalStatus reported in the Cluster Metrics display may not align with the defined states in the Cluster pulldown.
This is the main point. Let me clarify:
 - The final state of the application is fundamentally different from the FinalStatus of the application.
 - FinalStatus of an application is a separate API for custom frameworks to expose their final status.
 - On the RM UI, the state always represents the state of the application.
 - In MapReduce case, a Failed/Killed job still corresponds to a FINISHED application.

Given that, is it that you are expecting Failed/Killed mapreduce jobs to appear under FAILED/KILLED applications list?, Yes, I think the confusion here is that a user is primarily interested in whether their job succeeded, failed, was killed, etc.  The filter links on the apps page implies one can quickly filter the apps to one of those states, yet apps that have failed or killed often don't show up under the FAILED or KILLED filters.  It's not clear on the web page that those only filter State instead of the FinalState, and many users may not understand or appreciate the distinction between State and FinalState (at least for MapReduce apps).

For example, it can be a bit confusing why a job that's killed via mapred job -kill shows up as KILLED / KILLED, while another job where the AM process is killed directly is listed as FINISHED / KILLED.

, bq. yet apps that have failed or killed often don't show up under the FAILED or KILLED filters
I think you mean "jobs that have failed or killed"..

bq. it can be a bit confusing why a job that's killed via mapred job -kill shows up as KILLED / KILLED
I am planning to change this. "mapred job -kill" should only affect job-state. We need to have a "app -kill" which works at an application level. I already have a WIP patch from some time back which we should get in.

bq. many users may not understand or appreciate the distinction between State and FinalState (at least for MapReduce apps).
This is the fundamental problem we should address. It is happening because the concept of an application is new for mapreduce users.

IMO, we need to educate the users the distinction between applications vs jobs and appliation-state vs job-state.

If we agree to that, we can close this down as invalid and work on improving documentation to make the distinction between application and job very explicit., Agree that it is an issue of user education for now and hence closing the JIRA. 

In the future, though, we could potentially look at some interesting possibilities to reduce the learning curve for users transitioning from the 1.0 / 0.20 world such as having an MR specific GUI or maybe easier fixes such as column based filtering on the RM, but that is lower priority and can be dealt with as the community deems the best approach with an enhancement request at that time.



]