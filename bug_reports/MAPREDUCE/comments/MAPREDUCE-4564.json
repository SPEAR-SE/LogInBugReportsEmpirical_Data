[Solution is to make sure that termination of wintutils also terminates the job object. This patch adds code to do that by making the job object handle not inheritable and setting the job object to be terminated when the last handle is closed. When winutils exist (cleanly or crashed or killed) its handle to the job object will be closed. Since that is the only handle, closing it will terminate the job object.
Currently, winutils calls TerminateJobObject() before it exits. This ensures that the job object is destroyed when winutils exits. So the patch is consistent with the current approach. It enhances that by making sure the job object is terminated even when winutils is killed externally., +1

It seems space is missing after echo in the following line.
{code}+    String timeOutScript = "sleep 60000\n echo\" I am fine\"";{code}, Fixing the blank. Thanks for the review!, I just committed this. Thanks Bikas (and Chuan for the review).]