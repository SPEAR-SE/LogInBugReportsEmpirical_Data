[Bikas,

Thanks for creating separate JIRA.
I would like to work on this and will upload the patch soon.

Thanks, Attaching patch with the proposed fix., Sorry. I did not see any activity on this jira till eod so I went ahead and attached a patch for the fix. Its a very small change. Sorry about that.
Are you on a different time zone?
, I should have refreshed my browser before uploading the patch. Thats why I failed to see your comments. Sorry again., No problem :)
One suggestion from me that you can add test case also (TestTaskImpl.java)
As of now only one test case is there which addresses *map task + speculation + attempt failed*

I feel it would be better if you can add few more test cases as part of this patch.
{quote}
1. reduce task + speculation + attempt failed
2. reduce task + speculation + attempt killed
3. map task + speculation + attempt killed
{quote}

Thanks, You want to add them?, you can add as part of this patch., Thanks for reporting this issue, chackaravarthy.

It's confusing that MapRetroactiveKilledTransition and MapRetroactiveFailureTransition can happen for reduce tasks too - let's rename these classes as a part of this fix to reflect that they can handle reduce tasks., [~chaku88] I jumped the gun on the patch. So asked if you wanted to add to the patch too.

[~tomwhite] Thats a good suggestion. Let me look at fixing that., Bikas, I think the patch needs an additional change to ignore REDUCE tasks, instead of generating an INTERNAL_ERROR for the job. Scenario for this would be a Reduce task completing around the same time as a node being marked unhealthy., Yes I am taking care of that too., Attaching patch with fixes
1) Rename MapRetroactive* to Retroactive* because multi-task race conditions can make these execute for reduce and maps
2) Change RetroactiveKilled transition to first check if the killed attempt is same as the succeeded attempt. checking for map tasks after that case. This eliminates race conditions between concurrent reduce tasks. Adding tests for that in TestTaskImpl.java
3) Leaving the check and internalError() unchanged in Retroactive* transitions for reduce tasks. This is because currently its a system invariant that we dont fail/kill successful reduce tasks because the outputs are safe in hdfs. If we fail this check then it would change in the invariant caused by change in logic or a bug.
4) There is currently a bug/race condition that for the same reduce task successful completion and killed events might be in flight. This is fixed by making sure that successful reduce attempts dont kill themselves because that is inefficient incorrect behavior. Adding test coverage for that in existing testcase in TestMRApp.java, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12543379/MAPREDUCE-4607.2.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified test files.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/2807//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/2807//console

This message is automatically generated., Generally looks good.

* In TestTaskImpl the new methods don't actually test the reduce task type since the setup method is run before taskType is mutated to TaskType.REDUCE. You can fix this by changing the taskType instance to be a parameter that is passed when creating the mockTask, and in the reduce tests create a new mockTask that has the correct task type.
* Use Preconditions.checkArgument rather than Java asserts, since the latter are not normally enabled.
* In TaskImpl remove comment "only possible for map tasks"
* "import org.mortbay.log.Log" looks spurious., Made all changes. Good catch on the setup. My bad on that one. Since taskType is used in places other than mockTask I created a createMockTask() helper function that is called in setup and I use that in the reduce specific tests to override the default map mockTask that setup creates for me. The other option would be to do surgery in all tests and have all of them create their own mockTask by specifying taskType in the argument. I have verified in the debugger that the tasks are now created with expected type., Thanks for addressing the feedback, Bikas. How about passing the TaskType into the createMockTask() method? Then you can avoid the try/finally block completely and remove the taskType instance variable., Thats what I explained above.
The other option would be to do surgery in all tests and have all of them create their own mockTask by specifying taskType in the argument. setup() wont be able to pass parameters without context. Also, things like generating taskId in all tests use the taskType member outside of mockTask. I can make that change if you feel strongly about it. I made the minimal changes that suffice., Bikas, I'm attaching a patch based on yours to show what I meant. The default mockTask is still a map type, but the two cases where a reduce type is needed just replaces the mockTask with a new instance.

Let me know if you think this looks OK., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12544024/MAPREDUCE-4607.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified test files.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/2823//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/2823//console

This message is automatically generated., I see what you mean. Thats what I had figured earlier from your comments. If we are going to make these changes then I would say lets go the full way and make each test explicitly create the mock task instead of doing it in the setup() where there is no context. My original change was not good for readability but was the minimal local change. Your change is good for readability but we are stopping midway by making future changers have to think on why the reduce test has been special cased. So IMO lets make each test create mock tasks as appropriate in context. Its going to be same wrt perf but a lot better to read. In a sense the original tests were only using mappers and the current setup method made sense. Introducing reducer tests invalidates that approach. What do you think?, Sounds good to me., Are you working on it or shall I make the changes?, Please go ahead and make the changes and I'll review., Attaching patch with mock task changed., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12544492/MAPREDUCE-4607.4.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified test files.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/2835//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/2835//console

This message is automatically generated., I just committed this. Thanks Bikas!, Integrated in Hadoop-Common-trunk-Commit #2716 (See [https://builds.apache.org/job/Hadoop-Common-trunk-Commit/2716/])
    Update CHANGES.txt for MAPREDUCE-4607 commit. (Revision 1383423)
MAPREDUCE-4607. Race condition in ReduceTask completion can result in Task being incorrectly failed. Contributed by Bikas Saha. (Revision 1383422)

     Result = SUCCESS
tomwhite : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1383423
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt

tomwhite : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1383422
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskImpl.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/TestMRApp.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TestTaskImpl.java
, Integrated in Hadoop-Hdfs-trunk-Commit #2779 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Commit/2779/])
    Update CHANGES.txt for MAPREDUCE-4607 commit. (Revision 1383423)
MAPREDUCE-4607. Race condition in ReduceTask completion can result in Task being incorrectly failed. Contributed by Bikas Saha. (Revision 1383422)

     Result = SUCCESS
tomwhite : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1383423
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt

tomwhite : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1383422
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskImpl.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/TestMRApp.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TestTaskImpl.java
, Integrated in Hadoop-Mapreduce-trunk-Commit #2740 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Commit/2740/])
    Update CHANGES.txt for MAPREDUCE-4607 commit. (Revision 1383423)
MAPREDUCE-4607. Race condition in ReduceTask completion can result in Task being incorrectly failed. Contributed by Bikas Saha. (Revision 1383422)

     Result = FAILURE
tomwhite : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1383423
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt

tomwhite : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1383422
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskImpl.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/TestMRApp.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TestTaskImpl.java
, Thanks!, Integrated in Hadoop-Hdfs-trunk #1163 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1163/])
    Update CHANGES.txt for MAPREDUCE-4607 commit. (Revision 1383423)
MAPREDUCE-4607. Race condition in ReduceTask completion can result in Task being incorrectly failed. Contributed by Bikas Saha. (Revision 1383422)

     Result = FAILURE
tomwhite : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1383423
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt

tomwhite : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1383422
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskImpl.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/TestMRApp.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TestTaskImpl.java
, Integrated in Hadoop-Mapreduce-trunk #1194 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1194/])
    Update CHANGES.txt for MAPREDUCE-4607 commit. (Revision 1383423)
MAPREDUCE-4607. Race condition in ReduceTask completion can result in Task being incorrectly failed. Contributed by Bikas Saha. (Revision 1383422)

     Result = SUCCESS
tomwhite : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1383423
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt

tomwhite : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1383422
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskImpl.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/TestMRApp.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TestTaskImpl.java
]