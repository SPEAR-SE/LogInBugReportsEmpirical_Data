[Attaching Yahoo! distribution patch, tested it running test on a cluster with retired jobs., Attaching patch for 21 and trunk.

Using schedulers job list which always has only waiting/running jobs in it. in order which scheduler looks at it. Which makes the lastest job in last position., This is a duplicate of MAPREDUCE-1053, I started looking at the patch. Unfortunately, I think the current algorithm makes assumptions about how the scheduler works. So, while it works perfectly well for the CapacityTaskScheduler, it may not work correctly with the FairshareScheduler, because the latter removes jobs it maintains per pool lazily. Hence, there may be a case where the number of jobs returned by getJobsFromQueue is non-zero, but it doesn't mean the current job is submitted.

I think there is already an assumption that this test is run independently on a cluster, because it kills tasktrackers etc and could affect other jobs if they are run in parallel. For the same reason, jobs within the reliability test are run one after the other. So, wouldn't it be right to use jobsToComplete instead of getJobsFromQueue and as long as this is non-zero, we can assume it is the job most recently submitted ?

Some other minor points: 
- Can we update the documentation to say how the reliability test should be run ? For instance, we have to run it on a cluster that is not running other jobs, as stated above.
- Also, I would suggest we fail noisily if the last job we get is not in the PREP or RUNNING state, so that we wouldn't have false positive runs of the MRReliabiliy test., Attached patch fixes to use {{jobsToComplete()}} instead of {{getJobsFromQueue()}}.
Modified the javadoc and usage to mention that tests should run on a free cluster.
Also failing nosily if the job returned from the {{jobsToComplete()}} is complete., Missed out Hemanth's comment about removing the {{prevJobNum}}. Also corrected typo in documentation based on Hemanth's comment., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12421948/mapreduce-1062-2.patch
  against trunk revision 825055.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 4 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/72/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/72/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/72/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/72/console

This message is automatically generated., Looks OK to me. Sreekanth, can you confirm running reliability test with the retired jobs feature on is working now ?, Marking HADOOP-6269 as blocker for this issue, as the {{client.jobsToComplete()}} throws a concurrent modification exception, as two threads in code modify the same static level resource object.

The same behavior is not exhibited in 20 tho', Attaching Yahoo! distribution patch. The trunk patch is blocked by HADOOP-6269 as the {{JobClient.jobsToComplete()}} on trunk creates new JobConf and job submission is happening at same time causing a {{ConcurrentModificationException}} due to {{defaultResources}} being modified in the {{Configuration}} object., Re running thro' Hudson, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12422201/mapreduce-1062-3-ydist.patch
  against trunk revision 884628.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 4 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/274/console

This message is automatically generated., Attaching mapred-1062-3.patch as mapreduce-1062-4.patch for running thro' hudson., Cancelling patch and running thro' hudson with latest patch., Rerunning the patch thro' hudson., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12427293/mapreduce-1062-4.patch
  against trunk revision 888269.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 4 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/301/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/301/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/301/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/301/console

This message is automatically generated., I committed this. Thanks, Sreekanth!, Integrated in Hadoop-Mapreduce-trunk #291 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-Mapreduce-trunk/291/])
    MAPREDUCE-1062. Fix ReliabilityTest to work with retired jobs. Contributed by Sreekanth Ramakrishnan
]