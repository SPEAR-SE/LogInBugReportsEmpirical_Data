[It would be great if we can remove the dependence., I had a quick look and TestMRServerPorts tests things such as port clashes between the namenode and jobtracker, so I'm sure how feasible it is to remove the dependency. , Sorry, meant to say "I'm _not_ sure how feasible it is to remove the dependency"., bq. I had a quick look and TestMRServerPorts tests things such as port clashes between the namenode and jobtracker, so I'm sure how feasible it is to remove the dependency.

Use the public APIs in HDFS but not the unstable HDFS test codes.  Does it sound impossible?, It's certainly possible to rely only on the public HDFS API by duplicating some of the functionality of TestHDFSServerPorts in TestMRServerPorts (such as startNameNode()). Alternatively, we could mark these methods as LimitedPrivate like we did in MiniDFSCluster. I'd be happy with either approach., Sure, either way is good.

BTW, thanks for reporting this bug., Thanks Nicholas. I don't think I'll have time to produce a fix today, so if someone else wants to pick this up that would be good.

We could detect these kinds of errors by getting hudson to compile all three subprojects whenever it runs tests for one of them. Does that sound like a good change to make?, This should fix the build.
It used to be one test before project split therefore the dependency.
I reduced the dependencies, but did not eliminate them completely. 
Basically it needs to start and stop NN and DN, which can be done using MiniDFSCluter instead of using TestHDFSServerPorts methods. Another jira?, +1 patch looks good.

I also tested it manually.  It fixes the build and TestMRServerPorts., I have committed this.  Thanks, Konstantin!, Integrated in Hadoop-Mapreduce-trunk-Commit #580 (See [https://hudson.apache.org/hudson/job/Hadoop-Mapreduce-trunk-Commit/580/])
    MAPREDUCE-2282. Fix TestMRServerPorts for the changes in TestHDFSServerPorts.  Contributed by shv
, Integrated in Hadoop-Mapreduce-22-branch #33 (See [https://hudson.apache.org/hudson/job/Hadoop-Mapreduce-22-branch/33/])
    , Integrated in Hadoop-Mapreduce-trunk #643 (See [https://hudson.apache.org/hudson/job/Hadoop-Mapreduce-trunk/643/])
    ]