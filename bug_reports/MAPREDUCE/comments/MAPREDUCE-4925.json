[Uploading a trivial patch., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12563722/mr-4925.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3211//console

This message is automatically generated., I was reviewing the patch and 
{code:title=m4-4295.patch.java|borderStyle=solid}
+    for (int i = 0; i < args.length; i++) {
+      if (args[i].equalsIgnoreCase("-depth")) {
+        depth = Integer.parseInt(args[i++].trim());
+      } else if (args[i].equalsIgnoreCase("-height")) {
+        height = Integer.parseInt(args[i++].trim());
+      } else if (args[i].equalsIgnoreCase("-width")) {
+        width = Integer.parseInt(args[i++].trim());
+      }
+    }
{code}

I don't think this works. I believe we need to access the parameters like {{args[++i]}} instead of {{args[i++]}}
Can you confirm this worked?, Before this goes into 1.0 it really needs to be pulled into 2.0 and 0.23 too, otherwise there will be some regressions., Thanks Bobby. That makes sense. Let me upload patches for branch-2 and branch-0.23 also here., MAPREDUCE-4678 still suffers from a couple of issues:
# It introduces a regression in the sense that the user can't pass the arguments via -Dmapreduce.pentomino.depth etc.
# As Suren pointed out, passing the command line args through -depth, -width, -height is also broken.

Uploading mr-4925-trunk.patch to address these.

Once Jenkins +1s it, I ll upload the patches for branch-2, branch-0.23 and branch-1., For the trunk patch, I ran the example with arguments passed via both -depth format, and -Dmapreduce.pentomino.depth format, and no arguments (only <output>)., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12563824/mr-4925-trunk.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-examples.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3212//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3212//console

This message is automatically generated., Uploading patches for branch-2, branch-0.23 and branch-1, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12563892/mr-4925-branch-0.23.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3216//console

This message is automatically generated., Thanks Karthik,

The trunk patch looks good, and the complete backports. I'm updating my local copies, and will commit them shortly. +1, Karthik,

Committing backports of two fixes at once (this and the MAPREDUCE-4678 one) may not be a clean thing to do combined. Do you mind spinning off a new JIRA for the MAPREDUCE-4678 backport and leave this be for patches for the fix atop that jira (the opt parse bug)?

Let me know if you're strapped on time and I'll handle it for you., Hi Harsh

Thanks for taking a look. I created MAPREDUCE-4930 for this to follow your suggestion, but two patches for branch-1 seems like an overkill. Here is what I propose:
# Re-open MAPREDUCE-4678, and commit the patch there to branch-2 and branch-0.23
# This JIRA (MAPREDUCE-4925) fixes the bug introduced by 4678.
# In MAPREDUCE-4930, we can backport the above two in a single patch.

This way, we can make sure the commits are same on trunk, branch-2 and branch-0.23, so that all merges and stuff work well. We need not introduce a bug unnecessarily in branch-1, the example code and the entire code base is different, and it is in maintenance mode.

Hopefully, this is reasonable. Let me know if you think otherwise., Once MR-4678 is applied to branch-2 and branch-0.23, the trunk patch here applies to those branches as well. Once it is committed, I ll delete the incorrect patches for branch-2 and branch-0.23., +1 on trunk diff patch https://issues.apache.org/jira/secure/attachment/12563824/mr-4925-trunk.patch. Committing., Committed to trunk, branch-2 and branch-0.23. Thanks!, Integrated in Hadoop-trunk-Commit #3235 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/3235/])
    MAPREDUCE-4925. The pentomino option parser may be buggy. Contributed by Karthik Kambatla. (harsh) (Revision 1433414)

     Result = SUCCESS
harsh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1433414
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/dancing/DistributedPentomino.java
, Integrated in Hadoop-Yarn-trunk #98 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/98/])
    MAPREDUCE-4925. The pentomino option parser may be buggy. Contributed by Karthik Kambatla. (harsh) (Revision 1433414)

     Result = SUCCESS
harsh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1433414
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/dancing/DistributedPentomino.java
, Integrated in Hadoop-Hdfs-0.23-Build #496 (See [https://builds.apache.org/job/Hadoop-Hdfs-0.23-Build/496/])
    MAPREDUCE-4925. The pentomino option parser may be buggy. Contributed by Karthik Kambatla. (harsh) (Revision 1433417)

     Result = FAILURE
harsh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1433417
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/dancing/DistributedPentomino.java
, Integrated in Hadoop-Hdfs-trunk #1287 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1287/])
    MAPREDUCE-4925. The pentomino option parser may be buggy. Contributed by Karthik Kambatla. (harsh) (Revision 1433414)

     Result = FAILURE
harsh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1433414
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/dancing/DistributedPentomino.java
, Integrated in Hadoop-Mapreduce-trunk #1315 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1315/])
    MAPREDUCE-4925. The pentomino option parser may be buggy. Contributed by Karthik Kambatla. (harsh) (Revision 1433414)

     Result = FAILURE
harsh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1433414
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/dancing/DistributedPentomino.java
]