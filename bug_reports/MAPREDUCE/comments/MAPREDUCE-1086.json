[This issue is only with LinuxTaskController., Attaching patch for trunk.

Please review and provide your comments., Ravi, this looks mostly good.

I have very minor comments:

- I am thinking it makes sense to set the log parameters in HADOOP_CLIENT_OPTS than HADOOP_OPTS. This will make sure they get appended at the end and is more reliable. Further, I think we can assume that the streaming tasks only use the hadoop command line as a client.
- To be consistent with what is set in the scripts of Hadoop, I would recommend that the value of HADOOP_CLIENT_OPTS is enclosed in double quotes than single.
- We really don't need to convert taskId or log file size to Strings, as Java will do the conversion itself.
- In the test case, I suppose we can be a little more strict in verification. Can we check that the env contains 'INFO,TLA' as that's what we are setting. Likewise, we can also verify the log file size is set to a known value by setting it in the corresponding property in the Configuration., Attaching new patch with the suggested changes., Seems fine. Though not really related to this patch, the place where the localFS is being initialized can avoid a catch and ignore of the IOException, as it is anyway going to die with a NullPointerException later. Since this is indeed an exceptional condition, I would rather we throw the IOException. Looking at code paths, that actually seems to be handled better in the child tasks than NullPointerException is.

Also can you update the documentation of the getVMEnvironment API to include the new parameters ?

Other than these changes +1. Please make the new patch with these changes Patch Available., Attaching new patch with the suggested changes., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12422326/MR-1086.v1.1.patch
  against trunk revision 825469.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 4 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/176/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/176/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/176/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/176/console

This message is automatically generated., Canceling patch to fix the test failure. The test passes locally on my machine as well. But I suspect the reason it is failing on Hudson *may* be due to the fact that the streaming commands are written without specifying a shell. Naturally, it would be useful to add some log statements, at a minimum to print the output of the streaming job.

Another issue could be that we are using getBytes() to convert from String to bytes and writing the command to a file. Why not use the more standard BufferedWriter ?, Test failure on Hudson was because of the shell specific   statement  " cat >& /dev/null ". Modified it to " cat > /dev/null 2>&1" in this new patch., Letting the new patch go through Hudson..., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12422569/MR-1086.v1.2.patch
  against trunk revision 826635.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 4 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/186/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/186/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/186/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/186/console

This message is automatically generated., The changes are fine. Appears my diagnosis for the test failure was not correct. Thanks for fixing the correct bug.

+1., I just committed this to trunk and branch 0.21. Thanks, Ravi !, Integrated in Hadoop-Mapreduce-trunk-Commit #87 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-Mapreduce-trunk-Commit/87/])
    . Setup Hadoop logging environment for tasks to point to task related parameters. Contributed by Ravi Gummadi.
, Attaching patch for yahoo-hadoop-0.20 branch.
ant test and ant test-patch passed on my local machine., Verified the 20 patch. Looks fine., Integrated in Hadoop-Mapreduce-trunk #118 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-Mapreduce-trunk/118/])
    . Setup Hadoop logging environment for tasks to point to task related parameters. Contributed by Ravi Gummadi.
]