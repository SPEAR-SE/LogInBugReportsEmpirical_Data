[Patch fixing the bug.
Added unit tests for all possible paths for cleanup attempt getting KillTaskAction, when its main attempt is killed with KillTaskAction., submitting for hudson, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12431532/patch-1410.txt
  against trunk revision 903563.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 9 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/292/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/292/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/292/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/292/console

This message is automatically generated., bq. -1 core tests.
Test failure TestTaskTrackerBlacklisting is known issue (MAPREDUCE-1412), This patch no longer applies cleanly., Here's a new version of this patch that applies to current trunk., I just ran test-patch by hand on this.

{code}
+1 overall.  

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 9 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 system tests framework.  The patch passed system tests framework compile.
{code}, Existing patch wasn't valid anymore because 1) JobTracker.jobs don't hold completed job in memory any longer. 
2) Code was trying to contact namenode.  Added MiniDFSCluster.

The changes are only to Junit's and the original code fix remains as is in the patch, Ran test-patch

    [exec] -1 overall.  
     [exec] 
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec] 
     [exec]     +1 tests included.  The patch appears to include 10 new or modified tests.
     [exec] 
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec] 
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec] 
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
     [exec] 
     [exec]     -1 release audit.  The applied patch generated 2 release audit warnings (more than the trunk's current 1 warnings).
     [exec] 
     [exec]     -1 system test framework.  The patch failed system test framework compile.
     [exec] 
 
The release audit complains about two files, smoke-test and robots.txt.  These don't have AL and are probably correct., > -1 system test framework.

You probably have some problems with gcc there. I don't think it is blocking as there are no changes to native code, and this target succeeded on Doug's run before.

> -1 release audit.

Don't see any new files are introduced in the patch. We probably need to add some exclusions, which were omitted in previous commits.

Other than that looks good to me.
How are the tests doing with this patch?, Just ran it again after installing gcc and some other packages mentioned on the net and the system failures are gone now.

     [exec]     +1 system test framework.  The patch passed system test framework compile., My latest patch is not working so deleting.  The earlier patch rebased by Doug Cutting applies fine but fails with the below error.  Not sure if that is the expected behaviour now.  Any help appreciated.

Testcase: testWithDFS took 240.679 sec
        Caused an ERROR
File /home/pmustafi/git/hadoop-mapreduce/build/test/logs/userlogs/job_20110210181140136_0004/attempt_20110210181140136_0004_m_000000_0/log.index does not exist.
java.io.FileNotFoundException: File /home/pmustafi/git/hadoop-mapreduce/build/test/logs/userlogs/job_20110210181140136_0004/attempt_20110210181140136_0004_m_000000_0/log.index does not exist.
        at org.apache.hadoop.fs.RawLocalFileSystem.getFileStatus(RawLocalFileSystem.java:446)
        at org.apache.hadoop.io.SecureIOUtils.openForRead(SecureIOUtils.java:105)
        at org.apache.hadoop.mapred.TaskLog.getLogFileDetail(TaskLog.java:106)
        at org.apache.hadoop.mapred.TaskLog.access$100(TaskLog.java:58)
        at org.apache.hadoop.mapred.TaskLog$Reader.<init>(TaskLog.java:301)
        at org.apache.hadoop.mapreduce.MapReduceTestUtil.readTaskLog(MapReduceTestUtil.java:443)
        at org.apache.hadoop.mapred.TestTaskFail.validateAttempt(TestTaskFail.java:166)
        at org.apache.hadoop.mapred.TestTaskFail.testKillMapperAndKillTaskCleanup(TestTaskFail.java:269)
        at org.apache.hadoop.mapred.TestTaskFail.testWithDFS(TestTaskFail.java:307)
]