[When size of the meta info file exceeds the value specified by the mapreduce.jobtracker.split.metainfo.maxsize property set for a job, SplitMetaInfoReader.readSplitMetaInfo() throws an IOException. And, JobImpl$InitTransition.transition() is trying to catch an IOException. However, JobImpl$InitTransition.createSplits(), which is called in between JobImpl$InitTransition.transition() and SplitMetaInfoReader.readSplitMetaInfo(), catches the IOException, and instead throws a YarnRuntimeException.

Since this runtime exception is not expected or caught by JobImpl anywhere, the proper diagnostic is not set. The result is that on the Job UI for the failed job, a cryptic message is displayed:
AM Container for appattempt_1396371248625_0009_000003 exited with exitCode: 1 due to: Exception from container-launch: org.apache.hadoop.util.Shell$ExitCodeException:
...
, Reproduced by setting mapreduce.jobtracker.split.metainfo.maxsize to something small:
 $HADOOP_PREFIX/bin/hadoop jar ~/run/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-$HADOOP_VERSION.jar wordcount -Dmapreduce.jobtracker.split.metainfo.maxsize=10 InputDir OutputDir/O1, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12639204/MAPREDUCE-4937.MRAMHandlOversizeSplits.txt
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app:

                  org.apache.hadoop.mapreduce.v2.app.TestMRAppMaster

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4491//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4491//console

This message is automatically generated., MrAppMaster Unit test failures were not introduced by this patch. Please see other Precommit-MAPREDUCE-Builds such as 
https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4488/
https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4486/

To verify this, I cloned trunk into a new local directory, built, and ran mvn test -Dtest=TestMRAppMaster . This resulted in the test failures described above., The old patch did not account for an invalid state transition and a race condition. This new patch fixes both., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12640340/MAPREDUCE-4937.MRAMHandlOversizeSplits.txt
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4519//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4519//console

This message is automatically generated., Yeah, it's tricky to dispatch messages while the MR AM is still initializing services.  Lots of nasty races there which necessitates delaying the dispatch of failure events until the services have finished starting.  It'd be nice if we could just start the services and then dispatch Job events, but some of the services need some of the results of the JOB_INIT handling hence we're handling events while still initializing services.

Patch looks good overall, just a minor comment and nit:
- Instead of duplicating the super.serviceStart() and having a mid-method return, we could do something like this:
{code}
  // initially assume we will initialize successfully
  boolean initFailed = false;
  if (!errorHappenedShutdownNow) {
    ...
    // init failed if the job didn't leave the NEW state
    initFailed = (((JobImpl)job).getInternalState() == JobStateInternal.NEW);
  }
  //start all the components
  super.serviceStart();

  // set job classloader if configured
  MRApps.setJobClassLoader(getConfig());

  // All components have started
  if (initFailed) {
    JobEvent initFailedEvent = new JobEvent(job.getID(), JobEventType.JOB_INIT_FAILED);
    jobEventDispatcher.handle(initFailedEvent);
  } else {
    startJobs();
  }
{code}
- Nit: JOB_INIT_FAILED should be listed by the other events produced by MRAppMaster (i.e.: JOB_INIT, JOB_START) so like the other events it's documented where the event originates
- Nit: would be nice to have some better indentation on the wrapped lines in the test case, since those lines have smaller indents than the method declaration, Thank you for the comments, Jason.

bq. ◾Instead of duplicating the super.serviceStart() and having a mid-method return, we could do something like this:
I rearranged the code as suggested, with one adjustment. Rather than setting initFailed to true if internal state is NEW, initFailed is set to true if internal state is not INITED.

bq. ◾Nit: JOB_INIT_FAILED should be listed by the other events produced by MRAppMaster (i.e.: JOB_INIT, JOB_START) so like the other events it's documented where the event originates
Moved JOB_INIT_FAILED

bq. ◾Nit: would be nice to have some better indentation on the wrapped lines in the test case, since those lines have smaller indents than the method declaration
Fixed indentation, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12640484/MAPREDUCE-4937.MRAMHandlOversizeSplits.txt
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4526//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4526//console

This message is automatically generated., +1 lgtm.  A minor nit I forgot to bring up earlier is that the comments should fit in 80 columns which I'll cleanup on commit.
, Thanks, Eric!  I committed this to trunk and branch-2., SUCCESS: Integrated in Hadoop-trunk-Commit #5538 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/5538/])
MAPREDUCE-4937. MR AM handles an oversized split metainfo file poorly. Contributed by Eric Payne (jlowe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1588559)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/event/JobEventType.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TestJobImpl.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk #545 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/545/])
MAPREDUCE-4937. MR AM handles an oversized split metainfo file poorly. Contributed by Eric Payne (jlowe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1588559)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/event/JobEventType.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TestJobImpl.java
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #1762 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1762/])
MAPREDUCE-4937. MR AM handles an oversized split metainfo file poorly. Contributed by Eric Payne (jlowe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1588559)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/event/JobEventType.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TestJobImpl.java
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1738 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1738/])
MAPREDUCE-4937. MR AM handles an oversized split metainfo file poorly. Contributed by Eric Payne (jlowe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1588559)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/event/JobEventType.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TestJobImpl.java
]