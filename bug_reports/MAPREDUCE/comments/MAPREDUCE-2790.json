[The ask is for scheduling info to contain the number of maps and reduces running and the reservation (like it was in 20). The AM info should contain what SchedulingInfo contains right now. , Ravi - the ask is for an additional field to display the URI of either AM Web-UI for running apps or for JobHistory URI for completed apps. Makes sense?, We can change 'Scheduling Info' title to be URI or some such., We could keep the 'Scheduling Info' and use that field to display running/reserved containers (can't get running/reserved maps/reduces from RM of course)., Sorry it took so long! I'd been out sick. :( I'm back now. 
Please review this patch. I'm going to add tests if everyone is fine with the changes., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12493827/MAPREDUCE-2790.v1.txt
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    -1 javac.  The patch appears to cause tar ant target to fail.

    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in .

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/680//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/680//console

This message is automatically generated., 
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1791/
-----------------------------------------------------------

Review request for Tom Graves, Jeffrey Naisbitt and Robert Evans.


Summary
-------

Add additional field for storing the AM/job history info on CLI ( https://issues.apache.org/jira/browse/MAPREDUCE-2790 )


This addresses bug MAPREDUCE-2790.
    https://issues.apache.org/jira/browse/MAPREDUCE-2790


Diffs
-----

  trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java 1167250 
  trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationReport.java 1167250 
  trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationReportPBImpl.java 1167250 
  trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/proto/yarn_protos.proto 1167250 
  trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java 1167250 
  trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java 1167250 
  trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobStatus.java 1167250 
  trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/tools/CLI.java 1167250 
  trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/TypeConverter.java 1167250 
  trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobStatus.java 1167250 

Diff: https://reviews.apache.org/r/1791/diff


Testing
-------


Thanks,

Ravi

, 
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1791/
-----------------------------------------------------------

(Updated 2011-09-12 16:11:03.514492)


Review request for Tom Graves, Jeffrey Naisbitt, Robert Evans, and Jonathan Eagles.


Summary
-------

Add additional field for storing the AM/job history info on CLI ( https://issues.apache.org/jira/browse/MAPREDUCE-2790 )


This addresses bug MAPREDUCE-2790.
    https://issues.apache.org/jira/browse/MAPREDUCE-2790


Diffs
-----

  trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java 1167250 
  trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationReport.java 1167250 
  trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationReportPBImpl.java 1167250 
  trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/proto/yarn_protos.proto 1167250 
  trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java 1167250 
  trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java 1167250 
  trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobStatus.java 1167250 
  trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/tools/CLI.java 1167250 
  trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/TypeConverter.java 1167250 
  trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobStatus.java 1167250 

Diff: https://reviews.apache.org/r/1791/diff


Testing
-------


Thanks,

Ravi

, 
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1791/
-----------------------------------------------------------

(Updated 2011-09-12 16:45:59.961016)


Review request for Tom Graves, Jeffrey Naisbitt, Robert Evans, and Jonathan Eagles.


Changes
-------

Sorry folks. The first version patch had a few unintended changes sneak in. v2 looks good. Please review v2 only.

Thanks
Ravi


Summary
-------

Add additional field for storing the AM/job history info on CLI ( https://issues.apache.org/jira/browse/MAPREDUCE-2790 )


This addresses bug MAPREDUCE-2790.
    https://issues.apache.org/jira/browse/MAPREDUCE-2790


Diffs (updated)
-----

  trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationReport.java 1169819 
  trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/tools/CLI.java 1169819 
  trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java 1169819 
  trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/TypeConverter.java 1169819 
  trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobStatus.java 1169819 
  trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobStatus.java 1169819 
  trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationReportPBImpl.java 1169819 
  trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/proto/yarn_protos.proto 1169819 
  trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java 1169819 
  trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java 1169819 

Diff: https://reviews.apache.org/r/1791/diff


Testing
-------


Thanks,

Ravi

, Sorry for the mess but the v1 had some unintended changes sneak in. v2 is the right diff., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12494059/MAPREDUCE-2790.v2.txt
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    -1 javac.  The patch appears to cause tar ant target to fail.

    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in .

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/706//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/706//console

This message is automatically generated., 
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1791/#review1855
-----------------------------------------------------------


Also, have you run all the tests and grep'd through the code to make sure you've fixed all the places that implement the ApplicationReport interface?
I also noticed that ApplicationReport is declared as @Public and @Stable, so there may be public documentation and such that needs to be updated (assuming we're ok with modifying a "@Stable" interface since we haven't actually pushed out any releases yet).


trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/tools/CLI.java
<https://reviews.apache.org/r/1791/#comment4238>

    I think you need to either print the container info after the scheduling info here, or you need to change the order you print the headers


- Jeffrey


On 2011-09-12 16:45:59, Ravi Prakash wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  https://reviews.apache.org/r/1791/
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-09-12 16:45:59)
bq.  
bq.  
bq.  Review request for Tom Graves, Jeffrey Naisbitt, Robert Evans, and Jonathan Eagles.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  Add additional field for storing the AM/job history info on CLI ( https://issues.apache.org/jira/browse/MAPREDUCE-2790 )
bq.  
bq.  
bq.  This addresses bug MAPREDUCE-2790.
bq.      https://issues.apache.org/jira/browse/MAPREDUCE-2790
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationReport.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/tools/CLI.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/TypeConverter.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobStatus.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobStatus.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationReportPBImpl.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/proto/yarn_protos.proto 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java 1169819 
bq.  
bq.  Diff: https://reviews.apache.org/r/1791/diff
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Ravi
bq.  
bq.

, 
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1791/#review1856
-----------------------------------------------------------



trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobStatus.java
<https://reviews.apache.org/r/1791/#comment4241>

    Because JobStatus is @Public and @Stable I would like to see versions of the old constructors still there, with containerInfo defaulting to null (Or something else that is an acceptable default).  Otherwise we will break binary compatibility.



trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobStatus.java
<https://reviews.apache.org/r/1791/#comment4242>

    Even though this one is @Public @Evolving I would still prefer to see binary compatibility in the constructors.



trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobStatus.java
<https://reviews.apache.org/r/1791/#comment4243>

    I believe that to maintain binary compatibility this line should be moved to the end of the function.  I think this is really only used in the MRV1 code, but I think it would be cleaner either way.  You would need to move the corresponding read too. 



trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/tools/CLI.java
<https://reviews.apache.org/r/1791/#comment4239>

    I agree with Jeff.  job.getSchedulingInfo() is at the end of the line but the "SchedulingInfo" header is second to the last.



trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java
<https://reviews.apache.org/r/1791/#comment4244>

    What is the JIRA for this TODO?  Who calls this method and how critical is the container info being absent?



trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java
<https://reviews.apache.org/r/1791/#comment4240>

    I have a bit of a problem with containerInfo.  The information being returned is a string that is already formatted for output on the command line.  I would much rather see a data structure returned, and the formatting happen in the CLI code.  This way if we do want to access that info programmaticly we don't have to parse a string to get it.


- Robert


On 2011-09-12 16:45:59, Ravi Prakash wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  https://reviews.apache.org/r/1791/
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-09-12 16:45:59)
bq.  
bq.  
bq.  Review request for Tom Graves, Jeffrey Naisbitt, Robert Evans, and Jonathan Eagles.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  Add additional field for storing the AM/job history info on CLI ( https://issues.apache.org/jira/browse/MAPREDUCE-2790 )
bq.  
bq.  
bq.  This addresses bug MAPREDUCE-2790.
bq.      https://issues.apache.org/jira/browse/MAPREDUCE-2790
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationReport.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/tools/CLI.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/TypeConverter.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobStatus.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobStatus.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationReportPBImpl.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/proto/yarn_protos.proto 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java 1169819 
bq.  
bq.  Diff: https://reviews.apache.org/r/1791/diff
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Ravi
bq.  
bq.

, 

bq.  On 2011-09-12 16:56:37, Jeffrey Naisbitt wrote:
bq.  > Also, have you run all the tests and grep'd through the code to make sure you've fixed all the places that implement the ApplicationReport interface?
bq.  > I also noticed that ApplicationReport is declared as @Public and @Stable, so there may be public documentation and such that needs to be updated (assuming we're ok with modifying a "@Stable" interface since we haven't actually pushed out any releases yet).

I did run test-patch. There is only one implementation of ApplicationReport and I did update that (ApplicationReportPBImpl). I'm afraid I didn't see a practical alternative to provide this functionality without changing a Stable interface. I grepd for ApplicationReport and couldn't find any non-java documentation files.


bq.  On 2011-09-12 16:56:37, Jeffrey Naisbitt wrote:
bq.  > trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/tools/CLI.java, lines 530-535
bq.  > <https://reviews.apache.org/r/1791/diff/2/?file=40113#file40113line530>
bq.  >
bq.  >     I think you need to either print the container info after the scheduling info here, or you need to change the order you print the headers

In short, the switcheroo is intentional.
In long: One of the changes requested by Ramya was for Scheduling Info to display the information analogous to what is displayed in 0.20. This is provided by the getContainerInfo(). getSchedulingInfo() provides the URL for the AM. (the AM info).


- Ravi


-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1791/#review1855
-----------------------------------------------------------


On 2011-09-12 16:45:59, Ravi Prakash wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  https://reviews.apache.org/r/1791/
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-09-12 16:45:59)
bq.  
bq.  
bq.  Review request for Tom Graves, Jeffrey Naisbitt, Robert Evans, and Jonathan Eagles.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  Add additional field for storing the AM/job history info on CLI ( https://issues.apache.org/jira/browse/MAPREDUCE-2790 )
bq.  
bq.  
bq.  This addresses bug MAPREDUCE-2790.
bq.      https://issues.apache.org/jira/browse/MAPREDUCE-2790
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationReport.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/tools/CLI.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/TypeConverter.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobStatus.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobStatus.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationReportPBImpl.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/proto/yarn_protos.proto 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java 1169819 
bq.  
bq.  Diff: https://reviews.apache.org/r/1791/diff
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Ravi
bq.  
bq.

, 

bq.  On 2011-09-12 17:35:34, Robert Evans wrote:
bq.  > trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobStatus.java, line 99
bq.  > <https://reviews.apache.org/r/1791/diff/2/?file=40111#file40111line99>
bq.  >
bq.  >     Because JobStatus is @Public and @Stable I would like to see versions of the old constructors still there, with containerInfo defaulting to null (Or something else that is an acceptable default).  Otherwise we will break binary compatibility.

Which binary compatibility are we talking about here? Between which two versions? The constructor signatures have been changed significantly between 0.20 and 0.23 already. 0.23 hasn't been released yet. 
JobStatus in 0.23 is quite far removed from that in 0.20. In my opinion I think we should mark these interfaces as unstable for some time.


bq.  On 2011-09-12 17:35:34, Robert Evans wrote:
bq.  > trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java, line 304
bq.  > <https://reviews.apache.org/r/1791/diff/2/?file=40119#file40119line304>
bq.  >
bq.  >     I have a bit of a problem with containerInfo.  The information being returned is a string that is already formatted for output on the command line.  I would much rather see a data structure returned, and the formatting happen in the CLI code.  This way if we do want to access that info programmaticly we don't have to parse a string to get it.

I was ambivalent about this too. (I started off with an int being passed). Ideally I'd like to see what resources are being used by a job currently. As we add other attributes to containers, the data structure you proposed will have to be modified (to include CPU / disk etc). Furthermore it provides no tangible benefit. Having a String being formulated at the resource manager gives the resource manager the freedom to describe the resource allocation in its own terms rather than the Clients having to interpret data structures.


bq.  On 2011-09-12 17:35:34, Robert Evans wrote:
bq.  > trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java, line 312
bq.  > <https://reviews.apache.org/r/1791/diff/2/?file=40114#file40114line312>
bq.  >
bq.  >     What is the JIRA for this TODO?  Who calls this method and how critical is the container info being absent?

The commit that introduced the TODO line corresponds to https://issues.apache.org/jira/browse/MAPREDUCE-2807. I did not find an associated JIRA. Do we have JIRAs associated to all the TODO's in code? We should. And then reference them in the TODO line. But I'm afraid I couldn't find a JIRA corresponding to this line.


- Ravi


-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1791/#review1856
-----------------------------------------------------------


On 2011-09-12 16:45:59, Ravi Prakash wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  https://reviews.apache.org/r/1791/
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-09-12 16:45:59)
bq.  
bq.  
bq.  Review request for Tom Graves, Jeffrey Naisbitt, Robert Evans, and Jonathan Eagles.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  Add additional field for storing the AM/job history info on CLI ( https://issues.apache.org/jira/browse/MAPREDUCE-2790 )
bq.  
bq.  
bq.  This addresses bug MAPREDUCE-2790.
bq.      https://issues.apache.org/jira/browse/MAPREDUCE-2790
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationReport.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/tools/CLI.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/TypeConverter.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobStatus.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobStatus.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationReportPBImpl.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/proto/yarn_protos.proto 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java 1169819 
bq.    trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java 1169819 
bq.  
bq.  Diff: https://reviews.apache.org/r/1791/diff
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Ravi
bq.  
bq.

, Ravi, reviewboard is hard to follow - can you pls summarize your changes? Tx, Couple of comments:

a) ContainerInfo for JobStatus doesn't make sense...
b) Please follow 80-char limit

I'll have some more comments after I understand your summary of changes. Thanks., Just to clarify once again, in 0.20.x we have a field "SchedulingInfo" having information such as the following:
{noformat} 2 running map tasks using 4 map slots. 0 additional slots reserved. 10 running reduce tasks using 20 reduce slots. 0 additional slots reserved. {noformat}
This information is missing in branch-23 and has to be added.

Also, in branch-23, the AM information/job history location is being incorrectly displayed under the SchedulingInfo field. As Arun pointed out in his first comment, "an additional field to display the URI of either AM Web-UI for running apps or for JobHistory URI for completed apps" has to be added., Hi,

@Arun: ApplicationReport is the object passed from the ResourceManager (RMAppImpl.java:300) to the client side (ResourceManagerDelegate.java:121) 
These ApplicationReports get translated to JobStatus objects in the same line ResourceManagerDelegate.java:121. The list of JobStatus is what is received by CLI.java:531 to print out the statuses. Would you propose a different way in which I could provide the requested information?

@Ramya: As was pointed out in https://issues.apache.org/jira/browse/MAPREDUCE-2790?focusedCommentId=13089520&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13089520 we can only get the "running/reserved containers (can't get running/reserved maps/reduces from RM of course)." This patch does change the column headings, Ravi, sounds good.

You'll need to ensure 'ant binary -Dresolvers=internal' works for 'classic MR' i.e. MRv1.

Also, please ensure you just add a ctor to JobStatus and not break existing ones.

Can you please summarize your changes and it'll be easier to review? Thanks!, {quote}
In short, the switcheroo is intentional.
In long: One of the changes requested by Ramya was for Scheduling Info to display the information analogous to what is displayed in 0.20. This is provided by the getContainerInfo(). getSchedulingInfo() provides the URL for the AM. (the AM info).
{quote}

Can you please comment this better then, because just about everyone who looked at the code thought it was a bug.

{quote}
Which binary compatibility are we talking about here? Between which two versions? The constructor signatures have been changed significantly between 0.20 and 0.23 already. 0.23 hasn't been released yet.
JobStatus in 0.23 is quite far removed from that in 0.20. In my opinion I think we should mark these interfaces as unstable for some time.
{quote}

I am talking about compatibility between 0.20 and 0.23.  Specifically there is user code out there that might use some of these interfaces and it would be nice to not require them to look up new APIs and change their code to get the same behavior as before.  That is why the API is marked as public and stable.  Adding in new constructors or methods will not break compatibility, but changing the parameters to existing ones will.  If it is simple to do I would prefer that we do it.  If the constructor signatures have already changed between 0.20 and 0.23 then don't worry about them.

{quote}
Furthermore it provides no tangible benefit.
{quote}

I disagree.  It does not provide a benefit right now, but I have heard a request to have the list of containers being used by an application be accessible (I don't know the JIRA if there is one yet).  I can see lots of use cases coming in the future to be able to have access to this type of information.  Also what happens in the future if we ever do decided to do localization?  The Resource Manager before it returns a string will have to know what the local is for the user it is talking to.  Providing raw data, and then formatting that data at the interface level I think is a lot cleaner then returning an arbitrarily formatted string.

{quote}
As we add other attributes to containers, the data structure you proposed will have to be modified (to include CPU / disk etc).
{quote}

I agree and it may take a bit more effort to think about how you want to set up the data structure so it can expand easily.  But just because it is harder does not mean it is not the right thing to do.  Perhaps you just provide a summary in the job info with the container usage data in it and then in the future we have a separate API to get the details of containers used.

{quote}
The commit that introduced the TODO line corresponds to https://issues.apache.org/jira/browse/MAPREDUCE-2807. I did not find an associated JIRA. Do we have JIRAs associated to all the TODO's in code? We should. And then reference them in the TODO line. But I'm afraid I couldn't find a JIRA corresponding to this line.
{quote}

I agree with all TODOs need a JIRA.  I thought at some point there was a JIRA to look at all the TODOs in MRV2 and fix/file JIRAs for them.  I am not sure what happened to that.  If you could start putting the JIRA in the TODO comments for filing a JIRA for any TODOs that would be great.  I was just curious because the scope of that TODO has now increased with this change and it would be nice to update the JIRA accordingly.


, @Bobby, Jeff, Arun : Thanks for your comments. :) I am uploading a new patch which addresses most of your comments. I have removed the new constructors and am making do with get/set methods. The switcheroo has been removed ( I renamed the methods and their return values appropriately )
@Arun: Thanks! :) I checked ant binary and it built successfully. I have reverted the constructors to as they were. The changes I have made are:
1. Include scheduling info into the stream of information passed from RMAppImpl->ApplicationReport->JobStatus->CLI 
2. Changed JobStatus.getSchedulingInfo to return a string similar to 0.20.x and added JobStatus.getApplicationManagerInfo to return the AM tracking URL.

Some examples of the output
{noformat}
JobId   State   StartTime       UserName        Queue   Priority        SchedulingInfo  AM info
job_1315930710975_0001  PREP    1315930881447   raviprak        default NORMAL  0 container(s) just finished on 0 node(s)
{noformat}

{noformat}
JobId   State   StartTime       UserName        Queue   Priority        SchedulingInfo  AM info
job_1315930710975_0001  RUNNING 1315930881447   raviprak        default NORMAL  0 container(s) just finished on 1 node(s)       127.0.0.1:39443
{noformat}

{noformat}
JobId   State   StartTime       UserName        Queue   Priority        SchedulingInfo  AM info
job_1315930710975_0001  SUCCEEDED       1315930881447   raviprak        default NORMAL  0 container(s) just finished on 1 node(s)       127.0.0.1:19888/yarn/job/job_1315930710975_1_1
{noformat}

Please let me know if the output can be improved in anyway., 
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1791/
-----------------------------------------------------------

(Updated 2011-09-13 16:52:50.736302)


Review request for Tom Graves, Jeffrey Naisbitt, Robert Evans, and Jonathan Eagles.


Changes
-------

@Bobby, Jeff, Arun : Thanks for your comments. I am uploading a new patch which addresses most of your comments. I have removed the new constructors and am making do with get/set methods. The switcheroo has been removed ( I renamed the methods and their return values appropriately )


Summary
-------

Add additional field for storing the AM/job history info on CLI ( https://issues.apache.org/jira/browse/MAPREDUCE-2790 )


Diffs (updated)
-----

  trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/TypeConverter.java 1170200 
  trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobStatus.java 1170200 
  trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobStatus.java 1170200 
  trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/tools/CLI.java 1170200 
  trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java 1170200 
  trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationReport.java 1170200 
  trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationReportPBImpl.java 1170200 
  trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/proto/yarn_protos.proto 1170200 
  trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java 1170200 
  trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/MockApps.java 1170200 
  trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java 1170200 

Diff: https://reviews.apache.org/r/1791/diff


Testing
-------


Thanks,

Ravi

, +1 assuming that the automated tests pass.  The new patch looks good to me.  I still would prefer to see data instead of a string being returned, but it appears that there are several places doing this already so it is not a blocker., Submitting the patch for Ravi, to see what Jenkins says about it., Isn't this jira dealing with the Application Master and not the "Application Manager".  To avoid confusion with the ApplicationsManager, I would think all the references to "Manager" should be changed to "Master"., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12494259/MAPREDUCE-2790.v3.txt
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these unit tests:
                  org.apache.hadoop.mapreduce.TestTypeConverter

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/719//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/719//console

This message is automatically generated., Cancelling patch due to test failures., Thanks Bobby, Jeff and Arun for your reviews! :) I've changed ApplicationManager to ApplicationMaster and also fixed the trivial failing test.
, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12494305/MAPREDUCE-2790.v4.txt
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in .

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/724//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/724//console

This message is automatically generated., 
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1791/#review1941
-----------------------------------------------------------

Ship it!


+1 (non-binding)


trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java
<https://reviews.apache.org/r/1791/#comment4425>

    Lin3 304 of RMAppImpl.java:
    
    Calling getJustFinishedContainers().size() may not be the best way to handle this since this list gets cleared when AllocateResponse.allocate(...) calls appAttempt.pullJustFinishedContainers(). AllocateResponse.allocate(...) is calling this as part of the allocateResponse.
    
    I think we want to keep track of the total number of containers that the  app attempt used, which info is not currently in the RMAppAttemptImpl class. I tried adding a private variable that is incremented whenever the justFinishedContainers list is cleared, and this seems to get what we want.


- Eric


On 2011-09-13 16:52:50, Ravi Prakash wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  https://reviews.apache.org/r/1791/
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-09-13 16:52:50)
bq.  
bq.  
bq.  Review request for Tom Graves, Jeffrey Naisbitt, Robert Evans, and Jonathan Eagles.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  Add additional field for storing the AM/job history info on CLI ( https://issues.apache.org/jira/browse/MAPREDUCE-2790 )
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/TypeConverter.java 1170200 
bq.    trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobStatus.java 1170200 
bq.    trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobStatus.java 1170200 
bq.    trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/tools/CLI.java 1170200 
bq.    trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java 1170200 
bq.    trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationReport.java 1170200 
bq.    trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationReportPBImpl.java 1170200 
bq.    trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/proto/yarn_protos.proto 1170200 
bq.    trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java 1170200 
bq.    trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/MockApps.java 1170200 
bq.    trunk/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java 1170200 
bq.  
bq.  Diff: https://reviews.apache.org/r/1791/diff
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Ravi
bq.  
bq.

, Ravi - have you ensured that 'classic' MR compiles with these changes?, Showing 'just finished containers' in scheduling info seems odd.

Maybe we should show currently live (acquired) containers?

Also, I'm not a big fan of having just a public 'set' method in mapred.JobStatus - please add both public get/set to mapreduce.JobStatus and be done with.

Also, we should ensure 'classic' MR works and that the MR CLI tests (ant test) work... 

Sorry for being a pain, but we need to ensure existing stuff at least compiles/tests. Thanks!, Eric is going to make the changes as part of https://issues.apache.org/jira/browse/MAPREDUCE-2789 . This JIRA was filed for changing the coloumn names. Eric will include that change as part of his fix. Can we please resolve this JIRA?, Ravi - what is this a duplicate of ?, Arun - https://issues.apache.org/jira/browse/MAPREDUCE-2789 . I asked Ramya and she said this JIRA was meant only for the coloumn renaming. Eric is going to include that change in his JIRA., Sounds good, thanks for clarifying.

(In future, please indicate the dup jira. Thanks.)]