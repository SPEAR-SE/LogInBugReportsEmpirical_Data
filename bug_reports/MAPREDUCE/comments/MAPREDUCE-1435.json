[We suspect this was caused by MAPREDUCE-896., Attaching patch for trunk fixing the issues in TaskRunner.setupWorkDir() and in task-controller.c

This patch assumes that the api FileUtil.fullyDeleteContents() is available(that is part of HADOOP-6531).

Please review and provide your comments., Missed removing unused method deleteDirContents() from TaskRunner.java in earlier patch. Now removed that method and the unnecessary test TestSetupWorkDir.java, As discussed offline, we probably need a unit test coverage for the changes in TaskRunner.setupWorkDir as well. Can you please include that ? Also, we may want to add a public distributed cache file in the streaming test case and ensure its permissions do not change too., Attaching patch with review comments incorporated., TestFileArgs failed(known issue MAPREDUCE-1375) and all other unit tests passed on my local machine., A few minor nits:

- Typo: contets in comments of ClusterWithLinuxTaskController.
- checkPermissionsOnPrivateDistCache: Do we expect at least one of the directories to have the file. If yes, we should check for that; otherwise we will mask errors. Similarly for checkPermissionsOnPublicDistCache
- checkPublicFilePermissions seems to be verifying permissions only for others. Should we also check permissions for owner and group ?
- Comments in createSubDirsAndSymLinks should be dir1/subDir, dir1/file
- Do we need DefaultTaskController.enableTaskForCleanup to give rwx access to group ? Setting the permissions for user should be sufficient, I think.
, Preliminary patch for earlier version of Hadoop. Not for commit., Attached patch addresses my review comments.

bq. checkPermissionsOnPrivateDistCache: Do we expect at least one of the directories to have the file. If yes, we should check for that; otherwise we will mask errors. Similarly for checkPermissionsOnPublicDistCache

I have introduced new APIs in ClusterWithLinuxTaskController to check that a list of file names are present among the localized files. Essentially, I separated the permissions checking with the presence checks.

bq. checkPublicFilePermissions seems to be verifying permissions only for others. Should we also check permissions for owner and group ?

Similar code existed in TestTrackerDistributedCacheManager. I refactored this code to a new API in the same class so that it can be called from outside and I am using it in checkPublicFilePermissions. I added checks for owner and group in TestTrackerDistributedCacheManager., Running through Hudson., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12437630/1435.v3.patch
  against trunk revision 918206.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 18 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/15/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/15/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/15/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/15/console

This message is automatically generated., bq. -1 core tests. The patch failed core unit tests.

The core test failure is being tracked in MAPREDUCE-1520., In TestStreamingAsDifferentUser, group ownership is compared with primary group of the launcher. It would fail if task-controller binary is owned by secondary group of the launcher. It can be compared with ClusterWithLinuxTaskController.taskTrackerSpecialGroup directly, which introduced in MAPREDUCE-1421., Would it be better if we check if the owner and group of public distributed cache files are correct also ?

Once we add that also to the checks of public distributed cache files, then ClusterWithLinuxTaskController.checkPermissionsOnDir() can be reused for these checks also and can avoid TestTrackerDistributedCacheManager.checkPublicFilePermissions() possibly., Canceling patch to incorporate review comments., Patch incorporates review comments from Amarsri and Ravi. Changes are:

- I am now using ClusterWithLinuxTaskController.taskTrackerSpecialGroup as the expected group for private distributed cache files.
- Added ownership and group ownership checks for public distributed cache files. Group owner for public distributed cache is the primary owner of the tasktracker. I added a ClusterWithLinuxTaskController.taskTrackerPrimaryGroup on similar lines as ClusterWithLinuxTaskController.taskTrackerSpecialGroup.

However,

bq. Once we add that also to the checks of public distributed cache files, then ClusterWithLinuxTaskController.checkPermissionsOnDir() can be reused for these checks also and can avoid TestTrackerDistributedCacheManager.checkPublicFilePermissions() possibly.

I have not done the above. This is because the checks for permissions of private distributed cache files includes exact match of all the permissions for owner, group and others. For public distributed cache files, the code only adds 'read' and 'execute' bits for all users. Specifically, it does not modify the 'write' bits. This means that the write permissions are indeterminate (for e.g. they could depend on permissions of files in an archive which are unarchived in distributed cache). Hence, instead of reusing the model for checking permissions, I have retained the original model for checking permissions of the public cache files.

I ran all task-controller tests on this, and they passed., Running through Hudson., Output of test-patch:

{noformat}
     [exec] +1 overall.  
     [exec] 
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec] 
     [exec]     +1 tests included.  The patch appears to include 18 new or modified tests.
     [exec] 
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec] 
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec] 
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
     [exec] 
     [exec]     +1 release audit.  The applied patch does not increase the total number of release audit warnings.
{noformat}, Patch looks good.
+1, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12437873/1435.v4.patch
  against trunk revision 918864.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 18 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/500/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/500/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/500/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/500/console

This message is automatically generated., I committed this patch to trunk. Thanks, Ravi !, Integrated in Hadoop-Mapreduce-trunk-Commit #261 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-Mapreduce-trunk-Commit/261/])
    . Fix symlink handling in task work directory when cleaning up, essentially to avoid following links. Contributed by Ravi Gummadi.
, Integrated in Hadoop-Mapreduce-trunk #250 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-Mapreduce-trunk/250/])
    , This patch is over MR-1435-y20s.patch for earlier version of Hadoop. It improves test cases by adding a couple of more tests, synchronizing this with trunk's patch. I am running tests. This patch is not for commit here.]