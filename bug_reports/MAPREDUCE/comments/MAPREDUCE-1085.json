[We can check if the value is positive or not and add the ulimit command only if needed., This is a regression.

Before MAPREDUCE-478, if mapred.child.ulimit is not configured in mapred-site.xml, tasks run successfully.
After MAPREDUCE-478, they fail with error saying invalid options for ulimit (ulimit -v -1)., Tasks will pass. The issue is just the error message saying ulimit failed to set -1 as limit., Patch simply sets the ulimit command to null if it's set to <=0

Unfortunately this is very difficult to get to via a new unit test since it's deep within private methods, but should be straightforward and the code is covered by lots of integration tests., Tests passed except for a few timeouts which I can't seem to reproduce, and a few failures which are known on trunk., +1  change looks good, Since getVMSetupCmd() is returning null, the caller's code will also needs changes ?
Caller of getVMSetupCmd() has the following code.
{code}
String setup = getVMSetupCmd();
setupCmds.add(setup);
{code}
 setup can be null here.
 Adding null as a command to the list of commands is useless and may cause runtime issues.
A null check like the following is better.
{code}
if (setup != null) {
  setupCmds.add(setup);
}
{code}, We already return null from getVMSetupCmd in other cases - take a look at Shell.getUlimitMemoryCommand and you'll see that we return null there for Windows as is.

Not sure which code you're refering to above with setupCmds.add(setup). It's not in trunk.
The flow is: launchJvmAndWait -> JvmManager.constructJvmEnv -> JvmEnv data structure -> TaskLog.buildCommandLine where you see the null check:
{code}
    if (setup != null && setup.size() > 0) {
      mergedCmd.append(addCommand(setup, false));
      mergedCmd.append(";");
    }
{code}, What branch do you see this code in?  I don't see the code you're referring to on trunk or 21.  There's only one caller of getVMSetupCmd and it's fine with the null return value.
, I was looking at older branch. Code is different in trunk.

Fine. Trunk's code is checking for null in both cases of DefaultTaskController and LinuxTaskController. So the code changes of the patch should be fine.

+1.
, Committed to 22 and trunk, thanks Eli and Ravi., Integrated in Hadoop-Mapreduce-trunk-Commit #578 (See [https://hudson.apache.org/hudson/job/Hadoop-Mapreduce-trunk-Commit/578/])
    MAPREDUCE-1085. For tasks, "ulimit -v -1" is being run when user doesn't specify a ulimit. Contributed by Todd Lipcon
, Integrated in Hadoop-Mapreduce-22-branch #33 (See [https://hudson.apache.org/hudson/job/Hadoop-Mapreduce-22-branch/33/])
    , Integrated in Hadoop-Mapreduce-trunk #643 (See [https://hudson.apache.org/hudson/job/Hadoop-Mapreduce-trunk/643/])
    ]