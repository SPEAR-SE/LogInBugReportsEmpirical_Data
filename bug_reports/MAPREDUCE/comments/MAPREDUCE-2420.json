[This patch handles the case of HDFS token renewals, when the JobTracker's HDFS is running a different version of HDFS than the one the job is trying to use. An example of such a job is distcp (where it uses hftp to talk to a different source cluster to pull data to the cluster where distcp is running).

When the job is submitted, the client requests a delegation token over hftp and stuffs it in the job. Today, the NameNode doesn't distinguish between hftp and hdfs accesses, and issues HDFS tokens for both (and the token-kind field in the token has the value as 'HDFS'). Ideally, that should be fixed to have the token-kind as HFTP for hftp accesses. We should have the JobTracker handle all sorts of token renewals, and have a way in which it can look at a token and decide which protocol to use to talk to the server in question. This includes HDFS, HFTP, and also HIVE (where the protocol is thrift). 

I think this patch is okay for the short term - the JobTracker falls back to hftp if it couldn't renew a token over hdfs. In the patch, there are a bunch of white space changes that aren't required. The string comparisons for exception messages and then instantiating a concrete exception could probably be replaced with a forname() on the string exception.

When we fix this issue in trunk, please make it more generic on lines similar to above., implemented some of Devaraj's comments.

also set stack to empty for artificially created exceptions (on the client side).

Agree with Devaraj that we need a more generic solution for all types of token.

Please open a Jira on this and put these requirements in., committed to branch-20-security., preliminary patch for .22, patch for trunk, +1 overall.
     [exec]
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec]
     [exec]     -1 tests included.  The patch doesn't appear to include any new or modified tests.
     [exec]                         Please justify why no new tests are needed for this patch.
     [exec]                         Also please list what manual steps were performed to verify this patch.
     [exec]
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.     [exec]
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec]
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
     [exec]
     [exec]     +1 release audit.  The applied patch does not increase the total number of release audit warnings.
     [exec]
     [exec]

No unit tests, but I did manual testing using discp copying from the same cluster or from 0.20 one, ran the ant test and it passed., Please use constant defined in DFSConfigKeys for dfs.https.port and for the default as well., changed "dfs.https.port" to DFSConfigKeys...., +1 for the patch., I have committed this. Thanks to Boris!, Integrated in Hadoop-Mapreduce-trunk-Commit #651 (See [https://builds.apache.org/hudson/job/Hadoop-Mapreduce-trunk-Commit/651/])
    MAPREDUCE-2420. JobTracker should be able to renew delegation token over HTTP. Contributed by Boris Shkolnik.
, patch for previous version(.22)
using DFSConfigKeys.DFS_HTTPS_PORT_KEY instead of string value., Integrated in Hadoop-Mapreduce-trunk #669 (See [https://builds.apache.org/hudson/job/Hadoop-Mapreduce-trunk/669/])
    , Patch for 22 , I removed my patch for 22. The patch -MR-2420.22-3.patch  is good. 
The patch for 22 in HDFS-1860 has to be applied first., I just committed this to branch 0.22.1. Thank you Benoy., Integrated in Hadoop-Mapreduce-22-branch #104 (See [https://builds.apache.org/job/Hadoop-Mapreduce-22-branch/104/])
    MAPREDUCE-2420. JobTracker should be able to renew delegation token over HTTP. Contributed by Boris Shkolnik and Benoy Antony. (Revision 1346233)

     Result = SUCCESS
shv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1346233
Files : 
* /hadoop/common/branches/branch-0.22/mapreduce/CHANGES.txt
* /hadoop/common/branches/branch-0.22/mapreduce/src/java/org/apache/hadoop/mapreduce/security/token/DelegationTokenRenewal.java
]