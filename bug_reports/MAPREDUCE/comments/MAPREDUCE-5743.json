[With attached patch, TestRMContainerAllocator passes., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12622502/mapreduce-5719-v1.txt
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4315//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4315//console

This message is automatically generated., The test failure seems to be related to YARN-1041. However, AM container is supposed to be not null here, because the current is already up to contact ApplicationMasterService.

The problem may be within the test case itself. Some simplification or abstraction makes the current attempt doesn't have an associated container before getting registered with ApplicationMasterService., Thank you for taking thias JIRA, [~zjshen]. This is my review comment:

{code}
+    ContainerId amContainerId = null;
+    if (container != null) amContainerId = container.getId();
     for (RMContainer rmContainer : liveContainers) {
       if (!rmContainer.getContainerId().equals(amContainerId)) 
{code}

Potentially, null pointer access can be caused because amContainerId can be null. Should we iterate liveContainers only when "container" is not null and "amContainerId" is not null?, Thanks for the review.

In ContainerId:
{code}
  public boolean equals(Object obj) {
    if (this == obj)
      return true;
    if (obj == null)
      return false;
{code}
so when amContainerId is null, rmContainer.getContainerId().equals(amContainerId) would return false.

Is this Okay ?, LGTM!, I also confirmed that your patch works well to pass TestRMContainerAllocator., Patch v2 is test only change.

TestRMContainerAllocator passes locally., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12623860/mapreduce-5719-v2.txt
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4328//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4328//console

This message is automatically generated., Looks like the pass of TestRMContainerAllocator#testCompletedTasksRecalculateSchedule depends on amNodeManager.nodeHeartbeat(true). Without the heartbeat, I still get:
{code}
testCompletedTasksRecalculateSchedule(org.apache.hadoop.mapreduce.v2.app.TestRMContainerAllocator)  Time elapsed: 3.62 sec  <<< ERROR!
org.apache.hadoop.yarn.exceptions.YarnRuntimeException: java.lang.NullPointerException
	at org.apache.hadoop.yarn.server.resourcemanager.scheduler.AbstractYarnScheduler.getTransferredContainers(AbstractYarnScheduler.java:52)
	at org.apache.hadoop.yarn.server.resourcemanager.ApplicationMasterService.registerApplicationMaster(ApplicationMasterService.java:279)
	at org.apache.hadoop.mapreduce.v2.app.rm.RMCommunicator.register(RMCommunicator.java:155)
	at org.apache.hadoop.mapreduce.v2.app.TestRMContainerAllocator$MyContainerAllocator.register(TestRMContainerAllocator.java:1476)
{code}
In my opinion the null check is desirable so that there is no direct dependency on heartbeat., bq. In my opinion the null check is desirable so that there is no direct dependency on heartbeat.

It should be the correct fix. With NM heartbeat, the container (AM container in this case) can be allocated for the application, and registration with RM happens after AM container get allocated, thus AM container is always not null in getTransferredContainers., {quote}
In my opinion the null check is desirable so that there is no direct dependency on heartbeat.
{quote}

+1.  [~zjshen] and [~tedyu@apache.org], then we can use mapreduce-5719-v1.txt by Ted to fix the problem, right?, I tried "mvn clean test -Dtest=TestRMContainerAllocator". Cannot reproduce the error.
How are you using?, This test has been failing for 10 days.
The latest occurrence was:
https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1677/console

On Mac, I can reproduce using:
mvn test -Dtest=TestRMContainerAllocator, Just to clarify one thing. Are we using the patch v1 to fix  this issue?, I haven't seen any activity on this JIRA since a week or so. I have reviewed the comments above and both the patches attached
mapreduce-5719-v1 looks good to me.
+1 (non binding), Is my understanding correct that the null pointer can only happen in the test?  Is there any way to work around this in the test code?  If not, we should at least comment that we're doing the check for that reason., [~sandyr], I have been looking into it and I could not say for sure that the null pointer will only  occur in the test. So I liked the workaround with the patch v1. But I like your suggestion of putting the comment for doing the check, How about patch v3 ?, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12626196/mapreduce-5719-v3.txt
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4342//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4342//console

This message is automatically generated., Don't think null-check is the right solution - it will hide bugs. We already ran into a bug that we are fixing at YARN-1689. Let's not put this fix. Let's figure out what the real issue is., Cancelling the patch.

The real interesting piece from the test-output is missing in the JIRA so far. Here you go:
{code}
2014-02-05 20:16:34,306 DEBUG [AsyncDispatcher event handler] attempt.RMAppAttemptImpl (RMAppAttemptImpl.java:handle(638)) - Processing event for appattempt_1391660110760_0001_000001 of type REGISTERED
2014-02-05 20:16:34,306 DEBUG [main] service.AbstractService (AbstractService.java:noteFailure(261)) - noteFailure org.apache.hadoop.yarn.exceptions.YarnRuntimeException: java.lang.NullPointerException
2014-02-05 20:16:34,306 ERROR [AsyncDispatcher event handler] attempt.RMAppAttemptImpl (RMAppAttemptImpl.java:handle(645)) - Can't handle this event at current state
org.apache.hadoop.yarn.state.InvalidStateTransitonException: Invalid event: REGISTERED at SCHEDULED
        at org.apache.hadoop.yarn.state.StateMachineFactory.doTransition(StateMachineFactory.java:305)
        at org.apache.hadoop.yarn.state.StateMachineFactory.access$300(StateMachineFactory.java:46)
        at org.apache.hadoop.yarn.state.StateMachineFactory$InternalStateMachine.doTransition(StateMachineFactory.java:448)
        at org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptImpl.handle(RMAppAttemptImpl.java:643)
        at org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptImpl.handle(RMAppAttemptImpl.java:102)
        at org.apache.hadoop.yarn.server.resourcemanager.ResourceManager$ApplicationAttemptEventDispatcher.handle(ResourceManager.java:730)
        at org.apache.hadoop.yarn.server.resourcemanager.ResourceManager$ApplicationAttemptEventDispatcher.handle(ResourceManager.java:711)
        at org.apache.hadoop.yarn.event.AsyncDispatcher.dispatch(AsyncDispatcher.java:173)
        at org.apache.hadoop.yarn.event.DrainDispatcher$1.run(DrainDispatcher.java:65)
        at java.lang.Thread.run(Thread.java:680)
{code}, Sorry the project-move spam. I realized this is a test-case issue. Moving it back to MapReduce., Editing the title to reflect the reality.

I found out the issue with the test. Fixing it myself., Here's a patch which fixes the test-case. The problem was that before YARN-1041, the test passed without needing to simulate the AM-start but that doesn't hold anymore.

Changed the test to simulate the AM start. And now all is well., Thanks for looking into this.

Similar fix was proposed in mapreduce-5719-v2.txt, +1 for the patch. Will commit it once jenkins +1, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12627295/MAPREDUCE-5743.txt
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4347//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4347//console

This message is automatically generated., SUCCESS: Integrated in Hadoop-trunk-Commit #5116 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/5116/])
MAPREDUCE-5743. Fixed the test failure in TestRMContainerAllocator. Contributed by Vinod Kumar Vavilapalli. (zjshen: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1565087)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/TestRMContainerAllocator.java
, Committed to trunk, branch-2 and branch-2.3. Thanks Vinod for the patch! Also, thanks Ted for your investigation as well!, bq. Similar fix was proposed in mapreduce-5719-v2.txt
Sorry Ted, I missed that context. Zhijie, can you please credit Ted also with the patch? Please update the JIRA Assignee and CHANGES.txt too. Thanks., SUCCESS: Integrated in Hadoop-Yarn-trunk #473 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/473/])
MAPREDUCE-5743. Fixed the test failure in TestRMContainerAllocator. Contributed by Vinod Kumar Vavilapalli. (zjshen: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1565087)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/TestRMContainerAllocator.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1665 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1665/])
MAPREDUCE-5743. Fixed the test failure in TestRMContainerAllocator. Contributed by Vinod Kumar Vavilapalli. (zjshen: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1565087)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/TestRMContainerAllocator.java
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #1690 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1690/])
MAPREDUCE-5743. Fixed the test failure in TestRMContainerAllocator. Contributed by Vinod Kumar Vavilapalli. (zjshen: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1565087)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/TestRMContainerAllocator.java
, bq. Sorry Ted, I missed that context. Zhijie, can you please credit Ted also with the patch? Please update the JIRA Assignee and CHANGES.txt too. Thanks.
Done this myself. Thanks and apologies again, Ted., No apologies necessary., SUCCESS: Integrated in Hadoop-trunk-Commit #5122 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/5122/])
MAPREDUCE-5743. Fixed CHANGES.txt to give credit to Ted too. (vinodkv: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1565401)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Yarn-trunk #474 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/474/])
MAPREDUCE-5743. Fixed CHANGES.txt to give credit to Ted too. (vinodkv: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1565401)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1666 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1666/])
MAPREDUCE-5743. Fixed CHANGES.txt to give credit to Ted too. (vinodkv: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1565401)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #1691 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1691/])
MAPREDUCE-5743. Fixed CHANGES.txt to give credit to Ted too. (vinodkv: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1565401)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
]