[Attaching a patch to fix the issue. This patch reads /proc/pid/cmdline to get the command line of each process and uses this to get the process-tree's dump. The dump is logged both on the TaskTracker and is displayed on the web-ui in the Errors tab. Added a simple test-case and also tested this on a local cluster., Changes look fine to me. +1 to patch, Small changes to the patch. The process-tree dump propagates back to the JobClient. So, pretty-printing the process-tree dump now to reduce clutter on the client. Also adding tip-id in the process-tree dump for quick reference., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12408234/HADOOP-5570-20090615.txt
  against trunk revision 775492.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 Eclipse classpath. The patch retains Eclipse classpath integrity.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch-vesta.apache.org/345/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch-vesta.apache.org/345/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch-vesta.apache.org/345/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch-vesta.apache.org/345/console

This message is automatically generated., +1 to the latest patch., Another small change to the patch. This adds to the dump the memory usage of each process in the process-tree at the time of killing., Patch fixing the test case., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12408803/HADOOP-5570-20090622.txt
  against trunk revision 778388.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 Eclipse classpath. The patch retains Eclipse classpath integrity.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch-vesta.apache.org/399/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch-vesta.apache.org/399/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch-vesta.apache.org/399/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch-vesta.apache.org/399/console

This message is automatically generated., Attaching patch merging with lastest trunk., The patch needs to be regenerated following the project split., This patch touches ProcfsBasedProcessTree which is intended to be moved into mapreduce projects via HADOOP-6156. Linking the issues., 
Attaching an updated patch to reflect the project split. Also added parent pid to the dump.

The tree dump would look something like below"
{code}
TaskTree [pid=20096,tipID=attempt_20090902122532859_0001_m_000004_0] is running beyond memory-
limits. Current usage : 426889216bytes. Limit : 1048576bytes. Killing task. 
Dump of the process-tree for attempt_20090902122532859_0001_m_000004_0 : 
        |- $pid $ppid $cmd_name $vmem_usage $cmd_line
        |- 20130 20128 (sh) 1916928bytes sh /home/vinodkv/Workspace/eclipse-workspace/hadoop-mapreduce/build/test/data
/testProcessTree_shellScript_-2044420742.sh 0 
        |- 20128 20126 (sh) 1916928bytes sh /home/vinodkv/Workspace/eclipse-workspace/hadoop-mapreduce/build/test/data
/testProcessTree_shellScript_-2044420742.sh 1 
        |- 20116 20096 (bash) 4542464bytes bash -c  echo $$ > /home/vinodkv/Workspace/eclipse-workspace/hadoop-mapreduce/build
/test/data/testProcessTree_pidFile_-1719677031.pid; sh /home/vinodkv/Workspace/eclipse-workspace/hadoop-mapreduce/build/test/data
/testProcessTree_shellScript_-2044420742.sh 6; 
        |- 20117 20116 (sh) 1916928bytes sh /home/vinodkv/Workspace/eclipse-workspace/hadoop-mapreduce/build/test/data
/testProcessTree_shellScript_-2044420742.sh 6 
        |- 20132 20130 (sleep) 3108864bytes sleep 5 
        |- 20120 20117 (sh) 1916928bytes sh /home/vinodkv/Workspace/eclipse-workspace/hadoop-mapreduce/build/test/data
/testProcessTree_shellScript_-2044420742.sh 5 
        ....
{code}
, Some comments:
- Firstly, it appears cmdline could be empty if the whole process is swapped out. I suppose this is possible. Is the method we use reliable then ?
- I think getCmdLine can return "Unknown" rather than empty when it can't find a command line.
- Also, the replacement of '\0' with space should happen in getCmdLine, that too, only when we read the line, rather than getProcessTreeDump(), because it is more relevant only there.
- I think it will be useful to also show session id and process group id, so that we can catch for mysterious changes to these if tasks are doing them.
- Regarding the test case, it seems we can get away with a unit test for this, just like testVirtualMemoryForProcessTree(), which would be more controlled and reliable rather than on the relying on system behavior of procfs. That way, even if there is a problem, we can differentiate between system incompatibilities and bugs in code. I am fine with the existing test, but would like to treat that as a smoke test of the feature, but have a unit test for fast runs., Attaching patch.
bq. Firstly, it appears cmdline could be empty if the whole process is swapped out. I suppose this is possible. Is the method we use reliable then?
We don't have any other simple way of determining the complete command line. Presumably, we can read it from the process's image on the disk, but the effort is not worth it. Printing N/A when we find the cmdline empty.

bq. I think getCmdLine can return "Unknown" rather than empty when it can't find a command line.
Printing N/A here too.

Incorporated the rest of the comments too.

In sum, the dump looks like
{noformat}
        |- PID PPID PGRPID SESSID CMD_NAME VMEM_USAGE(BYTES) FULL_CMD_LINE
        |- 100 1 100 100 (proc1) 100000 proc1 arg1 arg2
        |- 200 100 100 100 (proc2) 200000 proc2 arg3 arg4
        |- 500 400 100 100 (proc5) 400000 proc5 arg9 arg10
        |- 400 200 100 100 (proc4) 400000 proc4 arg7 arg8
        |- 300 200 100 100 (proc3) 300000 proc3 arg5 arg6
{noformat}
, The previous patch had a few stale changes. Please disregard that. Attaching a corrected patch., Changes look good to me. +1., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12418513/MAPREDUCE-144-20090903.1.txt
  against trunk revision 812287.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 1 new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/14/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/14/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/14/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/14/console

This message is automatically generated., Patch fixing find-bugs warning., The mapred, contrib tests passed with this patch and with a jar that avoids problems causing HADOOP-6243., `ant test-patch` also passed., Running through Hudson to try if things work, now that HADOOP-6243 changes are committed., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12418894/MAPREDUCE-144-20090908.txt
  against trunk revision 812473.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/45/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/45/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/45/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/45/console

This message is automatically generated., I just committed this to trunk. Thanks, Vinod !, This is a patch for the Yahoo! distribution, not for committing., Integrated in Hadoop-Mapreduce-trunk-Commit #24 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-Mapreduce-trunk-Commit/24/])
    . Includes dump of the process tree in task diagnostics when a task is killed due to exceeding memory limits. Contributed by Vinod Kumar Vavilapalli.
, Modified TaskMemoryManager so that it logs a map/reduce task's process-tree's status just before it is killed when it grows out of its configured memory limits. The log dump is in the format " |- PID PPID PGRPID SESSID CMD_NAME VMEM_USAGE(BYTES) FULL_CMD_LINE".

This is useful for debugging the cause for a map/reduce task and it's corresponding process-tree to be killed by the TaskMemoryManager.
]