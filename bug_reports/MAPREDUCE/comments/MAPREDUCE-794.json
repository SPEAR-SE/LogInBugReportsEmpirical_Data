[Job killed in PREP state will cause the job to invoke job.garbageCollect() which does
{code}
 jobtracker.getInstrumentation().decWaitingMaps(getJobID(), pendingMaps());
 jobtracker.getInstrumentation().decWaitingReduces(getJobID(), pendingReduces());
{code}
 
which goes ahead and blindly deletes _pendingMaps()=total_maps_ from _numWaitingMaps_. But pendingMaps() is added to the JobTrackerInstrumentation only upon init.

{code}
@Override
  public synchronized void decWaitingMaps(JobID id, int task) {
    numWaitingMaps -= task;
  }
{code}

{code}
initTasks() {
..
..
 jobtracker.getInstrumentation().addWaitingMaps(getJobID(), numMapTasks);
 jobtracker.getInstrumentation().addWaitingReduces(getJobID(), numReduceTasks);
..
..
}
{code}]