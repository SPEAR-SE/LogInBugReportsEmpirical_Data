[Could you provide more details? hardware spec, your benchmark program, and what do you observe as the bottleneck resource?, I think it's a general fall back though I run sort benchmark on my cluster
with 20 nodes.

I set the mapred.tasktracker.{map|reduce}.tasks.maximum = 1 individually. In
a single job, map task running simultaneously with a reduce task will be
more slower than the solo one. And for the inter-dependency of the tasks,
shuffles in the reduce tasks will waiting for the maps and the response time
of the job will increase.


2010/1/5 Hong Tang (JIRA) <jira@apache.org>



-- 
Thank you!
谢谢!

张钊宁
zzningxp
, How many CPU cores do each of the node have?, virtual machines in the XenServer cluster, some nodes are allocated with 1 cpu and some nodes with 2 or 3.
but I think it's a inter-dependence structure problem, the reduce will always waiting for the maps to finish its tasks, why not let the maps to use full resources separately?, The purpose of the distribute system is high utility.

If you want to analysis running tasks performance, you can just set one node with one map and no reduce, Vice-versa.]