[When {{TestIndexCache}} failed, the log contained a warning message, "Map IDxxxx not found in queue!!". The queue is used to figure out what to drop in its the FIFO cache replacement policy. This message indicates that the cache entry was freed by a removeMap() call, but the corresponding entry was not found in the queue.

This can happen if {{removeMap()}} is called while the cache entry is being loaded. If a new incomplete entry is added to the cache between {{cache.get(mapId)}} and {[cache.remove{{mapId}} in {{removeMap()}}, the new entry will be removed from the cache. Further, if {{totalMemoryUsed}} is updated before the entry is fully loaded, it will end up subtracting zero from the usage. When the loading is complete in {{readIndexFileToCache()}}, {{totalMemoryUsed}} will be incremented, but since it was already removed from the cache, there is no way it can be decremented. Hence the discrepancy in memory usage tracking.

This issue can be fixed by adding one more condition to the first check in {{removeMap()}}

{noformat}
   IndexInformation info = cache.get(mapId);
 - if ((info != null) && (info.getSize() == 0)) {
 + if (info == null || ((info != null) && (info.getSize() == 0))) {
     return;
    }
{noformat}


Another potential issue is in {{readIndexFileToCache()}}. When two different threads are trying to add the same entry to the cache, there can be a deadlock. When Thread A puts a new {{IndexInformation}} object in the cache,  Thread B can come in a bit late and do {{wait()}} on this object to be fully ready. The {{wait()}} is inside the {{synchronized(info)}} block and {{info}} is the new object it just found in the cache.  But Thread A also tries to update the same object and do {{notifyAll()}} inside a synchronized() block on it. This results in a deadlock.

, branch-1 has similar problem, but its usage is different. While {{ShuffleHandler}} does not call {{IndexCache#removeMap()}} in 2.0, {{TaskTracker}} does call it. The race seems very rare, if ever actually happens. I will work on a branch-1 version, once the trunk version is done., A new test case tries to create the new entry race condition. I ran it many times, but only got it to happen once., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12533908/mapreduce-4384.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 1 new or modified test files.

    -1 javac.  The applied patch generated 2071 javac compiler warnings (more than the trunk's current 2070 warnings).

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

                  org.apache.hadoop.mapred.jobcontrol.TestLocalJobControl
                  org.apache.hadoop.mapreduce.lib.jobcontrol.TestMapReduceJobControl

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/2529//testReport/
Javac warnings: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/2529//artifact/trunk/trunk/patchprocess/diffJavacWarnings.txt
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/2529//console

This message is automatically generated., The two test failures seem to be caused by MAPREDUCE-4371. It reliably fails without this patch applied., MAPREDUCE-4253 moved the test file to a different directory.
I will post an updated patch., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12534291/mapreduce-4384.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 1 new or modified test files.

    -1 javac.  The applied patch generated 2070 javac compiler warnings (more than the trunk's current 2069 warnings).

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/2539//testReport/
Javac warnings: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/2539//artifact/trunk/trunk/patchprocess/diffJavacWarnings.txt
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/2539//console

This message is automatically generated., I posted an updated patch but the PreCommit-Admin build job hasn't run for almost two hours..., I ran test-patch manually. There were 2066 (-3) javac warnings with the new patch., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12534306/mapreduce-4384.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 1 new or modified test files.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/2541//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/2541//console

This message is automatically generated., Since the new testcase isn't very reliable at reproducing the issue I propose we just remove it. Otherwise +1., Attaching new patch without the test case., +1. Thanks Kihwal.  I've committed this to trunk, branch-2, and branch-0.23., Integrated in Hadoop-Mapreduce-trunk-Commit #2444 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Commit/2444/])
    MAPREDUCE-4384. Race conditions in IndexCache (Kihwal Lee via tgraves) (Revision 1357937)

     Result = FAILURE
tgraves : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1357937
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/IndexCache.java
, Integrated in Hadoop-Common-trunk-Commit #2427 (See [https://builds.apache.org/job/Hadoop-Common-trunk-Commit/2427/])
    MAPREDUCE-4384. Race conditions in IndexCache (Kihwal Lee via tgraves) (Revision 1357937)

     Result = SUCCESS
tgraves : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1357937
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/IndexCache.java
, Integrated in Hadoop-Hdfs-trunk-Commit #2495 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Commit/2495/])
    MAPREDUCE-4384. Race conditions in IndexCache (Kihwal Lee via tgraves) (Revision 1357937)

     Result = SUCCESS
tgraves : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1357937
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/IndexCache.java
, Integrated in Hadoop-Hdfs-trunk #1095 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1095/])
    MAPREDUCE-4384. Race conditions in IndexCache (Kihwal Lee via tgraves) (Revision 1357937)

     Result = FAILURE
tgraves : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1357937
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/IndexCache.java
, Integrated in Hadoop-Mapreduce-trunk #1128 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1128/])
    MAPREDUCE-4384. Race conditions in IndexCache (Kihwal Lee via tgraves) (Revision 1357937)

     Result = SUCCESS
tgraves : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1357937
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/IndexCache.java
, Integrated in Hadoop-Hdfs-0.23-Build #305 (See [https://builds.apache.org/job/Hadoop-Hdfs-0.23-Build/305/])
    merge -r 1357939:1357940 from branch-2. FIXES: MAPREDUCE-4384 (Revision 1357942)

     Result = SUCCESS
tgraves : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1357942
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/IndexCache.java
, Integrated in Hadoop-Hdfs-trunk-Commit #2508 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Commit/2508/])
    MAPREDUCE-4384. Race conditions in IndexCache (Kihwal Lee via tgraves) (Revision 1357937)

     Result = SUCCESS
tgraves : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1357937
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/IndexCache.java
, Integrated in Hadoop-Common-trunk-Commit #2441 (See [https://builds.apache.org/job/Hadoop-Common-trunk-Commit/2441/])
    MAPREDUCE-4384. Race conditions in IndexCache (Kihwal Lee via tgraves) (Revision 1357937)

     Result = SUCCESS
tgraves : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1357937
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/IndexCache.java
]