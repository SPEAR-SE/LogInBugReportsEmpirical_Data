[Looks like this failure is due to an OOME:

11/05/16 15:36:33 WARN mapred.LocalJobRunner: job_local_0003
java.lang.Exception: java.lang.OutOfMemoryError: Java heap space
	at org.apache.hadoop.mapred.LocalJobRunner$Job.run(LocalJobRunner.java:387)
Caused by: java.lang.OutOfMemoryError: Java heap space
	at org.apache.hadoop.mapred.MapTask$MapOutputBuffer.<init>(MapTask.java:799)
	at org.apache.hadoop.mapred.MapTask.runOldMapper(MapTask.java:381)
	at org.apache.hadoop.mapred.MapTask.run(MapTask.java:322)
	at org.apache.hadoop.mapred.LocalJobRunner$Job$MapTaskRunnable.run(LocalJobRunner.java:254)
, Simple patch to up the maxmemory argument for the raid contrib to match the rest of the tests., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12479397/mapreduce-2498.txt
  against trunk revision 1103921.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/hudson/job/PreCommit-MAPREDUCE-Build/249//console

This message is automatically generated., doh. looks like MAPREDUCE-2467 already added the maxmemory argument, but it's still failing.

Can someone tell if this is some kind of legitimate memory leak?, Another option is to use a MiniMRCluster in the raid test. I can make that change., stale]