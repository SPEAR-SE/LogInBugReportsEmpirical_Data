[The test unintentionally relies the iteration order of {{HashMap.entrySet()}}. Therefore the test fails in JDK8. {{MAPREDUCE-6165-reproduce.patch}} can reproduce the failure on JDK7., The test asserted the location of the splits, which is defined by the iteration order of {{HashMap.entrySet()}}. However, the order of JDK8 is different from JDK7, so the location of the splits is different.

For example, JDK7 creates two split,
{code}
Made splits(Test1): 2
File split(Test1): Paths:/dir2/file2:0+1024,/dir2/file2:1024+1024 Locations:host2.rack2.com:; 
File split(Test1): Paths:/dir1/file1:0+1024 Locations:host1.rack1.com:; 
{code}
on the other hand, JDK8 creates one split in the same block placement
{code}
Made splits(Test1): 1
File split(Test1): Paths:/dir1/file1:0+1024,/dir2/file2:0+1024,/dir2/file2:1024+1024 Locations:host1.rack1.com:; 
{code}

The patch does not assert the locations. It asserts the number of the path and the total length of the splits., Resubmitting., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12685053/MAPREDUCE-6165-001.patch
  against trunk revision 6583ad1.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

                  org.apache.hadoop.conf.TestJobConf

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5169//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5169//console

This message is automatically generated., [~ajisakaa] Thank you for taking this issue.

Why not using assertEquals(2, splits.size())?
{code}
-      assertEquals(2, splits.size());
+      assertTrue(splits.size() >= 1);
+      assertTrue(splits.size() <= 2);
{code}

I think some applications depend on the ordering...maybe it would be good to use TreeMap<K,V> or LinkedHashMap<K, V> instead of HashMap., bq. Why not using assertEquals(2, splits.size())?
split.size() can be 1 or 2. The size depends on the ordering.

bq. I think some applications depend on the ordering...maybe it would be good to use TreeMap<K,V> or LinkedHashMap<K, V> instead of HashMap.
I'm thinking using TreeMap or LinkedHashMap fixes the test but it's useless for production., OK, but it's not decision to reduce tests here. How about doing like this?
{code}
assertEquals(2, splits.size());
fileSplit = (CombineFileSplit) splits.get(0);
if (fileSplit.getNumPaths() == 2) {
  assertEquals(1, fileSplit.getLocations().length);
  assertEquals(file2.getName(), fileSplit.getPath(0).getName());
  assertEquals(0, fileSplit.getOffset(0));
  assertEquals(BLOCKSIZE, fileSplit.getLength(0));
  assertEquals(file2.getName(), fileSplit.getPath(1).getName());
  assertEquals(BLOCKSIZE, fileSplit.getOffset(1));
  assertEquals(BLOCKSIZE, fileSplit.getLength(1));
  assertEquals(hosts2[0], fileSplit.getLocations()[0]); // should be on r2
} else if (fileSplit.getNumPaths() == 1) {
  assertEquals(file1.getName(), fileSplit.getPath(0).getName());
  assertEquals(0, fileSplit.getOffset(0));
  assertEquals(BLOCKSIZE, fileSplit.getLength(0));
  assertEquals(hosts1[0], fileSplit.getLocations()[0]); // should be on r1
}
{code}, s/it's not decision/ it's not good decision/, Make sense to me. I'll update the patch., Attaching a patch to
* Use original tests as possible
* Clean up the test to use org.junit instead of junit.framework (TestCombineFileInputFormat used both packages)

I verified the test passed with JDK8., [~ajisakaa] Thank you for updating. I think we should iterate splits to verify the values like this:
{code}
for (fileSplit: splits) {
  if (fileSplit.size() == 2) {
    ...
  } else if (...) {
    ...
  } else {
    fail()
  }
}
{code}, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12706859/MAPREDUCE-6165-002.patch
  against trunk revision c6c396f.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

      {color:red}-1 javac{color}.  The applied patch generated 1157 javac compiler warnings (more than the trunk's current 1151 warnings).

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5330//testReport/
Javac warnings: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5330//artifact/patchprocess/diffJavacWarnings.txt
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5330//console

This message is automatically generated., Cancelling the patch for the comment., Thanks [~ozawa] for your comment.
bq. I think we should iterate splits to verify the values like this:
Would you tell me the detail?

{code}
for (CombineFileSplit fileSplit : splits) {
  if (splits.size() == 2) {
    ...
  } else if (...) {
    ...
  } else {
    fail()
  }
}
{code}
If we do as the above, we need extra if statement to verify that each split is on the expected rack as follows:
{code}
for (InputSplit split : splits) {
  fileSplit = (CombineFileSplit) split;
  if (splits.size() == 2) {
    // if split is splits.get(0), verify the split is on rack X
    // if split is splits.get(1), verify the split is on rack Y
  } else if (splits.size() == 1) {
    // verify split is on rack Z
  } else {
    fail()
  }
}
{code}
or do you want to drop the test for each split is on the expected rack?, Sorry, maybe I confuse you. I meant we shouldn't drop any tests and should preserve tests like this:
{code}
for (fileSplit: splits) {
  if (fileSplit.getNumPaths() == 3) {
    ...
  } else if (...) {
    ...
  } else {
    fail()
  }
}
{code}, {quote}
Clean up the test to use org.junit instead of junit.framework (TestCombineFileInputFormat used both packages)
{quote}
In addition to previous comments, I prefer to do this on separate JIRA for reviewing quickly., bq. In addition to previous comments, I prefer to do this on separate JIRA for reviewing quickly.
Filed MAPREDUCE-6292. I'd like to clean up the test first., {code}
we need extra if statement to verify that each split is on the expected rack as follows
{code}
Yes, this is one of implementations. Our first priority is preserving all tests, and second is clean code. If we can flatten these statement structure, it's better., Thanks [~ozawa] for comments. I'll create a patch with the pattern:
{code}
for (InputSplit split : splits) {
  fileSplit = (CombineFileSplit) split;
  if (splits.size() == 2) {
    // if split is splits.get(0), verify the split is on rack X
    // if split is splits.get(1), verify the split is on rack Y
  } else if (splits.size() == 1) {
    // verify split is on rack Z
  } else {
    fail()
  }
}
{code}
, Updated the patch., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12707447/MAPREDUCE-6165-003.patch
  against trunk revision b4b4fe9.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

                  org.apache.hadoop.mapred.TestReduceFetch
                  org.apache.hadoop.mapred.TestMerge
                  org.apache.hadoop.mapreduce.TestMapReduceLazyOutput
                  org.apache.hadoop.mapred.TestMRIntermediateDataEncryption
                  org.apache.hadoop.mapred.TestLazyOutput
                  org.apache.hadoop.mapreduce.TestLargeSort
                  org.apache.hadoop.mapred.TestReduceFetchFromPartialMem
                  org.apache.hadoop.mapreduce.v2.TestMRJobsWithProfiler
                  org.apache.hadoop.mapreduce.v2.TestRMNMInfo
                  org.apache.hadoop.mapreduce.lib.output.TestJobOutputCommitter
                  org.apache.hadoop.mapreduce.security.ssl.TestEncryptedShuffle
                  org.apache.hadoop.mapred.TestJobSysDirWithDFS
                  org.apache.hadoop.ipc.TestMRCJCSocketFactory
                  org.apache.hadoop.mapred.TestSpecialCharactersInOutputPath
                  org.apache.hadoop.mapreduce.v2.TestMROldApiJobs
                  org.apache.hadoop.mapred.TestJobCleanup
                  org.apache.hadoop.mapreduce.v2.TestSpeculativeExecution
                  org.apache.hadoop.conf.TestNoDefaultsJobConf
                  org.apache.hadoop.mapred.TestClusterMRNotification
                  org.apache.hadoop.mapreduce.v2.TestMRAMWithNonNormalizedCapabilities
                  org.apache.hadoop.mapreduce.v2.TestNonExistentJob
                  org.apache.hadoop.mapreduce.v2.TestMRJobs
                  org.apache.hadoop.mapred.TestMiniMRWithDFSWithDistinctUsers
                  org.apache.hadoop.mapreduce.v2.TestMRAppWithCombiner
                  org.apache.hadoop.mapreduce.v2.TestUberAM
                  org.apache.hadoop.mapred.TestJobName
                  org.apache.hadoop.mapreduce.TestMRJobClient
                  org.apache.hadoop.mapred.TestMiniMRBringup
                  org.apache.hadoop.mapred.TestClusterMapReduceTestCase
                  org.apache.hadoop.mapreduce.security.TestMRCredentials
                  org.apache.hadoop.mapred.TestMRTimelineEventHandling
                  org.apache.hadoop.mapreduce.v2.TestMiniMRProxyUser
                  org.apache.hadoop.mapreduce.v2.TestMRJobsWithHistoryService
                  org.apache.hadoop.mapred.TestMiniMRClasspath
                  org.apache.hadoop.mapred.TestMiniMRClientCluster
                  org.apache.hadoop.mapred.TestNetworkedJob
                  org.apache.hadoop.mapred.TestMiniMRChildTask
                  org.apache.hadoop.mapreduce.TestChild
                  org.apache.hadoop.mapreduce.security.TestBinaryTokenFile
                  org.apache.hadoop.mapred.TestJobCounters

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5338//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5338//console

This message is automatically generated., The results of tests looks strange. Attaching v3 patch again to kick Jenkins., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12707697/MAPREDUCE-6165-003.patch
  against trunk revision af618f2.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

                  org.apache.hadoop.mapreduce.v2.TestSpeculativeExecution
                  org.apache.hadoop.mapreduce.security.ssl.TestEncryptedShuffle
                  org.apache.hadoop.mapred.TestMiniMRChildTask
                  org.apache.hadoop.mapred.TestMiniMRBringup
                  org.apache.hadoop.conf.TestNoDefaultsJobConf
                  org.apache.hadoop.mapred.TestJobSysDirWithDFS
                  org.apache.hadoop.mapred.TestMiniMRClientCluster
                  org.apache.hadoop.mapred.TestClusterMRNotification
                  org.apache.hadoop.mapred.TestMRTimelineEventHandling
                  org.apache.hadoop.mapreduce.v2.TestMRJobsWithHistoryService
                  org.apache.hadoop.mapreduce.security.TestBinaryTokenFile
                  org.apache.hadoop.mapred.TestReduceFetch
                  org.apache.hadoop.mapreduce.v2.TestNonExistentJob
                  org.apache.hadoop.mapreduce.v2.TestMiniMRProxyUser
                  org.apache.hadoop.mapred.TestNetworkedJob
                  org.apache.hadoop.ipc.TestMRCJCSocketFactory
                  org.apache.hadoop.mapreduce.v2.TestMROldApiJobs
                  org.apache.hadoop.mapred.TestClusterMapReduceTestCase
                  org.apache.hadoop.mapred.TestMRIntermediateDataEncryption
                  org.apache.hadoop.mapred.TestReduceFetchFromPartialMem
                  org.apache.hadoop.mapreduce.lib.output.TestJobOutputCommitter
                  org.apache.hadoop.mapreduce.TestLargeSort
                  org.apache.hadoop.mapreduce.v2.TestMRAppWithCombiner
                  org.apache.hadoop.mapred.TestJobName
                  org.apache.hadoop.mapreduce.v2.TestMRJobsWithProfiler
                  org.apache.hadoop.mapred.TestJobCounters
                  org.apache.hadoop.mapreduce.TestMapReduceLazyOutput
                  org.apache.hadoop.mapred.TestMiniMRWithDFSWithDistinctUsers
                  org.apache.hadoop.mapred.TestSpecialCharactersInOutputPath
                  org.apache.hadoop.mapreduce.v2.TestUberAM
                  org.apache.hadoop.mapreduce.security.TestMRCredentials
                  org.apache.hadoop.mapred.TestLazyOutput
                  org.apache.hadoop.mapred.TestMerge
                  org.apache.hadoop.mapreduce.v2.TestMRAMWithNonNormalizedCapabilities
                  org.apache.hadoop.mapreduce.v2.TestRMNMInfo
                  org.apache.hadoop.mapred.TestJobCleanup
                  org.apache.hadoop.mapreduce.TestChild
                  org.apache.hadoop.mapred.TestMiniMRClasspath
                  org.apache.hadoop.mapreduce.TestMRJobClient
                  org.apache.hadoop.mapreduce.v2.TestMRJobs

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5340//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5340//console

This message is automatically generated., LGTM.  I've checked locally that it now passes on JDKs 7 and 8.  I've just kicked off Jenkins to run again; hopefully it will work correctly this time.

+1 pending Jenkins, \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  14m 30s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:red}-1{color} | whitespace |   0m  0s | The patch has 2  line(s) that end in whitespace. |
| {color:green}+1{color} | javac |   7m 32s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 32s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 23s | The applied patch does not increase the total number of release audit warnings. |
| {color:red}-1{color} | checkstyle |   5m 20s | The applied patch generated  1  additional checkstyle issues. |
| {color:green}+1{color} | install |   1m 34s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 33s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   1m 56s | The patch does not introduce any new Findbugs (version 2.0.3) warnings. |
| {color:green}+1{color} | mapreduce tests |   1m 36s | Tests passed in hadoop-mapreduce-client-core. |
| {color:green}+1{color} | mapreduce tests | 105m 58s | Tests passed in hadoop-mapreduce-client-jobclient. |
| | | 148m 57s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12707697/MAPREDUCE-6165-003.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 5190923 |
| whitespace | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5468/artifact/patchprocess/whitespace.txt |
| checkstyle | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5468/artifact/patchprocess/checkstyle-result-diff.txt |
| hadoop-mapreduce-client-core test log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5468/artifact/patchprocess/testrun_hadoop-mapreduce-client-core.txt |
| hadoop-mapreduce-client-jobclient test log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5468/artifact/patchprocess/testrun_hadoop-mapreduce-client-jobclient.txt |
| Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5468/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf905.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5468/console |


This message was automatically generated., Fixed checkstyle and whitespace issues., (!) The patch artifact directory on has been removed! 
This is a fatal error for test-patch.sh.  Aborting. 
Jenkins (node H3) information at https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5477/ may provide some hints., I've kicked it off again., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  18m 28s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | javac |   8m 59s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |  11m  2s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 23s | The applied patch does not increase the total number of release audit warnings. |
| {color:green}+1{color} | checkstyle |   4m 50s | There were no new checkstyle issues. |
| {color:green}+1{color} | install |   1m 36s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 31s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   1m 55s | The patch does not introduce any new Findbugs (version 2.0.3) warnings. |
| {color:green}+1{color} | mapreduce tests |   1m 34s | Tests passed in hadoop-mapreduce-client-core. |
| {color:red}-1{color} | mapreduce tests |  62m 17s | Tests failed in hadoop-mapreduce-client-jobclient. |
| | | 111m 38s | |
\\
\\
|| Reason || Tests ||
| Timed out tests | org.apache.hadoop.mapred.TestJobCounters |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12729508/MAPREDUCE-6165-004.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / de9404f |
| hadoop-mapreduce-client-core test log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5478/artifact/patchprocess/testrun_hadoop-mapreduce-client-core.txt |
| hadoop-mapreduce-client-jobclient test log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5478/artifact/patchprocess/testrun_hadoop-mapreduce-client-jobclient.txt |
| Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5478/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf903.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5478/console |


This message was automatically generated., I ran the tests in hadoop-mapreduce-client-jobclient and they all passed locally (took about 1.5 hours).  I've kicked off Jenkins again just to be extra sure, but it looks like this patch is probably fine., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  14m 40s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | javac |   7m 43s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 57s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:red}-1{color} | checkstyle |   1m  3s | The applied patch generated  1 new checkstyle issues (total was 30, now 29). |
| {color:green}+1{color} | whitespace |   0m  5s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 32s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 33s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   1m 57s | The patch does not introduce any new Findbugs (version 2.0.3) warnings. |
| {color:green}+1{color} | mapreduce tests |   1m 48s | Tests passed in hadoop-mapreduce-client-core. |
| {color:green}+1{color} | mapreduce tests | 100m 34s | Tests passed in hadoop-mapreduce-client-jobclient. |
| | | 140m 34s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12729508/MAPREDUCE-6165-004.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 0d6aa5d |
| checkstyle |  https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5639/artifact/patchprocess/diffcheckstylehadoop-mapreduce-client-core.txt |
| hadoop-mapreduce-client-core test log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5639/artifact/patchprocess/testrun_hadoop-mapreduce-client-core.txt |
| hadoop-mapreduce-client-jobclient test log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5639/artifact/patchprocess/testrun_hadoop-mapreduce-client-jobclient.txt |
| Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5639/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf903.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5639/console |


This message was automatically generated., +1, committing this., Committed this to trunk and branch-2. Thanks [~ajisakaa] for your contribution and thanks [~rkanter] for your review!, SUCCESS: Integrated in Hadoop-trunk-Commit #7729 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7729/])
MAPREDUCE-6165. [JDK8] TestCombineFileInputFormat failed on JDK8. Contributed by Akira AJISAKA. (ozawa: rev 551615fa13f65ae996bae9c1bacff189539b6557)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/lib/input/TestCombineFileInputFormat.java
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/input/CombineFileInputFormat.java
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #184 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/184/])
MAPREDUCE-6165. [JDK8] TestCombineFileInputFormat failed on JDK8. Contributed by Akira AJISAKA. (ozawa: rev 551615fa13f65ae996bae9c1bacff189539b6557)
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/lib/input/TestCombineFileInputFormat.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/input/CombineFileInputFormat.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk #918 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/918/])
MAPREDUCE-6165. [JDK8] TestCombineFileInputFormat failed on JDK8. Contributed by Akira AJISAKA. (ozawa: rev 551615fa13f65ae996bae9c1bacff189539b6557)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/lib/input/TestCombineFileInputFormat.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/input/CombineFileInputFormat.java
* hadoop-mapreduce-project/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #2116 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2116/])
MAPREDUCE-6165. [JDK8] TestCombineFileInputFormat failed on JDK8. Contributed by Akira AJISAKA. (ozawa: rev 551615fa13f65ae996bae9c1bacff189539b6557)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/input/CombineFileInputFormat.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/lib/input/TestCombineFileInputFormat.java
* hadoop-mapreduce-project/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Hdfs-trunk-Java8 #175 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/175/])
MAPREDUCE-6165. [JDK8] TestCombineFileInputFormat failed on JDK8. Contributed by Akira AJISAKA. (ozawa: rev 551615fa13f65ae996bae9c1bacff189539b6557)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/input/CombineFileInputFormat.java
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/lib/input/TestCombineFileInputFormat.java
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk-Java8 #185 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/185/])
MAPREDUCE-6165. [JDK8] TestCombineFileInputFormat failed on JDK8. Contributed by Akira AJISAKA. (ozawa: rev 551615fa13f65ae996bae9c1bacff189539b6557)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/lib/input/TestCombineFileInputFormat.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/input/CombineFileInputFormat.java
* hadoop-mapreduce-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2134 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2134/])
MAPREDUCE-6165. [JDK8] TestCombineFileInputFormat failed on JDK8. Contributed by Akira AJISAKA. (ozawa: rev 551615fa13f65ae996bae9c1bacff189539b6557)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/input/CombineFileInputFormat.java
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/lib/input/TestCombineFileInputFormat.java
, I just backported to branc-2.7.]