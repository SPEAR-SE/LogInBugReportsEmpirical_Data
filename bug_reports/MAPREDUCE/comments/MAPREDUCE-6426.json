[It is passing locally and failing in the Jenkins build.

[~zxu], I am assigning to you, Can you please have a look into this test failure?, Yes, I will take a look at it, thanks for finding this issue  [~devaraj.k]!
It looks like UserGroupInformation.isSecurityEnabled()  is true for the test testGetMapOutputInfo in this test environment(may be loaded from configuration file). It looks like manually disabling security may fix this issue. I will prepare a patch for this.
, {{testGetMapOutputInfo}} can only work with "simple" mode, If I enable security by adding the following code to {{testGetMapOutputInfo}}
{code}
    conf.set(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHENTICATION,
        "kerberos");
    UserGroupInformation.setConfiguration(conf);
{code}
I will get the same error:
{code}
2015-07-07 12:44:44,246 ERROR [New I/O worker #188] mapred.ShuffleHandler (ShuffleHandler.java:messageReceived(829)) - Shuffle error :
java.io.IOException: Error Reading IndexFile
	at org.apache.hadoop.mapred.IndexCache.readIndexFileToCache(IndexCache.java:123)
	at org.apache.hadoop.mapred.IndexCache.getIndexInformation(IndexCache.java:68)
	at org.apache.hadoop.mapred.ShuffleHandler$Shuffle.getMapOutputInfo(ShuffleHandler.java:865)
	at org.apache.hadoop.mapred.ShuffleHandler$Shuffle.messageReceived(ShuffleHandler.java:818)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:560)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:787)
	at org.jboss.netty.handler.stream.ChunkedWriteHandler.handleUpstream(ChunkedWriteHandler.java:142)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:560)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:787)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:148)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:560)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:787)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:560)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:555)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:107)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:312)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
{code}

I also find out how security is enabled. Although {{testGetMapOutputInfo}} didn't enable security, {{testMapFileAccess}} enabled security "kerberos" by {{UserGroupInformation.setConfiguration(conf);}} which is a static member function, if {{testMapFileAccess}} is running before {{testGetMapOutputInfo}}, the configuration used by UserGroupInformation is not changed by {{testGetMapOutputInfo}}, So UserGroupInformation is still using the configuration from {{testMapFileAccess}} for {{testGetMapOutputInfo}}.
I attached a patch MAPREDUCE-6426.000.patch, which manually disable security in {testGetMapOutputInfo}}. I believe it should fix this issue., \\
\\
| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |   6m  4s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | javac |   7m 47s | There were no new javac warning messages. |
| {color:green}+1{color} | release audit |   0m 21s | The applied patch does not increase the total number of release audit warnings. |
| {color:green}+1{color} | checkstyle |   0m 21s | There were no new checkstyle issues. |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 33s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 32s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   0m 41s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | mapreduce tests |   0m 18s | Tests passed in hadoop-mapreduce-client-shuffle. |
| | |  17m 41s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12744050/MAPREDUCE-6426.000.patch |
| Optional Tests | javac unit findbugs checkstyle |
| git revision | trunk / c9dd2ca |
| hadoop-mapreduce-client-shuffle test log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5873/artifact/patchprocess/testrun_hadoop-mapreduce-client-shuffle.txt |
| Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5873/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf903.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5873/console |


This message was automatically generated., Thanks [~zxu] for the analysis and patch for the issue.

{code:xml}
Assert.assertEquals(failures.size(), 0);
{code}
Can you exchange the args here and also add a message for this assertion as part of the patch?, thanks for the review [~devaraj.k]! I uploaded a new patch MAPREDUCE-6426.001.patch, which addressed your comment. Please review it., \\
\\
| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |   5m 56s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | javac |   7m 35s | There were no new javac warning messages. |
| {color:green}+1{color} | release audit |   0m 20s | The applied patch does not increase the total number of release audit warnings. |
| {color:green}+1{color} | checkstyle |   0m 20s | There were no new checkstyle issues. |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 35s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 32s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   0m 43s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | mapreduce tests |   0m 19s | Tests passed in hadoop-mapreduce-client-shuffle. |
| | |  17m 22s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12744157/MAPREDUCE-6426.001.patch |
| Optional Tests | javac unit findbugs checkstyle |
| git revision | trunk / d632574 |
| hadoop-mapreduce-client-shuffle test log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5874/artifact/patchprocess/testrun_hadoop-mapreduce-client-shuffle.txt |
| Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5874/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf903.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5874/console |


This message was automatically generated., Thanks [~zxu] for addressing comments and updating patch.

It looks good to me, I will commit it tomorrow if there are no other comments/objections., +1, committing it shortly., Thanks [~zxu] for the patch.

Committed  to trunk, branch-2 and branch-2.7., FAILURE: Integrated in Hadoop-trunk-Commit #8139 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/8139/])
MAPREDUCE-6426. TestShuffleHandler#testGetMapOutputInfo is failing. (devaraj: rev fffb15bb431fcdd7ca4ce0e249f9d45f4968497b)
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/test/java/org/apache/hadoop/mapred/TestShuffleHandler.java
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #251 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/251/])
MAPREDUCE-6426. TestShuffleHandler#testGetMapOutputInfo is failing. (devaraj: rev fffb15bb431fcdd7ca4ce0e249f9d45f4968497b)
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/test/java/org/apache/hadoop/mapred/TestShuffleHandler.java
, FAILURE: Integrated in Hadoop-Yarn-trunk #981 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/981/])
MAPREDUCE-6426. TestShuffleHandler#testGetMapOutputInfo is failing. (devaraj: rev fffb15bb431fcdd7ca4ce0e249f9d45f4968497b)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/test/java/org/apache/hadoop/mapred/TestShuffleHandler.java
* hadoop-mapreduce-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #239 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/239/])
MAPREDUCE-6426. TestShuffleHandler#testGetMapOutputInfo is failing. (devaraj: rev fffb15bb431fcdd7ca4ce0e249f9d45f4968497b)
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/test/java/org/apache/hadoop/mapred/TestShuffleHandler.java
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #2178 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2178/])
MAPREDUCE-6426. TestShuffleHandler#testGetMapOutputInfo is failing. (devaraj: rev fffb15bb431fcdd7ca4ce0e249f9d45f4968497b)
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/test/java/org/apache/hadoop/mapred/TestShuffleHandler.java
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk-Java8 #249 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/249/])
MAPREDUCE-6426. TestShuffleHandler#testGetMapOutputInfo is failing. (devaraj: rev fffb15bb431fcdd7ca4ce0e249f9d45f4968497b)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/test/java/org/apache/hadoop/mapred/TestShuffleHandler.java
* hadoop-mapreduce-project/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #2197 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2197/])
MAPREDUCE-6426. TestShuffleHandler#testGetMapOutputInfo is failing. (devaraj: rev fffb15bb431fcdd7ca4ce0e249f9d45f4968497b)
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/test/java/org/apache/hadoop/mapred/TestShuffleHandler.java
, thanks [~devaraj.k] for the review and committing the patch!]