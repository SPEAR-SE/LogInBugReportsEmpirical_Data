[Attaching the patch.

An easy one, the test fails to match the process dump header because of a line ending (test expects: \n, and it is: \r\n)., Just to add, not sure how valuable it is to run TestProcfsBasedProcessTree on Windows, given that we actually use WindowsBasedProcessTree. Alternative is to skip the test as a whole if ProcfsBasedProcessTree is not available., Attaching a slightly better patch., I am in favor of disabling the test with if(Shell.Linux)., bq. I am in favor of disabling the test with if(Shell.Linux).
Thanks Bikas for the quick response, I agree, will attach the new patch shortly., Attaching the updated patch.

A few notes:
 - I kept the previous fix for newline to achieve symmetry with the implementation from ProcfsBasedProcessTree#getProcessTreeDump
 - I changed ProcfsBasedProcessTree#isAvailable to use the existing API to check if running on Linux (not to duplicate the code), {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12573129/MAPREDUCE-5056.trunk.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 tests included appear to have a timeout.{color}

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3396//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3396//console

This message is automatically generated., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12573131/MAPREDUCE-5056.trunk.2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 tests included appear to have a timeout.{color}

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3397//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3397//console

This message is automatically generated., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12573139/MAPREDUCE-5056.trunk.3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 tests included appear to have a timeout.{color}

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3398//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3398//console

This message is automatically generated., +1 for this patch.  I verified on Mac and Windows.  Thanks again, Ivan!, Bikas, can you please take a look at the latest patch? Thx!, I did not quite get what the String.format("...%n") is doing and why we need to change it., That accounts for the line ending difference on Unix vs. Windows.  String.format with %n in the format string gives you the system-specific line separator instead of hard-coding to \n., Thanks Chris for the comment. Bikas, this also makes the test consistent with the implementation {{ProcfsBasedProcessTree#getProcessTreeDump}}., Thanks. Looks good to me. +1., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12573139/MAPREDUCE-5056.trunk.3.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3510//console

This message is automatically generated., ProcfsBasedProcessTree was recently removed from the mapreduce project via MAPREDUCE-5077. Resolving this Jira as not a problem. 

Yarn's TestProcfsBasedProcessTree already passes on Windows.]