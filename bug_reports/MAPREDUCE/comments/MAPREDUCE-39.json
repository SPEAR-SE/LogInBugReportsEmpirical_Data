[If the task has more to do, shouldn't it wait to declare itself done?  Or perhaps we should introduce a new task status, "exiting" or somesuch, which means that the output is complete but the jvm hasn't exited and hence the slot is not yet free.  If a task hangs after completing it's output but before exiting, then the tasktracker should still kill it, but the jobtracker should not reschedule it, right?, I forgot to take care of this issue in the JVM reuse patch too. In that, the JVM is explicitly killed if it is found to be idle. But it might sometimes have an unfortunate side effect to do with logs not fully flushed yet., Ignore my previous comment. This doesn't actually hold true in the case of jvm reuse., This'd be complicated with JVM reuse. Besides, if a task reports itself done, its done?

Resolving but reopen if am wrong.]