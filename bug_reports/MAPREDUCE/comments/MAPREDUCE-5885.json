[A quick search of the source finds the following tests using build/test/test.mapred.spill:

TestKeyFieldBasedComparator
TestComparators
TestMapOutputType
TestMapRed
, As well as TestMapReduce.java. , patch submitted., attach patch again and trigger HadoopQA, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12650049/MAPREDUCE-5885.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 5 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The following test timeouts occurred in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

org.apache.hadoop.mapred.pipes.TestPipeApplication

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4652//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4652//console

This message is automatically generated., test failure is related to MAPREDUCE-5923, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12650157/MAPREDUCE-5885.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 5 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The following test timeouts occurred in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

org.apache.hadoop.mapred.pipes.TestPipeApplication

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4653//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4653//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12650157/MAPREDUCE-5885.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 5 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The following test timeouts occurred in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

org.apache.hadoop.mapred.pipes.TestPipeApplication

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4654//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4654//console

This message is automatically generated., The test failure is because of MAPREDUCE-5868, retrigger QA, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12654608/MAPREDUCE-5885.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 5 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4721//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4721//console

This message is automatically generated., Thanks for the patch, Chen!  Some comments:

We should covert these test cases to junit 4 while we're here.

Rather than wrap every test case with try...finally it would be cleaner to use an After method to let junit do the cleanup call for us.  This would result in a much smaller patch as well.

Similarly the configure() method in TestComparators and TestMapOutputType should be tagged with a Before junit decorator so it's automatically called rather than having each test call it.

Nit: Is there a reason we're using simple class name with a "-mapred" suffix for the directory rather than just .class.getName()?  The latter is done by a lot of other test cases, so wondering why we're deviating from that precedent., Working on updating patch, also create MAPREDUCE-6050 for updating test classes from JUnit3 to JUnit4 in mapreduce project., patch updated. 

For the temporary directory name issue, I guess they just want to use class.getName+"-mapred" to avoid directory collision if many tests are running in parallel., Sorry, my bad. I guess they think there will never be chance to run test in parallel?, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12664238/MAPREDUCE-5885-1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 5 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4827//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4827//console

This message is automatically generated., bq. I guess they think there will never be chance to run test in parallel?

That's exactly why it's kind of important to use something like .class.getName for the test directory.  It help makes the directory unique in light of parallel tests and future code development.  Two classes, like hypothetically org.apache.hadoop.mapred.TestMapReduce and org.apache.hadoop.mapreduce.TestMapReduce, will end up with separate test directories if .class.getName is used.  If they just use a hardcoded string like "TestMapReduce" and one test copy-n-pasted from the other then they could collide during parallel testing in a difficult to reproduce and diagnose manner.  I suspect the original tests used the same directory by pasting the same code, and using .class.getName helps prevent that from causing problems.

But it's just a nit and the directories won't collide as-is, so we don't have to fix that.

+1, committing this.
, Thanks, Chen!  I committed this to trunk and branch-2.]