[Simple patch plus test case, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12429496/mapreduce-1358.txt
  against trunk revision 896265.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/248/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/248/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/248/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/248/console

This message is automatically generated., Wouldn't the following change be sufficient?
{code}
return !(path.toString().contains("_logs"));
{code}
be 
{code}
return !("_logs".equals(path.name()));
{code}, Amar: I don't think so - that wouldn't filter a file like /foo/_logs/bar - right? I don't think there's any contract that PathFilter is called in a pre-order traversal, so filtering /foo/_logs doesn't guarantee that /foo/_logs/bar will get automatically filtered., Resubmitting same patch - I don't think the test timeout was related, but just to be safe., Todd, I think as per the documentation, _Utils.OutputLogFilter()_ is supposed to filter out job-log-dir under the job-output-dir as opposed to detect if the path belongs to some log folder. The example given in the documentation is 
{code}
Path[] fileList = FileUtil.stat2Paths(fs.listStatus(outDir, new OutputFilesFilter()));
{code}
So, if passed a value _/foo/_logs/bar_ then it essentially means that _bar_ is a directory in the job output folder _/foo/_logs/_., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12429496/mapreduce-1358.txt
  against trunk revision 899501.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/390/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/390/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/390/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/390/console

This message is automatically generated., OK, you convinced me. New patch uses your suggested implementation., The patch looks good. Should we add a unit test for _Utils.OutputLogFilter_ too?, The existing test covers both classes since one delegates to the other, no? I figured it was simple enough to cover them with a single test (previously they were covered by no tests!), The reason why I asked for separate testcases for Utils.OutputFilesFilter and Utils.OutputLogFilter is that there is an implicit assumption that OutputFilesFilter extends OutputLogFilter. Both the classes are free to change their implementation of _accept(Path)_  hence we need testcases for both. I agree with Todd that it looks redundant as of now but will safeguard us from future mistakes. I had an offline discussion with Todd and he agreed with me on adding separate testcases for both the utilities., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12434708/mapreduce-1358.txt
  against trunk revision 906228.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/432/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/432/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/432/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/432/console

This message is automatically generated., +1. Looks good to me., +1

I committed this. Thanks, Todd!

Thanks Amar for iterating on this, as well., Integrated in Hadoop-Mapreduce-trunk-Commit #239 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-Mapreduce-trunk-Commit/239/])
    . Avoid false positives in OutputLogFilter. Contributed by Todd Lipcon
, Integrated in Hadoop-Mapreduce-trunk #234 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-Mapreduce-trunk/234/])
    . Avoid false positives in OutputLogFilter. Contributed by Todd Lipcon
]