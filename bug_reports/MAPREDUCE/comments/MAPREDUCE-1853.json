[bq. so for every reduce call it creates a new Job instance ...which creates a new LocalJobRunner.
Though this will be fixed by MAPREDUCE-1505, caching introduced in the patch is good optimization. 

Can you regenerate the patch with --no-prefix option, so that it can be applied with command "patch -p0 < patch-file" ?, with --no-prefix, Patch updated. Should apply also with -p0 now., Changes look good., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12446976/cache-task-attempts.diff
  against trunk revision 953976.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/241/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/241/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/241/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/241/console

This message is automatically generated., Test failure is due to MAPREDUCE-1834, Anything else I can do here?

Would also like to see this included into 0.21 (not just 0.22), Patch cleanly applies to 0.21 as well. Will commit it if nobody objects., I just committed this to trunk and branch 0.21. Thanks Torsen !, bq. I just committed this to trunk and branch 0.21. Thanks Torsen ! 
Sorry for the misspelled name.  I meant Thanks Torsten !, Is there any workaround to this issue for those of us who are still running 0.20?

I have a job that very much lends itself to using the MultipleOutputs functionality, but I can't use it if a bug like this crushes the job's performance.

Anyone have any alternate suggestions?]