[Is this failure related to the patch or was it found in Trunk builds?

In following trunk builds the test case successfully passed after changes to {{TestKillSubProcesses}} were put in.

[http://hudson.zones.apache.org/hudson/view/Hadoop/job/Hadoop-trunk/864/]
[http://hudson.zones.apache.org/hudson/view/Hadoop/job/Hadoop-trunk/865/]
[http://hudson.zones.apache.org/hudson/view/Hadoop/job/Hadoop-trunk/866/]

, I have observed it in one of the patch builds,  in which patch is not related to the testcase. Looks like it is a timing issue., Just a while back, even I've encountered the same issue. Unfortunately I didn't back up the logs. Will do so the next time., Issue is in testcase only.
Attaching patch fixing the testcase., Attaching new patch with clean up of code of test case on Vinod's offline comments., The issue is reproducible with trunk if we add Thread.sleep(5000) in runJobAndSetProcessHandle() before the assert statements for checking if the child processes are alive. The problem was that fs was not set in Mappers, thus signalFile creation was not checked causing the map task to finish immediately(in case of failing mapper and succeeding mapper., Attaching new patch with a minor change., Patch looks good. +1.

Documenting what the patch does.
 - Fixed FileSystem to be set in the mapper.
 - Cleans up various signal file/directory related variables to be done at a single place.
 - Explicitly sets test.build.data for the child using mapred.child.java.opts as test.build.data is not passed to child otherwise and in our test, child needs access to files/dirs in this temporary dir., Unit tests passed on local machine.

ant test-patch gave

     [exec] +1 overall.
     [exec]
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec]
     [exec]     +1 tests included.  The patch appears to include 3 new or modified tests.
     [exec]
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec]
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec]
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
     [exec]
     [exec]     +1 release audit.  The applied patch does not increase the total number of release audit warnings., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12413637/MR-408.v1.1.patch
  against trunk revision 798239.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-vesta.apache.org/422/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-vesta.apache.org/422/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-vesta.apache.org/422/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-vesta.apache.org/422/console

This message is automatically generated., Test failures are not related to the patch. All unit tests passed on my local machine., I just committed this. Thanks, Ravi!, Integrated in Hadoop-Mapreduce-trunk #38 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-Mapreduce-trunk/38/])
    . Fixes an assertion problem in TestKillSubProcesses. Contributed by Ravi Gummadi.
, This fix needs to be ported to Y! 20 distribution. Attaching patch for the same., +1 for the Y! 20 distribution patch. I could reproduce the bug on Y! distribution without the patch, and I've verified that the patch applies successfully and solves the problem with the test-case., More updated version of the patch for Hadoop 0.20 (Not for commit).]