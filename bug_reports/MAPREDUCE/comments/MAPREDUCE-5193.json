[Somewhat curiously, I'm having trouble reproducing this locally. I would expect these tests to fail pretty consistently. Zhijie, can you reproduce these test failures?, Hm, interesting. I cannot reproduce the failed test cases with both of my M/R patches locally as well., I have some integration tests for Swift & Pig that can trigger OOM against large datasets and v small block sizes; something like that could be a cause of intermittent failures, [~stevel@apache.org] Thanks for the pointer, but I don't think that's what the issue was here. Zhijie referenced these two builds, both of which failed with the expected error message regarding the block size being less than the configured minimum:

https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3557//testReport/
https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3558//testReport/

Just to see if this still reproduces, I'm going to upload the same patch that was posted to MAPREDUCE-5156 to this JIRA for Jenkins to run., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12581191/MAPREDUCE-5156.1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient hadoop-mapreduce-project/hadoop-mapreduce-examples:

                  org.apache.hadoop.mapreduce.lib.input.TestDelegatingInputFormat
                  org.apache.hadoop.mapreduce.lib.input.TestCombineFileInputFormat
                  org.apache.hadoop.mapred.lib.TestDelegatingInputFormat
                  org.apache.hadoop.mapred.TestFileInputFormat

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3560//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3560//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-common.html
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3560//console

This message is automatically generated., ATM told me it was okay to poach this, so here's a patch. It sets the min block size to 0 in the /src/test/resource {{hdfs-site.xml}}, which is the same fix we used for the HDFS tests.

I ran the failed tests from the MAPREDUCE-5156 patch successfully. Looking at the daily build, most of the other components are fine. I also ran the tests in the skipped components {{hs-plugin}} and examples successfully, so hopefully it'll fix everything., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12581431/mapreduce-5193-1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3568//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3568//console

This message is automatically generated., Thanks a lot for taking up this issue in my stead, Andrew.

+1, the patch looks good to me. I'm going to commit this momentarily., I've just committed this to trunk and branch-2. Thanks a lot for the contribution, Andrew., Integrated in Hadoop-trunk-Commit #3709 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/3709/])
    MAPREDUCE-5193. A few MR tests use block sizes which are smaller than the default minimum block size. Contributed by Andrew Wang. (Revision 1478250)

     Result = SUCCESS
atm : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1478250
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/resources/hdfs-site.xml
, Integrated in Hadoop-Yarn-trunk #201 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/201/])
    MAPREDUCE-5193. A few MR tests use block sizes which are smaller than the default minimum block size. Contributed by Andrew Wang. (Revision 1478250)

     Result = SUCCESS
atm : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1478250
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/resources/hdfs-site.xml
, Integrated in Hadoop-Hdfs-trunk #1390 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1390/])
    MAPREDUCE-5193. A few MR tests use block sizes which are smaller than the default minimum block size. Contributed by Andrew Wang. (Revision 1478250)

     Result = FAILURE
atm : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1478250
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/resources/hdfs-site.xml
, Integrated in Hadoop-Mapreduce-trunk #1417 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1417/])
    MAPREDUCE-5193. A few MR tests use block sizes which are smaller than the default minimum block size. Contributed by Andrew Wang. (Revision 1478250)

     Result = SUCCESS
atm : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1478250
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/resources/hdfs-site.xml
, This just caused us a major head ache with HBase (we used CDH4.3 and our build of HBase, but the same would apply to plain open source HDFS).
There now is an hdfs-site.xml in a jar that is included by HBase, and it overrides any hdfs-site.xml added later to the classpath (as HBase does when adding the Hadoop classpath in order to read in Hadoop's hdfs-site.xml).

We'll fix this in HBase (either by not including the test jars or by changing how we form the classpath), but generally it seems a bad choice to include any hdfs-site or core-site, etc, files in the jars.
]