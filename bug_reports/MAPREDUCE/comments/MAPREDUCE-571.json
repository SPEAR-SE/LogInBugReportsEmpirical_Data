[Is it the stack trace that bothers you?  If you want just a single message, then we could replace the stack trace with the exception name and its message.  If you find particular exception messages confusing, then we should fix things so that a more informative exception is thrown, rather than try to translate the messages to something more informative., sounds like checking the reconditions before executing is a good idea.

The result of this could just be clearer exceptions.

The question is, should this happen?  If so, it is not an exception.  If not, it is IMO., Yoram suggested that this issue is split into several ones.

So let's keep this one for what it's heading says:

"Hadoop Streaming should not crash".

That is, Streaming client (hadoop-streaming.jar) should not complete with a stack trace.  It should catch all exceptions and provide a human readable error message.
Common exceptions caused by common user mistakes should be explained by these messages.  

Rationalization:
When a user tries to execute a Perl script and sees a Java stack trace, she immediately assumes that the tools is broken.  
I have obsereved this ssepcifically trying to get people to use Streaming.

Unlike some other Hadoop components that are supposed to be used Java code, Streaming is a user facing application.  This imposes different requirements on exception handling.]