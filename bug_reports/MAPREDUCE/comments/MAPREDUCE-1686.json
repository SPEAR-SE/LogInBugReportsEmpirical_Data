[Paul, Can you create the patch with suggested change and a unit test, and upload here? , Okay, I'll try and do that.

Paul

, Patch has been created and submitted., Thanks Paul for the patch. Some comments on the patch:
* Please remove printStackTrace() calls in catch blocks in StreamUtil. Since StreamUtil.goodClassOrNull is used to find whether the passed mapper/reducer value is class or command, we don't want to print the stacktrace. Also, see MAPREDUCE-571.
* The testcase does not pass even after the fix because the path given for the jar is never built. For example, see the testjar directory in src/test/mapred/testjar and how it is built.
* In the testcase, loadLibJar() and assert associated with it, seems unnecessary. , I attached a new patch to remove the printStackTrace() call in accordance to MAPREDUCE-571. Note that the pre-patched version will fail with a Java stack trace for ClassNotFoundException because it is thrown outside the method.

I ran both the ant test and ant test-patch targets with success because the testjar is created in the compile-core-test target. I need more information to understand your request.

The loadLibJar() and assert mentioned in your third comment is there to abort the unit test if the classpath is not properly loaded. Otherwise it may not be clear that the unit test failed because there was an issue in the configuration of the unit test. Let me know if you still want me to remove the assertion.

Thank you for the comments., bq. I ran both the ant test and ant test-patch targets with success because the testjar is created in the compile-core-test target. I need more information to understand your request.
I still could not succeed running the newly added test. Are you testing your patch against branch 0.20 instead of trunk? because there is no such target as "compile-core-test" in trunk. It is compile-mapred-test and path for testjar is src/test/mapred/testjar in trunk. Please provide a patch for trunk.

bq. The loadLibJar() and assert mentioned in your third comment is there to abort the unit test if the classpath is not properly loaded.
Yes. I think the method and the assert associated with it, is unnecessary because StreamUtil.goodClassOrNull is doing the same thing :
{code}
      clazz = conf.getClassByName(className);
{code}, New patch against the trunk., New patch against the trunk. The previous patches were against the tag release-0.20.1 since it was our intent to get it in the 0.20.x baseline. Also removed the extra assert as suggested., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12450844/HADOOP-1686-2.patch
  against trunk revision 980316.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 7 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/600/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/600/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/600/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/600/console

This message is automatically generated., +1 
Patch looks good.

Test failure is because of MAPREDUCE-1834. Will check this in., I just committed this. Thanks Paul !, Setting the assignee to Paul.
, Integrated in Hadoop-Mapreduce-trunk-Commit #523 (See [https://hudson.apache.org/hudson/job/Hadoop-Mapreduce-trunk-Commit/523/])
    ]