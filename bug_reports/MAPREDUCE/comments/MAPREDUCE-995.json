[I found this issue while preparing patch for Mumak (Hadoop Simulator MAPREDUCE-728). The backtrace of the problem is as follows:
{noformat}
java.lang.NullPointerException
   at org.codehaus.jackson.impl.WriterBasedGenerator._verifyValueWrite(WriterBasedGenerator.java:553)
   at org.codehaus.jackson.impl.JsonGeneratorBase.writeStartObject(JsonGeneratorBase.java:142)
   at org.apache.hadoop.mapreduce.jobhistory.EventWriter.writeEventType(EventWriter.java:81)
   at org.apache.hadoop.mapreduce.jobhistory.EventWriter.write(EventWriter.java:60)
   at org.apache.hadoop.mapreduce.jobhistory.JobHistory.logEvent(JobHistory.java:339)
   at org.apache.hadoop.mapred.JobInProgress.completedTask(JobInProgress.java:2519)
   at org.apache.hadoop.mapred.JobInProgress.updateTaskStatus(JobInProgress.java:1130)
   at org.apache.hadoop.mapred.SimulatorJobTracker.updateTaskStatuses(SimulatorJobTracker.java:621)
{noformat}

The last statement in the backtrace occurs in the context when the job has failed (one task fails 4 times), and the job is marked as complete. Then a lingering task that belongs to the same job completes, and JT tries to update its status., Straight Forward Patch.
Also, made fileMap a ConcurrentHashMap., The bug seems trickier than I thought...

There is an obvious race condition:
Thread 1:
{code}
      writer.close();
      fileMap.get(id).clearEventWriter();
{code}

Thread 2:
{code}
     MetaInfo mi = fileMap.get(jobId);
     if (mi == null || (writer = mi.getEventWriter()) == null) {
{code}

writer.close() should be inside clearEventWriter(), and clearEventWriter() should close the writer and set it to null atomically. Another problem is that thread 2 may get a valid writer instance, but may later be closed by thread 1. So I think the right fix would have to synchronize on the MetaInfo for both clearing event writer and writing logs - logEvent would have to be implemented on MetaInfo, and synchornized with clearEventWriter()., Patch incorporating Hongs' comments., +1., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12419875/mapred-995-v1.patch
  against trunk revision 816147.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/97/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/97/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/97/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/97/console

This message is automatically generated., This should use a Collections.synchronizedMap wrapper rather than a ConcurrentHashMap, since it doesn't actually use the atomic get/put operations, but only requires mutual exclusion., {noformat}
     [exec] -1 overall.  
     [exec] 
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec] 
     [exec]     +1 tests included.  The patch appears to include 2 new or modified tests.
     [exec] 
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec] 
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec] 
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
     [exec] 
     [exec]     -1 release audit.  The applied patch generated 175 release audit warnings (more than the trunk's current 0 warnings).
{noformat}

The release audit warning is clearly spurious., I committed this. Thanks, Jothi!, Integrated in Hadoop-Mapreduce-trunk-Commit #48 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-Mapreduce-trunk-Commit/48/])
    . Fix a bug in JobHistory where tasks completing after the job
is closed cause a NPE. Contributed by Jothi Padmanabhan
]