[This is another environment issue on Windows, which is quite similar to YARN-729.

Currently the mapred-default.xml has "mapreduce.application.classpath" entry set to 

   <value>$HADOOP_MAPRED_HOME/share/hadoop/mapreduce/*,$HADOOP_MAPRED_HOME/share/hadoop/mapreduce/lib/*</value>


which is problematic on Windows since the path does not work on Windows OS, instead we should be using

"%HADOOP_MAPRED_HOME%\\share\\hadoop\\mapreduce\\" for Windows.
, requires OS dependent setting in mapred-default.xml, [~yingdachen], can we make DEFAULT_MAPREDUCE_APPLICATION_CLASSPATH have different values for different OSes instead of creating two constants as in the following code?

{code:java}
-  public static final String[] DEFAULT_MAPREDUCE_APPLICATION_CLASSPATH = {
-      "$HADOOP_MAPRED_HOME/share/hadoop/mapreduce/*",
-      "$HADOOP_MAPRED_HOME/share/hadoop/mapreduce/lib/*",
-  };
+  public static final String 
+  DEFAULT_MAPREDUCE_APPLICATION_CLASSPATH = 
+  "$HADOOP_MAPRED_HOME/share/hadoop/mapreduce/*,"
+  + "$HADOOP_MAPRED_HOME/share/hadoop/mapreduce/lib/*";
+  
+  /**
+   * Default CLASSPATH for all YARN MapReduce applications on Windows.
+   */
+  public static final String 
+  DEFAULT_MAPREDUCE_APPLICATION_CLASSPATH_ON_WINDOWS =
+  "%HADOOP_MAPRED_HOME%\\share\\hadoop\\mapreduce\\*," 
+  + "%HADOOP_MAPRED_HOME%\\share\\hadoop\\mapreduce\\lib\\*";
{code}, Sounds like a good idea. I went with this approach since originally the Classpath is being defined with String array, and there is no (non-messy) way to defined different arrays based on OS. But since I have now changed it to use string (and split when necessary) to be more consistent with other config settings, it would make sense to go with different string value based on OS. Will do.

, patch 2 to address the CR, Hi, [~yingdachen].  Can we do something like the following?  This would shrink the total patch size a little by removing the change in {{MRApps}}.  It also would mean that the definition of the default value has the same data type as required by the configuration property.  It can make it easier for people to read and maintain this code if they don't have to remember that the string must be split on commas to become usable.

{code}
  public static final String[] DEFAULT_MAPREDUCE_APPLICATION_CLASSPATH =
    Shell.WINDOWS ? new String[] {
      "%HADOOP_MAPRED_HOME%\\share\\hadoop\\mapreduce\\*",
      "%HADOOP_MAPRED_HOME%\\share\\hadoop\\mapreduce\\lib\\*"
    } : new String[] {
      "$HADOOP_MAPRED_HOME/share/hadoop/mapreduce/*",
      "$HADOOP_MAPRED_HOME/share/hadoop/mapreduce/lib/*",
    }
{code}
, Hi Chris, Thanks for the feedback, I was trying to use string and then split it as necessary to be consistent with how other configuration setting was used.

Looking at the code again, instead of using MRJobConfig.DEFAULT_MAPREDUCE_APPLICATION_CLASSPATH.split(",")), I will modify it to StringUtiliies.getStringCollection(MRJobConfig.DEFAULT_MAPREDUCE_APPLICATION_CLASSPATH), which internally use split(","). That would be better of both worlds...

Let me now what you think. Thanks., Yingda, that sounds good.  (I just checked the code again, and there is precedent for doing collection properties both ways.), patch 3 switches to use

StringUtils.getStrings(     MRJobConfig.DEFAULT_MAPREDUCE_APPLICATION_CLASSPATH)))

instead of using split(",") specifically on the spot., +1 for the patch, pending test-patch run.  I'll submit it to Jenkins now.

BTW Yingda, please feel free to click the Submit Patch button in the future to submit your trunk patches for an automated test run on Jenkins.  This only works for trunk, so don't click the button if it's a branch-1 patch or some other branch.

[~chuanliu], do you have any other feedback on this patch, or does it look good to you?, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12605565/MAPREDUCE-5442-3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4058//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4058//console

This message is automatically generated., +1. Looks good to me as well., Unfortunately, the patch has gone stale.  [~yingdachen], could you please rebase and attach a new patch?  I'll commit it after we get a successful test-patch run.  Thanks!, patch 4 attached to resolve the conflict. cannot "submit patch", i guess due to the status of the JIRA, so I am going with the old "attach file" route., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12606677/MAPREDUCE-5442-4.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4083//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4083//console

This message is automatically generated., +1 for the rebased patch too.

bq. cannot "submit patch"...

That's OK.  Once you click Submit Patch, the issue goes into Patch Available status.  It stays in this status unless you click Cancel Patch.  While it's in Patch Available status, any new attachments you add to the issue get tested by Jenkins.
, SUCCESS: Integrated in Hadoop-trunk-Commit #4536 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/4536/])
MAPREDUCE-5442. $HADOOP_MAPRED_HOME/$HADOOP_CONF_DIR setting not working on Windows. Contributed by Yingda Chen. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1529077)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/v2/util/MRApps.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/test/java/org/apache/hadoop/mapreduce/v2/util/TestMRApps.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/MRJobConfig.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/resources/mapred-default.xml
, I've committed this to trunk, branch-2, and branch-2.1-beta.  Yingda, thank you for the patch.  Thanks also to Chuan for help with code review., FAILURE: Integrated in Hadoop-Yarn-trunk #352 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/352/])
MAPREDUCE-5442. $HADOOP_MAPRED_HOME/$HADOOP_CONF_DIR setting not working on Windows. Contributed by Yingda Chen. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1529077)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/v2/util/MRApps.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/test/java/org/apache/hadoop/mapreduce/v2/util/TestMRApps.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/MRJobConfig.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/resources/mapred-default.xml
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1542 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1542/])
MAPREDUCE-5442. $HADOOP_MAPRED_HOME/$HADOOP_CONF_DIR setting not working on Windows. Contributed by Yingda Chen. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1529077)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/v2/util/MRApps.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/test/java/org/apache/hadoop/mapreduce/v2/util/TestMRApps.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/MRJobConfig.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/resources/mapred-default.xml
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1568 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1568/])
MAPREDUCE-5442. $HADOOP_MAPRED_HOME/$HADOOP_CONF_DIR setting not working on Windows. Contributed by Yingda Chen. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1529077)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/v2/util/MRApps.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/test/java/org/apache/hadoop/mapreduce/v2/util/TestMRApps.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/MRJobConfig.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/resources/mapred-default.xml
, Closing old tickets that are already shipped in a release.]