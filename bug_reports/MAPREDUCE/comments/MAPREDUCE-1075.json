[The problem in MAPREDUCE-1082 is partly due to this issue as well. So, linking this issue to MAPREDUCE-1082, It looks like MAPREDUCE-1082 issue has some other reasons and has no relation to this issue. So, removing the link issue., Uploading patch. This requires patch to MAPREDUCE-28., Took a look at the patch.

We should handle the {{IOException}} at the client end and print only the message on the CLI.

Testcase directly accesses the {{JobTracker}} why don't we use Client api's to check the same., Uploading patch with the above mentioned comments implemented., Missed out the exception to be thrown on client side. Uploading new patch with this added., The modification in the {{Cluster.java}} is not required, we should just handle the exception in {{JobQueueClient}}. Also, expected exception of IOException might hide some other IOException other than what we expected so we should probably only check for exception messages and remove Expected exception

, Uploading patch with the above comments implemented., Had an offline discussion with Sreekanth. There were couple of comments to assert after getting an existing queue in {{TestJobQueueClient.testGetQueue()}} and checking for {{jobQueueInfo}} object being null after {{getQueueInfo()}} is called.

Uploading patch with these changes done., The changes looks fine to me.

+1 to patch. , Running through hudson., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12425189/MAPREDUCE-1075-5.patch
  against trunk revision 884628.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/153/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/153/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/153/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/153/console

This message is automatically generated., bq. -1 contrib tests. The patch failed contrib unit tests.

The test failure is due to MAPREDUCE-1245. It is not related to this issue., I looked at this patch. I am a bit concerned that we interpret every IOException to mean the queue does not exist. This may not be true if there are IOExceptions due to other cases like network issues etc. Why can't we return null in relevant APIs and interpret that to mean queue does not exist ? This pattern is similar to what we do if a job with a given id doesn't exist. One issue I can think about this approach is that more checks may be necessary on the client. But I feel it is cleaner. Thoughts ?, Uploading patch with the above comments implemented. , Eventually, I think we should do ourselves away with these special interpretations on the client-side and simply return the result on success and throw exceptions in every failure possible. Not too strongly biased though to do or not to do this for {{getQueue()}} API in this JIRA issue itself to deal with the case of non-existent queue., Vinod, your approach will work if we can throw specific remote exceptions. For e.g. we could have a QueueNotFoundException and throw that remotely. This is supported by reasonable RPC implementations. I am not aware if this is supported in Hadoop. Is it ?, In an offline discussion with Vinod, we concluded that there is no provision to marshal exceptions in Hadoop's RPC right now. Hence, we are deciding in favor of returning null in the queue APIs.

With this context I looked at the new patch. One minor NIT is that I would suggest we test the API JobClient.getQueueInfo instead of Cluster.getQueue, as it covers more code path that's changed. Can you please make this change and run the patch through Hudson so I can commit once it passes ?, Uploading patch with the above comments implemented., Running through hudson., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12427099/MAPREDUCE-1075-7.patch
  against trunk revision 887135.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/295/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/295/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/295/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/295/console

This message is automatically generated., I just committed this to trunk and branch 0.21. Thanks, Chaitanya., Integrated in Hadoop-Mapreduce-trunk-Commit #147 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-Mapreduce-trunk-Commit/147/])
    . Fix JobTracker to not throw an NPE for a non-existent queue. Contributed by V.V.Chaitanya Krishna.
]