[A simple fix is to use Path.getFileSystem(conf).
{code}
diff --git src/mapred/org/apache/hadoop/mapreduce/lib/input/FileInputFormat.java
 src/mapred/org/apache/hadoop/mapreduce/lib/input/FileInputFormat.java
index a2b6c49..04adeb0 100644
--- src/mapred/org/apache/hadoop/mapreduce/lib/input/FileInputFormat.java
+++ src/mapred/org/apache/hadoop/mapreduce/lib/input/FileInputFormat.java
@@ -354,7 +355,7 @@ public abstract class FileInputFormat<K, V> extends InputFormat<K, V> {
   public static void addInputPath(Job job, 
                                   Path path) throws IOException {
     Configuration conf = job.getConfiguration();
-    FileSystem fs = FileSystem.get(conf);
+    final FileSystem fs = path.getFileSystem(conf);
     path = path.makeQualified(fs);
     String dirStr = StringUtils.escapeString(path.toString());
     String dirs = conf.get("mapred.input.dir");
{code}
We should also check the old org.apache.hadoop.mapred.FileInputFormat for this problem., m1552_20100223_0.20.patch: uses the fs specified in the input paths.  Will add some tests., m1522_20100224_0.20.patch: added a test, m1522_20100224.patch: for trunk., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12436958/m1522_20100224.patch
  against trunk revision 915223.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 5 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/488/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/488/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/488/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/488/console

This message is automatically generated., The failed TestMiniMRLocalFS and TestJobTrackerStart are not related to this.  Both of them have some history of failure., Looked at the patch for trunk.
Some comments:
1. The method Path.makeQualified(FileSystem) is deprecated. Can you change the call to something like inputPath.getFileSystem(conf).makeQualified(inputPath)?
2. In the testcase, can you change the calls conf.get(mapred.input.dir) to FileInputFormat.getInputPaths(job)., Amareshwari, thanks for the review.

m1522_20100224.patch: incorporated both review comments.

Without the changes in FileInputFormat, it will fail on the new test as following.
{noformat}
defaultfs.getUri() = s3://abc:xyz@hostname
original = file:/foo
results = [file://abc:xyz@hostname/foo]
------------- ---------------- ---------------

Testcase: testAddInputPath took 0.704 sec
	FAILED
expected:<file:/foo> but was:<file://abc:xyz@hostname/foo>
junit.framework.AssertionFailedError: expected:<file:/foo> but was:<file://abc:xyz@hostname/foo>
	at org.apache.hadoop.mapreduce.lib.input.TestFileInputFormat.testAddInputPath(TestFileInputFormat.java:54)
{noformat}, > m1522_20100224.patch: incorporated both review comments.

Oops, the file should be m1522_20100301.patch., +1 Changes look fine., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12437503/m1522_20100301.patch
  against trunk revision 918206.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 5 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/14/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/14/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/14/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/14/console

This message is automatically generated., > -1 core tests. The patch failed core unit tests.
TestMiniMRLocalFS.testWithLocal failed with age=7.  It is not related to this., m1522_20100301_0.20.patch: for 0.20

Use m1522_20100301.patch for 0.21. 
, > Use m1522_20100301.patch for 0.21. 
The patch currently is not complied on 0.21 since mockito is missing.  I will fix it., m1522_20100301_0.21.patch: for 0.21, added mockito to ivy., * Setting {{fs.default.name}} prior to creating the {{Job}} should make the mockito part of the test unnecessary, avoiding pushing the ivy changes through 0.21 and 0.20.
* Consider JUnit4 annotations instead of extending {{TestCase}}, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12437996/M1522-1.patch
  against trunk revision 919335.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 5 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/343/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/343/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/343/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h3.grid.sp2.yahoo.net/343/console

This message is automatically generated., +1 The changes look good.
Thanks, Chris.
, All test failures are due to Hudson's recent abject uselessness:
{noformat}
java.lang.NoClassDefFoundError: org/apache/hadoop/conf/Configuration
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:169)
Caused by: java.lang.ClassNotFoundException: org.apache.hadoop.conf.Configuration
	at java.net.URLClassLoader$1.run(URLClassLoader.java:200)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:188)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:307)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:252)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320)
{noformat}

The former test results hold, as:
# The original run failed only {{TestMRLocalFS}} due to MAPREDUCE-1520
# The only changes are in the unit test, which passes, +1

I committed this. Thanks, Nicholas!, Integrated in Hadoop-Mapreduce-trunk-Commit #265 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-Mapreduce-trunk-Commit/265/])
    . FileInputFormat may use the default FileSystem for the
input path. Contributed by Tsz Wo (Nicholas), SZE
, Integrated in Hadoop-Mapreduce-trunk #250 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-Mapreduce-trunk/250/])
    . FileInputFormat may use the default FileSystem for the
input path. Contributed by Tsz Wo (Nicholas), SZE
]