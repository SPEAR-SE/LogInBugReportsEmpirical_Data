[Patch for trunk, Patch fixes this issue by attempting to read() one additional byte from the input. This should always return EOF, but the side-effect is that it forces the decompressor to finish processing all of the compressed stream. This allows the IFileInputStream to stay in-sync and be completely processed (e.g. verification of IFileInputStream checksum) as part of this map_id. If we do get something other than EOF then something is truly wrong and we should fail this particular map., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12586598/MAPREDUCE-5308.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3746//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3746//console

This message is automatically generated., Patch for branch-0.23, Verified fix on both trunk and 0.23 using the following 100MB terasort:
- io.file.buffer.size set to 1024 (improves the likelihood of the problem occuring)
- teragen with 1000000 records
- terasort -Dmapred.max.split.size=1000000
- Tested with DefaultCodec,GzipCodec,BzipCodec,DeflateCodec,Lz4Codec, and no-compression
- Default, Gzip, Bzip, Deflate - all originally were able to reproduce the problem. With the fix there were no fetch failures in any of the cases.




, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12586771/MAPREDUCE-5308-branch-0.23.txt
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3750//console

This message is automatically generated., +1, lgtm., Integrated in Hadoop-trunk-Commit #3891 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/3891/])
    MAPREDUCE-5308. Shuffling to memory can get out-of-sync when fetching multiple compressed map outputs. Contributed by Nathan Roberts (Revision 1491611)

     Result = SUCCESS
jlowe : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1491611
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/InMemoryMapOutput.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/test/java/org/apache/hadoop/mapreduce/task/reduce/TestFetcher.java
, Thanks, Nathan!  I committed this to trunk, branch-2, branch-2.1-beta and branch-0.23., Integrated in Hadoop-Yarn-trunk #237 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/237/])
    MAPREDUCE-5308. Shuffling to memory can get out-of-sync when fetching multiple compressed map outputs. Contributed by Nathan Roberts (Revision 1491611)

     Result = SUCCESS
jlowe : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1491611
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/InMemoryMapOutput.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/test/java/org/apache/hadoop/mapreduce/task/reduce/TestFetcher.java
, Integrated in Hadoop-Mapreduce-trunk #1454 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1454/])
    MAPREDUCE-5308. Shuffling to memory can get out-of-sync when fetching multiple compressed map outputs. Contributed by Nathan Roberts (Revision 1491611)

     Result = SUCCESS
jlowe : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1491611
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/InMemoryMapOutput.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/test/java/org/apache/hadoop/mapreduce/task/reduce/TestFetcher.java
]