[{color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12554239/HADOOP-9065.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/1774//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/1774//console

This message is automatically generated., Why do we need to be more strict? AFAIK you cannot kill an incorrect job, right?, If you try to kill a job, I don't think you can actually kill a different job because of this issue; but if you specify an incomplete job id, such as job_201208221603_003 from my example in the description, it will kill job_201208221603_0003.  When you type job_201208221603_003, it would presumably be a typo, but we don't know if you meant _0003 (in which case it killed the right job) or _1003 or _2003 etc (in which case it killed the wrong job).  The patch makes it so that you have to enter stricter IDs to prevent this.  , But this will work only when padding of the counter is in effect, once you exceed the padding the typo issue could happen, right? you could do the typo killing for _1234 when trying to kill _12345, granted, the likelihood of _1234 still being around when _12345 is around is minimal., Yes, that's true.  Though, as you said the likelihood of it being around is minimal, plus, there isn't really anything we can do in cases like that (Hadoop can't know everything :))

This patch only addresses the issues related to giving less than 4 characters and to giving leading 0's.  , Got it, thx. +1, This could be considered a backward incompat change. I'd like somebody else opinion before committing it., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12554239/HADOOP-9065.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3123//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3123//console

This message is automatically generated., Moved to 1.3.0 upon release of 1.2.0-rc1.
Also moved from fixVersion to targetVersion, since it isn't fixed yet., This should be okay. 

In theory, we are changing the behavior, but it is only to correct previously incorrect behavior - http://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-common/Compatibility.html#Semantic_compatibility, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12554239/HADOOP-9065.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core:

                  org.apache.hadoop.mapred.TestOldMethodsJobID

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4378//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4378//console

This message is automatically generated., Resolving this as "Later", as users haven't really asked of it. Spoke to Robert - he is okay with closing this too. 

]