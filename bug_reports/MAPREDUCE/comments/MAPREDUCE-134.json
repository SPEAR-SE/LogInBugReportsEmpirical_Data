[Here's the patch. As mentioned, it will just punt (and log) if something goes wrong with the DF for a specified directory. I believe this is a reasonable (but not as clean as desirable) fix for now., I think a better way to fix this is to change the checkLocalDirs method to return the list of valid, writable local directories.  Then enoughFreeSpace() should iterate over this list.  That will ensure that all writable local drives have enough space.  Does this make sense?, Yeah, that sounds like a better approach. I'd be happy to implement that in the patch instead, modulo a dangling issue:

Should "good dirs" (ie, the new return value for checkLocalDirs) be cached? Implication: after initialization, no further checking for writability of a directory, and the directory list can only get smaller during an instance of a daemon. The alternative is, as I'm seeing with my current patch, a lot of extraneous log output that isn't really valuable.
, Yes, let's cache the "good dirs".  If a drive goes offline or becomes unwritable while a node is running, then we should start emitting warnings, but we should not warn more than once for drives that are offline or unwritable at startup., Here's my currently-deployed code fixing this bug. I may not be getting to work with Hadoop clusters much in my next position, so, unfortunately, this is as-is with no test case. It is up-to-date and working against the 0.13.0 branch.

Without this, listing non-existent directories in mapred.local.dir will fail. This is still a pretty severe bug., This was fixed by the superceding issue that's been linked here., I meant MAPREDUCE-2413]