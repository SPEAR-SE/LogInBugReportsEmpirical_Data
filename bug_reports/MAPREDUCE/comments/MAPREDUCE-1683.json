[Rather than remove these fields from ClusterStatus, I've made a slightly less invasive change: I've made the memory-related info a part of 'detailed' information alongwith tracker-names and such. Thus users can call JobClient.getClusterStatus(true) to get this info. 

Nevertheless, the issue is important enough to make an incompatible change for better performance on the JT. This is called from various critical pieces of framework code (e.g. JobInProgress) to matter., +1 for leaving the memory vals in the detailed info.

Patch for 20 looks good too.

When working on the trunk patch, we should cleanup/remove all the useless constructors - constructors are all package private so no harm in doing a cleanup here, I think., Patch for the yahoo security branch, not to be committed., We missed a part of the patch to fix the jsps., Looks like JobClient.getClusterStatus(boolean detailed) won't behave as expected, as there is no way to get jobtracker ClusterStatus with jobtracker memory info from the new ClientProtocol due to MAPREDUCE-777., bq. Looks like JobClient.getClusterStatus(boolean detailed) won't behave as expected, as there is no way to get jobtracker ClusterStatus with jobtracker memory info from the new ClientProtocol due to MAPREDUCE-777. 
I raised MAPREDUCE-1779 for this., The JobTracker memory usage fields in ClusterStatus are not really used by any one other than the JT jsp page. Let's just remove them all together., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12444160/mr-1683-trunk-v1.patch
  against trunk revision 942764.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/179/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/179/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/179/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/179/console

This message is automatically generated., No tests are need for this patch, as it's strictly removing a feature and existing tests should suffice., Patch functionally looks fine. But lets wait for the resolution of MAPREDUCE-1779 before this., Patch looks fine to me., One suggestion : Instead of printing the total memory, which will remain fixed/clamped, shouldn't we print the currently used heap memory i.e Runtime.totalMemory() - Runtime.freeMemory()?, That's a good idea. Updated patch, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12445141/M1683-1.patch
  against trunk revision 946833.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/542/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/542/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/542/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/542/console

This message is automatically generated., Both {{TestChild}} and {{TestPipes}} pass on my machine; neither should be affected by this patch.

+1

I committed this. Thanks, Luke and Arun!, Integrated in Hadoop-Mapreduce-trunk #327 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-Mapreduce-trunk/327/])
    MAPREDUCE-1683. Remove JNI calls from ClusterStatus cstr. Contributed by Arun Murthy and Luke Lu
]