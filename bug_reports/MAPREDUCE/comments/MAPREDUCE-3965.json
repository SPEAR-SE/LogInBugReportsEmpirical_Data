[stack trace
{code}

     [java] Exception in thread "main" java.lang.NullPointerException
     [java] 	at org.apache.hadoop.mapred.JobConf.findContainingJar(JobConf.java:1792)
     [java] 	at org.apache.hadoop.mapred.JobConf.setJarByClass(JobConf.java:426)
     [java] 	at org.apache.hadoop.mapreduce.Job.setJarByClass(Job.java:133)
     [java] 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
     [java] 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
     [java] 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
     [java] 	at java.lang.reflect.Method.invoke(Method.java:597)
     [java] 	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
     [java] 	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)
     [java] 	at groovy.lang.MetaClassImpl.setProperty(MetaClassImpl.java:2388)
     [java] 	at groovy.lang.MetaClassImpl.setProperty(MetaClassImpl.java:3312)
     [java] 	at org.smartfrog.services.hadoop.grumpy.GrumpyJob.setProperty(GrumpyJob.groovy)
     [java] 	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.setGroovyObjectProperty(ScriptBytecodeAdapter.java:528)
     [java] 	at org.smartfrog.services.hadoop.bluemine.jobs.BluemineJob.createBasicJob(BluemineJob.groovy:51)
     [java] 	at org.smartfrog.services.hadoop.bluemine.jobs.BluemineJob$createBasicJob.call(Unknown Source)
     [java] 	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:42)
     [java] 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
     [java] 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:128)
     [java] 	at org.smartfrog.services.hadoop.bluemine.jobs.DevCount.main(DevCount.groovy:95)
{code}, This is triggered if the Class passed down to the map class is class {{java.lang.Class}}
{code}
job.setJarByClass(Class.class);
{code}
Groovy seems to trigger it for other reasons, no, groovy triggers it for the same reason -user error.

Propose
# a check in {{findContainingJar}} to handle a null class
#Â if found, an IllegalArgumentException is raised -including the classname at fault
# a test that tries to set the class of a job to {{java.lang.Class}} and expects the relevant error]