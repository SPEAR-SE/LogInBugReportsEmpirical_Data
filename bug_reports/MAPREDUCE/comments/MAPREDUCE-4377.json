[This also means that the code to update the library path doesn't work if there is already a space in the user-specified library path:

    for(int i=0; i<javaOptsSplit.length ;i++) { 
      if(javaOptsSplit[i].startsWith("-Djava.library.path=")) {
        javaOptsSplit[i] += SYSTEM_PATH_SEPARATOR + libraryPath;
        hasUserLDPath = true;
      }
      vargs.add(javaOptsSplit[i]);
    }

Instead of appending to the end of the string, we are actually appending to the middle of the original user-specified library path (or wherever they had an embedded space)., John,

that is very true, and if you can fix it I would be very happy to commit it for you.  However, I don't think this is the only place in the code that has problems with embedded spaces.  I'm not saying that we should not fix it, we should, just be aware that there be monsters here.  Also be aware that there may be some Windows vs. POSIX(bash) issues that you may run into with trying to parse the arguments.  Hopefully not too much though., Thanks Robert!  I agree it won't be an easy fix and may need some rearchitecture and significant test additions.]