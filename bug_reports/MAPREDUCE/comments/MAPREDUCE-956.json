[We could say the phases as Shuffle phase and Reduce phase. But we need to investigate how we want to update progress in shuffle phase --- because updating progress of shuffle phase just based on 'copy of map outputs' would not be a correct way as there could be some merges that would take some time after all map outputs are copied to this reduce node(even though some merges happen while some map outputs are being copied)., The sort phase is actually when the map-outputs are being merged prior to being fed to the reducer. Could you give a bit more detail about what has changed - presumably the merging still takes place, so perhaps "sort phase" should just be renamed to "merge phase". , True, we do have a final merge before feeding the reducer. However, assigning 33% of progress for this one final merge does not seem to be correct.  In cases where the number of files at that time is < io.sort.factor, this final merge does not even occur, we start feeding the reducer straight away. Also, since we have merges happening during shuffle phase as well, I was just proposing that we delineate  as
Shuffle (50%)
Final Merge + Reduce (50%)

, It's true that the merge occurs on the map side too. So this change sounds reasonable to me., I can see hte appeal of this, but we should remember that there are applications where merge is a significant part of the reduce runtime e.g. petasort's merge was _huge_., I have a scenario that the output of shuffle phase is exact what I want, so the sort phase and reduce phase are not necessary to me and cause a lot of overheads. I dont know how get the output of shuffle phase in hadoop 0.19.1 or 0.20.1. Maybe the sort phase should be optional to developers.]