[Do we really have a stop-jobtracker.sh in 0.20? I couldn't see one in the 0.20 branch under common nor in Y!'s 0.20.100; which release has it?, The Apache 0.20 release does not have stop-jobtracker.  This is likely a Y! 0.20 or CDH 0.20 special., None in CDH2/3 either, nor in Yahoo's one at GitHub.

There's a stop-jobhistoryserver.sh available in 0.20.100, however. Is that probably it?, I am sorry. stop-jobtracker.sh was written by us. I have mistakenly assumed that it is from hadoop release.

stop-jobtracker.sh contains this, 

{code:xml} 

bin=`dirname "$0"`
bin=`cd "$bin"; pwd`

. "$bin"/hadoop-config.sh

"$bin"/hadoop-daemon.sh --config $HADOOP_CONF_DIR stop jobtracker

{code} 

If I try to stop job tacker using the above script, task tracker is also stopping.
, Argh!  Another raw $0.  I swear I'm going to start -1'ing any new code that has them.  We clearly need to add unit tests that undef's $HADOOP_HOME and calls all shell scripts from a raw path so that they will fail., When we start job tracker and task tracker using start-mapred.sh, sometimes job tracker is still in initialization and task tracker is stopping because the job tracker is not available by that time.  

Provided retry mechanism for task tracker to connect to job tracker when job tracker is in initialization state.
, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12479776/MAPREDUCE-2310.patch
  against trunk revision 1124553.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/hudson/job/PreCommit-MAPREDUCE-Build/276//console

This message is automatically generated., Patch is provided for 0.20 version., Hm, experimented a bit more here and I believe you should update the JIRA summaries and description to illustrate the problem better.

The said problem of the TT crashing out _only_ occurs when the JobTracker has not completely initialized and added in the specific TT node before its taken down. If the TT faced proper initialization before the JT went down, you won't see this.

Patch is OK to me, since waitForProxy anyway waits internally (while the look implemented doesn't seem to sleep). However, this would be fixing a very rare case where a JT is taken down immediately for some reason, and not in case of general restarts. I suppose it is okay to have the uninited TTs running anyway, like zombies awaiting their masterâ€¦ :), s/look/loop, 
Sorry to come in late, the patch has gone stale. Can you please rebase? Thanks.

Given this is not an issue with MRv2 should we still commit this? I'm happy to, but not sure it's useful. Thanks., It is not a problem in active versions.]