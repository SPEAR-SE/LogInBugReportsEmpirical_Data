[Would transactions help you?  A speculative task can show up right after the map task decides to commit the transaction, and you're in the same place., That's right - it *should* use transactions but doesn't currently., Sorry, I wasn't clear.  I think that even if you had transactions, you could still have data inserted twice.  A map task looks like: (1) start map task, (2) begin transaction, (3) insert many rows, (4) commit transaction, (5) end map task.  If you crash between (4) and (5), MapReduce will schedule another worker.
, This is just in the outputformatter - is there any case that the outputformatter would get repeated records from map or reduce and get the close call?  i.e. after hadoop calls close on an outputformatter would it still potentially re-send the output data?, Adapter was removed long ago.]