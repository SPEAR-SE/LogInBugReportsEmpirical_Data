[positionToNextRecord() in IFile.Reader should check whether checksumIn had crc checked when reader get EOF_MARKER for currentKeyLength and currentValueLength.

if IFileInputStream had crc checked in doRead() , it should set a class private variable flag, and the Reader could check througth a IFileInputStream  public method to query this variable.

if IFile.Reader get 2 byrtes -1 for keylength and valuelength and crc not checked in checksumIn,  it would throw a exception to fail this task., Well, I don't think this is a big deal.  There is only one checksum for the entire file, so you can't trust the values of {{nextRawKey}} until you get to the end of the file anyway.  At which point, a call to the {{close}} method will cause the remaining bits to be check-sum.

{code}
ArrayList<Map.Entry<K,V>> results = new ArrayList<>();
IFile.Reader reader = new IFile.Reader(...);
try {
  // loop 1,2,3,EOF,5,6,7,EOF
  while (reader.nextRawKey(buf)) {
  // serialize buffer into Key
  reader.nextRawValue(buf);
  // serialize buffer into Value
  results.add(new Map.Entry<K,V>(keyValue,mapValue));
  } finally {
    try {
      // reads rest of file and validates checksum
      reader.close();
    } catch (ChecksumException cse) {
      // Has values 1,2,3
      results.clear();
    }
}
return results;
{code}

Now, I don't know if this is being done anywhere, but the facilities are there.]