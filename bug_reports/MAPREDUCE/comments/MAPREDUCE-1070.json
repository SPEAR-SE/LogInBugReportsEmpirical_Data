[See attached diagram displaying inconsistent lock order based on dynamic analysis.

Here's a stack trace from an instance we saw this in production:

{noformat}
Thread 60324 (1823988020@qtp0-4064):
  State: BLOCKED
  Blocked count: 52
  Waited count: 32
  Blocked on org.apache.hadoop.mapred.JobInProgress@5d2044dd
  Blocked by 113 (IPC Server handler 9 on 7277)

  Stack:
    org.apache.hadoop.mapred.JobInProgress.finishedMaps(JobInProgress.java:560)
    org.apache.hadoop.mapred.FairSchedulerServlet.showJobs(FairSchedulerServlet.java:235)
    org.apache.hadoop.mapred.FairSchedulerServlet.doGet(FairSchedulerServlet.java:136)

    javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
 ...
Thread 113 (IPC Server handler 9 on 7277):
  State: BLOCKED
  Blocked count: 540572
  Waited count: 2658131
  Blocked on org.apache.hadoop.mapred.FairScheduler@a12d500

  Blocked by 60324 (1823988020@qtp0-4064)
  Stack:
    org.apache.hadoop.mapred.JobTracker.finalizeJob(JobTracker.java:2069)
    org.apache.hadoop.mapred.JobInProgress.garbageCollect(JobInProgress.java:2538)
    org.apache.hadoop.mapred.JobInProgress.jobComplete(JobInProgress.java:2181)

    org.apache.hadoop.mapred.JobInProgress.completedTask(JobInProgress.java:2125)
    org.apache.hadoop.mapred.JobInProgress.updateTaskStatus(JobInProgress.java:892)
    org.apache.hadoop.mapred.JobTracker.updateTaskStatuses(JobTracker.java:3415)

    org.apache.hadoop.mapred.JobTracker.processHeartbeat(JobTracker.java:2712)
    org.apache.hadoop.mapred.JobTracker.heartbeat(JobTracker.java:2507)
{noformat}

The solution is that the servlet should synchronize on JobTracker before synchronizing on jobs, Here's a patch against branch20 which fixes the issue (the dynamic analysis tool no longer sees the potential deadlock).

I also changed the output to go into a ByteArrayOutputStream to keep the time slice during which the JT lock is held as short as possible.

Patch against trunk and branch 21 coming soon., +1 looks good., You need to create a patch for trunk too though. I think it will be almost exactly the same., Patch against trunk.

Test not included since the deadlock is a timing bug that can't be reproduced reliably.

I reran the jcarder tool that produced the attached diagram and it no longer detects this potential deadlock., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12422015/mapreduce-1070.txt
  against trunk revision 824750.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/163/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/163/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/163/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/163/console

This message is automatically generated., Failed test is Hftp - unrelated.
Lack of new tests is because this is a fix for a deadlock which isn't reproducible., I committed this. Thanks, Todd!, Integrated in Hadoop-Mapreduce-trunk-Commit #84 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-Mapreduce-trunk-Commit/84/])
    . Prevent a deadlock in the fair scheduler servlet.
Contributed by Todd Lipcon
, Integrated in Hadoop-Mapreduce-trunk #117 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-Mapreduce-trunk/117/])
    . Prevent a deadlock in the fair scheduler servlet.
Contributed by Todd Lipcon
]