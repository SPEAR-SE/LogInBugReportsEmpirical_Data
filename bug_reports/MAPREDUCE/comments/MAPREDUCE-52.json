[Using BytesWritable or Text data types for KeyFieldBasedPartitioner, which would support not only utf8, and avoid the ArrayOutOfIndex exception., here comes the patch :), -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12407333/encode-free-KeyFieldBasedPartitioner.patch
  against trunk revision 772960.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch-vesta.apache.org/307/console

This message is automatically generated., create patch using svn diff instead of diff, Some minor comments:

* I think it would be better to have the instance check for the keys in a single if block
{code}
if (key instanceof BytesWritable) {
// Handle BytesWritable
}
else if (key instanceof Text) {
// Handle Text
}
else {
// error
}
{code}

* A test case to test for Text and BytesWritable keys would be good to have for this patch. It could either be a new test case or could modify TestStreamDataProtocol. Also, if the test case can demonstrate the fix for ArrayOutOfBoundsException -- it should fail without this patch and run with this patch, it would be really nice., Hey. I tried testing your patch against my testcase and it failed. The code changes to do with the exception seems insufficient. Attaching the code changes that fixes the issue. Can you plz change the patch accordingly? 

Note that I havent coded for utf-8 issue. , Attaching a merged patch. Testing in progress., Some minor comments:

# I think endChar cannot be negative, so the check endChar < 0 can be removed. Could you check?
# Instead of doing i <= end && i < b.length in the hashCode(), I think we should ideally fix the getEndOffset to return min (end, b.length -1).  But I would not -1 for that, I am OK with the existing simple change in the patch as well
# In the test case, adding an assert to verify the returned partition is 0 would be good., ZhuGuanyin, I am in the process of merging the patches and add a testcase. I hope its ok with you. Can you please let me know how to simulate the situation where key.toString().getBytes("UTF-8") throws exception. , Thanks very much, I'm busy the last month and not followed this issue, I'll attach an example dataset to let key.toString().getBytes("UTF-8") throws exception soon, 

Thanks again!, Opened HADOOP-6052 to address the ArrayOutOfIndex exception. ZhuGuanyin, could you plz provide a new patch having framework fix and testcase to solve utf-8 encoding issue?, MAPREDUCE-2 has fixed the ArrayOutOfIndex error. Can you please upload a new patch for the utf-8 issue.]