[From https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1772/console

{noformat}
Running org.apache.hadoop.mapred.pipes.TestPipeApplication
Running org.apache.hadoop.mapred.pipes.TestPipesNonJavaInputFormat
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.901 sec - in org.apache.hadoop.mapred.pipes.TestPipesNonJavaInputFormat
[... edited for brevity ...]
Results :

Tests run: 494, Failures: 0, Errors: 0, Skipped: 11

[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] 
[INFO] hadoop-mapreduce-client ........................... SUCCESS [2.671s]
[INFO] hadoop-mapreduce-client-core ...................... SUCCESS [52.650s]
[INFO] hadoop-mapreduce-client-common .................... SUCCESS [25.925s]
[INFO] hadoop-mapreduce-client-shuffle ................... SUCCESS [3.764s]
[INFO] hadoop-mapreduce-client-app ....................... SUCCESS [7:04.708s]
[INFO] hadoop-mapreduce-client-hs ........................ SUCCESS [4:43.209s]
[INFO] hadoop-mapreduce-client-jobclient ................. FAILURE [1:36:23.818s]
[INFO] hadoop-mapreduce-client-hs-plugins ................ SKIPPED
[INFO] Apache Hadoop MapReduce Examples .................. SKIPPED
[INFO] hadoop-mapreduce .................................. SKIPPED
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1:49:37.769s
[INFO] Finished at: Tue Apr 29 15:14:50 UTC 2014
[INFO] Final Memory: 29M/94M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.16:test (default-test) on project hadoop-mapreduce-client-jobclient: There was a timeout or other error in the fork -> [Help 1]
{noformat}

Note the lack of a test execution summary line after TestPipeApplication which implies either System.exit was called from the test or there was a surefire timeout.
, The test output contains only this.
{panel}
2014-04-29 14:05:07,398 INFO  \[main\] util.ProcessTree (ProcessTree.java:isSetsidSupported(64)) - setsid exited with exit code 0
{panel}

In the test worksapce, I see {{cache.sh}} and {{outfile}}. {{outfile}} is 0-byte., I reproduced it locally. I executed jstack and found that the test stops in the following code.
{code}
# o.a.h.mapred.pipes.Application.java
    clientSocket = serverSocket.accept();
{code}, Attaching the jstack output., jstack I collected from local run.

Looks like testApplication() hung calling Application ctor, Patch v1 adds timeout to testApplication().
On Mac, TestPipeApplication passes in 6.15 seconds.

This would prevent testApplication() from consuming all the time allocated to hadoop-mapreduce-client-jobclient., I modified Application.java to get error message from the forked process.
{code}
    process = runClient(cmd, env);
+    String error = IOUtils.toString(process.getErrorStream());
+    LOG.info(error);
{code}
The error message is as follows:
{code}
bash: /Users/aajisaka/git/hadoop-common/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/userlogs/job_001_0002/attempt_001_0002_r_000004_5/stdout: No such file or directory
{code}
It means the process failed immediately because stdout file was missing.
I'll attach a patch to create an empty stdout file., bq. It means the process failed immediately because stdout file was missing.
More precisely, the command (bash -c cache.sh 1>> stdout 2>> stderr) failed because the parent directory of stdout does not exist. If the parent directory does not exist, the process fails to create stdout., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12653800/MAPREDUCE-5868.2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4708//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4708//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-mapreduce-client-core.html
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4708//console

This message is automatically generated., Fix findbug warnings, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12653825/MAPREDUCE-5868.3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4710//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4710//console

This message is automatically generated., The patch is to pass the existing test, so new tests are not needed.
In addition, Jenkins didn't try TestPipeApplication since the test was in hadoop-mapreduce-client-jobclient project. I've run the test locally., Don't think this is the right fix. The log directories are supposed to be created by either (1) the framework (as part of YARN localization) on a real cluster or (2) the test if it isn't running a cluster. We need to find what caused this regression.., Thanks [~vinodkv] for the review. I'll update the patch to create the log directory in the test code since there're no cluster running.
I'm thinking this regression is caused by the test order. Before updating junit, {{testApplication}} was executed after {{testRunner}}, which creates log directory and does not delete it, so {{testApplication}} didn't fail. From junit 4.11, tests are ordered in deterministic order, compared by the hashCode of the method name. That's why {{testApplication}} is executed before {{testRunner}}, and {{testApplication}} fails., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12654270/MAPREDUCE-5868.4.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4718//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4718//console

This message is automatically generated., Ah, that makes sense!

The patch looks good to me, +1. Checking this in.., Committed this to trunk, branch-2 and branch-2.5. Thanks [~ajisakaa]!, SUCCESS: Integrated in Hadoop-trunk-Commit #5834 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/5834/])
MAPREDUCE-5868. Fixed an issue with TestPipeApplication that was causing the nightly builds to fail. Contributed by Akira Ajisaka. (vinodkv: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1608579)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapred/pipes/TestPipeApplication.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk #607 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/607/])
MAPREDUCE-5868. Fixed an issue with TestPipeApplication that was causing the nightly builds to fail. Contributed by Akira Ajisaka. (vinodkv: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1608579)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapred/pipes/TestPipeApplication.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1798 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1798/])
MAPREDUCE-5868. Fixed an issue with TestPipeApplication that was causing the nightly builds to fail. Contributed by Akira Ajisaka. (vinodkv: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1608579)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapred/pipes/TestPipeApplication.java
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #1825 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1825/])
MAPREDUCE-5868. Fixed an issue with TestPipeApplication that was causing the nightly builds to fail. Contributed by Akira Ajisaka. (vinodkv: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1608579)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapred/pipes/TestPipeApplication.java
]