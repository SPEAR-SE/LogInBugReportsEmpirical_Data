[I think I should throw an {{InvalidArgumentException}} when a particular file is added to the second of {{mapred.cache.files}} and {{mapred.cache.archives}} .  I will have to check that it doesn't get caught and ignored somewhere in the stack.  Does anyone out there have a comment on this plan?, Perhaps we should allow this, and both localize the file _and_ unarchive it?  What do you think?, We will _not_ allow this file duplication as proposed in 16/Apr/10 11:41AM.

However, we will not throw an {{IllegalArgumentException}} .  We will throw an {{InvalidJobconfException}} instead.  A consequence of this is that the check cannot be performed as you add individual files or blocks of files to the cache; the interface is wrong.  We perform the check for conflicts between {{mapred.cache.files}} and {{mapred.cache.archives}} when the user finally submits the offending {{JobConf}} .

In particular, I plan to make a new class {{DistributedCache.DuplicatedURI extends InvalidJobConfException}} and throw _that_ ., bq. Perhaps we should allow this, and both localize the file and unarchive it? What do you think?
We should not make the file option to unarchive the file. We have seen many use cases where users do not want their jars to be unjarred, for example HADOOP-5175

bq. We perform the check for conflicts between mapred.cache.files and mapred.cache.archives when the user finally submits the offending JobConf .
+1

bq. In particular, I plan to make a new class DistributedCache.DuplicatedURI extends InvalidJobConfException and throw that .
+1, The subject of this jira is that in one case a user specified that a particular archive be both in {{mapred.cache.archives}} and {{mapred.cache.files}} .  This duplication was not forseen in the code, which happened to do something unpleasant.  While the particular instance that triggered the bug report was accidental, it occurs to me that you could want that -- especially with a {{.jar}} file.

I see the point that if we silently explode a {{.jar}} file as well as copying it locally [and using it as a {{-classpath}}, presumably] we could be exposed to pain -- not in terms of the code working, because the exploded copy wouldn't ever be accessed, but in terms of cleanup performance.

For the time being, I'll just error out as described on 16/Apr/10 08:12 PM .
, This is a patch for an internal release; it may not apply to {{trunk}} .  However, it is ASF licensed., Dick, some comments:

# I'd rename DistributedCache.validateCachesDontOverlap to DistributedCache.validate to keep it simple, in future we may add more validations there, so having one public api might prove useful and succint.
# In the same function, and elsewhere, I'd define a public static final String for 'mapred.cache.archives' and 'mapred.cache.files' and use them instead of the raw strings.
# Request you to add a test-case which uses the Mini* clusters to ensure the validation works with fully-qualified hdfs uris (hdfs://nn:8000/user/blah/foo), and absolute Paths (/user/blah/foo)., Dick, though DistributedCache.validateCachesDontOverlap is a public api, it is not a user facing api. So, I think we should move it to TrackerDistributedCacheManager, where other public apis (which framework uses) like determineTimeStamps,  determineCacheVisibilities are present. We should also remove the comment saying "It is a public api" and add "it is used by framework only".
, This is a replacement patch for an internal release; it may not apply to {{trunk}} . However, it is ASF licensed., This patch applies to 0.20.101, not to trunk, and needs to be forward ported.  However, it is licensed., The following code change in JobClient does not look correct 
{code}
@@ -767,6 +766,9 @@ public class JobClient extends Configured implements MRConstants, Tool  {
                (new Path("file:///" +  binaryTokenFilename), jobCopy);
           }

+          // First we check whether the cached archives and files are legal.
+          TrackerDistributedCacheManager.validate(jobCopy);
+
           copyAndConfigureFiles(jobCopy, submitJobDir);
{code}

copyAndConfigureFiles adds files/archives given for command line options: -files, -archives, -libjars. So, the patch does not validate these files. Validate should happen after the call to copyAndConfigureFiles.
A test with same file added for -files and -archives option would fail with the patch., Patch for yahoo! distribution fixing the code in JobClient., The code to ask {{TrackerDistributedCacheManager}} to copy dfs files to the local cache is in {{JobSubmitter}} in {{trunk}}.  This patch is otherwise similar to the previous patches [including the amendment]., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12442974/mapreduce-1641--2010-04-27.patch
  against trunk revision 938576.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 9 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/148/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/148/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/148/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/148/console

This message is automatically generated., I checked out a trunk from Apache's {{git}} repository shortly before I checked in this patch.  It, too, fails {{TestJobACLs.testACLS}} ., +1 patch for trunk looks good., Should {{mapred.cache.libjars}} be checked too?, bq. Should mapred.cache.libjars be checked too? 
Dick, there is no such configuration. files passed in -libjars are added mapreduce.job.classpath.files to and mapreduce.job.cache.files. 

The patch needs to be updated to trunk. so canceling., Minor edits made to the patch in an effort to improve readability., The new patch does not apply to trunk. I tried to resolve conflicts and apply. Then, it does not compile also.
Can you please update the patch to trunk?, This is a new patch to accommodate trunk changes in locations of defined literals., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12445204/mapreduce-1641--2010-05-21.patch
  against trunk revision 947112.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 9 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/201/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/201/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/201/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/201/console

This message is automatically generated., latest patch looks fine., Sorry for picking up the patch late. Can you update the patch to trunk?, Likely fixed.]