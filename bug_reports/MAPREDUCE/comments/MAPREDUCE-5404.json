[Thanks for your reporting, Ted. I want to make sure the branch name you are using, because the code in branch-2 are implemented to use ephemeral ports if JHAdminConfig.MR_HISTORY_MINICLUSTER_FIXED_PORTS is false as follows:

{code:java}
  private class JobHistoryServerWrapper extends AbstractService {
    @Override
    public synchronized void serviceStart() throws Exception {
      try {
        if (!getConfig().getBoolean(
            JHAdminConfig.MR_HISTORY_MINICLUSTER_FIXED_PORTS,
            JHAdminConfig.DEFAULT_MR_HISTORY_MINICLUSTER_FIXED_PORTS)) {
          // pick free random ports.
          getConfig().set(JHAdminConfig.MR_HISTORY_ADDRESS,
              MiniYARNCluster.getHostname() + ":0");
          getConfig().set(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,
              MiniYARNCluster.getHostname() + ":0");
        }   
        historyServer = new JobHistoryServer();
        historyServer.init(getConfig());
        ...
    }
  }
{code}, Thanks for the hint.

I don't see the above code in https://issues.apache.org/jira/secure/attachment/12593038/JHS_REFRESH-13.txt

But here is the patch I come up with., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12593132/mapreduce-5404-v1.txt
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:red}-1 javac{color:red}.  The patch appears to cause the build to fail.

Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3868//console

This message is automatically generated., Hi Ted/Tsuyoshi,
	Here trying to access test class MiniMRYarnCluster.java in the source code HSAdminServer.java which we should not do.
{code:xml}
+    if (!getConfig().getBoolean(
+      JHAdminConfig.JHS_ADMIN_FIXED_PORTS,
+      JHAdminConfig.DEFAULT_JHS_ADMIN_FIXED_PORTS)) {
+      // pick free random ports.
+      getConfig().set(JHAdminConfig.JHS_ADMIN_ADDRESS,
+        MiniYARNCluster.getHostname() + ":0");
+    }
{code}
	
Instead of doing in the above way, we can set ephemeral port for JHS_ADMIN_ADDRESS in MiniMRYarnCluster.JobHistoryServerWrapper.start() method as like other configs,

{code:title=MiniMRYarnCluster.JobHistoryServerWrapper|borderStyle=solid}
    @Override
    public synchronized void serviceStart() throws Exception {
      try {
        if (!getConfig().getBoolean(
            JHAdminConfig.MR_HISTORY_MINICLUSTER_FIXED_PORTS,
            JHAdminConfig.DEFAULT_MR_HISTORY_MINICLUSTER_FIXED_PORTS)) {
          // pick free random ports.
          getConfig().set(JHAdminConfig.MR_HISTORY_ADDRESS,
              MiniYARNCluster.getHostname() + ":0");
          getConfig().set(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,
              MiniYARNCluster.getHostname() + ":0");
+          getConfig().set(JHAdminConfig.JHS_ADMIN_ADDRESS,
+              MiniYARNCluster.getHostname() + ":0");
        }
	.....
{code}, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12593137/mapreduce-5404-v2.txt
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3869//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3869//console

This message is automatically generated., Thanks for the comment, Devaraj.

Here is a new patch., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12593142/mapreduce-5404-v3.txt
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

                  org.apache.hadoop.mapreduce.security.TestBinaryTokenFile
                  org.apache.hadoop.mapreduce.security.TestMRCredentials

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3870//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3870//console

This message is automatically generated., This is what I did:
built tip of hadoop-2 with patch v3 using 'mvn install'
built HBase trunk code with the following change:
{code}
@@ -887,7 +887,7 @@
     <buildDate>${maven.build.timestamp}</buildDate>
     <compileSource>1.6</compileSource>
     <!-- Dependencies -->
-    <hadoop-two.version>2.0.5-alpha</hadoop-two.version>
+    <hadoop-two.version>2.3.0-SNAPSHOT</hadoop-two.version>
     <hadoop-one.version>1.1.2</hadoop-one.version>
     <commons-cli.version>1.2</commons-cli.version>
     <commons-codec.version>1.7</commons-codec.version>
{code}
ran HBase test suite for hadoop 2 profile.

So far there was no test failure.
Mapreduce tests such as TestMultithreadedTableMapper passed where they used to fail with BindException., {code}
[INFO] HBase ............................................. SUCCESS [1.861s]
[INFO] HBase - Common .................................... SUCCESS [17.231s]
[INFO] HBase - Protocol .................................. SUCCESS [0.690s]
[INFO] HBase - Client .................................... SUCCESS [18.710s]
[INFO] HBase - Prefix Tree ............................... SUCCESS [2.368s]
[INFO] HBase - Hadoop Compatibility ...................... SUCCESS [5.104s]
[INFO] HBase - Hadoop Two Compatibility .................. SUCCESS [2.064s]
[INFO] HBase - Server .................................... SUCCESS [54:45.935s]
[INFO] HBase - Integration Tests ......................... SUCCESS [1.668s]
[INFO] HBase - Examples .................................. SUCCESS [5.012s]
[INFO] HBase - Assembly .................................. SUCCESS [1.170s]
{code}, Latest patch looks good to me, The above test failures are unrelated to this patch it seems., +1, looks good to me as well.  Both of the test failures are occurring without this patch.  I'll commit this shortly.

My apologies for missing this in the MAPREDUCE-5265 review.
, Thanks for the contribution, Ted, and thanks for the review, Devaraj!  I committed this to trunk and branch-2.]