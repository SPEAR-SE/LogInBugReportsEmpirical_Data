[It might just make sense to add a deprecation key to org.apache.hadoop.mapreduce.util.ConfigUtil.java. We might have to test it a little so that it doesnt break anything else.


, OK, but his does not address the issue of JobClient creation using a custom 'mapred.job.tracker' (and not hadoop site.xml files around), Actually am not sure if thats true. Have you tried it? , ConfigUtil has:

   Configuration.addDeprecation("mapred.job.tracker",
      new String[] {JTConfig.RM_ADDRESS});

It seems we should add:

   Configuration.addDeprecation(JTConfig.JT_IPC_ADDRESS,
      new String[] {YarnConfiguration.RM_ADDRESS});

And also we may need to change Configuration logic to do a transitive closure of deprecated keys.

This is becoming a mess.

Thoughts?
, Is there any update on this?
, I think this isn't as straightforward as adding a deprecation, primarily because this is a deprecation across configuration files.  yarn-default.xml and yarn-site.xml load before mapred-default.xml and mapred-site.xml.  If yarn-site.xml sets yarn.resourcemanager.address to an appropriate value, it will be later smashed to "local" by mapred-default.xml if we tie yarn.resourcemanager.address to mapreduce.jobtracker.address.

In addition I think we'd need to update Configuration deprecation support to handle multiple deprecated values mapped to the same new key (i.e.: mapred.job.tracker *and* mapreduce.jobtracker.address would both need to map to yarn.resourcemanager.address).  I don't think the deprecation code currently handles a many-to-one mapping, although oddly it appears to support one-to-many.

Bottom line is that this change smells pretty risky, certainly not as easy as a one-line Configuration.addDeprecation() call.  Would it make more sense from a risk-mitigation standpoint to have Oozie set both mapred.job.tracker and yarn.resourcemanager.address so it can work with both 1.x and 2.x?, @jason, what you suggest is exactly what Oozie is currently doing. Agree the deprecation thingy is not that simple. Still the problem impacts apps in general outside of Oozie that set 'mapred.*' values.
, I'm confused. If someone set mapreduce.framework.name to yarn, why should we support mapred.job.tracker? , @arun, fair enough, i did a source scan and I don't find cases of other double deprecated properties that could be affected. So we can close this one.]