[{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12695742/MAPREDUCE-6238.000.patch
  against trunk revision 26c2de3.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 13 new Findbugs (version 2.0.3) warnings.

        {color:red}-1 release audit{color}.  The applied patch generated 1 release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5135//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5135//artifact/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5135//artifact/patchprocess/newPatchFindbugsWarningshadoop-mapreduce-client-core.html
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5135//console

This message is automatically generated., Many thanks for working on this - it is a rather often observed issue. In following your analysis, the fix looks good to me (essentially we reset the paths after the remote upload to be of the correct lookup FS).

Would it be possible to have a test case also track this for preventing future regression on this? It is surprising that the default tests that do run local job runners have never caught this before - but thats probably cause they did not make use of HDFS as the default FS., [~qwertymaniac], thanks for the review. I update the patch to add a test case for this issue. Without the patch, the test will fail.
, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12695826/MAPREDUCE-6238.000.patch
  against trunk revision ffc75d6.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 13 new Findbugs (version 2.0.3) warnings.

        {color:red}-1 release audit{color}.  The applied patch generated 1 release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

                  org.apache.hadoop.mapreduce.TestLargeSort
                  org.apache.hadoop.conf.TestJobConf
                  org.apache.hadoop.mapred.TestLocalJobSubmission

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5136//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5136//artifact/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5136//artifact/patchprocess/newPatchFindbugsWarningshadoop-mapreduce-client-core.html
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5136//console

This message is automatically generated., All these test failures are not related to my change.
TestLargeSort failure is already reported at MAPREDUCE-6233.
TestJobConf failure is already reported at MAPREDUCE-6223
TestLocalJobSubmission failure is because I add a new file test.jar in the patch. I don't know why  Hadoop QA didn't add this file., Thanks for adding a test! The patch file does not carry the binary values, which would explain why the test failed to find/use it.

Is this not testable without a jar binary? A simple unit test case of the regressed code path suffices also, and may run faster in achieving the same goal I think., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12695860/test.jar
  against trunk revision ffc75d6.

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5138//console

This message is automatically generated., Thanks for the information. We still need a jar file to test the functions(copyAndConfigureFiles and setup) which has the regressed code path.
The current unit test case will have a complete coverage to run a local job with -libjars options., I attached the test.jar file I used for my test, which need be copied to hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/resources/test.jar, The new patch MAPREDUCE-6238.000.patch was uploaded for review. I find a way to create test.jar in the test code, So I don't need to include test.jar in the new patch. I also updated the patch with the latest code., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12708025/MAPREDUCE-6238.000.patch
  against trunk revision 3d9132d.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

                  org.apache.hadoop.mapred.TestReduceFetch
                  org.apache.hadoop.mapred.TestMerge
                  org.apache.hadoop.mapreduce.TestMapReduceLazyOutput
                  org.apache.hadoop.mapred.TestMRIntermediateDataEncryption
                  org.apache.hadoop.mapred.pipes.TestPipeApplication
                  org.apache.hadoop.mapred.TestLazyOutput
                  org.apache.hadoop.mapreduce.TestLargeSort
                  org.apache.hadoop.mapred.TestReduceFetchFromPartialMem
                  org.apache.hadoop.mapreduce.v2.TestMRJobsWithProfiler
                  org.apache.hadoop.mapreduce.v2.TestRMNMInfo
                  org.apache.hadoop.mapreduce.lib.output.TestJobOutputCommitter
                  org.apache.hadoop.mapreduce.security.ssl.TestEncryptedShuffle
                  org.apache.hadoop.mapred.TestJobSysDirWithDFS
                  org.apache.hadoop.ipc.TestMRCJCSocketFactory
                  org.apache.hadoop.mapred.TestSpecialCharactersInOutputPath
                  org.apache.hadoop.mapreduce.v2.TestMROldApiJobs
                  org.apache.hadoop.mapred.TestJobCleanup
                  org.apache.hadoop.mapreduce.v2.TestSpeculativeExecution
                  org.apache.hadoop.conf.TestNoDefaultsJobConf
                  org.apache.hadoop.mapred.TestClusterMRNotification
                  org.apache.hadoop.mapreduce.v2.TestMRAMWithNonNormalizedCapabilities
                  org.apache.hadoop.mapreduce.v2.TestNonExistentJob
                  org.apache.hadoop.mapreduce.v2.TestMRJobs
                  org.apache.hadoop.mapred.TestMiniMRWithDFSWithDistinctUsers
                  org.apache.hadoop.mapreduce.v2.TestMRAppWithCombiner
                  org.apache.hadoop.mapreduce.v2.TestUberAM
                  org.apache.hadoop.mapred.TestJobName
                  org.apache.hadoop.mapreduce.TestMRJobClient
                  org.apache.hadoop.mapred.TestMiniMRBringup
                  org.apache.hadoop.mapred.TestClusterMapReduceTestCase
                  org.apache.hadoop.mapreduce.security.TestMRCredentials
                  org.apache.hadoop.mapred.TestMRTimelineEventHandling
                  org.apache.hadoop.mapreduce.v2.TestMiniMRProxyUser
                  org.apache.hadoop.mapreduce.v2.TestMRJobsWithHistoryService
                  org.apache.hadoop.mapred.TestMiniMRClasspath
                  org.apache.hadoop.mapred.TestMiniMRClientCluster
                  org.apache.hadoop.mapred.TestNetworkedJob
                  org.apache.hadoop.mapred.TestMiniMRChildTask
                  org.apache.hadoop.mapreduce.TestChild
                  org.apache.hadoop.mapreduce.security.TestBinaryTokenFile
                  org.apache.hadoop.mapred.TestJobCounters

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5349//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5349//console

This message is automatically generated., It looks like all these test failure are related to HADOOP-11754
{code}
2015-03-29 06:33:39,165 ERROR [RM-0] mortbay.log (Slf4jLog.java:warn(87)) - Nested in javax.servlet.ServletException: java.lang.RuntimeException: Could not read signature secret file: /home/jenkins/hadoop-http-auth-signature-secret:
java.lang.RuntimeException: Could not read signature secret file: /home/jenkins/hadoop-http-auth-signature-secret
	at org.apache.hadoop.security.authentication.util.FileSignerSecretProvider.init(FileSignerSecretProvider.java:59)
{code}, Looks good to me.  I'd like to get a more clean build before we commit this, so I've kicked off another one.
+1 pending Jenkins, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12708025/MAPREDUCE-6238.000.patch
  against trunk revision 4308910.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5409//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5409//console

This message is automatically generated., Thanks Zhihai.  Committed to trunk and branch-2!, FAILURE: Integrated in Hadoop-trunk-Commit #7618 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7618/])
MAPREDUCE-6238. MR2 can't run local jobs with -libjars command options which is a regression from MR1 (zxu via rkanter) (rkanter: rev d50e8f09287deeb51012d08e326a2ed71a6da869)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapred/LocalDistributedCacheManager.java
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobResourceUploader.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapred/TestLocalJobSubmission.java
, thanks [~rkanter] for the review and committing the patch., FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #170 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/170/])
MAPREDUCE-6238. MR2 can't run local jobs with -libjars command options which is a regression from MR1 (zxu via rkanter) (rkanter: rev d50e8f09287deeb51012d08e326a2ed71a6da869)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapred/LocalDistributedCacheManager.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapred/TestLocalJobSubmission.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobResourceUploader.java
* hadoop-mapreduce-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Yarn-trunk #904 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/904/])
MAPREDUCE-6238. MR2 can't run local jobs with -libjars command options which is a regression from MR1 (zxu via rkanter) (rkanter: rev d50e8f09287deeb51012d08e326a2ed71a6da869)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapred/LocalDistributedCacheManager.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapred/TestLocalJobSubmission.java
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobResourceUploader.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2102 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2102/])
MAPREDUCE-6238. MR2 can't run local jobs with -libjars command options which is a regression from MR1 (zxu via rkanter) (rkanter: rev d50e8f09287deeb51012d08e326a2ed71a6da869)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapred/TestLocalJobSubmission.java
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobResourceUploader.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapred/LocalDistributedCacheManager.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #161 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/161/])
MAPREDUCE-6238. MR2 can't run local jobs with -libjars command options which is a regression from MR1 (zxu via rkanter) (rkanter: rev d50e8f09287deeb51012d08e326a2ed71a6da869)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobResourceUploader.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapred/LocalDistributedCacheManager.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapred/TestLocalJobSubmission.java
* hadoop-mapreduce-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #171 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/171/])
MAPREDUCE-6238. MR2 can't run local jobs with -libjars command options which is a regression from MR1 (zxu via rkanter) (rkanter: rev d50e8f09287deeb51012d08e326a2ed71a6da869)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobResourceUploader.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapred/TestLocalJobSubmission.java
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapred/LocalDistributedCacheManager.java
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #2120 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2120/])
MAPREDUCE-6238. MR2 can't run local jobs with -libjars command options which is a regression from MR1 (zxu via rkanter) (rkanter: rev d50e8f09287deeb51012d08e326a2ed71a6da869)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapred/TestLocalJobSubmission.java
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapred/LocalDistributedCacheManager.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobResourceUploader.java
, This seems like an important fix. I merged this into branch-2.7., FAILURE: Integrated in Hadoop-trunk-Commit #7673 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7673/])
Moving YARN-3351, YARN-3382, YARN-3472, MAPREDUCE-6238 to the 2.7.1 CHANGES.txt (vinodkv: rev 2f82ae042a6f3110742aaa57c076bb9ebd7888d1)
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-yarn-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #174 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/174/])
Moving YARN-3351, YARN-3382, YARN-3472, MAPREDUCE-6238 to the 2.7.1 CHANGES.txt (vinodkv: rev 2f82ae042a6f3110742aaa57c076bb9ebd7888d1)
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-yarn-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Yarn-trunk #908 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/908/])
Moving YARN-3351, YARN-3382, YARN-3472, MAPREDUCE-6238 to the 2.7.1 CHANGES.txt (vinodkv: rev 2f82ae042a6f3110742aaa57c076bb9ebd7888d1)
* hadoop-yarn-project/CHANGES.txt
* hadoop-mapreduce-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2106 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2106/])
Moving YARN-3351, YARN-3382, YARN-3472, MAPREDUCE-6238 to the 2.7.1 CHANGES.txt (vinodkv: rev 2f82ae042a6f3110742aaa57c076bb9ebd7888d1)
* hadoop-yarn-project/CHANGES.txt
* hadoop-mapreduce-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #165 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/165/])
Moving YARN-3351, YARN-3382, YARN-3472, MAPREDUCE-6238 to the 2.7.1 CHANGES.txt (vinodkv: rev 2f82ae042a6f3110742aaa57c076bb9ebd7888d1)
* hadoop-yarn-project/CHANGES.txt
* hadoop-mapreduce-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #175 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/175/])
Moving YARN-3351, YARN-3382, YARN-3472, MAPREDUCE-6238 to the 2.7.1 CHANGES.txt (vinodkv: rev 2f82ae042a6f3110742aaa57c076bb9ebd7888d1)
* hadoop-yarn-project/CHANGES.txt
* hadoop-mapreduce-project/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #2124 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2124/])
Moving YARN-3351, YARN-3382, YARN-3472, MAPREDUCE-6238 to the 2.7.1 CHANGES.txt (vinodkv: rev 2f82ae042a6f3110742aaa57c076bb9ebd7888d1)
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-yarn-project/CHANGES.txt
, Added MAPREDUCE-6267 as a dependency for this patch.

This patch applied cleanly.

Pulled this into 2.6.1. Ran compilation and TestLocalJobSubmission before the push.]