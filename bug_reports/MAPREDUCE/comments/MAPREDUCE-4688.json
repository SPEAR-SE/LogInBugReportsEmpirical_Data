[It'd be much easier and more flexible for webapps to submit jobs via Oozie (another J2EE service). Now you have J2EE and SOA :), This JBoss ticket seems related to this issue:

  https://issues.jboss.org/browse/JBVFS-147

While we have a workaround, it is not very clean.  
Anybody has a better solution?, Thanks for this workaround.  It really helped me out!

One suggestion I might make is to modify the code as follows.  It allows the job wrapper to work in either JBoss or standalone(without any sort of check or custom handling for both situations) and doesn't introduce the dependency on a JBoss binary at compile or runtime(unless it's triggered at runtime by running in JBoss and having a vfs resource).

                if (!"vfs".equals(classUrl.getProtocol())) {
                    super.setJarByClass(cls);
                    continue;
                }

                final String jarFile = classUrl.getFile().substring(0, classUrl.getFile().length() - (classFile.length() + 1) ); //+1 because of '/'
                final URL jarUrl = new URL(classUrl.getProtocol(), classUrl.getHost(), classUrl.getPort(), jarFile,
                    (URLStreamHandler)Class.forName("org.jboss.vfs.protocol.VirtualFileURLStreamHandler").newInstance());]