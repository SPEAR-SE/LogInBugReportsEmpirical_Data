[More details are available about this issue at http://issues.apache.org/jira/browse/HADOOP-2116?focusedCommentId=12557910#action_12557910, In the current behaviour of streaming jobs, -file option is used to ship File/dir  in the Job jar file. 
There are -cacheFile, -cacheArchive options to add files/archives  to the distributed cache. 
If we rework -file option to use distributed cache, we actually remove the facility to ship to job jar file. Is this fine, since we are distributing it through distributed cache? 
If yes, should we deprecate -file option and ask users to use -cacheFile and -cacheArchive for the same ?

Thoughts?, Most users use -file to pass map/reduce script and conf files. Having them to move ask them to place the file on DFS and use it via -cacheFile. or -cacheArchive is not user friendly. If we decide to remove -file, could it be made convenient for user to pass these kind of script. And also right now, if users have their own inputFormat, they would have to jar it with streaming jar and use the custom jar because setInputFormat is done at client side. So, passing that via -file does not work. It would be really helpful if this is also address. , bq. if users have their own inputFormat, they would have to jar it with streaming jar and use the custom jar because setInputFormat is done at client side. So, passing that via -file does not work. It would be really helpful if this is also address.

If we add Inputformat class (hierarchy also if any) using -file will work with current code, if we add the jar to the classpath. 
For example, If you have a.b.c.MyInputFormat as the inputformat, and dir hierarchy is dir/a/b/c/MyInputFormat.class then inputformat can be added to the jar using following command:
{noformat}
bin/hadoop jar build/contrib/streaming/hadoop-0.17.0-dev-streaming.jar -mapper my.pl -input t.txt -output output -file my.pl -file dir/ -inputformat a.b.c.MyInputFormat
{noformat}

Here is patch which will add the jar file to the classpath.
I tested this to add an inputformat, and this worked fine.
Lohit, Can you apply this patch and check if use of -file works for adding inputformat ?, For addressing the issue itself, i.e. fixing -file to use distributed cache , we can do the following:

1. Leave streaming jar as job.jar
2. Create a jar file from the files/dir given using -file oprion
3. Copy the jar file, created in step 2, to the dfs at a job specific location. 
    say submitJobDir/_jobFiles (${mapred.system.dir}/jobid/_jobFiles)
4. add the jar file to the distributed cache using addArchiveToClassPath

Thoughts?, With HADOOP-3722 and HADOOP-3570, User has -files, -libjars and -archives options for streaming to add files/jars/archives and libjars are available in client-side classpath also. Moreover, options -file and -files are confusing to the user now. We can deprecate the use of -file, and ask them to use -files, -libjars, -archives whichever are necessary.
Thoughts?, As MAPREDUCE-1697 deprecates the option -file in favor of -files, we can remove file option using this jira., Stale.]