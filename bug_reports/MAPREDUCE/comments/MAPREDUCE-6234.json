[The cause of the test failure is the change of default value of {{mapreduce.map.memory.mb}} and {{mapreduce.reduce.memory.mb}} by MAPREDUCE-5785. Though the default value defined in mapred-default.xml from 1024 to -1 (which means turning on auto deriving from the value of -Xmx in java.opts), {{MRJobConfig.DEFAULT_MAP_MEMORY_MB}} and {{MRJobConfig.DEFAULT_REDUCE_MEMORY_MB}} are still 1024. Those are used in a few place such as the test in Gridmix., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12696003/MAPREDUCE-6234.001.patch
  against trunk revision 5f9a0dd.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 13 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5141//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5141//artifact/patchprocess/newPatchFindbugsWarningshadoop-mapreduce-client-core.html
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5141//console

This message is automatically generated., Findbugs warnings are irrelevant. There is work in progress in MAPREDUCE-6225.
, I did not add tests because the existing tests in TestJobConf cover the change., I missed MAPREDUCE-6223 which seems to be related. I could not reproduce the failure in TestJobConf of hadoop-mapreduce-client-jobclient with the patch of this issue., Looks good to me. The patch also fixes TestJobConf reported by MAPREDUCE-6223., [~iwasakims] thank you for taking this JIRA. Currently, -1 for this fix.
 
I think we should fix test side to follow default configuration since the assertion only check whether check if the high ram properties are not set.

{code}
    // check if the high ram properties are not set
    assertEquals(expectedMapMB, 
                 simulatedConf.getLong(MRJobConfig.MAP_MEMORY_MB,
                                       MRJobConfig.DEFAULT_MAP_MEMORY_MB));
    assertEquals(expectedReduceMB, 
                 simulatedConf.getLong(MRJobConfig.REDUCE_MEMORY_MB, 
                                       MRJobConfig.DEFAULT_MAP_MEMORY_MB));
{code}

We should also rethink what we should test in TestHighRamJob - it refers JT_MAX_MAPMEMORY_MB or some old configurations. Do we really need this tests?, s/whether check if the high ram properties are not set./whether the high ram properties are set./, I agree that the code of gridmix should be updated. But I think it is very confusing that MRJobConfig.DEFAULT_MAP_MEMORY_MB is not same with the value of mapreduce.map.memory.mb in mapred-default.xml and it should be fixed without regarding to the test failure of gridmix., Make sense.

[~jira.shegalov], do you know the reason that DEFAULT_MAP_MEMORY_MB is not updated in MAPREDUCE-5785? If there is no reason, I think we can apply this patch to trunk. , I apologize, I am a little tied up right now to do a thorough review. Looking into resolving this is on my list. I was thinking that direct references to to DEFAULT_*_MEMORY_MB should be wrapped in a single method. Maybe [~kasha] can chime in in the meantime., .002 addresses my comment in MAPREDUCE-6223. Tests needing default value in conf can use {{MRJobConfig.DEFAULT_MAP_MEMORY_MB}} and test needing the value processed by JobConf#getMemoryRequired can use {{JobConf.DEFAULT_MAP_MEMORY_REQUIRED}}., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12696990/MAPREDUCE-6234.002.patch
  against trunk revision 02f154a.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 13 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5172//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5172//artifact/patchprocess/newPatchFindbugsWarningshadoop-mapreduce-client-core.html
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5172//console

This message is automatically generated., [~ozawa], 
Below is the description of the config. 

{code}
<description>
  The amount of memory to request from the scheduler for each 		
  map task. If this is not specified or is non-positive, it is inferred from
  mapreduce.map.java.opts and mapreduce.job.heap.memory-mb.ratio.
  If java-opts are also not specified, we set it to 1024.
</description>
{code}

-1 basically indicates map memory has to be taken from java opts first. And if not found, will be set as 1024 by default. So effective default value is 1024(if java opts don't exist). This is mentioned in config description.
I don't think not making DEFAULT_MAP_MEMORY_MB as -1 is an oversight. That is how the developer has written the code. It had an impact on {{TestJobConf}} in hadoop-mapreduce-jobclient though. MAPREDUCE-6239 is raised to address consolidating of two {{TestJobConf}} classes.

Maybe MAPREDUCE-6223 can fix the test case failure and this can address making it consistent.
Thoughts ?, [~varun_saxena], some tests need not "effective default value" but value literally set in conf. The name DEFAULT_MAP_MEMORY_MB implies the default value of "mapreduce.map.memory.mb". 1024 is the value defermined from "mapreduce.map.memory.mb" *and* "mapreduce.map.java.opts". If we need the 1024 in some constants, it should not be named as DEFAULT_MAP_MEMORY_MB. The .002 patch addresses this., [~iwasakims], I am not saying that we should or should not make DEFAULT_MAP_MEMORY_MB -1. We can probably make it consistent(as other configs are) and use another constant for 1024. I am frankly fine either ways.

Answering to [~ozawa]'s comment, I meant this probably wasn't an oversight while fixing MAPREDUCE-5785 because code seems to be written in a manner where value of 1024 in DEFAULT_MAP_MEMORY_MB is necessary(as per current code).

As Gera said, probably Karthik can chime in on this one., Thanks for the clarification, [~varun_saxena]. I might misunderstand that you don't agree the change by comment beggining with "-1":), Thanks for working on this, folks. As you might see in the description of the config, it is kind of hard to pick a single value for DEFAULT_MAP_MEMORY_MB, and the most appropriate value seemed 1024 since we fallback to that value. I like Gera's proposal of adding a helper method to get the default value; however, I wonder if that would just translate to calling {{JobConf#getMemoryRequired}} on the default conf. 

, 003 fixes test failure without changing the value of DEFAULT_*_MEMORY_MB., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12697632/MAPREDUCE-6234.003.patch
  against trunk revision 260b5e3.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-tools/hadoop-gridmix.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5179//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5179//console

This message is automatically generated., +1. Checking this in. , Just committed this to trunk. Thanks Masatake for fixing this, Gera and Tsuyoshi for your reviews. , FAILURE: Integrated in Hadoop-trunk-Commit #7136 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7136/])
MAPREDUCE-6234. TestHighRamJob fails due to the change in MAPREDUCE-5785. (Masatake Iwasaki via kasha) (kasha: rev 409113d8f97fcfdb96cb028dbb6a20c9a1df81b0)
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-tools/hadoop-gridmix/src/test/java/org/apache/hadoop/mapred/gridmix/TestHighRamJob.java
, FAILURE: Integrated in Hadoop-Yarn-trunk #842 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/842/])
MAPREDUCE-6234. TestHighRamJob fails due to the change in MAPREDUCE-5785. (Masatake Iwasaki via kasha) (kasha: rev 409113d8f97fcfdb96cb028dbb6a20c9a1df81b0)
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-tools/hadoop-gridmix/src/test/java/org/apache/hadoop/mapred/gridmix/TestHighRamJob.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk-Java8 #108 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/108/])
MAPREDUCE-6234. TestHighRamJob fails due to the change in MAPREDUCE-5785. (Masatake Iwasaki via kasha) (kasha: rev 409113d8f97fcfdb96cb028dbb6a20c9a1df81b0)
* hadoop-tools/hadoop-gridmix/src/test/java/org/apache/hadoop/mapred/gridmix/TestHighRamJob.java
* hadoop-mapreduce-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #99 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/99/])
MAPREDUCE-6234. TestHighRamJob fails due to the change in MAPREDUCE-5785. (Masatake Iwasaki via kasha) (kasha: rev 409113d8f97fcfdb96cb028dbb6a20c9a1df81b0)
* hadoop-tools/hadoop-gridmix/src/test/java/org/apache/hadoop/mapred/gridmix/TestHighRamJob.java
* hadoop-mapreduce-project/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #2040 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2040/])
MAPREDUCE-6234. TestHighRamJob fails due to the change in MAPREDUCE-5785. (Masatake Iwasaki via kasha) (kasha: rev 409113d8f97fcfdb96cb028dbb6a20c9a1df81b0)
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-tools/hadoop-gridmix/src/test/java/org/apache/hadoop/mapred/gridmix/TestHighRamJob.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #109 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/109/])
MAPREDUCE-6234. TestHighRamJob fails due to the change in MAPREDUCE-5785. (Masatake Iwasaki via kasha) (kasha: rev 409113d8f97fcfdb96cb028dbb6a20c9a1df81b0)
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-tools/hadoop-gridmix/src/test/java/org/apache/hadoop/mapred/gridmix/TestHighRamJob.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2059 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2059/])
MAPREDUCE-6234. TestHighRamJob fails due to the change in MAPREDUCE-5785. (Masatake Iwasaki via kasha) (kasha: rev 409113d8f97fcfdb96cb028dbb6a20c9a1df81b0)
* hadoop-tools/hadoop-gridmix/src/test/java/org/apache/hadoop/mapred/gridmix/TestHighRamJob.java
* hadoop-mapreduce-project/CHANGES.txt
, Should this change be marked incompatible? Sounds like it's fixing an issue only presented by MAPREDUCE-5785, which is already marked incompatible and only checked into trunk., I'm thinking this change should not be marked as incompatible change. Removing the flag.]