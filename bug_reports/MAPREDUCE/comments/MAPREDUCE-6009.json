[A workaround is to manually add mapred.reducer.new-api=true to the job conf., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12658096/MAPREDUCE-6009.v01-branch-1.2.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4773//console

This message is automatically generated., Is this an issue in Hadoop 2 as well?, Hi [~sandyr], in Hadoop 2, job commit is executed in AM. Hadoop 2 is not affected., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12658096/MAPREDUCE-6009.v01-branch-1.2.patch
  against trunk revision 596702a.

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4950//console

This message is automatically generated., Just to be conservative with changes, could we leave these in the if statement?

{code}
+    if (conf.getUseNewReducer()) {
+      String mode = "new reduce API";
+      ensureNotSet("mapred.output.format.class", mode);
+      ensureNotSet(oldReduceClass, mode);
+    } else {
+      String mode = "reduce compatability";
+      ensureNotSet(JobContext.OUTPUT_FORMAT_CLASS_ATTR, mode);
+      ensureNotSet(JobContext.REDUCE_CLASS_ATTR, mode);
+    }
{code}, Yes, this works and corresponds to our workaround. Updating the patch, accordingly., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12674127/MAPREDUCE-6009.v02-branch-1.2.patch
  against trunk revision cb81bac.

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4951//console

This message is automatically generated., Thanks, this looks good to me.  Have you been able to run tests?, I ran tests, and got two unrelated errors/failures.
{code}
$ ant test
$ find . -name TEST\*txt | xargs grep 'Tests run' | grep 'Failures: [^0]\|Errors: [^0]' 
./build/test/TEST-org.apache.hadoop.mapred.TestJobRetire.txt:Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0 sec
./build/test/TEST-org.apache.hadoop.tools.rumen.TestRumenJobTraces.txt:Tests run: 13, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 27.265 sec
{code}, +1, We just hit this bug in an unpatched version of MR1.

The situation is that HCatalog submits a Map-only job and hopes to use OutputCommitter.commitJob to create a Hive partition.  Because of this bug, the Hive partition was never created.

Our sanity check on the hive table + workflow retry mechanism allowed us to have this bug running in production for a long time (and wasting compute resources).  It's great that this is fixed.
]