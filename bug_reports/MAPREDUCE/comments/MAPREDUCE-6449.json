[Started on the version 1 of this patch.
Questions to confirm my understanding:
1) As mentioned in MAPREDUCE-6439, I agree that there are 3 files in MR that have the 
catch (YarnRuntimeException e) {} block that needs to be addressed in this JIRA.
These files include 
~/mapreduce/v2/app/MRAppMaster.java 
~/mapreduce/v2/hs/webapp/HsWebServices.java
~/mapreduce/v2/app/webapp/AMWebServices.java
The other occurrences are under YARN which I believe is taken in YARN-4021.

2) The objective in this JIRA is to distinguish the calls for the Exception from remote versus local and wrap these under a unified Exception in MR that also helps in backwards compatiibility.

3) I observed that each of the other files in the mapred modules have specific actions in the catch block.
Like in TestRecordFactory:

catch (YarnRuntimeException e) {
      e.printStackTrace();
      Assert.fail("Failed to crete record");
    }

So, the idea in this JIRA is to simply map the name of YarnRuntimeException to a single Wrapper for MR Exception?
There are instances where the YarnException is expected to be caught:
As in TestLocalContainerAllocator which is the local exception catch block.
catch (YarnException e) {
      // YarnException is expected
}

Please correct/augment this comment to help confirm my understanding.

Thank you., You are mostly right. The objective is to distinguish a local exception versus a remote exception which happens because of incorrect reuse of YarnRuntimeException in MR. We do not want to wrap these exception, but use a MR specific exception type to distinguish between the 2 cases. This is clear in the case of MRApps.taskType throwing this exception and its callers catching this exception such as HsWebServices and AMWebServices as you pointed out. If we are simply using it as an unchecked exception and not expecting to catch it, we can create a MR specific RuntimeException., Found a bunch in the mapred-client modules that  throw new YarnRuntimeException();
Need to replace those as well., Attached the 1st version of this patch. 
1) I created MRRuntimeException.java to be equivalent to YarnRuntimeException and extends RuntimeException to help being replaced in the catch and throw blocks.

2) Replaced the calls to YarnRuntimeException in most of the files.

Concerns and questions:
1) Would the v2/app/exceptions be the right location for such a file or should it be in hadoop-mapreduce-client-common to be better accessible?
2) I went ahead and pointed all the YarnRuntimeException to MRRuntimeException. Should this cover all the places including the ones that catch(IOException e) { throws new YarnRuntimeException (e)}

Seen this in multiple instances, and I was not too sure about modifying this.

Requesting review on this version.
I will change/augment based on the review and add tests accordingly.
Planning to have TestSuite.java for exceptions.

Thank you., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  19m 12s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 14 new or modified test files. |
| {color:red}-1{color} | javac |   4m 26s | The patch appears to cause the build to fail. |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12762165/MAPREDUCE-6449.001.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / d1b9b85 |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6016/console |


This message was automatically generated., Fixing the patch on my end. Will add one soon with test(s).
, Uploading a Prelim patch to start off the MRRuntimeException replacement in local calls.
The effort is to find the pairs of throw and catch and replace it with a MRRuntimeException which is a YarnRuntimeException.

I added a few additions because there are few places where the YarnRuntimeException was thrown and not caught but it's exception is not necessary a "RuntimeException".

This is a first sweep of the throw new YarnRuntimeException () that I did to see where I can change the code.
I will add more based on the feedback for this prelim patch and include tests.

Requesting Review. Haven't submitted the patch.

Thank you., Changes look good overall

AMWebServices and MRApps pair seems safe to replace. This is of the variety where you are replacing an existing try catch pair of YarnRuntimeException with MRRuntimeException.
TypeConverter#toYarn also looks like  a candidate.

CachedHistoryStorage, ClientCache, DefaultSpeculator, HistoryFileManager, LocalContainerAllocator seems of the type where this is no existing catch block in the callers and is basically replacing one uncaught RuntimeException with another. So seems fine.

YarnRunner change seems unnecessary.
Minor comment, you can remove unused imports of YarnRuntimeException as you go along for eg in MRApps.
, [~adhoot] thanks for the review. 
I'll address the comments in the next patch. Not sure if there can be a good test for this.
Will test if it keeps the project stable.

Thank you., Adding patch version 2 with changes to other files that I found in the MR project with YarnRuntimeException.

Looked for pairs to see if there is a throw-catch pair to adjust to MRRuntimeException and removed the YarnRuntimeException from places it was just kept as an Exception encapsulation.

Requesting Review on Version 2.

Thank you., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  19m 36s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 11 new or modified test files. |
| {color:green}+1{color} | javac |   7m 59s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |  10m 27s | There were no new javadoc warning messages. |
| {color:red}-1{color} | release audit |   0m 19s | The applied patch generated 1 release audit warnings. |
| {color:red}-1{color} | checkstyle |   1m 36s | The applied patch generated  9 new checkstyle issues (total was 78, now 86). |
| {color:red}-1{color} | whitespace |   0m 13s | The patch has 1  line(s) that end in whitespace. Use git apply --whitespace=fix. |
| {color:green}+1{color} | install |   1m 33s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 33s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   3m 57s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | mapreduce tests |   9m 36s | Tests passed in hadoop-mapreduce-client-app. |
| {color:green}+1{color} | mapreduce tests |   0m 47s | Tests passed in hadoop-mapreduce-client-common. |
| {color:green}+1{color} | mapreduce tests |   5m 55s | Tests passed in hadoop-mapreduce-client-hs. |
| {color:red}-1{color} | mapreduce tests |  63m 51s | Tests failed in hadoop-mapreduce-client-jobclient. |
| | | 126m 41s | |
\\
\\
|| Reason || Tests ||
| Failed unit tests | hadoop.mapred.TestReduceFetch |
|   | hadoop.mapreduce.lib.output.TestJobOutputCommitter |
|   | hadoop.mapreduce.v2.TestSpeculativeExecution |
|   | hadoop.mapreduce.v2.TestMROldApiJobs |
|   | hadoop.mapred.TestClientRedirect |
|   | hadoop.mapreduce.v2.TestMRJobsWithProfiler |
|   | hadoop.mapreduce.TestMapReduceLazyOutput |
|   | hadoop.mapreduce.security.TestMRCredentials |
|   | hadoop.ipc.TestMRCJCSocketFactory |
|   | hadoop.conf.TestNoDefaultsJobConf |
|   | hadoop.mapreduce.TestChild |
|   | hadoop.mapred.TestYARNRunner |
|   | hadoop.mapreduce.v2.TestMiniMRProxyUser |
|   | hadoop.mapreduce.v2.TestUberAM |
|   | hadoop.mapreduce.v2.TestMRJobsWithHistoryService |
|   | hadoop.mapreduce.v2.TestMRAppWithCombiner |
|   | hadoop.mapreduce.v2.TestRMNMInfo |
|   | hadoop.mapreduce.v2.TestNonExistentJob |
|   | hadoop.mapreduce.security.TestBinaryTokenFile |
|   | hadoop.mapred.TestJobSysDirWithDFS |
|   | hadoop.mapreduce.TestLargeSort |
|   | hadoop.mapreduce.TestMRJobClient |
|   | hadoop.mapreduce.v2.TestMRJobs |
|   | hadoop.mapreduce.v2.TestMRAMWithNonNormalizedCapabilities |
|   | hadoop.mapred.TestClusterMRNotification |
|   | hadoop.mapred.TestNetworkedJob |
|   | hadoop.mapreduce.security.ssl.TestEncryptedShuffle |
|   | hadoop.mapred.TestSpecialCharactersInOutputPath |
| Timed out tests | org.apache.hadoop.mapred.TestMRIntermediateDataEncryption |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12766819/MAPREDUCE-6449.002.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / c7c36cb |
| Release Audit | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6069/artifact/patchprocess/patchReleaseAuditProblems.txt |
| checkstyle |  https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6069/artifact/patchprocess/diffcheckstylehadoop-mapreduce-client-common.txt |
| whitespace | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6069/artifact/patchprocess/whitespace.txt |
| hadoop-mapreduce-client-app test log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6069/artifact/patchprocess/testrun_hadoop-mapreduce-client-app.txt |
| hadoop-mapreduce-client-common test log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6069/artifact/patchprocess/testrun_hadoop-mapreduce-client-common.txt |
| hadoop-mapreduce-client-hs test log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6069/artifact/patchprocess/testrun_hadoop-mapreduce-client-hs.txt |
| hadoop-mapreduce-client-jobclient test log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6069/artifact/patchprocess/testrun_hadoop-mapreduce-client-jobclient.txt |
| Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6069/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf906.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6069/console |


This message was automatically generated., These passed locally for me except Profiler.
Will upload a patch with changes and testing locally., Is this patch breaking our MR rolling upgrade story that old MR job and new MR job can coexist in a single cluster (during upgrade)? At least, changes on hs part sounds like this. If so, I would be very concern on this.]