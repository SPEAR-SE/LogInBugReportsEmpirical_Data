[+1, Here we go., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12431766/MAPREDUCE-1429-20100120.txt
  against trunk revision 904397.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 19 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/417/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/417/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/417/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/417/console

This message is automatically generated., I wonder why these tests haven't been executed by Hudson before? They seem to be a normal kind of tests located within the larger 'mapred' test suite.

Also, I kinda don't like the idea of have a top level target for a very narrow subset of tests.  What current approach does, basically, is a creation of an exclusive subset from a larger set of tests and giving them a privilege of a test suite. Doesn't look right to me.

If they are so truly special then they need to be moved into a top-level test suite like 'unit' or 'mapred', aren't they?, Kos, these tests are a little different from usual tests in that they rely on a binary called task-controller which must be built and configured as a 'setuid' binary and permissions set to be owned by root. They also run tests as a different user from the one firing the ant test target. If you notice these tests take some special parameters - a path to a binary file and a user identity. HADOOP-5771 introduced these tests for the first time into the system.

In the ant build scripts, we only build the task-controller binary, but the step of making it a setuid is manually done in environments which use this feature. We did not know of a good way to automate this process on Hudson. And the tests do not make sense without this binary and/or user identity. They essentially exist to make sure the task-controller function works correctly in being able to run tasks as another user. 

Rather than completely ignoring automated testing because of these various limitations, we thought of still providing a facility by which atleast developers working on these features can have a way of testing them in an automated fashion, even if they mean, they have to run it 'specially'. Essentially, having something was better than having nothing.

All this said, we absolutely *hate* not being able to run these tests in the right way on Hudson. I would appreciate any help / suggestions you can offer to fix this issue., bq. If they are so truly special then they need to be moved into a top-level test suite like 'unit' or 'mapred', aren't they?
As Hemanth pointed out, they are indeed special tests which can be run only under special situations. So, I am OK for moving them to a top-level test suite like unit/mapred as per your suggestion. I'll ask for others' opinions too in this matter just to be sure., Can "ant test-task-controller" be added to this target ?]