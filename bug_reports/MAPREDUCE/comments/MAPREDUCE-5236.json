[Even in MR1, mapreduce.job.map|reduce.memory.mb aren't used to disable the limits - their cluster counter parts are. If you give a -1, when memory monitoring is enabled on the cluster, the job will fail.

Given that, I don't see what you is proposing., Sorry if my title/description were not very clear -  my understanding of the MR1 behavior around this isn't super strong.  Currently, JobConf#getMemoryForMapTask returns a default of DISABLED_MEMORY_LIMIT, which is -1.  I am basically proposing removing all references to that constant the code, as
1) after MAPREDUCE-5130, mapred-default.xml will set mapreduce.*.memory.mb to 1024, so getMemoryFor*Task should be consistent with this.
2) correct me if I'm wrong, but DISABLED_MEMORY_LIMIT doesn't make sense in the context of MR2, as there is no disabled memory limit mode., JobConf.DISABLED_MEMORY_LIMIT is unfortunately a public constant in MR1. Can't remove it.

We should definitely update the defaults, but that can be done in MAPREDUCE-5130 itself?

Overall, I see in general that if someone sets a -1 for these, the apps will no longer work in MR2. This is a compatibility breakage which we cannot fix. We can just document it on that documentation JIRA., I didn't mean to suggest removing the constant, just references to it within the code.

Sure, I can do this in MAPREDUCE-5130.]