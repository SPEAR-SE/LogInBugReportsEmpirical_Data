[Removing TaskUmbilicalProtocol from MapReducePolicyProvider doesn't work.

{code}
2012-06-08 21:32:32.527 java[9886:1903] Unable to load realm info from SCDynamicStore
Exception in thread "main" org.apache.hadoop.ipc.RemoteException: Protocol interface org.apache.hadoop.mapred.TaskUmbilicalProtocol is not known.
        at org.apache.hadoop.ipc.Client.call(Client.java:1070)
        at org.apache.hadoop.ipc.RPC$Invoker.invoke(RPC.java:225)
        at $Proxy1.getProtocolVersion(Unknown Source)
        at org.apache.hadoop.ipc.RPC.getProxy(RPC.java:396)
        at org.apache.hadoop.ipc.RPC.getProxy(RPC.java:370)
        at org.apache.hadoop.ipc.RPC.getProxy(RPC.java:420)
        at org.apache.hadoop.mapred.Child$1.run(Child.java:113)
        at org.apache.hadoop.mapred.Child$1.run(Child.java:110)
        at java.security.AccessController.doPrivileged(Native Method)
        at javax.security.auth.Subject.doAs(Subject.java:396)
        at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1132)
        at org.apache.hadoop.mapred.Child.main(Child.java:109)
{code}, I think removing its config from the docs/default policy files (if that works) or documenting that this should never be changed from '*' should be good enough. We should let it exist in the policy set (as its supposed to be a complete list).

The real problem is that users may change this/care about changing it, which is a wrong thing to do., This patch removes the acl property from hadoop-policy.xml and docs, but doesn't remove the property itself from code.
I wrote comment in MapReducePolicyProvider which registers TaskUmbilicalProtocol as a Service., Thanks Sho. Patch looks good, just one comment (about the comment):

{code}
+       * Since TaskUmbilicalProtocol always uses job ID as username, setting
+       * specific user/group to security.task.umbilical.protocol.acl doesn't
+       * work. This property was removed from hadoop-policy.xml in
+       * MAPREDUCE-4329 but the property itself still works because we cannot
+       * remove the following code.
{code}

I think the following may be better, what are your thoughts?

{code}
Since TaskUmbilicalProtocol uses the job ID (of the task that uses it, hence dynamic) as its identifier, due to the security implementation, setting specific users/groups in security.task.umbilical.protocol.acl has no effect other than breaking jobs. This should never be configured to anything apart from '*', and hence MAPREDUCE-4329 removes it from the docs but this line remains to not break the protocol provider.
{code}

Also, is this issue present with MR2 ACLs too Sho? Or let me know if you'd like me to investigate that instead. We can do with a supplementary patch (Trunk first, branch-1 afterwards)., Thanks for reviewing the patch!
Yeah your comment makes makes more sense, so I'll update the patch to replace the old comment to yours.


This property was set as deprecated in MAPREDUCE-2746 so I don't think there is nothing to do for trunk.

{code}
    Configuration.addDeprecation("security.task.umbilical.protocol.acl", 
        new String[] {
        MRJobConfig.MR_AM_SECURITY_SERVICE_AUTHORIZATION_TASK_UMBILICAL   
    });
{code}, replace the comment on MapReducePolicyProvider to Harsh's one., Patch looks good for branch-1. +1.

However, before we commit it in, I'd like to double-check trunk/branch-2 states. MAPREDUCE-2746 merely deprecated the old name into a new name, but please grep the new name and if you find it documented anywhere, please remove the same.

If none of the new style AM names aren't documented anywhere, then please file a new JIRA to have them documented for trunk/branch-2 (where AMs exist), and we can ensure there (in the description) to not document MR_AM_SECURITY_SERVICE_AUTHORIZATION_TASK_UMBILICAL specifically, for the same reason. Thereby we cover trunk as well as the 1.x maintenance branch.

Does this make sense Sho? Please let us know what you find! :), Thanks for advice, Harsh.
In trunk, MR_AM_SECURITY_SERVICE_AUTHORIZATION_TASK_UMBILICAL is used only in MRAMPolicyProvider class.

{code:java}
  private static final Service[] mapReduceApplicationMasterServices = 
      new Service[] {
    new Service(
        MRJobConfig.MR_AM_SECURITY_SERVICE_AUTHORIZATION_TASK_UMBILICAL,
        TaskUmbilicalProtocol.class),
    new Service(
        MRJobConfig.MR_AM_SECURITY_SERVICE_AUTHORIZATION_CLIENT,
        MRClientProtocolPB.class)
  };
{code}

I found the new property "security.job.task.protocol.acl" is documented in hadoop-policy.xml.
I'll file a new JIRA and do the same way with trunk. ]