[Attaching test log from trunk on the local machine., Attaching a patch the fixes the testcase issue. The bug was because of the stale cache entries in the FileManager. , This issue occurs only in testcases which involves restart. This will not happen in production/real clusters., I looked at the patch. I think it is more natural to simply reset the JobHistoryFileManager to a new instance in JobHistory.init(), instead of defining a new API now. But this apparently leads to failures in unrelated test cases - because JobHistory is enabled by default. My suggestion would be to disable it for test cases and enable only in init., Attaching a new patch incorporating Hemanth's comments. Result of test-patch
[exec] +1 overall.  
     [exec] 
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec] 
     [exec]     +1 tests included.  The patch appears to include 3 new or modified tests.
     [exec] 
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec] 
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec] 
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
     [exec] 
     [exec]     +1 release audit.  The applied patch does not increase the total number of release audit warnings.


Only TestLostTracker and TestMiniMRMapRedDebugScript failed on mapred. Both are known issues. TestStreamingExitStatus, TestStreamingStderr and TestQueueCapacities failed on contrib. These are also known issues., I just committed this. Thanks, Amar!, Attaching an example patch not to be committed to branch 0.20., Sorry attached the wrong patch. MAPREDUCE-683-v1.2.1-branch-0.20.patch is the correct version for branch 0.20. This is an example patch not to be committed., Integrated in Hadoop-Mapreduce-trunk #15 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-Mapreduce-trunk/15/])
    . Fixes an initialization problem in the JobHistory. The initialization of JobHistoryFilesManager is now done in the JobHistory.init call. Contributed by Amar Kamat.
]