[Going to try to see if I can fix this. Will update the jira shortly. , So this is interesting. The warning messages above are not causing the timeout. I observe that if I were to put a logging statement in TestMapReduceJobControl#waitTillAllFinished as
{code}
  private void waitTillAllFinished(JobControl theControl) {
    while (!theControl.allFinished()) {
      try {
        LOG.info("Sleeping..");
        Thread.sleep(1000);
      } catch (Exception e) {}
    }
  }

{code}

The tests pass for me. It appears that without this logging message, the job is stuck at map phase in the testJobControlWithKillJob test
{code}
2016-08-05 16:08:32,831 INFO  [pool-35-thread-1] mapred.LocalJobRunner (LocalJobRunner.java:run(353)) - Finishing task: attempt_local1592761666_0012_r_000000_0
2016-08-05 16:08:32,831 INFO  [Thread-498] mapred.LocalJobRunner (LocalJobRunner.java:runTasks(486)) - reduce task executor complete.
2016-08-05 16:08:38,421 INFO  [communication thread] mapred.LocalJobRunner (LocalJobRunner.java:statusUpdate(628)) - map > map
{code}

Do you see the same behavior [~ctrezzo] that all tests pass in TestMapReduceJobControl if you put a logging statement before the Thread.sleep in waitTillAllFinished? ]