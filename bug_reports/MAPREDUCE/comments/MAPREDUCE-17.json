[Since the operation of changing the priority for a completed job does not make sense, I propose this be stopped in the jobtracker itself, rather than having all listeners handle this case as required.

We could:
- change the priority, but not notify if the job is completed
- not change the priority at all, and treat it as a no-op. The problem with this is that the job client could treat this operation as successful, and lead to misleading results.
- throw an exception to indicate the operation is invalid.
- make setJobPriority return a boolean indicating Success/Failure. Unfortunately, would this be a backwards incompatible change ?

Also, we need to make the web UI handle this.

Probably throwing an exception is the most feasible, yet correct solution. Thoughts ?, +1 for throwing an exception. In the web-ui we should disable such invalid operations like 
- changing priority for completed jobs
- killing completed jobs (?), This isn't an issue anymore. I've not noticed it with branch-1, nor is it an issue with MR2.]