[When test case testUpdatedNodes runs before testUpdatedNodes ,then the test will fail.
They share the same properties in MyContainerAllocator,which are static., Attached a patch that removes the static variables in MyContainerAllocator, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12599025/MAPREDUCE-5427.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3961//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3961//console

This message is automatically generated., This patch still fails for me. To show this more clearly, I have re added this patch with testUpdatedNodes as the first test to force the build to run that test first on jdk6. This patch fails on both jdk6 and jdk7., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12613386/MAPREDUCE-5427.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app:

                  org.apache.hadoop.mapreduce.v2.app.TestRMContainerAllocator

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4191//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4191//console

This message is automatically generated., When a new patch is updated to address the test failures can the testUpdatedNodes be moved to be the first test like in the patch I added. This will prove that the test is truly working on jdk6 and jdk7., Now that MAPREDUCE-5632 is in, the tests pass in jdk7. It looks like this jira is more that just fixing this test for jdk7, though. Can this jira either be retitled or duplicated to MAPREDUCE-5632?, [~jeagles], I think this issue is duplicate of MAPREDUCE-5632, too.
Closing this issue.]