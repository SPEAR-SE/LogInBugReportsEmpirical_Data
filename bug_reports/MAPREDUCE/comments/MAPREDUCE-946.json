[+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12419279/M946-0.patch
  against trunk revision 813660.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/63/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/63/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/63/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/63/console

This message is automatically generated., Hong points out that this patch offers the max bytes consumed in compressed bytes to the LineReader, which tracks uncompressed bytes. If this is to work for splittable codecs per MAPREDUCE-830 and maintain progress as in MAPREDUCE-773, we'll need to come up with a better solution., Restored the previous behavior for uncompressed data and updated to use maxint for bytesconsumed from compressed streams. One could update LineReader to pass a Seekable to track bytes consumed from the underlying stream, which would fit the contract for HADOOP-3144 fairly well. However, this would only be effective when one read compressed, corrupt text data using a splittable codec. This should be sufficient., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12419496/M946-1.patch
  against trunk revision 814467.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/73/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/73/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/73/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/73/console

This message is automatically generated., The test failure, TestQueueManager.testUserDisabledACLForJobKill, is not related, patch looks good. +1., I committed this., Integrated in Hadoop-Mapreduce-trunk-Commit #43 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-Mapreduce-trunk-Commit/43/])
    . Fix a regression in LineRecordReader where the
maxBytesToConsume parameter is not set correctly.
, Integrated in Hadoop-Mapreduce-trunk #85 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-Mapreduce-trunk/85/])
    . Fix a regression in LineRecordReader where the
maxBytesToConsume parameter is not set correctly.
]