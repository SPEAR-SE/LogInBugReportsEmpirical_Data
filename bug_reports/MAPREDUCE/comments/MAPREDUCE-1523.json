[It's a {{Counters.getBlock}} failure.  I'm on the case., This patch solves a low-incidence [ 2 out of about 60,000 jobs, in one sample ] bug where certain unusually formed counters prevented the job finish time from being migrated into the nascent job trace.  

The patch contains:

two lines of code for the bug

another two lines which may cause more informative error messages when {{TraceBuilder}} runs off the rails for unanticipated reasons

44 lines of a new test in the rumen test case

a few K of test files, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12436884/mapreduce-1523--2010-02-24.patch
  against trunk revision 915223.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 13 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/482/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/482/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/482/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/482/console

This message is automatically generated., Could we (1) issue a warning when counter parsing throws an exception; (2) continue processing the event (all information except for the counters) instead of skip the event?, This addresses the issue of an unparseable counter string., Patch looks good to me. +1., resubmit to try hudson, Last hudson run was killed. Retry ..., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12437218/mapreduce-1523--2010-02-25.patch
  against trunk revision 918864.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 13 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/498/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/498/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/498/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/498/console

This message is automatically generated., I seem to have gotten zero test failures [ http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/498/testReport/ ] but got busted anyway.

Huh?
, If you check the console output, you can see that org.apache.hadoop.raid.TestRaidPurge (in contrib project raid) fails. Of course, this failure is unrelated to this patch and it is not clear whether other contrib tests are executed., The test failed when I ran it in a subversion checkout:
{noformat}
Testcase: testBracketedCounters took 0.184 sec
        Caused an ERROR
/mapred/src/test/tools/data/rumen/small-trace-test/counters-format-test-logs/.svn (No such file or directory)
java.io.FileNotFoundException: /mapred/src/test/tools/data/rumen/small-trace-test/counters-format-test-logs/.svn (No such file or directory)
        at java.io.FileInputStream.open(Native Method)
        at java.io.FileInputStream.<init>(FileInputStream.java:106)
        at org.apache.hadoop.fs.RawLocalFileSystem$TrackingFileInputStream.<init>(RawLocalFileSystem.java:70)
        at org.apache.hadoop.fs.RawLocalFileSystem$LocalFSFileInputStream.<init>(RawLocalFileSystem.java:106)
        at org.apache.hadoop.fs.RawLocalFileSystem.open(RawLocalFileSystem.java:176)
        at org.apache.hadoop.fs.ChecksumFileSystem$ChecksumFSInputChecker.<init>(ChecksumFileSystem.java:133)
        at org.apache.hadoop.fs.ChecksumFileSystem.open(ChecksumFileSystem.java:307)
        at org.apache.hadoop.fs.FileSystem.open(FileSystem.java:417)
        at org.apache.hadoop.tools.rumen.PossiblyDecompressedInputStream.<init>(PossiblyDecompressedInputStream.java:42)
        at org.apache.hadoop.tools.rumen.DefaultInputDemuxer.bindTo(DefaultInputDemuxer.java:42)
        at org.apache.hadoop.tools.rumen.TraceBuilder.run(TraceBuilder.java:204)
        at org.apache.hadoop.util.ToolRunner.run(ToolRunner.java:65)
        at org.apache.hadoop.util.ToolRunner.run(ToolRunner.java:79)
        at org.apache.hadoop.tools.rumen.TestRumenJobTraces.testBracketedCounters(TestRumenJobTraces.java:195)
{noformat}, The following code in TraceBuilder seems to be wrong - the if statement is useless.

{noformat}
      for (Path p : options.inputs) {
        InputDemuxer inputDemuxer = options.inputDemuxerClass.newInstance();

        inputDemuxer.bindTo(p, getConf());

        if (inputDemuxer != null) {
{noformat}

The above should probably be changed to the following:

{noformat}
      for (Path p : options.inputs) {
        InputDemuxer inputDemuxer = options.inputDemuxerClass.newInstance();

         try {
          inputDemuxer.bindTo(p, getConf());
        } catch (IOException e) {
          LOG.warn("Unable to bind file "+p+". Skipping...", e);
          continue;
        }
{noformat}
, Yes, the above comment of 22/Mar/10 11:46 PM is correct., The problem reported in the comment of 22/Mar/10 11:08 PM arises because {{svn}} creates an extra file in the directory, and we try to interpret that as a possible log.  This is unlikely to be new to the patch.  However, it obviously needs to be fixed., This fixes the issue noted 3/22/2010 ., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12439680/mapreduce-1523--2010-03-24.patch
  against trunk revision 926449.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 13 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/55/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/55/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/55/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/55/console

This message is automatically generated., Patch looks good. One minor nit:

For the following:
{noformat}
           for (int j = 0; j < statuses.length; ++j) {
             String name = statuses[j].getPath().getName();
 
-            if (!(name.length() >= 4 && ".crc".equals(name.substring(name
-                .length() - 4)))) {
+            if (!(name.endsWith(".crc") || name.startsWith("."))) {
               dirNames.add(name);
             }
           }
{noformat}

can we also skip directories in the loop? Namely changing the above code block to something like the following:
{noformat}
           for (FileStatus s : statuses) {
             if (s.isDir()) continue;
             String name = s.getPath().getName();
 
             if (!(name.endsWith(".crc") || name.startsWith("."))) {
               dirNames.add(name);
             }
           }
{noformat}, New patch incorporated the changes I suggested in the earlier comments., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12440318/mapreduce-1523--2010-03-31.patch
  against trunk revision 928104.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 13 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/77/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/77/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/77/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/77/console

This message is automatically generated., one minor nit, do you want to change the filenames of files in counter-format-test-logs ? They seem to have really long and ugly names in there.... , Those filenames are the kinds of filenames normally found in the directories from which we build traces.  There is some identifying information that I will remove promptly, which will make the names slightly shorter but still long and ugly., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12440421/mapreduce-1523--2010-03-31a-1612PDT.patch
  against trunk revision 929712.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 13 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/84/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/84/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/84/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/84/console

This message is automatically generated., The failed tests seem unrelated., Retry hudson., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12440421/mapreduce-1523--2010-03-31a-1612PDT.patch
  against trunk revision 930423.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 13 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/94/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/94/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/94/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/94/console

This message is automatically generated., +1 the patch looks good.., I just committed this. thanks dick... , Integrated in Hadoop-Mapreduce-trunk #280 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-Mapreduce-trunk/280/])
    MAPREDUCE-1523. Sometimes rumen trace generator fails to extract the job finish time. (dick king via mahadev)
, Integrated in Hadoop-Mapreduce-trunk-Commit #523 (See [https://hudson.apache.org/hudson/job/Hadoop-Mapreduce-trunk-Commit/523/])
    ]