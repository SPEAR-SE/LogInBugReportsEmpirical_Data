[Attaching patch fixing analysejobhistory.jsp to display analysis of reduce tasks of job even when number of maps is 0.

Please review and provide your comments., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12438308/1584.patch
  against trunk revision 920793.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/27/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/27/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/27/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/27/console

This message is automatically generated., Looking at the code, it looks like there are 3 states for the task : MAP, SHUFFLE and REDUCE. Also for each of these states, following is printed : Best. Avg and Last. Can we factor out the code? Something like
{code}
printTasks(out, TaskType, tasks[], comparator) {
newtasks[] = Arrays.sort(tasks, comparator);
out.print("<h1>Printing best performing " + TaskType.toString() + " task</h1>");
// print best
// print avg
// print worst
}
TaskType can be {MAP, SHUFFLE, REDUCE}
{code}

If yes, we can do something like 
{code}
if (maps.length > 0) {
  printTasks(MAP, maps, mapComp);
}
if (reduces.length > 0) {
  printTasks(SHUFFLE, reduces, shuffleComp);
  printTasks(REDUCE, reduces, redComp);
}
{code}

Ravi, can you please check if this can be done easily?, Canceling while Amar's comments are addressed]