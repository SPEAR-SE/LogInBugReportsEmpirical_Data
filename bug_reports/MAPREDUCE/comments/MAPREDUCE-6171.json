[[~dian.fu], Any reason why _yarn_ user is blacklisted from _DECRYPT_EEK_ calls ? My understanding was that only the HDFS admin ie. the _hdfs_ user only needs to be blacklisted, Hi [~asuresh], key based ACL in KMS is currently implemented as whitelist. So if I configure as follows in kms-acl.xml, 
{code}
 <property>
    <name>key.acl.testKey.DECRYPT_EEK</name>
    <value>testUser</value>
  </property>
{code}, then only {{testUser}} user can do {{DECRYPT_EEK}} call on key {{testKey}}. If I want {{yarn}} user can also do {{DECRYPT_EEK}} call on {{testKey}} key, I need add {{yarn}} user to the above configuration value manually. This means that if I want to configure key based ACL({{DECRYPT_EEK}}) for {{some key}}, I need also add {{yarn}} user to configuration {{DECRYPT_EEK}} for that key. As I don't know if {{yarn}} user will later need to do {{DECRYPT_EEK}} for this key, such as the described example in the description of this JIRA. This is inconvenient and tricky. On the other hand, fetch the files under an encryption zone with the user who submits the job is more straight forward., [~dian.fu], Thank you for clarifying

But I still feel this can be handled in KMS configuration itself with a small change in ACL logic. I have opened a new JIRA : [HADOOP-11341|https://issues.apache.org/jira/browse/HADOOP-11341] to address this.

As per that JIRA, you will now be able to place {{yarn}} user in {{default.key.acl.DECRYPT_EEK}}. That way, {{yarn}} user will be allowed to decrypt all keys. Let me know if that patch works for you..., Hi [~asuresh], if applying the patch in HADOOP-11341 and place {{yarn}} user in {{default.key.acl.DECRYPT_EEK}} in kms-acl.xml, it does can solve the issue reported here. Thanks for the patch., Duping this to HADOOP-11341 since Dian reports that it fixes this issue. Thanks again Dian/Arun for finding and working on this., Closing old tickets that are already part of a release.]