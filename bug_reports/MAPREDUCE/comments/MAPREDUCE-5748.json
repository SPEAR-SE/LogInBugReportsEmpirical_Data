[mapIds is already checked for null values:

      // line 472
     [code]
      if (mapIds == null || reduceQ == null || jobQ == null) {
        sendError(ctx, "Required param job, map and reduce", BAD_REQUEST);
        return;
      }
     [/code], Ok, sorry. My fault. You are right., I tried to fix it. Kindly check the attached patched file., +1 if tests pass.

Thanks, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12635637/0001-MAPREDUCE-5748-Potential-null-pointer-deference-in-S.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4451//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4451//console

This message is automatically generated., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:red}-1{color} | patch |   0m  0s | The patch command could not apply the patch during dryrun. |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12635637/0001-MAPREDUCE-5748-Potential-null-pointer-deference-in-S.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / f1a152c |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5540/console |


This message was automatically generated., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:red}-1{color} | patch |   0m  0s | The patch command could not apply the patch during dryrun. |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12635637/0001-MAPREDUCE-5748-Potential-null-pointer-deference-in-S.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / f1a152c |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5549/console |


This message was automatically generated., Rebased patch of [~hubaghdadi] so that it can be taken for commit during Bug Bash, The test doesn't fail without the fix. [~varun_saxena] - could you look into it please? , [~kasha], which test case are you talking about ? The test added passes in local. Not sure why Jenkins took the old patch. Resubmitting the patch again to kick Jenkins, \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  14m 34s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | javac |   7m 32s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 38s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:red}-1{color} | checkstyle |   0m 20s | The applied patch generated  1 new checkstyle issues (total was 60, now 61). |
| {color:red}-1{color} | whitespace |   0m  0s | The patch has 8  line(s) that end in whitespace. Use git apply --whitespace=fix. |
| {color:green}+1{color} | install |   1m 36s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 33s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   0m 36s | The patch does not introduce any new Findbugs (version 2.0.3) warnings. |
| {color:green}+1{color} | mapreduce tests |   0m 19s | Tests passed in hadoop-mapreduce-client-shuffle. |
| | |  35m 34s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12731626/MAPREDUCE-5748.02.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 02a4a22 |
| checkstyle |  https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5695/artifact/patchprocess/diffcheckstylehadoop-mapreduce-client-shuffle.txt |
| whitespace | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5695/artifact/patchprocess/whitespace.txt |
| hadoop-mapreduce-client-shuffle test log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5695/artifact/patchprocess/testrun_hadoop-mapreduce-client-shuffle.txt |
| Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5695/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf905.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5695/console |


This message was automatically generated., Fixed checkstyle issue, \\
\\
| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  14m 37s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | javac |   7m 31s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 31s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:green}+1{color} | checkstyle |   0m 20s | There were no new checkstyle issues. |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 37s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 33s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   0m 36s | The patch does not introduce any new Findbugs (version 2.0.3) warnings. |
| {color:green}+1{color} | mapreduce tests |   0m 19s | Tests passed in hadoop-mapreduce-client-shuffle. |
| | |  35m 30s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12731742/MAPREDUCE-5748.03.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / df36ad0 |
| hadoop-mapreduce-client-shuffle test log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5697/artifact/patchprocess/testrun_hadoop-mapreduce-client-shuffle.txt |
| Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5697/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf905.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5697/console |


This message was automatically generated., As Karthik mentioned in the above comment, newly added test passes without the src changes as well. This test is not verifying the code changes, can you have a look into the newly added test? , OK [~devaraj.k]..Will check this., [~devaraj.k], looked at it. I do not think null pointer dereference can occur i.e. the newly added code which checks against {{mapIds.size()}} being 0 is not possible. Even if map parameter is empty i.e. {{map=}},  {{String#split}} would still return an array of strings with one element(which will be empty string). So mapIds size would atleast be 1. 
[~ted_yu], thoughts on this ?

We can however add a basic check for empty parameters because empty parameter strings do not make any sense., Closing this as Not a Problem. Reopen if you disagree.]