[This looks like an MR1 issue, so moving it to MAPREDUCE., Changed the calculation to set it to 1 if the value of half of fair share is between 0 and 1.
Added a unit test that verifies fair share starvation preemption kicks in even when half of fair share is between 0 and 1., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12639286/MAPREDUCE-5822.001.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4493//console

This message is automatically generated., Ran test-contrib task in ant and they passed., Since we just want to check if the allocation is less than half the fair-share, how about multiplying the allocation (and demand) by 2 and comparing against the fair-share? That would make it all integer operations., As per karthik's suggestion. Thx much cleaner., ran tests under fairscheduler and they passed, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12639870/MAPREDUCE-5822.002.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4504//console

This message is automatically generated., Patch looks good to me. Nice test. Verified test fails without the fix, and passes with it.

+1, committing this now., Thanks for the contribution, Anubhav.

Just committed this to branch-1.]