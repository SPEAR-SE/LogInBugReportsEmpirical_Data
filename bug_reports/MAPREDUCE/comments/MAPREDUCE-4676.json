[To add a clean test, the cleanup-period needs to be configurable. Currently, it is set to 30 days. Adding MAPREDUCE-4643 as a dependency here for the same. , Should I put my patch on reviewboard?, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12546373/MAPREDUCE-4676.patch
  against trunk revision .

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/2872//console

This message is automatically generated., Retracted the patch - splitting it into a patch that adds the configuration option and a patch that adds the test., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12546398/MAPREDUCE-4676.patch
  against trunk revision .

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/2873//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12547056/MAPREDUCE-4676-trunk.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/2892//console

This message is automatically generated., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12547061/MAPREDUCE-4676-trunk.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/2893//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/2893//console

This message is automatically generated., CachedHistoryStorage.getFullJob(jobId) should synchronize on fileInfo from fileInfo.isDeleted() until loadJob(fileInfo) to avoid a race condition.

I'm not very convinced on modifying methods signature for testing purposes only. I'll think about an alternative while you work on the above comment., > I'm not very convinced on modifying methods signature for testing purposes only.

Use Guava's @VisibleForTesting when there's no obvious alternative., After looking at the code, it would quite difficult to mock things without a big refactoring. Thus, I agree with Tom, I'd suggest to create a method with the old signature and use that it the production code and have the method with the boolean param for testing with the @VisibleForTesting annotation., I should have two copies of the same method?  It's a pretty large method.  I could break the method into smaller parts and have the test call the parts that it needs?]