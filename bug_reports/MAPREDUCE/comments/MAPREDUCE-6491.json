[The code in question is in org.apache.hadoop.yarn.util.Apps#addToEnvironment:

{code}
  public static void addToEnvironment(
      Map<String, String> environment,
      String variable, String value, String classPathSeparator) {
    String val = environment.get(variable);
    if (val == null) {
      val = value;
    } else {
      val = val + classPathSeparator + value;
    }
    environment.put(StringInterner.weakIntern(variable), 
        StringInterner.weakIntern(val));
  }
{code}

This has very surprising results for any variable that isn't path-like.  For example, we ran across a MapReduce job that had something like this in its environment settings:

yarn.app.mapreduce.am.env='JAVA_HOME=/inst/jdk,JAVA_HOME=/inst/jdk'

Rather than ending up with JAVA_HOME=/inst/jdk as one would expect, JAVA_HOME instead was set to /inst/jdk:/inst/jdk which completely broke the job.

It seems to me that we should either use a whitelist of variables that support appending or never append settings.  For the latter case if users desire values to be appended then they can ask for it explicitly in their variable settings, like one of these forms depending upon whether they want client-side environment variable expansion or container-side environment variable expansion:
{noformat}
PATH='$PATH:/my/extra/path'
PATH='{{PATH}}:/my/extra/path'
{noformat}, Post-HADOOP-9902, I wonder if it would be worthwhile to have this configured at the shell level. i.e., Have something that both the Java code and the shell could could read that would list the semantics of each known/important shell var.  This way both could be smarter about overwrite vs. append vs. dedupe., [~jlowe] or [~aw] is this one still needed?  If it is, I'd like to take a crack at it.  I've had problems with the LD_LIBRARY_PATH in my own experiences, so if it's not fixed by something else in a later version I think it should be., Sure, feel free to post a proposed design/patch for it., I like the second idea where the user should explicitly append to the variable.  I think we can do this just by removing the code to append and just replace the entire variable every time we get an update.  I'm going to try this out, but figured I'd attach the code change in case I'm missing something obvious., It turns out my initial idea causes other problems with the application master, so I'm going up the call chain a bit to see what's going on.  Seems like it breaks org.apache.hadoop.mapreduce.v2.util.MRApps.java#addToEnvironment expectations at the moment, so maybe there's something else that needs to be done., This patch gets this working for the scenario outlined in the description with 2 JAVA_HOME specifications.  I made it so any variable set that doesn't match *PATH* would replace instead of append.  Any variable that matches *PATH* would continue to be appended to as before.  I tried it out but am wondering if there's a more complete way to do the white listing of appendable variables?  I could define them myself somewhere, but that doesn't seem any better than checking for the presence of the substring PATH.  Any thoughts here?

Also test wise, I'm looking for some unit test suite for env variables that I can add onto here.  Does one exist?  I'll look myself too, but just in case someone knows offhand., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12724836/YARN-2369-1.patch
  against trunk revision f8f5887.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common.

Test results: https://builds.apache.org/job/PreCommit-YARN-Build/7312//testReport/
Console output: https://builds.apache.org/job/PreCommit-YARN-Build/7312//console

This message is automatically generated., I don't see a unit test suite dealing with env variables already, so I'm not sure it makes sense to make a unit test for this.  I don't have a better solution than above, so I'm sticking with the submitted patch unless I hear otherwise in a review., New patch has a configurable whitelist for variables with append enabled as yarn.application.variables.with.append.  The existing unit tests are passing from TestMRApps.  Next up, a test to try to append to a variable not on the default white list and verify it gets replaced instead of appended to.  [~jlowe], any thoughts on things that are missing from this latest patch or problems with the design?, (!) The patch artifact directory on has been removed! 
This is a fatal error for test-patch.sh.  Aborting. 
Jenkins (node H4) information at https://builds.apache.org/job/PreCommit-YARN-Build/7559/ may provide some hints., Sounds like Jenkins test doesn't been kicked. Manually kick it out., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  14m 39s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:red}-1{color} | tests included |   0m  0s | The patch doesn't appear to include any new or modified tests.  Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. |
| {color:green}+1{color} | javac |   7m 31s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 34s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:red}-1{color} | checkstyle |   2m 21s | The applied patch generated  7 new checkstyle issues (total was 176, now 182). |
| {color:red}-1{color} | checkstyle |   3m  0s | The applied patch generated  12 new checkstyle issues (total was 211, now 223). |
| {color:red}-1{color} | whitespace |   0m  0s | The patch has 13  line(s) that end in whitespace. Use git apply --whitespace=fix. |
| {color:green}+1{color} | install |   1m 33s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 32s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   5m 22s | The patch does not introduce any new Findbugs (version 2.0.3) warnings. |
| {color:green}+1{color} | common tests |  22m 29s | Tests passed in hadoop-common. |
| {color:green}+1{color} | mapreduce tests |   0m 45s | Tests passed in hadoop-mapreduce-client-common. |
| {color:green}+1{color} | yarn tests |   0m 21s | Tests passed in hadoop-yarn-api. |
| {color:green}+1{color} | yarn tests |   1m 56s | Tests passed in hadoop-yarn-common. |
| | |  68m 23s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12729597/YARN-2369-2.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 3393461 |
| checkstyle |  https://builds.apache.org/job/PreCommit-YARN-Build/7574/artifact/patchprocess/diffcheckstylehadoop-common.txt https://builds.apache.org/job/PreCommit-YARN-Build/7574/artifact/patchprocess/diffcheckstylehadoop-yarn-api.txt |
| whitespace | https://builds.apache.org/job/PreCommit-YARN-Build/7574/artifact/patchprocess/whitespace.txt |
| hadoop-common test log | https://builds.apache.org/job/PreCommit-YARN-Build/7574/artifact/patchprocess/testrun_hadoop-common.txt |
| hadoop-mapreduce-client-common test log | https://builds.apache.org/job/PreCommit-YARN-Build/7574/artifact/patchprocess/testrun_hadoop-mapreduce-client-common.txt |
| hadoop-yarn-api test log | https://builds.apache.org/job/PreCommit-YARN-Build/7574/artifact/patchprocess/testrun_hadoop-yarn-api.txt |
| hadoop-yarn-common test log | https://builds.apache.org/job/PreCommit-YARN-Build/7574/artifact/patchprocess/testrun_hadoop-yarn-common.txt |
| Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/7574/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf907.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/7574/console |


This message was automatically generated., bq. any thoughts on things that are missing from this latest patch or problems with the design?

+1 to the approach of using a whitelist for appendable variables.  I think this is a reasonable approach to preserve compatibility, especially for admin vs. user variables like mapreduce.admin.user.env vs. mapred.child.env.  It can be important for admin path settings like LD_LIBRARY_PATH to not be completely smashed by user settings, as users love to forget to specify the path to native hadoop libs when specifying LD_LIBRARY_PATH for their own libs., Tx for working on this, Dustin!

Overall question: Do we expect this to be (1) a YARN NodeManager configuration property or (b) API driven for general apps and a specific config for MR jobs? The patch seems like it is taking a hybrid approach.

Review comments follow
 - Rename appendList to something like additiveEnvironmentVariablesList? If you agree, YARN_APPLICATION_VARIABLE_APPEND_LIST and YARN_APPLICATION_VARIABLE_APPEND_LIST_DEFAULT should also be renamed. Also put the DEFAULT_ prefix before the name, that is the convention as you can see from other properties.
 - Similarly application.variables.with.append -> additive-environment-variables?

Nits
 - Fix lines touched by the patch to not be longer than 80chars (as much as possible)., [~vinodkv] thanks for the feedback!  I would expect (b) for general apps as a specific config for MR jobs.  Should I put the config in MRConfig or MRJobConfig instead then?  I'll get the specific comments you have fixed once I have the test case in too.  I'll put them all in the next patch.  Thanks again!, Yes, we can simply have a config in MRJobConfig and let other app developers use the API directly., [~vinodkv] here's v3 of the patch.  I've got a new unit test in this one and I'm using MRJobConfig now for the property (now with a new and improved name).  I think I've trimmed down the lines, but if something looks misplaced please let me know.  Thanks!, \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  17m  3s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | javac |   9m  0s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |  12m 17s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 27s | The applied patch does not increase the total number of release audit warnings. |
| {color:red}-1{color} | checkstyle |   3m 18s | The applied patch generated  7 new checkstyle issues (total was 176, now 182). |
| {color:red}-1{color} | checkstyle |   3m 56s | The applied patch generated  15 new checkstyle issues (total was 509, now 524). |
| {color:red}-1{color} | checkstyle |   4m 32s | The applied patch generated  2 new checkstyle issues (total was 211, now 213). |
| {color:red}-1{color} | whitespace |   0m  1s | The patch has 14  line(s) that end in whitespace. Use git apply --whitespace=fix. |
| {color:green}+1{color} | install |   1m 58s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 36s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   8m  2s | The patch does not introduce any new Findbugs (version 2.0.3) warnings. |
| {color:green}+1{color} | common tests |  24m 45s | Tests passed in hadoop-common. |
| {color:green}+1{color} | mapreduce tests |   0m 46s | Tests passed in hadoop-mapreduce-client-common. |
| {color:green}+1{color} | mapreduce tests |   1m 36s | Tests passed in hadoop-mapreduce-client-core. |
| {color:green}+1{color} | yarn tests |   0m 23s | Tests passed in hadoop-yarn-api. |
| {color:green}+1{color} | yarn tests |   1m 57s | Tests passed in hadoop-yarn-common. |
| | |  83m 46s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12732347/YARN-2369-3.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / f24452d |
| checkstyle |  https://builds.apache.org/job/PreCommit-YARN-Build/7898/artifact/patchprocess/diffcheckstylehadoop-common.txt https://builds.apache.org/job/PreCommit-YARN-Build/7898/artifact/patchprocess/diffcheckstylehadoop-mapreduce-client-core.txt https://builds.apache.org/job/PreCommit-YARN-Build/7898/artifact/patchprocess/diffcheckstylehadoop-yarn-api.txt |
| whitespace | https://builds.apache.org/job/PreCommit-YARN-Build/7898/artifact/patchprocess/whitespace.txt |
| hadoop-common test log | https://builds.apache.org/job/PreCommit-YARN-Build/7898/artifact/patchprocess/testrun_hadoop-common.txt |
| hadoop-mapreduce-client-common test log | https://builds.apache.org/job/PreCommit-YARN-Build/7898/artifact/patchprocess/testrun_hadoop-mapreduce-client-common.txt |
| hadoop-mapreduce-client-core test log | https://builds.apache.org/job/PreCommit-YARN-Build/7898/artifact/patchprocess/testrun_hadoop-mapreduce-client-core.txt |
| hadoop-yarn-api test log | https://builds.apache.org/job/PreCommit-YARN-Build/7898/artifact/patchprocess/testrun_hadoop-yarn-api.txt |
| hadoop-yarn-common test log | https://builds.apache.org/job/PreCommit-YARN-Build/7898/artifact/patchprocess/testrun_hadoop-yarn-common.txt |
| Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/7898/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf904.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/7898/console |


This message was automatically generated., Checkstyle fixes, first try, \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  14m 37s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | javac |   7m 33s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 29s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:red}-1{color} | checkstyle |   2m 16s | The applied patch generated  2 new checkstyle issues (total was 176, now 177). |
| {color:red}-1{color} | checkstyle |   2m 49s | The applied patch generated  11 new checkstyle issues (total was 509, now 520). |
| {color:red}-1{color} | checkstyle |   3m 15s | The applied patch generated  11 new checkstyle issues (total was 7, now 18). |
| {color:red}-1{color} | whitespace |   0m  0s | The patch has 5  line(s) that end in whitespace. Use git apply --whitespace=fix. |
| {color:green}+1{color} | install |   1m 34s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 32s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   5m 15s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | common tests |  23m 22s | Tests passed in hadoop-common. |
| {color:green}+1{color} | mapreduce tests |   0m 45s | Tests passed in hadoop-mapreduce-client-common. |
| {color:green}+1{color} | mapreduce tests |   1m 36s | Tests passed in hadoop-mapreduce-client-core. |
| {color:green}+1{color} | yarn tests |   1m 56s | Tests passed in hadoop-yarn-common. |
| | |  70m 19s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12735207/YARN-2369-4.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / ada233b |
| checkstyle |  https://builds.apache.org/job/PreCommit-YARN-Build/8075/artifact/patchprocess/diffcheckstylehadoop-common.txt https://builds.apache.org/job/PreCommit-YARN-Build/8075/artifact/patchprocess/diffcheckstylehadoop-mapreduce-client-core.txt https://builds.apache.org/job/PreCommit-YARN-Build/8075/artifact/patchprocess/diffcheckstylehadoop-yarn-common.txt |
| whitespace | https://builds.apache.org/job/PreCommit-YARN-Build/8075/artifact/patchprocess/whitespace.txt |
| hadoop-common test log | https://builds.apache.org/job/PreCommit-YARN-Build/8075/artifact/patchprocess/testrun_hadoop-common.txt |
| hadoop-mapreduce-client-common test log | https://builds.apache.org/job/PreCommit-YARN-Build/8075/artifact/patchprocess/testrun_hadoop-mapreduce-client-common.txt |
| hadoop-mapreduce-client-core test log | https://builds.apache.org/job/PreCommit-YARN-Build/8075/artifact/patchprocess/testrun_hadoop-mapreduce-client-core.txt |
| hadoop-yarn-common test log | https://builds.apache.org/job/PreCommit-YARN-Build/8075/artifact/patchprocess/testrun_hadoop-yarn-common.txt |
| Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/8075/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf905.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/8075/console |


This message was automatically generated., Missed a couple of style items.  Submitting again., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  14m 30s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | javac |   7m 29s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 37s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 23s | The applied patch does not increase the total number of release audit warnings. |
| {color:red}-1{color} | checkstyle |   2m 11s | The applied patch generated  2 new checkstyle issues (total was 176, now 176). |
| {color:red}-1{color} | checkstyle |   2m 43s | The applied patch generated  8 new checkstyle issues (total was 509, now 517). |
| {color:red}-1{color} | checkstyle |   3m 10s | The applied patch generated  2 new checkstyle issues (total was 7, now 9). |
| {color:red}-1{color} | whitespace |   0m  0s | The patch has 7  line(s) that end in whitespace. Use git apply --whitespace=fix. |
| {color:green}+1{color} | install |   1m 33s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 32s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   5m 16s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | common tests |  23m 19s | Tests passed in hadoop-common. |
| {color:green}+1{color} | mapreduce tests |   0m 46s | Tests passed in hadoop-mapreduce-client-common. |
| {color:green}+1{color} | mapreduce tests |   1m 35s | Tests passed in hadoop-mapreduce-client-core. |
| {color:green}+1{color} | yarn tests |   1m 58s | Tests passed in hadoop-yarn-common. |
| | |  70m 13s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12735218/YARN-2369-5.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / ada233b |
| checkstyle |  https://builds.apache.org/job/PreCommit-YARN-Build/8076/artifact/patchprocess/diffcheckstylehadoop-common.txt https://builds.apache.org/job/PreCommit-YARN-Build/8076/artifact/patchprocess/diffcheckstylehadoop-mapreduce-client-core.txt https://builds.apache.org/job/PreCommit-YARN-Build/8076/artifact/patchprocess/diffcheckstylehadoop-yarn-common.txt |
| whitespace | https://builds.apache.org/job/PreCommit-YARN-Build/8076/artifact/patchprocess/whitespace.txt |
| hadoop-common test log | https://builds.apache.org/job/PreCommit-YARN-Build/8076/artifact/patchprocess/testrun_hadoop-common.txt |
| hadoop-mapreduce-client-common test log | https://builds.apache.org/job/PreCommit-YARN-Build/8076/artifact/patchprocess/testrun_hadoop-mapreduce-client-common.txt |
| hadoop-mapreduce-client-core test log | https://builds.apache.org/job/PreCommit-YARN-Build/8076/artifact/patchprocess/testrun_hadoop-mapreduce-client-core.txt |
| hadoop-yarn-common test log | https://builds.apache.org/job/PreCommit-YARN-Build/8076/artifact/patchprocess/testrun_hadoop-yarn-common.txt |
| Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/8076/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf906.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/8076/console |


This message was automatically generated., Fixed all the style bugs possible in v6 of the patch, so I don't see anything left to do here.  [~vinodkv] anything outstanding here in your mind?, \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  20m 12s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | javac |   7m 33s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 48s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 25s | The applied patch does not increase the total number of release audit warnings. |
| {color:red}-1{color} | checkstyle |   2m 14s | The applied patch generated  1 new checkstyle issues (total was 176, now 173). |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 34s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 33s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   5m 56s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | common tests |  22m  5s | Tests passed in hadoop-common. |
| {color:green}+1{color} | mapreduce tests |   0m 46s | Tests passed in hadoop-mapreduce-client-common. |
| {color:green}+1{color} | mapreduce tests |   1m 42s | Tests passed in hadoop-mapreduce-client-core. |
| {color:green}+1{color} | yarn tests |   1m 56s | Tests passed in hadoop-yarn-common. |
| | |  75m 45s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12742041/YARN-2369-6.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 8ef07f7 |
| checkstyle |  https://builds.apache.org/job/PreCommit-YARN-Build/8355/artifact/patchprocess/diffcheckstylehadoop-common.txt |
| hadoop-common test log | https://builds.apache.org/job/PreCommit-YARN-Build/8355/artifact/patchprocess/testrun_hadoop-common.txt |
| hadoop-mapreduce-client-common test log | https://builds.apache.org/job/PreCommit-YARN-Build/8355/artifact/patchprocess/testrun_hadoop-mapreduce-client-common.txt |
| hadoop-mapreduce-client-core test log | https://builds.apache.org/job/PreCommit-YARN-Build/8355/artifact/patchprocess/testrun_hadoop-mapreduce-client-core.txt |
| hadoop-yarn-common test log | https://builds.apache.org/job/PreCommit-YARN-Build/8355/artifact/patchprocess/testrun_hadoop-yarn-common.txt |
| Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/8355/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf903.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/8355/console |


This message was automatically generated., [~vinodkv] or [~jlowe] do you have any further feedback on this patch or am I missing something keeping this from getting submitted?  I appreciate your help so far :), Sorry for the long delay, and thanks for your patience.  Comments on the latest patch:

The newline after the Configuration.getTrimmedStringCollection was accidentally removed

There's a lot of unnecessary import changes in MRApps including conversions to using wildcard imports which are unrelated to this JIRA.

An entry for mapreduce.application.appendable.env.variables should be in mapred-default.xml with the appropriate default value and description for documentation purposes

"ClASSPATH" s/b "CLASSPATH" in the unit test comment

The unit test is making an implicit assumption that MRApps.setClasspath is setting the environment variable iteratively, which is not a requirement for how it performs semantically.  That could change in the future and break this test.  A better unit test would be one that explicitly verifies MRapps.addtoEnvironment behavior directly by checking for path append behavior on variables in the configured append list and overwrite behavior for variables not in that list.

I think the "public static final" should go back on the MRJobConfig additions to make it consistent with the rest of the file.  Checkstyle will complain, but for this instance I think consistency is better here given the benign nature of what it is complaining about.

Arrays.asList seems like simpler way to statically initialize the default value in MRJobConfig as there's no need for the anonymous class, serial version boilerplate, or invocation of add methods in a static block.

The "/**" line at the end of the MRJobConfig patch hunk had its indentation accidentally removed.

I'm wondering if we should move this JIRA to the MAPREDUCE project since that's where most of the changes are and where most of the user-visible functionality appears.  The extreme case is to file three separate for the three affected projects, but that seems extreme for this case.  Any opinions on that?, [~jlowe] thanks for all the input.  I'll clean this latest patch up based on these comments this week.

Happy to throw this in the MAPREDUCE project instead as well, since basically all the changes are in the MR client.  I don't think sub JIRAs would be necessary since it's a pretty small change on the YARN side, but I leave that to the project management experts.  I don't see any organizational problem keeping it all in one JIRA here.  , [~jlowe] sorry this took so long, I got sidetracked with other projects!  I think I've now included your suggestions in v7 of this patch and there are a couple of checkstyle warnings as you might have expected.  If there's anything missing from this please let me know :), \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  20m 42s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | javac |   7m 46s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |  10m  0s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 23s | The applied patch does not increase the total number of release audit warnings. |
| {color:red}-1{color} | checkstyle |   2m 19s | The applied patch generated  1 new checkstyle issues (total was 176, now 173). |
| {color:red}-1{color} | checkstyle |   2m 51s | The applied patch generated  4 new checkstyle issues (total was 517, now 521). |
| {color:green}+1{color} | whitespace |   0m  1s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 28s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 33s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   5m 57s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | common tests |  23m 35s | Tests passed in hadoop-common. |
| {color:green}+1{color} | mapreduce tests |   0m 47s | Tests passed in hadoop-mapreduce-client-common. |
| {color:green}+1{color} | mapreduce tests |   1m 46s | Tests passed in hadoop-mapreduce-client-core. |
| {color:green}+1{color} | yarn tests |   1m 57s | Tests passed in hadoop-yarn-common. |
| | |  78m 18s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12761348/YARN-2369-7.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 3a9c707 |
| checkstyle |  https://builds.apache.org/job/PreCommit-YARN-Build/9223/artifact/patchprocess/diffcheckstylehadoop-common.txt https://builds.apache.org/job/PreCommit-YARN-Build/9223/artifact/patchprocess/diffcheckstylehadoop-mapreduce-client-core.txt |
| hadoop-common test log | https://builds.apache.org/job/PreCommit-YARN-Build/9223/artifact/patchprocess/testrun_hadoop-common.txt |
| hadoop-mapreduce-client-common test log | https://builds.apache.org/job/PreCommit-YARN-Build/9223/artifact/patchprocess/testrun_hadoop-mapreduce-client-common.txt |
| hadoop-mapreduce-client-core test log | https://builds.apache.org/job/PreCommit-YARN-Build/9223/artifact/patchprocess/testrun_hadoop-mapreduce-client-core.txt |
| hadoop-yarn-common test log | https://builds.apache.org/job/PreCommit-YARN-Build/9223/artifact/patchprocess/testrun_hadoop-yarn-common.txt |
| Test Results | https://builds.apache.org/job/PreCommit-YARN-Build/9223/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf905.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-YARN-Build/9223/console |


This message was automatically generated., bq. sorry this took so long, I got sidetracked with other projects!
No worries, I know all too well how that goes.

Thanks for updating the patch.  It looks good overall with just a few nits left.

The javadoc for the new Configuration method mentions that it will return an empty Collection as a default then later says it returns the specified default value.

MRApps had several redundant imports added to it, and we should import java.util.Collection directly rather than java.util.* to get it.
, \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  21m  3s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | javac |   7m 55s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |  10m 26s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 24s | The applied patch does not increase the total number of release audit warnings. |
| {color:red}-1{color} | checkstyle |   2m 14s | The applied patch generated  1 new checkstyle issues (total was 176, now 173). |
| {color:red}-1{color} | checkstyle |   2m 51s | The applied patch generated  4 new checkstyle issues (total was 517, now 521). |
| {color:green}+1{color} | whitespace |   0m  1s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 30s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 34s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   6m 11s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | common tests |  23m  3s | Tests passed in hadoop-common. |
| {color:red}-1{color} | mapreduce tests |   0m 17s | Tests failed in hadoop-mapreduce-client-common. |
| {color:green}+1{color} | mapreduce tests |   1m 46s | Tests passed in hadoop-mapreduce-client-core. |
| {color:green}+1{color} | yarn tests |   1m 58s | Tests passed in hadoop-yarn-common. |
| | |  78m 29s | |
\\
\\
|| Reason || Tests ||
| Failed build | hadoop-mapreduce-client-common |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12761348/YARN-2369-7.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 71a81b6 |
| checkstyle |  https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6012/artifact/patchprocess/diffcheckstylehadoop-common.txt https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6012/artifact/patchprocess/diffcheckstylehadoop-mapreduce-client-core.txt |
| hadoop-common test log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6012/artifact/patchprocess/testrun_hadoop-common.txt |
| hadoop-mapreduce-client-common test log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6012/artifact/patchprocess/testrun_hadoop-mapreduce-client-common.txt |
| hadoop-mapreduce-client-core test log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6012/artifact/patchprocess/testrun_hadoop-mapreduce-client-core.txt |
| hadoop-yarn-common test log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6012/artifact/patchprocess/testrun_hadoop-yarn-common.txt |
| Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6012/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf904.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6012/console |


This message was automatically generated., [~jlowe] thanks for the quick review.  I've fixed those nits now in patch 8.  Please let me know if there's anything else I can do on this one!, Whoops, looks like my Configuration.java change didn't take in the patch I uploaded.  Let me fix that., Version 9 should be good to go., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  21m 25s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | javac |   8m  6s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |  10m 17s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 27s | The applied patch does not increase the total number of release audit warnings. |
| {color:red}-1{color} | checkstyle |   2m 23s | The applied patch generated  1 new checkstyle issues (total was 176, now 173). |
| {color:red}-1{color} | checkstyle |   2m 58s | The applied patch generated  4 new checkstyle issues (total was 517, now 521). |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 34s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 33s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   6m  5s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:red}-1{color} | common tests |  21m 52s | Tests failed in hadoop-common. |
| {color:green}+1{color} | mapreduce tests |   0m 48s | Tests passed in hadoop-mapreduce-client-common. |
| {color:green}+1{color} | mapreduce tests |   1m 49s | Tests passed in hadoop-mapreduce-client-core. |
| {color:green}+1{color} | yarn tests |   1m 59s | Tests passed in hadoop-yarn-common. |
| | |  78m 26s | |
\\
\\
|| Reason || Tests ||
| Timed out tests | org.apache.hadoop.ha.TestZKFailoverController |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12762236/YARN-2369-9.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / d1b9b85 |
| checkstyle |  https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6013/artifact/patchprocess/diffcheckstylehadoop-common.txt https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6013/artifact/patchprocess/diffcheckstylehadoop-mapreduce-client-core.txt |
| hadoop-common test log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6013/artifact/patchprocess/testrun_hadoop-common.txt |
| hadoop-mapreduce-client-common test log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6013/artifact/patchprocess/testrun_hadoop-mapreduce-client-common.txt |
| hadoop-mapreduce-client-core test log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6013/artifact/patchprocess/testrun_hadoop-mapreduce-client-core.txt |
| hadoop-yarn-common test log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6013/artifact/patchprocess/testrun_hadoop-yarn-common.txt |
| Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6013/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf902.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6013/console |


This message was automatically generated., Latest patch looks good to me, but when I try to apply it to branch-2 TestMRApps#testSetClasspathWithArchives starts failing.  Could you look into it?, [~jlowe], yes I'll check it out now.  I was building against trunk and it looked clean there.  Let me see how it goes with branch-2., [~jlowe] I've found the culprit.  I missed HADOOP_CLASSPATH in the default list of what should be appendable.  It turns out that HADOOP_CLASSPATH isn't used for that test on trunk.  I don't see any harm in having HADOOP_CLASSPATH in the default list for trunk and branch-2 both since it is a classpath variable after all.  Patch 10 passes for me on branch-2 and trunk.  Please let me know if you see any snags.  Thanks!, \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  28m 49s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | javac |   8m 57s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |  10m  3s | There were no new javadoc warning messages. |
| {color:red}-1{color} | release audit |   0m 16s | The applied patch generated 1 release audit warnings. |
| {color:red}-1{color} | checkstyle |   2m 46s | The applied patch generated  1 new checkstyle issues (total was 176, now 173). |
| {color:red}-1{color} | checkstyle |   3m 19s | The applied patch generated  4 new checkstyle issues (total was 517, now 521). |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 30s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 34s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   6m  0s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | common tests |   8m 13s | Tests passed in hadoop-common. |
| {color:green}+1{color} | mapreduce tests |   0m 46s | Tests passed in hadoop-mapreduce-client-common. |
| {color:green}+1{color} | mapreduce tests |   1m 47s | Tests passed in hadoop-mapreduce-client-core. |
| {color:green}+1{color} | yarn tests |   1m 58s | Tests passed in hadoop-yarn-common. |
| | |  72m 49s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12764933/YARN-2369-10.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 3b85bd7 |
| Release Audit | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6052/artifact/patchprocess/patchReleaseAuditProblems.txt |
| checkstyle |  https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6052/artifact/patchprocess/diffcheckstylehadoop-common.txt https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6052/artifact/patchprocess/diffcheckstylehadoop-mapreduce-client-core.txt |
| hadoop-common test log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6052/artifact/patchprocess/testrun_hadoop-common.txt |
| hadoop-mapreduce-client-common test log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6052/artifact/patchprocess/testrun_hadoop-mapreduce-client-common.txt |
| hadoop-mapreduce-client-core test log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6052/artifact/patchprocess/testrun_hadoop-mapreduce-client-core.txt |
| hadoop-yarn-common test log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6052/artifact/patchprocess/testrun_hadoop-yarn-common.txt |
| Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6052/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf903.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6052/console |


This message was automatically generated., bq.  I don't see any harm in having HADOOP_CLASSPATH in the default list for trunk and branch-2 both since it is a classpath variable after all.

HADOOP_\*, etc are generally not safe to append to from the job in trunk.  One of the big differences in trunk vs. branch-2 is that the default settings in hadoop-env.sh no longer ship with append. (i.e., HADOOP_FOO="settings" vs. HADOOP_FOO="$\{HADOOP_FOO\} settings")

This was intentional to fix the "doubling" problem seen in branch-2 and earlier when the shell scripts called themselves.  (e.g., echo $\{HADOOP_FOO\} results in "settings settings")

For tasks, there is another JIRA that is introducing HADOOP_TASK_CLASSPATH that will allow tasks to inject classpaths into trunk in a way that the hadoop shell commands will pick it up., [~aw] in the context of whether HADOOP_CLASSPATH should be a variable that is appended to (which is the default behavior for all environment variables prior to this JIRA), do you think it should not be appended to by default?  If that's the case, then we should be changing that test case for TestMRApps#testSetClasspathWithArchives to not rely on the appending behavior.  

Are you saying we should be adding HADOOP_TASK_CLASSPATH as an appendable variable by default and take out HADOOP_CLASSPATH from the list?, bq.  do you think it should not be appended to by default?

For trunk, it should not.  It is not guaranteed to work.  If a user puts in HADOOP_CLASSPATH="foo" in hadoop-env.sh (or .hadooprc, but that would be weird on a compute node) the shell commands will NOT honor the append.  (So, for example, a user runs a streaming job that uses hadoop fs to add/remove files from a bundled-with-the-job fs impl will fail.)

bq.  If that's the case, then we should be changing that test case for TestMRApps#testSetClasspathWithArchives to not rely on the appending behavior. 

I'll need to look at it, but probably.  It's probably working because HADOOP_CLASSPATH isn't set at all in default, out-of-the-box configuration.  On real systems, this has a chance to break.

bq. Are you saying we should be adding HADOOP_TASK_CLASSPATH as an appendable variable by default and take out HADOOP_CLASSPATH from the list?

We accidentally dropped from the hadoop-env.sh comments the description of HADOOP_CLASSPATH, but it's effectively the user interface to setting additional classpaths.  So what might make sense is to keep HADOOP_CLASSPATH for users here but it gets turned into HADOOP_TASK_CLASSPATH, which is meant for the app framework to work with.  Thoughts?

Of course, all of this is dependent upon MAPREDUCE-6458 getting finished too.  , That all makes pretty good sense to me.  I'd like to propose the following:
1) we keep HADOOP_CLASSPATH as appendable in branch-2 to keep things working as they are now on that branch
2) we open up a JIRA to take HADOOP_CLASSPATH off of the appendable list for trunk
3) in trunk, we keep HADOOP_CLASSPATH as a replaceable variable that gets turned into HADOOP_TASK_CLASSPATH for the app framework (not sure if this needs a JIRA)
, That proposal looks good.  If you want, take over and/or merge MAPREDUCE-6458 into this one and you can effectively knock all of those out in one shot.  The bash code part should be done with just a bit of massaging needed for the Java part. :), [~aw], I've opened up MAPREDUCE-6504 to basically be the same as this JIRA except the default value of mapreduce.application.appendable.env.variables will not include HADOOP_CLASSPATH and made it "a part of" this JIRA.  I'll upload the version modified for trunk there next.  

I think as I understood it, MAPREDUCE-6458 is needed before we should drop HADOOP_CLASSPATH from the default, so I noted that on MAPREDUCE-6504 as well.

I'm happy to take over MAPREDUCE-6458 and will assign to myself.  Probably I won't get to it this week, but I should be able to give it a go over the next couple of weeks.  [~jlowe] and [~aw], did I miss anything left for this JIRA?  I think all that's left is to send in the patch (assuming there's no other hiccups).  Thanks for the help!  , | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 21s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue} 2m 0s {color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 13m 59s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 7m 55s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 1m 48s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 2m 35s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 55s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 4m 6s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 2m 2s {color} | {color:green} trunk passed {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue} 0m 15s {color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 2m 5s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 8m 4s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 8m 4s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 2m 22s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 2m 27s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 1m 2s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green} 0m 2s {color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 4m 23s {color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} javadoc {color} | {color:red} 0m 28s {color} | {color:red} hadoop-yarn-project_hadoop-yarn_hadoop-yarn-common generated 9 new + 4575 unchanged - 0 fixed = 4584 total (was 4575) {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 7m 49s {color} | {color:green} hadoop-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 2m 21s {color} | {color:green} hadoop-yarn-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 2m 49s {color} | {color:green} hadoop-mapreduce-client-core in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 0m 52s {color} | {color:green} hadoop-mapreduce-client-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 23s {color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 73m 44s {color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:a9ad5d6 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12764933/YARN-2369-10.patch |
| JIRA Issue | MAPREDUCE-6491 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  xml  |
| uname | Linux 53164b51c79c 3.13.0-107-generic #154-Ubuntu SMP Tue Dec 20 09:57:27 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 063b513 |
| Default Java | 1.8.0_121 |
| findbugs | v3.0.0 |
| javadoc | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6929/artifact/patchprocess/diff-javadoc-javadoc-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-common.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6929/testReport/ |
| modules | C: hadoop-common-project/hadoop-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common U: . |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6929/console |
| Powered by | Apache Yetus 0.3.0   http://yetus.apache.org |


This message was automatically generated.

, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 29s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  2m  0s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 13m 34s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 14m 16s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 51s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  2m 21s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  4m  1s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  2m  3s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 16s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 43s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 10m 25s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 10m 25s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red}  2m  8s{color} | {color:red} root: The patch generated 6 new + 779 unchanged - 3 fixed = 785 total (was 782) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  2m 48s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  4m 39s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} javadoc {color} | {color:red}  0m 42s{color} | {color:red} hadoop-yarn-project_hadoop-yarn_hadoop-yarn-common generated 9 new + 4463 unchanged - 0 fixed = 4472 total (was 4463) {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red}  6m 54s{color} | {color:red} hadoop-common in the patch failed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  2m 36s{color} | {color:green} hadoop-yarn-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  2m 52s{color} | {color:green} hadoop-mapreduce-client-core in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  0m 55s{color} | {color:green} hadoop-mapreduce-client-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 32s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 80m 27s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.fs.shell.TestCopyFromLocal |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:71bbb86 |
| JIRA Issue | MAPREDUCE-6491 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12764933/YARN-2369-10.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  xml  |
| uname | Linux f6af473e7860 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 722ee84 |
| Default Java | 1.8.0_144 |
| findbugs | v3.1.0-RC1 |
| checkstyle | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7128/artifact/patchprocess/diff-checkstyle-root.txt |
| javadoc | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7128/artifact/patchprocess/diff-javadoc-javadoc-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-common.txt |
| unit | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7128/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7128/testReport/ |
| modules | C: hadoop-common-project/hadoop-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common U: . |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7128/console |
| Powered by | Apache Yetus 0.5.0   http://yetus.apache.org |


This message was automatically generated.

, I'd like to get this into 3.0.0-beta1 so the new behavior is part of the upcoming 3.x release.  As such I'm posting a minor update to the patch to address the javadoc and checkstyle issues.  The test failure appears to be unrelated and does not fail for me with the patch applied.

[~aw] is there anything else that needs to be done on this JIRA before it can go into trunk and branch-3.0?, a) DYLD_LIBRARY_PATH should be in the list
b)  As mentioned several times, this won't work if a job (e.g., streaming) calls the shell scripts with the default values., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 20s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  1m 37s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 13m 32s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 14m 36s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 52s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  2m 31s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  4m  9s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  2m  8s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 15s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 53s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 11m  8s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 11m  8s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red}  1m 54s{color} | {color:red} root: The patch generated 5 new + 779 unchanged - 3 fixed = 784 total (was 782) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  2m 33s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  4m 42s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 47s{color} | {color:green} hadoop-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 35s{color} | {color:green} hadoop-yarn-project_hadoop-yarn_hadoop-yarn-common generated 0 new + 4454 unchanged - 5 fixed = 4454 total (was 4459) {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 24s{color} | {color:green} hadoop-mapreduce-client-core in the patch passed. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 23s{color} | {color:green} hadoop-mapreduce-client-common in the patch passed. {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red}  7m  7s{color} | {color:red} hadoop-common in the patch failed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  2m 36s{color} | {color:green} hadoop-yarn-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  2m 43s{color} | {color:green} hadoop-mapreduce-client-core in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  0m 48s{color} | {color:green} hadoop-mapreduce-client-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 25s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 80m 15s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.fs.shell.TestCopyPreserveFlag |
|   | hadoop.fs.shell.TestCopyFromLocal |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:71bbb86 |
| JIRA Issue | MAPREDUCE-6491 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12887121/MAPREDUCE-6491.011.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  xml  |
| uname | Linux dc4e7d5331c4 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / b9465bb |
| Default Java | 1.8.0_144 |
| findbugs | v3.1.0-RC1 |
| checkstyle | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7133/artifact/patchprocess/diff-checkstyle-root.txt |
| unit | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7133/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7133/testReport/ |
| modules | C: hadoop-common-project/hadoop-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common U: . |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7133/console |
| Powered by | Apache Yetus 0.5.0   http://yetus.apache.org |


This message was automatically generated.

, Thanks for the review, Allen!

bq. DYLD_LIBRARY_PATH should be in the list

Ah, good catch.  Should it also include other dynamic linker related variables like the following?
DYLD_FALLBACK_LIBRARY_PATH
DYLD_VERSIONED_LIBRARY_PATH
DYLD_FRAMEWORK_PATH
DYLD_FALLBACK_FRAMEWORK_PATH
DYLD_VERSIONED_FRAMEWORK_PATH
LD_RUN_PATH

bq. As mentioned several times, this won't work if a job (e.g., streaming) calls the shell scripts with the default values.

Is this any different that what will happen without this patch?  If HADOOP_CLASSPATH shouldn't be appended to in trunk but the code _always_ appends new values to environment variables, then this seems like it's already broken whether this is fixed or not.  My apologies if I'm missing something.]