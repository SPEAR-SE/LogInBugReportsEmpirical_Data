[The test cases have two race conditions:

1. maxTimeWait = 10 is sometimes not enough to wait for the results we want. Actually we can remove, and make the loop run until we get the result we want, because the test case has timeout set.

2. No need to check the speculative attempt, as when the MR job gets finished, it may still not reach the final state.
{code}
app.waitForState(ta[1], TaskAttemptState.KILLED);
    boolean foundSpecMsg = false;
    for (String msg : ta[1].getDiagnostics()) {
      if (msg.contains("Speculation")) {
        foundSpecMsg = true;
        break;
      }
    }
    Assert.assertTrue("No speculation diagnostics!", foundSpecMsg);
{code}, Hi, [~zjshen].  This looks mostly good to me.  Similar to my comment earlier today on a different issue, I recommend using {{GenericTestUtils#waitFor}} with a max wait longer than the current 10 seconds.  This is preferrable over possibly leaving an infinite looping thread and relying on the JUnit timeout.  That could still leave a hung JVM running in the background after the whole test suite finishes.  This can disrupt subsequent test suites that try to reformat a mini-cluster using the same test data directory., [~cnauroth], thanks for suggesting {{GenericTestUtils#waitFor}}. It looks like a nice util method, however, it seems to be only used in HDFS test cases before. Anyway, I think it's good stuff to be adopted by MR and YARN as well. I updated the patch accordingly, though we may not be able to exhaustively updating elsewhere. , Thank you for addressing the feedback, Zhijie.  I tried patch v2, and I found that I was still getting intermittent test failures in my Windows VM.  Digging into it, the problem was that the MR app launched in {{testSpeculateSuccessfulWithoutUpdateEvents}} wasn't fully finished before {{testSepculateSuccessfulWithUpdateEvents}} started running a new MR app.  Then, we'd hit the file locking problem and the second test's job would fail.  To fix this, I've added 2 more lines to your patch that add {{app.waitForState(Service.STATE.STOPPED)}} at the end of each test.  This way, we make sure the MR app is really completely finished before trying to reuse the test data directory.  This version passes consistently for me on Mac and Windows.

I am +1 for this version of the patch, pending Jenkins, as long as you agree with the addition of those 2 lines of code.  Thanks for fixing this!, Thanks, Chris! The change makes sense to me., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12640364/MAPREDUCE-5827.3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4522//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4522//console

This message is automatically generated., SUCCESS: Integrated in Hadoop-trunk-Commit #5549 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/5549/])
MAPREDUCE-5827. TestSpeculativeExecutionWithMRApp fails. Contributed by Zhijie Shen. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1589223)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/v2/TestSpeculativeExecutionWithMRApp.java
, I committed this to trunk, branch-2 and branch-2.4.  Zhijie, thank you for the patch., SUCCESS: Integrated in Hadoop-trunk-Commit #5550 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/5550/])
MAPREDUCE-5827. Move attribution from 2.5.0 to 2.4.1 in CHANGES.txt. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1589238)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Yarn-trunk #549 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/549/])
MAPREDUCE-5827. Move attribution from 2.5.0 to 2.4.1 in CHANGES.txt. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1589238)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
MAPREDUCE-5827. TestSpeculativeExecutionWithMRApp fails. Contributed by Zhijie Shen. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1589223)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/v2/TestSpeculativeExecutionWithMRApp.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1766 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1766/])
MAPREDUCE-5827. Move attribution from 2.5.0 to 2.4.1 in CHANGES.txt. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1589238)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
MAPREDUCE-5827. TestSpeculativeExecutionWithMRApp fails. Contributed by Zhijie Shen. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1589223)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/v2/TestSpeculativeExecutionWithMRApp.java
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1741 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1741/])
MAPREDUCE-5827. Move attribution from 2.5.0 to 2.4.1 in CHANGES.txt. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1589238)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
MAPREDUCE-5827. TestSpeculativeExecutionWithMRApp fails. Contributed by Zhijie Shen. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1589223)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/v2/TestSpeculativeExecutionWithMRApp.java
]