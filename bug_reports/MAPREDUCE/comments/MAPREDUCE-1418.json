[The following functions in task-controller need modification:
- initialize_user
- initialize_task
- initialize_job
- initialize_distributed_cache_file

I will try and add unit tests in appropriate LinuxTaskController related test classes that call the taskcontroller with relative paths in arguments and verify the right error occurs., Attaching a patch implementing the changes.

Details:

- Fixed all the initialization calls (for user, job, task, log and distributed cache files) to call check_path_for_relative_components.
- Modified the way in which error code was tracked and handled in the methods so I could return a relevant error code when relative components are found.
- Added tests for all the conditions. For testing initialization of job, task and distributed cache, the approach followed is that we create the original directories and some dummy directories. Then we launch the task controller exe with some of the arguments tweaked to have relative components. We verify the call fails with an ExitCodeException with the right error code. For user and log initialization, I write a taskcontroller.cfg with relative paths in mapred local directories and hadoop.log.dir and verify the same failures. The latter approach is needed because passing relative paths in the command line arguments will not trigger the code path we want to exercise in these two cases.

All task-controller tests are passing with this patch, as also test-patch., I realized the patch is not complete. Some patch, most likely MAPREDUCE-927 introduced a new API, prepare_job_logs, that also needs to be guarded and tested., Had a quick look at the patch. prepare_task_logs method should return PREPARE_TASK_LOGS_FAILED if there is any failure, currently it returns PREPARE_JOB_LOGS_FAILED. prepare_job_logs method should return PREPARE_JOB_LOGS_FAILED if there is any failure., May be a related to this JIRA. I don't see any special validation done for the method kill_user_task() in task-controller. If an arbitrary user can launch task-controller, then he can kill any process by specifying the process-id as an argument and process-owner as another argument to task-controller. Can we somehow validate the arguments passed to kill_user_task() in task-controller ?, bq. I don't see any special validation done for the method kill_user_task() in task-controller.

This is a valid concern. We have checks in place to prevent this from happening, but those same checks actually protect against the relative paths as well. Hence, in a sense this JIRA will be moot given the same assumptions.

Since this JIRA is specifically focused on protecting against relative path usage, I propose we stick to the course taken by the patch, and fix the kill issue in a follow-up. Thoughts ?, The attached patch [MAPREDUCE-1418-y20s.patch] is a similar patch to the one against trunk for earlier versions of Hadoop. In this patch, I've addressed the problem related to validating relative paths in job log directory initialization, as well as Amareshwari's comment about return code in prepare_task_logs. The trunk patch will have similar changes. All LinuxTaskController tests pass with this patch. I would appreciate a review.

This patch is not for commit to Apache SVN.]