[Hi [~mostafae], how did you run into this exception?

I agree mapreduce.admin.user.env default value should be OS dependent.
But I think this is not a fix to the exception you saw.

LD_LIBRARY_PATH and PATH are used for OS functions to dynamically load libraries, i.e. they are for dlopen() and LoadLibrary() on Linux and Windows respectively.
On the other hand, the JNI libraries or DLLs load path is configured via the Java property -Djava.library.path, which is used by Java API System.loadLibrary (not to be confused with Windows LoadLibrary()).
I think the exception you saw was caused by the second API failure, i.e. native library is not loaded, instead of a foreign library missing on PATH.
To confirm, you could check if you have following warnings in your log entries prior to the exception.
{noformat}
Unable to load native-hadoop library for your platform...
{noformat}, Chuan: PATH and LD_LIBRARY_PATH can also be used for JNI libraries - it's not very well documented so I can't find a link off a casual search, but you can test this behavior yourself. Typically yes, we do use java.library.path, but in MR for some reason we rely on LD_LIBRARY_PATH not java.library.path, so it doesn't work (see MRJobConfig.java, DEFAULT_MAPRED_ADMIN_USER_ENV). I suspect you don't see this error because you just happen to have the native hadoop.dll in one of the directories in your PATH already, but if you don't have that then you'll run into this problem. Manually setting mapreduce.admin.user.env works around this problem in Windows, but we should fix that so by default it runs properly on Windows., I can take a look the issue since this seems related to MAPREDUCE-4374 -- both are setting environment variable for child tasks. We should probably move the JIRA to MAPREDUCE as I believe the configuration and implementation is under mapreduce project., For linux, use LD_LIBRARY_PATH=$HADOOP_COMMON_HOME/lib/native.

For windows, use
PATH = %PATH%;%HADOOP_HOME%\\bin., I agree with Chuan that the scope of this issue is MapReduce instead of YARN, so I've moved YARN-729 to MAPREDUCE-5451., [~yingdachen], thank you for the patch.  The intent of the change looks correct to me.  I'd like to have one more committer who works more on YARN look at it too before we commit.

Did you test on both Windows and Linux with native libraries?  We'll want to try both to make sure it still works on Linux.

A few minor cosmetic things:

# Please make sure lines are wrapped at 80 characters.
# I think the <description> in mapred-default.xml will be easier to read if we document the default values at the end instead of the beginning.  It would explain what the property does first, and then state the defaults.
, Address Chris's comments regarding the description in mapreduce-default.xml about this change.

For testing, the patch has been tested in local environment and on a real (Windows) cluster, the following steps were taken to verify the fix:

1) Remove our start-up command to add %HADOOP_HOME%\BIN as system environment variable in each cluster node at during (Windows) node setup.
2) Verify that without the patch, the mapreduce job (Pi) failed.
3) Deploy the bits with the patch (and again without setting system environment variable), verify that the mapreduce job (Pi) can now run to successful completion.

We haven't tested this on a real Linux cluster, but based on the nature of this patch, regression in Linux environment is logically not likely. , +1 from me.

It will be good to wrap line at 80 characters as Chris suggested., the new patch did wrap line at 80 chars, bq. Address Chris's comments regarding the description in mapreduce-default.xml about this change.

Sorry if this wasn't clear, but I was thinking that the full documentation would read better if it kept the current description and then added your new notes about the default value at the end, like this:

{code}
  <description>Expert: Additional execution environment entries for 
  map and reduce task processes. This is not an additive property.
  You must preserve the original value if you want your map and
  reduce tasks to have access to native libraries (compression, etc). 
  When this value is empty, the command to set execution 
  envrionment will be OS dependent: 
  For linux, use LD_LIBRARY_PATH=$HADOOP_COMMON_HOME/lib/native.
  For windows, use PATH = %PATH%;%HADOOP_HOME%\\bin.
  </description>
{code}

bq. the new patch did wrap line at 80 chars

In the newest attachment link, I still see lines longer than 80 characters in the 2 Java files.  Also, the test code has some indentation by 4 spaces, and the project's standard is 2 spaces for indentation.

Part of the problem may be tab characters in your patch.  I recommend configuring your IDE for 2-space indentation instead of tabs to make this easier.
, Chris, I see what you meant about the comments in the xml file. Regarding the wrapping/tabbing, I thought you were referring to the xml file as well. I have applied the new formatting rule in my Eclipse settings and attached a new patch for those cosmetic changes., We don't use tabs in Hadoop, Please replace them with spaces, indent two spaces per level, not four., Noted.
Thanks for pointing that out Vinod. MAPREDUCE-5451-3.patch has replaces all tabs with spaces.
, Yingda, thank you for taking care of the code formatting requests.  There were a few problems with version 3 of the patch.  There were a few missing imports and I think this was a typo:

{code}
      // Add the env variables passed by the admin
      Apps.KsetEnvFromInputString(environment, conf.get(
          MRJobConfig.MAPRED_ADMIN_USER_ENV,
          MRJobConfig.DEFAULT_MAPRED_ADMIN_USER_ENV));
{code}

I'm attaching version 4 of the patch, which adds the missing imports and removes the 'K' in front of "setEnv...".

I tested this patch on Mac, and the test failed with the following error.  Can you please investigate this and provide a new patch?  The same issue probably would repro in a Linux VM.

{code}
Running org.apache.hadoop.mapred.TestMiniMRChildTask
Tests run: 4, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 139.693 sec <<< FAILURE!
testMapRedExecutionEnv(org.apache.hadoop.mapred.TestMiniMRChildTask)  Time elapsed: 74 sec  <<< FAILURE!
java.lang.AssertionError: execution path does not include the hadoop lib location null/lib/native
	at org.junit.Assert.fail(Assert.java:93)
	at org.junit.Assert.assertTrue(Assert.java:43)
	at org.apache.hadoop.mapred.TestMiniMRChildTask.testMapRedExecutionEnv(TestMiniMRChildTask.java:396)
{code}
, update 08/19: We have decided to rewrite the unit tests and include testing in lower Mapper/Reducer layer. However currently this is blocked by the recent glob regression., patch 5 with new unit test that includes verification of execution path in child map task.

worked with Chuan and have it tested in both Windows and Linux environment., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12601282/MAPREDUCE-5451-5.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The following test timeouts occurred in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

org.apache.hadoop.mapreduce.v2.TestUberAM

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3980//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3980//console

This message is automatically generated., I have helped tested this patch on Windows and Linux. I think the current test case also provides better coverage because we are checking the environment variable in the child tasks. I have already +1 before.

bq. -1 core tests. org.apache.hadoop.mapreduce.v2.TestUberAM

This test case also has a timeout on my machine without the patch., Just one minor thing: can we please correct this typo in {{TestMiniMRChildTask}}?

{code}
      // Ensure execution PATH/LD_LIBRATY_PAH set up pointing to hadoop lib
{code}

+1 for the patch after that is addressed.

[~vinodkv], does it look good to you?
, address typo in patch 5., Thanks, Yingda.  I'm going to wait on one more reply from [~vinodkv], because he had reviewed an earlier version of the patch., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12605077/MAPREDUCE-5451-6.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

                  org.apache.hadoop.mapred.TestJobCounters
                  org.apache.hadoop.mapred.TestMiniMRClasspath
                  org.apache.hadoop.mapred.TestClusterMapReduceTestCase

                                      The following test timeouts occurred in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

org.apache.hadoop.mapred.TestJobCleanup

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4045//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4045//console

This message is automatically generated., I think the test failures are unrelated.  The Jenkins console output shows failure to create threads.  I don't see anything in this patch that would have caused increased thread allocation, so I think the Jenkins host is just in a bad state., All of these tests that failed on Jenkins passed on my local machine, so I think that confirms that the Jenkins host was in a bad state., We need this in Hbase since the unit tests that uses a MiniMRCluster fails to run any jobs because the native libraries cannot be referenced. 
{code}
Hbase unit tests with MR are failing right now:
2013-10-25 19:00:22,641 WARN  [ContainersLauncher #0] nodemanager.DefaultContainerExecutor(207): Exit code from container container_1382752780780_0001_01_000002 is : 137
Error: org.apache.hadoop.io.nativeio.NativeIO$Windows.access0(Ljava/lang/String;I)Z
{code}

However, why are we not using java.library.path from the parent job, and start the child tasks with it, instead of doing a platform dependent env-variable approach ?  , +1 for the patch.  I'm planning on committing this by end of day Monday, 11/4.  [~vinodkv], any last thoughts on the patch before I commit?

bq. However, why are we not using java.library.path from the parent job, and start the child tasks with it, instead of doing a platform dependent env-variable approach ?

This was discussed in YARN-1025, and the conclusion was that it's better to take advantage of the system loader's searching and error handling.  See the comments in that issue for more details., Thanks Chris. I've applied the patch v6, and unit test which uses miniMRCluster succeeds with that. My only concern is that the user now has to define HADOOP_COMMON_HOME as an env variable, even for running the unit tests., [~yingdachen], it looks like this patch needs a small rebase after MAPREDUCE-5442 changed {{MRJobConfig}}.  Could you please post an updated patch?  I'll be ready to commit it soon afterwards., re-based for patch 6., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12612209/MAPREDUCE-5451-7.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

                  org.apache.hadoop.mapred.TestMiniMRClasspath
                  org.apache.hadoop.fs.TestDFSIO
                  org.apache.hadoop.fs.TestFileSystem
                  org.apache.hadoop.mapred.TestJobName
                  org.apache.hadoop.mapred.TestJobCleanup
                  org.apache.hadoop.mapred.TestMiniMRWithDFSWithDistinctUsers

                                      The following test timeouts occurred in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

org.apache.hadoop.mapreduce.v2.TestUberAM
org.apache.hadoop.mapred.TestJobSysDirWithDFS
org.apache.hadoop.mapred.TestLazyOutput
org.apache.hadoop.mapred.TestReduceFetchFromPartialMem
org.apache.hadoop.mapred.TestReduceFetch
org.apache.hadoop.mapred.TestSpecialCharactersInOutputPath

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4178//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4178//console

This message is automatically generated., The test failures are more of the problems we've seen with leaks and resource exhaustion on the Jenkins machines.  I reran all of these tests locally, and they passed.  I intend to commit by tomorrow., SUCCESS: Integrated in Hadoop-trunk-Commit #4698 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/4698/])
MAPREDUCE-5451. MR uses LD_LIBRARY_PATH which doesn't mean anything in Windows. Contributed by Yingda Chen. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1539413)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/MRJobConfig.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/resources/mapred-default.xml
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapred/TestMiniMRChildTask.java
, I've committed this to trunk, branch-2, and branch-2.2.  Yingda, thank you for the patch.  Chuan, thank you for help with the code review., SUCCESS: Integrated in Hadoop-Yarn-trunk #385 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/385/])
MAPREDUCE-5451. MR uses LD_LIBRARY_PATH which doesn't mean anything in Windows. Contributed by Yingda Chen. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1539413)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/MRJobConfig.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/resources/mapred-default.xml
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapred/TestMiniMRChildTask.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1602 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1602/])
MAPREDUCE-5451. MR uses LD_LIBRARY_PATH which doesn't mean anything in Windows. Contributed by Yingda Chen. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1539413)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/MRJobConfig.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/resources/mapred-default.xml
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapred/TestMiniMRChildTask.java
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1576 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1576/])
MAPREDUCE-5451. MR uses LD_LIBRARY_PATH which doesn't mean anything in Windows. Contributed by Yingda Chen. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1539413)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/MRJobConfig.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/resources/mapred-default.xml
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapred/TestMiniMRChildTask.java
]