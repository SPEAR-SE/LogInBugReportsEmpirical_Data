[This is a patch for this issue.

We use the file system argument version.

This patch applies to a different release of hadoop, and must be forward ported before we submit it.  However, we do license it., Updated patch on Dick's behalf, fixed a couple of test-cases to use the new apis as opposed to the deprecated ones., Modified DistributedCache methods to add a file to classpath and cache. New parameter fs should be obtained within a doAs block. Forward port from 20.1xx

test-patch ran successfully
, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12444060/MAPREDUCE-1744.patch
  against trunk revision 944427.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/189/console

This message is automatically generated., Forward port from y-20.1xx 

Modified DistributedCache - Add file/archive to class path and to cache. New parameter  fs should be obtained within a doAs block

test-patch ran successfully, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12444582/h1744.patch
  against trunk revision 944427.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/192/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/192/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/192/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/192/console

This message is automatically generated., On the patch {{h1744.patch}} of 2010-05-15 04:36 PM , can we avoid broadening the exception signature of {{Job.add*ToClassPath(Path)}} by using {{FileSystem.get(conf)}} instead of {{cluster.getFileSystem()}} ?

-dk
, Dick am not sure if FileSystem.get(conf) is the right call in Job.java
this returns configured file system (from doc) 

cluster.getFilesystem() gets the FileSystem where job specific files are stored

Am checking further, amendment to existing patch, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12445391/mapred-1744.patch
  against trunk revision 947758.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/547/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/547/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/547/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/547/console

This message is automatically generated., * {{MRJobConfig}} literals- {{CLASSPATH_FILES}} and {{CLASSPATH_ARCHIVES}}- have been replaced with deprecated String literals
* The patch appears to cause {{TestCommandLineJobSubmission}} to fail
* The patch changes the separator to be {{System.getProperty("path.separator")}}, but the cache property is parsed using {{StringUtils::getStringCollection}} that is hard-coded to split on the {{,}} character., Changes since Chris's last review 

Removed deprecated string and restored correct Strings (bad copy paste from an earlier release caused this)

TestCommandLineJobSubmission failure is not probably related to this patch - it has random failures with or without this patch

Though it passed with patch 

    [junit] Running org.apache.hadoop.mapred.TestCommandLineJobSubmission
    [junit] Tests run: 1, Failures: 0, Errors: 0, Time elapsed: 56.406 sec

I get this error on a fresh checkout from trunk

testshell/ExternalMapReduce
java.lang.NoClassDefFoundError: testshell/ExternalMapReduce
        at org.apache.hadoop.mapred.TestCommandLineJobSubmission.testJobShell(TestCommandLineJobSubmission.java:122)
Caused by: java.lang.ClassNotFoundException: testshell.ExternalMapReduce
        at java.net.URLClassLoader$1.run(URLClassLoader.java:200)
        at java.security.AccessController.doPrivileged(Native Method)
        at java.net.URLClassLoader.findClass(URLClassLoader.java:188)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:307)
        at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:252)
        at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320)
, Patch revised, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12446558/mapred-1744-1.patch
  against trunk revision 952460.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/228/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/228/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/228/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/228/console

This message is automatically generated., Deprecate usage message in DistributedCache apis should not changed. Since the DistributedCache class itself is deprecated, DistributedCache.add*ToClassPath() methods should still have javadoc to use Job methods instead. , restored 
* @deprecated Use {@link Job#........

, Krishna, you have made an incompatible change to Job.add(File,Archive)ToClassPath by changing it's signature (exceptions).

Rather than calling cluster.getFileSystem you should use Path.getFileSystem(conf) on the path there., I feel this issue is going in a wrong direction. I think it should be solved by MAPREDUCE-950, by changing the signature of add*ToClassPath methods to take URI instead of Path, similar ro addCacheFile/Archive(). Then FS should be obtained from URI. 
Thoughts?, bq. [...] Then FS should be obtained from URI. 

But that is precisely what we need to fix, we cannot obtain the FS from the URI without a doAs block. Hence the need to pass in the FS., I take it back, Amareshwari's comment seems reasonable and looks like we are stuck with URI anyway for the 'symlink' feature. Sigh., I see that the issue is trying to solve add*ToClassPath apis, which obtain FileSystem in their implementation and construct a URI from it. If these apis take URI similar to other add/set apis, then I feel the issue no longer exists. Am i missing something?
I see these two apis as exceptions that do not take URIs.. and all the apis should follow similar signature as proposed in MAPREDUCE-950.
We take URI as argument for these apis because we interpret fragment portion of it as symlink and etc. 

So, still I feel MAPREDUCE-950 is the solution for this., After further discussion with Arun, it has been decided to put this on hold this until we reconcile with mapred-950 

Just for completeness, I modified the existing APIs, add*toClassPath(Path ...) to be compatible  
, this is an important fix for oozie

Fix this or address 923, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12446813/mapred-1744-3.patch
  against trunk revision 957283.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/264/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/264/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/264/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h4.grid.sp2.yahoo.net/264/console

This message is automatically generated., Shouldn't the Implementation of DistributedCache.addFileToClassPath(Path file, Configuration conf)  call file.getFileSystem(conf) instead of FileSystem.get(conf)? Similar change would be needed for DistributedCache.addArchiveToClassPath(Path archive, Configuration conf) also.

Also, javadoc should not have two usage messages for deprecation. That will be confusing for users,, Marking it as invalid 

should be addressed/fixed by

https://issues.apache.org/jira/browse/MAPREDUCE-950, Reopening to get this patch in trunk/branch-0.23, Patch ported to trunk & 0.23.

Patch cannot use original testcase as it is no more. Piggybacking in an existing testcase ., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12509328/MAPREDUCE-1744-0.23-trunk.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in .

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/1528//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/1528//console

This message is automatically generated., +1 for the trunk/0.23 patch., updated patch removing dup @deprecated and using file/archive.getFileSystem(conf) instead of FileSystem.get(conf)., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12509361/MAPREDUCE-1744-0.23-trunk.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in .

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/1531//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/1531//console

This message is automatically generated., This is a forward-port from branch-1, it is a stop gap until MAPREDUCE-950 is addressed., +1, reassigning to original author, I've just forward port it., Integrated in Hadoop-Common-trunk-Commit #1493 (See [https://builds.apache.org/job/Hadoop-Common-trunk-Commit/1493/])
    MAPREDUCE-1744. DistributedCache creates its own FileSytem instance when adding a file/archive to the path. (Dick King via tucu)

tucu : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1227238
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Job.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/DistributedCache.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/v2/TestMROldApiJobs.java
, Integrated in Hadoop-Hdfs-trunk-Commit #1565 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Commit/1565/])
    MAPREDUCE-1744. DistributedCache creates its own FileSytem instance when adding a file/archive to the path. (Dick King via tucu)

tucu : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1227238
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Job.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/DistributedCache.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/v2/TestMROldApiJobs.java
, Integrated in Hadoop-Mapreduce-trunk-Commit #1513 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Commit/1513/])
    MAPREDUCE-1744. DistributedCache creates its own FileSytem instance when adding a file/archive to the path. (Dick King via tucu)

tucu : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1227238
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Job.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/DistributedCache.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/v2/TestMROldApiJobs.java
, Does this need to go into the 23 branch as well ?, Integrated in Hadoop-Hdfs-trunk #916 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/916/])
    MAPREDUCE-1744. DistributedCache creates its own FileSytem instance when adding a file/archive to the path. (Dick King via tucu)

tucu : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1227238
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Job.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/DistributedCache.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/v2/TestMROldApiJobs.java
, Integrated in Hadoop-Mapreduce-trunk #949 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/949/])
    MAPREDUCE-1744. DistributedCache creates its own FileSytem instance when adding a file/archive to the path. (Dick King via tucu)

tucu : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1227238
Files : 
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Job.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/DistributedCache.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/v2/TestMROldApiJobs.java
, Just committed to branch-0.23 as well., Integrated in Hadoop-Hdfs-0.23-Commit #334 (See [https://builds.apache.org/job/Hadoop-Hdfs-0.23-Commit/334/])
    Merge -r 1227237:1227238 from trunk to branch. FIXES: MAPREDUCE-1744

tucu : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1227789
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Job.java
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/DistributedCache.java
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/v2/TestMROldApiJobs.java
, Integrated in Hadoop-Common-0.23-Commit #345 (See [https://builds.apache.org/job/Hadoop-Common-0.23-Commit/345/])
    Merge -r 1227237:1227238 from trunk to branch. FIXES: MAPREDUCE-1744

tucu : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1227789
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Job.java
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/DistributedCache.java
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/v2/TestMROldApiJobs.java
, Integrated in Hadoop-Mapreduce-0.23-Commit #356 (See [https://builds.apache.org/job/Hadoop-Mapreduce-0.23-Commit/356/])
    Merge -r 1227237:1227238 from trunk to branch. FIXES: MAPREDUCE-1744

tucu : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1227789
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Job.java
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/DistributedCache.java
* /hadoop/common/branches/branch-0.23/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/v2/TestMROldApiJobs.java
]