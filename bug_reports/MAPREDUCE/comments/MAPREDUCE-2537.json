[Output should end in .log, I tried to fix this pre yarn move to MR-279 branch. The problem is that we don't set -Dhadoop.root.logger for log4j.properties and it defaults to INFO,console which is redirected to .out.

I think just fixing the scripts to define hadoop.root.logger to as the same as yarn.root.logger and hadoop.log.dir, yarn.log.dir would fix the problem., Actually it is set in the shell script yarn/bin/yarn-daemon.sh, No unit tests, because this is a very simple shell script fix., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12480589/MR-2537-v1.patch
  against trunk revision 1127444.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/hudson/job/PreCommit-MAPREDUCE-Build/311//console

This message is automatically generated., This is actually not the right fix. It basically redirect stdout to .log which is not the right thing to do. Currently in our logs dir, you'll see both .log and .out files. You'll notice that .log rolls daily but .out doesn't.

Although yarn-daemon.sh defines YARN_ROOT_LOGGER as INFO,DRFA it's not being used to define -Dhadoop.root.logger which can then be picked up by log4j.properties. , OK I understand now.  The original description of the issue by the person who found it was very vague.

The issue is that yarn-$YARN_IDENT_STRING-$command-$HOSTNAME.out is where stdout of the command is placed, and that even though yarn.log.dir, yarn.log.file, and yarn.root.logger system properties are being set they are not being used by the log4j configuration.  The log4j configuration defaults to CONSOLE which outputs the logs to stdout which in turn goes to yarn-$YARN_IDENT_STRING-$command-$HOSTNAME.out.

The fix is to either update the log4j conf to use the yarn variants of these variables, or to set the hadoop equivalents of these variables instead.  I assume from your comment that we need to switch them over to use the hadoop variants.  Is this correct?, Exactly. Since the log4j.properties is from hadoop-common, adding yarn vars would not be kosher. I'd set both vars for posterity (yarn itself (non-mapreduce specific stuff) becomes a sub or top-level project).







, OK added in hadoop.root.logger hadoop.log.dir and hadoop.log.file to the -D options, +1, lgtm, assuming you have tested on at least a single node setup., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12480673/MR-2537-v2.patch
  against trunk revision 1128394.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/hudson/job/PreCommit-MAPREDUCE-Build/314//console

This message is automatically generated., Yes. I installed it on a single node cluster.  I launched both the nodemanager and the resource manager, and verified that the results were being logged to the proper files., I just committed this. thanks robert!]