[You are right.  We could improve this., Attaching patch that makes setup() to increment dirCount only if the dir doesn't exist at the destination in case of -update. Also wouldn't write the name of the dir to _distcp_src_files if the dir need not be created at destination., May be we still need to write the name of the dir to _distcp_src_files even if the dir need not be created at the destination because it may be needed for finalize() to update permissions ?, Attaching patch that applies after  MAPREDUCE-649, MAPREDUCE-654, MAPREDUCE-645, MAPREDUCE-664, MAPREDUCE-661 and MAPREDUCE-650 are committed., Testcase of MAPREDUCE-644 works only with the fix of MAPREDUCE-648., Hi Ravi, the patch cannot be applied to trunk., Attaching patch that applies to trunk., Patch looks mostly good.  Some comments below:

- Why throwing IOException in the following?
{code}
+    if (destFileSys.exists(dst)) {
+      if (!destFileSys.getFileStatus(dst).isDir()) {
+        throw new IOException("Failed to mkdirs: " + dst+" is a file.");
+      }
+      return true;
+    }
{code}
Also, destFileSys.exists(dst) can be omitted for saving an RPC.  We may have try-catch on destFileSys.getFileStatus(dst).  If dst does not exist, a FNFE will be caught.

- Could you rename skipfile to skippath since it includes dir after the patch?, In dirExists() method, if dst exists, it should be a dir. If dst is a file, throwing IOException.

Does the following look better ?

    FileStatus status = null;
    try {
      status = destFileSys.getFileStatus(dst);
    } catch (FileNotFoundException e) {
      return false;
    }
    if (!status.isDir()) {
      throw new IOException("Not a dir: " + dst+" is a file.");
    }
    return true;, > Does the following look better ?
Yes.  We may use org.apache.hadoop.fs.FileAlreadyExistsException for IOException("Not a dir: " + dst+" is a file.").

Also, please add a unit test., Attaching patch with the suggested changes. This patch also includes the code changes needed for MAPREDUCE-644. Testcase validates both MAPREDUCE-644 and MAPREDUCE-648.

Please review and provide your comments., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12419610/d_648_644.patch
  against trunk revision 815249.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/80/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/80/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/80/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Mapreduce-Patch-h6.grid.sp2.yahoo.net/80/console

This message is automatically generated., +1 the patch is perfect., Included the description of MAPREDUCE-644., I have committed this.  Thanks, Ravi!, Integrated in Hadoop-Mapreduce-trunk-Commit #40 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-Mapreduce-trunk-Commit/40/])
    . Fix two distcp bugs: (1) it should not launch a job if all src paths are directories, and (2) it does not skip copying when updating a single file.  Contributed by Ravi Gummadi
, Integrated in Hadoop-Mapreduce-trunk #84 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-Mapreduce-trunk/84/])
    . Fix two distcp bugs: (1) it should not launch a job if all src paths are directories, and (2) it does not skip copying when updating a single file.  Contributed by Ravi Gummadi
]