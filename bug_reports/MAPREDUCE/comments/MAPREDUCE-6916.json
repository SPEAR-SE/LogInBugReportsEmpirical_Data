[Slow or temporarily unavailable namenodes and slow datanodes are examples of things that can cause one or both of these tasks to execute more slowly than it should.  We want to run these tasks at a fixed rate, but we don't want to "catch up" any missing task executions if we fall behind since there's no point to that.  A better design would be to have the tasks that are actually scheduled with the executor to not do the full job but simply notify another thread that is responsible for doing the task.  That way the executor tasks are quick and should never back up in practice, and we won't end up double-executing if we notify more than once while the task is still running.
]