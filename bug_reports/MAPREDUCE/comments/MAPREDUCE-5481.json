[I noticed similar timeout on my system.  Although I am not familiar with the code related to this problem, here is what I noticed by looking at the test logs.  The Resource Manager comes up listening on a random free port in localhost like localhost:49170.  When a client(from the test) connects through RMProxy it is trying to resolve localhost through name server(not by local hosts file.)  This causes failure to connect to Resource Manager and after certain number of retries the test timeouts., [~jlowe][~masokan] I did the localtest, too. Looks like the client can connect to RM. NM do the heartbeat normally, container status looks fine. But after mapper tasks finish, the reducer task will never start. The more weird thing is that (the reducer task will never start) happens when we set number of reducer is 1, but if i increase the number of reducer to 2, the reducers can start to work...

I double checked the 2.1.beta, this test works, but it can not work on trunk. I am wondering if we made some changes after 2.1.beta to fail this test.

Any idea ?, Looks like the issue is on testSleepJob. I commented out the testSleepJob, we would not meet the timeout issue., bq. The more weird thing is that (the reducer task will never start) happens when we set number of reducer is 1, but if i increase the number of reducer to 2, the reducers can start to work... 

That is quite odd.  It definitely sounds like something changed recently that might be bad.

Unfortunately I'm not able to reproduce the problem on my machine and don't have access to the build machines.  TestUberAM never times out for me but rather fails when it tries to verify counter metrics at the end of the tests.

Can someone post the test output along with the AM log(s) from the minicluster logs directory?  Hopefully those can shed some light as to why the reducer isn't getting scheduled by the AM or if it is scheduled why the container isn't being allocated to run it., [~jlowe] Attached the AM log file, from the log, looks like the reducer has already been scheduler and is running. But the issue is when it requests MapCompletionEvents, it always gets zero, and stays in a loop which will cause the timeout., Caused by https://issues.apache.org/jira/browse/MAPREDUCE-434
ReduceTask will not have "local" anymore. The shuffle will use the shufflePlugin. And we can find that the shuffle will keep running until the timeout happens, This is not localized to just TestUberAM, as all uber jobs with reducers will currently hang like this.  This appears to have been broken when MAPREDUCE-434 was committed, since it changed the way reducers locate map outputs when not running via normal containers.

Updating the summary to better reflect the issue., Yes,  It is not only broke the TestUberAM. Under current trunk version, we can not even run the applications under the Uber mode., It looks like, after MAPREDUCE-434, allowing Uber jobs to use multiple reducers will be pretty straightforward.  Will post a patch soon that does so., Attached a patch that enables Uber AMs with multiple reducers., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12612714/MAPREDUCE-5481.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

                  org.apache.hadoop.mapreduce.v2.app.TestRMContainerAllocator
                  org.apache.hadoop.mapred.TestJobCleanup

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4183//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4183//console

This message is automatically generated., Kicking the build., I've seen the test failures form the previous build on other JIRAs and don't think they're related., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12613242/MAPREDUCE-5481.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

                  org.apache.hadoop.mapreduce.v2.app.TestRMContainerAllocator
                  org.apache.hadoop.mapred.TestJobCleanup

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4189//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4189//console

This message is automatically generated., LTGM, just a couple of questions/comments:

* LocalContainerLauncher.java (line:352 with patch), do we need to do something about it: {{ //relocalize();  // needed only if more than one reducer supported (is MAPREDUCE-434 fixed yet?)}}
* LocalContainerLauncher.java, the introduced {{localMapFiles Map}},  from a cursory look it does not seem to be accessed from multiple threads, if so it is fine. Else we need to use a sync/concurrent map., You're right, we do need to relocalize, attaching a patch that adds that in.

That's right that it's only accessed from a single thread., LGTM +1 after jenkins., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12613729/MAPREDUCE-5481-1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

                  org.apache.hadoop.mapreduce.v2.app.TestRMContainerAllocator
                  org.apache.hadoop.mapred.TestJobCleanup

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4198//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4198//console

This message is automatically generated., I just committed this.  Thanks Xuan and Jason for figuring this out and Alejandro for reviewing., SUCCESS: Integrated in Hadoop-trunk-Commit #4734 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/4734/])
MAPREDUCE-5481. Enable uber jobs to have multiple reducers (Sandy Ryza) (sandy: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1541844)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/LocalContainerLauncher.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/v2/TestUberAM.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk #391 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/391/])
MAPREDUCE-5481. Enable uber jobs to have multiple reducers (Sandy Ryza) (sandy: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1541844)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/LocalContainerLauncher.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/v2/TestUberAM.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1608 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1608/])
MAPREDUCE-5481. Enable uber jobs to have multiple reducers (Sandy Ryza) (sandy: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1541844)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/LocalContainerLauncher.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/v2/TestUberAM.java
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1582 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1582/])
MAPREDUCE-5481. Enable uber jobs to have multiple reducers (Sandy Ryza) (sandy: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1541844)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/LocalContainerLauncher.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/v2/TestUberAM.java
]