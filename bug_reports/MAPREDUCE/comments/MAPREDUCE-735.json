[Stack trace:
=========
java.lang.ArrayIndexOutOfBoundsException: 42
	at org.apache.hadoop.mapred.lib.KeyFieldBasedPartitioner.hashCode(KeyFieldBasedPartitioner.java:95)
	at org.apache.hadoop.mapred.lib.KeyFieldBasedPartitioner.getPartition(KeyFieldBasedPartitioner.java:87)
	at org.apache.hadoop.mapred.MapTask$MapOutputBuffer.collect(MapTask.java:801)
	at org.apache.hadoop.mapred.lib.IdentityMapper.map(IdentityMapper.java:40)
	at org.apache.hadoop.mapred.MapRunner.run(MapRunner.java:50)
	at org.apache.hadoop.mapred.MapTask.runOldMapper(MapTask.java:356)
	at org.apache.hadoop.mapred.MapTask.run(MapTask.java:305)
	at org.apache.hadoop.mapred.Child.main(Child.java:170)
, Lowering the priority since this bug would affect only those jobs that specify partitioning based on some key fields, and the generated keys doesn't have enough fields., Attaching a patch the solves the issue which I could reproduce. Testing in progress. , test-patch results 
[exec] +1 overall.  
     [exec] 
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec] 
     [exec]     +1 tests included.  The patch appears to include 6 new or modified tests.
     [exec] 
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec] 
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec] 
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
     [exec] 
     [exec]     +1 release audit.  The applied patch does not increase the total number of release audit warnings.

Running ant tests now., Looks like the file I intended to patch got moved to mapreduce. I forgot to add the testcase changes to mapreduce tests. Will upload a new patch for the same. , Attaching a patch that modifies the mapreduce testcase. Result of test-patch
[exec] +1 overall.  
     [exec] 
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec] 
     [exec]     +1 tests included.  The patch appears to include 6 new or modified tests.
     [exec] 
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec] 
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec] 
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
     [exec] 
     [exec]     +1 release audit.  The applied patch does not increase the total number of release audit warnings.

Ant tests in progress., Attaching a file with improved test-case. Added some more tests. Test-patch result 
[exec] +1 overall.  
     [exec] 
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec] 
     [exec]     +1 tests included.  The patch appears to include 6 new or modified tests.
     [exec] 
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec] 
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec] 
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
     [exec] 
     [exec]     +1 release audit.  The applied patch does not increase the total number of release audit warnings.
, mapred tests passed on my box. Contrib test passed except TestStreamingExitStatus (FAILED) and TestStreamingStderr (FAILED-timeout). 
, Tested the below scenarios and found them to PASS:

Input for some of the below scenarios for comparator:

Input :
3.6.2.8.9.12.43
3.6.1.8.9.12.43
3.6.6.8.9.12.43
3.6.5.8.9.12.43
3.6.8.8.9.12.43
3.6.8.8.9.12.43
3.6.2.8.9.12.43
3.6.9.8.9.12.43
3.6.3.8.9.12.43
3.6.1.8.9.12.43
3.6.5.8.9.12.43
3.6.2.8.9.12.43
3.6.1.8.9.12.43
1.7.8.6.3.2.4.7


1) bin/hadoop jar hadoop-dev-streaming.jar -Dmapred.reduce.tasks=1 -Dmapred.text.key.partitioner.options=-k1,1 -Dmapred.output.key.comparator.class=org.apache.hadoop.mapred.lib.KeyFieldBasedComparator -Dmap.output.key.field.separator=. -Dmapred.text.key.comparator.options=-k3,3nr -input input1/inputfile2  -mapper /bin/cat -reducer org.apache.hadoop.mapred.lib.IdentityReducer -output output2

- This sorts it numberically on third field and reverses it.

Output:
3.6.9.8.9.12.43
3.6.8.8.9.12.43
3.6.8.8.9.12.43
1.7.8.6.3.2.4.7
3.6.6.8.9.12.43
3.6.5.8.9.12.43
3.6.5.8.9.12.43
3.6.3.8.9.12.43
3.6.2.8.9.12.43
3.6.2.8.9.12.43
3.6.2.8.9.12.43
3.6.1.8.9.12.43
3.6.1.8.9.12.43
3.6.1.8.9.12.43


2) Sort it on third field, but make it as normal sort. No reverse.

bin/hadoop jar hadoop-dev-streaming.jar -Dmapred.reduce.tasks=1 -Dmapred.text.key.partitioner.options=-k1,1 -Dmapred.output.key.comparator.class=org.apache.hadoop.mapred.lib.KeyFieldBasedComparator -Dmap.output.key.field.separator=. -Dmapred.text.key.comparator.options=-k3,3n -input input1/inputfile2  -mapper /bin/cat -reducer=org.apache.hadoop.mapred.lib.IdentityReducer -output output3

3.6.1.8.9.12.43
3.6.1.8.9.12.43
3.6.1.8.9.12.43
3.6.2.8.9.12.43
3.6.2.8.9.12.43
3.6.2.8.9.12.43
3.6.3.8.9.12.43
3.6.5.8.9.12.43
3.6.5.8.9.12.43
3.6.6.8.9.12.43
3.6.8.8.9.12.43
3.6.8.8.9.12.43
1.7.8.6.3.2.4.7
3.6.9.8.9.12.43

3) sorting on 7th filed and then in that result sort on 3rd field.

bin/hadoop jar hadoop-dev-streaming.jar -Dmapred.reduce.tasks=1 -Dmapred.text.key.partitioner.options=-k1,1 -Dmapred.output.key.comparator.class=org.apache.hadoop.mapred.lib.KeyFieldBasedComparator -Dmap.output.key.field.separator=. -Dmapred.text.key.comparator.options="-k7,7nr -k3,3n" -input input1/inputfile2  -mapper /bin/cat -reducer org.apache.hadoop.mapred.lib.IdentityReducer -output output8

3.6.1.8.9.12.43
3.6.1.8.9.12.43
3.6.1.8.9.12.43
3.6.2.8.9.12.43
3.6.2.8.9.12.43
3.6.2.8.9.12.43
3.6.3.8.9.12.43
3.6.5.8.9.12.43
3.6.5.8.9.12.43
3.6.6.8.9.12.43
3.6.8.8.9.12.43
3.6.8.8.9.12.43
3.6.9.8.9.12.43
1.7.8.6.3.2.4.7


4) Look for global precedence going off in case of local preference.

bin/hadoop jar hadoop-dev-streaming.jar -Dmapred.reduce.tasks=1 -Dmapred.text.key.partitioner.options=-k1,1 -Dmapred.output.key.comparator.class=org.apache.hadoop.mapred.lib.KeyFieldBasedComparator -Dmap.output.key.field.separator=. -Dmapred.text.key.comparator.options="-n -k7,7r -k3,3n" -input input1/inputfile2  -mapper /bin/cat -reducer org.apache.hadoop.mapred.lib.IdentityReducer -output output15

3.6.1.8.9.12.43
3.6.1.8.9.12.43
3.6.1.8.9.12.43
3.6.2.8.9.12.43
3.6.2.8.9.12.43
3.6.2.8.9.12.43
3.6.3.8.9.12.43
3.6.5.8.9.12.43
3.6.5.8.9.12.43
3.6.6.8.9.12.43
3.6.8.8.9.12.43
3.6.8.8.9.12.43
3.6.9.8.9.12.43
1.7.8.6.3.2.4.7

5) For any special charecters like "^" and "p" and "letters" instead of numeric, it still sorts it.

6) Breaking the file into two also gives correct results. The output file divides itself into two parts and sorts in that correctly, even for huge sized files.This true for all the options.

7) If that column that is going to get sorted is "i", "^", or " ", or "" - null then  it shd put it in the end.

8) Introduction of "-Dnum.key.fields.for.partition=5" does not make any difference. Does not cause any exception.

Scenarios for  KeyFieldBasedPartitioner :

1) bin/hadoop jar hadoop-streaming.jar -Dmapred.output.key.comparator.class=org.apache.hadoop.mapred.lib.KeyFieldBasedComparator -Dmapred.text.key.comparator.options="-k5,5"  -Dmapred.reduce.tasks=2 -Dmapred.text.key.partitioner.options=-k5,5 -Dmap.output.key.field.separator=" " -input input1/inputfile2 -mapper org.apache.hadoop.mapred.lib.IdentityMapper -reducer org.apache.hadoop.mapred.lib.IdentityReducer -inputformat 
org.apache.hadoop.mapred.KeyValueTextInputFormat -partitioner org.apache.hadoop.mapred.lib.KeyFieldBasedPartitioner -output output8

It sorts text on the fifth field. I had also tested for other fields.

2) Even if "-Dnum.key.fields.for.partition=5" is added, still it works properly without exception..

3) If that column that is going to get sorted is "i", "^", or " ", or "" - It sorts it without giving any erros. 

Some points to note are:
1) If  "-rn" option is used anywhere instead of "-nr" , it does not work. This is as per requirement.
2) if -D options spelling is wrong it just gets ignored. A config file checker seems to be coming soon for all the commands.
3) The documentation for this is not present anywhere. Jira MAPREDUCE-753 is raised for it.
,  Some more testing on  these scenarios and found them to pass:

1) No exception should occur and job succeed when the -Dmapred.text.key.comparator.options is set to any negative value or any positive value which is out of bound of the data.
2) No exception should occur and job succeed when the seperator has strange values which are not present in the data.
3) Taking out some parameters and stil lsee if it does not get exception.
 , Attaching a patch that minimizes the code changes. Result of test-patch
[exec] +1 overall.  
     [exec] 
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec] 
     [exec]     +1 tests included.  The patch appears to include 6 new or modified tests.
     [exec] 
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec] 
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec] 
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
     [exec] 
     [exec]     +1 release audit.  The applied patch does not increase the total number of release audit warnings.

Testing in progress, Retested all the above scenarios and found it to pass., Attaching a patch the fixed the bug in the comparator also. Result of test-patch 
[exec] +1 overall.  
     [exec] 
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec] 
     [exec]     +1 tests included.  The patch appears to include 9 new or modified tests.
     [exec] 
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec] 
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec] 
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
     [exec] 
     [exec]     +1 release audit.  The applied patch does not increase the total number of release audit warnings.

Testing in progress., Attaching a patch that fixes/improves the testcase. Result of test-patch
 [exec] +1 overall.  
     [exec] 
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec] 
     [exec]     +1 tests included.  The patch appears to include 9 new or modified tests.
     [exec] 
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec] 
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec] 
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
     [exec] 
     [exec]     +1 release audit.  The applied patch does not increase the total number of release audit warnings.

Ant tests passed on my box., TestStreamingExitStatus failed on contrib., Attaching a patch for branch 0.20., I just committed this. Thanks, Amar!]