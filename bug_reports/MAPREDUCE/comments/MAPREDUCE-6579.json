[I found YARN-3946 is the cause by running git bisect. I'll look into the issue., After YARN-3946, {{JobClient.getFailureInfo()}} returns the application master's diagnostic message. Therefore the following code fails:
{code}
      assertEquals( runningJob.getFailureInfo(),"");
{code}
I'm thinking the code can be replaced by
{code}
    String diag = runningJob.getFailureInfo();
    assertTrue(diag.startsWith(AMState.ACTIVATED) || diag.startsWith(AMState.ASSIGNED));
{code}
because the code intend to verify that the job is not failing.

By the way, the following javadoc is no longer correct. I'll update this.
{code:title=o.a.h.mapreduce.JobStatus}
   /**
    * Gets any available info on the reason of failure of the job.
    * @return diagnostic information on why a job might have failed.
    */
   public synchronized String getFailureInfo() {
     return this.failureInfo;
   }
{code}

Furthermore, I'd like to add a new method {{getDiagnostics}} to {{JobStatus}} and deprecate {{getFailureInfo}} because the method name {{getFailureInfo}} is confusing. I'll create a separate jira for this., Attaching a patch to fix the test failure., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 0s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 8m 18s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 3m 15s {color} | {color:green} trunk passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 3m 21s {color} | {color:green} trunk passed with JDK v1.7.0_91 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 22s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 4s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 28s {color} | {color:green} trunk passed {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red} 1m 17s {color} | {color:red} hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core in trunk has 2 extant Findbugs warnings. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 36s {color} | {color:green} trunk passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 42s {color} | {color:green} trunk passed with JDK v1.7.0_91 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 50s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 3m 5s {color} | {color:green} the patch passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 3m 5s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 3m 18s {color} | {color:green} the patch passed with JDK v1.7.0_91 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 3m 18s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 23s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 59s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 24s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 1s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 56s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 32s {color} | {color:green} the patch passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 38s {color} | {color:green} the patch passed with JDK v1.7.0_91 {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 2m 2s {color} | {color:green} hadoop-mapreduce-client-core in the patch passed with JDK v1.8.0_66. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 118m 8s {color} | {color:red} hadoop-mapreduce-client-jobclient in the patch failed with JDK v1.8.0_66. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 2m 29s {color} | {color:green} hadoop-mapreduce-client-core in the patch passed with JDK v1.7.0_91. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 120m 56s {color} | {color:red} hadoop-mapreduce-client-jobclient in the patch failed with JDK v1.7.0_91. {color} |
| {color:red}-1{color} | {color:red} asflicense {color} | {color:red} 0m 27s {color} | {color:red} Patch generated 15 ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 277m 26s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_66 Failed junit tests | hadoop.mapreduce.v2.TestMRJobsWithProfiler |
| JDK v1.8.0_66 Timed out junit tests | org.apache.hadoop.mapreduce.lib.jobcontrol.TestMapReduceJobControl |
| JDK v1.7.0_91 Timed out junit tests | org.apache.hadoop.mapreduce.lib.jobcontrol.TestMapReduceJobControl |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:0ca8df7 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12780505/MAPREDUCE-6579.01.patch |
| JIRA Issue | MAPREDUCE-6579 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux cfaf476abd5f 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 96d8f1d |
| Default Java | 1.7.0_91 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_66 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_91 |
| findbugs | v3.0.0 |
| findbugs | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6253/artifact/patchprocess/branch-findbugs-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-core-warnings.html |
| unit | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6253/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient-jdk1.8.0_66.txt |
| unit | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6253/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient-jdk1.7.0_91.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6253/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient-jdk1.8.0_66.txt https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6253/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient-jdk1.7.0_91.txt |
| JDK v1.7.0_91  Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6253/testReport/ |
| asflicense | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6253/artifact/patchprocess/patch-asflicense-problems.txt |
| modules | C: hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient U: hadoop-mapreduce-project/hadoop-mapreduce-client |
| Max memory used | 76MB |
| Powered by | Apache Yetus 0.2.0-SNAPSHOT   http://yetus.apache.org |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6253/console |


This message was automatically generated.

, bq. -1	findbugs
The warnings are unrelated to the patch. I attached a patch to fix them in MAPREDUCE-6595.

bq. TestMapReduceJobControl timed out
This is unrelated to the patch because the patch modifies only the test code.

bq. -1	asflicense
This is also unrelated to the patch., Hi [~ajisakaa],
Overall the fix is fine but only one issue (not related to your modifications), arguments for the {{assertEquals}} are swapped (first is expected and seconds arg is actual). If you can accomodate in this patch then fine even if not its ok !

, Thanks [~Naganarasimha] for the comment. 
bq. arguments for the assertEquals are swapped
I've noticed that but kept as-is because this issue is to fix the test failure.

bq. If you can accomodate in this patch then fine even if not its ok !
Okay, I'll update the patch., 02 patch
* Corrected the order of the arguments for assertEquals method.
* Fixed the following useless assertions.
{code}
    assertEquals(info, info);
    assertEquals(info.toString(), info.toString());
{code}
* Implemented equals method in BlackListInfo class to pass the following assertion.
{code}
    assertEquals(info, info2);
{code}, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 0s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 7m 44s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 2m 56s {color} | {color:green} trunk passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 3m 5s {color} | {color:green} trunk passed with JDK v1.7.0_91 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 20s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 1s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 28s {color} | {color:green} trunk passed {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red} 1m 14s {color} | {color:red} hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core in trunk has 2 extant Findbugs warnings. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 35s {color} | {color:green} trunk passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 41s {color} | {color:green} trunk passed with JDK v1.7.0_91 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 52s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 3m 12s {color} | {color:green} the patch passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 3m 12s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 3m 30s {color} | {color:green} the patch passed with JDK v1.7.0_91 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 3m 30s {color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red} 0m 22s {color} | {color:red} Patch generated 1 new checkstyle issues in hadoop-mapreduce-project/hadoop-mapreduce-client (total was 91, now 92). {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 3s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 27s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red} 1m 24s {color} | {color:red} hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core introduced 1 new FindBugs issues. {color} |
| {color:red}-1{color} | {color:red} javadoc {color} | {color:red} 1m 27s {color} | {color:red} hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-core-jdk1.8.0_66 with JDK v1.8.0_66 generated 2 new issues (was 100, now 100). {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 34s {color} | {color:green} the patch passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 43s {color} | {color:green} the patch passed with JDK v1.7.0_91 {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 2m 14s {color} | {color:green} hadoop-mapreduce-client-core in the patch passed with JDK v1.8.0_66. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 103m 37s {color} | {color:red} hadoop-mapreduce-client-jobclient in the patch failed with JDK v1.8.0_66. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 2m 21s {color} | {color:green} hadoop-mapreduce-client-core in the patch passed with JDK v1.7.0_91. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 105m 15s {color} | {color:green} hadoop-mapreduce-client-jobclient in the patch passed with JDK v1.7.0_91. {color} |
| {color:red}-1{color} | {color:red} asflicense {color} | {color:red} 0m 28s {color} | {color:red} Patch generated 15 ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 246m 38s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| FindBugs | module:hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core |
|  |  org.apache.hadoop.mapred.ClusterStatus$BlackListInfo defines equals and uses Object.hashCode()  At ClusterStatus.java:Object.hashCode()  At ClusterStatus.java:[lines 177-185] |
| JDK v1.8.0_66 Failed junit tests | hadoop.mapreduce.v2.TestMRJobsWithProfiler |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:0ca8df7 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12780742/MAPREDUCE-6579.02.patch |
| JIRA Issue | MAPREDUCE-6579 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux 54262dea9ab4 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 2d16f40 |
| Default Java | 1.7.0_91 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_66 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_91 |
| findbugs | v3.0.0 |
| findbugs | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6255/artifact/patchprocess/branch-findbugs-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-core-warnings.html |
| checkstyle | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6255/artifact/patchprocess/diff-checkstyle-hadoop-mapreduce-project_hadoop-mapreduce-client.txt |
| findbugs | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6255/artifact/patchprocess/new-findbugs-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-core.html |
| javadoc | hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-core-jdk1.8.0_66: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6255/artifact/patchprocess/diff-javadoc-javadoc-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-core-jdk1.8.0_66.txt |
| unit | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6255/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient-jdk1.8.0_66.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6255/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient-jdk1.8.0_66.txt |
| JDK v1.7.0_91  Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6255/testReport/ |
| asflicense | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6255/artifact/patchprocess/patch-asflicense-problems.txt |
| modules | C: hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient U: hadoop-mapreduce-project/hadoop-mapreduce-client |
| Max memory used | 76MB |
| Powered by | Apache Yetus 0.2.0-SNAPSHOT   http://yetus.apache.org |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6255/console |


This message was automatically generated.

, [~ajisakaa], Thanks for considering and correcting the parameters other issues mentioned. Just that the check style and findbugs are same and are technical correction though it might not have any impact apart  from it other corrections are fine !

, 03 patch:
* Added hashCode method in BlackListInfo class.
* Added null check to equals method in BlackListInfo class., +1 Patch LGTM !, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 1s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 8m 18s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 3m 13s {color} | {color:green} trunk passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 3m 20s {color} | {color:green} trunk passed with JDK v1.7.0_91 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 23s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 6s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 30s {color} | {color:green} trunk passed {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red} 1m 18s {color} | {color:red} hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core in trunk has 2 extant Findbugs warnings. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 37s {color} | {color:green} trunk passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 41s {color} | {color:green} trunk passed with JDK v1.7.0_91 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 50s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 3m 7s {color} | {color:green} the patch passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 3m 7s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 3m 18s {color} | {color:green} the patch passed with JDK v1.7.0_91 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 3m 18s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 21s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 1s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 24s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 55s {color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} javadoc {color} | {color:red} 1m 22s {color} | {color:red} hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-core-jdk1.8.0_66 with JDK v1.8.0_66 generated 2 new issues (was 100, now 100). {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 32s {color} | {color:green} the patch passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 38s {color} | {color:green} the patch passed with JDK v1.7.0_91 {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 2m 3s {color} | {color:green} hadoop-mapreduce-client-core in the patch passed with JDK v1.8.0_66. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 107m 16s {color} | {color:red} hadoop-mapreduce-client-jobclient in the patch failed with JDK v1.8.0_66. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 2m 28s {color} | {color:green} hadoop-mapreduce-client-core in the patch passed with JDK v1.7.0_91. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 104m 32s {color} | {color:green} hadoop-mapreduce-client-jobclient in the patch passed with JDK v1.7.0_91. {color} |
| {color:red}-1{color} | {color:red} asflicense {color} | {color:red} 0m 28s {color} | {color:red} Patch generated 15 ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 250m 12s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_66 Failed junit tests | hadoop.mapred.TestLocalMRNotification |
|   | hadoop.mapreduce.v2.TestMRJobsWithProfiler |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:0ca8df7 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12780898/MAPREDUCE-6579.03.patch |
| JIRA Issue | MAPREDUCE-6579 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux 7e19fbc6f995 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 791c163 |
| Default Java | 1.7.0_91 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_66 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_91 |
| findbugs | v3.0.0 |
| findbugs | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6256/artifact/patchprocess/branch-findbugs-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-core-warnings.html |
| javadoc | hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-core-jdk1.8.0_66: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6256/artifact/patchprocess/diff-javadoc-javadoc-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-core-jdk1.8.0_66.txt |
| unit | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6256/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient-jdk1.8.0_66.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6256/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient-jdk1.8.0_66.txt |
| JDK v1.7.0_91  Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6256/testReport/ |
| asflicense | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6256/artifact/patchprocess/patch-asflicense-problems.txt |
| modules | C: hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient U: hadoop-mapreduce-project/hadoop-mapreduce-client |
| Max memory used | 76MB |
| Powered by | Apache Yetus 0.2.0-SNAPSHOT   http://yetus.apache.org |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6256/console |


This message was automatically generated.

, seems like tests and findbugs are unrelated to the modifications?, bq. seems like tests and findbugs are unrelated to the modifications?
Yes. Thank you for your review!, Thanks [~ajisakaa]/[~Naganarasimha],

A couple of comments:
- Do you think we should rename JobStatus#getFailureInfo? Diagnostic message doesn't always means failure, JobStatus's InterfaceStability marked to "Evolving", we can update it.
- I would suggest not compare the diagnostic info, it is evolving, only human is supposed to read this message and we have test in YARN already.
{code}
175	      String diag = runningJob.getFailureInfo();
176	      assertTrue("The state of the ApplicationMaster should be activated," +
177	          "assigned, or launched.",
178	          diag.contains(AMState.ACTIVATED.getDiagnosticMessage()) ||
179	          diag.contains(AMState.ASSIGNED.getDiagnosticMessage()) ||
180	          diag.contains(AMState.LAUNCHED.getDiagnosticMessage()));
{code} 

Thoughts?, bq. Do you think we should rename JobStatus#getFailureInfo? Diagnostic message doesn't always means failure, JobStatus's InterfaceStability marked to "Evolving", we can update it.
I don't think we should rename {{JobStatus#getFailureInfo}} because Apache Tez is overriding this method.
https://github.com/apache/tez/blob/master/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/client/DAGJobStatus.java
{code}
  @Override
  public synchronized String getFailureInfo() {
    return Joiner.on(". ").join(dagStatus.getDiagnostics());
  }
{code}
Insteadly, we can deprecate the method in trunk/branch-2 and remove it in trunk. I'm thinking it should be done in a separate jira.
bq. I would suggest not compare the diagnostic info, it is evolving, only human is supposed to read this message and we have test in YARN already.
Agree. I'll remove the assertion., Thanks [~wangda] for the comments,
bq, Do you think we should rename JobStatus#getFailureInfo? 
Yes & No, *yes* because we are setting diaginfo now even if there is no failure so it makes sense to update the name but *no* because this method was introduced though 4.5 yrs ago as part of MAPREDUCE-2952 still the interface is kept as evolving, so as [~ajisakaa] mentioned many other applications like  tez might be using it. Even i would support this modification to be done in trunk.

bq. I would suggest not compare the diagnostic info, it is evolving, only human is supposed to read this message and we have test in YARN already.
I am ok even if its not there, here were just  comparing there is no error state information so it might be prone to have test case failure issues in future if new states are added .

Thanks [~ajisakaa] for the new Patch, it LGTM !, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 0s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue} 1m 37s {color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 8m 10s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 2m 3s {color} | {color:green} trunk passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 2m 8s {color} | {color:green} trunk passed with JDK v1.7.0_91 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 28s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 8s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 31s {color} | {color:green} trunk passed {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red} 1m 19s {color} | {color:red} hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core in trunk has 2 extant Findbugs warnings. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 46s {color} | {color:green} trunk passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 47s {color} | {color:green} trunk passed with JDK v1.7.0_91 {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue} 0m 19s {color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 55s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 1m 50s {color} | {color:green} the patch passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 1m 50s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 1m 57s {color} | {color:green} the patch passed with JDK v1.7.0_91 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 1m 57s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 25s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 1s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 26s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 13s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 36s {color} | {color:green} the patch passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 39s {color} | {color:green} the patch passed with JDK v1.7.0_91 {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 2m 9s {color} | {color:green} hadoop-mapreduce-client-core in the patch passed with JDK v1.8.0_66. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 101m 24s {color} | {color:red} hadoop-mapreduce-client-jobclient in the patch failed with JDK v1.8.0_66. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 2m 16s {color} | {color:red} hadoop-mapreduce-client-core in the patch failed with JDK v1.7.0_91. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 105m 19s {color} | {color:green} hadoop-mapreduce-client-jobclient in the patch passed with JDK v1.7.0_91. {color} |
| {color:red}-1{color} | {color:red} asflicense {color} | {color:red} 0m 27s {color} | {color:red} Patch generated 15 ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 243m 8s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_66 Failed junit tests | hadoop.mapreduce.v2.TestMRJobsWithProfiler |
| JDK v1.7.0_91 Failed junit tests | hadoop.mapreduce.tools.TestCLI |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:0ca8df7 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12784906/MAPREDUCE-6579.04.patch |
| JIRA Issue | MAPREDUCE-6579 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux 99df4c28a24e 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 662e17b |
| Default Java | 1.7.0_91 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_66 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_91 |
| findbugs | v3.0.0 |
| findbugs | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6292/artifact/patchprocess/branch-findbugs-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-core-warnings.html |
| unit | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6292/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient-jdk1.8.0_66.txt |
| unit | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6292/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-core-jdk1.7.0_91.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6292/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient-jdk1.8.0_66.txt https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6292/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-core-jdk1.7.0_91.txt |
| JDK v1.7.0_91  Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6292/testReport/ |
| asflicense | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6292/artifact/patchprocess/patch-asflicense-problems.txt |
| modules | C:  hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core   hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient  U: hadoop-mapreduce-project/hadoop-mapreduce-client |
| Max memory used | 76MB |
| Powered by | Apache Yetus 0.2.0-SNAPSHOT   http://yetus.apache.org |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6292/console |


This message was automatically generated.

, Agree, latest patch LGTM, thanks!, Thanks [~Naganarasimha] and [~leftnoteasy] for the reviews.
Hi Wangda, could you give binding +1?, Seems like this failure is shown frequently in other jira's, [~ajisakaa] can you get it committed as [~wangda] has agreed as +1, else  [~rohithsharma] can you get this committed ?, Looking into this JIRA, had offline sync up with [~Naganarasimha]. 
Earlier to YARN-3946, {{JobStatus#getFailureInfo}} used to return empty string if job is running. And used to set valid diagnosis message when the job is failed. But now, it is change in the behavior that API returns diagnosis message if job is running. API return type and name are not in sync and change in return type. 

I think we should keep MR API return as old behavior only. Any clients like Tez using this API would get affected. Any thoughts? 

And as a side note, if fix is not in test case then JIRA summary can be updated as per real issue.

, Thanks [~rohithsharma] for sharing your thoughts, One approach i can think of is checking the status of job in the MR client side and only if its failed we can fetch and return the diagnosis message from yarn else we can return empty string. This will ensure the compatability is not broken if any client application is checking the failure message with out checking the job status.
, bq. And as a side note, if fix is not in test case then JIRA summary can be updated as per real issue.
I meat if agreed upon my thoughts then it is required to change the summary. , bq. One approach i can think of is checking the status of job in the MR client side and only if its failed we can fetch and return the diagnosis message from yarn else we can return empty string. This will ensure the compatability is not broken if any client application is checking the failure message with out checking the job status.
Sounds good. I'll update the patch. I'll update and the summary of this issue as well., Raised the priority to blocker since the issue is to keep API compatibility., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 15s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue} 0m 33s {color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 6m 41s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 1m 24s {color} | {color:green} trunk passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 1m 38s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 25s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 58s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 28s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 32s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 32s {color} | {color:green} trunk passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 39s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue} 0m 9s {color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 47s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 1m 21s {color} | {color:green} the patch passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 1m 21s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 1m 36s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 1m 36s {color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red} 0m 23s {color} | {color:red} hadoop-mapreduce-project/hadoop-mapreduce-client: patch generated 4 new + 89 unchanged - 1 fixed = 93 total (was 90) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 56s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 23s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 49s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 30s {color} | {color:green} the patch passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 35s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 1m 56s {color} | {color:green} hadoop-mapreduce-client-core in the patch passed with JDK v1.8.0_72. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 103m 53s {color} | {color:red} hadoop-mapreduce-client-jobclient in the patch failed with JDK v1.8.0_72. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 2m 20s {color} | {color:green} hadoop-mapreduce-client-core in the patch passed with JDK v1.7.0_95. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 104m 32s {color} | {color:green} hadoop-mapreduce-client-jobclient in the patch passed with JDK v1.7.0_95. {color} |
| {color:red}-1{color} | {color:red} asflicense {color} | {color:red} 0m 31s {color} | {color:red} Patch generated 15 ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 237m 58s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_72 Failed junit tests | hadoop.mapreduce.v2.TestMRJobsWithProfiler |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:0ca8df7 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12787092/MAPREDUCE-6579.05.patch |
| JIRA Issue | MAPREDUCE-6579 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux e2aeb6820af9 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / fba6e9f |
| Default Java | 1.7.0_95 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_72 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_95 |
| findbugs | v3.0.0 |
| checkstyle | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6316/artifact/patchprocess/diff-checkstyle-hadoop-mapreduce-project_hadoop-mapreduce-client.txt |
| unit | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6316/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient-jdk1.8.0_72.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6316/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient-jdk1.8.0_72.txt |
| JDK v1.7.0_95  Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6316/testReport/ |
| asflicense | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6316/artifact/patchprocess/patch-asflicense-problems.txt |
| modules | C:  hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core   hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient  U: hadoop-mapreduce-project/hadoop-mapreduce-client |
| Max memory used | 77MB |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6316/console |
| Powered by | Apache Yetus 0.2.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, The patch mostly reasonable to me. Only doubt I have is I am not pretty sure how was the getFailureInfo was behaving for success/killed/failed. Current patch returns empty string for failed/killed. Should it return empty string for success state?
[~jlowe] would you please provide your thoughts/opinion this., It's a little unfortunate that YARN-3946 started putting non-fatal messages into what is typically an app-driven diagnostic repository.  Now all applications will start getting these (probably mostly annoying) messages for every job completion, assuming that most app frameworks dump the diagnostic strings when the application completes.  It seems these new messages only make sense to report when the job is active and are mostly noise afterwards.

Back to the MapReduce side of this, IMHO we need to return diagnostics for any case where we used to return diagnostics before.  Since this is specific to MapReduce, we can check the MR AM to see all the places where we could set a diagnostic.  Most places I found only set the diagnostic when the job fails, but I did find at least one place where the diagnostic could be set yet the job could succeed.  When a task fails a job diagnostic is added, see JobImpl.TaskCompletedTransition#taskFailed.  If the user configured the job to allow some tasks to fail yet the job can succeed then we could end up with a successful job with some task failure messages in the diagnostics.

However that's a relatively rare config for a typical MapReduce job, and I'm not sure how many downstream software stacks are going to start getting upset when they see getFailureInfo start returning data on a regular basis for successful jobs.  It's rather unfortunate that the method is called getFailureInfo and will now always contain messages unrelated to any failure.  The downstream stacks should be checking the overall job status and not empty/non-empty on the getFailureInfo result to know whether the job really did fail or not, so on one hand I'm leaning towards reporting them on success as well.  But then part of me thinks it will simply be annoying to have every job dump a bunch of messages on waiting to schedule, waiting to register, etc. on every successful job, which leads me to wonder if we really want YARN-3946 to work the way it does., Thanks Jason for sharing your opinion.
bq. It seems these new messages only make sense to report when the job is active and are mostly noise afterwards.
very true, I think fix should be done at YARN so that it will not break any downstream projects.
One of the approach at YARN  I can think of is reset the RM added diagnosis messages to empty string once app is in final_saving state. Any thoughts?, Yes [~rohithsharma]. From YARN if diagnostics can be cleared out once app moves to final state, we could avoid such scenarios. Meantime we would have already collected enough reasons for apps stuck in ACCEPTED or SCHEDULED state. And in final states, I see there is no need to keep such informations as we already pass that checkpoint. , Thanks [~jlowe], [~rohithsharma], and [~sunilg] for your comments. Mostly agree with you. I have a question:

bq. From YARN if diagnostics can be cleared out once app moves to final state, we could avoid such scenarios.
What is final state? The test asserts that the diagnostics is cleared out when the app is running., 06 patch (sample) :

* Clear diagnostic information when an AM is registered.
* Wait until the AM is registered in TestNetworkedJob, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 16s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue} 0m 15s {color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 6m 34s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 5m 39s {color} | {color:green} trunk passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 6m 44s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 1m 10s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 6s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 31s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 34s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 34s {color} | {color:green} trunk passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 41s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue} 0m 14s {color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 53s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 7m 13s {color} | {color:green} the patch passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 7m 13s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 7m 4s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 7m 4s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 1m 4s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 3s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 27s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 53s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 35s {color} | {color:green} the patch passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 44s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 70m 25s {color} | {color:red} hadoop-yarn-server-resourcemanager in the patch failed with JDK v1.8.0_72. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 100m 43s {color} | {color:red} hadoop-mapreduce-client-jobclient in the patch failed with JDK v1.8.0_72. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 72m 29s {color} | {color:red} hadoop-yarn-server-resourcemanager in the patch failed with JDK v1.7.0_95. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 104m 5s {color} | {color:green} hadoop-mapreduce-client-jobclient in the patch passed with JDK v1.7.0_95. {color} |
| {color:red}-1{color} | {color:red} asflicense {color} | {color:red} 0m 32s {color} | {color:red} Patch generated 15 ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 395m 52s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_72 Failed junit tests | hadoop.yarn.server.resourcemanager.TestClientRMTokens |
|   | hadoop.yarn.server.resourcemanager.TestAMAuthorization |
|   | hadoop.mapreduce.v2.TestMRJobsWithProfiler |
| JDK v1.7.0_95 Failed junit tests | hadoop.yarn.server.resourcemanager.TestClientRMTokens |
|   | hadoop.yarn.server.resourcemanager.TestAMAuthorization |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:0ca8df7 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12787640/MAPREDUCE-6579.06.patch |
| JIRA Issue | MAPREDUCE-6579 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux 0cb463b748ff 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 2fb423e |
| Default Java | 1.7.0_95 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_72 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_95 |
| findbugs | v3.0.0 |
| unit | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6319/artifact/patchprocess/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager-jdk1.8.0_72.txt |
| unit | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6319/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient-jdk1.8.0_72.txt |
| unit | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6319/artifact/patchprocess/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager-jdk1.7.0_95.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6319/artifact/patchprocess/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager-jdk1.8.0_72.txt https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6319/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient-jdk1.8.0_72.txt https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6319/artifact/patchprocess/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-resourcemanager-jdk1.7.0_95.txt |
| JDK v1.7.0_95  Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6319/testReport/ |
| asflicense | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6319/artifact/patchprocess/patch-asflicense-problems.txt |
| modules | C:  hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager   hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient  U: . |
| Max memory used | 77MB |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6319/console |
| Powered by | Apache Yetus 0.2.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Thanks [~jlowe],[~sunilg] & [~ajisakaa], for sharing your views but we have already taken care of what you guys have suggested. YARN-3946 takes care of resetting the diagnostic message once the AM is registered already in {{RMAppAttemptImpl.AMRegisteredTransition}}
{code}
@@ -1507,6 +1515,9 @@ public void transition(RMAppAttemptImpl appAttempt,
       appAttempt.originalTrackingUrl =
           sanitizeTrackingUrl(registrationEvent.getTrackingurl());
 
+      // reset AMLaunchDiagnostics once AM Registers with RM
+      appAttempt.updateAMLaunchDiagnostics(null);
+
{code}
[~jlowe], 
As we have ensured that the Am launch Diagnostic info is reset once the AM is registered, do you see any further problems with the approach taken in YARN-3946 ? IMHO it was very useful information to get this statistics and it was apt to put it into App's Diagnostic information instead of creating a new *AM Launch diagnostic* and i have taken care such that if anywhere diagnostic is set then *RMAppImpl or RMAppAttemptImpl* will not return the *AM Launch diagnostic* but return the actual message.
Further in Map reduce, currently its assumed that the diagnostics are always *failure diagnostics* which IMO is wrong. As per *MAPREDUCE-6579.05.patch*  {{JobStatus}} is as follows
{code}
    public synchronized String getFailureInfo() {
-     return this.failureInfo;
+     if (runState == State.FAILED || runState == State.KILLED) {
+       return this.failureInfo;
+     }
+     return "";
    }
{code} 
As you were informing this might not be correct place to do this check, whether would it be better to handle in {{NotRunningJob.getJobReport}} ?

[~ajisakaa],
As per modifications in *MAPREDUCE-6579.06*, you have reset the diagnostics in *RMAppAttemptImpl.AMRegisteredTransition* just after the location i have reset. I commented that code and ran the test case, it ran successfully. So IMO the modification in the testcase is fine but RMAppAttemptImpl modifications are not required and at the same time we need to discuss whether we need to add additional check in {{NotRunningJob.getJobReport}}, Thanks [~Naganarasimha] for the detailed comment.
bq. IMO the modification in the testcase is fine but RMAppAttemptImpl modifications are not required 
Agree.
bq. whether we need to add additional check in {{NotRunningJob.getJobReport}}
I'm okay to add the additional check for compatibility, but it is not enough. I'm thinking there are some possibility to add diagnostic message (such as task failure) even if the job is running. In this case, the following check is needed.
{code}
    public synchronized String getFailureInfo() {
-     return this.failureInfo;
+     if (runState == State.FAILED || runState == State.KILLED) {
+       return this.failureInfo;
+     }
+     return "";
    }
{code}, Hi [~ajisakaa],
Well IMO i thought the focus of this jira is only to ensure that the impact for YARN-3946 is nullified, i.e. if the YARN is sending some diagnostic message which is not related to failure, IMO that should not be considered as Job's *failureInfo*.
But checked the documentation of  *JobStatus.getFailureInfo()*
{quote}
   /**
    *Gets any available info on the reason of failure of the job*
    * @return diagnostic information on why a job might have failed.
    */
   public synchronized String getFailureInfo() 
{quote}
Hence i agree that it would better be handled as per the code in  MAPREDUCE-6579.05.patch, so looks like no modifications are required if we have to set the failureInfo only when the job has failed. But just concerned about compatability.
, Apologize for the delays, I was on vacation in recent a couple of weeks.

Went through discussions,

For concerns from [~jlowe]:
bq. It's a little unfortunate that YARN-3946 started putting non-fatal messages into what is typically an app-driven diagnostic repository....
bq. It seems these new messages only make sense to report when the job is active and are mostly noise afterwards.
As [mentioned|https://issues.apache.org/jira/browse/MAPREDUCE-6579?focusedCommentId=15146537&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15146537] by [~Naganarasimha], diagnostic message added by YARN-3946 only exists before AM registers to RM, and it will be cleaned up after AM registers. So I think this will not pollute the final failure message from app.

The only issue I can see is MR assumes diagnostic message == failure message: To make changes of YARN-3946 backward compatible to MR apps, I think 05-patch is the simplest way to fix the problem: it avoid taking any field modified by YARN-3946 and keeps everything else same.

Thoughts? [~Naganarasimha Garla]/[~ajisakaa]/[~sunilg]., hi [~wangda]
If we want to just limit the scope of this jira to remove the impact of YARN-3946, then approach in 05.patch is not good enough as JobStatus is not only got from YARN when not active but can be got from the actual job(AM) too.
And as [~jlowe] was mentioning there can be some scenarios where the job is trying to set the failure info though the job is successful, so do we want to address that in this jira ?
I have uploaded a 07.patch which takes care of handling only the impact of YARN-3946, please take a look whether that is fine.
, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 13s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue} 0m 28s {color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 9m 28s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 2m 42s {color} | {color:green} trunk passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 2m 24s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 31s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 20s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 37s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 58s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 55s {color} | {color:green} trunk passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 54s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue} 0m 12s {color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 1m 5s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 2m 37s {color} | {color:green} the patch passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 2m 37s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 2m 25s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 2m 25s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 30s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 14s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 31s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 30s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 51s {color} | {color:green} the patch passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 49s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 3m 3s {color} | {color:red} hadoop-mapreduce-client-core in the patch failed with JDK v1.8.0_72. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 146m 58s {color} | {color:red} hadoop-mapreduce-client-jobclient in the patch failed with JDK v1.8.0_72. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 3m 6s {color} | {color:red} hadoop-mapreduce-client-core in the patch failed with JDK v1.7.0_95. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 145m 32s {color} | {color:red} hadoop-mapreduce-client-jobclient in the patch failed with JDK v1.7.0_95. {color} |
| {color:red}-1{color} | {color:red} asflicense {color} | {color:red} 0m 33s {color} | {color:red} Patch generated 15 ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 335m 5s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_72 Failed junit tests | hadoop.mapreduce.lib.input.TestFileInputFormat |
|   | hadoop.mapred.TestFileInputFormat |
|   | hadoop.mapreduce.v2.TestMRJobsWithProfiler |
| JDK v1.8.0_72 Timed out junit tests | org.apache.hadoop.mapreduce.lib.jobcontrol.TestMapReduceJobControl |
| JDK v1.7.0_95 Failed junit tests | hadoop.mapreduce.lib.input.TestFileInputFormat |
|   | hadoop.mapred.TestFileInputFormat |
|   | hadoop.mapred.TestLocalMRNotification |
|   | hadoop.mapred.TestClusterMapReduceTestCase |
| JDK v1.7.0_95 Timed out junit tests | org.apache.hadoop.mapred.TestMRIntermediateDataEncryption |
|   | org.apache.hadoop.mapreduce.lib.jobcontrol.TestMapReduceJobControl |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:0ca8df7 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12788234/MAPREDUCE-6579.07.patch |
| JIRA Issue | MAPREDUCE-6579 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux 247a22b2f9e7 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 453e7e0 |
| Default Java | 1.7.0_95 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_72 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_95 |
| findbugs | v3.0.0 |
| unit | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6327/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-core-jdk1.8.0_72.txt |
| unit | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6327/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient-jdk1.8.0_72.txt |
| unit | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6327/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-core-jdk1.7.0_95.txt |
| unit | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6327/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient-jdk1.7.0_95.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6327/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-core-jdk1.8.0_72.txt https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6327/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient-jdk1.8.0_72.txt https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6327/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-core-jdk1.7.0_95.txt https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6327/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient-jdk1.7.0_95.txt |
| JDK v1.7.0_95  Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6327/testReport/ |
| asflicense | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6327/artifact/patchprocess/patch-asflicense-problems.txt |
| modules | C:  hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core   hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient  U: hadoop-mapreduce-project/hadoop-mapreduce-client |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6327/console |
| Powered by | Apache Yetus 0.2.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Hi [~Naganarasimha],

I think we need to fix both:
- JobStatus.getFailureInfo
- NotRunningJob.getDiagnostics

For original MR, diagnostic message can be only set when application finishes.

Diagnostic message returned only job is failed or killed In the 07 patch, I think we should at least include finished state. I'm not sure if existing MR sets diagnostic message when job finishes successfully, but it is very possible that people will do it in the future.

Thoughts?, Thanks [~wangda] for the reply,
Modifications in {{JobStatus.getFailureInfo}} will ensure that neither AM(/Job) nor RM can return diagnostic info when the job is successful, but modifications i suggested in {{NotRunningJob.getDiagnostics}} tries to take care only of avoiding the RM diagnostics when app is not launched. 
As i said earlier its ideal to go for {{JobStatus.getFailureInfo}} modifications but not sure about the compatibility i.e. AM/Job is purposefully setting the diagnostic message even when the job is running or job has succeeded. 
Also IMO either one of the modifications is sufficient based on the scope what we are going to decide. 
thoughts? 

bq. Diagnostic message returned only job is failed or killed In the 07 patch, I think we should at least include finished state.
As per the description of *YarnApplicationState.FINISHED* is {{Application which finished successfully}}. If its successful and the diagnostic message set from YARN then thought we should avoid returning it, else we need again handle this part in   {{JobStatus.getFailureInfo}}., Oops i think i have assigned this to myself by mistake reassigning to [~ajisakaa] !, Thanks [~Naganarasimha] and [~leftnoteasy] for the comments and updating the patch.
* If we want to just limit the scope of this jira to remove the impact of YARN-3946, 07 patch looks good to me.
* If we want to expand the scope to keep compatibility with original MR, we need to fix {{JobStatus.getFailureInfo}} as well.

I'm thinking the latter should be discussed/fixed in a separate jira.
, bq. I'm thinking the latter should be discussed/fixed in a separate jira.
I am ok with this approach may be more discussions can happen in the new jira and we can close this jira with just removing the impact of YARN-3946, Hi [~Naganarasimha Garla]
is it possible to get  FAILED or KILLED in {{NotRunningJob.getDiagnostics}}?, [~Naganarasimha], [~ajisakaa].

I agree to only handle the impact of YARN-3946 in this JIRA.

However, I still think we should show diagnostic message for completed applications. Without YARN-3946, diagnostic message is added to NotRunningJob in any case. We'd better not change that behavior.

Even though, according to definition of YARN, FINISHED state means successfully. However, for individual application, it is possible that adding some information or explanation to the FINISHED state., I have not tried but based on the assumption that Before AM gets launched we can *KILL* the submitted application and may be due to containerlocalization or launch failures can make the Application status to *FAILED*., Thanks [~wangda] for the feedback,
bq. Even though, according to definition of YARN, FINISHED state means successfully. However, for individual application, it is possible that adding some information or explanation to the FINISHED state.
Agree, [~ajisakaa], can you please take care of this comment ? if required I can upload with the correction., Thanks [~Naganarasimha] and [~leftnoteasy] for the feedback. Updated the patch to show diagnostics if the app is finished successfully., +1 , LGTM for the latest patch !, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 11s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue} 0m 11s {color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 7m 27s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 1m 30s {color} | {color:green} trunk passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 1m 46s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 26s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 1s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 27s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 37s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 34s {color} | {color:green} trunk passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 42s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue} 0m 9s {color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 54s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 1m 40s {color} | {color:green} the patch passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 1m 40s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 1m 49s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 1m 49s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 23s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 57s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 25s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 2s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 32s {color} | {color:green} the patch passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 37s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 2m 4s {color} | {color:red} hadoop-mapreduce-client-core in the patch failed with JDK v1.8.0_72. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 107m 21s {color} | {color:red} hadoop-mapreduce-client-jobclient in the patch failed with JDK v1.8.0_72. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 2m 17s {color} | {color:red} hadoop-mapreduce-client-core in the patch failed with JDK v1.7.0_95. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 101m 47s {color} | {color:green} hadoop-mapreduce-client-jobclient in the patch passed with JDK v1.7.0_95. {color} |
| {color:red}-1{color} | {color:red} asflicense {color} | {color:red} 0m 36s {color} | {color:red} Patch generated 19 ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 240m 44s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_72 Failed junit tests | hadoop.mapreduce.lib.input.TestFileInputFormat |
|   | hadoop.mapred.TestFileInputFormat |
|   | hadoop.mapreduce.v2.TestMRJobsWithProfiler |
| JDK v1.7.0_95 Failed junit tests | hadoop.mapreduce.lib.input.TestFileInputFormat |
|   | hadoop.mapred.TestFileInputFormat |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:0ca8df7 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12788608/MAPREDUCE-6579.08.patch |
| JIRA Issue | MAPREDUCE-6579 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux 0a76fe55465d 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 748b6c0 |
| Default Java | 1.7.0_95 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_72 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_95 |
| findbugs | v3.0.0 |
| unit | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6331/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-core-jdk1.8.0_72.txt |
| unit | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6331/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient-jdk1.8.0_72.txt |
| unit | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6331/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-core-jdk1.7.0_95.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6331/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-core-jdk1.8.0_72.txt https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6331/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-jobclient-jdk1.8.0_72.txt https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6331/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-core-jdk1.7.0_95.txt |
| JDK v1.7.0_95  Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6331/testReport/ |
| asflicense | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6331/artifact/patchprocess/patch-asflicense-problems.txt |
| modules | C:  hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core   hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient  U: hadoop-mapreduce-project/hadoop-mapreduce-client |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6331/console |
| Powered by | Apache Yetus 0.2.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Hi [~leftnoteasy], would you review the latest patch?, Ping: [~leftnoteasy], Thanks [~Naganarasimha] for reviewing the patch!
Hi [~leftnoteasy], I need binding +1 to commit the latest patch, so I'm asking you to review it because you reviewed/committed YARN-3946, which broke this test., Hi [~ajisakaa],

Sorry for my delays. I thought I have +1-ed already.

Thanks for updates, +1 to latest patch. Will commit this shortly., Committed to trunk/branch-2/branch-2.8, thanks [~ajisakaa] and reviews from [~Naganarasimha]/[~rohithsharma]. , FAILURE: Integrated in Hadoop-trunk-Commit #9467 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/9467/])
MAPREDUCE-6579. JobStatus#getFailureInfo should not output diagnostic (wangda: rev 6529c87551e07e9da1e1b273eff4c6bad6b3e838)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/ClusterStatus.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapred/TestNetworkedJob.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/NotRunningJob.java
, Thanks a lot!]