[- Call MRWebAppUtil#getApplicationWebURLOnJHSWithScheme() instead of MRWebAppUtil#getApplicationWebURLOnJHSWithoutScheme()
- Retry method call 3 times in order to lessen chance of returning an empty string, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12704287/MAPREDUCE-6266.001.patch
  against trunk revision 8212877.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5284//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5284//console

This message is automatically generated., Add minor unit test update, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12704372/MAPREDUCE-6266.002.patch
  against trunk revision 387f271.

    {color:red}-1 @author{color}.  The patch appears to contain  @author tags which the Hadoop community has agreed to not allow in code contributions.

    {color:green}+1 tests included{color}.  The patch appears to include  new or modified test files.

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5286//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12704372/MAPREDUCE-6266.002.patch
  against trunk revision 387f271.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs:

                  org.apache.hadoop.mapreduce.v2.hs.TestJobHistoryEntities

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5287//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5287//console

This message is automatically generated., Thanks [~rchiang] for reporting an issue and working on a patch here. One question: why we add a loop here in getting URL?, The call to Job.getTrackingURL() occasionally fails quietly (due to the empty catch statement and probably network hiccups).  This will put in a limited retry to make the occurrence less frequent.  I can take out that part if it's undesirable., Can we dig out the reason why Job.getTrackingURL() occasionally fails? It could be some bug hidden there. If so, it would be great if we can fix it also in this JIRA., RE: failed unit test

Interesting, testing on my standalone machine gives me one set of results on the TestJobHistoryEntities unit test.  Testing on Jenkins seems to give a valid URL., Okay, I'll take a look and see if I can replicate the issue., I couldn't replicate UnknownHostExceptions normally.

- Remove retry loop. Add exception output to make it possible to debug later.
- Remove modifications to unit test, since it results in different results on the command line and Jenkins., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12704871/MAPREDUCE-6266.003.patch
  against trunk revision 685dbaf.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5295//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5295//console

This message is automatically generated., RE: No unit tests

Removed change since it has different values in Jenkins vs standalone, [~jdu], I don't see an obvious bug, but I changed the code to print out the exception if it occurs., The 003 patch looks good to me.  +1

[~djp], any additional comments?, Thanks Ray.  Committed to trunk and branch-2!, FAILURE: Integrated in Hadoop-trunk-Commit #7553 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7553/])
MAPREDUCE-6266. Job#getTrackingURL should consistently return a proper URL (rchiang via rkanter) (rkanter: rev c4986b2d00d327f18d0c7e2f8805b69a4e07a19b)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedJob.java
* hadoop-mapreduce-project/CHANGES.txt
, Thanks for the review and the commit!, FAILURE: Integrated in Hadoop-Yarn-trunk #893 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/893/])
MAPREDUCE-6266. Job#getTrackingURL should consistently return a proper URL (rchiang via rkanter) (rkanter: rev c4986b2d00d327f18d0c7e2f8805b69a4e07a19b)
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedJob.java
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #159 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/159/])
MAPREDUCE-6266. Job#getTrackingURL should consistently return a proper URL (rchiang via rkanter) (rkanter: rev c4986b2d00d327f18d0c7e2f8805b69a4e07a19b)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedJob.java
* hadoop-mapreduce-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2091 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2091/])
MAPREDUCE-6266. Job#getTrackingURL should consistently return a proper URL (rchiang via rkanter) (rkanter: rev c4986b2d00d327f18d0c7e2f8805b69a4e07a19b)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedJob.java
* hadoop-mapreduce-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #150 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/150/])
MAPREDUCE-6266. Job#getTrackingURL should consistently return a proper URL (rchiang via rkanter) (rkanter: rev c4986b2d00d327f18d0c7e2f8805b69a4e07a19b)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedJob.java
* hadoop-mapreduce-project/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #160 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/160/])
MAPREDUCE-6266. Job#getTrackingURL should consistently return a proper URL (rchiang via rkanter) (rkanter: rev c4986b2d00d327f18d0c7e2f8805b69a4e07a19b)
* hadoop-mapreduce-project/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedJob.java
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #2109 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2109/])
MAPREDUCE-6266. Job#getTrackingURL should consistently return a proper URL (rchiang via rkanter) (rkanter: rev c4986b2d00d327f18d0c7e2f8805b69a4e07a19b)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedJob.java
* hadoop-mapreduce-project/CHANGES.txt
]