[I attach a patch file. TestJobHistoryParsing class is available to the test case. And I don't create the test case newly., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12592450/MAPREDUCE-5392.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3853//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3853//console

This message is automatically generated., {code}
+    Configuration config = new Configuration();
+    String hsHostPath = config.get("mapreduce.jobhistory.webapp.address", "localhost") +
+        "/jobhistory/logs";
{code}

This config.get() always returns "localhost", because the instance of Configuration class is created with no user-defined configurations. In fully distributed mode, it may not works well.

{code}
+    String hostport = attempt.getHostname() + ":" + Integer.toString(attempt.getPort());
+    String containerId = attempt.getContainerId().toString();
+    Configuration config = new Configuration();
+    String hsHostPath = config.get("mapreduce.jobhistory.webapp.address", "localhost") +
+        "/jobhistory/logs";
+    return HttpConfig.getSchemePrefix() + hsHostPath + "/" + hostport + "/" + containerId + 
+        "/" + attempt.getAttemptId().toString() + "/" + username;
{code}
IMHO, we should move these code into HostUtil.java and create a method like getTaskLogUrl() with arguments you need. And we should also add tests as follows against HostUtil.java to confirm not having the backwards:
1. a node name is given by "tracker_"
2. a node name is NOT given by "tracker_"
TestJobHistoryParsing.java seems to be good place to add tests. What do you think?, Thank you for comment.

{quote}
This config.get() always returns "localhost", because the instance of Configuration class is created with no user-defined configurations. In fully distributed mode, it may not works well.
{quote}

Configuration() can reads the configuration files in the classpath. So, if "mapreduce.jobhistory.webapp.address" defines it with the configuration file (e.g. yarn-site.xml) in the classpath, it does not have any problem.

About HostUtil.java I agree of your thought. And I fixed it to handle HostUtil.java with or without "tracker_".
I attach a new patch file., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12592651/MAPREDUCE-5392.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3856//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3856//console

This message is automatically generated., I examined why a test in "TestJobHistoryParsing" succeeded. Then, node name "localhost" was output in JobHistory file for tests.

{quote}
 \{"type":"MAP_ATTEMPT_STARTED","event":\{"org.apache.hadoop.mapreduce.jobhistory.TaskAttemptStarted":\{"taskid":"task_0_0000_m_000000","taskType":"MAP","attemptId":"attempt_0_0000_m_000000_0","startTime":1374095073945,"trackerName":"localhost","httpPort":8042,"shufflePort":-1,"containerId":"container_0_0000_01_000000","locality":"OFF_SWITCH","avataar":"VIRGIN"\}\}\}
{quote}

On the other hand, the URL of the task log was displayed with "t".

{quote}
MAP task list for job_0_0000
TaskId          StartTime       FinishTime      HostName        Error   TaskLogs
====================================================
attempt_0_0000_m_000002_0       17-7-2013 14:23:52      17-7-2013 14:23:52 (0sec)       localhost       http://t:8042/tasklog?attemptid=attempt_0_0000_m_000002_0
attempt_0_0000_m_000001_0       17-7-2013 14:23:52      17-7-2013 14:23:52 (0sec)       localhost       http://t:8042/tasklog?attemptid=attempt_0_0000_m_000001_0
attempt_0_0000_m_000000_0       17-7-2013 14:23:52      17-7-2013 14:23:52 (0sec)       localhost       http://t:8042/tasklog?attemptid=attempt_0_0000_m_000000_0
{quote}

This is because "localhos" was deleted among "localhost" in HostUtil.convertTrackerNameToHostName(). In other words, it may be said that a test cord was insufficient.
I will fix it about TestJobHistoryParsing.java ., I attach a renew patch file. I include the additional test code in TestJobHistoryParsing in a patch file.

"mapreduce.jobhistory.webapp.address" is defined as "0.0.0.0:19888" in mapred-default.xml. If that value is used, it replaces it with "localhost:19888".
, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12592890/MAPREDUCE-5392.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3861//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3861//console

This message is automatically generated., Thanks for your work, Shinichi.

bq. Configuration() can reads the configuration files in the classpath. So, if "mapreduce.jobhistory.webapp.address" defines it with the configuration file (e.g. yarn-site.xml) in the classpath, it does not have any problem.

I overlooked that. You're correct.

bq. "mapreduce.jobhistory.webapp.address" is defined as "0.0.0.0:19888" in mapred-default.xml. If that value is used, it replaces it with "localhost:19888".

Why? If we change the default value of "mapreduce.jobhistory.webapp.address"(JHAdminConfig.MR_HISOTRY_WEBAPP_ADDRESS), we should do or discuss this in another JIRA ticket. If I overlook some points, please let me know.

bq. +    if (trackerHostName.contains("tracker_")) {

This should be replaced with trackerHostName.startWith("tracker_") to avoid unexpected matches. One alternative is to remove this line, because HostUtil is only used by HistoryViewer. I thought HostUtil is used widely, therefore I needed to check backward compatibility. This can be unnecessary worry., Thank you for comment.

{quote}
If we change the default value of "mapreduce.jobhistory.webapp.address"(JHAdminConfig.MR_HISOTRY_WEBAPP_ADDRESS), we should do or discuss this in another JIRA ticket. If I overlook some points, please let me know.
{quote}

You are right. And we discuss about the default value of "mapreduce.jobhistory.webapp.address" by an another JIRA ticket.

{quote}
This should be replaced with trackerHostName.startWith("tracker_") to avoid unexpected matches.
{quote}

Sure. It should not use "trackerHostName.startWith(...)" in this method. 
I attach a renew patch file which reflected it., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12593087/MAPREDUCE-5392.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3867//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/3867//console

This message is automatically generated., I built with the patch and confirmed "mapred job -history all" worked well.
One comment, now the output with no argument is
{code}
$ mapred job -history
Usage: CLI [-history <jobHistoryFile>]
{code}
It should be fixed as follows
{code}
Usage: CLI [-history [all] <jobHistoryFile>]
{code}
except this, +1 for your patch., The essential problem is that the method of constructing the link to the log file is out-of-date. The method seems to work. Here're some detailed comments on the patch:

1. convertTrackerNameToHostName seems no longer to be not necessary, because the trackerName is supposed to be the node hostname, right?
{code}
       HostUtil.convertTrackerNameToHostName(
         attempt.getTrackerName());
{code}

2. It seems that the original getTaskLogUrl is not use as well.
{code}
  public static String getTaskLogUrl(String taskTrackerHostName,
    String httpPort, String taskAttemptID) {
{code}

3. JHAdminConfig has already defined MR_HISTORY_WEBAPP_ADDRESS
{code}
+    String hsAddress =
+        config.get("mapreduce.jobhistory.webapp.address", "localhost:19888");
{code}, Thank you for some comments. I attach a revised patch.
When I use JHAdminConfig, a package-dependent problem occurs in Maven . Therefore I set a similar property., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12610383/MAPREDUCE-5392.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs:

                  org.apache.hadoop.mapreduce.v2.hs.TestJobHistoryServer

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4139//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4139//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12610591/MAPREDUCE-5392.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs:

                  org.apache.hadoop.mapreduce.v2.hs.TestJobHistoryServer

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4148//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4148//console

This message is automatically generated., This test passed my local environment and this patch does not change JobHistoryServer., bq. When I use JHAdminConfig, a package-dependent problem occurs in Maven

Gosh, it may result in cyclic dependency. However, it seems not good to have two constants that actually point to the same property. How about moving JHAdminConfig to core project? Not sure about it.

BTW, the test case failure seems to be unrelated. See
{code}
java.net.BindException: Address already in use; For more details see:  http://wiki.apache.org/hadoop/BindException
{code}
Looks like some conflicts in the test environment., Thank you for your comment.
I think that JHAdminConfig can move to hadoop-mapreduce-client-core. And, I attach a revised patch again., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12610914/MAPREDUCE-5392.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:red}-1 javac{color:red}.  The patch appears to cause the build to fail.

Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4153//console

This message is automatically generated., Jenkins occurred OutOfMemoryError. I checked Jenkins log and OOM occurred at native-maven-plugin phase.
To make sure, I attach a same patch and Jenkins test., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12611258/MAPREDUCE-5392.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs:

                  org.apache.hadoop.mapreduce.v2.hs.TestJobHistoryParsing

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4161//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4161//console

This message is automatically generated., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12611639/MAPREDUCE-5392.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4165//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4165//console

This message is automatically generated., [~zjshen] Thank you for your comment. It does not have any problem to move JHAdminConfig class to core-project.
, I want to use this option, so I rebased the patch for the latest trunk.
[~sinchii] and [~zjshen], would you please review the new patch?, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12629464/MAPREDUCE-5392.2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4357//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4357//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12629464/MAPREDUCE-5392.2.patch
  against trunk revision 14e2639.

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4874//console

This message is automatically generated., Rebased for the latest trunk., Raise the priority of this issue since "all" option doesn't work at all., v3 patch doesn't move the project of JHAdminConfig. Attaching a new patch to fix it., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12669746/MAPREDUCE-5392.3.patch
  against trunk revision ee21b13.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:red}-1 javac{color:red}.  The patch appears to cause the build to fail.

Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4892//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12669749/MAPREDUCE-5392.4.patch
  against trunk revision ee21b13.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:red}-1 javac{color:red}.  The patch appears to cause the build to fail.

Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4893//console

This message is automatically generated., Fixed javac error., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12669757/MAPREDUCE-5392.5.patch
  against trunk revision a3d9934.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4894//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4894//console

This message is automatically generated., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:red}-1{color} | patch |   0m  0s | The patch command could not apply the patch during dryrun. |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12669757/MAPREDUCE-5392.5.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / f1a152c |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5573/console |


This message was automatically generated., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:red}-1{color} | patch |   0m  0s | The patch command could not apply the patch during dryrun. |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12669757/MAPREDUCE-5392.5.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / f1a152c |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5576/console |


This message was automatically generated., This patch needs rebasing against trunk.  It looks relatively easy to clean up., Moving bugs out of previously closed releases into the next minor release 2.8.0., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 0s {color} | {color:blue} Docker mode activated. {color} |
| {color:red}-1{color} | {color:red} patch {color} | {color:red} 0m 10s {color} | {color:red} MAPREDUCE-5392 does not apply to trunk. Rebase required? Wrong Branch? See https://wiki.apache.org/hadoop/HowToContribute for help. {color} |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12669757/MAPREDUCE-5392.5.patch |
| JIRA Issue | MAPREDUCE-5392 |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/6933/console |
| Powered by | Apache Yetus 0.3.0   http://yetus.apache.org |


This message was automatically generated.

, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  0s{color} | {color:blue} Docker mode activated. {color} |
| {color:red}-1{color} | {color:red} patch {color} | {color:red}  0m  4s{color} | {color:red} MAPREDUCE-5392 does not apply to trunk. Rebase required? Wrong Branch? See https://wiki.apache.org/hadoop/HowToContribute for help. {color} |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Issue | MAPREDUCE-5392 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12669757/MAPREDUCE-5392.5.patch |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/7129/console |
| Powered by | Apache Yetus 0.5.0   http://yetus.apache.org |


This message was automatically generated.

]