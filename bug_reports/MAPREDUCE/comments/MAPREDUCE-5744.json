[We suggest to change:

{code}
diff --git a/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java b/hadoop-ma
index 176945a..a6e898e 100644
--- a/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java
+++ b/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java
@@ -1112,7 +1112,7 @@ void preemptReduce(int toPreempt) {
         public int compare(TaskAttemptId o1, TaskAttemptId o2) {
           float p = getJob().getTask(o1.getTaskId()).getAttempt(o1).getProgress() -
               getJob().getTask(o2.getTaskId()).getAttempt(o2).getProgress();
-          return p >= 0 ? 1 : -1;
+          return (int)p;
         }
       });
{code}, {code}
-          return p >= 0 ? 1 : -1;
+          return (int)p;
{code}
If p were between 0 and 1, (int) p would be 0? , Making this a blocker for 2.3.0, Agreed. Using Float.compare() would be a good idea., Good catch, Karthik. Casting to int does not work. Float.compare is a straight forward change., Resolving and re-opening to see if "Submit patch" shows up. , +1, pending Jenkins. , {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12627473/MAPREDUCE-5744.v02.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4348//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4348//console

This message is automatically generated., Thanks Sangjin for reporting this and Gera for the quick turnaround.

Just committed this to trunk, branch-2 and branch-2.3., SUCCESS: Integrated in Hadoop-trunk-Commit #5124 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/5124/])
MAPREDUCE-5744. Job hangs because RMContainerAllocator.preemptReduce() violates the comparator contract (Gera Shegalov via kasha) (kasha: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1565478)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java
, Forgot to report: I ran a pseudo distributed cluster with the patch. Ran pi and sleep jobs. While running the sleep job, killed the only mapper etc. Haven't noticed any regressions. , Thanks Karthink for committing!, SUCCESS: Integrated in Hadoop-Yarn-trunk #474 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/474/])
MAPREDUCE-5744. Job hangs because RMContainerAllocator.preemptReduce() violates the comparator contract (Gera Shegalov via kasha) (kasha: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1565478)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1666 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1666/])
MAPREDUCE-5744. Job hangs because RMContainerAllocator.preemptReduce() violates the comparator contract (Gera Shegalov via kasha) (kasha: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1565478)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #1691 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1691/])
MAPREDUCE-5744. Job hangs because RMContainerAllocator.preemptReduce() violates the comparator contract (Gera Shegalov via kasha) (kasha: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1565478)
* /hadoop/common/trunk/hadoop-mapreduce-project/CHANGES.txt
* /hadoop/common/trunk/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java
, Thanks Sangjin, Gera, and Karthik!  I committed this to branch-0.23 as well.]