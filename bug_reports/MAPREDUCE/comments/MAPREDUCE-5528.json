[I have reproduced this issue., I can confirm that this patch fixes the issue.

@[~chu11], thanks for submitting the fix!, Can we merge this?, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12604700/MAPREDUCE-5528.patch
  against trunk revision 3411732.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

      {color:red}-1 javac{color}.  The applied patch generated 1158 javac compiler warnings (more than the trunk's current 1155 warnings).

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-examples.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5306//testReport/
Javac warnings: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5306//artifact/patchprocess/diffJavacWarnings.txt
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5306//console

This message is automatically generated., [~ehiggs] [~chu11] thank you for taking this issue. Could you update following line to use job.getLocalCacheFiles() instead of DistributedCache.getLocalCacheFiles since the method is deprecated?
{code}
+        Path[] localPaths = DistributedCache.getLocalCacheFiles(conf);
{code}, Sure, I'll update the patch and retest just to make sure everything is fine and dandy., Since I wrote my original patch, DistributedCache has been deprecated in favor of using the job Context.  Unfortunately, in TeraSort, there is no mapper or reducer.  All of the sorting is handled via the partitioner.  As far as I can tell, the Job context can't be accessed in the partitioner.  B/c of that, this really can't be handled through the patch I had before, assuming we don't want to use deprecated code.  Using the basic idea from [~ehiggs] in MAPREDUCE-5050 wouldn't have worked b/c the JobContext is again needed in newer versions of FileOutputFormat.

I was trying to think of a clean way to do this but nothing came to mind each of the ways I looked.  I might just not see something that others would.

Open to suggestions.



]