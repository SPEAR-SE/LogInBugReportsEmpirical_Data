[I think that would be great, but unfortunately I believe that you need more to be able to communicate with Hadoop.  Hadoop does not use pure protocol buffers to communicate.  To be able to get protocol buffers up and running quickly we kind of punted on some of the security and error handling, and left that part of the code in place.  So what happens is that we use the original Hadoop RPC, and then serialize/deserialize protocol buffers into and out of it., Arun,

Would it be something reasonable to modify file a JIRA to move to using pure protocol buffers or should we just close this one as works as designed?  I know it is a huge task, but it is the only way that we are reasonably going to have non-java clients communicate with Hadoop., As 0.23.x is going to maintenance mode, I have re-targeted this jira for an feature accepting active line. The issue of allowing 3rd party tools is especially compelling, but as Bobby mentioned, very difficult at this point., Included *.proto files into build tar ball. Directory hierarchy is as follows:

{code}
hadoop-3.0.0-SNAPSHOT$ tree proto/
proto/
|-- hadoop-common
|   |-- GenericRefreshProtocol.proto
|   |-- GetUserMappingsProtocol.proto
|   |-- HAServiceProtocol.proto
|   |-- IpcConnectionContext.proto
|   |-- ProtobufRpcEngine.proto
|   |-- ProtocolInfo.proto
|   |-- RefreshAuthorizationPolicyProtocol.proto
|   |-- RefreshCallQueueProtocol.proto
|   |-- RefreshUserMappingsProtocol.proto
|   |-- RpcHeader.proto
|   |-- Security.proto
|   `-- ZKFCProtocol.proto
|-- hadoop-hdfs
|   |-- ClientDatanodeProtocol.proto
|   |-- ClientNamenodeProtocol.proto
|   |-- DatanodeProtocol.proto
|   |-- HAZKInfo.proto
|   |-- InterDatanodeProtocol.proto
|   |-- JournalProtocol.proto
|   |-- NamenodeProtocol.proto
|   |-- QJournalProtocol.proto
|   |-- acl.proto
|   |-- datatransfer.proto
|   |-- fsimage.proto
|   |-- hdfs.proto
|   `-- xattr.proto
|-- hadoop-mapreduce-client
|   |-- MRClientProtocol.proto
|   |-- mr_protos.proto
|   `-- mr_service_protos.proto
|-- hadoop-yarn-api
|   |-- application_history_client.proto
|   |-- applicationclient_protocol.proto
|   |-- applicationmaster_protocol.proto
|   |-- containermanagement_protocol.proto
|   |-- yarn_protos.proto
|   `-- yarn_service_protos.proto
`-- hadoop-yarn-server-common
{code}, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12650714/MAPREDUCE-4065.1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-dist.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4665//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/4665//console

This message is automatically generated., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:red}-1{color} | patch |   0m  0s | The patch command could not apply the patch during dryrun. |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12650714/MAPREDUCE-4065.1.patch |
| Optional Tests | javadoc javac unit |
| git revision | trunk / f1a152c |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5554/console |


This message was automatically generated., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:red}-1{color} | patch |   0m  0s | The patch command could not apply the patch during dryrun. |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12650714/MAPREDUCE-4065.1.patch |
| Optional Tests | javadoc javac unit |
| git revision | trunk / f1a152c |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5565/console |


This message was automatically generated., I updated the patch, putting files under same maven sub-project to same sub-directory, excluding files under */src/test/proto/.

Though I updated this, I think that the source tarball containing *.proto is enough now... Anyway, I attached the patch. I ask for committer's decision to just close this as "won't fix" or not., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  14m 59s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:red}-1{color} | tests included |   0m  0s | The patch doesn't appear to include any new or modified tests.  Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. |
| {color:green}+1{color} | javac |   7m 37s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 59s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 41s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 32s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | dist tests |   0m 12s | Tests passed in hadoop-dist. |
| | |  35m 25s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12731557/MAPREDUCE-4065.002.patch |
| Optional Tests | javadoc javac unit |
| git revision | trunk / f7a74d2 |
| hadoop-dist test log | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5683/artifact/patchprocess/testrun_hadoop-dist.txt |
| Test Results | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5683/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf904.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/5683/console |


This message was automatically generated., If we're going to do this, it should be done with a find command rather than cp'ing individual directories.  Otherwise this will need to get updated every time a new subsystem pops up., I'm closing this as "won't fix" because I think the release source tarball containing *.proto is enough. Feel free to reopen this, [~rcastain] and [~ozawa].]